
;; Function virtual void MatrixArbiter::UpdateState() (_ZN13MatrixArbiter11UpdateStateEv, funcdef_no=1369, decl_uid=28409, cgraph_uid=381, symbol_order=382)


Pass statistics:
----------------

virtual void MatrixArbiter::UpdateState() (struct MatrixArbiterD.27650 * const thisD.29261)
{
  intD.9 iD.29263;
  intD.9 pretmp_1;
  intD.9 prephitmp_2;
  intD.9 _7;
  long unsigned intD.14 _10;
  long unsigned intD.14 _12;
  intD.9 & _13;
  intD.9 _15;
  long unsigned intD.14 _16;
  long unsigned intD.14 _17;
  struct vectorD.27653 * _20;
  intD.9 * _21;
  intD.9 * _22;
  long unsigned intD.14 _23;
  struct vectorD.27653 & _24;
  long unsigned intD.14 _25;
  intD.9 & _26;
  long unsigned intD.14 _27;
  struct vectorD.27653 & _28;
  intD.9 _30;
  intD.9 prephitmp_38;
  intD.9 pretmp_39;
  intD.9 prephitmp_40;

;;   basic block 2, loop depth 0, count 0, freq 1113, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  _7 = this_6(D)->D.28444._selectedD.27586;
  if (_7 >= 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [80.9%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [19.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1113, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [19.1%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_5(D)(2), .MEM_5(D)(4), .MEM_3(8)>
  # VUSE <.MEM_37>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [80.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG iD.29263 => 0
  # VUSE <.MEM_5(D)>
  _30 = this_6(D)->D.28444._sizeD.27585;
  if (_30 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # i_31 = PHI <0(5), i_19(9)>
  # .MEM_32 = PHI <.MEM_5(D)(5), .MEM_3(9)>
  # prephitmp_2 = PHI <_7(5), pretmp_1(9)>
  # prephitmp_38 = PHI <_30(5), prephitmp_40(9)>
  # DEBUG iD.29263 => i_31
  if (prephitmp_2 != i_31)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 6552, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _10 = (long unsigned intD.14) i_31;
  # RANGE [0, 18446744073709551615]
  _12 = (long unsigned intD.14) prephitmp_2;
  # DEBUG D#10ptD.0 => &this_6(D)->_matrixD.28400
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _20 = MEM[(struct vectorD.27653 * *)this_6(D) + 144B];
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG __nD.32378 => _12
  # DEBUG thisD.32379 => D#8ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _27 = _12 * 24;
  # PT = nonlocal escaped 
  _28 = _20 + _27;
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _21 = MEM[(intD.9 * *)_28];
  # DEBUG __nD.32374 => _10
  # DEBUG thisD.32375 => D#9ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = _10 * 4;
  # PT = nonlocal escaped 
  _26 = _21 + _25;
  # .MEM_14 = VDEF <.MEM_32>
  *_26 = 0;
  # VUSE <.MEM_14>
  _15 = this_6(D)->D.28444._selectedD.27586;
  # RANGE ~[2147483648, 18446744071562067967]
  _16 = (long unsigned intD.14) _15;
  # DEBUG D#11ptD.0 => &this_6(D)->_matrixD.28400
  # DEBUG D#8ptD.0 => D#11ptD.0
  # DEBUG __nD.32370 => _10
  # DEBUG thisD.32371 => D#8ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _23 = _10 * 24;
  # PT = nonlocal escaped 
  _24 = _20 + _23;
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  _22 = MEM[(intD.9 * *)_24];
  # DEBUG __nD.32366 => _16
  # DEBUG thisD.32367 => D#9ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _17 = _16 * 4;
  # PT = nonlocal escaped 
  _13 = _22 + _17;
  # .MEM_18 = VDEF <.MEM_14>
  *_13 = 1;
  # VUSE <.MEM_18>
  pretmp_39 = this_6(D)->D.28444._sizeD.27585;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [28.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_32(6), .MEM_18(7)>
  # prephitmp_40 = PHI <prephitmp_38(6), pretmp_39(7)>
  i_19 = i_31 + 1;
  # DEBUG iD.29263 => i_19
  # DEBUG iD.29263 => i_19
  if (i_19 >= prephitmp_40)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 8, next block 1, flags: (NEW)
;;    pred:       8 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3>
  pretmp_1 = this_6(D)->D.28444._selectedD.27586;
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



Updating SSA:
Registering new PHI nodes in block #6
Registering new PHI nodes in block #7
Registering new PHI nodes in block #8
Registering new PHI nodes in block #9
Updating SSA information for statement pretmp_1 = this_6(D)->D.28444._selected;
Registering new PHI nodes in block #10

DFA Statistics for virtual void MatrixArbiter::UpdateState()

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             41        328b
DEF operands                             20        160b
VUSE operands                            11         88b
VDEF operands                             2         16b
PHI nodes                                 8        832b
PHI arguments                            16        768b
---------------------------------------------------------
Total memory used by DFA/SSA data                 2192b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 3)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_36 -> { .MEM_3 }
Incremental SSA update started at block: 6
Number of blocks in CFG: 11
Number of blocks to update: 4 ( 36%)
Affected blocks: 6 8 9 10


Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for this_6(D)->D.28444._size
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 960
	Access function 1: 0
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(int * *)_28]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_28]
Creating dr for MEM[(int * *)_28]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_28]
Creating dr for *_26
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_26
Creating dr for *_26
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_26
Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for *_13
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_13
Creating dr for *_13
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_13
Creating dr for this_6(D)->D.28444._size
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 960
	Access function 1: 0
Creating dr for this_6(D)->D.28444._size
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 960
	Access function 1: 0
Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(int * *)_28]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_28]
Creating dr for MEM[(int * *)_28]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_28]
Creating dr for *_26
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_26
Creating dr for *_26
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_26
Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for *_13
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_13
Creating dr for *_13
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_13
Creating dr for this_6(D)->D.28444._size
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 960
	Access function 1: 0
Creating dr for this_6(D)->D.28444._size
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 960
	Access function 1: 0
Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for this_6(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 992
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:30)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:12, LOOPS:1, CONDITIONS:4, STMTS:43)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # VUSE <.MEM_5(D)>
    _7 = this_6(D)->D.28444._selected;
    if (_7 >= 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_4 bb_10 }, succs = {bb_11 })
  {
    <bb 3>:
    # .MEM_37 = PHI <.MEM_5(D)(2), .MEM_5(D)(4), .MEM_36(10)>

  }
  bb_11 (preds = {bb_3 }, succs = {bb_1 })
  {
    <bb 11>:
    # VUSE <.MEM_37>
    return;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_3 bb_5 })
  {
    <bb 4>:
    # DEBUG i => 0
    # VUSE <.MEM_5(D)>
    _30 = this_6(D)->D.28444._size;
    if (_30 <= 0)
      goto <bb 3>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:

  }
  bb_10 (preds = {bb_8 }, succs = {bb_3 })
  {
    <bb 10>:
    # .MEM_36 = PHI <.MEM_3(8)>
    goto <bb 3>;

  }
  loop_1 (header = 6, latch = 9, niter = , upper_bound = 2147483646)
  {
    bb_6 (preds = {bb_5 bb_9 }, succs = {bb_7 bb_8 })
    {
      <bb 6>:
      # i_31 = PHI <0(5), i_19(9)>
      # .MEM_32 = PHI <.MEM_5(D)(5), .MEM_3(9)>
      # prephitmp_2 = PHI <_7(5), pretmp_1(9)>
      # prephitmp_38 = PHI <_30(5), prephitmp_40(9)>
      # DEBUG i => i_31
      if (prephitmp_2 != i_31)
        goto <bb 7>;
      else
        goto <bb 8>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_8 })
    {
      <bb 7>:
      _10 = (long unsigned int) i_31;
      _12 = (long unsigned int) prephitmp_2;
      # DEBUG D#10 => &this_6(D)->_matrix
      # VUSE <.MEM_32>
      _20 = MEM[(struct vector * *)this_6(D) + 144B];
      # DEBUG D#8 => D#10
      # DEBUG __n => _12
      # DEBUG this => D#8
      _27 = _12 * 24;
      _28 = _20 + _27;
      # VUSE <.MEM_32>
      _21 = MEM[(int * *)_28];
      # DEBUG __n => _10
      # DEBUG this => D#9
      _25 = _10 * 4;
      _26 = _21 + _25;
      # .MEM_14 = VDEF <.MEM_32>
      *_26 = 0;
      # VUSE <.MEM_14>
      _15 = this_6(D)->D.28444._selected;
      _16 = (long unsigned int) _15;
      # DEBUG D#11 => &this_6(D)->_matrix
      # DEBUG D#8 => D#11
      # DEBUG __n => _10
      # DEBUG this => D#8
      _23 = _10 * 24;
      _24 = _20 + _23;
      # VUSE <.MEM_14>
      _22 = MEM[(int * *)_24];
      # DEBUG __n => _16
      # DEBUG this => D#9
      _17 = _16 * 4;
      _13 = _22 + _17;
      # .MEM_18 = VDEF <.MEM_14>
      *_13 = 1;
      # VUSE <.MEM_18>
      pretmp_39 = this_6(D)->D.28444._size;

    }
    bb_8 (preds = {bb_6 bb_7 }, succs = {bb_10 bb_9 })
    {
      <bb 8>:
      # .MEM_3 = PHI <.MEM_32(6), .MEM_18(7)>
      # prephitmp_40 = PHI <prephitmp_38(6), pretmp_39(7)>
      i_19 = i_31 + 1;
      # DEBUG i => i_19
      # DEBUG i => i_19
      if (i_19 >= prephitmp_40)
        goto <bb 10>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_6 })
    {
      <bb 9>:
      # VUSE <.MEM_3>
      pretmp_1 = this_6(D)->D.28444._selected;
      goto <bb 6>;

    }
  }
}

Pass statistics:
----------------

virtual void MatrixArbiter::UpdateState() (struct MatrixArbiterD.27650 * const thisD.29261)
{
  intD.9 iD.29263;
  intD.9 pretmp_1;
  intD.9 prephitmp_2;
  intD.9 _7;
  long unsigned intD.14 _10;
  long unsigned intD.14 _12;
  intD.9 & _13;
  intD.9 _15;
  long unsigned intD.14 _16;
  long unsigned intD.14 _17;
  struct vectorD.27653 * _20;
  intD.9 * _21;
  intD.9 * _22;
  long unsigned intD.14 _23;
  struct vectorD.27653 & _24;
  long unsigned intD.14 _25;
  intD.9 & _26;
  long unsigned intD.14 _27;
  struct vectorD.27653 & _28;
  intD.9 _30;
  intD.9 prephitmp_38;
  intD.9 pretmp_39;
  intD.9 prephitmp_40;

;;   basic block 2, loop depth 0, count 0, freq 1113, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  _7 = this_6(D)->D.28444._selectedD.27586;
  if (_7 >= 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [80.9%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [19.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1113, maybe hot
;;    prev block 2, next block 11, flags: (NEW, REACHABLE)
;;    pred:       2 [19.1%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU)
  # .MEM_37 = PHI <.MEM_5(D)(2), .MEM_5(D)(4), .MEM_36(10)>
;;    succ:       11 [100.0%]  (FALLTHRU)

;;   basic block 11, loop depth 0, count 0, freq 1113, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_37>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 5, flags: (NEW)
;;    pred:       2 [80.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG iD.29263 => 0
  # VUSE <.MEM_5(D)>
  _30 = this_6(D)->D.28444._sizeD.27585;
  if (_30 <= 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # i_31 = PHI <0(5), i_19(9)>
  # .MEM_32 = PHI <.MEM_5(D)(5), .MEM_3(9)>
  # prephitmp_2 = PHI <_7(5), pretmp_1(9)>
  # prephitmp_38 = PHI <_30(5), prephitmp_40(9)>
  # DEBUG iD.29263 => i_31
  if (prephitmp_2 != i_31)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [72.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [28.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 6552, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [72.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _10 = (long unsigned intD.14) i_31;
  # RANGE [0, 18446744073709551615]
  _12 = (long unsigned intD.14) prephitmp_2;
  # DEBUG D#10ptD.0 => &this_6(D)->_matrixD.28400
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _20 = MEM[(struct vectorD.27653 * *)this_6(D) + 144B];
  # DEBUG D#8ptD.0 => D#10ptD.0
  # DEBUG __nD.32378 => _12
  # DEBUG thisD.32379 => D#8ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _27 = _12 * 24;
  # PT = nonlocal escaped 
  _28 = _20 + _27;
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _21 = MEM[(intD.9 * *)_28];
  # DEBUG __nD.32374 => _10
  # DEBUG thisD.32375 => D#9ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = _10 * 4;
  # PT = nonlocal escaped 
  _26 = _21 + _25;
  # .MEM_14 = VDEF <.MEM_32>
  *_26 = 0;
  # VUSE <.MEM_14>
  _15 = this_6(D)->D.28444._selectedD.27586;
  # RANGE ~[2147483648, 18446744071562067967]
  _16 = (long unsigned intD.14) _15;
  # DEBUG D#11ptD.0 => &this_6(D)->_matrixD.28400
  # DEBUG D#8ptD.0 => D#11ptD.0
  # DEBUG __nD.32370 => _10
  # DEBUG thisD.32371 => D#8ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _23 = _10 * 24;
  # PT = nonlocal escaped 
  _24 = _20 + _23;
  # VUSE <.MEM_14>
  # PT = nonlocal escaped 
  _22 = MEM[(intD.9 * *)_24];
  # DEBUG __nD.32366 => _16
  # DEBUG thisD.32367 => D#9ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _17 = _16 * 4;
  # PT = nonlocal escaped 
  _13 = _22 + _17;
  # .MEM_18 = VDEF <.MEM_14>
  *_13 = 1;
  # VUSE <.MEM_18>
  pretmp_39 = this_6(D)->D.28444._sizeD.27585;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 7, next block 10, flags: (NEW, REACHABLE)
;;    pred:       6 [28.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_32(6), .MEM_18(7)>
  # prephitmp_40 = PHI <prephitmp_38(6), pretmp_39(7)>
  i_19 = i_31 + 1;
  # DEBUG iD.29263 => i_19
  # DEBUG iD.29263 => i_19
  if (i_19 >= prephitmp_40)
    goto <bb 10>;
  else
    goto <bb 9>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_36 = PHI <.MEM_3(8)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU)

;;   basic block 9, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 10, next block 1, flags: (NEW)
;;    pred:       8 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3>
  pretmp_1 = this_6(D)->D.28444._selectedD.27586;
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

}



;; Function virtual int MatrixArbiter::Arbitrate(int*, int*) (_ZN13MatrixArbiter9ArbitrateEPiS0_, funcdef_no=1371, decl_uid=28413, cgraph_uid=383, symbol_order=384)


Pass statistics:
----------------

virtual int MatrixArbiter::Arbitrate(int*, int*) (struct MatrixArbiterD.27650 * const thisD.29275, intD.9 * idD.29272, intD.9 * priD.29273)
{
  intD.9 iD.29279;
  boolD.2757 grantD.29278;
  intD.9 inputD.29277;
  intD.9 _2;
  intD.9 _12;
  intD.9 _13;
  long unsigned intD.14 _17;
  boolD.2757 retval.30_18;
  long unsigned intD.14 _19;
  boolD.2757 _20;
  struct N7Arbiter7entry_tED.26837 & _21;
  intD.9 _22;
  long unsigned intD.14 _23;
  intD.9 _24;
  struct N7Arbiter7entry_tED.26837 & _25;
  intD.9 _26;
  long unsigned intD.14 _27;
  struct ArbiterD.26830 * _31;
  intD.9 _35;
  struct vectorD.27653 * _36;
  intD.9 * _37;
  long unsigned intD.14 _39;
  intD.9 & _40;
  long unsigned intD.14 _41;
  struct vectorD.27653 & _42;
  struct N7Arbiter7entry_tED.26837 * pretmp_45;

;;   basic block 2, loop depth 0, count 0, freq 151, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_10(D)>
  _12 = this_11(D)->D.28444._num_reqsD.27589;
  if (_12 <= 1)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 29, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_10(D)>
  _13 = this_11(D)->_last_reqD.28401;
  # .MEM_14 = VDEF <.MEM_10(D)>
  this_11(D)->D.28444._selectedD.27586 = _13;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 122, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_15 = VDEF <.MEM_10(D)>
  this_11(D)->D.28444._selectedD.27586 = -1;
  # DEBUG inputD.29277 => 0
  # DEBUG inputD.29277 => 0
  # VUSE <.MEM_15>
  _2 = this_11(D)->D.28444._sizeD.27585;
  if (_2 <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 82, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_63 = PHI <.MEM_15(4), .MEM_43(19)>
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_15>
  # PT = nonlocal escaped 
  pretmp_45 = MEM[(struct N7Arbiter7entry_tED.26837 * *)this_11(D) + 96B];
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 1760, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # input_49 = PHI <0(6), input_30(20)>
  # .MEM_43 = PHI <.MEM_15(6), .MEM_43(20)>
  # DEBUG inputD.29277 => input_49
  # RANGE [0, 18446744073709551615]
  _17 = (long unsigned intD.14) input_49;
  # DEBUG D#16ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#16ptD.0
  # DEBUG __nD.32429 => _17
  # DEBUG thisD.32430 => D#15ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _27 = _17 * 12;
  # PT = nonlocal escaped 
  _25 = pretmp_45 + _27;
  # VUSE <.MEM_43>
  retval.30_18 = _25->validD.26834;
  if (retval.30_18 != 0)
    goto <bb 8>;
  else
    goto <bb 19>;
;;    succ:       8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG iD.29279 => 0
  if (_2 <= 0)
    goto <bb 17>;
  else
    goto <bb 9>;
;;    succ:       17 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 840, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  _39 = _17 * 4;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 9550, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_7 = PHI <0(9), i_28(16)>
  # DEBUG iD.29279 => i_7
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) i_7;
  # DEBUG D#17ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#17ptD.0
  # DEBUG __nD.32433 => _19
  # DEBUG thisD.32434 => D#15ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _23 = _19 * 12;
  # PT = nonlocal escaped 
  _21 = pretmp_45 + _23;
  # VUSE <.MEM_43>
  _20 = _21->validD.26834;
  if (_20 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 2, count 0, freq 4775, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#18ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#18ptD.0
  # DEBUG __nD.32441 => _19
  # DEBUG thisD.32442 => D#15ptD.0
  # VUSE <.MEM_43>
  _22 = _21->priD.26836;
  # DEBUG D#19ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#19ptD.0
  # DEBUG __nD.32437 => _17
  # DEBUG thisD.32438 => D#15ptD.0
  # VUSE <.MEM_43>
  _24 = _25->priD.26836;
  if (_22 == _24)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 2, count 0, freq 4345, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &this_11(D)->_matrixD.28400
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _36 = MEM[(struct vectorD.27653 * *)this_11(D) + 144B];
  # DEBUG D#8ptD.0 => D#20ptD.0
  # DEBUG __nD.32449 => _19
  # DEBUG thisD.32450 => D#8ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _41 = _19 * 24;
  # PT = nonlocal escaped 
  _42 = _36 + _41;
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)_42];
  # DEBUG __nD.32445 => _17
  # DEBUG thisD.32446 => D#9ptD.0
  # PT = nonlocal escaped 
  _40 = _37 + _39;
  # VUSE <.MEM_43>
  _26 = *_40;
  if (_26 != 0)
    goto <bb 19>;
  else
    goto <bb 14>;
;;    succ:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 2, count 0, freq 429, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#21ptD.0
  # DEBUG __nD.32457 => _19
  # DEBUG thisD.32458 => D#15ptD.0
  # DEBUG D#22ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#22ptD.0
  # DEBUG __nD.32453 => _17
  # DEBUG thisD.32454 => D#15ptD.0
  if (_22 > _24)
    goto <bb 19>;
  else
    goto <bb 14>;
;;    succ:       19 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 2, count 0, freq 9120, maybe hot
;;   Invalid sum of incoming frequencies 6948, should be 9120
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 (FALSE_VALUE,EXECUTABLE)
  i_28 = i_7 + 1;
  # DEBUG iD.29279 => i_28
  # DEBUG iD.29279 => i_28
  if (_2 <= i_28)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 410, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # input_58 = PHI <input_49(14)>
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 2, count 0, freq 8710, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       14 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       8 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # input_59 = PHI <input_49(8)>
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 40, maybe hot
;;   Invalid sum of incoming frequencies 450, should be 40
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # input_57 = PHI <input_58(15), input_59(17)>
  # DEBUG grantD.29278 => NULL
  # .MEM_29 = VDEF <.MEM_43>
  this_11(D)->D.28444._selectedD.27586 = input_57;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 1720, maybe hot
;;   Invalid sum of incoming frequencies 3482, should be 1720
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  input_30 = input_49 + 1;
  # DEBUG inputD.29277 => input_30
  # DEBUG inputD.29277 => input_30
  if (_2 <= input_30)
    goto <bb 5>;
  else
    goto <bb 20>;
;;    succ:       5 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 1643, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 151, maybe hot
;;    prev block 20, next block 1, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_9 = PHI <.MEM_14(3), .MEM_63(5), .MEM_29(18)>
  # PT = nonlocal 
  _31 = &this_11(D)->D.28444;
  # .MEM_34 = VDEF <.MEM_9>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _35 = _ZN7Arbiter9ArbitrateEPiS0_D.27606 (_31, id_32(D), pri_33(D));
  # VUSE <.MEM_34>
  return _35;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_11(D)->D.28444._num_reqs
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: *this_11(D)
	Access function 0: 1088
	Access function 1: 0
Creating dr for this_11(D)->_last_req
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: *this_11(D)
	Access function 0: 1344
Creating dr for this_11(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_11(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for this_11(D)->D.28444._selected
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_11(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for this_11(D)->D.28444._size
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: *this_11(D)
	Access function 0: 960
	Access function 1: 0
Creating dr for MEM[(struct entry_t * *)this_11(D) + 96B]
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: MEM[(struct entry_t * *)this_11(D) + 96B]
Creating dr for _25->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_1
Creating dr for _25->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_1
Creating dr for _25->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_1
Creating dr for _25->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_1
Creating dr for _21->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_2
Creating dr for _21->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_2
Creating dr for _21->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_2
Creating dr for _21->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_2
Creating dr for _21->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_2
Creating dr for _21->valid
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 0
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 0
	Access function 1: {0B, +, 12}_2
Creating dr for _21->pri
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 8
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 64
	Access function 1: {0B, +, 12}_2
Creating dr for _21->pri
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 8
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 64
	Access function 1: {0B, +, 12}_2
Creating dr for _21->pri
analyze_innermost: success.
	base_address: pretmp_45
	offset from base address: 0
	constant offset from base address: 8
	step: 12
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 64
	Access function 1: {0B, +, 12}_2
Creating dr for _25->pri
analyze_innermost: success.
	base_address: pretmp_45 + (long unsigned int) input_49 * 12
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *_25
	Access function 0: 64
Creating dr for _25->pri
analyze_innermost: success.
	base_address: pretmp_45 + (long unsigned int) input_49 * 12
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 64
	Access function 1: {0B, +, 12}_1
Creating dr for _25->pri
analyze_innermost: success.
	base_address: pretmp_45 + (long unsigned int) input_49 * 12
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *pretmp_45
	Access function 0: 64
	Access function 1: {0B, +, 12}_1
Creating dr for MEM[(struct vector * *)this_11(D) + 144B]
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_11(D) + 144B]
Creating dr for MEM[(struct vector * *)this_11(D) + 144B]
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_11(D) + 144B]
Creating dr for MEM[(struct vector * *)this_11(D) + 144B]
analyze_innermost: success.
	base_address: this_11(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_11(D) + 144B]
Creating dr for MEM[(int * *)_42]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_42]
Creating dr for MEM[(int * *)_42]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_42]
Creating dr for MEM[(int * *)_42]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_42]
Creating dr for *_40
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_40
Creating dr for *_40
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_40
Creating dr for *_40
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_40

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:23, LOOPS:2, CONDITIONS:10, STMTS:79)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # VUSE <.MEM_10(D)>
    _12 = this_11(D)->D.28444._num_reqs;
    if (_12 <= 1)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_21 })
  {
    <bb 3>:
    # VUSE <.MEM_10(D)>
    _13 = this_11(D)->_last_req;
    # .MEM_14 = VDEF <.MEM_10(D)>
    this_11(D)->D.28444._selected = _13;
    goto <bb 21>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # .MEM_15 = VDEF <.MEM_10(D)>
    this_11(D)->D.28444._selected = -1;
    # DEBUG input => 0
    # DEBUG input => 0
    # VUSE <.MEM_15>
    _2 = this_11(D)->D.28444._size;
    if (_2 <= 0)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 bb_19 }, succs = {bb_22 })
  {
    <bb 5>:
    # .MEM_63 = PHI <.MEM_15(4), .MEM_43(19)>

  }
  bb_22 (preds = {bb_5 }, succs = {bb_21 })
  {
    <bb 22>:
    goto <bb 21>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 })
  {
    <bb 6>:
    # VUSE <.MEM_15>
    pretmp_45 = MEM[(struct entry_t * *)this_11(D) + 96B];

  }
  bb_15 (preds = {bb_14 }, succs = {bb_18 })
  {
    <bb 15>:
    # input_58 = PHI <input_49(14)>
    goto <bb 18>;

  }
  bb_17 (preds = {bb_8 }, succs = {bb_18 })
  {
    <bb 17>:
    # input_59 = PHI <input_49(8)>

  }
  bb_18 (preds = {bb_15 bb_17 }, succs = {bb_21 })
  {
    <bb 18>:
    # input_57 = PHI <input_58(15), input_59(17)>
    # DEBUG grant => NULL
    # .MEM_29 = VDEF <.MEM_43>
    this_11(D)->D.28444._selected = input_57;
    goto <bb 21>;

  }
  bb_21 (preds = {bb_3 bb_22 bb_18 }, succs = {bb_1 })
  {
    <bb 21>:
    # .MEM_9 = PHI <.MEM_14(3), .MEM_63(22), .MEM_29(18)>
    _31 = &this_11(D)->D.28444;
    # .MEM_34 = VDEF <.MEM_9>
    _35 = Arbiter::Arbitrate (_31, id_32(D), pri_33(D));
    # VUSE <.MEM_34>
    return _35;

  }
  loop_1 (header = 7, latch = 20, niter = , upper_bound = 2147483646)
  {
    bb_7 (preds = {bb_6 bb_20 }, succs = {bb_8 bb_19 })
    {
      <bb 7>:
      # input_49 = PHI <0(6), input_30(20)>
      # .MEM_43 = PHI <.MEM_15(6), .MEM_43(20)>
      # DEBUG input => input_49
      _17 = (long unsigned int) input_49;
      # DEBUG D#16 => &this_11(D)->D.28444._request
      # DEBUG D#15 => D#16
      # DEBUG __n => _17
      # DEBUG this => D#15
      _27 = _17 * 12;
      _25 = pretmp_45 + _27;
      # VUSE <.MEM_43>
      retval.30_18 = _25->valid;
      if (retval.30_18 != 0)
        goto <bb 8>;
      else
        goto <bb 19>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_17 bb_9 })
    {
      <bb 8>:
      # DEBUG i => 0
      if (_2 <= 0)
        goto <bb 17>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_10 })
    {
      <bb 9>:
      _39 = _17 * 4;

    }
    bb_19 (preds = {bb_12 bb_7 bb_13 }, succs = {bb_5 bb_20 })
    {
      <bb 19>:
      input_30 = input_49 + 1;
      # DEBUG input => input_30
      # DEBUG input => input_30
      if (_2 <= input_30)
        goto <bb 5>;
      else
        goto <bb 20>;

    }
    bb_20 (preds = {bb_19 }, succs = {bb_7 })
    {
      <bb 20>:
      goto <bb 7>;

    }
    loop_2 (header = 10, latch = 16, niter = , upper_bound = 2147483646)
    {
      bb_10 (preds = {bb_9 bb_16 }, succs = {bb_11 bb_14 })
      {
        <bb 10>:
        # i_7 = PHI <0(9), i_28(16)>
        # DEBUG i => i_7
        _19 = (long unsigned int) i_7;
        # DEBUG D#17 => &this_11(D)->D.28444._request
        # DEBUG D#15 => D#17
        # DEBUG __n => _19
        # DEBUG this => D#15
        _23 = _19 * 12;
        _21 = pretmp_45 + _23;
        # VUSE <.MEM_43>
        _20 = _21->valid;
        if (_20 != 0)
          goto <bb 11>;
        else
          goto <bb 14>;

      }
      bb_11 (preds = {bb_10 }, succs = {bb_12 bb_13 })
      {
        <bb 11>:
        # DEBUG D#18 => &this_11(D)->D.28444._request
        # DEBUG D#15 => D#18
        # DEBUG __n => _19
        # DEBUG this => D#15
        # VUSE <.MEM_43>
        _22 = _21->pri;
        # DEBUG D#19 => &this_11(D)->D.28444._request
        # DEBUG D#15 => D#19
        # DEBUG __n => _17
        # DEBUG this => D#15
        # VUSE <.MEM_43>
        _24 = _25->pri;
        if (_22 == _24)
          goto <bb 12>;
        else
          goto <bb 13>;

      }
      bb_12 (preds = {bb_11 }, succs = {bb_19 bb_14 })
      {
        <bb 12>:
        # DEBUG D#20 => &this_11(D)->_matrix
        # VUSE <.MEM_43>
        _36 = MEM[(struct vector * *)this_11(D) + 144B];
        # DEBUG D#8 => D#20
        # DEBUG __n => _19
        # DEBUG this => D#8
        _41 = _19 * 24;
        _42 = _36 + _41;
        # VUSE <.MEM_43>
        _37 = MEM[(int * *)_42];
        # DEBUG __n => _17
        # DEBUG this => D#9
        _40 = _37 + _39;
        # VUSE <.MEM_43>
        _26 = *_40;
        if (_26 != 0)
          goto <bb 19>;
        else
          goto <bb 14>;

      }
      bb_13 (preds = {bb_11 }, succs = {bb_19 bb_14 })
      {
        <bb 13>:
        # DEBUG D#21 => &this_11(D)->D.28444._request
        # DEBUG D#15 => D#21
        # DEBUG __n => _19
        # DEBUG this => D#15
        # DEBUG D#22 => &this_11(D)->D.28444._request
        # DEBUG D#15 => D#22
        # DEBUG __n => _17
        # DEBUG this => D#15
        if (_22 > _24)
          goto <bb 19>;
        else
          goto <bb 14>;

      }
      bb_14 (preds = {bb_12 bb_10 bb_13 }, succs = {bb_15 bb_16 })
      {
        <bb 14>:
        i_28 = i_7 + 1;
        # DEBUG i => i_28
        # DEBUG i => i_28
        if (_2 <= i_28)
          goto <bb 15>;
        else
          goto <bb 16>;

      }
      bb_16 (preds = {bb_14 }, succs = {bb_10 })
      {
        <bb 16>:
        goto <bb 10>;

      }
    }
  }
}

Pass statistics:
----------------

virtual int MatrixArbiter::Arbitrate(int*, int*) (struct MatrixArbiterD.27650 * const thisD.29275, intD.9 * idD.29272, intD.9 * priD.29273)
{
  intD.9 iD.29279;
  boolD.2757 grantD.29278;
  intD.9 inputD.29277;
  intD.9 _2;
  intD.9 _12;
  intD.9 _13;
  long unsigned intD.14 _17;
  boolD.2757 retval.30_18;
  long unsigned intD.14 _19;
  boolD.2757 _20;
  struct N7Arbiter7entry_tED.26837 & _21;
  intD.9 _22;
  long unsigned intD.14 _23;
  intD.9 _24;
  struct N7Arbiter7entry_tED.26837 & _25;
  intD.9 _26;
  long unsigned intD.14 _27;
  struct ArbiterD.26830 * _31;
  intD.9 _35;
  struct vectorD.27653 * _36;
  intD.9 * _37;
  long unsigned intD.14 _39;
  intD.9 & _40;
  long unsigned intD.14 _41;
  struct vectorD.27653 & _42;
  struct N7Arbiter7entry_tED.26837 * pretmp_45;

;;   basic block 2, loop depth 0, count 0, freq 151, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_10(D)>
  _12 = this_11(D)->D.28444._num_reqsD.27589;
  if (_12 <= 1)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 29, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_10(D)>
  _13 = this_11(D)->_last_reqD.28401;
  # .MEM_14 = VDEF <.MEM_10(D)>
  this_11(D)->D.28444._selectedD.27586 = _13;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 122, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_15 = VDEF <.MEM_10(D)>
  this_11(D)->D.28444._selectedD.27586 = -1;
  # DEBUG inputD.29277 => 0
  # DEBUG inputD.29277 => 0
  # VUSE <.MEM_15>
  _2 = this_11(D)->D.28444._sizeD.27585;
  if (_2 <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 82, maybe hot
;;    prev block 4, next block 22, flags: (NEW)
;;    pred:       4 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_63 = PHI <.MEM_15(4), .MEM_43(19)>
;;    succ:       22 [100.0%]  (FALLTHRU)

;;   basic block 22, loop depth 0, count 0, freq 82, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 117, maybe hot
;;    prev block 22, next block 7, flags: (NEW)
;;    pred:       4 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_15>
  # PT = nonlocal escaped 
  pretmp_45 = MEM[(struct N7Arbiter7entry_tED.26837 * *)this_11(D) + 96B];
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 1760, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # input_49 = PHI <0(6), input_30(20)>
  # .MEM_43 = PHI <.MEM_15(6), .MEM_43(20)>
  # DEBUG inputD.29277 => input_49
  # RANGE [0, 18446744073709551615]
  _17 = (long unsigned intD.14) input_49;
  # DEBUG D#16ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#16ptD.0
  # DEBUG __nD.32429 => _17
  # DEBUG thisD.32430 => D#15ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _27 = _17 * 12;
  # PT = nonlocal escaped 
  _25 = pretmp_45 + _27;
  # VUSE <.MEM_43>
  retval.30_18 = _25->validD.26834;
  if (retval.30_18 != 0)
    goto <bb 8>;
  else
    goto <bb 19>;
;;    succ:       8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 880, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG iD.29279 => 0
  if (_2 <= 0)
    goto <bb 17>;
  else
    goto <bb 9>;
;;    succ:       17 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 840, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  _39 = _17 * 4;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 9550, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_7 = PHI <0(9), i_28(16)>
  # DEBUG iD.29279 => i_7
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) i_7;
  # DEBUG D#17ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#17ptD.0
  # DEBUG __nD.32433 => _19
  # DEBUG thisD.32434 => D#15ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _23 = _19 * 12;
  # PT = nonlocal escaped 
  _21 = pretmp_45 + _23;
  # VUSE <.MEM_43>
  _20 = _21->validD.26834;
  if (_20 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 2, count 0, freq 4775, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#18ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#18ptD.0
  # DEBUG __nD.32441 => _19
  # DEBUG thisD.32442 => D#15ptD.0
  # VUSE <.MEM_43>
  _22 = _21->priD.26836;
  # DEBUG D#19ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#19ptD.0
  # DEBUG __nD.32437 => _17
  # DEBUG thisD.32438 => D#15ptD.0
  # VUSE <.MEM_43>
  _24 = _25->priD.26836;
  if (_22 == _24)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 2, count 0, freq 4345, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &this_11(D)->_matrixD.28400
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _36 = MEM[(struct vectorD.27653 * *)this_11(D) + 144B];
  # DEBUG D#8ptD.0 => D#20ptD.0
  # DEBUG __nD.32449 => _19
  # DEBUG thisD.32450 => D#8ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _41 = _19 * 24;
  # PT = nonlocal escaped 
  _42 = _36 + _41;
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)_42];
  # DEBUG __nD.32445 => _17
  # DEBUG thisD.32446 => D#9ptD.0
  # PT = nonlocal escaped 
  _40 = _37 + _39;
  # VUSE <.MEM_43>
  _26 = *_40;
  if (_26 != 0)
    goto <bb 19>;
  else
    goto <bb 14>;
;;    succ:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 2, count 0, freq 429, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#21ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#21ptD.0
  # DEBUG __nD.32457 => _19
  # DEBUG thisD.32458 => D#15ptD.0
  # DEBUG D#22ptD.0 => &this_11(D)->D.28444._requestD.27584
  # DEBUG D#15ptD.0 => D#22ptD.0
  # DEBUG __nD.32453 => _17
  # DEBUG thisD.32454 => D#15ptD.0
  if (_22 > _24)
    goto <bb 19>;
  else
    goto <bb 14>;
;;    succ:       19 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 2, count 0, freq 9120, maybe hot
;;   Invalid sum of incoming frequencies 6948, should be 9120
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 (FALSE_VALUE,EXECUTABLE)
  i_28 = i_7 + 1;
  # DEBUG iD.29279 => i_28
  # DEBUG iD.29279 => i_28
  if (_2 <= i_28)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 410, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # input_58 = PHI <input_49(14)>
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 2, count 0, freq 8710, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       14 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       8 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # input_59 = PHI <input_49(8)>
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 40, maybe hot
;;   Invalid sum of incoming frequencies 450, should be 40
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # input_57 = PHI <input_58(15), input_59(17)>
  # DEBUG grantD.29278 => NULL
  # .MEM_29 = VDEF <.MEM_43>
  this_11(D)->D.28444._selectedD.27586 = input_57;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 1720, maybe hot
;;   Invalid sum of incoming frequencies 3482, should be 1720
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  input_30 = input_49 + 1;
  # DEBUG inputD.29277 => input_30
  # DEBUG inputD.29277 => input_30
  if (_2 <= input_30)
    goto <bb 5>;
  else
    goto <bb 20>;
;;    succ:       5 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 1643, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 151, maybe hot
;;    prev block 20, next block 1, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_9 = PHI <.MEM_14(3), .MEM_63(22), .MEM_29(18)>
  # PT = nonlocal 
  _31 = &this_11(D)->D.28444;
  # .MEM_34 = VDEF <.MEM_9>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _35 = _ZN7Arbiter9ArbitrateEPiS0_D.27606 (_31, id_32(D), pri_33(D));
  # VUSE <.MEM_34>
  return _35;
;;    succ:       EXIT [100.0%] 

}



;; Function MatrixArbiter::~MatrixArbiter() (_ZN13MatrixArbiterD2Ev, funcdef_no=1656, decl_uid=28431, cgraph_uid=668, symbol_order=670)


Pass statistics:
----------------

MatrixArbiter::~MatrixArbiter() (struct MatrixArbiterD.27650 * const thisD.28432)
{
  struct vectorD.27653 * __firstD.35764;
  struct ModuleD.26017 * * _5;
  struct vectorD.27653 * _7;
  struct N7Arbiter7entry_tED.26837 * _9;
  intD.9 * _13;
  charD.10 * const _16;
  const charD.10 * _17;
  charD.10 * const _18;
  const charD.10 * _19;
  struct vectorD.27653 * pretmp_28;
  struct vectorD.27653 * prephitmp_29;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.28444.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV13MatrixArbiterD.28448 + 16B];
  # DEBUG D#295ptD.0 => &this_2(D)->_matrixD.28400
  # DEBUG thisD.35761 => D#295ptD.0
  # DEBUG D#163ptD.0 => &D#295ptD.0->D.28398
  # DEBUG thisD.33343 => D#163ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _7 = MEM[(struct vectorD.27655 *)this_2(D) + 144B].D.28398._M_implD.27889._M_finishD.27892;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __first_11 = MEM[(struct vectorD.27655 *)this_2(D) + 144B].D.28398._M_implD.27889._M_startD.27891;
  # DEBUG __firstD.35764 => __first_11
  # DEBUG __lastD.35763 => _7
  # DEBUG __firstD.35769 => __first_11
  if (_7 == __first_11)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_10 = PHI <__first_11(3), __first_14(7)>
  # .MEM_73 = PHI <.MEM_3(3), .MEM_32(7)>
  # DEBUG __firstD.35769 => __first_10
  # DEBUG __rD.33173 => __first_10
  # DEBUG __pointerD.35770 => NULL
  # DEBUG thisD.35771 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.35772 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_73>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Vector_baseD.28492 *)__first_10]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _13
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35775 => D#156ptD.0
  # DEBUG __pD.35774 => _13
  # DEBUG __nD.35773 => D#149ptD.0
  if (_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35779 => _13
  # DEBUG __aD.35777 => D#145ptD.0
  # DEBUG __nD.35778 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35782 => _13
  # DEBUG thisD.35780 => D#141ptD.0
  # DEBUG D.35781 => D#142ptD.0
  # .MEM_27 = VDEF <.MEM_73>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_13);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_21 = PHI <.MEM_73(4), .MEM_27(5)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35783 => D#148ptD.0
  # DEBUG thisD.35784 => D#148ptD.0
  # DEBUG thisD.35785 => D#148ptD.0
  # .MEM_32 = VDEF <.MEM_21>
  MEM[(struct  &)__first_10] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_14 = __first_10 + 24;
  # DEBUG __firstD.35769 => __first_14
  # DEBUG __firstD.35769 => __first_14
  if (_7 == __first_14)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_32>
  pretmp_28 = MEM[(struct _Vector_baseD.27656 *)this_2(D) + 144B]._M_implD.27889._M_startD.27891;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_32(8), .MEM_3(2)>
  # PT = nonlocal escaped 
  # prephitmp_29 = PHI <pretmp_28(8), __first_11(2)>
  # DEBUG D#164ptD.0 => &D#295ptD.0->D.28398
  # DEBUG thisD.35786 => D#164ptD.0
  # DEBUG D#138ptD.0 => D#164ptD.0->_M_implD.27889._M_end_of_storageD.27893
  # DEBUG D#137ptD.0 => (long intD.12) D#138ptD.0
  # DEBUG D#296ptD.0 => MEM[(struct _Vector_baseD.27656 *)this_2(D) + 144B]._M_implD.27889._M_startD.27891
  # DEBUG D#136ptD.0 => (long intD.12) D#296ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0 - D#136ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0 /[ex] 24
  # DEBUG D#131ptD.0 => D#164ptD.0
  # DEBUG D#132ptD.0 => (long unsigned intD.14) D#134ptD.0
  # DEBUG __pD.35789 => D#296ptD.0
  # DEBUG thisD.35787 => D#131ptD.0
  # DEBUG __nD.35788 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  if (prephitmp_29 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#128ptD.0 => &D#129ptD.0->_M_implD.27889
  # DEBUG D#126ptD.0 => D#128ptD.0
  # DEBUG D#127ptD.0 => D#130ptD.0
  # DEBUG __pD.35793 => D#296ptD.0
  # DEBUG __aD.35791 => D#126ptD.0
  # DEBUG __nD.35792 => D#127ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG __pD.35796 => D#296ptD.0
  # DEBUG thisD.35794 => D#122ptD.0
  # DEBUG D.35795 => D#123ptD.0
  # .MEM_33 = VDEF <.MEM_72>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_29);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_22 = PHI <.MEM_72(9), .MEM_33(10)>
  # DEBUG D#133ptD.0 => &D#164ptD.0->_M_implD.27889
  # DEBUG thisD.35797 => D#133ptD.0
  # DEBUG thisD.35798 => D#133ptD.0
  # DEBUG thisD.35799 => D#133ptD.0
  # .MEM_38 = VDEF <.MEM_22>
  MEM[(struct  &)this_2(D) + 144] ={v} {CLOBBER};
  # DEBUG D#294ptD.0 => &this_2(D)->D.28444
  # DEBUG thisD.35745 => D#294ptD.0
  # .MEM_39 = VDEF <.MEM_38>
  MEM[(struct ArbiterD.26830 *)this_2(D)].D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV7ArbiterD.27647 + 16B];
  # DEBUG D#119ptD.0 => &D#294ptD.0->_requestD.27584
  # DEBUG thisD.35746 => D#119ptD.0
  # DEBUG D#115ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.32975 => D#115ptD.0
  # DEBUG D#118ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_finishD.27076
  # DEBUG D#117ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_startD.27075
  # DEBUG D#48ptD.0 => D#117ptD.0
  # DEBUG D#49ptD.0 => D#118ptD.0
  # DEBUG __firstD.32974 => D#48ptD.0
  # DEBUG __lastD.32973 => D#49ptD.0
  # DEBUG D.32972 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG __firstD.32608 => D#44ptD.0
  # DEBUG __lastD.32607 => D#45ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D.32597 => D#40ptD.0
  # DEBUG D.32596 => D#41ptD.0
  # DEBUG D#116ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.35747 => D#116ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0->_M_implD.27073._M_end_of_storageD.27077
  # DEBUG D#113ptD.0 => (long intD.12) D#114ptD.0
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  _9 = MEM[(struct _Vector_baseD.26840 *)this_2(D) + 96B]._M_implD.27073._M_startD.27075;
  # DEBUG D#112ptD.0 => (long intD.12) _9
  # DEBUG D#111ptD.0 => D#113ptD.0 - D#112ptD.0
  # DEBUG D#110ptD.0 => D#111ptD.0 /[ex] 12
  # DEBUG D#107ptD.0 => D#116ptD.0
  # DEBUG D#108ptD.0 => (long unsigned intD.14) D#110ptD.0
  # DEBUG __pD.35750 => _9
  # DEBUG thisD.35748 => D#107ptD.0
  # DEBUG __nD.35749 => D#108ptD.0
  # DEBUG D#106ptD.0 => D#108ptD.0
  # DEBUG D#105ptD.0 => D#107ptD.0
  if (_9 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#104ptD.0 => &D#105ptD.0->_M_implD.27073
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#103ptD.0 => D#106ptD.0
  # DEBUG __pD.35754 => _9
  # DEBUG __aD.35752 => D#102ptD.0
  # DEBUG __nD.35753 => D#103ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0
  # DEBUG D#99ptD.0 => D#101ptD.0
  # DEBUG __pD.35757 => _9
  # DEBUG thisD.35755 => D#98ptD.0
  # DEBUG D.35756 => D#99ptD.0
  # .MEM_40 = VDEF <.MEM_39>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_9);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_39(11), .MEM_40(12)>
  # DEBUG D#109ptD.0 => &D#116ptD.0->_M_implD.27073
  # DEBUG thisD.35758 => D#109ptD.0
  # DEBUG thisD.35759 => D#109ptD.0
  # DEBUG thisD.35760 => D#109ptD.0
  # .MEM_45 = VDEF <.MEM_23>
  MEM[(struct  &)this_2(D) + 96] ={v} {CLOBBER};
  # DEBUG D#293ptD.0 => &MEM[(struct ArbiterD.26830 *)this_2(D)].D.27639
  # DEBUG thisD.35800 => D#293ptD.0
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(struct ModuleD.26017 *)this_2(D)]._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV6ModuleD.26817 + 16B];
  # DEBUG D#97ptD.0 => &D#293ptD.0->_childrenD.26767
  # DEBUG thisD.35801 => D#97ptD.0
  # DEBUG D#91ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.32848 => D#91ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_finishD.26259
  # DEBUG D#93ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_startD.26258
  # DEBUG D#37ptD.0 => D#93ptD.0
  # DEBUG D#38ptD.0 => D#94ptD.0
  # DEBUG __firstD.32847 => D#37ptD.0
  # DEBUG __lastD.32846 => D#38ptD.0
  # DEBUG D.32845 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG __firstD.32570 => D#33ptD.0
  # DEBUG __lastD.32569 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.32559 => D#29ptD.0
  # DEBUG D.32558 => D#30ptD.0
  # DEBUG D#92ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.35802 => D#92ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0->_M_implD.26256._M_end_of_storageD.26260
  # DEBUG D#89ptD.0 => (long intD.12) D#90ptD.0
  # VUSE <.MEM_46>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.26023 *)this_2(D) + 72B]._M_implD.26256._M_startD.26258;
  # DEBUG D#88ptD.0 => (long intD.12) _5
  # DEBUG D#87ptD.0 => D#89ptD.0 - D#88ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0 /[ex] 8
  # DEBUG D#83ptD.0 => D#92ptD.0
  # DEBUG D#84ptD.0 => (long unsigned intD.14) D#86ptD.0
  # DEBUG __pD.35805 => _5
  # DEBUG thisD.35803 => D#83ptD.0
  # DEBUG __nD.35804 => D#84ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  if (_5 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#80ptD.0 => &D#81ptD.0->_M_implD.26256
  # DEBUG D#78ptD.0 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#82ptD.0
  # DEBUG __pD.35809 => _5
  # DEBUG __aD.35807 => D#78ptD.0
  # DEBUG __nD.35808 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0
  # DEBUG D#76ptD.0 => D#78ptD.0
  # DEBUG D#74ptD.0 => D#76ptD.0
  # DEBUG D#75ptD.0 => D#77ptD.0
  # DEBUG __pD.35812 => _5
  # DEBUG thisD.35810 => D#74ptD.0
  # DEBUG D.35811 => D#75ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_46(13), .MEM_47(14)>
  # DEBUG D#85ptD.0 => &D#92ptD.0->_M_implD.26256
  # DEBUG thisD.35813 => D#85ptD.0
  # DEBUG thisD.35814 => D#85ptD.0
  # DEBUG thisD.35815 => D#85ptD.0
  # .MEM_52 = VDEF <.MEM_24>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#96ptD.0 => &D#293ptD.0->_fullnameD.26020
  # DEBUG thisD.35816 => D#96ptD.0
  # DEBUG thisD.35817 => D#96ptD.0
  # DEBUG thisD.35826 => D#96ptD.0
  # VUSE <.MEM_52>
  # PT = nonlocal escaped 
  _16 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.35827 => D#96ptD.0
  # PT = nonlocal 
  _17 = &MEM[(const struct basic_stringD.8425 *)this_2(D) + 40B].D.13836._M_local_bufD.13838;
  if (_16 != _17)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#96ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.35819 => D#96ptD.0
  # DEBUG __sizeD.35818 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#96ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.35822 => _16
  # DEBUG __aD.35820 => D#67ptD.0
  # DEBUG __nD.35821 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.35825 => _16
  # DEBUG thisD.35823 => D#63ptD.0
  # DEBUG D.35824 => D#64ptD.0
  # .MEM_53 = VDEF <.MEM_52>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_52(15), .MEM_53(16)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG thisD.35828 => D#73ptD.0
  # DEBUG thisD.35829 => D#73ptD.0
  # DEBUG thisD.35830 => D#73ptD.0
  # .MEM_57 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#95ptD.0 => &D#293ptD.0->_nameD.26019
  # DEBUG thisD.35831 => D#95ptD.0
  # DEBUG thisD.35832 => D#95ptD.0
  # DEBUG thisD.35841 => D#95ptD.0
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _18 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.35842 => D#95ptD.0
  # PT = nonlocal 
  _19 = &MEM[(const struct basic_stringD.8425 *)this_2(D) + 8B].D.13836._M_local_bufD.13838;
  if (_18 != _19)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#95ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.35834 => D#95ptD.0
  # DEBUG __sizeD.35833 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#95ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.35837 => _18
  # DEBUG __aD.35835 => D#67ptD.0
  # DEBUG __nD.35836 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.35840 => _18
  # DEBUG thisD.35838 => D#63ptD.0
  # DEBUG D.35839 => D#64ptD.0
  # .MEM_58 = VDEF <.MEM_57>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_18);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_57(17), .MEM_58(18)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG thisD.35843 => D#73ptD.0
  # DEBUG thisD.35844 => D#73ptD.0
  # DEBUG thisD.35845 => D#73ptD.0
  # .MEM_8 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_8>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.28444.D.27639._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 144B].D.28398._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 144B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 144B].D.28398._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 144B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Vector_base *)__first_10]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_10]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_10]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_10]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_11 + 24, + , 24](no_overflow) != _7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _7 - (unsigned long) (__first_11 + 24) & 7) == 0
    # of iterations (((unsigned long) _7 - (unsigned long) (__first_11 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_10]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_10]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_10]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_10]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_11 + 24, + , 24](no_overflow) != _7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _7 - (unsigned long) (__first_11 + 24) & 7) == 0
    # of iterations (((unsigned long) _7 - (unsigned long) (__first_11 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 144B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 144B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:21, LOOPS:1, CONDITIONS:8, STMTS:297)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_9 bb_3 })
  {
    <bb 2>:
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.28444.D.27639._vptr.Module = &MEM[(void *)&_ZTV13MatrixArbiter + 16B];
    # DEBUG D#295 => &this_2(D)->_matrix
    # DEBUG this => D#295
    # DEBUG D#163 => &D#295->D.28398
    # DEBUG this => D#163
    # VUSE <.MEM_3>
    _7 = MEM[(struct vector *)this_2(D) + 144B].D.28398._M_impl._M_finish;
    # VUSE <.MEM_3>
    __first_11 = MEM[(struct vector *)this_2(D) + 144B].D.28398._M_impl._M_start;
    # DEBUG __first => __first_11
    # DEBUG __last => _7
    # DEBUG __first => __first_11
    if (_7 == __first_11)
      goto <bb 9>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_8 (preds = {bb_6 }, succs = {bb_20 })
  {
    <bb 8>:

  }
  bb_20 (preds = {bb_8 }, succs = {bb_9 })
  {
    <bb 20>:
    # VUSE <.MEM_32>
    pretmp_28 = MEM[(struct _Vector_base *)this_2(D) + 144B]._M_impl._M_start;

  }
  bb_9 (preds = {bb_20 bb_2 }, succs = {bb_10 bb_11 })
  {
    <bb 9>:
    # .MEM_72 = PHI <.MEM_32(20), .MEM_3(2)>
    # prephitmp_29 = PHI <pretmp_28(20), __first_11(2)>
    # DEBUG D#164 => &D#295->D.28398
    # DEBUG this => D#164
    # DEBUG D#138 => D#164->_M_impl._M_end_of_storage
    # DEBUG D#137 => (long int) D#138
    # DEBUG D#296 => MEM[(struct _Vector_base *)this_2(D) + 144B]._M_impl._M_start
    # DEBUG D#136 => (long int) D#296
    # DEBUG D#135 => D#137 - D#136
    # DEBUG D#134 => D#135 /[ex] 24
    # DEBUG D#131 => D#164
    # DEBUG D#132 => (long unsigned int) D#134
    # DEBUG __p => D#296
    # DEBUG this => D#131
    # DEBUG __n => D#132
    # DEBUG D#130 => D#132
    # DEBUG D#129 => D#131
    if (prephitmp_29 != 0B)
      goto <bb 10>;
    else
      goto <bb 11>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # DEBUG D#128 => &D#129->_M_impl
    # DEBUG D#126 => D#128
    # DEBUG D#127 => D#130
    # DEBUG __p => D#296
    # DEBUG __a => D#126
    # DEBUG __n => D#127
    # DEBUG D#125 => D#127
    # DEBUG D#124 => D#126
    # DEBUG D#122 => D#124
    # DEBUG D#123 => D#125
    # DEBUG __p => D#296
    # DEBUG this => D#122
    # DEBUG D.35795 => D#123
    # .MEM_33 = VDEF <.MEM_72>
    operator delete (prephitmp_29);

  }
  bb_11 (preds = {bb_9 bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # .MEM_22 = PHI <.MEM_72(9), .MEM_33(10)>
    # DEBUG D#133 => &D#164->_M_impl
    # DEBUG this => D#133
    # DEBUG this => D#133
    # DEBUG this => D#133
    # .MEM_38 = VDEF <.MEM_22>
    MEM[(struct  &)this_2(D) + 144] ={v} {CLOBBER};
    # DEBUG D#294 => &this_2(D)->D.28444
    # DEBUG this => D#294
    # .MEM_39 = VDEF <.MEM_38>
    MEM[(struct Arbiter *)this_2(D)].D.27639._vptr.Module = &MEM[(void *)&_ZTV7Arbiter + 16B];
    # DEBUG D#119 => &D#294->_request
    # DEBUG this => D#119
    # DEBUG D#115 => &D#119->D.27582
    # DEBUG this => D#115
    # DEBUG D#118 => D#119->D.27582._M_impl._M_finish
    # DEBUG D#117 => D#119->D.27582._M_impl._M_start
    # DEBUG D#48 => D#117
    # DEBUG D#49 => D#118
    # DEBUG __first => D#48
    # DEBUG __last => D#49
    # DEBUG D.32972 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#46 => D#48
    # DEBUG D#44 => D#46
    # DEBUG D#45 => D#47
    # DEBUG __first => D#44
    # DEBUG __last => D#45
    # DEBUG D#43 => D#45
    # DEBUG D#42 => D#44
    # DEBUG D#40 => D#42
    # DEBUG D#41 => D#43
    # DEBUG D.32597 => D#40
    # DEBUG D.32596 => D#41
    # DEBUG D#116 => &D#119->D.27582
    # DEBUG this => D#116
    # DEBUG D#114 => D#116->_M_impl._M_end_of_storage
    # DEBUG D#113 => (long int) D#114
    # VUSE <.MEM_39>
    _9 = MEM[(struct _Vector_base *)this_2(D) + 96B]._M_impl._M_start;
    # DEBUG D#112 => (long int) _9
    # DEBUG D#111 => D#113 - D#112
    # DEBUG D#110 => D#111 /[ex] 12
    # DEBUG D#107 => D#116
    # DEBUG D#108 => (long unsigned int) D#110
    # DEBUG __p => _9
    # DEBUG this => D#107
    # DEBUG __n => D#108
    # DEBUG D#106 => D#108
    # DEBUG D#105 => D#107
    if (_9 != 0B)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # DEBUG D#104 => &D#105->_M_impl
    # DEBUG D#102 => D#104
    # DEBUG D#103 => D#106
    # DEBUG __p => _9
    # DEBUG __a => D#102
    # DEBUG __n => D#103
    # DEBUG D#101 => D#103
    # DEBUG D#100 => D#102
    # DEBUG D#98 => D#100
    # DEBUG D#99 => D#101
    # DEBUG __p => _9
    # DEBUG this => D#98
    # DEBUG D.35756 => D#99
    # .MEM_40 = VDEF <.MEM_39>
    operator delete (_9);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_23 = PHI <.MEM_39(11), .MEM_40(12)>
    # DEBUG D#109 => &D#116->_M_impl
    # DEBUG this => D#109
    # DEBUG this => D#109
    # DEBUG this => D#109
    # .MEM_45 = VDEF <.MEM_23>
    MEM[(struct  &)this_2(D) + 96] ={v} {CLOBBER};
    # DEBUG D#293 => &MEM[(struct Arbiter *)this_2(D)].D.27639
    # DEBUG this => D#293
    # .MEM_46 = VDEF <.MEM_45>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#97 => &D#293->_children
    # DEBUG this => D#97
    # DEBUG D#91 => &D#97->D.26765
    # DEBUG this => D#91
    # DEBUG D#94 => D#97->D.26765._M_impl._M_finish
    # DEBUG D#93 => D#97->D.26765._M_impl._M_start
    # DEBUG D#37 => D#93
    # DEBUG D#38 => D#94
    # DEBUG __first => D#37
    # DEBUG __last => D#38
    # DEBUG D.32845 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#35 => D#37
    # DEBUG D#33 => D#35
    # DEBUG D#34 => D#36
    # DEBUG __first => D#33
    # DEBUG __last => D#34
    # DEBUG D#32 => D#34
    # DEBUG D#31 => D#33
    # DEBUG D#29 => D#31
    # DEBUG D#30 => D#32
    # DEBUG D.32559 => D#29
    # DEBUG D.32558 => D#30
    # DEBUG D#92 => &D#97->D.26765
    # DEBUG this => D#92
    # DEBUG D#90 => D#92->_M_impl._M_end_of_storage
    # DEBUG D#89 => (long int) D#90
    # VUSE <.MEM_46>
    _5 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#88 => (long int) _5
    # DEBUG D#87 => D#89 - D#88
    # DEBUG D#86 => D#87 /[ex] 8
    # DEBUG D#83 => D#92
    # DEBUG D#84 => (long unsigned int) D#86
    # DEBUG __p => _5
    # DEBUG this => D#83
    # DEBUG __n => D#84
    # DEBUG D#82 => D#84
    # DEBUG D#81 => D#83
    if (_5 != 0B)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # DEBUG D#80 => &D#81->_M_impl
    # DEBUG D#78 => D#80
    # DEBUG D#79 => D#82
    # DEBUG __p => _5
    # DEBUG __a => D#78
    # DEBUG __n => D#79
    # DEBUG D#77 => D#79
    # DEBUG D#76 => D#78
    # DEBUG D#74 => D#76
    # DEBUG D#75 => D#77
    # DEBUG __p => _5
    # DEBUG this => D#74
    # DEBUG D.35811 => D#75
    # .MEM_47 = VDEF <.MEM_46>
    operator delete (_5);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_24 = PHI <.MEM_46(13), .MEM_47(14)>
    # DEBUG D#85 => &D#92->_M_impl
    # DEBUG this => D#85
    # DEBUG this => D#85
    # DEBUG this => D#85
    # .MEM_52 = VDEF <.MEM_24>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#96 => &D#293->_fullname
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # VUSE <.MEM_52>
    _16 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#2 => D#96
    # DEBUG this => D#2
    # DEBUG this => D#96
    _17 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.13836._M_local_buf;
    if (_16 != _17)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#72 => MEM[(struct basic_string *)D#96].D.13836._M_allocated_capacity
    # DEBUG D#71 => D#72
    # DEBUG this => D#96
    # DEBUG __size => D#71
    # DEBUG D#70 => D#71
    # DEBUG D#2 => D#96
    # DEBUG this => D#2
    # DEBUG this => D#96
    # DEBUG D#69 => &MEM[(struct basic_string *)D#96]._M_dataplus
    # DEBUG D#67 => D#69
    # DEBUG D#68 => D#70 + 1
    # DEBUG __p => _16
    # DEBUG __a => D#67
    # DEBUG __n => D#68
    # DEBUG D#66 => D#68
    # DEBUG D#65 => D#67
    # DEBUG D#63 => D#65
    # DEBUG D#64 => D#66
    # DEBUG __p => _16
    # DEBUG this => D#63
    # DEBUG D.35824 => D#64
    # .MEM_53 = VDEF <.MEM_52>
    operator delete (_16);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # .MEM_25 = PHI <.MEM_52(15), .MEM_53(16)>
    # DEBUG D#73 => &MEM[(struct basic_string *)D#96]._M_dataplus
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_57 = VDEF <.MEM_25>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#95 => &D#293->_name
    # DEBUG this => D#95
    # DEBUG this => D#95
    # DEBUG this => D#95
    # VUSE <.MEM_57>
    _18 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#2 => D#95
    # DEBUG this => D#2
    # DEBUG this => D#95
    _19 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.13836._M_local_buf;
    if (_18 != _19)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#72 => MEM[(struct basic_string *)D#95].D.13836._M_allocated_capacity
    # DEBUG D#71 => D#72
    # DEBUG this => D#95
    # DEBUG __size => D#71
    # DEBUG D#70 => D#71
    # DEBUG D#2 => D#95
    # DEBUG this => D#2
    # DEBUG this => D#95
    # DEBUG D#69 => &MEM[(struct basic_string *)D#95]._M_dataplus
    # DEBUG D#67 => D#69
    # DEBUG D#68 => D#70 + 1
    # DEBUG __p => _18
    # DEBUG __a => D#67
    # DEBUG __n => D#68
    # DEBUG D#66 => D#68
    # DEBUG D#65 => D#67
    # DEBUG D#63 => D#65
    # DEBUG D#64 => D#66
    # DEBUG __p => _18
    # DEBUG this => D#63
    # DEBUG D.35839 => D#64
    # .MEM_58 = VDEF <.MEM_57>
    operator delete (_18);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_1 })
  {
    <bb 19>:
    # .MEM_26 = PHI <.MEM_57(17), .MEM_58(18)>
    # DEBUG D#73 => &MEM[(struct basic_string *)D#95]._M_dataplus
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_8 = VDEF <.MEM_26>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # VUSE <.MEM_8>
    return;

  }
  loop_1 (header = 4, latch = 7, niter = )
  {
    bb_4 (preds = {bb_3 bb_7 }, succs = {bb_5 bb_6 })
    {
      <bb 4>:
      # __first_10 = PHI <__first_11(3), __first_14(7)>
      # .MEM_73 = PHI <.MEM_3(3), .MEM_32(7)>
      # DEBUG __first => __first_10
      # DEBUG __r => __first_10
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#155
      # DEBUG __first => D#157
      # DEBUG __last => D#158
      # DEBUG D.33137 => NULL
      # DEBUG D#55 => D#157
      # DEBUG D#56 => D#158
      # DEBUG __first => D#55
      # DEBUG __last => D#56
      # DEBUG D#54 => D#56
      # DEBUG D#53 => D#55
      # DEBUG D#51 => D#53
      # DEBUG D#52 => D#54
      # DEBUG D.32641 => D#51
      # DEBUG D.32640 => D#52
      # DEBUG this => D#156
      # DEBUG D#154 => D#156->_M_impl._M_end_of_storage
      # DEBUG D#153 => (long int) D#154
      # VUSE <.MEM_73>
      _13 = MEM[(struct _Vector_base *)__first_10]._M_impl._M_start;
      # DEBUG D#152 => (long int) _13
      # DEBUG D#151 => D#153 - D#152
      # DEBUG D#150 => D#151 /[ex] 4
      # DEBUG D#149 => (long unsigned int) D#150
      # DEBUG this => D#156
      # DEBUG __p => _13
      # DEBUG __n => D#149
      if (_13 != 0B)
        goto <bb 5>;
      else
        goto <bb 6>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_6 })
    {
      <bb 5>:
      # DEBUG D#147 => &D#156->_M_impl
      # DEBUG D#145 => D#147
      # DEBUG D#146 => D#149
      # DEBUG __p => _13
      # DEBUG __a => D#145
      # DEBUG __n => D#146
      # DEBUG D#144 => D#146
      # DEBUG D#143 => D#145
      # DEBUG D#141 => D#143
      # DEBUG D#142 => D#144
      # DEBUG __p => _13
      # DEBUG this => D#141
      # DEBUG D.35781 => D#142
      # .MEM_27 = VDEF <.MEM_73>
      operator delete (_13);

    }
    bb_6 (preds = {bb_4 bb_5 }, succs = {bb_8 bb_7 })
    {
      <bb 6>:
      # .MEM_21 = PHI <.MEM_73(4), .MEM_27(5)>
      # DEBUG D#148 => &D#156->_M_impl
      # DEBUG this => D#148
      # DEBUG this => D#148
      # DEBUG this => D#148
      # .MEM_32 = VDEF <.MEM_21>
      MEM[(struct  &)__first_10] ={v} {CLOBBER};
      __first_14 = __first_10 + 24;
      # DEBUG __first => __first_14
      # DEBUG __first => __first_14
      if (_7 == __first_14)
        goto <bb 8>;
      else
        goto <bb 7>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_4 })
    {
      <bb 7>:
      goto <bb 4>;

    }
  }
}

Pass statistics:
----------------

MatrixArbiter::~MatrixArbiter() (struct MatrixArbiterD.27650 * const thisD.28432)
{
  struct vectorD.27653 * __firstD.35764;
  struct ModuleD.26017 * * _5;
  struct vectorD.27653 * _7;
  struct N7Arbiter7entry_tED.26837 * _9;
  intD.9 * _13;
  charD.10 * const _16;
  const charD.10 * _17;
  charD.10 * const _18;
  const charD.10 * _19;
  struct vectorD.27653 * pretmp_28;
  struct vectorD.27653 * prephitmp_29;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.28444.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV13MatrixArbiterD.28448 + 16B];
  # DEBUG D#295ptD.0 => &this_2(D)->_matrixD.28400
  # DEBUG thisD.35761 => D#295ptD.0
  # DEBUG D#163ptD.0 => &D#295ptD.0->D.28398
  # DEBUG thisD.33343 => D#163ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _7 = MEM[(struct vectorD.27655 *)this_2(D) + 144B].D.28398._M_implD.27889._M_finishD.27892;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __first_11 = MEM[(struct vectorD.27655 *)this_2(D) + 144B].D.28398._M_implD.27889._M_startD.27891;
  # DEBUG __firstD.35764 => __first_11
  # DEBUG __lastD.35763 => _7
  # DEBUG __firstD.35769 => __first_11
  if (_7 == __first_11)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_10 = PHI <__first_11(3), __first_14(7)>
  # .MEM_73 = PHI <.MEM_3(3), .MEM_32(7)>
  # DEBUG __firstD.35769 => __first_10
  # DEBUG __rD.33173 => __first_10
  # DEBUG __pointerD.35770 => NULL
  # DEBUG thisD.35771 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.35772 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_73>
  # PT = nonlocal escaped 
  _13 = MEM[(struct _Vector_baseD.28492 *)__first_10]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _13
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35775 => D#156ptD.0
  # DEBUG __pD.35774 => _13
  # DEBUG __nD.35773 => D#149ptD.0
  if (_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35779 => _13
  # DEBUG __aD.35777 => D#145ptD.0
  # DEBUG __nD.35778 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35782 => _13
  # DEBUG thisD.35780 => D#141ptD.0
  # DEBUG D.35781 => D#142ptD.0
  # .MEM_27 = VDEF <.MEM_73>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_13);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_21 = PHI <.MEM_73(4), .MEM_27(5)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35783 => D#148ptD.0
  # DEBUG thisD.35784 => D#148ptD.0
  # DEBUG thisD.35785 => D#148ptD.0
  # .MEM_32 = VDEF <.MEM_21>
  MEM[(struct  &)__first_10] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_14 = __first_10 + 24;
  # DEBUG __firstD.35769 => __first_14
  # DEBUG __firstD.35769 => __first_14
  if (_7 == __first_14)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 20, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       20 [100.0%]  (FALLTHRU)

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_32>
  pretmp_28 = MEM[(struct _Vector_baseD.27656 *)this_2(D) + 144B]._M_implD.27889._M_startD.27891;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 10, flags: (NEW, REACHABLE)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_32(20), .MEM_3(2)>
  # PT = nonlocal escaped 
  # prephitmp_29 = PHI <pretmp_28(20), __first_11(2)>
  # DEBUG D#164ptD.0 => &D#295ptD.0->D.28398
  # DEBUG thisD.35786 => D#164ptD.0
  # DEBUG D#138ptD.0 => D#164ptD.0->_M_implD.27889._M_end_of_storageD.27893
  # DEBUG D#137ptD.0 => (long intD.12) D#138ptD.0
  # DEBUG D#296ptD.0 => MEM[(struct _Vector_baseD.27656 *)this_2(D) + 144B]._M_implD.27889._M_startD.27891
  # DEBUG D#136ptD.0 => (long intD.12) D#296ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0 - D#136ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0 /[ex] 24
  # DEBUG D#131ptD.0 => D#164ptD.0
  # DEBUG D#132ptD.0 => (long unsigned intD.14) D#134ptD.0
  # DEBUG __pD.35789 => D#296ptD.0
  # DEBUG thisD.35787 => D#131ptD.0
  # DEBUG __nD.35788 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  if (prephitmp_29 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#128ptD.0 => &D#129ptD.0->_M_implD.27889
  # DEBUG D#126ptD.0 => D#128ptD.0
  # DEBUG D#127ptD.0 => D#130ptD.0
  # DEBUG __pD.35793 => D#296ptD.0
  # DEBUG __aD.35791 => D#126ptD.0
  # DEBUG __nD.35792 => D#127ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG __pD.35796 => D#296ptD.0
  # DEBUG thisD.35794 => D#122ptD.0
  # DEBUG D.35795 => D#123ptD.0
  # .MEM_33 = VDEF <.MEM_72>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_29);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_22 = PHI <.MEM_72(9), .MEM_33(10)>
  # DEBUG D#133ptD.0 => &D#164ptD.0->_M_implD.27889
  # DEBUG thisD.35797 => D#133ptD.0
  # DEBUG thisD.35798 => D#133ptD.0
  # DEBUG thisD.35799 => D#133ptD.0
  # .MEM_38 = VDEF <.MEM_22>
  MEM[(struct  &)this_2(D) + 144] ={v} {CLOBBER};
  # DEBUG D#294ptD.0 => &this_2(D)->D.28444
  # DEBUG thisD.35745 => D#294ptD.0
  # .MEM_39 = VDEF <.MEM_38>
  MEM[(struct ArbiterD.26830 *)this_2(D)].D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV7ArbiterD.27647 + 16B];
  # DEBUG D#119ptD.0 => &D#294ptD.0->_requestD.27584
  # DEBUG thisD.35746 => D#119ptD.0
  # DEBUG D#115ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.32975 => D#115ptD.0
  # DEBUG D#118ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_finishD.27076
  # DEBUG D#117ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_startD.27075
  # DEBUG D#48ptD.0 => D#117ptD.0
  # DEBUG D#49ptD.0 => D#118ptD.0
  # DEBUG __firstD.32974 => D#48ptD.0
  # DEBUG __lastD.32973 => D#49ptD.0
  # DEBUG D.32972 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG __firstD.32608 => D#44ptD.0
  # DEBUG __lastD.32607 => D#45ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D.32597 => D#40ptD.0
  # DEBUG D.32596 => D#41ptD.0
  # DEBUG D#116ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.35747 => D#116ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0->_M_implD.27073._M_end_of_storageD.27077
  # DEBUG D#113ptD.0 => (long intD.12) D#114ptD.0
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  _9 = MEM[(struct _Vector_baseD.26840 *)this_2(D) + 96B]._M_implD.27073._M_startD.27075;
  # DEBUG D#112ptD.0 => (long intD.12) _9
  # DEBUG D#111ptD.0 => D#113ptD.0 - D#112ptD.0
  # DEBUG D#110ptD.0 => D#111ptD.0 /[ex] 12
  # DEBUG D#107ptD.0 => D#116ptD.0
  # DEBUG D#108ptD.0 => (long unsigned intD.14) D#110ptD.0
  # DEBUG __pD.35750 => _9
  # DEBUG thisD.35748 => D#107ptD.0
  # DEBUG __nD.35749 => D#108ptD.0
  # DEBUG D#106ptD.0 => D#108ptD.0
  # DEBUG D#105ptD.0 => D#107ptD.0
  if (_9 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#104ptD.0 => &D#105ptD.0->_M_implD.27073
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#103ptD.0 => D#106ptD.0
  # DEBUG __pD.35754 => _9
  # DEBUG __aD.35752 => D#102ptD.0
  # DEBUG __nD.35753 => D#103ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0
  # DEBUG D#99ptD.0 => D#101ptD.0
  # DEBUG __pD.35757 => _9
  # DEBUG thisD.35755 => D#98ptD.0
  # DEBUG D.35756 => D#99ptD.0
  # .MEM_40 = VDEF <.MEM_39>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_9);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_39(11), .MEM_40(12)>
  # DEBUG D#109ptD.0 => &D#116ptD.0->_M_implD.27073
  # DEBUG thisD.35758 => D#109ptD.0
  # DEBUG thisD.35759 => D#109ptD.0
  # DEBUG thisD.35760 => D#109ptD.0
  # .MEM_45 = VDEF <.MEM_23>
  MEM[(struct  &)this_2(D) + 96] ={v} {CLOBBER};
  # DEBUG D#293ptD.0 => &MEM[(struct ArbiterD.26830 *)this_2(D)].D.27639
  # DEBUG thisD.35800 => D#293ptD.0
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(struct ModuleD.26017 *)this_2(D)]._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV6ModuleD.26817 + 16B];
  # DEBUG D#97ptD.0 => &D#293ptD.0->_childrenD.26767
  # DEBUG thisD.35801 => D#97ptD.0
  # DEBUG D#91ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.32848 => D#91ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_finishD.26259
  # DEBUG D#93ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_startD.26258
  # DEBUG D#37ptD.0 => D#93ptD.0
  # DEBUG D#38ptD.0 => D#94ptD.0
  # DEBUG __firstD.32847 => D#37ptD.0
  # DEBUG __lastD.32846 => D#38ptD.0
  # DEBUG D.32845 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG __firstD.32570 => D#33ptD.0
  # DEBUG __lastD.32569 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.32559 => D#29ptD.0
  # DEBUG D.32558 => D#30ptD.0
  # DEBUG D#92ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.35802 => D#92ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0->_M_implD.26256._M_end_of_storageD.26260
  # DEBUG D#89ptD.0 => (long intD.12) D#90ptD.0
  # VUSE <.MEM_46>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.26023 *)this_2(D) + 72B]._M_implD.26256._M_startD.26258;
  # DEBUG D#88ptD.0 => (long intD.12) _5
  # DEBUG D#87ptD.0 => D#89ptD.0 - D#88ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0 /[ex] 8
  # DEBUG D#83ptD.0 => D#92ptD.0
  # DEBUG D#84ptD.0 => (long unsigned intD.14) D#86ptD.0
  # DEBUG __pD.35805 => _5
  # DEBUG thisD.35803 => D#83ptD.0
  # DEBUG __nD.35804 => D#84ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  if (_5 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#80ptD.0 => &D#81ptD.0->_M_implD.26256
  # DEBUG D#78ptD.0 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#82ptD.0
  # DEBUG __pD.35809 => _5
  # DEBUG __aD.35807 => D#78ptD.0
  # DEBUG __nD.35808 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0
  # DEBUG D#76ptD.0 => D#78ptD.0
  # DEBUG D#74ptD.0 => D#76ptD.0
  # DEBUG D#75ptD.0 => D#77ptD.0
  # DEBUG __pD.35812 => _5
  # DEBUG thisD.35810 => D#74ptD.0
  # DEBUG D.35811 => D#75ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_46(13), .MEM_47(14)>
  # DEBUG D#85ptD.0 => &D#92ptD.0->_M_implD.26256
  # DEBUG thisD.35813 => D#85ptD.0
  # DEBUG thisD.35814 => D#85ptD.0
  # DEBUG thisD.35815 => D#85ptD.0
  # .MEM_52 = VDEF <.MEM_24>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#96ptD.0 => &D#293ptD.0->_fullnameD.26020
  # DEBUG thisD.35816 => D#96ptD.0
  # DEBUG thisD.35817 => D#96ptD.0
  # DEBUG thisD.35826 => D#96ptD.0
  # VUSE <.MEM_52>
  # PT = nonlocal escaped 
  _16 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.35827 => D#96ptD.0
  # PT = nonlocal 
  _17 = &MEM[(const struct basic_stringD.8425 *)this_2(D) + 40B].D.13836._M_local_bufD.13838;
  if (_16 != _17)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#96ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.35819 => D#96ptD.0
  # DEBUG __sizeD.35818 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#96ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.35822 => _16
  # DEBUG __aD.35820 => D#67ptD.0
  # DEBUG __nD.35821 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.35825 => _16
  # DEBUG thisD.35823 => D#63ptD.0
  # DEBUG D.35824 => D#64ptD.0
  # .MEM_53 = VDEF <.MEM_52>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_52(15), .MEM_53(16)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG thisD.35828 => D#73ptD.0
  # DEBUG thisD.35829 => D#73ptD.0
  # DEBUG thisD.35830 => D#73ptD.0
  # .MEM_57 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#95ptD.0 => &D#293ptD.0->_nameD.26019
  # DEBUG thisD.35831 => D#95ptD.0
  # DEBUG thisD.35832 => D#95ptD.0
  # DEBUG thisD.35841 => D#95ptD.0
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _18 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.35842 => D#95ptD.0
  # PT = nonlocal 
  _19 = &MEM[(const struct basic_stringD.8425 *)this_2(D) + 8B].D.13836._M_local_bufD.13838;
  if (_18 != _19)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#95ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.35834 => D#95ptD.0
  # DEBUG __sizeD.35833 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#95ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.35837 => _18
  # DEBUG __aD.35835 => D#67ptD.0
  # DEBUG __nD.35836 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.35840 => _18
  # DEBUG thisD.35838 => D#63ptD.0
  # DEBUG D.35839 => D#64ptD.0
  # .MEM_58 = VDEF <.MEM_57>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_18);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_57(17), .MEM_58(18)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG thisD.35843 => D#73ptD.0
  # DEBUG thisD.35844 => D#73ptD.0
  # DEBUG thisD.35845 => D#73ptD.0
  # .MEM_8 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_8>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual MatrixArbiter::~MatrixArbiter() (_ZN13MatrixArbiterD0Ev, funcdef_no=1658, decl_uid=28425, cgraph_uid=670, symbol_order=672)


Pass statistics:
----------------

virtual MatrixArbiter::~MatrixArbiter() (struct MatrixArbiterD.27650 * const thisD.28426)
{
  struct vectorD.27653 * __firstD.35878;
  struct ModuleD.26017 * * _7;
  struct vectorD.27653 * _8;
  struct N7Arbiter7entry_tED.26837 * _10;
  intD.9 * _14;
  charD.10 * const _17;
  const charD.10 * _18;
  charD.10 * const _19;
  const charD.10 * _20;
  struct vectorD.27653 * pretmp_29;
  struct vectorD.27653 * prephitmp_30;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.33347 => this_2(D)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.28444.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV13MatrixArbiterD.28448 + 16B];
  # DEBUG D#299ptD.0 => &this_2(D)->_matrixD.28400
  # DEBUG thisD.35875 => D#299ptD.0
  # DEBUG D#163ptD.0 => &D#299ptD.0->D.28398
  # DEBUG thisD.33343 => D#163ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _8 = MEM[(struct vectorD.27655 *)this_2(D) + 144B].D.28398._M_implD.27889._M_finishD.27892;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __first_12 = MEM[(struct vectorD.27655 *)this_2(D) + 144B].D.28398._M_implD.27889._M_startD.27891;
  # DEBUG __firstD.35878 => __first_12
  # DEBUG __lastD.35877 => _8
  # DEBUG __firstD.35883 => __first_12
  if (_8 == __first_12)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_11 = PHI <__first_12(3), __first_15(7)>
  # .MEM_74 = PHI <.MEM_3(3), .MEM_33(7)>
  # DEBUG __firstD.35883 => __first_11
  # DEBUG __rD.33173 => __first_11
  # DEBUG __pointerD.35884 => NULL
  # DEBUG thisD.35885 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.35886 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_74>
  # PT = nonlocal escaped 
  _14 = MEM[(struct _Vector_baseD.28492 *)__first_11]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _14
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35889 => D#156ptD.0
  # DEBUG __pD.35888 => _14
  # DEBUG __nD.35887 => D#149ptD.0
  if (_14 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35893 => _14
  # DEBUG __aD.35891 => D#145ptD.0
  # DEBUG __nD.35892 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35896 => _14
  # DEBUG thisD.35894 => D#141ptD.0
  # DEBUG D.35895 => D#142ptD.0
  # .MEM_28 = VDEF <.MEM_74>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_14);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_22 = PHI <.MEM_74(4), .MEM_28(5)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35897 => D#148ptD.0
  # DEBUG thisD.35898 => D#148ptD.0
  # DEBUG thisD.35899 => D#148ptD.0
  # .MEM_33 = VDEF <.MEM_22>
  MEM[(struct  &)__first_11] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_15 = __first_11 + 24;
  # DEBUG __firstD.35883 => __first_15
  # DEBUG __firstD.35883 => __first_15
  if (_8 == __first_15)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_33>
  pretmp_29 = MEM[(struct _Vector_baseD.27656 *)this_2(D) + 144B]._M_implD.27889._M_startD.27891;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_73 = PHI <.MEM_33(8), .MEM_3(2)>
  # PT = nonlocal escaped 
  # prephitmp_30 = PHI <pretmp_29(8), __first_12(2)>
  # DEBUG D#164ptD.0 => &D#299ptD.0->D.28398
  # DEBUG thisD.35900 => D#164ptD.0
  # DEBUG D#138ptD.0 => D#164ptD.0->_M_implD.27889._M_end_of_storageD.27893
  # DEBUG D#137ptD.0 => (long intD.12) D#138ptD.0
  # DEBUG D#300ptD.0 => MEM[(struct _Vector_baseD.27656 *)this_2(D) + 144B]._M_implD.27889._M_startD.27891
  # DEBUG D#136ptD.0 => (long intD.12) D#300ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0 - D#136ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0 /[ex] 24
  # DEBUG D#131ptD.0 => D#164ptD.0
  # DEBUG D#132ptD.0 => (long unsigned intD.14) D#134ptD.0
  # DEBUG __pD.35903 => D#300ptD.0
  # DEBUG thisD.35901 => D#131ptD.0
  # DEBUG __nD.35902 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  if (prephitmp_30 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#128ptD.0 => &D#129ptD.0->_M_implD.27889
  # DEBUG D#126ptD.0 => D#128ptD.0
  # DEBUG D#127ptD.0 => D#130ptD.0
  # DEBUG __pD.35907 => D#300ptD.0
  # DEBUG __aD.35905 => D#126ptD.0
  # DEBUG __nD.35906 => D#127ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG __pD.35910 => D#300ptD.0
  # DEBUG thisD.35908 => D#122ptD.0
  # DEBUG D.35909 => D#123ptD.0
  # .MEM_34 = VDEF <.MEM_73>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_30);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_73(9), .MEM_34(10)>
  # DEBUG D#133ptD.0 => &D#164ptD.0->_M_implD.27889
  # DEBUG thisD.35911 => D#133ptD.0
  # DEBUG thisD.35912 => D#133ptD.0
  # DEBUG thisD.35913 => D#133ptD.0
  # .MEM_39 = VDEF <.MEM_23>
  MEM[(struct  &)this_2(D) + 144] ={v} {CLOBBER};
  # DEBUG D#298ptD.0 => &this_2(D)->D.28444
  # DEBUG thisD.35859 => D#298ptD.0
  # .MEM_40 = VDEF <.MEM_39>
  MEM[(struct ArbiterD.26830 *)this_2(D)].D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV7ArbiterD.27647 + 16B];
  # DEBUG D#119ptD.0 => &D#298ptD.0->_requestD.27584
  # DEBUG thisD.35860 => D#119ptD.0
  # DEBUG D#115ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.32975 => D#115ptD.0
  # DEBUG D#118ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_finishD.27076
  # DEBUG D#117ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_startD.27075
  # DEBUG D#48ptD.0 => D#117ptD.0
  # DEBUG D#49ptD.0 => D#118ptD.0
  # DEBUG __firstD.32974 => D#48ptD.0
  # DEBUG __lastD.32973 => D#49ptD.0
  # DEBUG D.32972 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG __firstD.32608 => D#44ptD.0
  # DEBUG __lastD.32607 => D#45ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D.32597 => D#40ptD.0
  # DEBUG D.32596 => D#41ptD.0
  # DEBUG D#116ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.35861 => D#116ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0->_M_implD.27073._M_end_of_storageD.27077
  # DEBUG D#113ptD.0 => (long intD.12) D#114ptD.0
  # VUSE <.MEM_40>
  # PT = nonlocal escaped 
  _10 = MEM[(struct _Vector_baseD.26840 *)this_2(D) + 96B]._M_implD.27073._M_startD.27075;
  # DEBUG D#112ptD.0 => (long intD.12) _10
  # DEBUG D#111ptD.0 => D#113ptD.0 - D#112ptD.0
  # DEBUG D#110ptD.0 => D#111ptD.0 /[ex] 12
  # DEBUG D#107ptD.0 => D#116ptD.0
  # DEBUG D#108ptD.0 => (long unsigned intD.14) D#110ptD.0
  # DEBUG __pD.35864 => _10
  # DEBUG thisD.35862 => D#107ptD.0
  # DEBUG __nD.35863 => D#108ptD.0
  # DEBUG D#106ptD.0 => D#108ptD.0
  # DEBUG D#105ptD.0 => D#107ptD.0
  if (_10 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#104ptD.0 => &D#105ptD.0->_M_implD.27073
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#103ptD.0 => D#106ptD.0
  # DEBUG __pD.35868 => _10
  # DEBUG __aD.35866 => D#102ptD.0
  # DEBUG __nD.35867 => D#103ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0
  # DEBUG D#99ptD.0 => D#101ptD.0
  # DEBUG __pD.35871 => _10
  # DEBUG thisD.35869 => D#98ptD.0
  # DEBUG D.35870 => D#99ptD.0
  # .MEM_41 = VDEF <.MEM_40>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_10);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_40(11), .MEM_41(12)>
  # DEBUG D#109ptD.0 => &D#116ptD.0->_M_implD.27073
  # DEBUG thisD.35872 => D#109ptD.0
  # DEBUG thisD.35873 => D#109ptD.0
  # DEBUG thisD.35874 => D#109ptD.0
  # .MEM_46 = VDEF <.MEM_24>
  MEM[(struct  &)this_2(D) + 96] ={v} {CLOBBER};
  # DEBUG D#297ptD.0 => &MEM[(struct ArbiterD.26830 *)this_2(D)].D.27639
  # DEBUG thisD.35914 => D#297ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  MEM[(struct ModuleD.26017 *)this_2(D)]._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV6ModuleD.26817 + 16B];
  # DEBUG D#97ptD.0 => &D#297ptD.0->_childrenD.26767
  # DEBUG thisD.35915 => D#97ptD.0
  # DEBUG D#91ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.32848 => D#91ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_finishD.26259
  # DEBUG D#93ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_startD.26258
  # DEBUG D#37ptD.0 => D#93ptD.0
  # DEBUG D#38ptD.0 => D#94ptD.0
  # DEBUG __firstD.32847 => D#37ptD.0
  # DEBUG __lastD.32846 => D#38ptD.0
  # DEBUG D.32845 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG __firstD.32570 => D#33ptD.0
  # DEBUG __lastD.32569 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.32559 => D#29ptD.0
  # DEBUG D.32558 => D#30ptD.0
  # DEBUG D#92ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.35916 => D#92ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0->_M_implD.26256._M_end_of_storageD.26260
  # DEBUG D#89ptD.0 => (long intD.12) D#90ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.26023 *)this_2(D) + 72B]._M_implD.26256._M_startD.26258;
  # DEBUG D#88ptD.0 => (long intD.12) _7
  # DEBUG D#87ptD.0 => D#89ptD.0 - D#88ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0 /[ex] 8
  # DEBUG D#83ptD.0 => D#92ptD.0
  # DEBUG D#84ptD.0 => (long unsigned intD.14) D#86ptD.0
  # DEBUG __pD.35919 => _7
  # DEBUG thisD.35917 => D#83ptD.0
  # DEBUG __nD.35918 => D#84ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  if (_7 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#80ptD.0 => &D#81ptD.0->_M_implD.26256
  # DEBUG D#78ptD.0 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#82ptD.0
  # DEBUG __pD.35923 => _7
  # DEBUG __aD.35921 => D#78ptD.0
  # DEBUG __nD.35922 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0
  # DEBUG D#76ptD.0 => D#78ptD.0
  # DEBUG D#74ptD.0 => D#76ptD.0
  # DEBUG D#75ptD.0 => D#77ptD.0
  # DEBUG __pD.35926 => _7
  # DEBUG thisD.35924 => D#74ptD.0
  # DEBUG D.35925 => D#75ptD.0
  # .MEM_48 = VDEF <.MEM_47>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_47(13), .MEM_48(14)>
  # DEBUG D#85ptD.0 => &D#92ptD.0->_M_implD.26256
  # DEBUG thisD.35927 => D#85ptD.0
  # DEBUG thisD.35928 => D#85ptD.0
  # DEBUG thisD.35929 => D#85ptD.0
  # .MEM_53 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#96ptD.0 => &D#297ptD.0->_fullnameD.26020
  # DEBUG thisD.35930 => D#96ptD.0
  # DEBUG thisD.35931 => D#96ptD.0
  # DEBUG thisD.35940 => D#96ptD.0
  # VUSE <.MEM_53>
  # PT = nonlocal escaped 
  _17 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.35941 => D#96ptD.0
  # PT = nonlocal 
  _18 = &MEM[(const struct basic_stringD.8425 *)this_2(D) + 40B].D.13836._M_local_bufD.13838;
  if (_17 != _18)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#96ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.35933 => D#96ptD.0
  # DEBUG __sizeD.35932 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#96ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.35936 => _17
  # DEBUG __aD.35934 => D#67ptD.0
  # DEBUG __nD.35935 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.35939 => _17
  # DEBUG thisD.35937 => D#63ptD.0
  # DEBUG D.35938 => D#64ptD.0
  # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_53(15), .MEM_54(16)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG thisD.35942 => D#73ptD.0
  # DEBUG thisD.35943 => D#73ptD.0
  # DEBUG thisD.35944 => D#73ptD.0
  # .MEM_58 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#95ptD.0 => &D#297ptD.0->_nameD.26019
  # DEBUG thisD.35945 => D#95ptD.0
  # DEBUG thisD.35946 => D#95ptD.0
  # DEBUG thisD.35955 => D#95ptD.0
  # VUSE <.MEM_58>
  # PT = nonlocal escaped 
  _19 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.35956 => D#95ptD.0
  # PT = nonlocal 
  _20 = &MEM[(const struct basic_stringD.8425 *)this_2(D) + 8B].D.13836._M_local_bufD.13838;
  if (_19 != _20)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#95ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.35948 => D#95ptD.0
  # DEBUG __sizeD.35947 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#95ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.35951 => _19
  # DEBUG __aD.35949 => D#67ptD.0
  # DEBUG __nD.35950 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.35954 => _19
  # DEBUG thisD.35952 => D#63ptD.0
  # DEBUG D.35953 => D#64ptD.0
  # .MEM_59 = VDEF <.MEM_58>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_58(17), .MEM_59(18)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG thisD.35957 => D#73ptD.0
  # DEBUG thisD.35958 => D#73ptD.0
  # DEBUG thisD.35959 => D#73ptD.0
  # .MEM_9 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_9>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.28444.D.27639._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 144B].D.28398._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 144B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 144B].D.28398._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 144B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Vector_base *)__first_11]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_12
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_12]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_11]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_12
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_12]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_11]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_12
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_12]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_11]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_12
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_12]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_12 + 24, + , 24](no_overflow) != _8
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _8 - (unsigned long) (__first_12 + 24) & 7) == 0
    # of iterations (((unsigned long) _8 - (unsigned long) (__first_12 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_11]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_12
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_12]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_11]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_12
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_12]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_11]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_12
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_12]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Creating dr for MEM[(struct _Vector_base *)__first_11]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_12
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_12]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_1
Analyzing # of iterations of loop 1
  exit condition [__first_12 + 24, + , 24](no_overflow) != _8
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _8 - (unsigned long) (__first_12 + 24) & 7) == 0
    # of iterations (((unsigned long) _8 - (unsigned long) (__first_12 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 144B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 144B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:21, LOOPS:1, CONDITIONS:8, STMTS:299)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_9 bb_3 })
  {
    <bb 2>:
    # DEBUG this => this_2(D)
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.28444.D.27639._vptr.Module = &MEM[(void *)&_ZTV13MatrixArbiter + 16B];
    # DEBUG D#299 => &this_2(D)->_matrix
    # DEBUG this => D#299
    # DEBUG D#163 => &D#299->D.28398
    # DEBUG this => D#163
    # VUSE <.MEM_3>
    _8 = MEM[(struct vector *)this_2(D) + 144B].D.28398._M_impl._M_finish;
    # VUSE <.MEM_3>
    __first_12 = MEM[(struct vector *)this_2(D) + 144B].D.28398._M_impl._M_start;
    # DEBUG __first => __first_12
    # DEBUG __last => _8
    # DEBUG __first => __first_12
    if (_8 == __first_12)
      goto <bb 9>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_8 (preds = {bb_6 }, succs = {bb_20 })
  {
    <bb 8>:

  }
  bb_20 (preds = {bb_8 }, succs = {bb_9 })
  {
    <bb 20>:
    # VUSE <.MEM_33>
    pretmp_29 = MEM[(struct _Vector_base *)this_2(D) + 144B]._M_impl._M_start;

  }
  bb_9 (preds = {bb_20 bb_2 }, succs = {bb_10 bb_11 })
  {
    <bb 9>:
    # .MEM_73 = PHI <.MEM_33(20), .MEM_3(2)>
    # prephitmp_30 = PHI <pretmp_29(20), __first_12(2)>
    # DEBUG D#164 => &D#299->D.28398
    # DEBUG this => D#164
    # DEBUG D#138 => D#164->_M_impl._M_end_of_storage
    # DEBUG D#137 => (long int) D#138
    # DEBUG D#300 => MEM[(struct _Vector_base *)this_2(D) + 144B]._M_impl._M_start
    # DEBUG D#136 => (long int) D#300
    # DEBUG D#135 => D#137 - D#136
    # DEBUG D#134 => D#135 /[ex] 24
    # DEBUG D#131 => D#164
    # DEBUG D#132 => (long unsigned int) D#134
    # DEBUG __p => D#300
    # DEBUG this => D#131
    # DEBUG __n => D#132
    # DEBUG D#130 => D#132
    # DEBUG D#129 => D#131
    if (prephitmp_30 != 0B)
      goto <bb 10>;
    else
      goto <bb 11>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # DEBUG D#128 => &D#129->_M_impl
    # DEBUG D#126 => D#128
    # DEBUG D#127 => D#130
    # DEBUG __p => D#300
    # DEBUG __a => D#126
    # DEBUG __n => D#127
    # DEBUG D#125 => D#127
    # DEBUG D#124 => D#126
    # DEBUG D#122 => D#124
    # DEBUG D#123 => D#125
    # DEBUG __p => D#300
    # DEBUG this => D#122
    # DEBUG D.35909 => D#123
    # .MEM_34 = VDEF <.MEM_73>
    operator delete (prephitmp_30);

  }
  bb_11 (preds = {bb_9 bb_10 }, succs = {bb_12 bb_13 })
  {
    <bb 11>:
    # .MEM_23 = PHI <.MEM_73(9), .MEM_34(10)>
    # DEBUG D#133 => &D#164->_M_impl
    # DEBUG this => D#133
    # DEBUG this => D#133
    # DEBUG this => D#133
    # .MEM_39 = VDEF <.MEM_23>
    MEM[(struct  &)this_2(D) + 144] ={v} {CLOBBER};
    # DEBUG D#298 => &this_2(D)->D.28444
    # DEBUG this => D#298
    # .MEM_40 = VDEF <.MEM_39>
    MEM[(struct Arbiter *)this_2(D)].D.27639._vptr.Module = &MEM[(void *)&_ZTV7Arbiter + 16B];
    # DEBUG D#119 => &D#298->_request
    # DEBUG this => D#119
    # DEBUG D#115 => &D#119->D.27582
    # DEBUG this => D#115
    # DEBUG D#118 => D#119->D.27582._M_impl._M_finish
    # DEBUG D#117 => D#119->D.27582._M_impl._M_start
    # DEBUG D#48 => D#117
    # DEBUG D#49 => D#118
    # DEBUG __first => D#48
    # DEBUG __last => D#49
    # DEBUG D.32972 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#46 => D#48
    # DEBUG D#44 => D#46
    # DEBUG D#45 => D#47
    # DEBUG __first => D#44
    # DEBUG __last => D#45
    # DEBUG D#43 => D#45
    # DEBUG D#42 => D#44
    # DEBUG D#40 => D#42
    # DEBUG D#41 => D#43
    # DEBUG D.32597 => D#40
    # DEBUG D.32596 => D#41
    # DEBUG D#116 => &D#119->D.27582
    # DEBUG this => D#116
    # DEBUG D#114 => D#116->_M_impl._M_end_of_storage
    # DEBUG D#113 => (long int) D#114
    # VUSE <.MEM_40>
    _10 = MEM[(struct _Vector_base *)this_2(D) + 96B]._M_impl._M_start;
    # DEBUG D#112 => (long int) _10
    # DEBUG D#111 => D#113 - D#112
    # DEBUG D#110 => D#111 /[ex] 12
    # DEBUG D#107 => D#116
    # DEBUG D#108 => (long unsigned int) D#110
    # DEBUG __p => _10
    # DEBUG this => D#107
    # DEBUG __n => D#108
    # DEBUG D#106 => D#108
    # DEBUG D#105 => D#107
    if (_10 != 0B)
      goto <bb 12>;
    else
      goto <bb 13>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # DEBUG D#104 => &D#105->_M_impl
    # DEBUG D#102 => D#104
    # DEBUG D#103 => D#106
    # DEBUG __p => _10
    # DEBUG __a => D#102
    # DEBUG __n => D#103
    # DEBUG D#101 => D#103
    # DEBUG D#100 => D#102
    # DEBUG D#98 => D#100
    # DEBUG D#99 => D#101
    # DEBUG __p => _10
    # DEBUG this => D#98
    # DEBUG D.35870 => D#99
    # .MEM_41 = VDEF <.MEM_40>
    operator delete (_10);

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_24 = PHI <.MEM_40(11), .MEM_41(12)>
    # DEBUG D#109 => &D#116->_M_impl
    # DEBUG this => D#109
    # DEBUG this => D#109
    # DEBUG this => D#109
    # .MEM_46 = VDEF <.MEM_24>
    MEM[(struct  &)this_2(D) + 96] ={v} {CLOBBER};
    # DEBUG D#297 => &MEM[(struct Arbiter *)this_2(D)].D.27639
    # DEBUG this => D#297
    # .MEM_47 = VDEF <.MEM_46>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#97 => &D#297->_children
    # DEBUG this => D#97
    # DEBUG D#91 => &D#97->D.26765
    # DEBUG this => D#91
    # DEBUG D#94 => D#97->D.26765._M_impl._M_finish
    # DEBUG D#93 => D#97->D.26765._M_impl._M_start
    # DEBUG D#37 => D#93
    # DEBUG D#38 => D#94
    # DEBUG __first => D#37
    # DEBUG __last => D#38
    # DEBUG D.32845 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#35 => D#37
    # DEBUG D#33 => D#35
    # DEBUG D#34 => D#36
    # DEBUG __first => D#33
    # DEBUG __last => D#34
    # DEBUG D#32 => D#34
    # DEBUG D#31 => D#33
    # DEBUG D#29 => D#31
    # DEBUG D#30 => D#32
    # DEBUG D.32559 => D#29
    # DEBUG D.32558 => D#30
    # DEBUG D#92 => &D#97->D.26765
    # DEBUG this => D#92
    # DEBUG D#90 => D#92->_M_impl._M_end_of_storage
    # DEBUG D#89 => (long int) D#90
    # VUSE <.MEM_47>
    _7 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#88 => (long int) _7
    # DEBUG D#87 => D#89 - D#88
    # DEBUG D#86 => D#87 /[ex] 8
    # DEBUG D#83 => D#92
    # DEBUG D#84 => (long unsigned int) D#86
    # DEBUG __p => _7
    # DEBUG this => D#83
    # DEBUG __n => D#84
    # DEBUG D#82 => D#84
    # DEBUG D#81 => D#83
    if (_7 != 0B)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:
    # DEBUG D#80 => &D#81->_M_impl
    # DEBUG D#78 => D#80
    # DEBUG D#79 => D#82
    # DEBUG __p => _7
    # DEBUG __a => D#78
    # DEBUG __n => D#79
    # DEBUG D#77 => D#79
    # DEBUG D#76 => D#78
    # DEBUG D#74 => D#76
    # DEBUG D#75 => D#77
    # DEBUG __p => _7
    # DEBUG this => D#74
    # DEBUG D.35925 => D#75
    # .MEM_48 = VDEF <.MEM_47>
    operator delete (_7);

  }
  bb_15 (preds = {bb_13 bb_14 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # .MEM_25 = PHI <.MEM_47(13), .MEM_48(14)>
    # DEBUG D#85 => &D#92->_M_impl
    # DEBUG this => D#85
    # DEBUG this => D#85
    # DEBUG this => D#85
    # .MEM_53 = VDEF <.MEM_25>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#96 => &D#297->_fullname
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # VUSE <.MEM_53>
    _17 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#2 => D#96
    # DEBUG this => D#2
    # DEBUG this => D#96
    _18 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.13836._M_local_buf;
    if (_17 != _18)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#72 => MEM[(struct basic_string *)D#96].D.13836._M_allocated_capacity
    # DEBUG D#71 => D#72
    # DEBUG this => D#96
    # DEBUG __size => D#71
    # DEBUG D#70 => D#71
    # DEBUG D#2 => D#96
    # DEBUG this => D#2
    # DEBUG this => D#96
    # DEBUG D#69 => &MEM[(struct basic_string *)D#96]._M_dataplus
    # DEBUG D#67 => D#69
    # DEBUG D#68 => D#70 + 1
    # DEBUG __p => _17
    # DEBUG __a => D#67
    # DEBUG __n => D#68
    # DEBUG D#66 => D#68
    # DEBUG D#65 => D#67
    # DEBUG D#63 => D#65
    # DEBUG D#64 => D#66
    # DEBUG __p => _17
    # DEBUG this => D#63
    # DEBUG D.35938 => D#64
    # .MEM_54 = VDEF <.MEM_53>
    operator delete (_17);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # .MEM_26 = PHI <.MEM_53(15), .MEM_54(16)>
    # DEBUG D#73 => &MEM[(struct basic_string *)D#96]._M_dataplus
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_58 = VDEF <.MEM_26>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#95 => &D#297->_name
    # DEBUG this => D#95
    # DEBUG this => D#95
    # DEBUG this => D#95
    # VUSE <.MEM_58>
    _19 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#2 => D#95
    # DEBUG this => D#2
    # DEBUG this => D#95
    _20 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.13836._M_local_buf;
    if (_19 != _20)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#72 => MEM[(struct basic_string *)D#95].D.13836._M_allocated_capacity
    # DEBUG D#71 => D#72
    # DEBUG this => D#95
    # DEBUG __size => D#71
    # DEBUG D#70 => D#71
    # DEBUG D#2 => D#95
    # DEBUG this => D#2
    # DEBUG this => D#95
    # DEBUG D#69 => &MEM[(struct basic_string *)D#95]._M_dataplus
    # DEBUG D#67 => D#69
    # DEBUG D#68 => D#70 + 1
    # DEBUG __p => _19
    # DEBUG __a => D#67
    # DEBUG __n => D#68
    # DEBUG D#66 => D#68
    # DEBUG D#65 => D#67
    # DEBUG D#63 => D#65
    # DEBUG D#64 => D#66
    # DEBUG __p => _19
    # DEBUG this => D#63
    # DEBUG D.35953 => D#64
    # .MEM_59 = VDEF <.MEM_58>
    operator delete (_19);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {bb_1 })
  {
    <bb 19>:
    # .MEM_27 = PHI <.MEM_58(17), .MEM_59(18)>
    # DEBUG D#73 => &MEM[(struct basic_string *)D#95]._M_dataplus
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_9 = VDEF <.MEM_27>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # .MEM_4 = VDEF <.MEM_9>
    operator delete (this_2(D));
    # VUSE <.MEM_4>
    return;

  }
  loop_1 (header = 4, latch = 7, niter = )
  {
    bb_4 (preds = {bb_3 bb_7 }, succs = {bb_5 bb_6 })
    {
      <bb 4>:
      # __first_11 = PHI <__first_12(3), __first_15(7)>
      # .MEM_74 = PHI <.MEM_3(3), .MEM_33(7)>
      # DEBUG __first => __first_11
      # DEBUG __r => __first_11
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#155
      # DEBUG __first => D#157
      # DEBUG __last => D#158
      # DEBUG D.33137 => NULL
      # DEBUG D#55 => D#157
      # DEBUG D#56 => D#158
      # DEBUG __first => D#55
      # DEBUG __last => D#56
      # DEBUG D#54 => D#56
      # DEBUG D#53 => D#55
      # DEBUG D#51 => D#53
      # DEBUG D#52 => D#54
      # DEBUG D.32641 => D#51
      # DEBUG D.32640 => D#52
      # DEBUG this => D#156
      # DEBUG D#154 => D#156->_M_impl._M_end_of_storage
      # DEBUG D#153 => (long int) D#154
      # VUSE <.MEM_74>
      _14 = MEM[(struct _Vector_base *)__first_11]._M_impl._M_start;
      # DEBUG D#152 => (long int) _14
      # DEBUG D#151 => D#153 - D#152
      # DEBUG D#150 => D#151 /[ex] 4
      # DEBUG D#149 => (long unsigned int) D#150
      # DEBUG this => D#156
      # DEBUG __p => _14
      # DEBUG __n => D#149
      if (_14 != 0B)
        goto <bb 5>;
      else
        goto <bb 6>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_6 })
    {
      <bb 5>:
      # DEBUG D#147 => &D#156->_M_impl
      # DEBUG D#145 => D#147
      # DEBUG D#146 => D#149
      # DEBUG __p => _14
      # DEBUG __a => D#145
      # DEBUG __n => D#146
      # DEBUG D#144 => D#146
      # DEBUG D#143 => D#145
      # DEBUG D#141 => D#143
      # DEBUG D#142 => D#144
      # DEBUG __p => _14
      # DEBUG this => D#141
      # DEBUG D.35895 => D#142
      # .MEM_28 = VDEF <.MEM_74>
      operator delete (_14);

    }
    bb_6 (preds = {bb_4 bb_5 }, succs = {bb_8 bb_7 })
    {
      <bb 6>:
      # .MEM_22 = PHI <.MEM_74(4), .MEM_28(5)>
      # DEBUG D#148 => &D#156->_M_impl
      # DEBUG this => D#148
      # DEBUG this => D#148
      # DEBUG this => D#148
      # .MEM_33 = VDEF <.MEM_22>
      MEM[(struct  &)__first_11] ={v} {CLOBBER};
      __first_15 = __first_11 + 24;
      # DEBUG __first => __first_15
      # DEBUG __first => __first_15
      if (_8 == __first_15)
        goto <bb 8>;
      else
        goto <bb 7>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_4 })
    {
      <bb 7>:
      goto <bb 4>;

    }
  }
}

Pass statistics:
----------------

virtual MatrixArbiter::~MatrixArbiter() (struct MatrixArbiterD.27650 * const thisD.28426)
{
  struct vectorD.27653 * __firstD.35878;
  struct ModuleD.26017 * * _7;
  struct vectorD.27653 * _8;
  struct N7Arbiter7entry_tED.26837 * _10;
  intD.9 * _14;
  charD.10 * const _17;
  const charD.10 * _18;
  charD.10 * const _19;
  const charD.10 * _20;
  struct vectorD.27653 * pretmp_29;
  struct vectorD.27653 * prephitmp_30;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.33347 => this_2(D)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.28444.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV13MatrixArbiterD.28448 + 16B];
  # DEBUG D#299ptD.0 => &this_2(D)->_matrixD.28400
  # DEBUG thisD.35875 => D#299ptD.0
  # DEBUG D#163ptD.0 => &D#299ptD.0->D.28398
  # DEBUG thisD.33343 => D#163ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _8 = MEM[(struct vectorD.27655 *)this_2(D) + 144B].D.28398._M_implD.27889._M_finishD.27892;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __first_12 = MEM[(struct vectorD.27655 *)this_2(D) + 144B].D.28398._M_implD.27889._M_startD.27891;
  # DEBUG __firstD.35878 => __first_12
  # DEBUG __lastD.35877 => _8
  # DEBUG __firstD.35883 => __first_12
  if (_8 == __first_12)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_11 = PHI <__first_12(3), __first_15(7)>
  # .MEM_74 = PHI <.MEM_3(3), .MEM_33(7)>
  # DEBUG __firstD.35883 => __first_11
  # DEBUG __rD.33173 => __first_11
  # DEBUG __pointerD.35884 => NULL
  # DEBUG thisD.35885 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.35886 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_74>
  # PT = nonlocal escaped 
  _14 = MEM[(struct _Vector_baseD.28492 *)__first_11]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _14
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35889 => D#156ptD.0
  # DEBUG __pD.35888 => _14
  # DEBUG __nD.35887 => D#149ptD.0
  if (_14 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 6355, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35893 => _14
  # DEBUG __aD.35891 => D#145ptD.0
  # DEBUG __nD.35892 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35896 => _14
  # DEBUG thisD.35894 => D#141ptD.0
  # DEBUG D.35895 => D#142ptD.0
  # .MEM_28 = VDEF <.MEM_74>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_14);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_22 = PHI <.MEM_74(4), .MEM_28(5)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35897 => D#148ptD.0
  # DEBUG thisD.35898 => D#148ptD.0
  # DEBUG thisD.35899 => D#148ptD.0
  # .MEM_33 = VDEF <.MEM_22>
  MEM[(struct  &)__first_11] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_15 = __first_11 + 24;
  # DEBUG __firstD.35883 => __first_15
  # DEBUG __firstD.35883 => __first_15
  if (_8 == __first_15)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 20, flags: (NEW)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       20 [100.0%]  (FALLTHRU)

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_33>
  pretmp_29 = MEM[(struct _Vector_baseD.27656 *)this_2(D) + 144B]._M_implD.27889._M_startD.27891;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 20, next block 10, flags: (NEW, REACHABLE)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_73 = PHI <.MEM_33(20), .MEM_3(2)>
  # PT = nonlocal escaped 
  # prephitmp_30 = PHI <pretmp_29(20), __first_12(2)>
  # DEBUG D#164ptD.0 => &D#299ptD.0->D.28398
  # DEBUG thisD.35900 => D#164ptD.0
  # DEBUG D#138ptD.0 => D#164ptD.0->_M_implD.27889._M_end_of_storageD.27893
  # DEBUG D#137ptD.0 => (long intD.12) D#138ptD.0
  # DEBUG D#300ptD.0 => MEM[(struct _Vector_baseD.27656 *)this_2(D) + 144B]._M_implD.27889._M_startD.27891
  # DEBUG D#136ptD.0 => (long intD.12) D#300ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0 - D#136ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0 /[ex] 24
  # DEBUG D#131ptD.0 => D#164ptD.0
  # DEBUG D#132ptD.0 => (long unsigned intD.14) D#134ptD.0
  # DEBUG __pD.35903 => D#300ptD.0
  # DEBUG thisD.35901 => D#131ptD.0
  # DEBUG __nD.35902 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  if (prephitmp_30 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#128ptD.0 => &D#129ptD.0->_M_implD.27889
  # DEBUG D#126ptD.0 => D#128ptD.0
  # DEBUG D#127ptD.0 => D#130ptD.0
  # DEBUG __pD.35907 => D#300ptD.0
  # DEBUG __aD.35905 => D#126ptD.0
  # DEBUG __nD.35906 => D#127ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG __pD.35910 => D#300ptD.0
  # DEBUG thisD.35908 => D#122ptD.0
  # DEBUG D.35909 => D#123ptD.0
  # .MEM_34 = VDEF <.MEM_73>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_30);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_73(9), .MEM_34(10)>
  # DEBUG D#133ptD.0 => &D#164ptD.0->_M_implD.27889
  # DEBUG thisD.35911 => D#133ptD.0
  # DEBUG thisD.35912 => D#133ptD.0
  # DEBUG thisD.35913 => D#133ptD.0
  # .MEM_39 = VDEF <.MEM_23>
  MEM[(struct  &)this_2(D) + 144] ={v} {CLOBBER};
  # DEBUG D#298ptD.0 => &this_2(D)->D.28444
  # DEBUG thisD.35859 => D#298ptD.0
  # .MEM_40 = VDEF <.MEM_39>
  MEM[(struct ArbiterD.26830 *)this_2(D)].D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV7ArbiterD.27647 + 16B];
  # DEBUG D#119ptD.0 => &D#298ptD.0->_requestD.27584
  # DEBUG thisD.35860 => D#119ptD.0
  # DEBUG D#115ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.32975 => D#115ptD.0
  # DEBUG D#118ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_finishD.27076
  # DEBUG D#117ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_startD.27075
  # DEBUG D#48ptD.0 => D#117ptD.0
  # DEBUG D#49ptD.0 => D#118ptD.0
  # DEBUG __firstD.32974 => D#48ptD.0
  # DEBUG __lastD.32973 => D#49ptD.0
  # DEBUG D.32972 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG __firstD.32608 => D#44ptD.0
  # DEBUG __lastD.32607 => D#45ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D.32597 => D#40ptD.0
  # DEBUG D.32596 => D#41ptD.0
  # DEBUG D#116ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.35861 => D#116ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0->_M_implD.27073._M_end_of_storageD.27077
  # DEBUG D#113ptD.0 => (long intD.12) D#114ptD.0
  # VUSE <.MEM_40>
  # PT = nonlocal escaped 
  _10 = MEM[(struct _Vector_baseD.26840 *)this_2(D) + 96B]._M_implD.27073._M_startD.27075;
  # DEBUG D#112ptD.0 => (long intD.12) _10
  # DEBUG D#111ptD.0 => D#113ptD.0 - D#112ptD.0
  # DEBUG D#110ptD.0 => D#111ptD.0 /[ex] 12
  # DEBUG D#107ptD.0 => D#116ptD.0
  # DEBUG D#108ptD.0 => (long unsigned intD.14) D#110ptD.0
  # DEBUG __pD.35864 => _10
  # DEBUG thisD.35862 => D#107ptD.0
  # DEBUG __nD.35863 => D#108ptD.0
  # DEBUG D#106ptD.0 => D#108ptD.0
  # DEBUG D#105ptD.0 => D#107ptD.0
  if (_10 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#104ptD.0 => &D#105ptD.0->_M_implD.27073
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#103ptD.0 => D#106ptD.0
  # DEBUG __pD.35868 => _10
  # DEBUG __aD.35866 => D#102ptD.0
  # DEBUG __nD.35867 => D#103ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0
  # DEBUG D#99ptD.0 => D#101ptD.0
  # DEBUG __pD.35871 => _10
  # DEBUG thisD.35869 => D#98ptD.0
  # DEBUG D.35870 => D#99ptD.0
  # .MEM_41 = VDEF <.MEM_40>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_10);
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_24 = PHI <.MEM_40(11), .MEM_41(12)>
  # DEBUG D#109ptD.0 => &D#116ptD.0->_M_implD.27073
  # DEBUG thisD.35872 => D#109ptD.0
  # DEBUG thisD.35873 => D#109ptD.0
  # DEBUG thisD.35874 => D#109ptD.0
  # .MEM_46 = VDEF <.MEM_24>
  MEM[(struct  &)this_2(D) + 96] ={v} {CLOBBER};
  # DEBUG D#297ptD.0 => &MEM[(struct ArbiterD.26830 *)this_2(D)].D.27639
  # DEBUG thisD.35914 => D#297ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  MEM[(struct ModuleD.26017 *)this_2(D)]._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV6ModuleD.26817 + 16B];
  # DEBUG D#97ptD.0 => &D#297ptD.0->_childrenD.26767
  # DEBUG thisD.35915 => D#97ptD.0
  # DEBUG D#91ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.32848 => D#91ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_finishD.26259
  # DEBUG D#93ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_startD.26258
  # DEBUG D#37ptD.0 => D#93ptD.0
  # DEBUG D#38ptD.0 => D#94ptD.0
  # DEBUG __firstD.32847 => D#37ptD.0
  # DEBUG __lastD.32846 => D#38ptD.0
  # DEBUG D.32845 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG __firstD.32570 => D#33ptD.0
  # DEBUG __lastD.32569 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.32559 => D#29ptD.0
  # DEBUG D.32558 => D#30ptD.0
  # DEBUG D#92ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.35916 => D#92ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0->_M_implD.26256._M_end_of_storageD.26260
  # DEBUG D#89ptD.0 => (long intD.12) D#90ptD.0
  # VUSE <.MEM_47>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.26023 *)this_2(D) + 72B]._M_implD.26256._M_startD.26258;
  # DEBUG D#88ptD.0 => (long intD.12) _7
  # DEBUG D#87ptD.0 => D#89ptD.0 - D#88ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0 /[ex] 8
  # DEBUG D#83ptD.0 => D#92ptD.0
  # DEBUG D#84ptD.0 => (long unsigned intD.14) D#86ptD.0
  # DEBUG __pD.35919 => _7
  # DEBUG thisD.35917 => D#83ptD.0
  # DEBUG __nD.35918 => D#84ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  if (_7 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#80ptD.0 => &D#81ptD.0->_M_implD.26256
  # DEBUG D#78ptD.0 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#82ptD.0
  # DEBUG __pD.35923 => _7
  # DEBUG __aD.35921 => D#78ptD.0
  # DEBUG __nD.35922 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0
  # DEBUG D#76ptD.0 => D#78ptD.0
  # DEBUG D#74ptD.0 => D#76ptD.0
  # DEBUG D#75ptD.0 => D#77ptD.0
  # DEBUG __pD.35926 => _7
  # DEBUG thisD.35924 => D#74ptD.0
  # DEBUG D.35925 => D#75ptD.0
  # .MEM_48 = VDEF <.MEM_47>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_25 = PHI <.MEM_47(13), .MEM_48(14)>
  # DEBUG D#85ptD.0 => &D#92ptD.0->_M_implD.26256
  # DEBUG thisD.35927 => D#85ptD.0
  # DEBUG thisD.35928 => D#85ptD.0
  # DEBUG thisD.35929 => D#85ptD.0
  # .MEM_53 = VDEF <.MEM_25>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#96ptD.0 => &D#297ptD.0->_fullnameD.26020
  # DEBUG thisD.35930 => D#96ptD.0
  # DEBUG thisD.35931 => D#96ptD.0
  # DEBUG thisD.35940 => D#96ptD.0
  # VUSE <.MEM_53>
  # PT = nonlocal escaped 
  _17 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.35941 => D#96ptD.0
  # PT = nonlocal 
  _18 = &MEM[(const struct basic_stringD.8425 *)this_2(D) + 40B].D.13836._M_local_bufD.13838;
  if (_17 != _18)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 628, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#96ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.35933 => D#96ptD.0
  # DEBUG __sizeD.35932 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#96ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.35936 => _17
  # DEBUG __aD.35934 => D#67ptD.0
  # DEBUG __nD.35935 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.35939 => _17
  # DEBUG thisD.35937 => D#63ptD.0
  # DEBUG D.35938 => D#64ptD.0
  # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_53(15), .MEM_54(16)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG thisD.35942 => D#73ptD.0
  # DEBUG thisD.35943 => D#73ptD.0
  # DEBUG thisD.35944 => D#73ptD.0
  # .MEM_58 = VDEF <.MEM_26>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#95ptD.0 => &D#297ptD.0->_nameD.26019
  # DEBUG thisD.35945 => D#95ptD.0
  # DEBUG thisD.35946 => D#95ptD.0
  # DEBUG thisD.35955 => D#95ptD.0
  # VUSE <.MEM_58>
  # PT = nonlocal escaped 
  _19 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.35956 => D#95ptD.0
  # PT = nonlocal 
  _20 = &MEM[(const struct basic_stringD.8425 *)this_2(D) + 8B].D.13836._M_local_bufD.13838;
  if (_19 != _20)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 705, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#95ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.35948 => D#95ptD.0
  # DEBUG __sizeD.35947 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#95ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.35951 => _19
  # DEBUG __aD.35949 => D#67ptD.0
  # DEBUG __nD.35950 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.35954 => _19
  # DEBUG thisD.35952 => D#63ptD.0
  # DEBUG D.35953 => D#64ptD.0
  # .MEM_59 = VDEF <.MEM_58>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_58(17), .MEM_59(18)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG thisD.35957 => D#73ptD.0
  # DEBUG thisD.35958 => D#73ptD.0
  # DEBUG thisD.35959 => D#73ptD.0
  # .MEM_9 = VDEF <.MEM_27>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_9>
  # USE = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.28448 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual void MatrixArbiter::PrintState() const (_ZNK13MatrixArbiter10PrintStateEv, funcdef_no=1368, decl_uid=28407, cgraph_uid=380, symbol_order=381)


Pass statistics:
----------------

virtual void MatrixArbiter::PrintState() const (const struct MatrixArbiterD.27650 * const thisD.29252)
{
  char_typeD.20165 D.36021;
  charD.10 __cD.36020;
  char_typeD.20165 D.36018;
  charD.10 __cD.36017;
  char_typeD.23244 D.36015;
  struct basic_ostreamD.9736 & D.36009;
  char_typeD.20165 D.36006;
  charD.10 __cD.36005;
  char_typeD.20165 D.36003;
  charD.10 __cD.36002;
  char_typeD.23244 D.36000;
  struct basic_ostreamD.9736 & D.35994;
  struct basic_ostreamD.9736 & D.35991;
  char_typeD.20165 D.35987;
  charD.10 __cD.35986;
  char_typeD.20165 D.35984;
  charD.10 __cD.35983;
  char_typeD.23244 D.35981;
  struct basic_ostreamD.9736 & D.35975;
  intD.9 cD.29255;
  intD.9 rD.29254;
  intD.9 _7;
  intD.9 _8;
  long unsigned intD.14 _9;
  intD.9 _11;
  struct basic_ostreamD.9736 & _13;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _14;
  struct vectorD.27653 * const _18;
  intD.9 * const _19;
  long unsigned intD.14 _20;
  const intD.9 & _21;
  const struct vectorD.27653 & _24;
  const struct __ctype_typeD.23249 * _25;
  const struct __ctype_typeD.23249 * _26;
  const struct __ctype_typeD.23249 * _27;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _28;
  long intD.12 _29;
  sizetype _30;
  struct basic_iosD.9730 * _31;
  struct basic_ostreamD.9736 & _34;
  charD.10 _36;
  char_typeD.20165 _39;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _44;
  intD.9 (*__vtbl_ptr_typeD.2760) () _45;
  voidD.45 * PROF_49;
  intD.9 pretmp_50;
  char_typeD.20165 _51;
  intD.9 pretmp_53;
  intD.9 pretmp_54;
  intD.9 pretmp_55;
  long intD.12 _56;
  sizetype _57;
  struct basic_iosD.9730 * _58;
  struct basic_ostreamD.9736 & _61;
  charD.10 _63;
  intD.9 prephitmp_64;
  const intD.9 prephitmp_65;
  char_typeD.20165 _66;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _71;
  intD.9 (*__vtbl_ptr_typeD.2760) () _72;
  voidD.45 * PROF_76;
  char_typeD.20165 _78;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _81;
  long intD.12 _82;
  sizetype _83;
  struct basic_iosD.9730 * _84;
  struct basic_ostreamD.9736 & _87;
  intD.9 _88;
  charD.10 _89;
  intD.9 pretmp_90;
  intD.9 pretmp_91;
  char_typeD.20165 _92;
  intD.9 prephitmp_93;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _97;
  intD.9 (*__vtbl_ptr_typeD.2760) () _98;
  long unsigned intD.14 pretmp_99;
  voidD.45 * PROF_102;
  char_typeD.20165 _104;
  intD.9 prephitmp_112;
  long unsigned intD.14 pretmp_131;

;;   basic block 2, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.32401 => &_ZSt4coutD.26000
  # DEBUG __sD.32402 => "Priority Matrix: "
  # DEBUG __sD.32403 => "Priority Matrix: "
  # .MEM_17 = VDEF <.MEM_5(D)>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (&_ZSt4coutD.26000, "Priority Matrix: ", 17);
  # DEBUG thisD.32398 => &_ZSt4coutD.26000
  # DEBUG __pfD.32399 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.35973 => &_ZSt4coutD.26000
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _28 = _ZSt4coutD.26000._vptr.basic_ostreamD.24032;
  # VUSE <.MEM_17>
  _29 = MEM[(long intD.12 *)_28 + -24B];
  # RANGE [0, 18446744073709551615]
  _30 = (sizetype) _29;
  # PT = { D.26000 } (nonlocal, escaped)
  _31 = &_ZSt4coutD.26000 + _30;
  # DEBUG thisD.35976 => _31
  # DEBUG __cD.35977 => 10
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _25 = MEM[(const struct basic_iosD.9730 *)_31]._M_ctypeD.23256;
  # DEBUG __fD.35978 => _25
  if (_25 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_136 = PHI <.MEM_17(2), .MEM_132(12), .MEM_133(9)>
  # .MEM_138 = VDEF <.MEM_136>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2825 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.35980 => _25
  # DEBUG __cD.35979 => 10
  # VUSE <.MEM_17>
  _36 = MEM[(const struct ctypeD.10037 *)_25]._M_widen_okD.20171;
  if (_36 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 55, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_17>
  _39 = MEM[(const struct ctypeD.10037 *)_25]._M_widenD.20172[10];
  pretmp_50 = (intD.9) _39;
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 35, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.35982 => _25
  # DEBUG __cD.35983 => 10
  # .MEM_110 = VDEF <.MEM_17>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_25);
  # VUSE <.MEM_110>
  # PT = nonlocal escaped 
  _44 = MEM[(const struct ctypeD.10037 *)_25].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_110>
  # PT = nonlocal escaped 
  _45 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_44 + 48B];
  # PT = anything 
  PROF_49 = [obj_type_ref] OBJ_TYPE_REF(_45;(const struct ctypeD.10037)_25->6);
  if (PROF_49 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_111 = VDEF <.MEM_110>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _51 = OBJ_TYPE_REF(_45;(const struct ctypeD.10037)_25->6) (_25, 10);
  pretmp_53 = (intD.9) _51;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_17(5), .MEM_110(6), .MEM_111(7)>
  # RANGE [-128, 127]
  # prephitmp_112 = PHI <pretmp_50(5), 10(6), pretmp_53(7)>
  # .MEM_115 = VDEF <.MEM_75>
  # PT = nonlocal escaped 
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _34 = _ZNSo3putEcD.23967 (&_ZSt4coutD.26000, prephitmp_112);
  # DEBUG __osD.35974 => _34
  # .MEM_116 = VDEF <.MEM_115>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_34);
  # DEBUG rD.29254 => 0
  # VUSE <.MEM_116>
  _88 = this_6(D)->D.28444._sizeD.27585;
  if (_88 <= 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_133 = PHI <.MEM_116(8), .MEM_126(20)>
  # DEBUG thisD.32416 => &_ZSt4coutD.26000
  # DEBUG __pfD.32417 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.36007 => &_ZSt4coutD.26000
  # VUSE <.MEM_133>
  # PT = nonlocal escaped 
  _81 = _ZSt4coutD.26000._vptr.basic_ostreamD.24032;
  # VUSE <.MEM_133>
  _82 = MEM[(long intD.12 *)_81 + -24B];
  # RANGE [0, 18446744073709551615]
  _83 = (sizetype) _82;
  # PT = { D.26000 } (nonlocal, escaped)
  _84 = &_ZSt4coutD.26000 + _83;
  # DEBUG thisD.36010 => _84
  # DEBUG __cD.36011 => 10
  # VUSE <.MEM_133>
  # PT = nonlocal escaped 
  _27 = MEM[(const struct basic_iosD.9730 *)_84]._M_ctypeD.23256;
  # DEBUG __fD.36012 => _27
  if (_27 == 0B)
    goto <bb 3>;
  else
    goto <bb 22>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_101 = PHI <.MEM_116(10), .MEM_126(21)>
  # r_48 = PHI <0(10), r_16(21)>
  # prephitmp_65 = PHI <_88(10), _7(21)>
  # DEBUG rD.29254 => r_48
  # DEBUG cD.29255 => 0
  if (prephitmp_65 <= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_132 = PHI <.MEM_101(11), .MEM_118(14)>
  # DEBUG thisD.32413 => &_ZSt4coutD.26000
  # DEBUG __pfD.32414 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.35992 => &_ZSt4coutD.26000
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _14 = _ZSt4coutD.26000._vptr.basic_ostreamD.24032;
  # VUSE <.MEM_132>
  _56 = MEM[(long intD.12 *)_14 + -24B];
  # RANGE [0, 18446744073709551615]
  _57 = (sizetype) _56;
  # PT = { D.26000 } (nonlocal, escaped)
  _58 = &_ZSt4coutD.26000 + _57;
  # DEBUG thisD.35995 => _58
  # DEBUG __cD.35996 => 10
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _26 = MEM[(const struct basic_iosD.9730 *)_58]._M_ctypeD.23256;
  # DEBUG __fD.35997 => _26
  if (_26 == 0B)
    goto <bb 3>;
  else
    goto <bb 16>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_99 = (long unsigned intD.14) r_48;
  pretmp_131 = pretmp_99 * 24;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # c_41 = PHI <0(13), c_15(15)>
  # .MEM_108 = PHI <.MEM_101(13), .MEM_118(15)>
  # DEBUG cD.29255 => c_41
  # RANGE [0, 18446744073709551615]
  _9 = (long unsigned intD.14) c_41;
  # DEBUG D#14ptD.0 => &this_6(D)->_matrixD.28400
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _18 = MEM[(struct vectorD.27653 * *)this_6(D) + 144B];
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG __nD.32410 => (long unsigned intD.14) r_48
  # DEBUG thisD.32411 => D#12ptD.0
  # PT = nonlocal escaped 
  _24 = _18 + pretmp_131;
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _19 = MEM[(intD.9 * *)_24];
  # DEBUG __nD.32406 => _9
  # DEBUG thisD.32407 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _20 = _9 * 4;
  # PT = nonlocal escaped 
  _21 = _19 + _20;
  # VUSE <.MEM_108>
  _11 = *_21;
  # .MEM_12 = VDEF <.MEM_108>
  # PT = nonlocal escaped 
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _13 = _ZNSolsEiD.23940 (&_ZSt4coutD.26000, _11);
  # DEBUG __outD.35988 => _13
  # DEBUG __sD.35989 => " "
  # DEBUG __sD.35990 => " "
  # .MEM_118 = VDEF <.MEM_12>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (_13, " ", 1);
  c_15 = c_41 + 1;
  # DEBUG cD.29255 => c_15
  # DEBUG cD.29255 => c_15
  # VUSE <.MEM_118>
  _8 = this_6(D)->D.28444._sizeD.27585;
  if (_8 <= c_15)
    goto <bb 12>;
  else
    goto <bb 15>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.35999 => _26
  # DEBUG __cD.35998 => 10
  # VUSE <.MEM_132>
  _63 = MEM[(const struct ctypeD.10037 *)_26]._M_widen_okD.20171;
  if (_63 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 549, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_132>
  _66 = MEM[(const struct ctypeD.10037 *)_26]._M_widenD.20172[10];
  pretmp_90 = (intD.9) _66;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 351, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36001 => _26
  # DEBUG __cD.36002 => 10
  # .MEM_120 = VDEF <.MEM_132>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_26);
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _71 = MEM[(const struct ctypeD.10037 *)_26].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _72 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_71 + 48B];
  # PT = anything 
  PROF_76 = [obj_type_ref] OBJ_TYPE_REF(_72;(const struct ctypeD.10037)_26->6);
  if (PROF_76 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 20>;
  else
    goto <bb 19>;
;;    succ:       20 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 70, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_121 = VDEF <.MEM_120>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _78 = OBJ_TYPE_REF(_72;(const struct ctypeD.10037)_26->6) (_26, 10);
  pretmp_91 = (intD.9) _78;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_107 = PHI <.MEM_132(17), .MEM_120(18), .MEM_121(19)>
  # RANGE [-128, 127]
  # prephitmp_93 = PHI <pretmp_90(17), 10(18), pretmp_91(19)>
  # .MEM_125 = VDEF <.MEM_107>
  # PT = nonlocal escaped 
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _61 = _ZNSo3putEcD.23967 (&_ZSt4coutD.26000, prephitmp_93);
  # DEBUG __osD.35993 => _61
  # .MEM_126 = VDEF <.MEM_125>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_61);
  r_16 = r_48 + 1;
  # DEBUG rD.29254 => r_16
  # DEBUG rD.29254 => r_16
  # VUSE <.MEM_126>
  _7 = this_6(D)->D.28444._sizeD.27585;
  if (_7 <= r_16)
    goto <bb 9>;
  else
    goto <bb 21>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36014 => _27
  # DEBUG __cD.36013 => 10
  # VUSE <.MEM_133>
  _89 = MEM[(const struct ctypeD.10037 *)_27]._M_widen_okD.20171;
  if (_89 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 54, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_133>
  _92 = MEM[(const struct ctypeD.10037 *)_27]._M_widenD.20172[10];
  pretmp_54 = (intD.9) _92;
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 35, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36016 => _27
  # DEBUG __cD.36017 => 10
  # .MEM_129 = VDEF <.MEM_133>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_27);
  # VUSE <.MEM_129>
  # PT = nonlocal escaped 
  _97 = MEM[(const struct ctypeD.10037 *)_27].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_129>
  # PT = nonlocal escaped 
  _98 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_97 + 48B];
  # PT = anything 
  PROF_102 = [obj_type_ref] OBJ_TYPE_REF(_98;(const struct ctypeD.10037)_27->6);
  if (PROF_102 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 26>;
  else
    goto <bb 25>;
;;    succ:       26 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_130 = VDEF <.MEM_129>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _104 = OBJ_TYPE_REF(_98;(const struct ctypeD.10037)_27->6) (_27, 10);
  pretmp_55 = (intD.9) _104;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 25, next block 1, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_109 = PHI <.MEM_133(23), .MEM_129(24), .MEM_130(25)>
  # RANGE [-128, 127]
  # prephitmp_64 = PHI <pretmp_54(23), 10(24), pretmp_55(25)>
  # .MEM_134 = VDEF <.MEM_109>
  # PT = nonlocal escaped 
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _87 = _ZNSo3putEcD.23967 (&_ZSt4coutD.26000, prephitmp_64);
  # DEBUG __osD.36008 => _87
  # .MEM_135 = VDEF <.MEM_134>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_87);
  # VUSE <.MEM_135>
  return;
;;    succ:       EXIT [100.0%] 

}



Updating SSA:
Registering new PHI nodes in block #14
Updating SSA information for statement std::__ostream_insert<char, std::char_traits<char> > (_13, " ", 1);
Updating SSA information for statement _8 = this_6(D)->D.28444._size;
Registering new PHI nodes in block #15
Registering new PHI nodes in block #27

DFA Statistics for virtual void MatrixArbiter::PrintState() const

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            112        896b
DEF operands                             57        456b
VUSE operands                            44        352b
VDEF operands                            16        128b
PHI nodes                                15       1560b
PHI arguments                            36       1728b
---------------------------------------------------------
Total memory used by DFA/SSA data                 5120b
---------------------------------------------------------

Average number of arguments per PHI node: 2.4 (max: 3)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_95 -> { .MEM_118 }
Incremental SSA update started at block: 14
Number of blocks in CFG: 28
Number of blocks to update: 3 ( 11%)
Affected blocks: 14 15 27


Creating dr for MEM[(const struct ctype *)_25]._M_widen_ok
analyze_innermost: success.
	base_address: _25
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_25]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_25]._M_widen[10]
analyze_innermost: success.
	base_address: _25
	offset from base address: 0
	constant offset from base address: 67
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_25]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for MEM[(int * *)_24]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_24]
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for *_21
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_21
Creating dr for cout._vptr.basic_ostream
analyze_innermost: success.
	base_address: &cout
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ostream *)&cout]
	Access function 0: 0
Creating dr for cout._vptr.basic_ostream
analyze_innermost: success.
	base_address: &cout
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ostream *)&cout]
	Access function 0: 0
Creating dr for MEM[(long int *)_14 + -24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long int *)_14 + -24B]
Creating dr for MEM[(long int *)_14 + -24B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(long int *)_14 + -24B]
Creating dr for MEM[(const struct basic_ios *)_58]._M_ctype
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct basic_ios *)_58]
	Access function 0: 1920
Creating dr for MEM[(const struct basic_ios *)_58]._M_ctype
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct basic_ios *)_58]
	Access function 0: 1920
Creating dr for MEM[(const struct ctype *)_26]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_26]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_26]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_26]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_26]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_26]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_26]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_26]
	Access function 0: 10
	Access function 1: 456
Creating dr for cout._vptr.basic_ostream
analyze_innermost: success.
	base_address: &cout
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct basic_ostream *)&cout]
	Access function 0: 0
Creating dr for MEM[(long int *)_81 + -24B]
analyze_innermost: success.
	base_address: _81
	offset from base address: 0
	constant offset from base address: -24(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(long int *)_81 + -24B]
Creating dr for MEM[(const struct basic_ios *)_84]._M_ctype
analyze_innermost: success.
	base_address: &cout + (sizetype) _82
	offset from base address: 0
	constant offset from base address: 240
	step: 0
	aligned to: 256
	base_object: MEM[(const struct basic_ios *)_84]
	Access function 0: 1920
Creating dr for MEM[(const struct ctype *)_27]._M_widen_ok
analyze_innermost: success.
	base_address: _27
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_27]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_27]._M_widen[10]
analyze_innermost: success.
	base_address: _27
	offset from base address: 0
	constant offset from base address: 67
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_27]
	Access function 0: 10
	Access function 1: 456

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:28, LOOPS:2, CONDITIONS:13, STMTS:133)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG __out => &cout
    # DEBUG __s => "Priority Matrix: "
    # DEBUG __s => "Priority Matrix: "
    # .MEM_17 = VDEF <.MEM_5(D)>
    std::__ostream_insert<char, std::char_traits<char> > (&cout, "Priority Matrix: ", 17);
    # DEBUG this => &cout
    # DEBUG __pf => endl
    # DEBUG __os => &cout
    # VUSE <.MEM_17>
    _28 = cout._vptr.basic_ostream;
    # VUSE <.MEM_17>
    _29 = MEM[(long int *)_28 + -24B];
    _30 = (sizetype) _29;
    _31 = &cout + _30;
    # DEBUG this => _31
    # DEBUG __c => 10
    # VUSE <.MEM_17>
    _25 = MEM[(const struct basic_ios *)_31]._M_ctype;
    # DEBUG __f => _25
    if (_25 == 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 bb_12 bb_9 }, succs = {})
  {
    <bb 3>:
    # .MEM_136 = PHI <.MEM_17(2), .MEM_132(12), .MEM_133(9)>
    # .MEM_138 = VDEF <.MEM_136>
    std::__throw_bad_cast ();

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # DEBUG this => _25
    # DEBUG __c => 10
    # VUSE <.MEM_17>
    _36 = MEM[(const struct ctype *)_25]._M_widen_ok;
    if (_36 != 0)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_8 })
  {
    <bb 5>:
    # VUSE <.MEM_17>
    _39 = MEM[(const struct ctype *)_25]._M_widen[10];
    pretmp_50 = (int) _39;
    goto <bb 8>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_8 bb_7 })
  {
    <bb 6>:
    # DEBUG this => _25
    # DEBUG __c => 10
    # .MEM_110 = VDEF <.MEM_17>
    std::ctype<char>::_M_widen_init (_25);
    # VUSE <.MEM_110>
    _44 = MEM[(const struct ctype *)_25].D.20312._vptr.facet;
    # VUSE <.MEM_110>
    _45 = MEM[(int (*__vtbl_ptr_type) () *)_44 + 48B];
    PROF_49 = [obj_type_ref] OBJ_TYPE_REF(_45;(const struct ctype)_25->6);
    if (PROF_49 == do_widen)
      goto <bb 8>;
    else
      goto <bb 7>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    # .MEM_111 = VDEF <.MEM_110>
    _51 = OBJ_TYPE_REF(_45;(const struct ctype)_25->6) (_25, 10);
    pretmp_53 = (int) _51;

  }
  bb_8 (preds = {bb_5 bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_75 = PHI <.MEM_17(5), .MEM_110(6), .MEM_111(7)>
    # prephitmp_112 = PHI <pretmp_50(5), 10(6), pretmp_53(7)>
    # .MEM_115 = VDEF <.MEM_75>
    _34 = std::basic_ostream<char>::put (&cout, prephitmp_112);
    # DEBUG __os => _34
    # .MEM_116 = VDEF <.MEM_115>
    std::basic_ostream<char>::flush (_34);
    # DEBUG r => 0
    # VUSE <.MEM_116>
    _88 = this_6(D)->D.28444._size;
    if (_88 <= 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 bb_20 }, succs = {bb_3 bb_22 })
  {
    <bb 9>:
    # .MEM_133 = PHI <.MEM_116(8), .MEM_126(20)>
    # DEBUG this => &cout
    # DEBUG __pf => endl
    # DEBUG __os => &cout
    # VUSE <.MEM_133>
    _81 = cout._vptr.basic_ostream;
    # VUSE <.MEM_133>
    _82 = MEM[(long int *)_81 + -24B];
    _83 = (sizetype) _82;
    _84 = &cout + _83;
    # DEBUG this => _84
    # DEBUG __c => 10
    # VUSE <.MEM_133>
    _27 = MEM[(const struct basic_ios *)_84]._M_ctype;
    # DEBUG __f => _27
    if (_27 == 0B)
      goto <bb 3>;
    else
      goto <bb 22>;

  }
  bb_10 (preds = {bb_8 }, succs = {bb_11 })
  {
    <bb 10>:

  }
  bb_22 (preds = {bb_9 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # DEBUG this => _27
    # DEBUG __c => 10
    # VUSE <.MEM_133>
    _89 = MEM[(const struct ctype *)_27]._M_widen_ok;
    if (_89 != 0)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 }, succs = {bb_26 })
  {
    <bb 23>:
    # VUSE <.MEM_133>
    _92 = MEM[(const struct ctype *)_27]._M_widen[10];
    pretmp_54 = (int) _92;
    goto <bb 26>;

  }
  bb_24 (preds = {bb_22 }, succs = {bb_26 bb_25 })
  {
    <bb 24>:
    # DEBUG this => _27
    # DEBUG __c => 10
    # .MEM_129 = VDEF <.MEM_133>
    std::ctype<char>::_M_widen_init (_27);
    # VUSE <.MEM_129>
    _97 = MEM[(const struct ctype *)_27].D.20312._vptr.facet;
    # VUSE <.MEM_129>
    _98 = MEM[(int (*__vtbl_ptr_type) () *)_97 + 48B];
    PROF_102 = [obj_type_ref] OBJ_TYPE_REF(_98;(const struct ctype)_27->6);
    if (PROF_102 == do_widen)
      goto <bb 26>;
    else
      goto <bb 25>;

  }
  bb_25 (preds = {bb_24 }, succs = {bb_26 })
  {
    <bb 25>:
    # .MEM_130 = VDEF <.MEM_129>
    _104 = OBJ_TYPE_REF(_98;(const struct ctype)_27->6) (_27, 10);
    pretmp_55 = (int) _104;

  }
  bb_26 (preds = {bb_23 bb_24 bb_25 }, succs = {bb_1 })
  {
    <bb 26>:
    # .MEM_109 = PHI <.MEM_133(23), .MEM_129(24), .MEM_130(25)>
    # prephitmp_64 = PHI <pretmp_54(23), 10(24), pretmp_55(25)>
    # .MEM_134 = VDEF <.MEM_109>
    _87 = std::basic_ostream<char>::put (&cout, prephitmp_64);
    # DEBUG __os => _87
    # .MEM_135 = VDEF <.MEM_134>
    std::basic_ostream<char>::flush (_87);
    # VUSE <.MEM_135>
    return;

  }
  loop_1 (header = 11, latch = 21, niter = , upper_bound = 2147483647)
  {
    bb_11 (preds = {bb_10 bb_21 }, succs = {bb_12 bb_13 })
    {
      <bb 11>:
      # .MEM_101 = PHI <.MEM_116(10), .MEM_126(21)>
      # r_48 = PHI <0(10), r_16(21)>
      # prephitmp_65 = PHI <_88(10), _7(21)>
      # DEBUG r => r_48
      # DEBUG c => 0
      if (prephitmp_65 <= 0)
        goto <bb 12>;
      else
        goto <bb 13>;

    }
    bb_12 (preds = {bb_11 bb_27 }, succs = {bb_3 bb_16 })
    {
      <bb 12>:
      # .MEM_132 = PHI <.MEM_101(11), .MEM_95(27)>
      # DEBUG this => &cout
      # DEBUG __pf => endl
      # DEBUG __os => &cout
      # VUSE <.MEM_132>
      _14 = cout._vptr.basic_ostream;
      # VUSE <.MEM_132>
      _56 = MEM[(long int *)_14 + -24B];
      _57 = (sizetype) _56;
      _58 = &cout + _57;
      # DEBUG this => _58
      # DEBUG __c => 10
      # VUSE <.MEM_132>
      _26 = MEM[(const struct basic_ios *)_58]._M_ctype;
      # DEBUG __f => _26
      if (_26 == 0B)
        goto <bb 3>;
      else
        goto <bb 16>;

    }
    bb_13 (preds = {bb_11 }, succs = {bb_14 })
    {
      <bb 13>:
      pretmp_99 = (long unsigned int) r_48;
      pretmp_131 = pretmp_99 * 24;

    }
    bb_27 (preds = {bb_14 }, succs = {bb_12 })
    {
      <bb 27>:
      # .MEM_95 = PHI <.MEM_118(14)>
      goto <bb 12>;

    }
    bb_16 (preds = {bb_12 }, succs = {bb_17 bb_18 })
    {
      <bb 16>:
      # DEBUG this => _26
      # DEBUG __c => 10
      # VUSE <.MEM_132>
      _63 = MEM[(const struct ctype *)_26]._M_widen_ok;
      if (_63 != 0)
        goto <bb 17>;
      else
        goto <bb 18>;

    }
    bb_17 (preds = {bb_16 }, succs = {bb_20 })
    {
      <bb 17>:
      # VUSE <.MEM_132>
      _66 = MEM[(const struct ctype *)_26]._M_widen[10];
      pretmp_90 = (int) _66;
      goto <bb 20>;

    }
    bb_18 (preds = {bb_16 }, succs = {bb_20 bb_19 })
    {
      <bb 18>:
      # DEBUG this => _26
      # DEBUG __c => 10
      # .MEM_120 = VDEF <.MEM_132>
      std::ctype<char>::_M_widen_init (_26);
      # VUSE <.MEM_120>
      _71 = MEM[(const struct ctype *)_26].D.20312._vptr.facet;
      # VUSE <.MEM_120>
      _72 = MEM[(int (*__vtbl_ptr_type) () *)_71 + 48B];
      PROF_76 = [obj_type_ref] OBJ_TYPE_REF(_72;(const struct ctype)_26->6);
      if (PROF_76 == do_widen)
        goto <bb 20>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_18 }, succs = {bb_20 })
    {
      <bb 19>:
      # .MEM_121 = VDEF <.MEM_120>
      _78 = OBJ_TYPE_REF(_72;(const struct ctype)_26->6) (_26, 10);
      pretmp_91 = (int) _78;

    }
    bb_20 (preds = {bb_17 bb_18 bb_19 }, succs = {bb_9 bb_21 })
    {
      <bb 20>:
      # .MEM_107 = PHI <.MEM_132(17), .MEM_120(18), .MEM_121(19)>
      # prephitmp_93 = PHI <pretmp_90(17), 10(18), pretmp_91(19)>
      # .MEM_125 = VDEF <.MEM_107>
      _61 = std::basic_ostream<char>::put (&cout, prephitmp_93);
      # DEBUG __os => _61
      # .MEM_126 = VDEF <.MEM_125>
      std::basic_ostream<char>::flush (_61);
      r_16 = r_48 + 1;
      # DEBUG r => r_16
      # DEBUG r => r_16
      # VUSE <.MEM_126>
      _7 = this_6(D)->D.28444._size;
      if (_7 <= r_16)
        goto <bb 9>;
      else
        goto <bb 21>;

    }
    bb_21 (preds = {bb_20 }, succs = {bb_11 })
    {
      <bb 21>:
      goto <bb 11>;

    }
    loop_2 (header = 14, latch = 15, niter = , upper_bound = 2147483647)
    {
      bb_14 (preds = {bb_13 bb_15 }, succs = {bb_27 bb_15 })
      {
        <bb 14>:
        # c_41 = PHI <0(13), c_15(15)>
        # .MEM_108 = PHI <.MEM_101(13), .MEM_118(15)>
        # DEBUG c => c_41
        _9 = (long unsigned int) c_41;
        # DEBUG D#14 => &this_6(D)->_matrix
        # VUSE <.MEM_108>
        _18 = MEM[(struct vector * *)this_6(D) + 144B];
        # DEBUG D#12 => D#14
        # DEBUG __n => (long unsigned int) r_48
        # DEBUG this => D#12
        _24 = _18 + pretmp_131;
        # VUSE <.MEM_108>
        _19 = MEM[(int * *)_24];
        # DEBUG __n => _9
        # DEBUG this => D#13
        _20 = _9 * 4;
        _21 = _19 + _20;
        # VUSE <.MEM_108>
        _11 = *_21;
        # .MEM_12 = VDEF <.MEM_108>
        _13 = std::basic_ostream<char>::operator<< (&cout, _11);
        # DEBUG __out => _13
        # DEBUG __s => " "
        # DEBUG __s => " "
        # .MEM_118 = VDEF <.MEM_12>
        std::__ostream_insert<char, std::char_traits<char> > (_13, " ", 1);
        c_15 = c_41 + 1;
        # DEBUG c => c_15
        # DEBUG c => c_15
        # VUSE <.MEM_118>
        _8 = this_6(D)->D.28444._size;
        if (_8 <= c_15)
          goto <bb 27>;
        else
          goto <bb 15>;

      }
      bb_15 (preds = {bb_14 }, succs = {bb_14 })
      {
        <bb 15>:
        goto <bb 14>;

      }
    }
  }
}

Pass statistics:
----------------

virtual void MatrixArbiter::PrintState() const (const struct MatrixArbiterD.27650 * const thisD.29252)
{
  char_typeD.20165 D.36021;
  charD.10 __cD.36020;
  char_typeD.20165 D.36018;
  charD.10 __cD.36017;
  char_typeD.23244 D.36015;
  struct basic_ostreamD.9736 & D.36009;
  char_typeD.20165 D.36006;
  charD.10 __cD.36005;
  char_typeD.20165 D.36003;
  charD.10 __cD.36002;
  char_typeD.23244 D.36000;
  struct basic_ostreamD.9736 & D.35994;
  struct basic_ostreamD.9736 & D.35991;
  char_typeD.20165 D.35987;
  charD.10 __cD.35986;
  char_typeD.20165 D.35984;
  charD.10 __cD.35983;
  char_typeD.23244 D.35981;
  struct basic_ostreamD.9736 & D.35975;
  intD.9 cD.29255;
  intD.9 rD.29254;
  intD.9 _7;
  intD.9 _8;
  long unsigned intD.14 _9;
  intD.9 _11;
  struct basic_ostreamD.9736 & _13;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _14;
  struct vectorD.27653 * const _18;
  intD.9 * const _19;
  long unsigned intD.14 _20;
  const intD.9 & _21;
  const struct vectorD.27653 & _24;
  const struct __ctype_typeD.23249 * _25;
  const struct __ctype_typeD.23249 * _26;
  const struct __ctype_typeD.23249 * _27;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _28;
  long intD.12 _29;
  sizetype _30;
  struct basic_iosD.9730 * _31;
  struct basic_ostreamD.9736 & _34;
  charD.10 _36;
  char_typeD.20165 _39;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _44;
  intD.9 (*__vtbl_ptr_typeD.2760) () _45;
  voidD.45 * PROF_49;
  intD.9 pretmp_50;
  char_typeD.20165 _51;
  intD.9 pretmp_53;
  intD.9 pretmp_54;
  intD.9 pretmp_55;
  long intD.12 _56;
  sizetype _57;
  struct basic_iosD.9730 * _58;
  struct basic_ostreamD.9736 & _61;
  charD.10 _63;
  intD.9 prephitmp_64;
  const intD.9 prephitmp_65;
  char_typeD.20165 _66;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _71;
  intD.9 (*__vtbl_ptr_typeD.2760) () _72;
  voidD.45 * PROF_76;
  char_typeD.20165 _78;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _81;
  long intD.12 _82;
  sizetype _83;
  struct basic_iosD.9730 * _84;
  struct basic_ostreamD.9736 & _87;
  intD.9 _88;
  charD.10 _89;
  intD.9 pretmp_90;
  intD.9 pretmp_91;
  char_typeD.20165 _92;
  intD.9 prephitmp_93;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _97;
  intD.9 (*__vtbl_ptr_typeD.2760) () _98;
  long unsigned intD.14 pretmp_99;
  voidD.45 * PROF_102;
  char_typeD.20165 _104;
  intD.9 prephitmp_112;
  long unsigned intD.14 pretmp_131;

;;   basic block 2, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.32401 => &_ZSt4coutD.26000
  # DEBUG __sD.32402 => "Priority Matrix: "
  # DEBUG __sD.32403 => "Priority Matrix: "
  # .MEM_17 = VDEF <.MEM_5(D)>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (&_ZSt4coutD.26000, "Priority Matrix: ", 17);
  # DEBUG thisD.32398 => &_ZSt4coutD.26000
  # DEBUG __pfD.32399 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.35973 => &_ZSt4coutD.26000
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _28 = _ZSt4coutD.26000._vptr.basic_ostreamD.24032;
  # VUSE <.MEM_17>
  _29 = MEM[(long intD.12 *)_28 + -24B];
  # RANGE [0, 18446744073709551615]
  _30 = (sizetype) _29;
  # PT = { D.26000 } (nonlocal, escaped)
  _31 = &_ZSt4coutD.26000 + _30;
  # DEBUG thisD.35976 => _31
  # DEBUG __cD.35977 => 10
  # VUSE <.MEM_17>
  # PT = nonlocal escaped 
  _25 = MEM[(const struct basic_iosD.9730 *)_31]._M_ctypeD.23256;
  # DEBUG __fD.35978 => _25
  if (_25 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_136 = PHI <.MEM_17(2), .MEM_132(12), .MEM_133(9)>
  # .MEM_138 = VDEF <.MEM_136>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2825 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.35980 => _25
  # DEBUG __cD.35979 => 10
  # VUSE <.MEM_17>
  _36 = MEM[(const struct ctypeD.10037 *)_25]._M_widen_okD.20171;
  if (_36 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 55, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_17>
  _39 = MEM[(const struct ctypeD.10037 *)_25]._M_widenD.20172[10];
  pretmp_50 = (intD.9) _39;
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 35, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.35982 => _25
  # DEBUG __cD.35983 => 10
  # .MEM_110 = VDEF <.MEM_17>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_25);
  # VUSE <.MEM_110>
  # PT = nonlocal escaped 
  _44 = MEM[(const struct ctypeD.10037 *)_25].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_110>
  # PT = nonlocal escaped 
  _45 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_44 + 48B];
  # PT = anything 
  PROF_49 = [obj_type_ref] OBJ_TYPE_REF(_45;(const struct ctypeD.10037)_25->6);
  if (PROF_49 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_111 = VDEF <.MEM_110>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _51 = OBJ_TYPE_REF(_45;(const struct ctypeD.10037)_25->6) (_25, 10);
  pretmp_53 = (intD.9) _51;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_17(5), .MEM_110(6), .MEM_111(7)>
  # RANGE [-128, 127]
  # prephitmp_112 = PHI <pretmp_50(5), 10(6), pretmp_53(7)>
  # .MEM_115 = VDEF <.MEM_75>
  # PT = nonlocal escaped 
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _34 = _ZNSo3putEcD.23967 (&_ZSt4coutD.26000, prephitmp_112);
  # DEBUG __osD.35974 => _34
  # .MEM_116 = VDEF <.MEM_115>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_34);
  # DEBUG rD.29254 => 0
  # VUSE <.MEM_116>
  _88 = this_6(D)->D.28444._sizeD.27585;
  if (_88 <= 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_133 = PHI <.MEM_116(8), .MEM_126(20)>
  # DEBUG thisD.32416 => &_ZSt4coutD.26000
  # DEBUG __pfD.32417 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.36007 => &_ZSt4coutD.26000
  # VUSE <.MEM_133>
  # PT = nonlocal escaped 
  _81 = _ZSt4coutD.26000._vptr.basic_ostreamD.24032;
  # VUSE <.MEM_133>
  _82 = MEM[(long intD.12 *)_81 + -24B];
  # RANGE [0, 18446744073709551615]
  _83 = (sizetype) _82;
  # PT = { D.26000 } (nonlocal, escaped)
  _84 = &_ZSt4coutD.26000 + _83;
  # DEBUG thisD.36010 => _84
  # DEBUG __cD.36011 => 10
  # VUSE <.MEM_133>
  # PT = nonlocal escaped 
  _27 = MEM[(const struct basic_iosD.9730 *)_84]._M_ctypeD.23256;
  # DEBUG __fD.36012 => _27
  if (_27 == 0B)
    goto <bb 3>;
  else
    goto <bb 22>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_101 = PHI <.MEM_116(10), .MEM_126(21)>
  # r_48 = PHI <0(10), r_16(21)>
  # prephitmp_65 = PHI <_88(10), _7(21)>
  # DEBUG rD.29254 => r_48
  # DEBUG cD.29255 => 0
  if (prephitmp_65 <= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU)
  # .MEM_132 = PHI <.MEM_101(11), .MEM_95(27)>
  # DEBUG thisD.32413 => &_ZSt4coutD.26000
  # DEBUG __pfD.32414 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.35992 => &_ZSt4coutD.26000
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _14 = _ZSt4coutD.26000._vptr.basic_ostreamD.24032;
  # VUSE <.MEM_132>
  _56 = MEM[(long intD.12 *)_14 + -24B];
  # RANGE [0, 18446744073709551615]
  _57 = (sizetype) _56;
  # PT = { D.26000 } (nonlocal, escaped)
  _58 = &_ZSt4coutD.26000 + _57;
  # DEBUG thisD.35995 => _58
  # DEBUG __cD.35996 => 10
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _26 = MEM[(const struct basic_iosD.9730 *)_58]._M_ctypeD.23256;
  # DEBUG __fD.35997 => _26
  if (_26 == 0B)
    goto <bb 3>;
  else
    goto <bb 16>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_99 = (long unsigned intD.14) r_48;
  pretmp_131 = pretmp_99 * 24;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 13, next block 27, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # c_41 = PHI <0(13), c_15(15)>
  # .MEM_108 = PHI <.MEM_101(13), .MEM_118(15)>
  # DEBUG cD.29255 => c_41
  # RANGE [0, 18446744073709551615]
  _9 = (long unsigned intD.14) c_41;
  # DEBUG D#14ptD.0 => &this_6(D)->_matrixD.28400
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _18 = MEM[(struct vectorD.27653 * *)this_6(D) + 144B];
  # DEBUG D#12ptD.0 => D#14ptD.0
  # DEBUG __nD.32410 => (long unsigned intD.14) r_48
  # DEBUG thisD.32411 => D#12ptD.0
  # PT = nonlocal escaped 
  _24 = _18 + pretmp_131;
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _19 = MEM[(intD.9 * *)_24];
  # DEBUG __nD.32406 => _9
  # DEBUG thisD.32407 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _20 = _9 * 4;
  # PT = nonlocal escaped 
  _21 = _19 + _20;
  # VUSE <.MEM_108>
  _11 = *_21;
  # .MEM_12 = VDEF <.MEM_108>
  # PT = nonlocal escaped 
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _13 = _ZNSolsEiD.23940 (&_ZSt4coutD.26000, _11);
  # DEBUG __outD.35988 => _13
  # DEBUG __sD.35989 => " "
  # DEBUG __sD.35990 => " "
  # .MEM_118 = VDEF <.MEM_12>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (_13, " ", 1);
  c_15 = c_41 + 1;
  # DEBUG cD.29255 => c_15
  # DEBUG cD.29255 => c_15
  # VUSE <.MEM_118>
  _8 = this_6(D)->D.28444._sizeD.27585;
  if (_8 <= c_15)
    goto <bb 27>;
  else
    goto <bb 15>;
;;    succ:       27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_95 = PHI <.MEM_118(14)>
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU)

;;   basic block 15, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 27, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.35999 => _26
  # DEBUG __cD.35998 => 10
  # VUSE <.MEM_132>
  _63 = MEM[(const struct ctypeD.10037 *)_26]._M_widen_okD.20171;
  if (_63 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 549, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_132>
  _66 = MEM[(const struct ctypeD.10037 *)_26]._M_widenD.20172[10];
  pretmp_90 = (intD.9) _66;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 351, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36001 => _26
  # DEBUG __cD.36002 => 10
  # .MEM_120 = VDEF <.MEM_132>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_26);
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _71 = MEM[(const struct ctypeD.10037 *)_26].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _72 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_71 + 48B];
  # PT = anything 
  PROF_76 = [obj_type_ref] OBJ_TYPE_REF(_72;(const struct ctypeD.10037)_26->6);
  if (PROF_76 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 20>;
  else
    goto <bb 19>;
;;    succ:       20 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 70, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_121 = VDEF <.MEM_120>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _78 = OBJ_TYPE_REF(_72;(const struct ctypeD.10037)_26->6) (_26, 10);
  pretmp_91 = (intD.9) _78;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_107 = PHI <.MEM_132(17), .MEM_120(18), .MEM_121(19)>
  # RANGE [-128, 127]
  # prephitmp_93 = PHI <pretmp_90(17), 10(18), pretmp_91(19)>
  # .MEM_125 = VDEF <.MEM_107>
  # PT = nonlocal escaped 
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _61 = _ZNSo3putEcD.23967 (&_ZSt4coutD.26000, prephitmp_93);
  # DEBUG __osD.35993 => _61
  # .MEM_126 = VDEF <.MEM_125>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_61);
  r_16 = r_48 + 1;
  # DEBUG rD.29254 => r_16
  # DEBUG rD.29254 => r_16
  # VUSE <.MEM_126>
  _7 = this_6(D)->D.28444._sizeD.27585;
  if (_7 <= r_16)
    goto <bb 9>;
  else
    goto <bb 21>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36014 => _27
  # DEBUG __cD.36013 => 10
  # VUSE <.MEM_133>
  _89 = MEM[(const struct ctypeD.10037 *)_27]._M_widen_okD.20171;
  if (_89 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 54, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_133>
  _92 = MEM[(const struct ctypeD.10037 *)_27]._M_widenD.20172[10];
  pretmp_54 = (intD.9) _92;
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 35, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36016 => _27
  # DEBUG __cD.36017 => 10
  # .MEM_129 = VDEF <.MEM_133>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_27);
  # VUSE <.MEM_129>
  # PT = nonlocal escaped 
  _97 = MEM[(const struct ctypeD.10037 *)_27].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_129>
  # PT = nonlocal escaped 
  _98 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_97 + 48B];
  # PT = anything 
  PROF_102 = [obj_type_ref] OBJ_TYPE_REF(_98;(const struct ctypeD.10037)_27->6);
  if (PROF_102 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 26>;
  else
    goto <bb 25>;
;;    succ:       26 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_130 = VDEF <.MEM_129>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _104 = OBJ_TYPE_REF(_98;(const struct ctypeD.10037)_27->6) (_27, 10);
  pretmp_55 = (intD.9) _104;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 25, next block 1, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_109 = PHI <.MEM_133(23), .MEM_129(24), .MEM_130(25)>
  # RANGE [-128, 127]
  # prephitmp_64 = PHI <pretmp_54(23), 10(24), pretmp_55(25)>
  # .MEM_134 = VDEF <.MEM_109>
  # PT = nonlocal escaped 
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _87 = _ZNSo3putEcD.23967 (&_ZSt4coutD.26000, prephitmp_64);
  # DEBUG __osD.36008 => _87
  # .MEM_135 = VDEF <.MEM_134>
  # USE = nonlocal { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_87);
  # VUSE <.MEM_135>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=1521, decl_uid=29157, cgraph_uid=533, symbol_order=534)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.27653 * const thisD.29158, struct iteratorD.28802 __positionD.29159, size_typeD.28810 __nD.29160, const value_typeD.28797 & __xD.29161)
{
  const long unsigned intD.14 D.36085;
  const size_typeD.28810 __lenD.36079;
  size_typeD.28810 D.36084;
  size_typeD.28810 __nD.36077;
  intD.9 * D.36075;
  const ptrdiff_tD.2819 _NumD.36065;
  intD.9 * D.36066;
  intD.9 * const __positionD.34924;
  intD.9 * __firstD.34892;
  const ptrdiff_tD.2819 _NumD.34886;
  const ptrdiff_tD.2819 _NumD.34847;
  intD.9 * __firstD.34775;
  long unsigned intD.14 __nD.34776;
  intD.9 * __firstD.34726;
  const ptrdiff_tD.2819 _NumD.34722;
  intD.9 * __firstD.34675;
  intD.9 * __new_finishD.30252;
  const size_typeD.28810 __elems_afterD.30216;
  value_typeD.28797 __x_copyD.30215;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.29772 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.5_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.2_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#306ptD.0 => MEM[(struct __normal_iteratorD.28803 *)&__positionD.29159]
  # DEBUG __positionD.34924 => D#306ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(13), .MEM_54(23), .MEM_154(26)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.28803 *)&__positionD.29159];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.29234._M_implD.28725._M_end_of_storageD.28729;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.29234._M_implD.28725._M_finishD.28728;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.30215 => __x_copy_35
  # DEBUG thisD.34670 => this_4(D)
  # DEBUG D#28ptD.0 => &this_4(D)->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG thisD.34672 => NULL
  # DEBUG __iD.34671 => D#28ptD.0
  # DEBUG __lhsD.34667 => &D.30217
  # DEBUG __rhsD.34668 => &__positionD.29159
  # DEBUG thisD.32683 => &D.30217
  # DEBUG thisD.32681 => &__positionD.29159
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.28810) _22;
  # DEBUG __elems_afterD.30216 => __elems_after_37
  # DEBUG __old_finishD.30224 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#241ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34724 => D#241ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.34689 => _41
  # DEBUG __lastD.34690 => __first_7
  # DEBUG __resultD.34691 => __first_7
  # DEBUG __allocD.34692 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => D#232ptD.0
  # DEBUG __firstD.34696 => _41
  # DEBUG __lastD.34695 => __first_7
  # DEBUG __resultD.34694 => __first_7
  # DEBUG D.34693 => D#231ptD.0
  # DEBUG __firstD.34699 => _41
  # DEBUG __lastD.34698 => __first_7
  # DEBUG __resultD.34697 => __first_7
  # DEBUG __assignableD.34702 => 1
  # DEBUG __firstD.34705 => _41
  # DEBUG __lastD.34704 => __first_7
  # DEBUG __resultD.34703 => __first_7
  # DEBUG __firstD.34708 => _41
  # DEBUG __lastD.34707 => __first_7
  # DEBUG __resultD.34706 => __first_7
  # DEBUG __itD.34418 => __first_7
  # DEBUG __itD.33403 => __first_7
  # DEBUG __itD.34416 => _41
  # DEBUG __itD.33403 => _41
  # DEBUG __firstD.34711 => _41
  # DEBUG __lastD.34710 => __first_7
  # DEBUG __resultD.34709 => __first_7
  # DEBUG __itD.34398 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.34396 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.34394 => _41
  # DEBUG __itD.33376 => _41
  # DEBUG __firstD.34714 => _41
  # DEBUG __lastD.34713 => __first_7
  # DEBUG __resultD.34712 => __first_7
  # DEBUG __simpleD.34718 => 1
  # DEBUG __firstD.34721 => _41
  # DEBUG __lastD.34720 => __first_7
  # DEBUG __resultD.34719 => __first_7
  __first.5_49 = (long intD.12) _41;
  _47 = _8 - __first.5_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.34722 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.29234._M_implD.28725._M_finishD.28728;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.29234._M_implD.28725._M_finishD.28728 = _43;
  # DEBUG thisD.34687 => &__positionD.29159
  # DEBUG __firstD.36049 => D#306ptD.0
  # DEBUG __lastD.36050 => _41
  # DEBUG __resultD.36051 => __first_7
  # DEBUG __itD.33689 => _41
  # DEBUG __itD.33403 => _41
  # DEBUG __itD.33687 => D#306ptD.0
  # DEBUG __itD.33403 => D#306ptD.0
  # DEBUG __firstD.36054 => D#306ptD.0
  # DEBUG __lastD.36053 => _41
  # DEBUG __resultD.36052 => __first_7
  # DEBUG __itD.33669 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.33667 => _41
  # DEBUG __itD.33376 => _41
  # DEBUG __itD.33665 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG __firstD.36057 => D#306ptD.0
  # DEBUG __lastD.36056 => _41
  # DEBUG __resultD.36055 => __first_7
  # DEBUG __simpleD.36061 => 1
  # DEBUG __firstD.36064 => D#306ptD.0
  # DEBUG __lastD.36063 => _41
  # DEBUG __resultD.36062 => __first_7
  _104 = __first.5_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.36065 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.34685 => &__positionD.29159
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.34683 => &__positionD.29159
  # DEBUG D#167ptD.0 => &__x_copyD.30215
  # DEBUG __firstD.34675 => D#306ptD.0
  # DEBUG __lastD.34676 => _48
  # DEBUG D#166ptD.0 => D#167ptD.0
  # DEBUG __valueD.34678 => D#166ptD.0
  # DEBUG __itD.33386 => _48
  # DEBUG __itD.33376 => _48
  # DEBUG __itD.33384 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0
  # DEBUG __firstD.34681 => D#306ptD.0
  # DEBUG __lastD.34680 => _48
  # DEBUG __valueD.34679 => D#165ptD.0
  # DEBUG __tmpD.34682 => __x_copy_35
  # DEBUG __firstD.34681 => D#306ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.34681 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.34681 => __position_55
  # DEBUG __firstD.34681 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#242ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34797 => D#242ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#207ptD.0 => &__x_copyD.30215
  # DEBUG __firstD.34775 => __first_7
  # DEBUG __nD.34776 => __n_50
  # DEBUG D#206ptD.0 => D#207ptD.0
  # DEBUG __xD.34779 => D#206ptD.0
  # DEBUG D.34778 => D#208ptD.0
  # DEBUG D#205ptD.0 => D#206ptD.0
  # DEBUG __firstD.34782 => __first_7
  # DEBUG __nD.34781 => __n_50
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG __xD.34780 => D#204ptD.0
  # DEBUG __assignableD.34784 => 1
  # DEBUG D#203ptD.0 => D#204ptD.0
  # DEBUG __firstD.34787 => __first_7
  # DEBUG __nD.34786 => __n_50
  # DEBUG D#202ptD.0 => D#203ptD.0
  # DEBUG __xD.34785 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#202ptD.0
  # DEBUG __firstD.34790 => __first_7
  # DEBUG __nD.34789 => __n_50
  # DEBUG D#200ptD.0 => D#201ptD.0
  # DEBUG __valueD.34788 => D#200ptD.0
  # DEBUG __itD.33717 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG D#199ptD.0 => D#200ptD.0
  # DEBUG __firstD.34793 => __first_7
  # DEBUG __nD.34792 => __n_50
  # DEBUG __valueD.34791 => D#199ptD.0
  # DEBUG __tmpD.34794 => __x_copy_35
  # DEBUG __niterD.34795 => __n_50
  # DEBUG __niterD.34795 => __n_50
  # DEBUG __firstD.34793 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.34795 => __n_111
  # DEBUG __firstD.34793 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.34795 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.34793 => __first_64
  # DEBUG __niterD.34795 => __n_63
  # DEBUG __firstD.34793 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(18), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(18), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.29234._M_implD.28725._M_finishD.28728 = __first_125;
  # DEBUG D#243ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34773 => D#243ptD.0
  # DEBUG thisD.34771 => &__positionD.29159
  # DEBUG __firstD.34736 => D#306ptD.0
  # DEBUG __lastD.34737 => __first_7
  # DEBUG __resultD.34738 => __first_125
  # DEBUG __allocD.34739 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => D#232ptD.0
  # DEBUG __firstD.34743 => D#306ptD.0
  # DEBUG __lastD.34742 => __first_7
  # DEBUG __resultD.34741 => __first_125
  # DEBUG D.34740 => D#231ptD.0
  # DEBUG __firstD.34746 => D#306ptD.0
  # DEBUG __lastD.34745 => __first_7
  # DEBUG __resultD.34744 => __first_125
  # DEBUG __assignableD.34749 => 1
  # DEBUG __firstD.34752 => D#306ptD.0
  # DEBUG __lastD.34751 => __first_7
  # DEBUG __resultD.34750 => __first_125
  # DEBUG __firstD.34755 => D#306ptD.0
  # DEBUG __lastD.34754 => __first_7
  # DEBUG __resultD.34753 => __first_125
  # DEBUG __itD.34418 => __first_7
  # DEBUG __itD.33403 => __first_7
  # DEBUG __itD.34416 => D#306ptD.0
  # DEBUG __itD.33403 => D#306ptD.0
  # DEBUG __firstD.34758 => D#306ptD.0
  # DEBUG __lastD.34757 => __first_7
  # DEBUG __resultD.34756 => __first_125
  # DEBUG __itD.34398 => __first_125
  # DEBUG __itD.33376 => __first_125
  # DEBUG __itD.34396 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.34394 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG __firstD.34761 => D#306ptD.0
  # DEBUG __lastD.34760 => __first_7
  # DEBUG __resultD.34759 => __first_125
  # DEBUG __simpleD.34765 => 1
  # DEBUG __firstD.34768 => D#306ptD.0
  # DEBUG __lastD.34767 => __first_7
  # DEBUG __resultD.34766 => __first_125
  # DEBUG _NumD.34769 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.29234._M_implD.28725._M_finishD.28728;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.29234._M_implD.28725._M_finishD.28728 = _53;
  # DEBUG thisD.34734 => &__positionD.29159
  # DEBUG D#167ptD.0 => &__x_copyD.30215
  # DEBUG __firstD.34726 => D#306ptD.0
  # DEBUG __lastD.34727 => __first_7
  # DEBUG D#166ptD.0 => D#167ptD.0
  # DEBUG __valueD.34729 => D#166ptD.0
  # DEBUG __itD.33386 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.33384 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0
  # DEBUG __firstD.34732 => D#306ptD.0
  # DEBUG __lastD.34731 => __first_7
  # DEBUG __valueD.34730 => D#165ptD.0
  # DEBUG __tmpD.34733 => __x_copy_35
  # DEBUG __firstD.34732 => D#306ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.34732 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.34732 => __position_58
  # DEBUG __firstD.34732 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36076 => this_4(D)
  # DEBUG __nD.36077 => __n_2(D)
  # DEBUG __nD.36077 => __n_2(D)
  # DEBUG __sD.36078 => "vector::_M_fill_insert"
  # DEBUG D#183ptD.0 => this_4(D)
  # DEBUG thisD.33498 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#183ptD.0
  # DEBUG D#181ptD.0 => &D#182ptD.0->D.29234
  # DEBUG thisD.33488 => D#181ptD.0
  # DEBUG __aD.33480 => D#180ptD.0
  # DEBUG D#179ptD.0 => D#180ptD.0
  # DEBUG D#168ptD.0 => D#179ptD.0
  # DEBUG thisD.33471 => D#168ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG thisD.36082 => D#23ptD.0
  # DEBUG thisD.36083 => D#23ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG thisD.33516 => D#23ptD.0
  # DEBUG thisD.33515 => D#23ptD.0
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG thisD.33511 => D#23ptD.0
  # DEBUG thisD.33510 => D#23ptD.0
  # DEBUG __aD.36081 => &D.36085
  # DEBUG __bD.36080 => &__nD.36077
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.36079 => __len_124
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG thisD.33503 => D#23ptD.0
  # DEBUG thisD.33502 => D#23ptD.0
  # DEBUG D#183ptD.0 => this_4(D)
  # DEBUG thisD.33518 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#183ptD.0
  # DEBUG D#181ptD.0 => &D#182ptD.0->D.29234
  # DEBUG thisD.33488 => D#181ptD.0
  # DEBUG __aD.33480 => D#180ptD.0
  # DEBUG D#179ptD.0 => D#180ptD.0
  # DEBUG D#168ptD.0 => D#179ptD.0
  # DEBUG thisD.33471 => D#168ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.30248 => NULL
  # DEBUG thisD.34919 => this_4(D)
  # DEBUG D#62ptD.0 => &this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG thisD.34921 => NULL
  # DEBUG __iD.34920 => D#62ptD.0
  # DEBUG __lhsD.34916 => &__positionD.29159
  # DEBUG __rhsD.34917 => &D.30250
  # DEBUG thisD.32683 => &__positionD.29159
  # DEBUG thisD.32681 => &D.30250
  # DEBUG D#254ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.30249 => (const size_typeD.28810) D#254ptD.0
  # DEBUG D#253ptD.0 => &this_4(D)->D.29234
  # DEBUG D#176ptD.0 => D#253ptD.0
  # DEBUG __nD.36067 => NULL
  # DEBUG thisD.36068 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36071 => NULL
  # DEBUG __aD.36070 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36074 => NULL
  # DEBUG thisD.36072 => D#170ptD.0
  # DEBUG D.36073 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.36088 } (escaped heap)
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.29234._M_implD.28725._M_startD.28727;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.29234._M_implD.28725._M_finishD.28728;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36088 } (escaped heap)
  # iftmp.2_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.36088 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
  # DEBUG __new_startD.30251 => NULL
  # DEBUG __new_finishD.30252 => NULL
  # DEBUG D#237ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34914 => D#237ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.36088 } (escaped heap)
  __first_20 = iftmp.2_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#207ptD.0 => __x_21(D)
  # DEBUG __firstD.34892 => __first_20
  # DEBUG __nD.34893 => __n_2(D)
  # DEBUG D#206ptD.0 => D#207ptD.0
  # DEBUG __xD.34896 => D#206ptD.0
  # DEBUG D.34895 => D#208ptD.0
  # DEBUG D#205ptD.0 => D#206ptD.0
  # DEBUG __firstD.34899 => __first_20
  # DEBUG __nD.34898 => __n_2(D)
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG __xD.34897 => D#204ptD.0
  # DEBUG __assignableD.34901 => 1
  # DEBUG D#203ptD.0 => D#204ptD.0
  # DEBUG __firstD.34904 => __first_20
  # DEBUG __nD.34903 => __n_2(D)
  # DEBUG D#202ptD.0 => D#203ptD.0
  # DEBUG __xD.34902 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#202ptD.0
  # DEBUG __firstD.34907 => __first_20
  # DEBUG __nD.34906 => __n_2(D)
  # DEBUG D#200ptD.0 => D#201ptD.0
  # DEBUG __valueD.34905 => D#200ptD.0
  # DEBUG __itD.33717 => __first_20
  # DEBUG __itD.33376 => __first_20
  # DEBUG D#199ptD.0 => D#200ptD.0
  # DEBUG __firstD.34910 => __first_20
  # DEBUG __nD.34909 => __n_2(D)
  # DEBUG __valueD.34908 => D#199ptD.0
  # DEBUG __tmpD.34911 => _56
  # DEBUG __niterD.34912 => __n_2(D)
  # DEBUG __niterD.34912 => __n_2(D)
  # DEBUG __firstD.34910 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(33)>
  # PT = null { D.36088 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(33)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(33)>
  # DEBUG __niterD.34912 => __n_132
  # DEBUG __firstD.34910 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.34912 => __n_79
  # PT = null { D.36088 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.34910 => __first_80
  # DEBUG __niterD.34912 => __n_79
  # DEBUG __firstD.34910 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.30252 => 0B
  # DEBUG D#238ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34890 => D#238ptD.0
  # DEBUG thisD.34888 => &__positionD.29159
  # DEBUG D#305ptD.0 => this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.34853 => D#305ptD.0
  # DEBUG __lastD.34854 => D#306ptD.0
  # DEBUG __resultD.34855 => NULL
  # DEBUG __allocD.34856 => D#235ptD.0
  # DEBUG D#234ptD.0 => D#235ptD.0
  # DEBUG D#231ptD.0 => D#234ptD.0
  # DEBUG __firstD.34860 => D#305ptD.0
  # DEBUG __lastD.34859 => D#306ptD.0
  # DEBUG __resultD.34858 => NULL
  # DEBUG D.34857 => D#231ptD.0
  # DEBUG __firstD.34863 => D#305ptD.0
  # DEBUG __lastD.34862 => D#306ptD.0
  # DEBUG __resultD.34861 => NULL
  # DEBUG __assignableD.34866 => 1
  # DEBUG __firstD.34869 => D#305ptD.0
  # DEBUG __lastD.34868 => D#306ptD.0
  # DEBUG __resultD.34867 => NULL
  # DEBUG __firstD.34872 => D#305ptD.0
  # DEBUG __lastD.34871 => D#306ptD.0
  # DEBUG __resultD.34870 => NULL
  # DEBUG __itD.34418 => D#306ptD.0
  # DEBUG __itD.33403 => D#306ptD.0
  # DEBUG __itD.34416 => D#305ptD.0
  # DEBUG __itD.33403 => D#305ptD.0
  # DEBUG __firstD.34875 => D#305ptD.0
  # DEBUG __lastD.34874 => D#306ptD.0
  # DEBUG __resultD.34873 => NULL
  # DEBUG __itD.34398 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.34396 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG __itD.34394 => D#305ptD.0
  # DEBUG __itD.33376 => D#305ptD.0
  # DEBUG __firstD.34878 => D#305ptD.0
  # DEBUG __lastD.34877 => D#306ptD.0
  # DEBUG __resultD.34876 => NULL
  # DEBUG __simpleD.34882 => 1
  # DEBUG __firstD.34885 => D#305ptD.0
  # DEBUG __lastD.34884 => D#306ptD.0
  # DEBUG __resultD.34883 => NULL
  # DEBUG D#304ptD.0 => (long intD.12) D#305ptD.0
  # DEBUG D#303ptD.0 => _158 - D#304ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.34886 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memmoveD.995 (iftmp.2_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#302ptD.0 => (long unsigned intD.14) D#303ptD.0
  # DEBUG __new_finishD.30252 => iftmp.2_113 + D#302ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.36088 } (escaped heap)
  __new_finish_26 = iftmp.2_113 + _133;
  # DEBUG __new_finishD.30252 => __new_finish_26
  # DEBUG D#239ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34851 => D#239ptD.0
  # DEBUG D#301ptD.0 => this_4(D)->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG thisD.34849 => &__positionD.29159
  # DEBUG __firstD.34814 => D#306ptD.0
  # DEBUG __lastD.34815 => D#301ptD.0
  # DEBUG __resultD.34816 => __new_finish_26
  # DEBUG __allocD.34817 => D#235ptD.0
  # DEBUG D#234ptD.0 => D#235ptD.0
  # DEBUG D#231ptD.0 => D#234ptD.0
  # DEBUG __firstD.34821 => D#306ptD.0
  # DEBUG __lastD.34820 => D#301ptD.0
  # DEBUG __resultD.34819 => __new_finish_26
  # DEBUG D.34818 => D#231ptD.0
  # DEBUG __firstD.34824 => D#306ptD.0
  # DEBUG __lastD.34823 => D#301ptD.0
  # DEBUG __resultD.34822 => __new_finish_26
  # DEBUG __assignableD.34827 => 1
  # DEBUG __firstD.34830 => D#306ptD.0
  # DEBUG __lastD.34829 => D#301ptD.0
  # DEBUG __resultD.34828 => __new_finish_26
  # DEBUG __firstD.34833 => D#306ptD.0
  # DEBUG __lastD.34832 => D#301ptD.0
  # DEBUG __resultD.34831 => __new_finish_26
  # DEBUG __itD.34418 => D#301ptD.0
  # DEBUG __itD.33403 => D#301ptD.0
  # DEBUG __itD.34416 => D#306ptD.0
  # DEBUG __itD.33403 => D#306ptD.0
  # DEBUG __firstD.34836 => D#306ptD.0
  # DEBUG __lastD.34835 => D#301ptD.0
  # DEBUG __resultD.34834 => __new_finish_26
  # DEBUG __itD.34398 => __new_finish_26
  # DEBUG __itD.33376 => __new_finish_26
  # DEBUG __itD.34396 => D#301ptD.0
  # DEBUG __itD.33376 => D#301ptD.0
  # DEBUG __itD.34394 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG __firstD.34839 => D#306ptD.0
  # DEBUG __lastD.34838 => D#301ptD.0
  # DEBUG __resultD.34837 => __new_finish_26
  # DEBUG __simpleD.34843 => 1
  # DEBUG __firstD.34846 => D#306ptD.0
  # DEBUG __lastD.34845 => D#301ptD.0
  # DEBUG __resultD.34844 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.34847 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.36088 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.30252 => _70
  # DEBUG D#240ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34812 => D#240ptD.0
  # DEBUG D#252ptD.0 => this_4(D)->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG D#251ptD.0 => this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.34809 => D#251ptD.0
  # DEBUG __lastD.34810 => D#252ptD.0
  # DEBUG D.34811 => NULL
  # DEBUG D#55ptD.0 => D#251ptD.0
  # DEBUG D#56ptD.0 => D#252ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG D#250ptD.0 => this_4(D)->D.29234._M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#249ptD.0 => (long intD.12) D#250ptD.0
  # DEBUG D#248ptD.0 => (long intD.12) D#305ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0 - D#248ptD.0
  # DEBUG D#246ptD.0 => D#247ptD.0 /[ex] 4
  # DEBUG D#245ptD.0 => (long unsigned intD.14) D#246ptD.0
  # DEBUG D#244ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34799 => D#244ptD.0
  # DEBUG __pD.34800 => D#305ptD.0
  # DEBUG __nD.34801 => D#245ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#244ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#245ptD.0
  # DEBUG __pD.34805 => D#305ptD.0
  # DEBUG __aD.34803 => D#145ptD.0
  # DEBUG __nD.34804 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.34808 => D#305ptD.0
  # DEBUG thisD.34806 => D#141ptD.0
  # DEBUG D.34807 => D#142ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.29234._M_implD.28725._M_startD.28727 = iftmp.2_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.29234._M_implD.28725._M_finishD.28728 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.29234._M_implD.28725._M_end_of_storageD.28729 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(3), .MEM_34(44)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.30248 => NULL
  # DEBUG thisD.34919 => this_4(D)
  # DEBUG D#62ptD.0 => &this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG thisD.34921 => NULL
  # DEBUG __iD.34920 => D#62ptD.0
  # DEBUG __lhsD.34916 => &__positionD.29159
  # DEBUG __rhsD.34917 => &D.30250
  # DEBUG thisD.32683 => &__positionD.29159
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.32681 => &D.30250
  _143 = _144 - _116;
  # DEBUG D#254ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.30249 => (const size_typeD.28810) D#254ptD.0
  # DEBUG D#253ptD.0 => &this_4(D)->D.29234
  # DEBUG D#176ptD.0 => D#253ptD.0
  # DEBUG __nD.36067 => NULL
  # DEBUG thisD.36068 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.30248 => NULL
  # DEBUG thisD.34919 => this_4(D)
  # DEBUG D#62ptD.0 => &this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG thisD.34921 => NULL
  # DEBUG __iD.34920 => D#62ptD.0
  # DEBUG __lhsD.34916 => &__positionD.29159
  # DEBUG __rhsD.34917 => &D.30250
  # DEBUG thisD.32683 => &__positionD.29159
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.32681 => &D.30250
  _150 = _151 - _116;
  # DEBUG D#254ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.30249 => (const size_typeD.28810) D#254ptD.0
  # DEBUG D#253ptD.0 => &this_4(D)->D.29234
  # DEBUG D#176ptD.0 => D#253ptD.0
  # DEBUG __nD.36067 => NULL
  # DEBUG thisD.36068 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for this_4(D)->D.29234._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.29234._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__x_21(D)
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__x_21(D)
Creating dr for this_4(D)->D.29234._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.29234._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.29234._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for MEM[(int * *)this_4(D)]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D)]
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for MEM[(const int &)__x_21(D)]
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const int &)__x_21(D)]
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.2_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.2_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.2_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.2_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.2_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.2_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.2_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.2_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.2_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.2_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.2_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.2_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.2_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.2_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.2_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.2_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.29234._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.29234._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.29234._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:18)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:39)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:56, LOOPS:4, CONDITIONS:19, STMTS:600)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#306 => MEM[(struct __normal_iterator *)&__position]
    # DEBUG __position => D#306
    if (__n_2(D) != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_10 bb_48 bb_23 bb_49 }, succs = {bb_55 })
  {
    <bb 3>:
    # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>

  }
  bb_55 (preds = {bb_3 }, succs = {bb_45 })
  {
    <bb 55>:
    goto <bb 45>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_28 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    __position_16 = MEM[(struct __normal_iterator *)&__position];
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.29234._M_impl._M_end_of_storage;
    _6 = (long int) _5;
    # VUSE <.MEM_3(D)>
    __first_7 = this_4(D)->D.29234._M_impl._M_finish;
    _8 = (long int) __first_7;
    _9 = _6 - _8;
    _10 = _9 /[ex] 4;
    _11 = (long unsigned int) _10;
    if (__n_2(D) <= _11)
      goto <bb 5>;
    else
      goto <bb 28>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_15 })
  {
    <bb 5>:
    # VUSE <.MEM_3(D)>
    __x_copy_35 = *__x_21(D);
    # DEBUG __x_copy => __x_copy_35
    # DEBUG this => this_4(D)
    # DEBUG D#28 => &this_4(D)->D.29234._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#28
    # DEBUG __lhs => &D.30217
    # DEBUG __rhs => &__position
    # DEBUG this => &D.30217
    # DEBUG this => &__position
    _27 = (long int) __position_16;
    _23 = _8 - _27;
    _22 = _23 /[ex] 4;
    __elems_after_37 = (const size_type) _22;
    # DEBUG __elems_after => __elems_after_37
    # DEBUG __old_finish => __first_7
    if (__n_2(D) < __elems_after_37)
      goto <bb 6>;
    else
      goto <bb 15>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#241 => &this_4(D)->D.29234
    # DEBUG this => D#241
    _39 = __n_2(D) * 4;
    _40 = -_39;
    _41 = __first_7 + _40;
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __alloc => D#233
    # DEBUG D#232 => D#233
    # DEBUG D#231 => D#232
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG D.34693 => D#231
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __assignable => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    __first.5_49 = (long int) _41;
    _47 = _8 - __first.5_49;
    _Num_45 = _47 /[ex] 4;
    # DEBUG _Num => _Num_45
    if (_Num_45 != 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _38 = (long unsigned int) _47;
    # .MEM_97 = VDEF <.MEM_3(D)>
    __builtin_memmove (__first_7, _41, _38);
    # VUSE <.MEM_97>
    pretmp_173 = this_4(D)->D.29234._M_impl._M_finish;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
    # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
    _43 = prephitmp_174 + _39;
    # .MEM_44 = VDEF <.MEM_14>
    this_4(D)->D.29234._M_impl._M_finish = _43;
    # DEBUG this => &__position
    # DEBUG __first => D#306
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __first => D#306
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __first => D#306
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => D#306
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    _104 = __first.5_49 - _27;
    _Num_105 = _104 /[ex] 4;
    # DEBUG _Num => _Num_105
    if (_Num_105 != 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    _106 = (long unsigned int) _104;
    _107 = -_106;
    _108 = __first_7 + _107;
    # .MEM_135 = VDEF <.MEM_44>
    __builtin_memmove (_108, __position_16, _106);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_3 bb_11 })
  {
    <bb 10>:
    # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
    # DEBUG this => &__position
    _48 = __position_16 + _39;
    # DEBUG this => &__position
    # DEBUG D#167 => &__x_copy
    # DEBUG __first => D#306
    # DEBUG __last => _48
    # DEBUG D#166 => D#167
    # DEBUG __value => D#166
    # DEBUG __it => _48
    # DEBUG __it => _48
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG D#165 => D#166
    # DEBUG __first => D#306
    # DEBUG __last => _48
    # DEBUG __value => D#165
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#306
    if (__position_16 == _48)
      goto <bb 3>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_13 (preds = {bb_12 }, succs = {bb_48 })
  {
    <bb 13>:
    # .MEM_13 = PHI <.MEM_98(12)>

  }
  bb_48 (preds = {bb_13 }, succs = {bb_3 })
  {
    <bb 48>:
    goto <bb 3>;

  }
  bb_15 (preds = {bb_5 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # DEBUG D#242 => &this_4(D)->D.29234
    # DEBUG this => D#242
    __n_50 = __n_2(D) - __elems_after_37;
    # DEBUG D#207 => &__x_copy
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#206 => D#207
    # DEBUG __x => D#206
    # DEBUG D.34778 => D#208
    # DEBUG D#205 => D#206
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#204 => D#205
    # DEBUG __x => D#204
    # DEBUG __assignable => 1
    # DEBUG D#203 => D#204
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#202 => D#203
    # DEBUG __x => D#202
    # DEBUG D#201 => D#202
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#200 => D#201
    # DEBUG __value => D#200
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG D#199 => D#200
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG __value => D#199
    # DEBUG __tmp => __x_copy_35
    # DEBUG __niter => __n_50
    # DEBUG __niter => __n_50
    # DEBUG __first => __first_7
    if (__n_50 == 0)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
    <bb 18>:

  }
  bb_50 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 50>:
    _160 = __n_50 * 4;
    __first_123 = __first_7 + _160;
    goto <bb 20>;

  }
  bb_20 (preds = {bb_50 bb_15 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # __first_125 = PHI <__first_123(50), __first_7(15)>
    # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
    # .MEM_51 = VDEF <.MEM_84>
    this_4(D)->D.29234._M_impl._M_finish = __first_125;
    # DEBUG D#243 => &this_4(D)->D.29234
    # DEBUG this => D#243
    # DEBUG this => &__position
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#233
    # DEBUG D#232 => D#233
    # DEBUG D#231 => D#232
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG D.34740 => D#231
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __simple => 1
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG _Num => _22
    if (_22 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_168 = (long unsigned int) _23;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _59 = (long unsigned int) _23;
    # .MEM_100 = VDEF <.MEM_51>
    __builtin_memmove (__first_125, __position_16, _59);
    # VUSE <.MEM_100>
    pretmp_166 = this_4(D)->D.29234._M_impl._M_finish;

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_3 bb_24 })
  {
    <bb 23>:
    # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
    # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
    # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
    _53 = prephitmp_167 + prephitmp_169;
    # .MEM_54 = VDEF <.MEM_87>
    this_4(D)->D.29234._M_impl._M_finish = _53;
    # DEBUG this => &__position
    # DEBUG D#167 => &__x_copy
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG D#166 => D#167
    # DEBUG __value => D#166
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG D#165 => D#166
    # DEBUG __first => D#306
    # DEBUG __last => __first_7
    # DEBUG __value => D#165
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#306
    if (__first_7 == __position_16)
      goto <bb 3>;
    else
      goto <bb 24>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:

  }
  bb_26 (preds = {bb_25 }, succs = {bb_49 })
  {
    <bb 26>:
    # .MEM_154 = PHI <.MEM_101(25)>

  }
  bb_49 (preds = {bb_26 }, succs = {bb_3 })
  {
    <bb 49>:
    goto <bb 3>;

  }
  bb_28 (preds = {bb_4 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG this => this_4(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#183 => this_4(D)
    # DEBUG this => D#183
    # DEBUG D#182 => D#183
    # DEBUG D#181 => &D#182->D.29234
    # DEBUG this => D#181
    # DEBUG __a => D#180
    # DEBUG D#179 => D#180
    # DEBUG D#168 => D#179
    # DEBUG this => D#168
    # VUSE <.MEM_3(D)>
    _17 = MEM[(int * *)this_4(D)];
    # DEBUG D#23 => this_4(D)
    # DEBUG D#23 => this_4(D)
    # DEBUG this => D#23
    # DEBUG this => D#23
    _116 = (long int) _17;
    _117 = _8 - _116;
    _118 = _117 /[ex] 4;
    _119 = (const long unsigned int) _118;
    _120 = 4611686018427387903 - _119;
    if (__n_2(D) > _120)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_134 = VDEF <.MEM_3(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_30 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
    <bb 30>:
    # DEBUG D#23 => this_4(D)
    # DEBUG D#23 => this_4(D)
    # DEBUG this => D#23
    # DEBUG this => D#23
    # DEBUG D#23 => this_4(D)
    # DEBUG D#23 => this_4(D)
    # DEBUG this => D#23
    # DEBUG this => D#23
    # DEBUG __a => &D.36085
    # DEBUG __b => &__n
    _77 = MAX_EXPR <__n_2(D), _119>;
    __len_124 = _77 + _119;
    # DEBUG __len => __len_124
    # DEBUG D#23 => this_4(D)
    # DEBUG D#23 => this_4(D)
    # DEBUG this => D#23
    # DEBUG this => D#23
    # DEBUG D#183 => this_4(D)
    # DEBUG this => D#183
    # DEBUG D#182 => D#183
    # DEBUG D#181 => &D#182->D.29234
    # DEBUG this => D#181
    # DEBUG __a => D#180
    # DEBUG D#179 => D#180
    # DEBUG D#168 => D#179
    # DEBUG this => D#168
    _152 = __len_124 > 4611686018427387903;
    _142 = _119 > __len_124;
    _114 = _142 | _152;
    if (_114 != 0)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_31 (preds = {bb_47 }, succs = {bb_32 })
  {
    <bb 31>:
    pretmp_164 = __len_124 * 4;

  }
  bb_32 (preds = {bb_46 bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # _156 = PHI <_144(46), _151(31)>
    # _157 = PHI <_143(46), _150(31)>
    # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#62 => &this_4(D)->D.29234._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#62
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.30250
    # DEBUG this => &__position
    # DEBUG this => &D.30250
    # DEBUG D#254 => _157 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#254
    # DEBUG D#253 => &this_4(D)->D.29234
    # DEBUG D#176 => D#253
    # DEBUG __n => NULL
    # DEBUG this => D#176
    # DEBUG D#175 => D#176
    # DEBUG D#174 => &D#175->_M_impl
    # DEBUG D#173 => D#174
    # DEBUG __n => NULL
    # DEBUG __a => D#173
    # DEBUG D#172 => D#173
    # DEBUG D#170 => D#172
    # DEBUG D#171 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#170
    # DEBUG D.36073 => D#171
    # DEBUG D#169 => D#170
    # DEBUG D#168 => D#169
    # DEBUG this => D#168
    # .MEM_131 = VDEF <.MEM_3(D)>
    _112 = operator new (prephitmp_165);
    # VUSE <.MEM_131>
    pretmp_29 = this_4(D)->D.29234._M_impl._M_start;
    # VUSE <.MEM_131>
    pretmp_147 = this_4(D)->D.29234._M_impl._M_finish;
    pretmp_149 = _112 + prephitmp_165;
    pretmp_145 = (long int) pretmp_147;
    pretmp_138 = (long int) pretmp_29;
    pretmp_140 = _156 - pretmp_138;

  }
  bb_33 (preds = {bb_47 bb_32 }, succs = {bb_52 })
  {
    <bb 33>:
    # iftmp.2_113 = PHI <0B(47), _112(32)>
    # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
    # _158 = PHI <_151(47), _156(32)>
    # _153 = PHI <_150(47), _157(32)>
    # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
    # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
    # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
    # prephitmp_137 = PHI <_150(47), pretmp_140(32)>

  }
  bb_52 (preds = {bb_33 }, succs = {bb_34 })
  {
    <bb 52>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#237 => &this_4(D)->D.29234
    # DEBUG this => D#237
    _19 = (long unsigned int) _153;
    __first_20 = iftmp.2_113 + _19;
    # VUSE <.MEM_126>
    _56 = MEM[(const int &)__x_21(D)];
    # DEBUG D#207 => __x_21(D)
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#206 => D#207
    # DEBUG __x => D#206
    # DEBUG D.34895 => D#208
    # DEBUG D#205 => D#206
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#204 => D#205
    # DEBUG __x => D#204
    # DEBUG __assignable => 1
    # DEBUG D#203 => D#204
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#202 => D#203
    # DEBUG __x => D#202
    # DEBUG D#201 => D#202
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#200 => D#201
    # DEBUG __value => D#200
    # DEBUG __it => __first_20
    # DEBUG __it => __first_20
    # DEBUG D#199 => D#200
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG __value => D#199
    # DEBUG __tmp => _56
    # DEBUG __niter => __n_2(D)
    # DEBUG __niter => __n_2(D)
    # DEBUG __first => __first_20

  }
  bb_36 (preds = {bb_34 }, succs = {bb_51 })
  {
    <bb 36>:

  }
  bb_51 (preds = {bb_36 }, succs = {bb_38 bb_37 })
  {
    <bb 51>:
    # DEBUG __new_finish => 0B
    # DEBUG D#238 => &this_4(D)->D.29234
    # DEBUG this => D#238
    # DEBUG this => &__position
    # DEBUG D#305 => this_4(D)->D.29234._M_impl._M_start
    # DEBUG __first => D#305
    # DEBUG __last => D#306
    # DEBUG __result => NULL
    # DEBUG __alloc => D#235
    # DEBUG D#234 => D#235
    # DEBUG D#231 => D#234
    # DEBUG __first => D#305
    # DEBUG __last => D#306
    # DEBUG __result => NULL
    # DEBUG D.34857 => D#231
    # DEBUG __first => D#305
    # DEBUG __last => D#306
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#305
    # DEBUG __last => D#306
    # DEBUG __result => NULL
    # DEBUG __first => D#305
    # DEBUG __last => D#306
    # DEBUG __result => NULL
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __it => D#305
    # DEBUG __it => D#305
    # DEBUG __first => D#305
    # DEBUG __last => D#306
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __it => D#305
    # DEBUG __it => D#305
    # DEBUG __first => D#305
    # DEBUG __last => D#306
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => D#305
    # DEBUG __last => D#306
    # DEBUG __result => NULL
    # DEBUG D#304 => (long int) D#305
    # DEBUG D#303 => _158 - D#304
    _Num_73 = prephitmp_137 /[ex] 4;
    # DEBUG _Num => _Num_73
    if (_Num_73 != 0)
      goto <bb 38>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 37>:
    pretmp_103 = (long unsigned int) prephitmp_137;
    goto <bb 39>;

  }
  bb_38 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 38>:
    _74 = (long unsigned int) prephitmp_137;
    # .MEM_94 = VDEF <.MEM_93>
    __builtin_memmove (iftmp.2_113, prephitmp_146, _74);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_41 bb_40 })
  {
    <bb 39>:
    # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
    # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
    # DEBUG D#302 => (long unsigned int) D#303
    # DEBUG __new_finish => iftmp.2_113 + D#302
    _25 = __n_2(D) * 4;
    _133 = _25 + prephitmp_102;
    __new_finish_26 = iftmp.2_113 + _133;
    # DEBUG __new_finish => __new_finish_26
    # DEBUG D#239 => &this_4(D)->D.29234
    # DEBUG this => D#239
    # DEBUG D#301 => this_4(D)->D.29234._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => D#306
    # DEBUG __last => D#301
    # DEBUG __result => __new_finish_26
    # DEBUG __alloc => D#235
    # DEBUG D#234 => D#235
    # DEBUG D#231 => D#234
    # DEBUG __first => D#306
    # DEBUG __last => D#301
    # DEBUG __result => __new_finish_26
    # DEBUG D.34818 => D#231
    # DEBUG __first => D#306
    # DEBUG __last => D#301
    # DEBUG __result => __new_finish_26
    # DEBUG __assignable => 1
    # DEBUG __first => D#306
    # DEBUG __last => D#301
    # DEBUG __result => __new_finish_26
    # DEBUG __first => D#306
    # DEBUG __last => D#301
    # DEBUG __result => __new_finish_26
    # DEBUG __it => D#301
    # DEBUG __it => D#301
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __first => D#306
    # DEBUG __last => D#301
    # DEBUG __result => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => D#301
    # DEBUG __it => D#301
    # DEBUG __it => D#306
    # DEBUG __it => D#306
    # DEBUG __first => D#306
    # DEBUG __last => D#301
    # DEBUG __result => __new_finish_26
    # DEBUG __simple => 1
    # DEBUG __first => D#306
    # DEBUG __last => D#301
    # DEBUG __result => __new_finish_26
    _66 = prephitmp_121 - _158;
    _Num_67 = _66 /[ex] 4;
    # DEBUG _Num => _Num_67
    if (_Num_67 != 0)
      goto <bb 41>;
    else
      goto <bb 40>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    pretmp_162 = (long unsigned int) _66;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 41>:
    _68 = (long unsigned int) _66;
    # .MEM_95 = VDEF <.MEM_90>
    __builtin_memcpy (__new_finish_26, __position_16, _68);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
    # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
    _70 = __new_finish_26 + prephitmp_163;
    # DEBUG __new_finish => _70
    # DEBUG D#240 => &this_4(D)->D.29234
    # DEBUG this => D#240
    # DEBUG D#252 => this_4(D)->D.29234._M_impl._M_finish
    # DEBUG D#251 => this_4(D)->D.29234._M_impl._M_start
    # DEBUG __first => D#251
    # DEBUG __last => D#252
    # DEBUG D.34811 => NULL
    # DEBUG D#55 => D#251
    # DEBUG D#56 => D#252
    # DEBUG __first => D#55
    # DEBUG __last => D#56
    # DEBUG D#54 => D#56
    # DEBUG D#53 => D#55
    # DEBUG D#51 => D#53
    # DEBUG D#52 => D#54
    # DEBUG D.32641 => D#51
    # DEBUG D.32640 => D#52
    # DEBUG D#250 => this_4(D)->D.29234._M_impl._M_end_of_storage
    # DEBUG D#249 => (long int) D#250
    # DEBUG D#248 => (long int) D#305
    # DEBUG D#247 => D#249 - D#248
    # DEBUG D#246 => D#247 /[ex] 4
    # DEBUG D#245 => (long unsigned int) D#246
    # DEBUG D#244 => &this_4(D)->D.29234
    # DEBUG this => D#244
    # DEBUG __p => D#305
    # DEBUG __n => D#245
    if (prephitmp_146 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#147 => &D#244->_M_impl
    # DEBUG D#145 => D#147
    # DEBUG D#146 => D#245
    # DEBUG __p => D#305
    # DEBUG __a => D#145
    # DEBUG __n => D#146
    # DEBUG D#144 => D#146
    # DEBUG D#143 => D#145
    # DEBUG D#141 => D#143
    # DEBUG D#142 => D#144
    # DEBUG __p => D#305
    # DEBUG this => D#141
    # DEBUG D.34807 => D#142
    # .MEM_96 = VDEF <.MEM_91>
    operator delete (prephitmp_146);

  }
  bb_44 (preds = {bb_43 bb_42 }, succs = {bb_53 })
  {
    <bb 44>:
    # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>

  }
  bb_53 (preds = {bb_44 }, succs = {bb_45 })
  {
    <bb 53>:
    # .MEM_30 = VDEF <.MEM_92>
    this_4(D)->D.29234._M_impl._M_start = iftmp.2_113;
    # .MEM_31 = VDEF <.MEM_30>
    this_4(D)->D.29234._M_impl._M_finish = _70;
    # .MEM_34 = VDEF <.MEM_31>
    this_4(D)->D.29234._M_impl._M_end_of_storage = prephitmp_148;

  }
  bb_45 (preds = {bb_55 bb_53 }, succs = {bb_54 })
  {
    <bb 45>:
    # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>

  }
  bb_54 (preds = {bb_45 }, succs = {bb_1 })
  {
    <bb 54>:
    # VUSE <.MEM_1>
    return;

  }
  bb_46 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 46>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#62 => &this_4(D)->D.29234._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#62
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.30250
    # DEBUG this => &__position
    _144 = (long int) __position_16;
    # DEBUG this => &D.30250
    _143 = _144 - _116;
    # DEBUG D#254 => _143 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#254
    # DEBUG D#253 => &this_4(D)->D.29234
    # DEBUG D#176 => D#253
    # DEBUG __n => NULL
    # DEBUG this => D#176
    # DEBUG D#175 => D#176
    goto <bb 32>;

  }
  bb_47 (preds = {bb_30 }, succs = {bb_31 bb_33 })
  {
    <bb 47>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#62 => &this_4(D)->D.29234._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#62
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.30250
    # DEBUG this => &__position
    _151 = (long int) __position_16;
    # DEBUG this => &D.30250
    _150 = _151 - _116;
    # DEBUG D#254 => _150 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#254
    # DEBUG D#253 => &this_4(D)->D.29234
    # DEBUG D#176 => D#253
    # DEBUG __n => NULL
    # DEBUG this => D#176
    # DEBUG D#175 => D#176
    if (__len_124 != 0)
      goto <bb 31>;
    else
      goto <bb 33>;

  }
  loop_1 (header = 12, latch = 14, niter = ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_12 (preds = {bb_11 bb_14 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __position_109 = PHI <__position_16(11), __position_55(14)>
      # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
      # DEBUG __first => __position_109
      # .MEM_98 = VDEF <.MEM_83>
      *__position_109 = __x_copy_35;
      __position_55 = __position_109 + 4;
      # DEBUG __first => __position_55
      # DEBUG __first => __position_55
      if (_48 == __position_55)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_12 }, succs = {bb_12 })
    {
      <bb 14>:
      goto <bb 12>;

    }
  }
  loop_2 (header = 25, latch = 27, niter = ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_25 (preds = {bb_24 bb_27 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # __position_110 = PHI <__position_16(24), __position_58(27)>
      # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
      # DEBUG __first => __position_110
      # .MEM_101 = VDEF <.MEM_136>
      *__position_110 = __x_copy_35;
      __position_58 = __position_110 + 4;
      # DEBUG __first => __position_58
      # DEBUG __first => __position_58
      if (__first_7 == __position_58)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_25 }, succs = {bb_25 })
    {
      <bb 27>:
      goto <bb 25>;

    }
  }
  loop_3 (header = 17, latch = 19, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_17 (preds = {bb_16 bb_19 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # __n_111 = PHI <__n_50(16), __n_63(19)>
      # __first_76 = PHI <__first_7(16), __first_64(19)>
      # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
      # DEBUG __niter => __n_111
      # DEBUG __first => __first_76
      # .MEM_99 = VDEF <.MEM_81>
      *__first_76 = __x_copy_35;
      __n_63 = __n_111 + 18446744073709551615;
      # DEBUG __niter => __n_63
      __first_64 = __first_76 + 4;
      # DEBUG __first => __first_64
      # DEBUG __niter => __n_63
      # DEBUG __first => __first_64
      if (__n_63 == 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 19>:
      goto <bb 17>;

    }
  }
  loop_4 (header = 34, latch = 35, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_34 (preds = {bb_35 bb_52 }, succs = {bb_36 bb_35 })
    {
      <bb 34>:
      # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
      # __first_155 = PHI <__first_80(35), __first_20(52)>
      # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
      # DEBUG __niter => __n_132
      # DEBUG __first => __first_155
      # .MEM_93 = VDEF <.MEM_130>
      *__first_155 = _56;
      __n_79 = __n_132 + 18446744073709551615;
      # DEBUG __niter => __n_79
      __first_80 = __first_155 + 4;
      # DEBUG __first => __first_80
      # DEBUG __niter => __n_79
      # DEBUG __first => __first_80
      if (__n_79 == 0)
        goto <bb 36>;
      else
        goto <bb 35>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_34 })
    {
      <bb 35>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.27653 * const thisD.29158, struct iteratorD.28802 __positionD.29159, size_typeD.28810 __nD.29160, const value_typeD.28797 & __xD.29161)
{
  const long unsigned intD.14 D.36085;
  const size_typeD.28810 __lenD.36079;
  size_typeD.28810 D.36084;
  size_typeD.28810 __nD.36077;
  intD.9 * D.36075;
  const ptrdiff_tD.2819 _NumD.36065;
  intD.9 * D.36066;
  intD.9 * const __positionD.34924;
  intD.9 * __firstD.34892;
  const ptrdiff_tD.2819 _NumD.34886;
  const ptrdiff_tD.2819 _NumD.34847;
  intD.9 * __firstD.34775;
  long unsigned intD.14 __nD.34776;
  intD.9 * __firstD.34726;
  const ptrdiff_tD.2819 _NumD.34722;
  intD.9 * __firstD.34675;
  intD.9 * __new_finishD.30252;
  const size_typeD.28810 __elems_afterD.30216;
  value_typeD.28797 __x_copyD.30215;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.29772 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.5_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.2_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#306ptD.0 => MEM[(struct __normal_iteratorD.28803 *)&__positionD.29159]
  # DEBUG __positionD.34924 => D#306ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 55, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 55, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.28803 *)&__positionD.29159];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.29234._M_implD.28725._M_end_of_storageD.28729;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.29234._M_implD.28725._M_finishD.28728;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.30215 => __x_copy_35
  # DEBUG thisD.34670 => this_4(D)
  # DEBUG D#28ptD.0 => &this_4(D)->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG thisD.34672 => NULL
  # DEBUG __iD.34671 => D#28ptD.0
  # DEBUG __lhsD.34667 => &D.30217
  # DEBUG __rhsD.34668 => &__positionD.29159
  # DEBUG thisD.32683 => &D.30217
  # DEBUG thisD.32681 => &__positionD.29159
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.28810) _22;
  # DEBUG __elems_afterD.30216 => __elems_after_37
  # DEBUG __old_finishD.30224 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#241ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34724 => D#241ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.34689 => _41
  # DEBUG __lastD.34690 => __first_7
  # DEBUG __resultD.34691 => __first_7
  # DEBUG __allocD.34692 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => D#232ptD.0
  # DEBUG __firstD.34696 => _41
  # DEBUG __lastD.34695 => __first_7
  # DEBUG __resultD.34694 => __first_7
  # DEBUG D.34693 => D#231ptD.0
  # DEBUG __firstD.34699 => _41
  # DEBUG __lastD.34698 => __first_7
  # DEBUG __resultD.34697 => __first_7
  # DEBUG __assignableD.34702 => 1
  # DEBUG __firstD.34705 => _41
  # DEBUG __lastD.34704 => __first_7
  # DEBUG __resultD.34703 => __first_7
  # DEBUG __firstD.34708 => _41
  # DEBUG __lastD.34707 => __first_7
  # DEBUG __resultD.34706 => __first_7
  # DEBUG __itD.34418 => __first_7
  # DEBUG __itD.33403 => __first_7
  # DEBUG __itD.34416 => _41
  # DEBUG __itD.33403 => _41
  # DEBUG __firstD.34711 => _41
  # DEBUG __lastD.34710 => __first_7
  # DEBUG __resultD.34709 => __first_7
  # DEBUG __itD.34398 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.34396 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.34394 => _41
  # DEBUG __itD.33376 => _41
  # DEBUG __firstD.34714 => _41
  # DEBUG __lastD.34713 => __first_7
  # DEBUG __resultD.34712 => __first_7
  # DEBUG __simpleD.34718 => 1
  # DEBUG __firstD.34721 => _41
  # DEBUG __lastD.34720 => __first_7
  # DEBUG __resultD.34719 => __first_7
  __first.5_49 = (long intD.12) _41;
  _47 = _8 - __first.5_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.34722 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.29234._M_implD.28725._M_finishD.28728;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.29234._M_implD.28725._M_finishD.28728 = _43;
  # DEBUG thisD.34687 => &__positionD.29159
  # DEBUG __firstD.36049 => D#306ptD.0
  # DEBUG __lastD.36050 => _41
  # DEBUG __resultD.36051 => __first_7
  # DEBUG __itD.33689 => _41
  # DEBUG __itD.33403 => _41
  # DEBUG __itD.33687 => D#306ptD.0
  # DEBUG __itD.33403 => D#306ptD.0
  # DEBUG __firstD.36054 => D#306ptD.0
  # DEBUG __lastD.36053 => _41
  # DEBUG __resultD.36052 => __first_7
  # DEBUG __itD.33669 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.33667 => _41
  # DEBUG __itD.33376 => _41
  # DEBUG __itD.33665 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG __firstD.36057 => D#306ptD.0
  # DEBUG __lastD.36056 => _41
  # DEBUG __resultD.36055 => __first_7
  # DEBUG __simpleD.36061 => 1
  # DEBUG __firstD.36064 => D#306ptD.0
  # DEBUG __lastD.36063 => _41
  # DEBUG __resultD.36062 => __first_7
  _104 = __first.5_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.36065 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.34685 => &__positionD.29159
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.34683 => &__positionD.29159
  # DEBUG D#167ptD.0 => &__x_copyD.30215
  # DEBUG __firstD.34675 => D#306ptD.0
  # DEBUG __lastD.34676 => _48
  # DEBUG D#166ptD.0 => D#167ptD.0
  # DEBUG __valueD.34678 => D#166ptD.0
  # DEBUG __itD.33386 => _48
  # DEBUG __itD.33376 => _48
  # DEBUG __itD.33384 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0
  # DEBUG __firstD.34681 => D#306ptD.0
  # DEBUG __lastD.34680 => _48
  # DEBUG __valueD.34679 => D#165ptD.0
  # DEBUG __tmpD.34682 => __x_copy_35
  # DEBUG __firstD.34681 => D#306ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.34681 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.34681 => __position_55
  # DEBUG __firstD.34681 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 48, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 48, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#242ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34797 => D#242ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#207ptD.0 => &__x_copyD.30215
  # DEBUG __firstD.34775 => __first_7
  # DEBUG __nD.34776 => __n_50
  # DEBUG D#206ptD.0 => D#207ptD.0
  # DEBUG __xD.34779 => D#206ptD.0
  # DEBUG D.34778 => D#208ptD.0
  # DEBUG D#205ptD.0 => D#206ptD.0
  # DEBUG __firstD.34782 => __first_7
  # DEBUG __nD.34781 => __n_50
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG __xD.34780 => D#204ptD.0
  # DEBUG __assignableD.34784 => 1
  # DEBUG D#203ptD.0 => D#204ptD.0
  # DEBUG __firstD.34787 => __first_7
  # DEBUG __nD.34786 => __n_50
  # DEBUG D#202ptD.0 => D#203ptD.0
  # DEBUG __xD.34785 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#202ptD.0
  # DEBUG __firstD.34790 => __first_7
  # DEBUG __nD.34789 => __n_50
  # DEBUG D#200ptD.0 => D#201ptD.0
  # DEBUG __valueD.34788 => D#200ptD.0
  # DEBUG __itD.33717 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG D#199ptD.0 => D#200ptD.0
  # DEBUG __firstD.34793 => __first_7
  # DEBUG __nD.34792 => __n_50
  # DEBUG __valueD.34791 => D#199ptD.0
  # DEBUG __tmpD.34794 => __x_copy_35
  # DEBUG __niterD.34795 => __n_50
  # DEBUG __niterD.34795 => __n_50
  # DEBUG __firstD.34793 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.34795 => __n_111
  # DEBUG __firstD.34793 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.34795 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.34793 => __first_64
  # DEBUG __niterD.34795 => __n_63
  # DEBUG __firstD.34793 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 50, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       50 [100.0%]  (FALLTHRU)

;;   basic block 50, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 50, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(50), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.29234._M_implD.28725._M_finishD.28728 = __first_125;
  # DEBUG D#243ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34773 => D#243ptD.0
  # DEBUG thisD.34771 => &__positionD.29159
  # DEBUG __firstD.34736 => D#306ptD.0
  # DEBUG __lastD.34737 => __first_7
  # DEBUG __resultD.34738 => __first_125
  # DEBUG __allocD.34739 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => D#232ptD.0
  # DEBUG __firstD.34743 => D#306ptD.0
  # DEBUG __lastD.34742 => __first_7
  # DEBUG __resultD.34741 => __first_125
  # DEBUG D.34740 => D#231ptD.0
  # DEBUG __firstD.34746 => D#306ptD.0
  # DEBUG __lastD.34745 => __first_7
  # DEBUG __resultD.34744 => __first_125
  # DEBUG __assignableD.34749 => 1
  # DEBUG __firstD.34752 => D#306ptD.0
  # DEBUG __lastD.34751 => __first_7
  # DEBUG __resultD.34750 => __first_125
  # DEBUG __firstD.34755 => D#306ptD.0
  # DEBUG __lastD.34754 => __first_7
  # DEBUG __resultD.34753 => __first_125
  # DEBUG __itD.34418 => __first_7
  # DEBUG __itD.33403 => __first_7
  # DEBUG __itD.34416 => D#306ptD.0
  # DEBUG __itD.33403 => D#306ptD.0
  # DEBUG __firstD.34758 => D#306ptD.0
  # DEBUG __lastD.34757 => __first_7
  # DEBUG __resultD.34756 => __first_125
  # DEBUG __itD.34398 => __first_125
  # DEBUG __itD.33376 => __first_125
  # DEBUG __itD.34396 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.34394 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG __firstD.34761 => D#306ptD.0
  # DEBUG __lastD.34760 => __first_7
  # DEBUG __resultD.34759 => __first_125
  # DEBUG __simpleD.34765 => 1
  # DEBUG __firstD.34768 => D#306ptD.0
  # DEBUG __lastD.34767 => __first_7
  # DEBUG __resultD.34766 => __first_125
  # DEBUG _NumD.34769 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.29234._M_implD.28725._M_finishD.28728;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.29234._M_implD.28725._M_finishD.28728 = _53;
  # DEBUG thisD.34734 => &__positionD.29159
  # DEBUG D#167ptD.0 => &__x_copyD.30215
  # DEBUG __firstD.34726 => D#306ptD.0
  # DEBUG __lastD.34727 => __first_7
  # DEBUG D#166ptD.0 => D#167ptD.0
  # DEBUG __valueD.34729 => D#166ptD.0
  # DEBUG __itD.33386 => __first_7
  # DEBUG __itD.33376 => __first_7
  # DEBUG __itD.33384 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0
  # DEBUG __firstD.34732 => D#306ptD.0
  # DEBUG __lastD.34731 => __first_7
  # DEBUG __valueD.34730 => D#165ptD.0
  # DEBUG __tmpD.34733 => __x_copy_35
  # DEBUG __firstD.34732 => D#306ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.34732 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.34732 => __position_58
  # DEBUG __firstD.34732 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 49, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
;;    succ:       49 [100.0%]  (FALLTHRU)

;;   basic block 49, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 49, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36076 => this_4(D)
  # DEBUG __nD.36077 => __n_2(D)
  # DEBUG __nD.36077 => __n_2(D)
  # DEBUG __sD.36078 => "vector::_M_fill_insert"
  # DEBUG D#183ptD.0 => this_4(D)
  # DEBUG thisD.33498 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#183ptD.0
  # DEBUG D#181ptD.0 => &D#182ptD.0->D.29234
  # DEBUG thisD.33488 => D#181ptD.0
  # DEBUG __aD.33480 => D#180ptD.0
  # DEBUG D#179ptD.0 => D#180ptD.0
  # DEBUG D#168ptD.0 => D#179ptD.0
  # DEBUG thisD.33471 => D#168ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG thisD.36082 => D#23ptD.0
  # DEBUG thisD.36083 => D#23ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG thisD.33516 => D#23ptD.0
  # DEBUG thisD.33515 => D#23ptD.0
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG thisD.33511 => D#23ptD.0
  # DEBUG thisD.33510 => D#23ptD.0
  # DEBUG __aD.36081 => &D.36085
  # DEBUG __bD.36080 => &__nD.36077
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.36079 => __len_124
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG D#23ptD.0 => this_4(D)
  # DEBUG thisD.33503 => D#23ptD.0
  # DEBUG thisD.33502 => D#23ptD.0
  # DEBUG D#183ptD.0 => this_4(D)
  # DEBUG thisD.33518 => D#183ptD.0
  # DEBUG D#182ptD.0 => D#183ptD.0
  # DEBUG D#181ptD.0 => &D#182ptD.0->D.29234
  # DEBUG thisD.33488 => D#181ptD.0
  # DEBUG __aD.33480 => D#180ptD.0
  # DEBUG D#179ptD.0 => D#180ptD.0
  # DEBUG D#168ptD.0 => D#179ptD.0
  # DEBUG thisD.33471 => D#168ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.30248 => NULL
  # DEBUG thisD.34919 => this_4(D)
  # DEBUG D#62ptD.0 => &this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG thisD.34921 => NULL
  # DEBUG __iD.34920 => D#62ptD.0
  # DEBUG __lhsD.34916 => &__positionD.29159
  # DEBUG __rhsD.34917 => &D.30250
  # DEBUG thisD.32683 => &__positionD.29159
  # DEBUG thisD.32681 => &D.30250
  # DEBUG D#254ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.30249 => (const size_typeD.28810) D#254ptD.0
  # DEBUG D#253ptD.0 => &this_4(D)->D.29234
  # DEBUG D#176ptD.0 => D#253ptD.0
  # DEBUG __nD.36067 => NULL
  # DEBUG thisD.36068 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36071 => NULL
  # DEBUG __aD.36070 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36074 => NULL
  # DEBUG thisD.36072 => D#170ptD.0
  # DEBUG D.36073 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.36088 } (escaped heap)
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.29234._M_implD.28725._M_startD.28727;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.29234._M_implD.28725._M_finishD.28728;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 52, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36088 } (escaped heap)
  # iftmp.2_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.36088 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
;;    succ:       52 [100.0%]  (FALLTHRU)

;;   basic block 52, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.30251 => NULL
  # DEBUG __new_finishD.30252 => NULL
  # DEBUG D#237ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34914 => D#237ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.36088 } (escaped heap)
  __first_20 = iftmp.2_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#207ptD.0 => __x_21(D)
  # DEBUG __firstD.34892 => __first_20
  # DEBUG __nD.34893 => __n_2(D)
  # DEBUG D#206ptD.0 => D#207ptD.0
  # DEBUG __xD.34896 => D#206ptD.0
  # DEBUG D.34895 => D#208ptD.0
  # DEBUG D#205ptD.0 => D#206ptD.0
  # DEBUG __firstD.34899 => __first_20
  # DEBUG __nD.34898 => __n_2(D)
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG __xD.34897 => D#204ptD.0
  # DEBUG __assignableD.34901 => 1
  # DEBUG D#203ptD.0 => D#204ptD.0
  # DEBUG __firstD.34904 => __first_20
  # DEBUG __nD.34903 => __n_2(D)
  # DEBUG D#202ptD.0 => D#203ptD.0
  # DEBUG __xD.34902 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#202ptD.0
  # DEBUG __firstD.34907 => __first_20
  # DEBUG __nD.34906 => __n_2(D)
  # DEBUG D#200ptD.0 => D#201ptD.0
  # DEBUG __valueD.34905 => D#200ptD.0
  # DEBUG __itD.33717 => __first_20
  # DEBUG __itD.33376 => __first_20
  # DEBUG D#199ptD.0 => D#200ptD.0
  # DEBUG __firstD.34910 => __first_20
  # DEBUG __nD.34909 => __n_2(D)
  # DEBUG __valueD.34908 => D#199ptD.0
  # DEBUG __tmpD.34911 => _56
  # DEBUG __niterD.34912 => __n_2(D)
  # DEBUG __niterD.34912 => __n_2(D)
  # DEBUG __firstD.34910 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 52, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
  # PT = null { D.36088 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(52)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
  # DEBUG __niterD.34912 => __n_132
  # DEBUG __firstD.34910 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.34912 => __n_79
  # PT = null { D.36088 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.34910 => __first_80
  # DEBUG __niterD.34912 => __n_79
  # DEBUG __firstD.34910 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 51, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU)

;;   basic block 51, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.30252 => 0B
  # DEBUG D#238ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34890 => D#238ptD.0
  # DEBUG thisD.34888 => &__positionD.29159
  # DEBUG D#305ptD.0 => this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.34853 => D#305ptD.0
  # DEBUG __lastD.34854 => D#306ptD.0
  # DEBUG __resultD.34855 => NULL
  # DEBUG __allocD.34856 => D#235ptD.0
  # DEBUG D#234ptD.0 => D#235ptD.0
  # DEBUG D#231ptD.0 => D#234ptD.0
  # DEBUG __firstD.34860 => D#305ptD.0
  # DEBUG __lastD.34859 => D#306ptD.0
  # DEBUG __resultD.34858 => NULL
  # DEBUG D.34857 => D#231ptD.0
  # DEBUG __firstD.34863 => D#305ptD.0
  # DEBUG __lastD.34862 => D#306ptD.0
  # DEBUG __resultD.34861 => NULL
  # DEBUG __assignableD.34866 => 1
  # DEBUG __firstD.34869 => D#305ptD.0
  # DEBUG __lastD.34868 => D#306ptD.0
  # DEBUG __resultD.34867 => NULL
  # DEBUG __firstD.34872 => D#305ptD.0
  # DEBUG __lastD.34871 => D#306ptD.0
  # DEBUG __resultD.34870 => NULL
  # DEBUG __itD.34418 => D#306ptD.0
  # DEBUG __itD.33403 => D#306ptD.0
  # DEBUG __itD.34416 => D#305ptD.0
  # DEBUG __itD.33403 => D#305ptD.0
  # DEBUG __firstD.34875 => D#305ptD.0
  # DEBUG __lastD.34874 => D#306ptD.0
  # DEBUG __resultD.34873 => NULL
  # DEBUG __itD.34398 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.34396 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG __itD.34394 => D#305ptD.0
  # DEBUG __itD.33376 => D#305ptD.0
  # DEBUG __firstD.34878 => D#305ptD.0
  # DEBUG __lastD.34877 => D#306ptD.0
  # DEBUG __resultD.34876 => NULL
  # DEBUG __simpleD.34882 => 1
  # DEBUG __firstD.34885 => D#305ptD.0
  # DEBUG __lastD.34884 => D#306ptD.0
  # DEBUG __resultD.34883 => NULL
  # DEBUG D#304ptD.0 => (long intD.12) D#305ptD.0
  # DEBUG D#303ptD.0 => _158 - D#304ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.34886 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 51, next block 38, flags: (NEW)
;;    pred:       51 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       51 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memmoveD.995 (iftmp.2_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#302ptD.0 => (long unsigned intD.14) D#303ptD.0
  # DEBUG __new_finishD.30252 => iftmp.2_113 + D#302ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.36088 } (escaped heap)
  __new_finish_26 = iftmp.2_113 + _133;
  # DEBUG __new_finishD.30252 => __new_finish_26
  # DEBUG D#239ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34851 => D#239ptD.0
  # DEBUG D#301ptD.0 => this_4(D)->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG thisD.34849 => &__positionD.29159
  # DEBUG __firstD.34814 => D#306ptD.0
  # DEBUG __lastD.34815 => D#301ptD.0
  # DEBUG __resultD.34816 => __new_finish_26
  # DEBUG __allocD.34817 => D#235ptD.0
  # DEBUG D#234ptD.0 => D#235ptD.0
  # DEBUG D#231ptD.0 => D#234ptD.0
  # DEBUG __firstD.34821 => D#306ptD.0
  # DEBUG __lastD.34820 => D#301ptD.0
  # DEBUG __resultD.34819 => __new_finish_26
  # DEBUG D.34818 => D#231ptD.0
  # DEBUG __firstD.34824 => D#306ptD.0
  # DEBUG __lastD.34823 => D#301ptD.0
  # DEBUG __resultD.34822 => __new_finish_26
  # DEBUG __assignableD.34827 => 1
  # DEBUG __firstD.34830 => D#306ptD.0
  # DEBUG __lastD.34829 => D#301ptD.0
  # DEBUG __resultD.34828 => __new_finish_26
  # DEBUG __firstD.34833 => D#306ptD.0
  # DEBUG __lastD.34832 => D#301ptD.0
  # DEBUG __resultD.34831 => __new_finish_26
  # DEBUG __itD.34418 => D#301ptD.0
  # DEBUG __itD.33403 => D#301ptD.0
  # DEBUG __itD.34416 => D#306ptD.0
  # DEBUG __itD.33403 => D#306ptD.0
  # DEBUG __firstD.34836 => D#306ptD.0
  # DEBUG __lastD.34835 => D#301ptD.0
  # DEBUG __resultD.34834 => __new_finish_26
  # DEBUG __itD.34398 => __new_finish_26
  # DEBUG __itD.33376 => __new_finish_26
  # DEBUG __itD.34396 => D#301ptD.0
  # DEBUG __itD.33376 => D#301ptD.0
  # DEBUG __itD.34394 => D#306ptD.0
  # DEBUG __itD.33376 => D#306ptD.0
  # DEBUG __firstD.34839 => D#306ptD.0
  # DEBUG __lastD.34838 => D#301ptD.0
  # DEBUG __resultD.34837 => __new_finish_26
  # DEBUG __simpleD.34843 => 1
  # DEBUG __firstD.34846 => D#306ptD.0
  # DEBUG __lastD.34845 => D#301ptD.0
  # DEBUG __resultD.34844 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.34847 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.36088 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.30252 => _70
  # DEBUG D#240ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34812 => D#240ptD.0
  # DEBUG D#252ptD.0 => this_4(D)->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG D#251ptD.0 => this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.34809 => D#251ptD.0
  # DEBUG __lastD.34810 => D#252ptD.0
  # DEBUG D.34811 => NULL
  # DEBUG D#55ptD.0 => D#251ptD.0
  # DEBUG D#56ptD.0 => D#252ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG D#250ptD.0 => this_4(D)->D.29234._M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#249ptD.0 => (long intD.12) D#250ptD.0
  # DEBUG D#248ptD.0 => (long intD.12) D#305ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0 - D#248ptD.0
  # DEBUG D#246ptD.0 => D#247ptD.0 /[ex] 4
  # DEBUG D#245ptD.0 => (long unsigned intD.14) D#246ptD.0
  # DEBUG D#244ptD.0 => &this_4(D)->D.29234
  # DEBUG thisD.34799 => D#244ptD.0
  # DEBUG __pD.34800 => D#305ptD.0
  # DEBUG __nD.34801 => D#245ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#244ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#245ptD.0
  # DEBUG __pD.34805 => D#305ptD.0
  # DEBUG __aD.34803 => D#145ptD.0
  # DEBUG __nD.34804 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.34808 => D#305ptD.0
  # DEBUG thisD.34806 => D#141ptD.0
  # DEBUG D.34807 => D#142ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.36088 } (escaped heap)
  # CLB = nonlocal null { D.36088 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 53, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
;;    succ:       53 [100.0%]  (FALLTHRU)

;;   basic block 53, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.29234._M_implD.28725._M_startD.28727 = iftmp.2_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.29234._M_implD.28725._M_finishD.28728 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.29234._M_implD.28725._M_end_of_storageD.28729 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 53, next block 54, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>
;;    succ:       54 [100.0%]  (FALLTHRU)

;;   basic block 54, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 54, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.30248 => NULL
  # DEBUG thisD.34919 => this_4(D)
  # DEBUG D#62ptD.0 => &this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG thisD.34921 => NULL
  # DEBUG __iD.34920 => D#62ptD.0
  # DEBUG __lhsD.34916 => &__positionD.29159
  # DEBUG __rhsD.34917 => &D.30250
  # DEBUG thisD.32683 => &__positionD.29159
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.32681 => &D.30250
  _143 = _144 - _116;
  # DEBUG D#254ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.30249 => (const size_typeD.28810) D#254ptD.0
  # DEBUG D#253ptD.0 => &this_4(D)->D.29234
  # DEBUG D#176ptD.0 => D#253ptD.0
  # DEBUG __nD.36067 => NULL
  # DEBUG thisD.36068 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.30248 => NULL
  # DEBUG thisD.34919 => this_4(D)
  # DEBUG D#62ptD.0 => &this_4(D)->D.29234._M_implD.28725._M_startD.28727
  # DEBUG thisD.34921 => NULL
  # DEBUG __iD.34920 => D#62ptD.0
  # DEBUG __lhsD.34916 => &__positionD.29159
  # DEBUG __rhsD.34917 => &D.30250
  # DEBUG thisD.32683 => &__positionD.29159
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.32681 => &D.30250
  _150 = _151 - _116;
  # DEBUG D#254ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.30249 => (const size_typeD.28810) D#254ptD.0
  # DEBUG D#253ptD.0 => &this_4(D)->D.29234
  # DEBUG D#176ptD.0 => D#253ptD.0
  # DEBUG __nD.36067 => NULL
  # DEBUG thisD.36068 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<int>*, std::vector<std::vector<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<int>] (_ZNSt6vectorIS_IiSaIiEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=1517, decl_uid=28321, cgraph_uid=529, symbol_order=530)


Pass statistics:
----------------


Global statistics (BBS:218, LOOPS:18, CONDITIONS:83, STMTS:2059)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::vector<int>; _Alloc = std::allocator<std::vector<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::vector<int>*, std::vector<std::vector<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::vector<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::vector<int>] (struct vectorD.27655 * const thisD.28322, struct iteratorD.27966 __positionD.28323, size_typeD.27974 __nD.28324, const struct value_typeD.27961 & __xD.28325)
Eh tree:
   11 must_not_throw
   10 cleanup land:{6,<L18>}
   9 try land:{29,<L52>},{19,<L37>},{5,<L57>} catch:{}
     29 try land:{31,<L55>},{18,<L56>} catch:{}
     28 cleanup land:{17,<L36>}
     27 must_not_throw
     26 try land:{30,<L53>},{16,<L54>} catch:{}
     25 cleanup land:{15,<L33>}
     24 must_not_throw
     23 try land:{28,<L50>},{14,<L51>} catch:{}
     22 cleanup land:{13,<L30>}
     21 must_not_throw
   2 cleanup land:{27,<L48>},{25,<L45>},{23,<L42>},{22,<L41>},{21,<L40>},{2,<L49>}
     20 try land:{26,<L46>},{12,<L47>} catch:{}
     19 cleanup land:{11,<L27>}
     18 must_not_throw
     17 try land:{24,<L43>},{10,<L44>} catch:{}
     16 cleanup land:{9,<L24>}
     15 must_not_throw
     14 try land:{20,<L38>},{8,<L39>} catch:{}
     13 cleanup land:{7,<L21>}
     12 must_not_throw
{
  intD.9 * D.36792;
  const ptrdiff_tD.2819 _NumD.36783;
  struct vectorD.27653 * D.36739;
  struct vectorD.27653 * __firstD.36712;
  struct vectorD.27653 * __resultD.36714;
  intD.9 * D.36711;
  const ptrdiff_tD.2819 _NumD.36702;
  struct vectorD.27653 * D.36658;
  struct vectorD.27653 * __firstD.36631;
  struct vectorD.27653 * __resultD.36633;
  intD.9 * D.36630;
  const ptrdiff_tD.2819 _NumD.36621;
  const long unsigned intD.14 D.36580;
  const size_typeD.27974 __lenD.36574;
  size_typeD.27974 D.36579;
  size_typeD.27974 __nD.36572;
  struct vectorD.27653 * D.36570;
  struct vectorD.27653 * D.36558;
  struct vectorD.27653 * __firstD.36531;
  long unsigned intD.14 __nD.36532;
  intD.9 * D.36530;
  const ptrdiff_tD.2819 _NumD.36521;
  struct vectorD.27653 * D.36477;
  struct vectorD.27653 * __firstD.36450;
  struct vectorD.27653 * __resultD.36452;
  intD.9 * D.36449;
  const ptrdiff_tD.2819 _NumD.36440;
  struct vectorD.27653 * D.36396;
  struct vectorD.27653 * __firstD.36369;
  long unsigned intD.14 __nD.36370;
  intD.9 * D.36368;
  const ptrdiff_tD.2819 _NumD.36359;
  struct vectorD.27653 * D.36315;
  struct vectorD.27653 * __firstD.36288;
  struct vectorD.27653 * __resultD.36290;
  intD.9 * D.36287;
  const ptrdiff_tD.2819 _NumD.36278;
  struct vectorD.27653 * const __positionD.35530;
  struct vectorD.27653 * __firstD.35468;
  struct vectorD.27653 * __firstD.35427;
  struct vectorD.27653 * __firstD.35336;
  struct vectorD.27653 * __firstD.35295;
  difference_typeD.29643 __nD.35291;
  struct vectorD.27653 * __lastD.35276;
  struct vectorD.27653 * __new_finishD.30204;
  const size_typeD.27974 __elems_beforeD.30201;
  struct vectorD.27653 * __old_finishD.30176;
  const size_typeD.27974 __elems_afterD.30168;
  struct value_typeD.27961 __x_copyD.30166;
  struct vectorD.27653 * _10;
  long intD.12 _11;
  struct vectorD.27653 * _12;
  long intD.12 _13;
  long intD.12 _14;
  long intD.12 _15;
  long unsigned intD.14 _16;
  intD.9 * const _17;
  long unsigned intD.14 pretmp_20;
  struct vectorD.27653 * const _23;
  intD.9 * const pretmp_24;
  long intD.12 __last.7_25;
  long unsigned intD.14 _26;
  difference_typeD.29648 _30;
  long unsigned intD.14 _32;
  long intD.12 _34;
  struct vectorD.27653 * _35;
  long intD.12 _36;
  struct vectorD.27653 * pretmp_40;
  struct vectorD.27653 * _44;
  voidD.45 * _46;
  sizetype _49;
  sizetype _50;
  struct vectorD.27653 * _51;
  long unsigned intD.14 _55;
  long unsigned intD.14 _59;
  sizetype _60;
  struct vectorD.27653 * _63;
  struct vectorD.27653 * _67;
  struct vectorD.27653 * _74;
  long unsigned intD.14 _75;
  struct vectorD.27653 * _76;
  long intD.12 _78;
  long unsigned intD.14 prephitmp_83;
  intD.9 * _85;
  long intD.12 pretmp_91;
  intD.9 * _92;
  intD.9 * _94;
  intD.9 * _95;
  intD.9 * _98;
  voidD.45 * _100;
  struct vectorD.27653 * pretmp_101;
  struct vectorD.27653 * prephitmp_103;
  intD.9 * const _113;
  intD.9 * const _114;
  intD.9 * const _135;
  intD.9 * const _138;
  intD.9 * const _139;
  intD.9 * const _153;
  intD.9 * const _154;
  long intD.12 _155;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  size_typeD.28810 _159;
  intD.9 * _162;
  intD.9 * _171;
  intD.9 * _172;
  intD.9 * iftmp.2_173;
  long unsigned intD.14 prephitmp_174;
  long unsigned intD.14 pretmp_175;
  voidD.45 * _178;
  intD.9 * _180;
  intD.9 * const _182;
  long intD.12 _183;
  long intD.12 _184;
  long intD.12 _185;
  long intD.12 _186;
  size_typeD.28810 _187;
  intD.9 * _190;
  intD.9 * const _191;
  intD.9 * const _192;
  long intD.12 __last.4_193;
  long intD.12 __first.5_194;
  long intD.12 _195;
  long unsigned intD.14 _197;
  intD.9 * _199;
  long unsigned intD.14 _200;
  intD.9 * _201;
  intD.9 * iftmp.2_202;
  struct vectorD.27653 * _203;
  long unsigned intD.14 _204;
  voidD.45 * _207;
  intD.9 * _209;
  intD.9 * const _211;
  long intD.12 _212;
  long intD.12 _213;
  long intD.12 _214;
  long intD.12 _215;
  size_typeD.28810 _216;
  long unsigned intD.14 prephitmp_217;
  intD.9 * _219;
  intD.9 * const _220;
  intD.9 * const _221;
  long intD.12 __last.4_222;
  long intD.12 __first.5_223;
  long intD.12 _224;
  long unsigned intD.14 _226;
  intD.9 * _228;
  long unsigned intD.14 _229;
  intD.9 * _230;
  intD.9 * iftmp.2_231;
  voidD.45 * _236;
  intD.9 * _238;
  intD.9 * const _240;
  long intD.12 _241;
  long intD.12 _242;
  long intD.12 _243;
  long intD.12 _244;
  size_typeD.28810 _245;
  intD.9 * _248;
  intD.9 * const _249;
  intD.9 * const _250;
  long intD.12 __last.4_251;
  long intD.12 __first.5_252;
  long intD.12 _253;
  long unsigned intD.14 _255;
  intD.9 * _257;
  long unsigned intD.14 _258;
  intD.9 * _259;
  intD.9 * iftmp.2_260;
  const ptrdiff_tD.2819 prephitmp_261;
  intD.9 * const pretmp_262;
  voidD.45 * _265;
  intD.9 * _267;
  struct vectorD.27653 * _269;
  long intD.12 pretmp_271;
  long intD.12 _273;
  long intD.12 _274;
  long intD.12 _275;
  long unsigned intD.14 _277;
  long unsigned intD.14 prephitmp_278;
  intD.9 * const prephitmp_279;
  intD.9 * const _283;
  long intD.12 _284;
  long intD.12 _285;
  long intD.12 _286;
  long intD.12 _287;
  size_typeD.28810 _288;
  long unsigned intD.14 _289;
  intD.9 * _291;
  intD.9 * _300;
  long unsigned intD.14 _301;
  intD.9 * _302;
  intD.9 * iftmp.2_303;
  intD.9 * const pretmp_305;
  voidD.45 * _308;
  intD.9 * _310;
  intD.9 * const _312;
  long intD.12 _313;
  long intD.12 _314;
  long intD.12 _315;
  long intD.12 _316;
  size_typeD.28810 _317;
  long intD.12 pretmp_318;
  intD.9 * _320;
  intD.9 * const _321;
  intD.9 * const _322;
  long intD.12 __last.4_323;
  long intD.12 __first.5_324;
  long intD.12 _325;
  long unsigned intD.14 _327;
  intD.9 * _329;
  long unsigned intD.14 _330;
  intD.9 * _331;
  intD.9 * iftmp.2_332;
  voidD.45 * _337;
  intD.9 * _339;
  intD.9 * const _341;
  long intD.12 _342;
  long intD.12 _343;
  long intD.12 _344;
  long intD.12 _345;
  size_typeD.28810 _346;
  long intD.12 _347;
  intD.9 * _349;
  intD.9 * _358;
  long unsigned intD.14 _359;
  intD.9 * _360;
  intD.9 * iftmp.2_361;
  long unsigned intD.14 prephitmp_364;
  const ptrdiff_tD.2819 pretmp_378;
  intD.9 * const pretmp_386;
  boolD.2757 _428;
  long intD.12 pretmp_470;
  const ptrdiff_tD.2819 pretmp_476;
  long unsigned intD.14 prephitmp_545;
  intD.9 * const pretmp_551;
  intD.9 * const prephitmp_553;
  long unsigned intD.14 pretmp_555;
  long intD.12 prephitmp_557;
  struct vectorD.27653 * const prephitmp_558;
  long unsigned intD.14 pretmp_559;
  boolD.2757 _560;
  long intD.12 _561;
  difference_typeD.29648 _565;
  long intD.12 _567;
  difference_typeD.29648 _568;
  long intD.12 _569;
  long unsigned intD.14 pretmp_570;
  const ptrdiff_tD.2819 prephitmp_571;
  long intD.12 pretmp_573;
  long intD.12 pretmp_574;
  intD.9 * const pretmp_576;
  long unsigned intD.14 prephitmp_578;
  long intD.12 pretmp_579;
  intD.9 * const prephitmp_580;
  struct vectorD.27653 * const pretmp_581;
  long unsigned intD.14 pretmp_582;
  long unsigned intD.14 prephitmp_583;
  const ptrdiff_tD.2819 prephitmp_584;
  long unsigned intD.14 pretmp_585;
  const ptrdiff_tD.2819 pretmp_586;
  long intD.12 pretmp_589;
  long intD.12 pretmp_592;
  long intD.12 pretmp_597;
  boolD.2757 _604;
  struct vectorD.27653 * prephitmp_622;
  long intD.12 _629;
  long intD.12 _630;
  long unsigned intD.14 pretmp_638;
  long unsigned intD.14 prephitmp_639;
  long unsigned intD.14 pretmp_640;
  long unsigned intD.14 prephitmp_641;
  long unsigned intD.14 pretmp_642;
  long unsigned intD.14 prephitmp_643;
  long unsigned intD.14 pretmp_644;
  long unsigned intD.14 prephitmp_645;
  struct vectorD.27653 * pretmp_646;
  struct vectorD.27653 * prephitmp_647;
  long unsigned intD.14 pretmp_657;
  long unsigned intD.14 prephitmp_658;
  long unsigned intD.14 pretmp_659;
  long unsigned intD.14 prephitmp_660;
  long unsigned intD.14 pretmp_661;
  long unsigned intD.14 prephitmp_662;
  long unsigned intD.14 pretmp_663;
  long unsigned intD.14 prephitmp_664;

;;   basic block 2, loop depth 0, count 0, freq 1484, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#392ptD.0 => MEM[(struct __normal_iteratorD.27967 *)&__positionD.28323]
  # DEBUG __positionD.35530 => D#392ptD.0
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 193>;
;;    succ:       3 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                193 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 905, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal 
  __position_22 = MEM[(struct __normal_iteratorD.27967 *)&__positionD.28323];
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _10 = this_9(D)->D.28398._M_implD.27889._M_end_of_storageD.27893;
  _11 = (long intD.12) _10;
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _12 = this_9(D)->D.28398._M_implD.27889._M_finishD.27892;
  _13 = (long intD.12) _12;
  _14 = _11 - _13;
  # RANGE [-384307168202282325, 384307168202282325]
  _15 = _14 /[ex] 24;
  # RANGE ~[384307168202282326, 18062436905507269290]
  _16 = (long unsigned intD.14) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 107>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                107 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 453, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.36238 => &__x_copyD.30166
  # DEBUG __xD.36239 => __x_28(D)
  # DEBUG D#210ptD.0 => &MEM[(const struct vectorD.27653 *)__x_28(D)].D.29234
  # DEBUG thisD.34092 => D#210ptD.0
  # DEBUG __aD.34090 => NULL
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _153 = MEM[(intD.9 * *)__x_28(D)];
  # DEBUG D#23ptD.0 => __x_28(D)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _154 = MEM[(intD.9 * *)__x_28(D) + 8B];
  # DEBUG D#23ptD.0 => __x_28(D)
  # DEBUG thisD.36240 => D#23ptD.0
  # DEBUG thisD.36241 => D#23ptD.0
  _155 = (long intD.12) _154;
  _156 = (long intD.12) _153;
  _157 = _155 - _156;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _158 = _157 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _159 = (size_typeD.28810) _158;
  # DEBUG D#212ptD.0 => &__x_copyD.30166.D.29234
  # DEBUG thisD.36244 => D#212ptD.0
  # DEBUG __nD.36243 => NULL
  # DEBUG __aD.36242 => NULL
  # DEBUG D#178ptD.0 => &D#212ptD.0->_M_implD.28725
  # DEBUG thisD.36246 => D#178ptD.0
  # DEBUG __aD.36245 => NULL
  # DEBUG thisD.33353 => D#178ptD.0
  # DEBUG __aD.33354 => NULL
  # DEBUG thisD.33350 => D#178ptD.0
  # DEBUG D.33351 => NULL
  # .MEM_478 = VDEF <.MEM_8(D)>
  MEM[(struct _Vector_implD.28702 *)&__x_copyD.30166]._M_startD.28727 = 0B;
  # .MEM_479 = VDEF <.MEM_478>
  MEM[(struct _Vector_implD.28702 *)&__x_copyD.30166]._M_finishD.28728 = 0B;
  # .MEM_480 = VDEF <.MEM_479>
  MEM[(struct _Vector_implD.28702 *)&__x_copyD.30166]._M_end_of_storageD.28729 = 0B;
  # DEBUG thisD.36248 => D#212ptD.0
  # DEBUG __nD.36247 => NULL
  # DEBUG D#176ptD.0 => D#212ptD.0
  # DEBUG __nD.36279 => _159
  # DEBUG thisD.36280 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (_159 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 45, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_559 = (long unsigned intD.14) _157;
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 407, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36283 => _159
  # DEBUG __aD.36282 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36286 => _159
  # DEBUG thisD.36284 => D#170ptD.0
  # DEBUG D.36285 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  if (_159 > 4611686018427387903)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_482 = VDEF <.MEM_480>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2824 ();
;;    succ:      

;;   basic block 8, loop depth 0, count 0, freq 407, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _55 = (long unsigned intD.14) _157;
  # .MEM_481 = VDEF <.MEM_480>
  # PT = { D.36823 } (escaped heap)
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _172 = _ZnwmD.2764 (_55);
  # VUSE <.MEM_481>
  pretmp_581 = MEM[(struct vectorD.27653 * const &)this_9(D) + 8];
  pretmp_91 = (long intD.12) pretmp_581;
  # VUSE <.MEM_481>
  pretmp_576 = MEM[(intD.9 * *)__x_28(D) + 8B];
  # VUSE <.MEM_481>
  pretmp_551 = MEM[(intD.9 * *)__x_28(D)];
  pretmp_579 = (long intD.12) pretmp_576;
  pretmp_574 = (long intD.12) pretmp_551;
  pretmp_573 = pretmp_579 - pretmp_574;
  pretmp_476 = pretmp_573 /[ex] 4;
  pretmp_570 = (long unsigned intD.14) pretmp_573;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 453, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36823 } (escaped heap)
  # iftmp.2_173 = PHI <0B(5), _172(8)>
  # .MEM_362 = PHI <.MEM_480(5), .MEM_481(8)>
  # PT = nonlocal escaped 
  # prephitmp_558 = PHI <_12(5), pretmp_581(8)>
  # prephitmp_557 = PHI <_13(5), pretmp_91(8)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_578 = PHI <pretmp_559(5), _55(8)>
  # PT = nonlocal escaped 
  # prephitmp_580 = PHI <_153(5), pretmp_551(8)>
  # RANGE [-2305843009213693952, 2305843009213693951]
  # prephitmp_571 = PHI <_158(5), pretmp_476(8)>
  # prephitmp_545 = PHI <pretmp_559(5), pretmp_570(8)>
  # .MEM_484 = VDEF <.MEM_362>
  MEM[(struct _Vector_baseD.28492 *)&__x_copyD.30166]._M_implD.28725._M_startD.28727 = iftmp.2_173;
  # .MEM_485 = VDEF <.MEM_484>
  MEM[(struct _Vector_baseD.28492 *)&__x_copyD.30166]._M_implD.28725._M_finishD.28728 = iftmp.2_173;
  # PT = null { D.36823 } (escaped heap)
  _162 = iftmp.2_173 + prephitmp_578;
  # .MEM_486 = VDEF <.MEM_485>
  MEM[(struct _Vector_baseD.28492 *)&__x_copyD.30166]._M_implD.28725._M_end_of_storageD.28729 = _162;
  # DEBUG D#211ptD.0 => &__x_copyD.30166.D.29234
  # DEBUG thisD.34075 => D#211ptD.0
  # DEBUG D#379ptD.0 => MEM[(intD.9 * *)__x_28(D) + 8B]
  # DEBUG D#25ptD.0 => __x_28(D)
  # DEBUG thisD.34073 => D#25ptD.0
  # DEBUG thisD.32500 => NULL
  # DEBUG __iD.32499 => NULL
  # DEBUG D#378ptD.0 => MEM[(intD.9 * *)__x_28(D)]
  # DEBUG D#26ptD.0 => __x_28(D)
  # DEBUG thisD.34070 => D#26ptD.0
  # DEBUG thisD.32516 => NULL
  # DEBUG __iD.32515 => NULL
  # DEBUG __firstD.34096 => D#378ptD.0
  # DEBUG __lastD.34097 => D#379ptD.0
  # DEBUG __resultD.36250 => NULL
  # DEBUG D.36249 => D#209ptD.0
  # DEBUG __firstD.34067 => D#378ptD.0
  # DEBUG __lastD.34068 => D#379ptD.0
  # DEBUG __resultD.36253 => NULL
  # DEBUG __assignableD.36258 => 1
  # DEBUG __firstD.34031 => D#378ptD.0
  # DEBUG __lastD.34032 => D#379ptD.0
  # DEBUG __resultD.36259 => NULL
  # DEBUG __firstD.33961 => D#378ptD.0
  # DEBUG __lastD.33960 => D#379ptD.0
  # DEBUG __resultD.36262 => NULL
  # DEBUG __itD.33932 => D#379ptD.0
  # DEBUG __it$_M_currentD.33902 => D#379ptD.0
  # DEBUG __itD.33934 => D#378ptD.0
  # DEBUG __it$_M_currentD.33898 => D#378ptD.0
  # DEBUG __firstD.33907 => D#378ptD.0
  # DEBUG __lastD.33908 => D#379ptD.0
  # DEBUG __resultD.36265 => NULL
  # DEBUG __itD.33873 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.33893 => D#379ptD.0
  # DEBUG __itD.33871 => D#379ptD.0
  # DEBUG thisD.33846 => NULL
  # DEBUG __itD.33895 => D#378ptD.0
  # DEBUG __itD.33867 => D#378ptD.0
  # DEBUG thisD.33846 => NULL
  # DEBUG __firstD.36270 => D#378ptD.0
  # DEBUG __lastD.36269 => D#379ptD.0
  # DEBUG __resultD.36268 => NULL
  # DEBUG __simpleD.36274 => 1
  # DEBUG __firstD.36277 => D#378ptD.0
  # DEBUG __lastD.36276 => D#379ptD.0
  # DEBUG __resultD.36275 => NULL
  # DEBUG D#377ptD.0 => (long intD.12) D#379ptD.0
  # DEBUG D#376ptD.0 => (long intD.12) D#378ptD.0
  # DEBUG D#375ptD.0 => D#377ptD.0 - D#376ptD.0
  # DEBUG _NumD.36278 => D#375ptD.0 /[ex] 4
  if (prephitmp_571 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 176, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_487 = VDEF <.MEM_486>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  memmoveD.995 (iftmp.2_173, prephitmp_580, prephitmp_545);
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 453, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_363 = PHI <.MEM_486(9), .MEM_487(10)>
  # PT = null { D.36823 } (escaped heap)
  _171 = iftmp.2_173 + prephitmp_545;
  # .MEM_488 = VDEF <.MEM_363>
  __x_copyD.30166.D.29234._M_implD.28725._M_finishD.28728 = _171;
  # DEBUG thisD.35253 => this_9(D)
  # DEBUG D#27ptD.0 => &this_9(D)->D.28398._M_implD.27889._M_finishD.27892
  # DEBUG thisD.35255 => NULL
  # DEBUG __iD.35254 => D#27ptD.0
  # DEBUG D#374ptD.0 => MEM[(struct vectorD.27653 * const &)this_9(D) + 8]
  # DEBUG __lhsD.35250 => &D.30169
  # DEBUG __rhsD.35251 => &__positionD.28323
  # DEBUG thisD.32673 => &D.30169
  # DEBUG thisD.32671 => &__positionD.28323
  _36 = (long intD.12) __position_22;
  _34 = prephitmp_557 - _36;
  # RANGE [-384307168202282325, 384307168202282325]
  _30 = _34 /[ex] 24;
  # RANGE ~[384307168202282326, 18062436905507269290]
  __elems_after_57 = (const size_typeD.27974) _30;
  # DEBUG __elems_afterD.30168 => __elems_after_57
  # DEBUG __old_finishD.30176 => D#374ptD.0
  if (__n_7(D) < __elems_after_57)
    goto <bb 12>;
  else
    goto <bb 49>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#273ptD.0 => &this_9(D)->D.28398
  # DEBUG thisD.35273 => D#273ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _59 = __n_7(D) * 24;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _60 = -_59;
  # PT = nonlocal escaped 
  __last_61 = prephitmp_558 + _60;
  # DEBUG __firstD.35258 => __last_61
  # DEBUG __lastD.35259 => D#374ptD.0
  # DEBUG __resultD.35260 => D#374ptD.0
  # DEBUG __allocD.35261 => D#215ptD.0
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#214ptD.0
  # DEBUG __firstD.35265 => __last_61
  # DEBUG __lastD.35264 => D#374ptD.0
  # DEBUG __resultD.35263 => D#374ptD.0
  # DEBUG D.35262 => D#213ptD.0
  # DEBUG __firstD.35268 => __last_61
  # DEBUG __lastD.35267 => D#374ptD.0
  # DEBUG __resultD.35266 => D#374ptD.0
  # DEBUG __assignableD.35271 => 1
  # DEBUG __firstD.36288 => __last_61
  # DEBUG __lastD.36289 => D#374ptD.0
  # DEBUG __resultD.36290 => D#374ptD.0
  # DEBUG __curD.36291 => D#374ptD.0
  # DEBUG __curD.36291 => D#374ptD.0
  # DEBUG __firstD.36288 => __last_61
  if (__last_61 == prephitmp_558)
    goto <bb 28>;
  else
    goto <bb 13>;
;;    succ:       28 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 216, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 4766, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __last_246 = PHI <__last_61(13), __last_176(26)>
  # PT = nonlocal escaped 
  # __old_finish_599 = PHI <prephitmp_558(13), __old_finish_177(26)>
  # .MEM_606 = PHI <.MEM_488(13), .MEM_367(26)>
  # DEBUG __curD.36291 => __old_finish_599
  # DEBUG __firstD.36288 => __last_246
  # DEBUG __rD.34109 => __old_finish_599
  # DEBUG __pD.36314 => NULL
  # DEBUG __valueD.36313 => __last_246
  # DEBUG D#3ptD.0 => 24
  # DEBUG __pD.34101 => NULL
  # DEBUG D.34102 => D#3ptD.0
  if (__old_finish_599 != 0B)
    goto <bb 15>;
  else
    goto <bb 25>;
;;    succ:       15 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 4765, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.36319 => __old_finish_599
  # DEBUG __xD.36320 => __last_246
  # DEBUG D#210ptD.0 => &MEM[(const struct vectorD.27653 *)__last_246].D.29234
  # DEBUG thisD.34092 => D#210ptD.0
  # DEBUG __aD.34090 => NULL
  # VUSE <.MEM_606>
  # PT = nonlocal escaped 
  _135 = MEM[(intD.9 * *)__last_246];
  # DEBUG D#23ptD.0 => __last_246
  # VUSE <.MEM_606>
  # PT = nonlocal escaped 
  _182 = MEM[(intD.9 * *)__last_246 + 8B];
  # DEBUG D#23ptD.0 => __last_246
  # DEBUG thisD.36321 => D#23ptD.0
  # DEBUG thisD.36322 => D#23ptD.0
  _183 = (long intD.12) _182;
  _184 = (long intD.12) _135;
  _185 = _183 - _184;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _186 = _185 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _187 = (size_typeD.28810) _186;
  # DEBUG D#212ptD.0 => &__old_finish_599->D.29234
  # DEBUG thisD.36325 => D#212ptD.0
  # DEBUG __nD.36324 => NULL
  # DEBUG __aD.36323 => NULL
  # DEBUG D#178ptD.0 => &D#212ptD.0->_M_implD.28725
  # DEBUG thisD.36327 => D#178ptD.0
  # DEBUG __aD.36326 => NULL
  # DEBUG thisD.33353 => D#178ptD.0
  # DEBUG __aD.33354 => NULL
  # DEBUG thisD.33350 => D#178ptD.0
  # DEBUG D.33351 => NULL
  # .MEM_489 = VDEF <.MEM_606>
  MEM[(struct _Vector_implD.28702 *)__old_finish_599]._M_startD.28727 = 0B;
  # .MEM_490 = VDEF <.MEM_489>
  MEM[(struct _Vector_implD.28702 *)__old_finish_599]._M_finishD.28728 = 0B;
  # .MEM_491 = VDEF <.MEM_490>
  MEM[(struct _Vector_implD.28702 *)__old_finish_599]._M_end_of_storageD.28729 = 0B;
  # DEBUG thisD.36329 => D#212ptD.0
  # DEBUG __nD.36328 => NULL
  # DEBUG D#176ptD.0 => D#212ptD.0
  # DEBUG __nD.36360 => _187
  # DEBUG thisD.36361 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (_187 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 477, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_657 = (long unsigned intD.14) _185;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 4289, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36364 => _187
  # DEBUG __aD.36363 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36367 => _187
  # DEBUG thisD.36365 => D#170ptD.0
  # DEBUG D.36366 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  if (_187 > 4611686018427387903)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 2, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_465 = PHI <__old_finish_599(17)>
  [LP 20] # .MEM_493 = VDEF <.MEM_491>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2824 ();
;;    succ:       30 (EH,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 4287, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _200 = (long unsigned intD.14) _185;
  [LP 8] # .MEM_492 = VDEF <.MEM_491>
  # PT = { D.36824 } (escaped heap)
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _201 = _ZnwmD.2764 (_200);
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_464 = PHI <__old_finish_599(19)>
<L39>: [LP 8]
  goto <bb 31> (<L19>);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 4763, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36824 } (escaped heap)
  # iftmp.2_202 = PHI <0B(16), _201(19)>
  # .MEM_365 = PHI <.MEM_491(16), .MEM_492(19)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_658 = PHI <pretmp_657(16), _200(19)>
  # .MEM_504 = VDEF <.MEM_365>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_599]._M_implD.28725._M_startD.28727 = iftmp.2_202;
  # .MEM_505 = VDEF <.MEM_504>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_599]._M_implD.28725._M_finishD.28728 = iftmp.2_202;
  # PT = null { D.36824 } (escaped heap)
  _190 = iftmp.2_202 + prephitmp_658;
  # .MEM_506 = VDEF <.MEM_505>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_599]._M_implD.28725._M_end_of_storageD.28729 = _190;
  # DEBUG D#211ptD.0 => &__old_finish_599->D.29234
  # DEBUG thisD.34075 => D#211ptD.0
  # VUSE <.MEM_506>
  # PT = nonlocal escaped 
  _191 = MEM[(intD.9 * *)__last_246 + 8B];
  # DEBUG D#25ptD.0 => __last_246
  # DEBUG thisD.34073 => D#25ptD.0
  # DEBUG thisD.32500 => NULL
  # DEBUG __iD.32499 => NULL
  # VUSE <.MEM_506>
  # PT = nonlocal escaped 
  _192 = MEM[(intD.9 * *)__last_246];
  # DEBUG D#26ptD.0 => __last_246
  # DEBUG thisD.34070 => D#26ptD.0
  # DEBUG thisD.32516 => NULL
  # DEBUG __iD.32515 => NULL
  # DEBUG __firstD.34096 => _192
  # DEBUG __lastD.34097 => _191
  # DEBUG __resultD.36331 => NULL
  # DEBUG D.36330 => D#209ptD.0
  # DEBUG __firstD.34067 => _192
  # DEBUG __lastD.34068 => _191
  # DEBUG __resultD.36334 => NULL
  # DEBUG __assignableD.36339 => 1
  # DEBUG __firstD.34031 => _192
  # DEBUG __lastD.34032 => _191
  # DEBUG __resultD.36340 => NULL
  # DEBUG __firstD.33961 => _192
  # DEBUG __lastD.33960 => _191
  # DEBUG __resultD.36343 => NULL
  # DEBUG __itD.33932 => _191
  # DEBUG __it$_M_currentD.33902 => _191
  # DEBUG __itD.33934 => _192
  # DEBUG __it$_M_currentD.33898 => _192
  # DEBUG __firstD.33907 => _192
  # DEBUG __lastD.33908 => _191
  # DEBUG __resultD.36346 => NULL
  # DEBUG __itD.33873 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.33893 => _191
  # DEBUG __itD.33871 => _191
  # DEBUG thisD.33846 => NULL
  # DEBUG __itD.33895 => _192
  # DEBUG __itD.33867 => _192
  # DEBUG thisD.33846 => NULL
  # DEBUG __firstD.36351 => _192
  # DEBUG __lastD.36350 => _191
  # DEBUG __resultD.36349 => NULL
  # DEBUG __simpleD.36355 => 1
  # DEBUG __firstD.36358 => _192
  # DEBUG __lastD.36357 => _191
  # DEBUG __resultD.36356 => NULL
  __last.4_193 = (long intD.12) _191;
  __first.5_194 = (long intD.12) _192;
  _195 = __last.4_193 - __first.5_194;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_196 = _195 /[ex] 4;
  # DEBUG _NumD.36359 => _Num_196
  if (_Num_196 != 0)
    goto <bb 23>;
  else
    goto <bb 22>;
;;    succ:       23 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 2906, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       21 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_659 = (long unsigned intD.14) _195;
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 1857, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _197 = (long unsigned intD.14) _195;
  # .MEM_507 = VDEF <.MEM_506>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  memmoveD.995 (iftmp.2_202, _192, _197);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 4763, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_366 = PHI <.MEM_506(22), .MEM_507(23)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_660 = PHI <pretmp_659(22), _197(23)>
  # PT = null { D.36824 } (escaped heap)
  _199 = iftmp.2_202 + prephitmp_660;
  # .MEM_508 = VDEF <.MEM_366>
  __old_finish_599->D.29234._M_implD.28725._M_finishD.28728 = _199;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 4766, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       14 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_367 = PHI <.MEM_606(14), .MEM_508(24)>
  # PT = nonlocal escaped 
  __last_176 = __last_246 + 24;
  # DEBUG __firstD.36288 => __last_176
  # PT = nonlocal escaped 
  __old_finish_177 = __old_finish_599 + 24;
  # DEBUG __curD.36291 => __old_finish_177
  # DEBUG __curD.36291 => __old_finish_177
  # DEBUG __firstD.36288 => __last_176
  if (__last_176 == prephitmp_558)
    goto <bb 27>;
  else
    goto <bb 26>;
;;    succ:       27 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 4552, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 214, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_367>
  pretmp_646 = this_9(D)->D.28398._M_implD.27889._M_finishD.27892;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_483 = PHI <.MEM_367(27), .MEM_488(12)>
  # PT = nonlocal escaped 
  # prephitmp_647 = PHI <pretmp_646(27), prephitmp_558(12)>
  # PT = nonlocal escaped 
  _63 = prephitmp_647 + _59;
  # .MEM_64 = VDEF <.MEM_483>
  this_9(D)->D.28398._M_implD.27889._M_finishD.27892 = _63;
  # DEBUG thisD.35293 => &__positionD.28323
  # DEBUG __firstD.35275 => D#392ptD.0
  # DEBUG __lastD.35276 => __last_61
  # DEBUG __resultD.35277 => D#374ptD.0
  # DEBUG __itD.35238 => __last_61
  # DEBUG __itD.33368 => __last_61
  # DEBUG __itD.35236 => D#392ptD.0
  # DEBUG __itD.33368 => D#392ptD.0
  # DEBUG __firstD.35280 => D#392ptD.0
  # DEBUG __lastD.35279 => __last_61
  # DEBUG __resultD.35278 => D#374ptD.0
  # DEBUG __itD.35218 => D#374ptD.0
  # DEBUG __itD.33371 => D#374ptD.0
  # DEBUG __itD.35216 => __last_61
  # DEBUG __itD.33371 => __last_61
  # DEBUG __itD.35214 => D#392ptD.0
  # DEBUG __itD.33371 => D#392ptD.0
  # DEBUG __firstD.35283 => D#392ptD.0
  # DEBUG __lastD.35282 => __last_61
  # DEBUG __resultD.35281 => D#374ptD.0
  # DEBUG __simpleD.35287 => 0
  # DEBUG __firstD.35290 => D#392ptD.0
  # DEBUG __lastD.35289 => __last_61
  # DEBUG __resultD.35288 => D#374ptD.0
  __last.7_25 = (long intD.12) __last_61;
  _78 = __last.7_25 - _36;
  # RANGE [-384307168202282325, 384307168202282325]
  __n_73 = _78 /[ex] 24;
  # DEBUG __nD.35291 => __n_73
  # DEBUG __nD.35291 => __n_73
  # DEBUG __resultD.35288 => D#374ptD.0
  # DEBUG __lastD.35289 => __last_61
  if (__n_73 <= 0)
    goto <bb 29>;
  else
    goto <bb 38>;
;;    succ:       29 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_656 = PHI <.MEM_64(28), .MEM_136(41)>
  # DEBUG thisD.35303 => &__positionD.28323
  # PT = nonlocal 
  _67 = __position_22 + _59;
  # DEBUG thisD.35301 => &__positionD.28323
  # DEBUG __firstD.35295 => D#392ptD.0
  # DEBUG __lastD.35296 => _67
  # DEBUG __valueD.35297 => &__x_copyD.30166
  # DEBUG __firstD.35300 => D#392ptD.0
  if (__position_22 == _67)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 0
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       18 (EH,EXECUTABLE)
<L38>: [LP 20]
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 0
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_368 = PHI <.MEM_492(20), .MEM_493(30)>
  # PT = nonlocal escaped 
  # __old_finish_421 = PHI <__old_finish_464(20), __old_finish_465(30)>
<L19>:
  # VUSE <.MEM_368>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _178 = __builtin_eh_pointerD.2738 (14);
  # .MEM_494 = VDEF <.MEM_368>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_begin_catchD.16941 (_178);
  # DEBUG __firstD.36293 => D#374ptD.0
  # DEBUG __lastD.36292 => __old_finish_421
  # DEBUG __firstD.36296 => D#374ptD.0
  # DEBUG __lastD.36295 => __old_finish_421
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 0
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_179 = PHI <prephitmp_558(31), __old_finish_181(35)>
  # .MEM_369 = PHI <.MEM_494(31), .MEM_500(35)>
  # DEBUG __firstD.36296 => __old_finish_179
  if (__old_finish_179 == __old_finish_421)
    goto <bb 36>;
  else
    goto <bb 33>;
;;    succ:       36 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 0
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.33173 => __old_finish_179
  # DEBUG __pointerD.36297 => NULL
  # DEBUG thisD.36298 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.36299 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_369>
  # PT = nonlocal escaped 
  _180 = MEM[(struct _Vector_baseD.28492 *)__old_finish_179]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _180
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.36302 => D#156ptD.0
  # DEBUG __pD.36301 => _180
  # DEBUG __nD.36300 => D#149ptD.0
  if (_180 != 0B)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 0
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.36306 => _180
  # DEBUG __aD.36304 => D#145ptD.0
  # DEBUG __nD.36305 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.36309 => _180
  # DEBUG thisD.36307 => D#141ptD.0
  # DEBUG D.36308 => D#142ptD.0
  # .MEM_495 = VDEF <.MEM_369>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_180);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 0
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_370 = PHI <.MEM_369(33), .MEM_495(34)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.36310 => D#148ptD.0
  # DEBUG thisD.36311 => D#148ptD.0
  # DEBUG thisD.36312 => D#148ptD.0
  # .MEM_500 = VDEF <.MEM_370>
  MEM[(struct  &)__old_finish_179] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __old_finish_181 = __old_finish_179 + 24;
  # DEBUG __firstD.36296 => __old_finish_181
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       32 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 7] # .MEM_501 = VDEF <.MEM_369>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_rethrowD.30210 ();
;;    succ:       37 (EH,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 (EH,EXECUTABLE)
<L21>: [LP 7]
  [MNT 12] # .MEM_502 = VDEF <.MEM_501>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_end_catchD.16940 ();
  [LP 21] resx 13
;;    succ:       194 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       28 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 4766, maybe hot
;;    prev block 38, next block 40, flags: (NEW)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_624 = PHI <.MEM_64(38), .MEM_136(42)>
  # PT = nonlocal escaped 
  # __old_finish_618 = PHI <prephitmp_558(38), __old_finish_65(42)>
  # PT = nonlocal escaped 
  # __last_619 = PHI <__last_61(38), __last_68(42)>
  # RANGE [-384307168202282325, 384307168202282325]
  # __n_617 = PHI <__n_73(38), __n_58(42)>
  # DEBUG __nD.35291 => __n_617
  # DEBUG __resultD.35288 => __old_finish_618
  # DEBUG __lastD.35289 => __last_619
  # PT = nonlocal escaped 
  __last_68 = __last_619 + 18446744073709551592;
  # DEBUG __lastD.35289 => __last_68
  # PT = nonlocal escaped 
  __old_finish_65 = __old_finish_618 + 18446744073709551592;
  # DEBUG __resultD.35288 => __old_finish_65
  [LP 22] # .MEM_136 = VDEF <.MEM_624>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZNSt6vectorIiSaIiEEaSERKS1_D.28856 (__old_finish_65, __last_68);
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 (EH,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 0
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 (EH,EXECUTABLE)
<L41>: [LP 22]
  goto <bb 195> (<L10>);
;;    succ:       195 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 4766, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 384307168202282324] NONZERO 576460752303423487
  __n_58 = __n_617 + -1;
  # DEBUG __nD.35291 => __n_58
  # DEBUG __nD.35291 => __n_58
  # DEBUG __resultD.35288 => __old_finish_65
  # DEBUG __lastD.35289 => __last_68
  if (__n_58 <= 0)
    goto <bb 29>;
  else
    goto <bb 42>;
;;    succ:       29 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 4552, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 437, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       29 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                89 (TRUE_VALUE,EXECUTABLE)
;;                102 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_655 = PHI <.MEM_656(29), .MEM_137(47), .MEM_77(89), .MEM_140(102)>
  goto <bb 104>;
;;    succ:       104 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       29 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 4766, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_616 = PHI <__position_22(44), __position_81(48)>
  # .MEM_601 = PHI <.MEM_656(44), .MEM_137(48)>
  # DEBUG __firstD.35300 => __position_616
  [LP 23] # .MEM_137 = VDEF <.MEM_601>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZNSt6vectorIiSaIiEEaSERKS1_D.28856 (__position_616, &__x_copyD.30166);
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 (EH,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       45 (EH,EXECUTABLE)
<L42>: [LP 23]
  goto <bb 195> (<L10>);
;;    succ:       195 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 4766, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  __position_81 = __position_616 + 24;
  # DEBUG __firstD.35300 => __position_81
  # DEBUG __firstD.35300 => __position_81
  if (_67 == __position_81)
    goto <bb 43>;
  else
    goto <bb 48>;
;;    succ:       43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 4552, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       47 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 226, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       11 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#274ptD.0 => &this_9(D)->D.28398
  # DEBUG thisD.35315 => D#274ptD.0
  # RANGE [0, 18446744073709551615]
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __firstD.35305 => D#374ptD.0
  # DEBUG __nD.35306 => __n_70
  # DEBUG __xD.35307 => &__x_copyD.30166
  # DEBUG D.35308 => D#218ptD.0
  # DEBUG __firstD.35311 => D#374ptD.0
  # DEBUG __nD.35310 => __n_70
  # DEBUG __xD.35309 => &__x_copyD.30166
  # DEBUG __assignableD.35313 => 1
  # DEBUG __firstD.36369 => D#374ptD.0
  # DEBUG __nD.36370 => __n_70
  # DEBUG __xD.36371 => &__x_copyD.30166
  # DEBUG __curD.36372 => D#374ptD.0
  # DEBUG __curD.36372 => D#374ptD.0
  # DEBUG __nD.36370 => __n_70
  if (__n_70 == 0)
    goto <bb 65>;
  else
    goto <bb 50>;
;;    succ:       65 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 216, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       49 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 4777, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_600 = PHI <__n_70(50), __n_205(64)>
  # PT = nonlocal escaped 
  # __old_finish_598 = PHI <prephitmp_558(50), __old_finish_206(64)>
  # .MEM_160 = PHI <.MEM_488(50), .MEM_374(64)>
  # DEBUG __curD.36372 => __old_finish_598
  # DEBUG __nD.36370 => __n_600
  # DEBUG __rD.34221 => __old_finish_598
  # DEBUG __pD.36395 => NULL
  # DEBUG __valueD.36394 => &__x_copyD.30166
  # DEBUG D#3ptD.0 => 24
  # DEBUG __pD.34101 => NULL
  # DEBUG D.34102 => D#3ptD.0
  if (__old_finish_598 != 0B)
    goto <bb 52>;
  else
    goto <bb 62>;
;;    succ:       52 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 3336, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       51 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.36400 => __old_finish_598
  # DEBUG __xD.36401 => &__x_copyD.30166
  # DEBUG D#210ptD.0 => &__x_copyD.30166.D.29234
  # DEBUG thisD.34092 => D#210ptD.0
  # DEBUG __aD.34090 => NULL
  # VUSE <.MEM_160>
  # PT = nonlocal escaped null { D.36823 } (escaped heap)
  _138 = MEM[(intD.9 * *)&__x_copyD.30166];
  # DEBUG D#23ptD.0 => &__x_copyD.30166
  # VUSE <.MEM_160>
  # PT = nonlocal escaped null { D.36823 } (escaped heap)
  _211 = MEM[(intD.9 * *)&__x_copyD.30166 + 8B];
  # DEBUG D#23ptD.0 => &__x_copyD.30166
  # DEBUG thisD.36402 => D#23ptD.0
  # DEBUG thisD.36403 => D#23ptD.0
  _212 = (long intD.12) _211;
  _213 = (long intD.12) _138;
  _214 = _212 - _213;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _215 = _214 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _216 = (size_typeD.28810) _215;
  # DEBUG D#212ptD.0 => &__old_finish_598->D.29234
  # DEBUG thisD.36406 => D#212ptD.0
  # DEBUG __nD.36405 => NULL
  # DEBUG __aD.36404 => NULL
  # DEBUG D#178ptD.0 => &D#212ptD.0->_M_implD.28725
  # DEBUG thisD.36408 => D#178ptD.0
  # DEBUG __aD.36407 => NULL
  # DEBUG thisD.33353 => D#178ptD.0
  # DEBUG __aD.33354 => NULL
  # DEBUG thisD.33350 => D#178ptD.0
  # DEBUG D.33351 => NULL
  # .MEM_510 = VDEF <.MEM_160>
  MEM[(struct _Vector_implD.28702 *)__old_finish_598]._M_startD.28727 = 0B;
  # .MEM_511 = VDEF <.MEM_510>
  MEM[(struct _Vector_implD.28702 *)__old_finish_598]._M_finishD.28728 = 0B;
  # .MEM_512 = VDEF <.MEM_511>
  MEM[(struct _Vector_implD.28702 *)__old_finish_598]._M_end_of_storageD.28729 = 0B;
  # DEBUG thisD.36410 => D#212ptD.0
  # DEBUG __nD.36409 => NULL
  # DEBUG D#176ptD.0 => D#212ptD.0
  # DEBUG __nD.36441 => _216
  # DEBUG thisD.36442 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (_216 != 0)
    goto <bb 54>;
  else
    goto <bb 53>;
;;    succ:       54 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 334, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       52 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_642 = (long unsigned intD.14) _214;
  goto <bb 58>;
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 3002, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36445 => _216
  # DEBUG __aD.36444 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36448 => _216
  # DEBUG thisD.36446 => D#170ptD.0
  # DEBUG D.36447 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  if (_216 > 4611686018427387903)
    goto <bb 55>;
  else
    goto <bb 56>;
;;    succ:       55 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 1, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       54 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_496 = PHI <__old_finish_598(54)>
  [LP 24] # .MEM_514 = VDEF <.MEM_512>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2824 ();
;;    succ:       66 (EH,EXECUTABLE)

;;   basic block 56, loop depth 1, count 0, freq 3001, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       54 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _229 = (long unsigned intD.14) _214;
  [LP 10] # .MEM_513 = VDEF <.MEM_512>
  # PT = { D.36825 } (escaped heap)
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _230 = _ZnwmD.2764 (_229);
  goto <bb 58>;
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                57 (EH,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0
;;    prev block 56, next block 58, flags: (NEW)
;;    pred:       56 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_466 = PHI <__old_finish_598(56)>
<L44>: [LP 10]
  goto <bb 67> (<L22>);
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 1, count 0, freq 3335, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36825 } (escaped heap)
  # iftmp.2_231 = PHI <0B(53), _230(56)>
  # .MEM_372 = PHI <.MEM_512(53), .MEM_513(56)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_643 = PHI <pretmp_642(53), _229(56)>
  # .MEM_525 = VDEF <.MEM_372>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_598]._M_implD.28725._M_startD.28727 = iftmp.2_231;
  # .MEM_526 = VDEF <.MEM_525>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_598]._M_implD.28725._M_finishD.28728 = iftmp.2_231;
  # PT = null { D.36825 } (escaped heap)
  _219 = iftmp.2_231 + prephitmp_643;
  # .MEM_527 = VDEF <.MEM_526>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_598]._M_implD.28725._M_end_of_storageD.28729 = _219;
  # DEBUG D#211ptD.0 => &__old_finish_598->D.29234
  # DEBUG thisD.34075 => D#211ptD.0
  # VUSE <.MEM_527>
  # PT = nonlocal escaped null { D.36823 } (escaped heap)
  _220 = MEM[(intD.9 * *)&__x_copyD.30166 + 8B];
  # DEBUG D#25ptD.0 => &__x_copyD.30166
  # DEBUG thisD.34073 => D#25ptD.0
  # DEBUG thisD.32500 => NULL
  # DEBUG __iD.32499 => NULL
  # VUSE <.MEM_527>
  # PT = nonlocal escaped null { D.36823 } (escaped heap)
  _221 = MEM[(intD.9 * *)&__x_copyD.30166];
  # DEBUG D#26ptD.0 => &__x_copyD.30166
  # DEBUG thisD.34070 => D#26ptD.0
  # DEBUG thisD.32516 => NULL
  # DEBUG __iD.32515 => NULL
  # DEBUG __firstD.34096 => _221
  # DEBUG __lastD.34097 => _220
  # DEBUG __resultD.36412 => NULL
  # DEBUG D.36411 => D#209ptD.0
  # DEBUG __firstD.34067 => _221
  # DEBUG __lastD.34068 => _220
  # DEBUG __resultD.36415 => NULL
  # DEBUG __assignableD.36420 => 1
  # DEBUG __firstD.34031 => _221
  # DEBUG __lastD.34032 => _220
  # DEBUG __resultD.36421 => NULL
  # DEBUG __firstD.33961 => _221
  # DEBUG __lastD.33960 => _220
  # DEBUG __resultD.36424 => NULL
  # DEBUG __itD.33932 => _220
  # DEBUG __it$_M_currentD.33902 => _220
  # DEBUG __itD.33934 => _221
  # DEBUG __it$_M_currentD.33898 => _221
  # DEBUG __firstD.33907 => _221
  # DEBUG __lastD.33908 => _220
  # DEBUG __resultD.36427 => NULL
  # DEBUG __itD.33873 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.33893 => _220
  # DEBUG __itD.33871 => _220
  # DEBUG thisD.33846 => NULL
  # DEBUG __itD.33895 => _221
  # DEBUG __itD.33867 => _221
  # DEBUG thisD.33846 => NULL
  # DEBUG __firstD.36432 => _221
  # DEBUG __lastD.36431 => _220
  # DEBUG __resultD.36430 => NULL
  # DEBUG __simpleD.36436 => 1
  # DEBUG __firstD.36439 => _221
  # DEBUG __lastD.36438 => _220
  # DEBUG __resultD.36437 => NULL
  __last.4_222 = (long intD.12) _220;
  __first.5_223 = (long intD.12) _221;
  _224 = __last.4_222 - __first.5_223;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_225 = _224 /[ex] 4;
  # DEBUG _NumD.36440 => _Num_225
  if (_Num_225 != 0)
    goto <bb 60>;
  else
    goto <bb 59>;
;;    succ:       60 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 59, loop depth 1, count 0, freq 2035, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       58 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_644 = (long unsigned intD.14) _224;
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 1, count 0, freq 1300, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       58 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _226 = (long unsigned intD.14) _224;
  # .MEM_528 = VDEF <.MEM_527>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  memmoveD.995 (iftmp.2_231, _221, _226);
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 1, count 0, freq 3335, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_373 = PHI <.MEM_527(59), .MEM_528(60)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_645 = PHI <pretmp_644(59), _226(60)>
  # PT = null { D.36825 } (escaped heap)
  _228 = iftmp.2_231 + prephitmp_645;
  # .MEM_529 = VDEF <.MEM_373>
  __old_finish_598->D.29234._M_implD.28725._M_finishD.28728 = _228;
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 1, count 0, freq 4777, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       51 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_374 = PHI <.MEM_160(51), .MEM_529(61)>
  # RANGE [0, 18446744073709551614]
  __n_205 = __n_600 + 18446744073709551615;
  # DEBUG __nD.36370 => __n_205
  # PT = nonlocal escaped 
  __old_finish_206 = __old_finish_598 + 24;
  # DEBUG __curD.36372 => __old_finish_206
  # DEBUG __curD.36372 => __old_finish_206
  # DEBUG __nD.36370 => __n_205
  if (__n_205 == 0)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                64 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 62, next block 64, flags: (NEW)
;;    pred:       62 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_499 = PHI <__old_finish_206(62)>
  goto <bb 65>;
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 1, count 0, freq 4562, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       62 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 51>;
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 225, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       63 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_611 = PHI <__old_finish_499(63), prephitmp_558(49)>
  # .MEM_530 = PHI <.MEM_374(63), .MEM_488(49)>
  # .MEM_71 = VDEF <.MEM_530>
  this_9(D)->D.28398._M_implD.27889._M_finishD.27892 = __old_finish_611;
  # DEBUG D#275ptD.0 => &this_9(D)->D.28398
  # DEBUG thisD.35334 => D#275ptD.0
  # DEBUG thisD.35332 => &__positionD.28323
  # DEBUG __firstD.35317 => D#392ptD.0
  # DEBUG __lastD.35318 => D#374ptD.0
  # DEBUG __resultD.35319 => NULL
  # DEBUG __allocD.35320 => D#215ptD.0
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG D#213ptD.0 => D#214ptD.0
  # DEBUG __firstD.35324 => D#392ptD.0
  # DEBUG __lastD.35323 => D#374ptD.0
  # DEBUG __resultD.35322 => NULL
  # DEBUG D.35321 => D#213ptD.0
  # DEBUG __firstD.35327 => D#392ptD.0
  # DEBUG __lastD.35326 => D#374ptD.0
  # DEBUG __resultD.35325 => NULL
  # DEBUG __assignableD.35330 => 1
  # DEBUG __firstD.36450 => D#392ptD.0
  # DEBUG __lastD.36451 => D#374ptD.0
  # DEBUG __resultD.36452 => __old_finish_611
  # DEBUG __curD.36453 => __old_finish_611
  # DEBUG __firstD.36450 => D#392ptD.0
  if (__position_22 == prephitmp_558)
    goto <bb 216>;
  else
    goto <bb 75>;
;;    succ:       216 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                75 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 0
;;    prev block 65, next block 67, flags: (NEW)
;;    pred:       55 (EH,EXECUTABLE)
<L43>: [LP 24]
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 0
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       57 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_375 = PHI <.MEM_513(57), .MEM_514(66)>
  # PT = nonlocal escaped 
  # __old_finish_422 = PHI <__old_finish_466(57), __old_finish_496(66)>
<L22>:
  # VUSE <.MEM_375>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _207 = __builtin_eh_pointerD.2738 (17);
  # .MEM_515 = VDEF <.MEM_375>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_begin_catchD.16941 (_207);
  # DEBUG __firstD.36374 => D#374ptD.0
  # DEBUG __lastD.36373 => __old_finish_422
  # DEBUG __firstD.36377 => D#374ptD.0
  # DEBUG __lastD.36376 => __old_finish_422
;;    succ:       68 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 68, loop depth 1, count 0, freq 0
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       67 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_208 = PHI <prephitmp_558(67), __old_finish_210(71)>
  # .MEM_376 = PHI <.MEM_515(67), .MEM_521(71)>
  # DEBUG __firstD.36377 => __old_finish_208
  if (__old_finish_208 == __old_finish_422)
    goto <bb 72>;
  else
    goto <bb 69>;
;;    succ:       72 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                69 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 1, count 0, freq 0
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.33173 => __old_finish_208
  # DEBUG __pointerD.36378 => NULL
  # DEBUG thisD.36379 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.36380 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_376>
  # PT = nonlocal escaped 
  _209 = MEM[(struct _Vector_baseD.28492 *)__old_finish_208]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _209
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.36383 => D#156ptD.0
  # DEBUG __pD.36382 => _209
  # DEBUG __nD.36381 => D#149ptD.0
  if (_209 != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;
;;    succ:       70 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 70, loop depth 1, count 0, freq 0
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.36387 => _209
  # DEBUG __aD.36385 => D#145ptD.0
  # DEBUG __nD.36386 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.36390 => _209
  # DEBUG thisD.36388 => D#141ptD.0
  # DEBUG D.36389 => D#142ptD.0
  # .MEM_516 = VDEF <.MEM_376>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_209);
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 1, count 0, freq 0
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       69 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_377 = PHI <.MEM_376(69), .MEM_516(70)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.36391 => D#148ptD.0
  # DEBUG thisD.36392 => D#148ptD.0
  # DEBUG thisD.36393 => D#148ptD.0
  # .MEM_521 = VDEF <.MEM_377>
  MEM[(struct  &)__old_finish_208] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __old_finish_210 = __old_finish_208 + 24;
  # DEBUG __firstD.36377 => __old_finish_210
  goto <bb 68>;
;;    succ:       68 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       68 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 9] # .MEM_522 = VDEF <.MEM_376>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_rethrowD.30210 ();
;;    succ:       73 (EH,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       72 (EH,EXECUTABLE)
<L24>: [LP 9]
  [MNT 15] # .MEM_523 = VDEF <.MEM_522>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_end_catchD.16940 ();
  [LP 25] resx 16
;;    succ:       74 (EH,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 0
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 (EH,EXECUTABLE)
<L45>: [LP 25]
  goto <bb 195> (<L10>);
;;    succ:       195 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 215, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       65 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 1, count 0, freq 4741, maybe hot
;;    prev block 75, next block 77, flags: (NEW)
;;    pred:       75 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_612 = PHI <__position_22(75), __position_234(88)>
  # PT = nonlocal escaped 
  # __old_finish_613 = PHI <__old_finish_611(75), __old_finish_235(88)>
  # .MEM_188 = PHI <.MEM_71(75), .MEM_381(88)>
  # DEBUG __curD.36453 => __old_finish_613
  # DEBUG __firstD.36450 => __position_612
  # DEBUG __rD.34109 => __old_finish_613
  # DEBUG __pD.36476 => NULL
  # DEBUG __valueD.36475 => __position_612
  # DEBUG D#3ptD.0 => 24
  # DEBUG __pD.34101 => NULL
  # DEBUG D.34102 => D#3ptD.0
  if (__old_finish_613 != 0B)
    goto <bb 77>;
  else
    goto <bb 87>;
;;    succ:       77 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                87 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 77, loop depth 1, count 0, freq 4740, maybe hot
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       76 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.36481 => __old_finish_613
  # DEBUG __xD.36482 => __position_612
  # DEBUG D#210ptD.0 => &MEM[(const struct vectorD.27653 *)__position_612].D.29234
  # DEBUG thisD.34092 => D#210ptD.0
  # DEBUG __aD.34090 => NULL
  # VUSE <.MEM_188>
  # PT = nonlocal escaped 
  _139 = MEM[(intD.9 * *)__position_612];
  # DEBUG D#23ptD.0 => __position_612
  # VUSE <.MEM_188>
  # PT = nonlocal escaped 
  _240 = MEM[(intD.9 * *)__position_612 + 8B];
  # DEBUG D#23ptD.0 => __position_612
  # DEBUG thisD.36483 => D#23ptD.0
  # DEBUG thisD.36484 => D#23ptD.0
  _241 = (long intD.12) _240;
  _242 = (long intD.12) _139;
  _243 = _241 - _242;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _244 = _243 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _245 = (size_typeD.28810) _244;
  # DEBUG D#212ptD.0 => &__old_finish_613->D.29234
  # DEBUG thisD.36487 => D#212ptD.0
  # DEBUG __nD.36486 => NULL
  # DEBUG __aD.36485 => NULL
  # DEBUG D#178ptD.0 => &D#212ptD.0->_M_implD.28725
  # DEBUG thisD.36489 => D#178ptD.0
  # DEBUG __aD.36488 => NULL
  # DEBUG thisD.33353 => D#178ptD.0
  # DEBUG __aD.33354 => NULL
  # DEBUG thisD.33350 => D#178ptD.0
  # DEBUG D.33351 => NULL
  # .MEM_531 = VDEF <.MEM_188>
  MEM[(struct _Vector_implD.28702 *)__old_finish_613]._M_startD.28727 = 0B;
  # .MEM_532 = VDEF <.MEM_531>
  MEM[(struct _Vector_implD.28702 *)__old_finish_613]._M_finishD.28728 = 0B;
  # .MEM_533 = VDEF <.MEM_532>
  MEM[(struct _Vector_implD.28702 *)__old_finish_613]._M_end_of_storageD.28729 = 0B;
  # DEBUG thisD.36491 => D#212ptD.0
  # DEBUG __nD.36490 => NULL
  # DEBUG D#176ptD.0 => D#212ptD.0
  # DEBUG __nD.36522 => _245
  # DEBUG thisD.36523 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (_245 != 0)
    goto <bb 79>;
  else
    goto <bb 78>;
;;    succ:       79 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                78 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 78, loop depth 1, count 0, freq 474, maybe hot
;;    prev block 77, next block 79, flags: (NEW)
;;    pred:       77 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_638 = (long unsigned intD.14) _243;
  goto <bb 83>;
;;    succ:       83 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 79, loop depth 1, count 0, freq 4266, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       77 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36526 => _245
  # DEBUG __aD.36525 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36529 => _245
  # DEBUG thisD.36527 => D#170ptD.0
  # DEBUG D.36528 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  if (_245 > 4611686018427387903)
    goto <bb 80>;
  else
    goto <bb 81>;
;;    succ:       80 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                81 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 80, loop depth 0, count 0, freq 2, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 79, next block 81, flags: (NEW, REACHABLE)
;;    pred:       79 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_443 = PHI <__old_finish_613(79)>
  [LP 26] # .MEM_535 = VDEF <.MEM_533>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2824 ();
;;    succ:       90 (EH,EXECUTABLE)

;;   basic block 81, loop depth 1, count 0, freq 4264, maybe hot
;;    prev block 80, next block 82, flags: (NEW, REACHABLE)
;;    pred:       79 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _258 = (long unsigned intD.14) _243;
  [LP 12] # .MEM_534 = VDEF <.MEM_533>
  # PT = { D.36826 } (escaped heap)
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _259 = _ZnwmD.2764 (_258);
  goto <bb 83>;
;;    succ:       83 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                82 (EH,EXECUTABLE)

;;   basic block 82, loop depth 0, count 0, freq 0
;;    prev block 81, next block 83, flags: (NEW)
;;    pred:       81 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_442 = PHI <__old_finish_613(81)>
<L47>: [LP 12]
  goto <bb 91> (<L25>);
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 83, loop depth 1, count 0, freq 4738, maybe hot
;;    prev block 82, next block 84, flags: (NEW, REACHABLE)
;;    pred:       78 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                81 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36826 } (escaped heap)
  # iftmp.2_260 = PHI <0B(78), _259(81)>
  # .MEM_379 = PHI <.MEM_533(78), .MEM_534(81)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_639 = PHI <pretmp_638(78), _258(81)>
  # .MEM_546 = VDEF <.MEM_379>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_613]._M_implD.28725._M_startD.28727 = iftmp.2_260;
  # .MEM_547 = VDEF <.MEM_546>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_613]._M_implD.28725._M_finishD.28728 = iftmp.2_260;
  # PT = null { D.36826 } (escaped heap)
  _248 = iftmp.2_260 + prephitmp_639;
  # .MEM_548 = VDEF <.MEM_547>
  MEM[(struct _Vector_baseD.28492 *)__old_finish_613]._M_implD.28725._M_end_of_storageD.28729 = _248;
  # DEBUG D#211ptD.0 => &__old_finish_613->D.29234
  # DEBUG thisD.34075 => D#211ptD.0
  # VUSE <.MEM_548>
  # PT = nonlocal escaped 
  _249 = MEM[(intD.9 * *)__position_612 + 8B];
  # DEBUG D#25ptD.0 => __position_612
  # DEBUG thisD.34073 => D#25ptD.0
  # DEBUG thisD.32500 => NULL
  # DEBUG __iD.32499 => NULL
  # VUSE <.MEM_548>
  # PT = nonlocal escaped 
  _250 = MEM[(intD.9 * *)__position_612];
  # DEBUG D#26ptD.0 => __position_612
  # DEBUG thisD.34070 => D#26ptD.0
  # DEBUG thisD.32516 => NULL
  # DEBUG __iD.32515 => NULL
  # DEBUG __firstD.34096 => _250
  # DEBUG __lastD.34097 => _249
  # DEBUG __resultD.36493 => NULL
  # DEBUG D.36492 => D#209ptD.0
  # DEBUG __firstD.34067 => _250
  # DEBUG __lastD.34068 => _249
  # DEBUG __resultD.36496 => NULL
  # DEBUG __assignableD.36501 => 1
  # DEBUG __firstD.34031 => _250
  # DEBUG __lastD.34032 => _249
  # DEBUG __resultD.36502 => NULL
  # DEBUG __firstD.33961 => _250
  # DEBUG __lastD.33960 => _249
  # DEBUG __resultD.36505 => NULL
  # DEBUG __itD.33932 => _249
  # DEBUG __it$_M_currentD.33902 => _249
  # DEBUG __itD.33934 => _250
  # DEBUG __it$_M_currentD.33898 => _250
  # DEBUG __firstD.33907 => _250
  # DEBUG __lastD.33908 => _249
  # DEBUG __resultD.36508 => NULL
  # DEBUG __itD.33873 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.33893 => _249
  # DEBUG __itD.33871 => _249
  # DEBUG thisD.33846 => NULL
  # DEBUG __itD.33895 => _250
  # DEBUG __itD.33867 => _250
  # DEBUG thisD.33846 => NULL
  # DEBUG __firstD.36513 => _250
  # DEBUG __lastD.36512 => _249
  # DEBUG __resultD.36511 => NULL
  # DEBUG __simpleD.36517 => 1
  # DEBUG __firstD.36520 => _250
  # DEBUG __lastD.36519 => _249
  # DEBUG __resultD.36518 => NULL
  __last.4_251 = (long intD.12) _249;
  __first.5_252 = (long intD.12) _250;
  _253 = __last.4_251 - __first.5_252;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_254 = _253 /[ex] 4;
  # DEBUG _NumD.36521 => _Num_254
  if (_Num_254 != 0)
    goto <bb 85>;
  else
    goto <bb 84>;
;;    succ:       85 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                84 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 84, loop depth 1, count 0, freq 2891, maybe hot
;;    prev block 83, next block 85, flags: (NEW)
;;    pred:       83 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_640 = (long unsigned intD.14) _253;
  goto <bb 86>;
;;    succ:       86 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 85, loop depth 1, count 0, freq 1847, maybe hot
;;    prev block 84, next block 86, flags: (NEW, REACHABLE)
;;    pred:       83 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _255 = (long unsigned intD.14) _253;
  # .MEM_549 = VDEF <.MEM_548>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  memmoveD.995 (iftmp.2_260, _250, _255);
;;    succ:       86 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 86, loop depth 1, count 0, freq 4738, maybe hot
;;    prev block 85, next block 87, flags: (NEW, REACHABLE)
;;    pred:       84 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                85 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_380 = PHI <.MEM_548(84), .MEM_549(85)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_641 = PHI <pretmp_640(84), _255(85)>
  # PT = null { D.36826 } (escaped heap)
  _257 = iftmp.2_260 + prephitmp_641;
  # .MEM_550 = VDEF <.MEM_380>
  __old_finish_613->D.29234._M_implD.28725._M_finishD.28728 = _257;
;;    succ:       87 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 87, loop depth 1, count 0, freq 4741, maybe hot
;;    prev block 86, next block 88, flags: (NEW, REACHABLE)
;;    pred:       76 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                86 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_381 = PHI <.MEM_188(76), .MEM_550(86)>
  # PT = nonlocal 
  __position_234 = __position_612 + 24;
  # DEBUG __firstD.36450 => __position_234
  # PT = nonlocal escaped 
  __old_finish_235 = __old_finish_613 + 24;
  # DEBUG __curD.36453 => __old_finish_235
  # DEBUG __curD.36453 => __old_finish_235
  # DEBUG __firstD.36450 => __position_234
  if (__position_234 == prephitmp_558)
    goto <bb 89>;
  else
    goto <bb 88>;
;;    succ:       89 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                88 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 88, loop depth 1, count 0, freq 4528, maybe hot
;;    prev block 87, next block 89, flags: (NEW)
;;    pred:       87 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 76>;
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 89, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 88, next block 90, flags: (NEW, REACHABLE)
;;    pred:       87 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_381>
  # PT = nonlocal escaped 
  _74 = this_9(D)->D.28398._M_implD.27889._M_finishD.27892;
  # RANGE [0, 18446744073709551615]
  _75 = (long unsigned intD.14) _34;
  # PT = nonlocal escaped 
  _76 = _74 + _75;
  # .MEM_77 = VDEF <.MEM_381>
  this_9(D)->D.28398._M_implD.27889._M_finishD.27892 = _76;
  # DEBUG thisD.35342 => &__positionD.28323
  # DEBUG __firstD.35336 => D#392ptD.0
  # DEBUG __lastD.35337 => D#374ptD.0
  # DEBUG __valueD.35338 => &__x_copyD.30166
  # DEBUG __firstD.35341 => D#392ptD.0
  if (__position_22 == prephitmp_558)
    goto <bb 43>;
  else
    goto <bb 99>;
;;    succ:       43 (TRUE_VALUE,EXECUTABLE)
;;                99 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 90, loop depth 0, count 0, freq 0
;;    prev block 89, next block 91, flags: (NEW)
;;    pred:       80 (EH,EXECUTABLE)
<L46>: [LP 26]
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 91, loop depth 0, count 0, freq 0
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       82 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_382 = PHI <.MEM_534(82), .MEM_535(90)>
  # PT = nonlocal escaped 
  # __old_finish_409 = PHI <__old_finish_442(82), __old_finish_443(90)>
<L25>:
  # VUSE <.MEM_382>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _236 = __builtin_eh_pointerD.2738 (20);
  # .MEM_536 = VDEF <.MEM_382>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_begin_catchD.16941 (_236);
  # DEBUG __firstD.36455 => __old_finish_611
  # DEBUG __lastD.36454 => __old_finish_409
  # DEBUG __firstD.36458 => __old_finish_611
  # DEBUG __lastD.36457 => __old_finish_409
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 92, loop depth 1, count 0, freq 0
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       91 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                95 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_237 = PHI <__old_finish_611(91), __old_finish_239(95)>
  # .MEM_383 = PHI <.MEM_536(91), .MEM_542(95)>
  # DEBUG __firstD.36458 => __old_finish_237
  if (__old_finish_237 == __old_finish_409)
    goto <bb 96>;
  else
    goto <bb 93>;
;;    succ:       96 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                93 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 93, loop depth 1, count 0, freq 0
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       92 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.33173 => __old_finish_237
  # DEBUG __pointerD.36459 => NULL
  # DEBUG thisD.36460 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.36461 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_383>
  # PT = nonlocal escaped 
  _238 = MEM[(struct _Vector_baseD.28492 *)__old_finish_237]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _238
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.36464 => D#156ptD.0
  # DEBUG __pD.36463 => _238
  # DEBUG __nD.36462 => D#149ptD.0
  if (_238 != 0B)
    goto <bb 94>;
  else
    goto <bb 95>;
;;    succ:       94 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                95 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 94, loop depth 1, count 0, freq 0
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       93 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.36468 => _238
  # DEBUG __aD.36466 => D#145ptD.0
  # DEBUG __nD.36467 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.36471 => _238
  # DEBUG thisD.36469 => D#141ptD.0
  # DEBUG D.36470 => D#142ptD.0
  # .MEM_537 = VDEF <.MEM_383>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_238);
;;    succ:       95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 95, loop depth 1, count 0, freq 0
;;    prev block 94, next block 96, flags: (NEW, REACHABLE)
;;    pred:       93 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                94 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_384 = PHI <.MEM_383(93), .MEM_537(94)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.36472 => D#148ptD.0
  # DEBUG thisD.36473 => D#148ptD.0
  # DEBUG thisD.36474 => D#148ptD.0
  # .MEM_542 = VDEF <.MEM_384>
  MEM[(struct  &)__old_finish_237] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __old_finish_239 = __old_finish_237 + 24;
  # DEBUG __firstD.36458 => __old_finish_239
  goto <bb 92>;
;;    succ:       92 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       92 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 11] # .MEM_543 = VDEF <.MEM_383>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_rethrowD.30210 ();
;;    succ:       97 (EH,EXECUTABLE)

;;   basic block 97, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       96 (EH,EXECUTABLE)
<L27>: [LP 11]
  [MNT 18] # .MEM_544 = VDEF <.MEM_543>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_end_catchD.16940 ();
  [LP 27] resx 19
;;    succ:       98 (EH,EXECUTABLE)

;;   basic block 98, loop depth 0, count 0, freq 0
;;    prev block 97, next block 99, flags: (NEW)
;;    pred:       97 (EH,EXECUTABLE)
<L48>: [LP 27]
  goto <bb 195> (<L10>);
;;    succ:       195 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 99, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       89 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       100 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 100, loop depth 1, count 0, freq 4741, maybe hot
;;    prev block 99, next block 101, flags: (NEW)
;;    pred:       99 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                103 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_603 = PHI <__position_22(99), __position_84(103)>
  # .MEM_602 = PHI <.MEM_77(99), .MEM_140(103)>
  # DEBUG __firstD.35341 => __position_603
  [LP 2] # .MEM_140 = VDEF <.MEM_602>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZNSt6vectorIiSaIiEEaSERKS1_D.28856 (__position_603, &__x_copyD.30166);
  goto <bb 102>;
;;    succ:       102 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                101 (EH,EXECUTABLE)

;;   basic block 101, loop depth 0, count 0, freq 0
;;    prev block 100, next block 102, flags: (NEW)
;;    pred:       100 (EH,EXECUTABLE)
<L49>: [LP 2]
  goto <bb 195> (<L10>);
;;    succ:       195 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 1, count 0, freq 4741, maybe hot
;;    prev block 101, next block 103, flags: (NEW, REACHABLE)
;;    pred:       100 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  __position_84 = __position_603 + 24;
  # DEBUG __firstD.35341 => __position_84
  # DEBUG __firstD.35341 => __position_84
  if (__position_84 == prephitmp_558)
    goto <bb 43>;
  else
    goto <bb 103>;
;;    succ:       43 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                103 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 103, loop depth 1, count 0, freq 4528, maybe hot
;;    prev block 102, next block 104, flags: (NEW)
;;    pred:       102 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 100>;
;;    succ:       100 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 448, maybe hot
;;    prev block 103, next block 105, flags: (NEW, REACHABLE)
;;    pred:       216 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_282(216), .MEM_655(43)>
  # DEBUG thisD.35344 => &__x_copyD.30166
  # DEBUG D#155ptD.0 => &__x_copyD.30166.D.29234
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG D#158ptD.0 => __x_copyD.30166.D.29234._M_implD.28725._M_finishD.28728
  # DEBUG D#157ptD.0 => __x_copyD.30166.D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG D#156ptD.0 => &__x_copyD.30166.D.29234
  # DEBUG thisD.35345 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_2>
  # PT = nonlocal escaped null { D.36823 } (escaped heap)
  _85 = MEM[(struct _Vector_baseD.28492 *)&__x_copyD.30166]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _85
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35348 => D#156ptD.0
  # DEBUG __pD.35347 => _85
  # DEBUG __nD.35346 => D#149ptD.0
  if (_85 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;
;;    succ:       105 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                106 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 104, next block 106, flags: (NEW, REACHABLE)
;;    pred:       104 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35352 => _85
  # DEBUG __aD.35350 => D#145ptD.0
  # DEBUG __nD.35351 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35355 => _85
  # DEBUG thisD.35353 => D#141ptD.0
  # DEBUG D.35354 => D#142ptD.0
  # .MEM_141 = VDEF <.MEM_2>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_85);
;;    succ:       106 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 0, count 0, freq 448, maybe hot
;;    prev block 105, next block 107, flags: (NEW, REACHABLE)
;;    pred:       104 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                105 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_102 = PHI <.MEM_2(104), .MEM_141(105)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35356 => D#148ptD.0
  # DEBUG thisD.35357 => D#148ptD.0
  # DEBUG thisD.35358 => D#148ptD.0
  # .MEM_79 = VDEF <.MEM_102>
  __x_copyD.30166 ={v} {CLOBBER};
  goto <bb 193>;
;;    succ:       193 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 107, loop depth 0, count 0, freq 453, maybe hot
;;    prev block 106, next block 108, flags: (NEW, REACHABLE)
;;    pred:       3 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.36571 => this_9(D)
  # DEBUG __nD.36572 => __n_7(D)
  # DEBUG __nD.36572 => __n_7(D)
  # DEBUG __sD.36573 => "vector::_M_fill_insert"
  # DEBUG D#190ptD.0 => this_9(D)
  # DEBUG thisD.33571 => D#190ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0
  # DEBUG D#188ptD.0 => &D#189ptD.0->D.28398
  # DEBUG thisD.33561 => D#188ptD.0
  # DEBUG __aD.33553 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.33544 => D#185ptD.0
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _23 = MEM[(struct vectorD.27653 * *)this_9(D)];
  # DEBUG D#24ptD.0 => this_9(D)
  # DEBUG D#24ptD.0 => this_9(D)
  # DEBUG thisD.36577 => D#24ptD.0
  # DEBUG thisD.36578 => D#24ptD.0
  _273 = (long intD.12) _23;
  _274 = _13 - _273;
  # RANGE [-384307168202282325, 384307168202282325]
  _275 = _274 /[ex] 24;
  # RANGE ~[384307168202282326, 18062436905507269290]
  _276 = (const long unsigned intD.14) _275;
  # RANGE [384307168202282325, 1152921504606846975] NONZERO 1152921504606846975
  _277 = 768614336404564650 - _276;
  if (__n_7(D) > _277)
    goto <bb 108>;
  else
    goto <bb 109>;
;;    succ:       108 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                109 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 108, loop depth 0, count 0, freq 0
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       107 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_477 = VDEF <.MEM_8(D)>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 109, loop depth 0, count 0, freq 453, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       107 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#24ptD.0 => this_9(D)
  # DEBUG D#24ptD.0 => this_9(D)
  # DEBUG thisD.33589 => D#24ptD.0
  # DEBUG thisD.33588 => D#24ptD.0
  # DEBUG D#24ptD.0 => this_9(D)
  # DEBUG D#24ptD.0 => this_9(D)
  # DEBUG thisD.33584 => D#24ptD.0
  # DEBUG thisD.33583 => D#24ptD.0
  # DEBUG __aD.36576 => &D.36580
  # DEBUG __bD.36575 => &__nD.36572
  _289 = MAX_EXPR <__n_7(D), _276>;
  # RANGE [0, 18446744073709551615]
  __len_281 = _276 + _289;
  # DEBUG __lenD.36574 => __len_281
  # DEBUG D#24ptD.0 => this_9(D)
  # DEBUG D#24ptD.0 => this_9(D)
  # DEBUG thisD.33576 => D#24ptD.0
  # DEBUG thisD.33575 => D#24ptD.0
  # DEBUG D#190ptD.0 => this_9(D)
  # DEBUG thisD.33591 => D#190ptD.0
  # DEBUG D#189ptD.0 => D#190ptD.0
  # DEBUG D#188ptD.0 => &D#189ptD.0->D.28398
  # DEBUG thisD.33561 => D#188ptD.0
  # DEBUG __aD.33553 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#185ptD.0 => D#186ptD.0
  # DEBUG thisD.33544 => D#185ptD.0
  _560 = __len_281 > 768614336404564650;
  _604 = _276 > __len_281;
  _428 = _560 | _604;
  if (_428 != 0)
    goto <bb 214>;
  else
    goto <bb 215>;
;;    succ:       214 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                215 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 110, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 109, next block 111, flags: (NEW)
;;    pred:       215 [7.5%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_582 = __len_281 * 24;
;;    succ:       111 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 407, maybe hot
;;    prev block 110, next block 112, flags: (NEW, REACHABLE)
;;    pred:       214 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                110 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE ~[384307168202282326, 18062436905507269290]
  # __elems_before_412 = PHI <__elems_before_566(214), __elems_before_554(110)>
  # _629 = PHI <_567(214), _347(110)>
  # RANGE [24, 18446744073709551600] NONZERO 18446744073709551608
  # prephitmp_583 = PHI <18446744073709551600(214), pretmp_582(110)>
  # DEBUG __lenD.30200 => NULL
  # DEBUG thisD.35374 => this_9(D)
  # DEBUG D#61ptD.0 => &this_9(D)->D.28398._M_implD.27889._M_startD.27891
  # DEBUG thisD.35376 => NULL
  # DEBUG __iD.35375 => D#61ptD.0
  # DEBUG __lhsD.35371 => &__positionD.28323
  # DEBUG __rhsD.35372 => &D.30202
  # DEBUG thisD.32673 => &__positionD.28323
  # DEBUG thisD.32671 => &D.30202
  # DEBUG __elems_beforeD.30201 => __elems_before_412
  # DEBUG D#285ptD.0 => &this_9(D)->D.28398
  # DEBUG D#198ptD.0 => D#285ptD.0
  # DEBUG __nD.36562 => NULL
  # DEBUG thisD.36563 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#198ptD.0
  # DEBUG D#196ptD.0 => &D#197ptD.0->_M_implD.27889
  # DEBUG D#195ptD.0 => D#196ptD.0
  # DEBUG __nD.36566 => NULL
  # DEBUG __aD.36565 => D#195ptD.0
  # DEBUG D#194ptD.0 => D#195ptD.0
  # DEBUG D#192ptD.0 => D#194ptD.0
  # DEBUG D#193ptD.0 => 0B
  # DEBUG __nD.36569 => NULL
  # DEBUG thisD.36567 => D#192ptD.0
  # DEBUG D.36568 => D#193ptD.0
  # DEBUG D#191ptD.0 => D#192ptD.0
  # DEBUG D#185ptD.0 => D#191ptD.0
  # DEBUG thisD.33596 => D#185ptD.0
  # .MEM_411 = VDEF <.MEM_8(D)>
  # PT = { D.36827 } (escaped heap)
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _269 = _ZnwmD.2764 (prephitmp_583);
;;    succ:       112 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 112, loop depth 0, count 0, freq 452, maybe hot
;;    prev block 111, next block 113, flags: (NEW, REACHABLE)
;;    pred:       215 [92.5%]  (FALSE_VALUE,EXECUTABLE)
;;                111 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_270 = PHI <0B(215), _269(111)>
  # .MEM_385 = PHI <.MEM_8(D)(215), .MEM_411(111)>
  # RANGE ~[384307168202282326, 18062436905507269290]
  # __elems_before_631 = PHI <__elems_before_554(215), __elems_before_412(111)>
  # _630 = PHI <_347(215), _629(111)>
  # prephitmp_278 = PHI <0(215), prephitmp_583(111)>
  # DEBUG __new_startD.30203 => NULL
  # DEBUG __new_finishD.30204 => NULL
  # DEBUG D#269ptD.0 => &this_9(D)->D.28398
  # DEBUG thisD.35369 => D#269ptD.0
  # RANGE [0, 18446744073709551615]
  _26 = (long unsigned intD.14) _630;
  # PT = null { D.36827 } (escaped heap)
  __first_27 = __new_finish_270 + _26;
  # DEBUG __firstD.35359 => __first_27
  # DEBUG __nD.35360 => __n_7(D)
  # DEBUG __xD.35361 => __x_28(D)
  # DEBUG D.35362 => D#218ptD.0
  # DEBUG __firstD.35365 => __first_27
  # DEBUG __nD.35364 => __n_7(D)
  # DEBUG __xD.35363 => __x_28(D)
  # DEBUG __assignableD.35367 => 1
  # DEBUG __firstD.36531 => __first_27
  # DEBUG __nD.36532 => __n_7(D)
  # DEBUG __xD.36533 => __x_28(D)
  # DEBUG __curD.36534 => __first_27
  # DEBUG __nD.36532 => __n_7(D)
;;    succ:       113 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 113, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       125 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                112 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1152921504606846975] NONZERO 1152921504606846975
  # __n_633 = PHI <__n_263(125), __n_7(D)(112)>
  # PT = null { D.36827 } (escaped heap)
  # __first_632 = PHI <__first_264(125), __first_27(112)>
  # .MEM_628 = PHI <.MEM_389(125), .MEM_385(112)>
  # DEBUG __curD.36534 => __first_632
  # DEBUG __nD.36532 => __n_633
  # DEBUG __rD.34221 => __first_632
  # DEBUG __pD.36557 => NULL
  # DEBUG __valueD.36556 => __x_28(D)
  # DEBUG D#3ptD.0 => 24
  # DEBUG __pD.34101 => NULL
  # DEBUG D.34102 => D#3ptD.0
  if (__first_632 != 0B)
    goto <bb 114>;
  else
    goto <bb 124>;
;;    succ:       114 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                124 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 114, loop depth 1, count 0, freq 6669, maybe hot
;;    prev block 113, next block 115, flags: (NEW, REACHABLE)
;;    pred:       113 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.36581 => __first_632
  # DEBUG __xD.36582 => __x_28(D)
  # DEBUG D#210ptD.0 => &MEM[(const struct vectorD.27653 *)__x_28(D)].D.29234
  # DEBUG thisD.34092 => D#210ptD.0
  # DEBUG __aD.34090 => NULL
  # VUSE <.MEM_628>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)__x_28(D)];
  # DEBUG D#23ptD.0 => __x_28(D)
  # VUSE <.MEM_628>
  # PT = nonlocal escaped 
  _283 = MEM[(intD.9 * *)__x_28(D) + 8B];
  # DEBUG D#23ptD.0 => __x_28(D)
  # DEBUG thisD.36583 => D#23ptD.0
  # DEBUG thisD.36584 => D#23ptD.0
  _284 = (long intD.12) _283;
  _285 = (long intD.12) _17;
  _286 = _284 - _285;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _287 = _286 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _288 = (size_typeD.28810) _287;
  # DEBUG D#212ptD.0 => &__first_632->D.29234
  # DEBUG thisD.36587 => D#212ptD.0
  # DEBUG __nD.36586 => NULL
  # DEBUG __aD.36585 => NULL
  # DEBUG D#178ptD.0 => &D#212ptD.0->_M_implD.28725
  # DEBUG thisD.36589 => D#178ptD.0
  # DEBUG __aD.36588 => NULL
  # DEBUG thisD.33353 => D#178ptD.0
  # DEBUG __aD.33354 => NULL
  # DEBUG thisD.33350 => D#178ptD.0
  # DEBUG D.33351 => NULL
  # .MEM_414 = VDEF <.MEM_628>
  MEM[(struct _Vector_implD.28702 *)__first_632]._M_startD.28727 = 0B;
  # .MEM_415 = VDEF <.MEM_414>
  MEM[(struct _Vector_implD.28702 *)__first_632]._M_finishD.28728 = 0B;
  # .MEM_416 = VDEF <.MEM_415>
  MEM[(struct _Vector_implD.28702 *)__first_632]._M_end_of_storageD.28729 = 0B;
  # DEBUG thisD.36591 => D#212ptD.0
  # DEBUG __nD.36590 => NULL
  # DEBUG D#176ptD.0 => D#212ptD.0
  # DEBUG __nD.36622 => _288
  # DEBUG thisD.36623 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (_288 != 0)
    goto <bb 116>;
  else
    goto <bb 115>;
;;    succ:       116 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                115 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 115, loop depth 1, count 0, freq 667, maybe hot
;;    prev block 114, next block 116, flags: (NEW)
;;    pred:       114 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_585 = (long unsigned intD.14) _286;
  goto <bb 121>;
;;    succ:       121 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 116, loop depth 1, count 0, freq 6002, maybe hot
;;    prev block 115, next block 117, flags: (NEW, REACHABLE)
;;    pred:       114 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36626 => _288
  # DEBUG __aD.36625 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36629 => _288
  # DEBUG thisD.36627 => D#170ptD.0
  # DEBUG D.36628 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  if (_288 > 4611686018427387903)
    goto <bb 117>;
  else
    goto <bb 118>;
;;    succ:       117 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                118 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 117, loop depth 0, count 0, freq 2, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 116, next block 118, flags: (NEW, REACHABLE)
;;    pred:       116 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __first_424 = PHI <__first_632(116)>
  [LP 28] # .MEM_418 = VDEF <.MEM_416>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2824 ();
;;    succ:       127 (EH,EXECUTABLE)

;;   basic block 118, loop depth 1, count 0, freq 5999, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       116 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _301 = (long unsigned intD.14) _286;
  [LP 14] # .MEM_417 = VDEF <.MEM_416>
  # PT = { D.36828 } (escaped heap)
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _302 = _ZnwmD.2764 (_301);
  goto <bb 120>;
;;    succ:       120 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                119 (EH,EXECUTABLE)

;;   basic block 119, loop depth 0, count 0, freq 0
;;    prev block 118, next block 120, flags: (NEW)
;;    pred:       118 (EH,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __first_423 = PHI <__first_632(118)>
<L51>: [LP 14]
  goto <bb 128> (<L28>);
;;    succ:       128 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 120, loop depth 1, count 0, freq 5999, maybe hot
;;    prev block 119, next block 121, flags: (NEW)
;;    pred:       118 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_417>
  pretmp_262 = MEM[(intD.9 * *)__x_28(D) + 8B];
  # VUSE <.MEM_417>
  pretmp_24 = MEM[(intD.9 * *)__x_28(D)];
  pretmp_597 = (long intD.12) pretmp_262;
  pretmp_589 = (long intD.12) pretmp_24;
  pretmp_592 = pretmp_597 - pretmp_589;
  pretmp_586 = pretmp_592 /[ex] 4;
  pretmp_663 = (long unsigned intD.14) pretmp_592;
;;    succ:       121 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 121, loop depth 1, count 0, freq 6666, maybe hot
;;    prev block 120, next block 122, flags: (NEW, REACHABLE)
;;    pred:       115 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                120 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36828 } (escaped heap)
  # iftmp.2_303 = PHI <0B(115), _302(120)>
  # .MEM_387 = PHI <.MEM_416(115), .MEM_417(120)>
  # PT = nonlocal escaped 
  # prephitmp_553 = PHI <_17(115), pretmp_24(120)>
  # RANGE [-2305843009213693952, 2305843009213693951]
  # prephitmp_584 = PHI <_287(115), pretmp_586(120)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_217 = PHI <pretmp_585(115), _301(120)>
  # prephitmp_664 = PHI <pretmp_585(115), pretmp_663(120)>
  # .MEM_429 = VDEF <.MEM_387>
  MEM[(struct _Vector_baseD.28492 *)__first_632]._M_implD.28725._M_startD.28727 = iftmp.2_303;
  # .MEM_430 = VDEF <.MEM_429>
  MEM[(struct _Vector_baseD.28492 *)__first_632]._M_implD.28725._M_finishD.28728 = iftmp.2_303;
  # PT = null { D.36828 } (escaped heap)
  _291 = iftmp.2_303 + prephitmp_217;
  # .MEM_431 = VDEF <.MEM_430>
  MEM[(struct _Vector_baseD.28492 *)__first_632]._M_implD.28725._M_end_of_storageD.28729 = _291;
  # DEBUG D#211ptD.0 => &__first_632->D.29234
  # DEBUG thisD.34075 => D#211ptD.0
  # DEBUG D#391ptD.0 => MEM[(intD.9 * *)__x_28(D) + 8B]
  # DEBUG D#25ptD.0 => __x_28(D)
  # DEBUG thisD.34073 => D#25ptD.0
  # DEBUG thisD.32500 => NULL
  # DEBUG __iD.32499 => NULL
  # DEBUG D#390ptD.0 => MEM[(intD.9 * *)__x_28(D)]
  # DEBUG D#26ptD.0 => __x_28(D)
  # DEBUG thisD.34070 => D#26ptD.0
  # DEBUG thisD.32516 => NULL
  # DEBUG __iD.32515 => NULL
  # DEBUG __firstD.34096 => D#390ptD.0
  # DEBUG __lastD.34097 => D#391ptD.0
  # DEBUG __resultD.36593 => NULL
  # DEBUG D.36592 => D#209ptD.0
  # DEBUG __firstD.34067 => D#390ptD.0
  # DEBUG __lastD.34068 => D#391ptD.0
  # DEBUG __resultD.36596 => NULL
  # DEBUG __assignableD.36601 => 1
  # DEBUG __firstD.34031 => D#390ptD.0
  # DEBUG __lastD.34032 => D#391ptD.0
  # DEBUG __resultD.36602 => NULL
  # DEBUG __firstD.33961 => D#390ptD.0
  # DEBUG __lastD.33960 => D#391ptD.0
  # DEBUG __resultD.36605 => NULL
  # DEBUG __itD.33932 => D#391ptD.0
  # DEBUG __it$_M_currentD.33902 => D#391ptD.0
  # DEBUG __itD.33934 => D#390ptD.0
  # DEBUG __it$_M_currentD.33898 => D#390ptD.0
  # DEBUG __firstD.33907 => D#390ptD.0
  # DEBUG __lastD.33908 => D#391ptD.0
  # DEBUG __resultD.36608 => NULL
  # DEBUG __itD.33873 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.33893 => D#391ptD.0
  # DEBUG __itD.33871 => D#391ptD.0
  # DEBUG thisD.33846 => NULL
  # DEBUG __itD.33895 => D#390ptD.0
  # DEBUG __itD.33867 => D#390ptD.0
  # DEBUG thisD.33846 => NULL
  # DEBUG __firstD.36613 => D#390ptD.0
  # DEBUG __lastD.36612 => D#391ptD.0
  # DEBUG __resultD.36611 => NULL
  # DEBUG __simpleD.36617 => 1
  # DEBUG __firstD.36620 => D#390ptD.0
  # DEBUG __lastD.36619 => D#391ptD.0
  # DEBUG __resultD.36618 => NULL
  # DEBUG D#389ptD.0 => (long intD.12) D#391ptD.0
  # DEBUG D#388ptD.0 => (long intD.12) D#390ptD.0
  # DEBUG D#387ptD.0 => D#389ptD.0 - D#388ptD.0
  # DEBUG _NumD.36621 => D#387ptD.0 /[ex] 4
  if (prephitmp_584 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;
;;    succ:       122 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                123 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 122, loop depth 1, count 0, freq 2599, maybe hot
;;    prev block 121, next block 123, flags: (NEW, REACHABLE)
;;    pred:       121 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_432 = VDEF <.MEM_431>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  memmoveD.995 (iftmp.2_303, prephitmp_553, prephitmp_664);
;;    succ:       123 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 123, loop depth 1, count 0, freq 6666, maybe hot
;;    prev block 122, next block 124, flags: (NEW, REACHABLE)
;;    pred:       121 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                122 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_388 = PHI <.MEM_431(121), .MEM_432(122)>
  # PT = null { D.36828 } (escaped heap)
  _300 = iftmp.2_303 + prephitmp_664;
  # .MEM_433 = VDEF <.MEM_388>
  __first_632->D.29234._M_implD.28725._M_finishD.28728 = _300;
;;    succ:       124 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 124, loop depth 1, count 0, freq 9548, maybe hot
;;    prev block 123, next block 125, flags: (NEW, REACHABLE)
;;    pred:       113 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                123 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_389 = PHI <.MEM_628(113), .MEM_433(123)>
  # RANGE [0, 1152921504606846974] NONZERO 1152921504606846975
  __n_263 = __n_633 + 18446744073709551615;
  # DEBUG __nD.36532 => __n_263
  # PT = null { D.36827 } (escaped heap)
  __first_264 = __first_632 + 24;
  # DEBUG __curD.36534 => __first_264
  # DEBUG __curD.36534 => __first_264
  # DEBUG __nD.36532 => __n_263
  if (__n_263 == 0)
    goto <bb 126>;
  else
    goto <bb 125>;
;;    succ:       126 [4.7%]  (TRUE_VALUE,EXECUTABLE)
;;                125 [95.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 125, loop depth 1, count 0, freq 9098, maybe hot
;;    prev block 124, next block 126, flags: (NEW)
;;    pred:       124 [95.3%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 113>;
;;    succ:       113 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 126, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 125, next block 127, flags: (NEW, REACHABLE)
;;    pred:       124 [4.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.30204 => 0B
  # DEBUG D#270ptD.0 => &this_9(D)->D.28398
  # DEBUG thisD.35396 => D#270ptD.0
  # DEBUG thisD.35394 => &__positionD.28323
  # VUSE <.MEM_389>
  # PT = nonlocal escaped 
  __first_31 = this_9(D)->D.28398._M_implD.27889._M_startD.27891;
  # DEBUG __firstD.35379 => __first_31
  # DEBUG __lastD.35380 => D#392ptD.0
  # DEBUG __resultD.35381 => NULL
  # DEBUG __allocD.35382 => D#217ptD.0
  # DEBUG D#216ptD.0 => D#217ptD.0
  # DEBUG D#213ptD.0 => D#216ptD.0
  # DEBUG __firstD.35386 => __first_31
  # DEBUG __lastD.35385 => D#392ptD.0
  # DEBUG __resultD.35384 => NULL
  # DEBUG D.35383 => D#213ptD.0
  # DEBUG __firstD.35389 => __first_31
  # DEBUG __lastD.35388 => D#392ptD.0
  # DEBUG __resultD.35387 => NULL
  # DEBUG __assignableD.35392 => 1
  # DEBUG __firstD.36631 => __first_31
  # DEBUG __lastD.36632 => D#392ptD.0
  # DEBUG __resultD.36633 => __new_finish_270
  # DEBUG __curD.36634 => __new_finish_270
  # DEBUG __firstD.36631 => __first_31
  if (__position_22 == __first_31)
    goto <bb 150>;
  else
    goto <bb 135>;
;;    succ:       150 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                135 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 127, loop depth 0, count 0, freq 0
;;    prev block 126, next block 128, flags: (NEW)
;;    pred:       117 (EH,EXECUTABLE)
<L50>: [LP 28]
;;    succ:       128 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 128, loop depth 0, count 0, freq 0
;;    prev block 127, next block 129, flags: (NEW, REACHABLE)
;;    pred:       119 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                127 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_390 = PHI <.MEM_417(119), .MEM_418(127)>
  # PT = null { D.36827 } (escaped heap)
  # __first_408 = PHI <__first_423(119), __first_424(127)>
<L28>:
  # VUSE <.MEM_390>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _265 = __builtin_eh_pointerD.2738 (23);
  # .MEM_419 = VDEF <.MEM_390>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_begin_catchD.16941 (_265);
  # DEBUG __firstD.36536 => __first_27
  # DEBUG __lastD.36535 => __first_408
  # DEBUG __firstD.36539 => __first_27
  # DEBUG __lastD.36538 => __first_408
;;    succ:       129 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 129, loop depth 1, count 0, freq 0
;;    prev block 128, next block 130, flags: (NEW, REACHABLE)
;;    pred:       128 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                132 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __first_266 = PHI <__first_27(128), __first_268(132)>
  # .MEM_391 = PHI <.MEM_419(128), .MEM_425(132)>
  # DEBUG __firstD.36539 => __first_266
  if (__first_266 == __first_408)
    goto <bb 133>;
  else
    goto <bb 130>;
;;    succ:       133 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                130 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 130, loop depth 1, count 0, freq 0
;;    prev block 129, next block 131, flags: (NEW, REACHABLE)
;;    pred:       129 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.33173 => __first_266
  # DEBUG __pointerD.36540 => NULL
  # DEBUG thisD.36541 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.36542 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_391>
  # PT = nonlocal escaped null { D.36828 D.36829 D.36830 } (escaped heap)
  _267 = MEM[(struct _Vector_baseD.28492 *)__first_266]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _267
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.36545 => D#156ptD.0
  # DEBUG __pD.36544 => _267
  # DEBUG __nD.36543 => D#149ptD.0
  if (_267 != 0B)
    goto <bb 131>;
  else
    goto <bb 132>;
;;    succ:       131 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                132 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 131, loop depth 1, count 0, freq 0
;;    prev block 130, next block 132, flags: (NEW, REACHABLE)
;;    pred:       130 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.36549 => _267
  # DEBUG __aD.36547 => D#145ptD.0
  # DEBUG __nD.36548 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.36552 => _267
  # DEBUG thisD.36550 => D#141ptD.0
  # DEBUG D.36551 => D#142ptD.0
  # .MEM_420 = VDEF <.MEM_391>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_267);
;;    succ:       132 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 132, loop depth 1, count 0, freq 0
;;    prev block 131, next block 133, flags: (NEW, REACHABLE)
;;    pred:       130 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                131 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_392 = PHI <.MEM_391(130), .MEM_420(131)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.36553 => D#148ptD.0
  # DEBUG thisD.36554 => D#148ptD.0
  # DEBUG thisD.36555 => D#148ptD.0
  # .MEM_425 = VDEF <.MEM_392>
  MEM[(struct  &)__first_266] ={v} {CLOBBER};
  # PT = null { D.36827 } (escaped heap)
  __first_268 = __first_266 + 24;
  # DEBUG __firstD.36539 => __first_268
  goto <bb 129>;
;;    succ:       129 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 133, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 132, next block 134, flags: (NEW, REACHABLE)
;;    pred:       129 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 13] # .MEM_426 = VDEF <.MEM_391>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_rethrowD.30210 ();
;;    succ:       134 (EH,EXECUTABLE)

;;   basic block 134, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 133, next block 135, flags: (NEW, REACHABLE)
;;    pred:       133 (EH,EXECUTABLE)
<L30>: [LP 13]
  [MNT 21] # .MEM_427 = VDEF <.MEM_426>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_end_catchD.16940 ();
  [LP 29] resx 22
;;    succ:       198 (EH,EXECUTABLE)

;;   basic block 135, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 134, next block 136, flags: (NEW, REACHABLE)
;;    pred:       126 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       136 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 136, loop depth 1, count 0, freq 9478, maybe hot
;;    prev block 135, next block 137, flags: (NEW)
;;    pred:       135 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                149 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_607 = PHI <__first_31(135), __first_306(149)>
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_608 = PHI <__new_finish_270(135), __new_finish_307(149)>
  # .MEM_562 = PHI <.MEM_389(135), .MEM_396(149)>
  # DEBUG __curD.36634 => __new_finish_608
  # DEBUG __firstD.36631 => __first_607
  # DEBUG __rD.34109 => __new_finish_608
  # DEBUG __pD.36657 => NULL
  # DEBUG __valueD.36656 => __first_607
  # DEBUG D#3ptD.0 => 24
  # DEBUG __pD.34101 => NULL
  # DEBUG D.34102 => D#3ptD.0
  if (__new_finish_608 != 0B)
    goto <bb 137>;
  else
    goto <bb 147>;
;;    succ:       137 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                147 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 137, loop depth 1, count 0, freq 9476, maybe hot
;;    prev block 136, next block 138, flags: (NEW, REACHABLE)
;;    pred:       136 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.36662 => __new_finish_608
  # DEBUG __xD.36663 => __first_607
  # DEBUG D#210ptD.0 => &MEM[(const struct vectorD.27653 *)__first_607].D.29234
  # DEBUG thisD.34092 => D#210ptD.0
  # DEBUG __aD.34090 => NULL
  # VUSE <.MEM_562>
  # PT = nonlocal escaped 
  _113 = MEM[(intD.9 * *)__first_607];
  # DEBUG D#23ptD.0 => __first_607
  # VUSE <.MEM_562>
  # PT = nonlocal escaped 
  _312 = MEM[(intD.9 * *)__first_607 + 8B];
  # DEBUG D#23ptD.0 => __first_607
  # DEBUG thisD.36664 => D#23ptD.0
  # DEBUG thisD.36665 => D#23ptD.0
  _313 = (long intD.12) _312;
  _314 = (long intD.12) _113;
  _315 = _313 - _314;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _316 = _315 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _317 = (size_typeD.28810) _316;
  # DEBUG D#212ptD.0 => &__new_finish_608->D.29234
  # DEBUG thisD.36668 => D#212ptD.0
  # DEBUG __nD.36667 => NULL
  # DEBUG __aD.36666 => NULL
  # DEBUG D#178ptD.0 => &D#212ptD.0->_M_implD.28725
  # DEBUG thisD.36670 => D#178ptD.0
  # DEBUG __aD.36669 => NULL
  # DEBUG thisD.33353 => D#178ptD.0
  # DEBUG __aD.33354 => NULL
  # DEBUG thisD.33350 => D#178ptD.0
  # DEBUG D.33351 => NULL
  # .MEM_435 = VDEF <.MEM_562>
  MEM[(struct _Vector_implD.28702 *)__new_finish_608]._M_startD.28727 = 0B;
  # .MEM_436 = VDEF <.MEM_435>
  MEM[(struct _Vector_implD.28702 *)__new_finish_608]._M_finishD.28728 = 0B;
  # .MEM_437 = VDEF <.MEM_436>
  MEM[(struct _Vector_implD.28702 *)__new_finish_608]._M_end_of_storageD.28729 = 0B;
  # DEBUG thisD.36672 => D#212ptD.0
  # DEBUG __nD.36671 => NULL
  # DEBUG D#176ptD.0 => D#212ptD.0
  # DEBUG __nD.36703 => _317
  # DEBUG thisD.36704 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (_317 != 0)
    goto <bb 139>;
  else
    goto <bb 138>;
;;    succ:       139 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                138 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 138, loop depth 1, count 0, freq 948, maybe hot
;;    prev block 137, next block 139, flags: (NEW)
;;    pred:       137 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_20 = (long unsigned intD.14) _315;
  goto <bb 143>;
;;    succ:       143 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 139, loop depth 1, count 0, freq 8528, maybe hot
;;    prev block 138, next block 140, flags: (NEW, REACHABLE)
;;    pred:       137 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36707 => _317
  # DEBUG __aD.36706 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36710 => _317
  # DEBUG thisD.36708 => D#170ptD.0
  # DEBUG D.36709 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  if (_317 > 4611686018427387903)
    goto <bb 140>;
  else
    goto <bb 141>;
;;    succ:       140 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                141 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 140, loop depth 0, count 0, freq 3, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 139, next block 141, flags: (NEW, REACHABLE)
;;    pred:       139 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_445 = PHI <__new_finish_608(139)>
  [LP 30] # .MEM_439 = VDEF <.MEM_437>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2824 ();
;;    succ:       151 (EH,EXECUTABLE)

;;   basic block 141, loop depth 1, count 0, freq 8525, maybe hot
;;    prev block 140, next block 142, flags: (NEW, REACHABLE)
;;    pred:       139 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _330 = (long unsigned intD.14) _315;
  [LP 16] # .MEM_438 = VDEF <.MEM_437>
  # PT = { D.36829 } (escaped heap)
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _331 = _ZnwmD.2764 (_330);
  goto <bb 143>;
;;    succ:       143 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                142 (EH,EXECUTABLE)

;;   basic block 142, loop depth 0, count 0, freq 0
;;    prev block 141, next block 143, flags: (NEW)
;;    pred:       141 (EH,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_444 = PHI <__new_finish_608(141)>
<L54>: [LP 16]
  goto <bb 152> (<L31>);
;;    succ:       152 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 143, loop depth 1, count 0, freq 9472, maybe hot
;;    prev block 142, next block 144, flags: (NEW, REACHABLE)
;;    pred:       138 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                141 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36829 } (escaped heap)
  # iftmp.2_332 = PHI <0B(138), _331(141)>
  # .MEM_394 = PHI <.MEM_437(138), .MEM_438(141)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_364 = PHI <pretmp_20(138), _330(141)>
  # .MEM_450 = VDEF <.MEM_394>
  MEM[(struct _Vector_baseD.28492 *)__new_finish_608]._M_implD.28725._M_startD.28727 = iftmp.2_332;
  # .MEM_451 = VDEF <.MEM_450>
  MEM[(struct _Vector_baseD.28492 *)__new_finish_608]._M_implD.28725._M_finishD.28728 = iftmp.2_332;
  # PT = null { D.36829 } (escaped heap)
  _320 = iftmp.2_332 + prephitmp_364;
  # .MEM_452 = VDEF <.MEM_451>
  MEM[(struct _Vector_baseD.28492 *)__new_finish_608]._M_implD.28725._M_end_of_storageD.28729 = _320;
  # DEBUG D#211ptD.0 => &__new_finish_608->D.29234
  # DEBUG thisD.34075 => D#211ptD.0
  # VUSE <.MEM_452>
  # PT = nonlocal escaped 
  _321 = MEM[(intD.9 * *)__first_607 + 8B];
  # DEBUG D#25ptD.0 => __first_607
  # DEBUG thisD.34073 => D#25ptD.0
  # DEBUG thisD.32500 => NULL
  # DEBUG __iD.32499 => NULL
  # VUSE <.MEM_452>
  # PT = nonlocal escaped 
  _322 = MEM[(intD.9 * *)__first_607];
  # DEBUG D#26ptD.0 => __first_607
  # DEBUG thisD.34070 => D#26ptD.0
  # DEBUG thisD.32516 => NULL
  # DEBUG __iD.32515 => NULL
  # DEBUG __firstD.34096 => _322
  # DEBUG __lastD.34097 => _321
  # DEBUG __resultD.36674 => NULL
  # DEBUG D.36673 => D#209ptD.0
  # DEBUG __firstD.34067 => _322
  # DEBUG __lastD.34068 => _321
  # DEBUG __resultD.36677 => NULL
  # DEBUG __assignableD.36682 => 1
  # DEBUG __firstD.34031 => _322
  # DEBUG __lastD.34032 => _321
  # DEBUG __resultD.36683 => NULL
  # DEBUG __firstD.33961 => _322
  # DEBUG __lastD.33960 => _321
  # DEBUG __resultD.36686 => NULL
  # DEBUG __itD.33932 => _321
  # DEBUG __it$_M_currentD.33902 => _321
  # DEBUG __itD.33934 => _322
  # DEBUG __it$_M_currentD.33898 => _322
  # DEBUG __firstD.33907 => _322
  # DEBUG __lastD.33908 => _321
  # DEBUG __resultD.36689 => NULL
  # DEBUG __itD.33873 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.33893 => _321
  # DEBUG __itD.33871 => _321
  # DEBUG thisD.33846 => NULL
  # DEBUG __itD.33895 => _322
  # DEBUG __itD.33867 => _322
  # DEBUG thisD.33846 => NULL
  # DEBUG __firstD.36694 => _322
  # DEBUG __lastD.36693 => _321
  # DEBUG __resultD.36692 => NULL
  # DEBUG __simpleD.36698 => 1
  # DEBUG __firstD.36701 => _322
  # DEBUG __lastD.36700 => _321
  # DEBUG __resultD.36699 => NULL
  __last.4_323 = (long intD.12) _321;
  __first.5_324 = (long intD.12) _322;
  _325 = __last.4_323 - __first.5_324;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_326 = _325 /[ex] 4;
  # DEBUG _NumD.36702 => _Num_326
  if (_Num_326 != 0)
    goto <bb 145>;
  else
    goto <bb 144>;
;;    succ:       145 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                144 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 144, loop depth 1, count 0, freq 5780, maybe hot
;;    prev block 143, next block 145, flags: (NEW)
;;    pred:       143 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_175 = (long unsigned intD.14) _325;
  goto <bb 146>;
;;    succ:       146 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 145, loop depth 1, count 0, freq 3692, maybe hot
;;    prev block 144, next block 146, flags: (NEW, REACHABLE)
;;    pred:       143 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _327 = (long unsigned intD.14) _325;
  # .MEM_453 = VDEF <.MEM_452>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  memmoveD.995 (iftmp.2_332, _322, _327);
;;    succ:       146 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 146, loop depth 1, count 0, freq 9472, maybe hot
;;    prev block 145, next block 147, flags: (NEW, REACHABLE)
;;    pred:       144 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                145 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_395 = PHI <.MEM_452(144), .MEM_453(145)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_174 = PHI <pretmp_175(144), _327(145)>
  # PT = null { D.36829 } (escaped heap)
  _329 = iftmp.2_332 + prephitmp_174;
  # .MEM_454 = VDEF <.MEM_395>
  __new_finish_608->D.29234._M_implD.28725._M_finishD.28728 = _329;
;;    succ:       147 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 147, loop depth 1, count 0, freq 9477, maybe hot
;;    prev block 146, next block 148, flags: (NEW, REACHABLE)
;;    pred:       136 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                146 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_396 = PHI <.MEM_562(136), .MEM_454(146)>
  # PT = nonlocal escaped 
  __first_306 = __first_607 + 24;
  # DEBUG __firstD.36631 => __first_306
  # PT = null { D.36827 } (escaped heap)
  __new_finish_307 = __new_finish_608 + 24;
  # DEBUG __curD.36634 => __new_finish_307
  # DEBUG __curD.36634 => __new_finish_307
  # DEBUG __firstD.36631 => __first_306
  if (__position_22 == __first_306)
    goto <bb 148>;
  else
    goto <bb 149>;
;;    succ:       148 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                149 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 148, loop depth 0, count 0, freq 426, maybe hot
;;    prev block 147, next block 149, flags: (NEW)
;;    pred:       147 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_498 = PHI <__new_finish_307(147)>
  goto <bb 150>;
;;    succ:       150 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 149, loop depth 1, count 0, freq 9051, maybe hot
;;    prev block 148, next block 150, flags: (NEW)
;;    pred:       147 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 136>;
;;    succ:       136 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 150, loop depth 0, count 0, freq 447, maybe hot
;;    prev block 149, next block 151, flags: (NEW, REACHABLE)
;;    pred:       148 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                126 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_610 = PHI <__new_finish_498(148), __new_finish_270(126)>
  # .MEM_595 = PHI <.MEM_396(148), .MEM_389(126)>
  # DEBUG __new_finishD.30204 => NULL
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _32 = __n_7(D) * 24;
  # PT = null { D.36827 } (escaped heap)
  __new_finish_33 = __new_finish_610 + _32;
  # DEBUG __new_finishD.30204 => __new_finish_33
  # DEBUG D#271ptD.0 => &this_9(D)->D.28398
  # DEBUG thisD.35415 => D#271ptD.0
  # VUSE <.MEM_595>
  # PT = nonlocal escaped 
  _35 = this_9(D)->D.28398._M_implD.27889._M_finishD.27892;
  # DEBUG thisD.35413 => &__positionD.28323
  # DEBUG __firstD.35398 => D#392ptD.0
  # DEBUG __lastD.35399 => _35
  # DEBUG __resultD.35400 => __new_finish_33
  # DEBUG __allocD.35401 => D#217ptD.0
  # DEBUG D#216ptD.0 => D#217ptD.0
  # DEBUG D#213ptD.0 => D#216ptD.0
  # DEBUG __firstD.35405 => D#392ptD.0
  # DEBUG __lastD.35404 => _35
  # DEBUG __resultD.35403 => __new_finish_33
  # DEBUG D.35402 => D#213ptD.0
  # DEBUG __firstD.35408 => D#392ptD.0
  # DEBUG __lastD.35407 => _35
  # DEBUG __resultD.35406 => __new_finish_33
  # DEBUG __assignableD.35411 => 1
  # DEBUG __firstD.36712 => D#392ptD.0
  # DEBUG __lastD.36713 => _35
  # DEBUG __resultD.36714 => __new_finish_33
  # DEBUG __curD.36715 => __new_finish_33
  # DEBUG __firstD.36712 => D#392ptD.0
  if (__position_22 == _35)
    goto <bb 174>;
  else
    goto <bb 159>;
;;    succ:       174 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                159 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 151, loop depth 0, count 0, freq 0
;;    prev block 150, next block 152, flags: (NEW)
;;    pred:       140 (EH,EXECUTABLE)
<L53>: [LP 30]
;;    succ:       152 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 152, loop depth 0, count 0, freq 0
;;    prev block 151, next block 153, flags: (NEW, REACHABLE)
;;    pred:       142 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                151 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_397 = PHI <.MEM_438(142), .MEM_439(151)>
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_410 = PHI <__new_finish_444(142), __new_finish_445(151)>
<L31>:
  # VUSE <.MEM_397>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _308 = __builtin_eh_pointerD.2738 (26);
  # .MEM_440 = VDEF <.MEM_397>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_begin_catchD.16941 (_308);
  # DEBUG __firstD.36636 => __new_finish_270
  # DEBUG __lastD.36635 => __new_finish_410
  # DEBUG __firstD.36639 => __new_finish_270
  # DEBUG __lastD.36638 => __new_finish_410
;;    succ:       153 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 153, loop depth 1, count 0, freq 0
;;    prev block 152, next block 154, flags: (NEW, REACHABLE)
;;    pred:       152 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                156 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_309 = PHI <__new_finish_270(152), __new_finish_311(156)>
  # .MEM_398 = PHI <.MEM_440(152), .MEM_446(156)>
  # DEBUG __firstD.36639 => __new_finish_309
  if (__new_finish_309 == __new_finish_410)
    goto <bb 157>;
  else
    goto <bb 154>;
;;    succ:       157 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                154 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 154, loop depth 1, count 0, freq 0
;;    prev block 153, next block 155, flags: (NEW, REACHABLE)
;;    pred:       153 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.33173 => __new_finish_309
  # DEBUG __pointerD.36640 => NULL
  # DEBUG thisD.36641 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.36642 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_398>
  # PT = nonlocal escaped null { D.36828 D.36829 D.36830 } (escaped heap)
  _310 = MEM[(struct _Vector_baseD.28492 *)__new_finish_309]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _310
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.36645 => D#156ptD.0
  # DEBUG __pD.36644 => _310
  # DEBUG __nD.36643 => D#149ptD.0
  if (_310 != 0B)
    goto <bb 155>;
  else
    goto <bb 156>;
;;    succ:       155 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                156 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 155, loop depth 1, count 0, freq 0
;;    prev block 154, next block 156, flags: (NEW, REACHABLE)
;;    pred:       154 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.36649 => _310
  # DEBUG __aD.36647 => D#145ptD.0
  # DEBUG __nD.36648 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.36652 => _310
  # DEBUG thisD.36650 => D#141ptD.0
  # DEBUG D.36651 => D#142ptD.0
  # .MEM_441 = VDEF <.MEM_398>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_310);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 156, loop depth 1, count 0, freq 0
;;    prev block 155, next block 157, flags: (NEW, REACHABLE)
;;    pred:       154 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                155 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_399 = PHI <.MEM_398(154), .MEM_441(155)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.36653 => D#148ptD.0
  # DEBUG thisD.36654 => D#148ptD.0
  # DEBUG thisD.36655 => D#148ptD.0
  # .MEM_446 = VDEF <.MEM_399>
  MEM[(struct  &)__new_finish_309] ={v} {CLOBBER};
  # PT = null { D.36827 } (escaped heap)
  __new_finish_311 = __new_finish_309 + 24;
  # DEBUG __firstD.36639 => __new_finish_311
  goto <bb 153>;
;;    succ:       153 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 157, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 156, next block 158, flags: (NEW, REACHABLE)
;;    pred:       153 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 15] # .MEM_447 = VDEF <.MEM_398>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_rethrowD.30210 ();
;;    succ:       158 (EH,EXECUTABLE)

;;   basic block 158, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 157, next block 159, flags: (NEW, REACHABLE)
;;    pred:       157 (EH,EXECUTABLE)
<L33>: [LP 15]
  [MNT 24] # .MEM_448 = VDEF <.MEM_447>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_end_catchD.16940 ();
  [LP 19] resx 25
;;    succ:       217 (EH,EXECUTABLE)

;;   basic block 159, loop depth 0, count 0, freq 427, maybe hot
;;    prev block 158, next block 160, flags: (NEW, REACHABLE)
;;    pred:       150 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       160 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 160, loop depth 1, count 0, freq 9406, maybe hot
;;    prev block 159, next block 161, flags: (NEW)
;;    pred:       159 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                172 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_609 = PHI <__position_22(159), __position_335(172)>
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_605 = PHI <__new_finish_33(159), __new_finish_336(172)>
  # .MEM_593 = PHI <.MEM_595(159), .MEM_403(172)>
  # DEBUG __curD.36715 => __new_finish_605
  # DEBUG __firstD.36712 => __position_609
  # DEBUG __rD.34109 => __new_finish_605
  # DEBUG __pD.36738 => NULL
  # DEBUG __valueD.36737 => __position_609
  # DEBUG D#3ptD.0 => 24
  # DEBUG __pD.34101 => NULL
  # DEBUG D.34102 => D#3ptD.0
  if (__new_finish_605 != 0B)
    goto <bb 161>;
  else
    goto <bb 171>;
;;    succ:       161 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                171 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 161, loop depth 1, count 0, freq 9404, maybe hot
;;    prev block 160, next block 162, flags: (NEW, REACHABLE)
;;    pred:       160 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.36743 => __new_finish_605
  # DEBUG __xD.36744 => __position_609
  # DEBUG D#210ptD.0 => &MEM[(const struct vectorD.27653 *)__position_609].D.29234
  # DEBUG thisD.34092 => D#210ptD.0
  # DEBUG __aD.34090 => NULL
  # VUSE <.MEM_593>
  # PT = nonlocal escaped 
  _114 = MEM[(intD.9 * *)__position_609];
  # DEBUG D#23ptD.0 => __position_609
  # VUSE <.MEM_593>
  # PT = nonlocal escaped 
  _341 = MEM[(intD.9 * *)__position_609 + 8B];
  # DEBUG D#23ptD.0 => __position_609
  # DEBUG thisD.36745 => D#23ptD.0
  # DEBUG thisD.36746 => D#23ptD.0
  _342 = (long intD.12) _341;
  _343 = (long intD.12) _114;
  _344 = _342 - _343;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _345 = _344 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _346 = (size_typeD.28810) _345;
  # DEBUG D#212ptD.0 => &__new_finish_605->D.29234
  # DEBUG thisD.36749 => D#212ptD.0
  # DEBUG __nD.36748 => NULL
  # DEBUG __aD.36747 => NULL
  # DEBUG D#178ptD.0 => &D#212ptD.0->_M_implD.28725
  # DEBUG thisD.36751 => D#178ptD.0
  # DEBUG __aD.36750 => NULL
  # DEBUG thisD.33353 => D#178ptD.0
  # DEBUG __aD.33354 => NULL
  # DEBUG thisD.33350 => D#178ptD.0
  # DEBUG D.33351 => NULL
  # .MEM_456 = VDEF <.MEM_593>
  MEM[(struct _Vector_implD.28702 *)__new_finish_605]._M_startD.28727 = 0B;
  # .MEM_457 = VDEF <.MEM_456>
  MEM[(struct _Vector_implD.28702 *)__new_finish_605]._M_finishD.28728 = 0B;
  # .MEM_458 = VDEF <.MEM_457>
  MEM[(struct _Vector_implD.28702 *)__new_finish_605]._M_end_of_storageD.28729 = 0B;
  # DEBUG thisD.36753 => D#212ptD.0
  # DEBUG __nD.36752 => NULL
  # DEBUG D#176ptD.0 => D#212ptD.0
  # DEBUG __nD.36784 => _346
  # DEBUG thisD.36785 => D#176ptD.0
  # DEBUG D#175ptD.0 => D#176ptD.0
  if (_346 != 0)
    goto <bb 163>;
  else
    goto <bb 162>;
;;    succ:       163 [90.0%]  (TRUE_VALUE,EXECUTABLE)
;;                162 [10.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 162, loop depth 1, count 0, freq 940, maybe hot
;;    prev block 161, next block 163, flags: (NEW)
;;    pred:       161 [10.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_555 = (long unsigned intD.14) _344;
  goto <bb 168>;
;;    succ:       168 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 163, loop depth 1, count 0, freq 8463, maybe hot
;;    prev block 162, next block 164, flags: (NEW, REACHABLE)
;;    pred:       161 [90.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28725
  # DEBUG D#173ptD.0 => D#174ptD.0
  # DEBUG __nD.36788 => _346
  # DEBUG __aD.36787 => D#173ptD.0
  # DEBUG D#172ptD.0 => D#173ptD.0
  # DEBUG D#170ptD.0 => D#172ptD.0
  # DEBUG D#171ptD.0 => 0B
  # DEBUG __nD.36791 => _346
  # DEBUG thisD.36789 => D#170ptD.0
  # DEBUG D.36790 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#170ptD.0
  # DEBUG D#168ptD.0 => D#169ptD.0
  # DEBUG thisD.33412 => D#168ptD.0
  if (_346 > 4611686018427387903)
    goto <bb 164>;
  else
    goto <bb 165>;
;;    succ:       164 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                165 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 164, loop depth 0, count 0, freq 3, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 163, next block 165, flags: (NEW, REACHABLE)
;;    pred:       163 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_463 = PHI <__new_finish_605(163)>
  [LP 31] # .MEM_460 = VDEF <.MEM_458>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZSt17__throw_bad_allocvD.2824 ();
;;    succ:       175 (EH,EXECUTABLE)

;;   basic block 165, loop depth 1, count 0, freq 8460, maybe hot
;;    prev block 164, next block 166, flags: (NEW, REACHABLE)
;;    pred:       163 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _359 = (long unsigned intD.14) _344;
  [LP 18] # .MEM_459 = VDEF <.MEM_458>
  # PT = { D.36830 } (escaped heap)
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _360 = _ZnwmD.2764 (_359);
  goto <bb 167>;
;;    succ:       167 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                166 (EH,EXECUTABLE)

;;   basic block 166, loop depth 0, count 0, freq 0
;;    prev block 165, next block 167, flags: (NEW)
;;    pred:       165 (EH,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_449 = PHI <__new_finish_605(165)>
<L56>: [LP 18]
  goto <bb 176> (<L34>);
;;    succ:       176 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 167, loop depth 1, count 0, freq 8460, maybe hot
;;    prev block 166, next block 168, flags: (NEW)
;;    pred:       165 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_459>
  pretmp_305 = MEM[(intD.9 * *)__position_609 + 8B];
  # VUSE <.MEM_459>
  pretmp_386 = MEM[(intD.9 * *)__position_609];
  pretmp_318 = (long intD.12) pretmp_305;
  pretmp_271 = (long intD.12) pretmp_386;
  pretmp_470 = pretmp_318 - pretmp_271;
  pretmp_378 = pretmp_470 /[ex] 4;
  pretmp_661 = (long unsigned intD.14) pretmp_470;
;;    succ:       168 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 168, loop depth 1, count 0, freq 9400, maybe hot
;;    prev block 167, next block 169, flags: (NEW, REACHABLE)
;;    pred:       162 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                167 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36830 } (escaped heap)
  # iftmp.2_361 = PHI <0B(162), _360(167)>
  # .MEM_401 = PHI <.MEM_458(162), .MEM_459(167)>
  # PT = nonlocal escaped 
  # prephitmp_279 = PHI <_114(162), pretmp_386(167)>
  # RANGE [-2305843009213693952, 2305843009213693951]
  # prephitmp_261 = PHI <_345(162), pretmp_378(167)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_83 = PHI <pretmp_555(162), _359(167)>
  # prephitmp_662 = PHI <pretmp_555(162), pretmp_661(167)>
  # .MEM_471 = VDEF <.MEM_401>
  MEM[(struct _Vector_baseD.28492 *)__new_finish_605]._M_implD.28725._M_startD.28727 = iftmp.2_361;
  # .MEM_472 = VDEF <.MEM_471>
  MEM[(struct _Vector_baseD.28492 *)__new_finish_605]._M_implD.28725._M_finishD.28728 = iftmp.2_361;
  # PT = null { D.36830 } (escaped heap)
  _349 = iftmp.2_361 + prephitmp_83;
  # .MEM_473 = VDEF <.MEM_472>
  MEM[(struct _Vector_baseD.28492 *)__new_finish_605]._M_implD.28725._M_end_of_storageD.28729 = _349;
  # DEBUG D#211ptD.0 => &__new_finish_605->D.29234
  # DEBUG thisD.34075 => D#211ptD.0
  # DEBUG D#386ptD.0 => MEM[(intD.9 * *)__position_609 + 8B]
  # DEBUG D#25ptD.0 => __position_609
  # DEBUG thisD.34073 => D#25ptD.0
  # DEBUG thisD.32500 => NULL
  # DEBUG __iD.32499 => NULL
  # DEBUG D#385ptD.0 => MEM[(intD.9 * *)__position_609]
  # DEBUG D#26ptD.0 => __position_609
  # DEBUG thisD.34070 => D#26ptD.0
  # DEBUG thisD.32516 => NULL
  # DEBUG __iD.32515 => NULL
  # DEBUG __firstD.34096 => D#385ptD.0
  # DEBUG __lastD.34097 => D#386ptD.0
  # DEBUG __resultD.36755 => NULL
  # DEBUG D.36754 => D#209ptD.0
  # DEBUG __firstD.34067 => D#385ptD.0
  # DEBUG __lastD.34068 => D#386ptD.0
  # DEBUG __resultD.36758 => NULL
  # DEBUG __assignableD.36763 => 1
  # DEBUG __firstD.34031 => D#385ptD.0
  # DEBUG __lastD.34032 => D#386ptD.0
  # DEBUG __resultD.36764 => NULL
  # DEBUG __firstD.33961 => D#385ptD.0
  # DEBUG __lastD.33960 => D#386ptD.0
  # DEBUG __resultD.36767 => NULL
  # DEBUG __itD.33932 => D#386ptD.0
  # DEBUG __it$_M_currentD.33902 => D#386ptD.0
  # DEBUG __itD.33934 => D#385ptD.0
  # DEBUG __it$_M_currentD.33898 => D#385ptD.0
  # DEBUG __firstD.33907 => D#385ptD.0
  # DEBUG __lastD.33908 => D#386ptD.0
  # DEBUG __resultD.36770 => NULL
  # DEBUG __itD.33873 => NULL
  # DEBUG __itD.33376 => NULL
  # DEBUG __itD.33893 => D#386ptD.0
  # DEBUG __itD.33871 => D#386ptD.0
  # DEBUG thisD.33846 => NULL
  # DEBUG __itD.33895 => D#385ptD.0
  # DEBUG __itD.33867 => D#385ptD.0
  # DEBUG thisD.33846 => NULL
  # DEBUG __firstD.36775 => D#385ptD.0
  # DEBUG __lastD.36774 => D#386ptD.0
  # DEBUG __resultD.36773 => NULL
  # DEBUG __simpleD.36779 => 1
  # DEBUG __firstD.36782 => D#385ptD.0
  # DEBUG __lastD.36781 => D#386ptD.0
  # DEBUG __resultD.36780 => NULL
  # DEBUG D#384ptD.0 => (long intD.12) D#386ptD.0
  # DEBUG D#383ptD.0 => (long intD.12) D#385ptD.0
  # DEBUG D#382ptD.0 => D#384ptD.0 - D#383ptD.0
  # DEBUG _NumD.36783 => D#382ptD.0 /[ex] 4
  if (prephitmp_261 != 0)
    goto <bb 169>;
  else
    goto <bb 170>;
;;    succ:       169 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                170 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 169, loop depth 1, count 0, freq 3664, maybe hot
;;    prev block 168, next block 170, flags: (NEW, REACHABLE)
;;    pred:       168 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_474 = VDEF <.MEM_473>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  memmoveD.995 (iftmp.2_361, prephitmp_279, prephitmp_662);
;;    succ:       170 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 170, loop depth 1, count 0, freq 9400, maybe hot
;;    prev block 169, next block 171, flags: (NEW, REACHABLE)
;;    pred:       168 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                169 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_402 = PHI <.MEM_473(168), .MEM_474(169)>
  # PT = null { D.36830 } (escaped heap)
  _358 = iftmp.2_361 + prephitmp_662;
  # .MEM_475 = VDEF <.MEM_402>
  __new_finish_605->D.29234._M_implD.28725._M_finishD.28728 = _358;
;;    succ:       171 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 171, loop depth 1, count 0, freq 9406, maybe hot
;;    prev block 170, next block 172, flags: (NEW, REACHABLE)
;;    pred:       160 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                170 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_403 = PHI <.MEM_593(160), .MEM_475(170)>
  # PT = nonlocal 
  __position_335 = __position_609 + 24;
  # DEBUG __firstD.36712 => __position_335
  # PT = null { D.36827 } (escaped heap)
  __new_finish_336 = __new_finish_605 + 24;
  # DEBUG __curD.36715 => __new_finish_336
  # DEBUG __curD.36715 => __new_finish_336
  # DEBUG __firstD.36712 => __position_335
  if (_35 == __position_335)
    goto <bb 173>;
  else
    goto <bb 172>;
;;    succ:       173 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                172 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 172, loop depth 1, count 0, freq 8983, maybe hot
;;    prev block 171, next block 173, flags: (NEW)
;;    pred:       171 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 160>;
;;    succ:       160 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 173, loop depth 0, count 0, freq 423, maybe hot
;;    prev block 172, next block 174, flags: (NEW)
;;    pred:       171 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_497 = PHI <__new_finish_336(171)>
  # VUSE <.MEM_403>
  pretmp_40 = this_9(D)->D.28398._M_implD.27889._M_finishD.27892;
;;    succ:       174 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 174, loop depth 0, count 0, freq 443, maybe hot
;;    prev block 173, next block 175, flags: (NEW, REACHABLE)
;;    pred:       173 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                150 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_19 = PHI <__new_finish_497(173), __new_finish_33(150)>
  # .MEM_594 = PHI <.MEM_403(173), .MEM_595(150)>
  # PT = nonlocal escaped 
  # prephitmp_103 = PHI <pretmp_40(173), _35(150)>
  # DEBUG __new_finishD.30204 => NULL
  # DEBUG D#272ptD.0 => &this_9(D)->D.28398
  # DEBUG thisD.35451 => D#272ptD.0
  # DEBUG D#381ptD.0 => this_9(D)->D.28398._M_implD.27889._M_finishD.27892
  # VUSE <.MEM_594>
  # PT = nonlocal escaped 
  __first_38 = this_9(D)->D.28398._M_implD.27889._M_startD.27891;
  # DEBUG __firstD.35427 => __first_38
  # DEBUG __lastD.35428 => D#381ptD.0
  # DEBUG __firstD.35434 => __first_38
  if (__first_38 == prephitmp_103)
    goto <bb 190>;
  else
    goto <bb 184>;
;;    succ:       190 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                184 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 175, loop depth 0, count 0, freq 0
;;    prev block 174, next block 176, flags: (NEW)
;;    pred:       164 (EH,EXECUTABLE)
<L55>: [LP 31]
;;    succ:       176 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 176, loop depth 0, count 0, freq 0
;;    prev block 175, next block 177, flags: (NEW, REACHABLE)
;;    pred:       166 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                175 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_404 = PHI <.MEM_459(166), .MEM_460(175)>
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_413 = PHI <__new_finish_449(166), __new_finish_463(175)>
<L34>:
  # VUSE <.MEM_404>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _337 = __builtin_eh_pointerD.2738 (29);
  # .MEM_461 = VDEF <.MEM_404>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_begin_catchD.16941 (_337);
  # DEBUG __firstD.36717 => __new_finish_33
  # DEBUG __lastD.36716 => __new_finish_413
  # DEBUG __firstD.36720 => __new_finish_33
  # DEBUG __lastD.36719 => __new_finish_413
;;    succ:       177 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 177, loop depth 1, count 0, freq 0
;;    prev block 176, next block 178, flags: (NEW, REACHABLE)
;;    pred:       176 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                180 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_338 = PHI <__new_finish_33(176), __new_finish_340(180)>
  # .MEM_405 = PHI <.MEM_461(176), .MEM_467(180)>
  # DEBUG __firstD.36720 => __new_finish_338
  if (__new_finish_338 == __new_finish_413)
    goto <bb 181>;
  else
    goto <bb 178>;
;;    succ:       181 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                178 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 178, loop depth 1, count 0, freq 0
;;    prev block 177, next block 179, flags: (NEW, REACHABLE)
;;    pred:       177 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.33173 => __new_finish_338
  # DEBUG __pointerD.36721 => NULL
  # DEBUG thisD.36722 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.36723 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_405>
  # PT = nonlocal escaped null { D.36828 D.36829 D.36830 } (escaped heap)
  _339 = MEM[(struct _Vector_baseD.28492 *)__new_finish_338]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _339
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.36726 => D#156ptD.0
  # DEBUG __pD.36725 => _339
  # DEBUG __nD.36724 => D#149ptD.0
  if (_339 != 0B)
    goto <bb 179>;
  else
    goto <bb 180>;
;;    succ:       179 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                180 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 179, loop depth 1, count 0, freq 0
;;    prev block 178, next block 180, flags: (NEW, REACHABLE)
;;    pred:       178 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.36730 => _339
  # DEBUG __aD.36728 => D#145ptD.0
  # DEBUG __nD.36729 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.36733 => _339
  # DEBUG thisD.36731 => D#141ptD.0
  # DEBUG D.36732 => D#142ptD.0
  # .MEM_462 = VDEF <.MEM_405>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_339);
;;    succ:       180 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 180, loop depth 1, count 0, freq 0
;;    prev block 179, next block 181, flags: (NEW, REACHABLE)
;;    pred:       178 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                179 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_406 = PHI <.MEM_405(178), .MEM_462(179)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.36734 => D#148ptD.0
  # DEBUG thisD.36735 => D#148ptD.0
  # DEBUG thisD.36736 => D#148ptD.0
  # .MEM_467 = VDEF <.MEM_406>
  MEM[(struct  &)__new_finish_338] ={v} {CLOBBER};
  # PT = null { D.36827 } (escaped heap)
  __new_finish_340 = __new_finish_338 + 24;
  # DEBUG __firstD.36720 => __new_finish_340
  goto <bb 177>;
;;    succ:       177 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 181, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 180, next block 182, flags: (NEW, REACHABLE)
;;    pred:       177 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 17] # .MEM_468 = VDEF <.MEM_405>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_rethrowD.30210 ();
;;    succ:       182 (EH,EXECUTABLE)

;;   basic block 182, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 181, next block 183, flags: (NEW, REACHABLE)
;;    pred:       181 (EH,EXECUTABLE)
<L36>: [LP 17]
  [MNT 27] # .MEM_469 = VDEF <.MEM_468>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_end_catchD.16940 ();
  [LP 5] resx 28
;;    succ:       183 (EH,EXECUTABLE)

;;   basic block 183, loop depth 0, count 0, freq 0
;;    prev block 182, next block 184, flags: (NEW)
;;    pred:       182 (EH,EXECUTABLE)
<L57>: [LP 5]
  goto <bb 199> (<L13>);
;;    succ:       199 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 184, loop depth 0, count 0, freq 403, maybe hot
;;    prev block 183, next block 185, flags: (NEW, REACHABLE)
;;    pred:       174 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       185 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 185, loop depth 1, count 0, freq 4481, maybe hot
;;    prev block 184, next block 186, flags: (NEW)
;;    pred:       184 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                188 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_82 = PHI <__first_38(184), __first_93(188)>
  # .MEM_615 = PHI <.MEM_594(184), .MEM_120(188)>
  # DEBUG __firstD.35434 => __first_82
  # DEBUG __rD.33173 => __first_82
  # DEBUG __pointerD.35435 => NULL
  # DEBUG thisD.35436 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.35437 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_615>
  # PT = nonlocal escaped 
  _92 = MEM[(struct _Vector_baseD.28492 *)__first_82]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _92
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35440 => D#156ptD.0
  # DEBUG __pD.35439 => _92
  # DEBUG __nD.35438 => D#149ptD.0
  if (_92 != 0B)
    goto <bb 186>;
  else
    goto <bb 187>;
;;    succ:       186 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                187 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 186, loop depth 1, count 0, freq 3129, maybe hot
;;    prev block 185, next block 187, flags: (NEW, REACHABLE)
;;    pred:       185 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35444 => _92
  # DEBUG __aD.35442 => D#145ptD.0
  # DEBUG __nD.35443 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35447 => _92
  # DEBUG thisD.35445 => D#141ptD.0
  # DEBUG D.35446 => D#142ptD.0
  # .MEM_115 = VDEF <.MEM_615>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_92);
;;    succ:       187 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 187, loop depth 1, count 0, freq 4481, maybe hot
;;    prev block 186, next block 188, flags: (NEW, REACHABLE)
;;    pred:       185 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                186 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_104 = PHI <.MEM_615(185), .MEM_115(186)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35448 => D#148ptD.0
  # DEBUG thisD.35449 => D#148ptD.0
  # DEBUG thisD.35450 => D#148ptD.0
  # .MEM_120 = VDEF <.MEM_104>
  MEM[(struct  &)__first_82] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_93 = __first_82 + 24;
  # DEBUG __firstD.35434 => __first_93
  # DEBUG __firstD.35434 => __first_93
  if (__first_93 == prephitmp_103)
    goto <bb 189>;
  else
    goto <bb 188>;
;;    succ:       189 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                188 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 188, loop depth 1, count 0, freq 4078, maybe hot
;;    prev block 187, next block 189, flags: (NEW)
;;    pred:       187 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 185>;
;;    succ:       185 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 189, loop depth 0, count 0, freq 403, maybe hot
;;    prev block 188, next block 190, flags: (NEW)
;;    pred:       187 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_120>
  pretmp_101 = this_9(D)->D.28398._M_implD.27889._M_startD.27891;
;;    succ:       190 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 190, loop depth 0, count 0, freq 443, maybe hot
;;    prev block 189, next block 191, flags: (NEW, REACHABLE)
;;    pred:       189 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                174 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_614 = PHI <.MEM_120(189), .MEM_594(174)>
  # PT = nonlocal escaped 
  # prephitmp_622 = PHI <pretmp_101(189), __first_38(174)>
  # DEBUG D#283ptD.0 => this_9(D)->D.28398._M_implD.27889._M_end_of_storageD.27893
  # DEBUG D#282ptD.0 => (long intD.12) D#283ptD.0
  # DEBUG D#380ptD.0 => this_9(D)->D.28398._M_implD.27889._M_startD.27891
  # DEBUG D#281ptD.0 => (long intD.12) D#380ptD.0
  # DEBUG D#280ptD.0 => D#282ptD.0 - D#281ptD.0
  # DEBUG D#279ptD.0 => D#280ptD.0 /[ex] 24
  # DEBUG D#278ptD.0 => &this_9(D)->D.28398
  # DEBUG D#131ptD.0 => D#278ptD.0
  # DEBUG D#132ptD.0 => (long unsigned intD.14) D#279ptD.0
  # DEBUG __pD.35417 => D#380ptD.0
  # DEBUG thisD.35419 => D#131ptD.0
  # DEBUG __nD.35418 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  if (prephitmp_622 != 0B)
    goto <bb 191>;
  else
    goto <bb 192>;
;;    succ:       191 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                192 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 191, loop depth 0, count 0, freq 309, maybe hot
;;    prev block 190, next block 192, flags: (NEW, REACHABLE)
;;    pred:       190 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#128ptD.0 => &D#129ptD.0->_M_implD.27889
  # DEBUG D#126ptD.0 => D#128ptD.0
  # DEBUG D#127ptD.0 => D#130ptD.0
  # DEBUG __pD.35423 => D#380ptD.0
  # DEBUG __aD.35421 => D#126ptD.0
  # DEBUG __nD.35422 => D#127ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG __pD.35426 => D#380ptD.0
  # DEBUG thisD.35424 => D#122ptD.0
  # DEBUG D.35425 => D#123ptD.0
  # .MEM_121 = VDEF <.MEM_614>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_622);
;;    succ:       192 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 192, loop depth 0, count 0, freq 443, maybe hot
;;    prev block 191, next block 193, flags: (NEW, REACHABLE)
;;    pred:       191 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                190 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_105 = PHI <.MEM_121(191), .MEM_614(190)>
  # .MEM_41 = VDEF <.MEM_105>
  this_9(D)->D.28398._M_implD.27889._M_startD.27891 = __new_finish_270;
  # .MEM_42 = VDEF <.MEM_41>
  this_9(D)->D.28398._M_implD.27889._M_finishD.27892 = __new_finish_19;
  # PT = null { D.36827 } (escaped heap)
  _44 = __new_finish_270 + prephitmp_278;
  # .MEM_45 = VDEF <.MEM_42>
  this_9(D)->D.28398._M_implD.27889._M_end_of_storageD.27893 = _44;
;;    succ:       193 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 193, loop depth 0, count 0, freq 1470, maybe hot
;;    prev block 192, next block 194, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                192 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                106 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_8(D)(2), .MEM_45(192), .MEM_79(106)>
  # VUSE <.MEM_3>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 194, loop depth 0, count 0, freq 0
;;    prev block 193, next block 195, flags: (NEW)
;;    pred:       37 (EH,EXECUTABLE)
<L40>: [LP 21]
;;    succ:       195 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 195, loop depth 0, count 0, freq 0
;;    prev block 194, next block 196, flags: (NEW, REACHABLE)
;;    pred:       101 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                194 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                98 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_140(101), .MEM_502(194), .MEM_136(40), .MEM_137(46), .MEM_523(74), .MEM_544(98)>
<L10>:
  # DEBUG thisD.35453 => &__x_copyD.30166
  # DEBUG D#155ptD.0 => &__x_copyD.30166.D.29234
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG D#158ptD.0 => __x_copyD.30166.D.29234._M_implD.28725._M_finishD.28728
  # DEBUG D#157ptD.0 => __x_copyD.30166.D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG D#156ptD.0 => &__x_copyD.30166.D.29234
  # DEBUG thisD.35454 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_4>
  # PT = nonlocal escaped null { D.36823 } (escaped heap)
  _94 = MEM[(struct _Vector_baseD.28492 *)&__x_copyD.30166]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _94
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35457 => D#156ptD.0
  # DEBUG __pD.35456 => _94
  # DEBUG __nD.35455 => D#149ptD.0
  if (_94 != 0B)
    goto <bb 196>;
  else
    goto <bb 197>;
;;    succ:       196 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                197 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 196, loop depth 0, count 0, freq 0
;;    prev block 195, next block 197, flags: (NEW, REACHABLE)
;;    pred:       195 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35461 => _94
  # DEBUG __aD.35459 => D#145ptD.0
  # DEBUG __nD.35460 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35464 => _94
  # DEBUG thisD.35462 => D#141ptD.0
  # DEBUG D.35463 => D#142ptD.0
  # .MEM_147 = VDEF <.MEM_4>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_94);
;;    succ:       197 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 197, loop depth 0, count 0, freq 0
;;    prev block 196, next block 198, flags: (NEW, REACHABLE)
;;    pred:       195 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                196 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_106 = PHI <.MEM_4(195), .MEM_147(196)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35465 => D#148ptD.0
  # DEBUG thisD.35466 => D#148ptD.0
  # DEBUG thisD.35467 => D#148ptD.0
  resx 2
;;    succ:      

;;   basic block 198, loop depth 0, count 0, freq 0
;;    prev block 197, next block 199, flags: (NEW)
;;    pred:       134 (EH,EXECUTABLE)
<L52>: [LP 29]
;;    succ:       199 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 199, loop depth 0, count 0, freq 0
;;    prev block 198, next block 200, flags: (NEW, REACHABLE)
;;    pred:       198 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                183 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_1 = PHI <__new_finish_270(198), __new_finish_33(183)>
  # .MEM_5 = PHI <.MEM_427(198), .MEM_469(183)>
<L13>:
  # DEBUG __new_finishD.30204 => __new_finish_1
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _46 = __builtin_eh_pointerD.2738 (9);
  # .MEM_47 = VDEF <.MEM_5>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_begin_catchD.16941 (_46);
  if (__new_finish_1 == 0B)
    goto <bb 201>;
  else
    goto <bb 200>;
;;    succ:       201 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                200 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 200, loop depth 0, count 0, freq 0
;;    prev block 199, next block 201, flags: (NEW, REACHABLE)
;;    pred:       199 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 206>;
;;    succ:       206 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 201, loop depth 0, count 0, freq 0
;;    prev block 200, next block 202, flags: (NEW, REACHABLE)
;;    pred:       199 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                217 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_455 = PHI <.MEM_47(199), .MEM_56(217)>
  # DEBUG __new_finishD.30204 => 0B
  # DEBUG D#276ptD.0 => &this_9(D)->D.28398
  # DEBUG thisD.35492 => D#276ptD.0
  # RANGE ~[1537228672809129301, 18062436905507269290]
  _49 = __n_7(D) + __elems_before_631;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _50 = _49 * 24;
  # PT = null { D.36827 } (escaped heap)
  _51 = __new_finish_270 + _50;
  # DEBUG __firstD.35468 => __first_27
  # DEBUG __lastD.35469 => _51
;;    succ:       202 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 202, loop depth 1, count 0, freq 0
;;    prev block 201, next block 203, flags: (NEW, REACHABLE)
;;    pred:       201 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                205 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __first_80 = PHI <__first_27(201), __first_96(205)>
  # .MEM_107 = PHI <.MEM_455(201), .MEM_127(205)>
  # DEBUG __firstD.35475 => __first_80
  if (_51 == __first_80)
    goto <bb 210>;
  else
    goto <bb 203>;
;;    succ:       210 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                203 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 203, loop depth 1, count 0, freq 0
;;    prev block 202, next block 204, flags: (NEW, REACHABLE)
;;    pred:       202 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.33173 => __first_80
  # DEBUG __pointerD.35476 => NULL
  # DEBUG thisD.35477 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.35478 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_107>
  # PT = nonlocal escaped null { D.36828 D.36829 D.36830 } (escaped heap)
  _95 = MEM[(struct _Vector_baseD.28492 *)__first_80]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _95
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35481 => D#156ptD.0
  # DEBUG __pD.35480 => _95
  # DEBUG __nD.35479 => D#149ptD.0
  if (_95 != 0B)
    goto <bb 204>;
  else
    goto <bb 205>;
;;    succ:       204 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                205 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 204, loop depth 1, count 0, freq 0
;;    prev block 203, next block 205, flags: (NEW, REACHABLE)
;;    pred:       203 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35485 => _95
  # DEBUG __aD.35483 => D#145ptD.0
  # DEBUG __nD.35484 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35488 => _95
  # DEBUG thisD.35486 => D#141ptD.0
  # DEBUG D.35487 => D#142ptD.0
  # .MEM_122 = VDEF <.MEM_107>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_95);
;;    succ:       205 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 205, loop depth 1, count 0, freq 0
;;    prev block 204, next block 206, flags: (NEW, REACHABLE)
;;    pred:       203 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                204 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_108 = PHI <.MEM_107(203), .MEM_122(204)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35489 => D#148ptD.0
  # DEBUG thisD.35490 => D#148ptD.0
  # DEBUG thisD.35491 => D#148ptD.0
  # .MEM_127 = VDEF <.MEM_108>
  MEM[(struct  &)__first_80] ={v} {CLOBBER};
  # PT = null { D.36827 } (escaped heap)
  __first_96 = __first_80 + 24;
  # DEBUG __firstD.35475 => __first_96
  goto <bb 202>;
;;    succ:       202 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 206, loop depth 1, count 0, freq 0
;;    prev block 205, next block 207, flags: (NEW)
;;    pred:       200 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                209 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = null { D.36827 } (escaped heap)
  # __new_finish_97 = PHI <__new_finish_270(200), __new_finish_99(209)>
  # .MEM_109 = PHI <.MEM_47(200), .MEM_133(209)>
  # DEBUG __firstD.35501 => __new_finish_97
  if (__new_finish_1 == __new_finish_97)
    goto <bb 210>;
  else
    goto <bb 207>;
;;    succ:       210 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                207 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 207, loop depth 1, count 0, freq 0
;;    prev block 206, next block 208, flags: (NEW, REACHABLE)
;;    pred:       206 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __rD.33173 => __new_finish_97
  # DEBUG __pointerD.35502 => NULL
  # DEBUG thisD.35503 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.35504 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_109>
  # PT = nonlocal escaped null { D.36828 D.36829 D.36830 } (escaped heap)
  _98 = MEM[(struct _Vector_baseD.28492 *)__new_finish_97]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _98
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35507 => D#156ptD.0
  # DEBUG __pD.35506 => _98
  # DEBUG __nD.35505 => D#149ptD.0
  if (_98 != 0B)
    goto <bb 208>;
  else
    goto <bb 209>;
;;    succ:       208 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                209 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 208, loop depth 1, count 0, freq 0
;;    prev block 207, next block 209, flags: (NEW, REACHABLE)
;;    pred:       207 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35511 => _98
  # DEBUG __aD.35509 => D#145ptD.0
  # DEBUG __nD.35510 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35514 => _98
  # DEBUG thisD.35512 => D#141ptD.0
  # DEBUG D.35513 => D#142ptD.0
  # .MEM_128 = VDEF <.MEM_109>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (_98);
;;    succ:       209 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 209, loop depth 1, count 0, freq 0
;;    prev block 208, next block 210, flags: (NEW, REACHABLE)
;;    pred:       207 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                208 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_110 = PHI <.MEM_109(207), .MEM_128(208)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35515 => D#148ptD.0
  # DEBUG thisD.35516 => D#148ptD.0
  # DEBUG thisD.35517 => D#148ptD.0
  # .MEM_133 = VDEF <.MEM_110>
  MEM[(struct  &)__new_finish_97] ={v} {CLOBBER};
  # PT = null { D.36827 } (escaped heap)
  __new_finish_99 = __new_finish_97 + 24;
  # DEBUG __firstD.35501 => __new_finish_99
  goto <bb 206>;
;;    succ:       206 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 210, loop depth 0, count 0, freq 0
;;    prev block 209, next block 211, flags: (NEW, REACHABLE)
;;    pred:       202 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                206 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_654 = PHI <.MEM_107(202), .MEM_109(206)>
  # DEBUG D#284ptD.0 => &this_9(D)->D.28398
  # DEBUG D#131ptD.0 => D#284ptD.0
  # DEBUG __pD.35520 => NULL
  # DEBUG thisD.35522 => D#131ptD.0
  # DEBUG __nD.35521 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  if (__new_finish_270 != 0B)
    goto <bb 211>;
  else
    goto <bb 212>;
;;    succ:       211 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                212 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 211, loop depth 0, count 0, freq 0
;;    prev block 210, next block 212, flags: (NEW, REACHABLE)
;;    pred:       210 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#128ptD.0 => &D#129ptD.0->_M_implD.27889
  # DEBUG D#126ptD.0 => D#128ptD.0
  # DEBUG D#127ptD.0 => D#130ptD.0
  # DEBUG __pD.35526 => NULL
  # DEBUG __aD.35524 => D#126ptD.0
  # DEBUG __nD.35525 => D#127ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG __pD.35529 => NULL
  # DEBUG thisD.35527 => D#122ptD.0
  # DEBUG D.35528 => D#123ptD.0
  # .MEM_134 = VDEF <.MEM_654>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  _ZdlPvD.2766 (__new_finish_270);
;;    succ:       212 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 212, loop depth 0, count 0, freq 0
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 211, next block 213, flags: (NEW, REACHABLE)
;;    pred:       211 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                210 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_111 = PHI <.MEM_134(211), .MEM_654(210)>
  [LP 6] # .MEM_53 = VDEF <.MEM_111>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_rethrowD.30210 ();
;;    succ:       213 (EH,EXECUTABLE)

;;   basic block 213, loop depth 0, count 0, freq 0
;;    prev block 212, next block 214, flags: (NEW, REACHABLE)
;;    pred:       212 (EH,EXECUTABLE)
<L18>: [LP 6]
  [MNT 11] # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_end_catchD.16940 ();
  resx 10
;;    succ:      

;;   basic block 214, loop depth 0, count 0, freq 404, maybe hot
;;    prev block 213, next block 215, flags: (NEW, REACHABLE)
;;    pred:       109 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.30200 => NULL
  # DEBUG thisD.35374 => this_9(D)
  # DEBUG D#61ptD.0 => &this_9(D)->D.28398._M_implD.27889._M_startD.27891
  # DEBUG thisD.35376 => NULL
  # DEBUG __iD.35375 => D#61ptD.0
  # DEBUG __lhsD.35371 => &__positionD.28323
  # DEBUG __rhsD.35372 => &D.30202
  # DEBUG thisD.32673 => &__positionD.28323
  _569 = (long intD.12) __position_22;
  # DEBUG thisD.32671 => &D.30202
  _567 = _569 - _273;
  # RANGE [-384307168202282325, 384307168202282325]
  _568 = _567 /[ex] 24;
  # RANGE ~[384307168202282326, 18062436905507269290]
  __elems_before_566 = (const size_typeD.27974) _568;
  # DEBUG __elems_beforeD.30201 => __elems_before_566
  # DEBUG D#285ptD.0 => &this_9(D)->D.28398
  # DEBUG D#198ptD.0 => D#285ptD.0
  # DEBUG __nD.36562 => NULL
  # DEBUG thisD.36563 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#198ptD.0
  goto <bb 111>;
;;    succ:       111 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 215, loop depth 0, count 0, freq 49, maybe hot
;;    prev block 214, next block 216, flags: (NEW, REACHABLE)
;;    pred:       109 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.30200 => NULL
  # DEBUG thisD.35374 => this_9(D)
  # DEBUG D#61ptD.0 => &this_9(D)->D.28398._M_implD.27889._M_startD.27891
  # DEBUG thisD.35376 => NULL
  # DEBUG __iD.35375 => D#61ptD.0
  # DEBUG __lhsD.35371 => &__positionD.28323
  # DEBUG __rhsD.35372 => &D.30202
  # DEBUG thisD.32673 => &__positionD.28323
  _561 = (long intD.12) __position_22;
  # DEBUG thisD.32671 => &D.30202
  _347 = _561 - _273;
  # RANGE [-384307168202282325, 384307168202282325]
  _565 = _347 /[ex] 24;
  # RANGE ~[384307168202282326, 18062436905507269290]
  __elems_before_554 = (const size_typeD.27974) _565;
  # DEBUG __elems_beforeD.30201 => __elems_before_554
  # DEBUG D#285ptD.0 => &this_9(D)->D.28398
  # DEBUG D#198ptD.0 => D#285ptD.0
  # DEBUG __nD.36562 => NULL
  # DEBUG thisD.36563 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#198ptD.0
  if (__len_281 != 0)
    goto <bb 110>;
  else
    goto <bb 112>;
;;    succ:       110 [7.5%]  (TRUE_VALUE,EXECUTABLE)
;;                112 [92.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 216, loop depth 0, count 0, freq 10, maybe hot
;;    prev block 215, next block 217, flags: (NEW, REACHABLE)
;;    pred:       65 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _204 = (long unsigned intD.14) _34;
  # PT = nonlocal escaped 
  _203 = __old_finish_611 + _204;
  # .MEM_282 = VDEF <.MEM_71>
  this_9(D)->D.28398._M_implD.27889._M_finishD.27892 = _203;
  # DEBUG thisD.35342 => &__positionD.28323
  # DEBUG __firstD.35336 => D#392ptD.0
  # DEBUG __lastD.35337 => D#374ptD.0
  # DEBUG __valueD.35338 => &__x_copyD.30166
  # DEBUG __firstD.35341 => D#392ptD.0
  goto <bb 104>;
;;    succ:       104 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 217, loop depth 0, count 0, freq 0
;;    prev block 216, next block 1, flags: (NEW, REACHABLE)
;;    pred:       158 (EH,EXECUTABLE)
<L37>: [LP 19]
  # DEBUG __new_finishD.30204 => 0B
  # VUSE <.MEM_448>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _100 = __builtin_eh_pointerD.2738 (9);
  # .MEM_56 = VDEF <.MEM_448>
  # USE = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  # CLB = nonlocal null { D.30166 D.36823 D.36824 D.36825 D.36826 D.36827 D.36828 D.36829 D.36830 } (escaped heap)
  __cxa_begin_catchD.16941 (_100);
  goto <bb 201>;
;;    succ:       201 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function MatrixArbiter::MatrixArbiter(Module*, const string&, int) (_ZN13MatrixArbiterC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi, funcdef_no=1366, decl_uid=28439, cgraph_uid=378, symbol_order=379)


Pass statistics:
----------------

MatrixArbiter::MatrixArbiter(Module*, const string&, int) (struct MatrixArbiterD.27650 * const thisD.28440, struct ModuleD.26017 * parentD.28441, const struct stringD.8426 & nameD.28442, intD.9 sizeD.28443)
Eh tree:
   1 cleanup land:{1,<L8>}
     2 cleanup land:{4,<L9>},{2,<L10>}
       3 cleanup land:{3,<L6>}
{
  struct vectorD.27653 * __firstD.37025;
  value_typeD.28797 __xD.37013;
  struct iteratorD.28802 __positionD.37018;
  struct iteratorD.27966 __positionD.37007;
  struct vectorD.27653 * __posD.36980;
  intD.9 jD.29248;
  intD.9 iD.29246;
  struct value_typeD.27961 D.29245;
  struct vectorD.27653 & pretmp_2;
  struct ArbiterD.26830 * _7;
  long unsigned intD.14 _16;
  long unsigned intD.14 _17;
  struct vectorD.27655 * _18;
  intD.9 * const _19;
  long unsigned intD.14 _22;
  long unsigned intD.14 _23;
  struct vectorD.27653 * _24;
  long unsigned intD.14 _25;
  struct vectorD.27653 & _26;
  struct N7Arbiter7entry_tED.26837 * _32;
  struct ModuleD.26017 * * _33;
  struct vectorD.27653 * _34;
  intD.9 & _37;
  intD.9 * _39;
  struct vectorD.27653 * pretmp_48;
  struct vectorD.27653 * prephitmp_49;
  intD.9 * pretmp_50;
  intD.9 * prephitmp_51;
  intD.9 * const _72;
  long intD.12 _73;
  long intD.12 _74;
  long intD.12 _75;
  long intD.12 _76;
  size_typeD.28810 _77;
  long unsigned intD.14 _78;
  long unsigned intD.14 _79;
  intD.9 * _80;
  intD.9 * _83;
  charD.10 * const _87;
  const charD.10 * _88;
  charD.10 * const _89;
  const charD.10 * _90;
  struct vectorD.27653 * pretmp_95;
  intD.9 * pretmp_102;

;;   basic block 2, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _7 = &this_6(D)->D.28444;
  # .MEM_12 = VDEF <.MEM_8(D)>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZN7ArbiterC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiD.27634 (_7, parent_9(D), name_10(D), size_11(D));
  # .MEM_13 = VDEF <.MEM_12>
  this_6(D)->D.28444.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV13MatrixArbiterD.28448 + 16B];
  # DEBUG D#288ptD.0 => &this_6(D)->_matrixD.28400
  # DEBUG thisD.35596 => D#288ptD.0
  # DEBUG D#121ptD.0 => &D#288ptD.0->D.28398
  # DEBUG thisD.35597 => D#121ptD.0
  # DEBUG D#120ptD.0 => &D#121ptD.0->_M_implD.27889
  # DEBUG thisD.35598 => D#120ptD.0
  # DEBUG thisD.32998 => D#120ptD.0
  # DEBUG thisD.32996 => D#120ptD.0
  # .MEM_41 = VDEF <.MEM_13>
  MEM[(struct _Vector_implD.27866 *)this_6(D) + 144B]._M_startD.27891 = 0B;
  # .MEM_42 = VDEF <.MEM_41>
  MEM[(struct _Vector_implD.27866 *)this_6(D) + 144B]._M_finishD.27892 = 0B;
  # .MEM_43 = VDEF <.MEM_42>
  MEM[(struct _Vector_implD.27866 *)this_6(D) + 144B]._M_end_of_storageD.27893 = 0B;
  # .MEM_15 = VDEF <.MEM_43>
  this_6(D)->_last_reqD.28401 = -1;
  # DEBUG thisD.35593 => &D.29245
  # DEBUG D#140ptD.0 => &D.29245.D.29234
  # DEBUG thisD.35594 => D#140ptD.0
  # DEBUG D#139ptD.0 => &D#140ptD.0->_M_implD.28725
  # DEBUG thisD.35595 => D#139ptD.0
  # DEBUG thisD.33069 => D#139ptD.0
  # DEBUG thisD.33067 => D#139ptD.0
  # .MEM_44 = VDEF <.MEM_15>
  MEM[(struct _Vector_implD.28702 *)&D.29245]._M_startD.28727 = 0B;
  # .MEM_45 = VDEF <.MEM_44>
  MEM[(struct _Vector_implD.28702 *)&D.29245]._M_finishD.28728 = 0B;
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(struct _Vector_implD.28702 *)&D.29245]._M_end_of_storageD.28729 = 0B;
  # RANGE ~[2147483648, 18446744071562067967]
  _17 = (long unsigned intD.14) size_11(D);
  # DEBUG D#408ptD.0 => &this_6(D)->_matrixD.28400
  # DEBUG thisD.36976 => D#408ptD.0
  # DEBUG __new_sizeD.36977 => _17
  # DEBUG __xD.36978 => &D.29245
  # DEBUG D#24ptD.0 => D#408ptD.0
  # DEBUG D#24ptD.0 => D#408ptD.0
  # DEBUG thisD.37009 => D#24ptD.0
  # DEBUG thisD.37010 => D#24ptD.0
  if (_17 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#24ptD.0 => D#408ptD.0
  # DEBUG D#24ptD.0 => D#408ptD.0
  # DEBUG thisD.35555 => D#24ptD.0
  # DEBUG thisD.35554 => D#24ptD.0
  # DEBUG thisD.35548 => D#408ptD.0
  # DEBUG D#27ptD.0 => &D#408ptD.0->D.28398._M_implD.27889._M_finishD.27892
  # DEBUG thisD.35550 => NULL
  # DEBUG __iD.35549 => D#27ptD.0
  # DEBUG thisD.37008 => D#408ptD.0
  # .MEM_109 = VDEF <.MEM_46>
  MEM[(struct __normal_iteratorD.27967 *)&__positionD.37007] = 0B;
  # DEBUG __nD.37006 => _17
  # DEBUG __xD.37005 => &D.29245
  # PT = nonlocal 
  _18 = &this_6(D)->_matrixD.28400;
  [LP 3] # .MEM_110 = VDEF <.MEM_109>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZNSt6vectorIS_IiSaIiEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_D.28321 (_18, __positionD.37007, _17, &D.29245);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_110>
  pretmp_50 = MEM[(struct _Vector_baseD.28492 *)&D.29245]._M_implD.28725._M_startD.28727;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       2 [79.3%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_93 = PHI <.MEM_46(2), .MEM_110(4)>
  # PT = nonlocal escaped null 
  # prephitmp_51 = PHI <0B(2), pretmp_50(4)>
  # DEBUG thisD.35599 => &D.29245
  # DEBUG D#155ptD.0 => &D.29245.D.29234
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG D#158ptD.0 => D.29245.D.29234._M_implD.28725._M_finishD.28728
  # DEBUG D#157ptD.0 => D.29245.D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG D#156ptD.0 => &D.29245.D.29234
  # DEBUG thisD.35600 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # DEBUG D#407ptD.0 => MEM[(struct _Vector_baseD.28492 *)&D.29245]._M_implD.28725._M_startD.28727
  # DEBUG D#152ptD.0 => (long intD.12) D#407ptD.0
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35603 => D#156ptD.0
  # DEBUG __pD.35602 => D#407ptD.0
  # DEBUG __nD.35601 => D#149ptD.0
  if (prephitmp_51 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 30, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35607 => D#407ptD.0
  # DEBUG __aD.35605 => D#145ptD.0
  # DEBUG __nD.35606 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35610 => D#407ptD.0
  # DEBUG thisD.35608 => D#141ptD.0
  # DEBUG D.35609 => D#142ptD.0
  # .MEM_47 = VDEF <.MEM_93>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_51);
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_93(5), .MEM_47(6)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35611 => D#148ptD.0
  # DEBUG thisD.35612 => D#148ptD.0
  # DEBUG thisD.35613 => D#148ptD.0
  # .MEM_20 = VDEF <.MEM_30>
  D.29245 ={v} {CLOBBER};
  # DEBUG iD.29246 => 0
  # DEBUG iD.29246 => 0
  if (size_11(D) <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 43, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_151 = PHI <.MEM_20(7), .MEM_149(16)>
  # VUSE <.MEM_151>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  _79 = _17 * 4;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_66 = PHI <0(9), i_29(17)>
  # .MEM_63 = PHI <.MEM_20(9), .MEM_149(17)>
  # DEBUG iD.29246 => i_66
  # RANGE [0, 18446744073709551615]
  _22 = (long unsigned intD.14) i_66;
  # DEBUG D#286ptD.0 => &this_6(D)->_matrixD.28400
  # VUSE <.MEM_63>
  # PT = nonlocal escaped 
  _34 = MEM[(struct vectorD.27653 * *)this_6(D) + 144B];
  # DEBUG D#8ptD.0 => D#286ptD.0
  # DEBUG __nD.35615 => _22
  # DEBUG thisD.35616 => D#8ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _16 = _22 * 24;
  # PT = nonlocal escaped 
  _26 = _34 + _16;
  # DEBUG thisD.37011 => _26
  # DEBUG __new_sizeD.37012 => _17
  # .MEM_111 = VDEF <.MEM_63>
  __xD.37013 = 0;
  # DEBUG __xD.37013 => __xD.37013
  # VUSE <.MEM_111>
  # PT = nonlocal escaped 
  _19 = MEM[(intD.9 * *)_26];
  # DEBUG D#23ptD.0 => _26
  # VUSE <.MEM_111>
  # PT = nonlocal escaped 
  _72 = MEM[(intD.9 * *)_26 + 8B];
  # DEBUG D#23ptD.0 => _26
  # DEBUG thisD.37020 => D#23ptD.0
  # DEBUG thisD.37021 => D#23ptD.0
  _73 = (long intD.12) _72;
  _74 = (long intD.12) _19;
  _75 = _73 - _74;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _76 = _75 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _77 = (size_typeD.28810) _76;
  if (_17 > _77)
    goto <bb 11>;
  else
    goto <bb 13>;
;;    succ:       11 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 186, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#23ptD.0 => _26
  # DEBUG D#23ptD.0 => _26
  # DEBUG thisD.34949 => D#23ptD.0
  # DEBUG thisD.34948 => D#23ptD.0
  # RANGE [1, 18446744073709551615]
  _78 = _17 - _77;
  # DEBUG thisD.34942 => _26
  # DEBUG D#28ptD.0 => &_26->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG thisD.34944 => NULL
  # DEBUG __iD.34943 => D#28ptD.0
  # DEBUG thisD.37019 => _26
  # .MEM_113 = VDEF <.MEM_111>
  MEM[(struct __normal_iteratorD.28803 *)&__positionD.37018] = _72;
  # DEBUG __nD.37017 => _78
  # DEBUG __xD.37016 => &__xD.37013
  [LP 4] # .MEM_114 = VDEF <.MEM_113>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.29157 (_26, __positionD.37018, _78, &__xD.37013);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 (EH,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 464, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_150 = PHI <.MEM_114(11), .MEM_111(13)>
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 714, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       10 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#23ptD.0 => _26
  # DEBUG D#23ptD.0 => _26
  # DEBUG thisD.34954 => D#23ptD.0
  # DEBUG thisD.34953 => D#23ptD.0
  if (_17 < _77)
    goto <bb 14>;
  else
    goto <bb 12>;
;;    succ:       14 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 435, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  _80 = _19 + _79;
  # DEBUG D#60ptD.0 => _26
  # DEBUG __posD.37015 => _80
  # DEBUG D#59ptD.0 => D#60ptD.0
  # DEBUG thisD.37014 => D#59ptD.0
  # DEBUG D#57ptD.0 => &D#59ptD.0->D.29234
  # DEBUG thisD.32665 => D#57ptD.0
  # DEBUG D#58ptD.0 => D#59ptD.0->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG __firstD.32655 => _80
  # DEBUG __lastD.32656 => D#58ptD.0
  # DEBUG D.32657 => NULL
  # DEBUG D#55ptD.0 => _80
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # .MEM_112 = VDEF <.MEM_111>
  MEM[(intD.9 * *)_26 + 8B] = _80;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_150(12), .MEM_112(14)>
  # DEBUG jD.29248 => 0
  if (i_66 <= 0)
    goto <bb 16>;
  else
    goto <bb 18>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_149 = PHI <.MEM_67(15), .MEM_64(20)>
  i_29 = i_66 + 1;
  # DEBUG iD.29246 => i_29
  # DEBUG iD.29246 => i_29
  if (size_11(D) <= i_29)
    goto <bb 8>;
  else
    goto <bb 17>;
;;    succ:       8 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 860, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  pretmp_95 = MEM[(struct vectorD.27653 * *)this_6(D) + 144B];
  # PT = nonlocal escaped 
  pretmp_2 = pretmp_95 + _16;
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  pretmp_102 = MEM[(intD.9 * *)pretmp_2];
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # j_65 = PHI <0(18), j_28(21)>
  # .MEM_60 = PHI <.MEM_67(18), .MEM_27(21)>
  # DEBUG jD.29248 => j_65
  # RANGE [0, 18446744073709551615]
  _25 = (long unsigned intD.14) j_65;
  # DEBUG D#287ptD.0 => &this_6(D)->_matrixD.28400
  # DEBUG D#8ptD.0 => D#287ptD.0
  # DEBUG __nD.35623 => _22
  # DEBUG thisD.35624 => D#8ptD.0
  # DEBUG __nD.35619 => _25
  # DEBUG thisD.35620 => D#9ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _23 = _25 * 4;
  # PT = nonlocal escaped 
  _37 = pretmp_102 + _23;
  # .MEM_27 = VDEF <.MEM_60>
  *_37 = 1;
  j_28 = j_65 + 1;
  # DEBUG jD.29248 => j_28
  # DEBUG jD.29248 => j_28
  if (j_28 >= i_66)
    goto <bb 20>;
  else
    goto <bb 21>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_64 = PHI <.MEM_27(19)>
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       19 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       3 (EH,EXECUTABLE)
<L6>: [LP 3]
  # DEBUG thisD.35626 => &D.29245
  # DEBUG D#155ptD.0 => &D.29245.D.29234
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG D#158ptD.0 => D.29245.D.29234._M_implD.28725._M_finishD.28728
  # DEBUG D#157ptD.0 => D.29245.D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG D#156ptD.0 => &D.29245.D.29234
  # DEBUG thisD.35627 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_110>
  # PT = nonlocal escaped null 
  _39 = MEM[(struct _Vector_baseD.28492 *)&D.29245]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _39
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35630 => D#156ptD.0
  # DEBUG __pD.35629 => _39
  # DEBUG __nD.35628 => D#149ptD.0
  if (_39 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35634 => _39
  # DEBUG __aD.35632 => D#145ptD.0
  # DEBUG __nD.35633 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35637 => _39
  # DEBUG thisD.35635 => D#141ptD.0
  # DEBUG D.35636 => D#142ptD.0
  # .MEM_53 = VDEF <.MEM_110>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_39);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_110(22), .MEM_53(23)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35638 => D#148ptD.0
  # DEBUG thisD.35639 => D#148ptD.0
  # DEBUG thisD.35640 => D#148ptD.0
  # .MEM_31 = VDEF <.MEM_40>
  D.29245 ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       25 (EH,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 (EH,EXECUTABLE)
<L10>: [LP 2]
  goto <bb 27> (<L7>);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       11 (EH,EXECUTABLE)
<L9>: [LP 4]
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_31(25), .MEM_114(26)>
<L7>:
  # DEBUG thisD.37022 => D#408ptD.0
  # DEBUG D#163ptD.0 => &D#408ptD.0->D.28398
  # DEBUG thisD.33343 => D#163ptD.0
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  _24 = MEM[(struct vectorD.27655 *)this_6(D) + 144B].D.28398._M_implD.27889._M_finishD.27892;
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  __first_81 = MEM[(struct vectorD.27655 *)this_6(D) + 144B].D.28398._M_implD.27889._M_startD.27891;
  # DEBUG __firstD.37025 => __first_81
  # DEBUG __lastD.37024 => _24
  # DEBUG __firstD.37030 => __first_81
  if (_24 == __first_81)
    goto <bb 34>;
  else
    goto <bb 28>;
;;    succ:       34 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 27, next block 29, flags: (NEW)
;;    pred:       27 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_69 = PHI <__first_81(28), __first_84(32)>
  # .MEM_103 = PHI <.MEM_5(28), .MEM_120(32)>
  # DEBUG __firstD.37030 => __first_69
  # DEBUG __rD.33173 => __first_69
  # DEBUG __pointerD.37031 => NULL
  # DEBUG thisD.37032 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.37033 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_103>
  # PT = nonlocal escaped 
  _83 = MEM[(struct _Vector_baseD.28492 *)__first_69]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _83
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.37036 => D#156ptD.0
  # DEBUG __pD.37035 => _83
  # DEBUG __nD.37034 => D#149ptD.0
  if (_83 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.37040 => _83
  # DEBUG __aD.37038 => D#145ptD.0
  # DEBUG __nD.37039 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.37043 => _83
  # DEBUG thisD.37041 => D#141ptD.0
  # DEBUG D.37042 => D#142ptD.0
  # .MEM_115 = VDEF <.MEM_103>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_83);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_96 = PHI <.MEM_103(29), .MEM_115(30)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.37044 => D#148ptD.0
  # DEBUG thisD.37045 => D#148ptD.0
  # DEBUG thisD.37046 => D#148ptD.0
  # .MEM_120 = VDEF <.MEM_96>
  MEM[(struct  &)__first_69] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_84 = __first_69 + 24;
  # DEBUG __firstD.37030 => __first_84
  # DEBUG __firstD.37030 => __first_84
  if (_24 == __first_84)
    goto <bb 33>;
  else
    goto <bb 32>;
;;    succ:       33 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 31, next block 33, flags: (NEW)
;;    pred:       31 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       31 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_120>
  pretmp_48 = MEM[(struct _Vector_baseD.27656 *)this_6(D) + 144B]._M_implD.27889._M_startD.27891;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_120(33), .MEM_5(27)>
  # PT = nonlocal escaped 
  # prephitmp_49 = PHI <pretmp_48(33), __first_81(27)>
  # DEBUG D#164ptD.0 => &D#408ptD.0->D.28398
  # DEBUG thisD.37047 => D#164ptD.0
  # DEBUG D#138ptD.0 => D#164ptD.0->_M_implD.27889._M_end_of_storageD.27893
  # DEBUG D#137ptD.0 => (long intD.12) D#138ptD.0
  # DEBUG D#406ptD.0 => MEM[(struct _Vector_baseD.27656 *)this_6(D) + 144B]._M_implD.27889._M_startD.27891
  # DEBUG D#136ptD.0 => (long intD.12) D#406ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0 - D#136ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0 /[ex] 24
  # DEBUG D#131ptD.0 => D#164ptD.0
  # DEBUG D#132ptD.0 => (long unsigned intD.14) D#134ptD.0
  # DEBUG __pD.37050 => D#406ptD.0
  # DEBUG thisD.37048 => D#131ptD.0
  # DEBUG __nD.37049 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  if (prephitmp_49 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#128ptD.0 => &D#129ptD.0->_M_implD.27889
  # DEBUG D#126ptD.0 => D#128ptD.0
  # DEBUG D#127ptD.0 => D#130ptD.0
  # DEBUG __pD.37054 => D#406ptD.0
  # DEBUG __aD.37052 => D#126ptD.0
  # DEBUG __nD.37053 => D#127ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG __pD.37057 => D#406ptD.0
  # DEBUG thisD.37055 => D#122ptD.0
  # DEBUG D.37056 => D#123ptD.0
  # .MEM_121 = VDEF <.MEM_62>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_49);
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_62(34), .MEM_121(35)>
  # DEBUG D#133ptD.0 => &D#164ptD.0->_M_implD.27889
  # DEBUG thisD.37058 => D#133ptD.0
  # DEBUG thisD.37059 => D#133ptD.0
  # DEBUG thisD.37060 => D#133ptD.0
  # .MEM_126 = VDEF <.MEM_97>
  MEM[(struct  &)this_6(D) + 144] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       37 (EH,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 (EH,EXECUTABLE)
<L8>: [LP 1]
  # DEBUG thisD.37061 => _7
  # .MEM_127 = VDEF <.MEM_126>
  MEM[(struct ArbiterD.26830 *)this_6(D)].D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV7ArbiterD.27647 + 16B];
  # DEBUG D#119ptD.0 => &_7->_requestD.27584
  # DEBUG thisD.37062 => D#119ptD.0
  # DEBUG D#115ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.32975 => D#115ptD.0
  # DEBUG D#118ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_finishD.27076
  # DEBUG D#117ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_startD.27075
  # DEBUG D#48ptD.0 => D#117ptD.0
  # DEBUG D#49ptD.0 => D#118ptD.0
  # DEBUG __firstD.32974 => D#48ptD.0
  # DEBUG __lastD.32973 => D#49ptD.0
  # DEBUG D.32972 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG __firstD.32608 => D#44ptD.0
  # DEBUG __lastD.32607 => D#45ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D.32597 => D#40ptD.0
  # DEBUG D.32596 => D#41ptD.0
  # DEBUG D#116ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.37063 => D#116ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0->_M_implD.27073._M_end_of_storageD.27077
  # DEBUG D#113ptD.0 => (long intD.12) D#114ptD.0
  # VUSE <.MEM_127>
  # PT = nonlocal escaped 
  _32 = MEM[(struct _Vector_baseD.26840 *)this_6(D) + 96B]._M_implD.27073._M_startD.27075;
  # DEBUG D#112ptD.0 => (long intD.12) _32
  # DEBUG D#111ptD.0 => D#113ptD.0 - D#112ptD.0
  # DEBUG D#110ptD.0 => D#111ptD.0 /[ex] 12
  # DEBUG D#107ptD.0 => D#116ptD.0
  # DEBUG D#108ptD.0 => (long unsigned intD.14) D#110ptD.0
  # DEBUG __pD.37066 => _32
  # DEBUG thisD.37064 => D#107ptD.0
  # DEBUG __nD.37065 => D#108ptD.0
  # DEBUG D#106ptD.0 => D#108ptD.0
  # DEBUG D#105ptD.0 => D#107ptD.0
  if (_32 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#104ptD.0 => &D#105ptD.0->_M_implD.27073
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#103ptD.0 => D#106ptD.0
  # DEBUG __pD.37070 => _32
  # DEBUG __aD.37068 => D#102ptD.0
  # DEBUG __nD.37069 => D#103ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0
  # DEBUG D#99ptD.0 => D#101ptD.0
  # DEBUG __pD.37073 => _32
  # DEBUG thisD.37071 => D#98ptD.0
  # DEBUG D.37072 => D#99ptD.0
  # .MEM_128 = VDEF <.MEM_127>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_127(37), .MEM_128(38)>
  # DEBUG D#109ptD.0 => &D#116ptD.0->_M_implD.27073
  # DEBUG thisD.37074 => D#109ptD.0
  # DEBUG thisD.37075 => D#109ptD.0
  # DEBUG thisD.37076 => D#109ptD.0
  # .MEM_133 = VDEF <.MEM_98>
  MEM[(struct  &)this_6(D) + 96] ={v} {CLOBBER};
  # DEBUG D#405ptD.0 => &MEM[(struct ArbiterD.26830 *)this_6(D)].D.27639
  # DEBUG thisD.37077 => D#405ptD.0
  # .MEM_134 = VDEF <.MEM_133>
  MEM[(struct ModuleD.26017 *)this_6(D)]._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV6ModuleD.26817 + 16B];
  # DEBUG D#97ptD.0 => &D#405ptD.0->_childrenD.26767
  # DEBUG thisD.37078 => D#97ptD.0
  # DEBUG D#91ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.32848 => D#91ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_finishD.26259
  # DEBUG D#93ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_startD.26258
  # DEBUG D#37ptD.0 => D#93ptD.0
  # DEBUG D#38ptD.0 => D#94ptD.0
  # DEBUG __firstD.32847 => D#37ptD.0
  # DEBUG __lastD.32846 => D#38ptD.0
  # DEBUG D.32845 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG __firstD.32570 => D#33ptD.0
  # DEBUG __lastD.32569 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.32559 => D#29ptD.0
  # DEBUG D.32558 => D#30ptD.0
  # DEBUG D#92ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.37079 => D#92ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0->_M_implD.26256._M_end_of_storageD.26260
  # DEBUG D#89ptD.0 => (long intD.12) D#90ptD.0
  # VUSE <.MEM_134>
  # PT = nonlocal escaped 
  _33 = MEM[(struct _Vector_baseD.26023 *)this_6(D) + 72B]._M_implD.26256._M_startD.26258;
  # DEBUG D#88ptD.0 => (long intD.12) _33
  # DEBUG D#87ptD.0 => D#89ptD.0 - D#88ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0 /[ex] 8
  # DEBUG D#83ptD.0 => D#92ptD.0
  # DEBUG D#84ptD.0 => (long unsigned intD.14) D#86ptD.0
  # DEBUG __pD.37082 => _33
  # DEBUG thisD.37080 => D#83ptD.0
  # DEBUG __nD.37081 => D#84ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  if (_33 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#80ptD.0 => &D#81ptD.0->_M_implD.26256
  # DEBUG D#78ptD.0 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#82ptD.0
  # DEBUG __pD.37086 => _33
  # DEBUG __aD.37084 => D#78ptD.0
  # DEBUG __nD.37085 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0
  # DEBUG D#76ptD.0 => D#78ptD.0
  # DEBUG D#74ptD.0 => D#76ptD.0
  # DEBUG D#75ptD.0 => D#77ptD.0
  # DEBUG __pD.37089 => _33
  # DEBUG thisD.37087 => D#74ptD.0
  # DEBUG D.37088 => D#75ptD.0
  # .MEM_135 = VDEF <.MEM_134>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_33);
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_134(39), .MEM_135(40)>
  # DEBUG D#85ptD.0 => &D#92ptD.0->_M_implD.26256
  # DEBUG thisD.37090 => D#85ptD.0
  # DEBUG thisD.37091 => D#85ptD.0
  # DEBUG thisD.37092 => D#85ptD.0
  # .MEM_140 = VDEF <.MEM_99>
  MEM[(struct  &)this_6(D) + 72] ={v} {CLOBBER};
  # DEBUG D#96ptD.0 => &D#405ptD.0->_fullnameD.26020
  # DEBUG thisD.37093 => D#96ptD.0
  # DEBUG thisD.37094 => D#96ptD.0
  # DEBUG thisD.37103 => D#96ptD.0
  # VUSE <.MEM_140>
  # PT = nonlocal escaped 
  _87 = MEM[(charD.10 * *)this_6(D) + 40B];
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.37104 => D#96ptD.0
  # PT = nonlocal 
  _88 = &MEM[(const struct basic_stringD.8425 *)this_6(D) + 40B].D.13836._M_local_bufD.13838;
  if (_87 != _88)
    goto <bb 42>;
  else
    goto <bb 43>;
;;    succ:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#96ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.37096 => D#96ptD.0
  # DEBUG __sizeD.37095 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#96ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.37099 => _87
  # DEBUG __aD.37097 => D#67ptD.0
  # DEBUG __nD.37098 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.37102 => _87
  # DEBUG thisD.37100 => D#63ptD.0
  # DEBUG D.37101 => D#64ptD.0
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_87);
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       41 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_140(41), .MEM_141(42)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG thisD.37105 => D#73ptD.0
  # DEBUG thisD.37106 => D#73ptD.0
  # DEBUG thisD.37107 => D#73ptD.0
  # .MEM_145 = VDEF <.MEM_100>
  MEM[(struct  &)this_6(D) + 40] ={v} {CLOBBER};
  # DEBUG D#95ptD.0 => &D#405ptD.0->_nameD.26019
  # DEBUG thisD.37108 => D#95ptD.0
  # DEBUG thisD.37109 => D#95ptD.0
  # DEBUG thisD.37118 => D#95ptD.0
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _89 = MEM[(charD.10 * *)this_6(D) + 8B];
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.37119 => D#95ptD.0
  # PT = nonlocal 
  _90 = &MEM[(const struct basic_stringD.8425 *)this_6(D) + 8B].D.13836._M_local_bufD.13838;
  if (_89 != _90)
    goto <bb 44>;
  else
    goto <bb 45>;
;;    succ:       44 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#95ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.37111 => D#95ptD.0
  # DEBUG __sizeD.37110 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#95ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.37114 => _89
  # DEBUG __aD.37112 => D#67ptD.0
  # DEBUG __nD.37113 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.37117 => _89
  # DEBUG thisD.37115 => D#63ptD.0
  # DEBUG D.37116 => D#64ptD.0
  # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_89);
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 1, flags: (NEW, REACHABLE)
;;    pred:       43 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_101 = PHI <.MEM_145(43), .MEM_146(44)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG thisD.37120 => D#73ptD.0
  # DEBUG thisD.37121 => D#73ptD.0
  # DEBUG thisD.37122 => D#73ptD.0
  # .MEM_152 = VDEF <.MEM_101>
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(struct _Vector_base *)&D.29245]._M_impl._M_start
analyze_innermost: success.
	base_address: &D.29245
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)&D.29245]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)&D.29245]._M_impl._M_start
analyze_innermost: success.
	base_address: &D.29245
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)&D.29245]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct vector *)this_6(D) + 144B].D.28398._M_impl._M_finish
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_6(D) + 144B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_6(D) + 144B].D.28398._M_impl._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_6(D) + 144B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Vector_base *)__first_69]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_81
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_81]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_4
Creating dr for MEM[(struct _Vector_base *)__first_69]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_81
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_81]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_4
Creating dr for MEM[(struct _Vector_base *)__first_69]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_81
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_81]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_4
Creating dr for MEM[(struct _Vector_base *)__first_69]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_81
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_81]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_4
Analyzing # of iterations of loop 4
  exit condition [__first_81 + 24, + , 24](no_overflow) != _24
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _24 - (unsigned long) (__first_81 + 24) & 7) == 0
    # of iterations (((unsigned long) _24 - (unsigned long) (__first_81 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)__first_69]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_81
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_81]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_4
Creating dr for MEM[(struct _Vector_base *)__first_69]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_81
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_81]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_4
Creating dr for MEM[(struct _Vector_base *)__first_69]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_81
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_81]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_4
Creating dr for MEM[(struct _Vector_base *)__first_69]._M_impl._M_start
analyze_innermost: success.
	base_address: __first_81
	offset from base address: 0
	constant offset from base address: 0
	step: 24
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)__first_81]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 24}_4
Analyzing # of iterations of loop 4
  exit condition [__first_81 + 24, + , 24](no_overflow) != _24
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _24 - (unsigned long) (__first_81 + 24) & 7) == 0
    # of iterations (((unsigned long) _24 - (unsigned long) (__first_81 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 144B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 144B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct Arbiter *)this_6(D)].D.27639._vptr.Module
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter *)this_6(D)]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_6(D) + 96B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_6(D) + 96B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for MEM[(int * *)_26]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26]
Creating dr for MEM[(int * *)_26]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26]
Creating dr for MEM[(int * *)_26 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26 + 8B]
Creating dr for MEM[(int * *)_26 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26 + 8B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for __x
analyze_innermost: success.
	base_address: &__x
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int *)&__x]
Creating dr for MEM[(int * *)_26]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26]
Creating dr for MEM[(int * *)_26]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26]
Creating dr for MEM[(int * *)_26 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26 + 8B]
Creating dr for MEM[(int * *)_26 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26 + 8B]
Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for MEM[(int * *)_26 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26 + 8B]
Creating dr for MEM[(int * *)_26 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)_26 + 8B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(struct vector * *)this_6(D) + 144B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector * *)this_6(D) + 144B]
Creating dr for MEM[(int * *)pretmp_2]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)pretmp_2]
Creating dr for MEM[(int * *)pretmp_2]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)pretmp_2]
Creating dr for *_37
analyze_innermost: success.
	base_address: pretmp_102
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_102
	Access function 0: {0B, +, 4}_2
Creating dr for *_37
analyze_innermost: success.
	base_address: pretmp_102
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_37
Creating dr for *_37
analyze_innermost: success.
	base_address: pretmp_102
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_37
Creating dr for *_37
analyze_innermost: success.
	base_address: pretmp_102
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_102
	Access function 0: {0B, +, 4}_2
Creating dr for *_37
analyze_innermost: success.
	base_address: pretmp_102
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_37
Creating dr for *_37
analyze_innermost: success.
	base_address: pretmp_102
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *_37
Analyzing # of iterations of loop 2
  exit condition [1, + , 1](no_overflow) < i_66
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) i_66 + 4294967295, bounded by 2147483646
Analyzing # of iterations of loop 2
  exit condition [1, + , 1](no_overflow) < i_66
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) i_66 + 4294967295, bounded by 2147483646

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:22)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:7, LOOPS:1, CONDITIONS:2, STMTS:20)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 1

SCoP statistics (BBS:3, LOOPS:1, CONDITIONS:1, STMTS:15)

SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Global statistics (BBS:52, LOOPS:3, CONDITIONS:19, STMTS:546)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
Creating dr for *_37
analyze_innermost: success.
	base_address: pretmp_102
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *pretmp_102
	Access function 0: {0B, +, 4}_2

ISL AST generated by ISL: 
for (int c1 = 0; c1 < i; c1 += 1)
  S_19(c1);


Removing basic block 57
basic block 57, loop depth 1
 pred:      
goto <bb 55>;
 succ:       55



Updating SSA:
Registering new PHI nodes in block #48
Registering new PHI nodes in block #18
Registering new PHI nodes in block #54
Registering new PHI nodes in block #56
Registering new PHI nodes in block #19
Registering new PHI nodes in block #21
Registering new PHI nodes in block #20
Registering new PHI nodes in block #55
Registering new PHI nodes in block #53
Registering new PHI nodes in block #52
Registering new PHI nodes in block #47
Registering new PHI nodes in block #16
Registering new PHI nodes in block #51
Registering new PHI nodes in block #17

DFA Statistics for MatrixArbiter::MatrixArbiter(Module*, const string&, int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            162       1296b
DEF operands                             38        304b
VUSE operands                            50        400b
VDEF operands                            34        272b
PHI nodes                                25       2600b
PHI arguments                            49       2352b
---------------------------------------------------------
Total memory used by DFA/SSA data                 7224b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_147 -> { .MEM_64 }
Incremental SSA update started at block: 48
Number of blocks in CFG: 58
Number of blocks to update: 5 (  9%)
Affected blocks: 16 20 47 55 56


Applying pattern match.pd:491, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223

Updating SSA:
creating PHI node in block #59 for .MEM
creating PHI node in block #62 for .MEM
Registering new PHI nodes in block #0
Registering new PHI nodes in block #2
Updating SSA information for statement Arbiter::Arbiter (_7, parent_9(D), name_10(D), size_11(D));
Updating SSA information for statement this_6(D)->D.28444.D.27639._vptr.Module = &MEM[(void *)&_ZTV13MatrixArbiter + 16B];
Updating SSA information for statement MEM[(struct _Vector_impl *)this_6(D) + 144B]._M_start = 0B;
Updating SSA information for statement MEM[(struct _Vector_impl *)this_6(D) + 144B]._M_finish = 0B;
Updating SSA information for statement MEM[(struct _Vector_impl *)this_6(D) + 144B]._M_end_of_storage = 0B;
Updating SSA information for statement this_6(D)->_last_req = -1;
Updating SSA information for statement MEM[(struct _Vector_impl *)&D.29245]._M_start = 0B;
Updating SSA information for statement MEM[(struct _Vector_impl *)&D.29245]._M_finish = 0B;
Updating SSA information for statement MEM[(struct _Vector_impl *)&D.29245]._M_end_of_storage = 0B;
Registering new PHI nodes in block #3
Updating SSA information for statement MEM[(struct __normal_iterator *)&__position] = 0B;
Updating SSA information for statement std::vector<std::vector<int> >::_M_fill_insert (_18, __position, _17, &D.29245);
Registering new PHI nodes in block #4
Updating SSA information for statement pretmp_50 = MEM[(struct _Vector_base *)&D.29245]._M_impl._M_start;
Registering new PHI nodes in block #22
Updating SSA information for statement _39 = MEM[(struct _Vector_base *)&D.29245]._M_impl._M_start;
Registering new PHI nodes in block #23
Updating SSA information for statement operator delete (_39);
Registering new PHI nodes in block #24
Updating SSA information for statement D.29245 ={v} {CLOBBER};
Registering new PHI nodes in block #25
Registering new PHI nodes in block #5
Registering new PHI nodes in block #6
Updating SSA information for statement operator delete (prephitmp_51);
Registering new PHI nodes in block #7
Updating SSA information for statement D.29245 ={v} {CLOBBER};
Registering new PHI nodes in block #9
Registering new PHI nodes in block #10
Updating SSA information for statement _34 = MEM[(struct vector * *)this_6(D) + 144B];
Updating SSA information for statement __x = 0;
Updating SSA information for statement _19 = MEM[(int * *)_26];
Updating SSA information for statement _72 = MEM[(int * *)_26 + 8B];
Registering new PHI nodes in block #11
Updating SSA information for statement MEM[(struct __normal_iterator *)&__position] = _72;
Updating SSA information for statement std::vector<int>::_M_fill_insert (_26, __position, _78, &__x);
Registering new PHI nodes in block #26
Registering new PHI nodes in block #13
Registering new PHI nodes in block #14
Updating SSA information for statement MEM[(int * *)_26 + 8B] = _80;
Registering new PHI nodes in block #12
Registering new PHI nodes in block #49
Registering new PHI nodes in block #15
Registering new PHI nodes in block #48
Registering new PHI nodes in block #18
Updating SSA information for statement pretmp_95 = MEM[(struct vector * *)this_6(D) + 144B];
Updating SSA information for statement pretmp_102 = MEM[(int * *)pretmp_2];
Registering new PHI nodes in block #54
Registering new PHI nodes in block #58
Registering new PHI nodes in block #64
Registering new PHI nodes in block #62
Registering new PHI nodes in block #67
Updating SSA information for statement *_136 = 1;
Registering new PHI nodes in block #65
Registering new PHI nodes in block #63
Registering new PHI nodes in block #66
Registering new PHI nodes in block #60
Registering new PHI nodes in block #61
Registering new PHI nodes in block #59
Registering new PHI nodes in block #56
Registering new PHI nodes in block #19
Updating SSA information for statement *_37 = 1;
Registering new PHI nodes in block #21
Registering new PHI nodes in block #20
Registering new PHI nodes in block #55
Registering new PHI nodes in block #53
Registering new PHI nodes in block #52
Registering new PHI nodes in block #47
Registering new PHI nodes in block #16
Registering new PHI nodes in block #51
Registering new PHI nodes in block #17
Registering new PHI nodes in block #8
Registering new PHI nodes in block #50
Updating SSA information for statement return;
Registering new PHI nodes in block #27
Updating SSA information for statement _24 = MEM[(struct vector *)this_6(D) + 144B].D.28398._M_impl._M_finish;
Updating SSA information for statement __first_81 = MEM[(struct vector *)this_6(D) + 144B].D.28398._M_impl._M_start;
Registering new PHI nodes in block #28
Registering new PHI nodes in block #29
Updating SSA information for statement _83 = MEM[(struct _Vector_base *)__first_69]._M_impl._M_start;
Registering new PHI nodes in block #30
Updating SSA information for statement operator delete (_83);
Registering new PHI nodes in block #31
Updating SSA information for statement MEM[(struct  &)__first_69] ={v} {CLOBBER};
Registering new PHI nodes in block #32
Registering new PHI nodes in block #33
Registering new PHI nodes in block #46
Updating SSA information for statement pretmp_48 = MEM[(struct _Vector_base *)this_6(D) + 144B]._M_impl._M_start;
Registering new PHI nodes in block #34
Registering new PHI nodes in block #35
Updating SSA information for statement operator delete (prephitmp_49);
Registering new PHI nodes in block #36
Updating SSA information for statement MEM[(struct  &)this_6(D) + 144] ={v} {CLOBBER};
Registering new PHI nodes in block #37
Updating SSA information for statement MEM[(struct Arbiter *)this_6(D)].D.27639._vptr.Module = &MEM[(void *)&_ZTV7Arbiter + 16B];
Updating SSA information for statement _32 = MEM[(struct _Vector_base *)this_6(D) + 96B]._M_impl._M_start;
Registering new PHI nodes in block #38
Updating SSA information for statement operator delete (_32);
Registering new PHI nodes in block #39
Updating SSA information for statement MEM[(struct  &)this_6(D) + 96] ={v} {CLOBBER};
Updating SSA information for statement MEM[(struct Module *)this_6(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
Updating SSA information for statement _33 = MEM[(struct _Vector_base *)this_6(D) + 72B]._M_impl._M_start;
Registering new PHI nodes in block #40
Updating SSA information for statement operator delete (_33);
Registering new PHI nodes in block #41
Updating SSA information for statement MEM[(struct  &)this_6(D) + 72] ={v} {CLOBBER};
Updating SSA information for statement _87 = MEM[(char * *)this_6(D) + 40B];
Registering new PHI nodes in block #42
Updating SSA information for statement operator delete (_87);
Registering new PHI nodes in block #43
Updating SSA information for statement MEM[(struct  &)this_6(D) + 40] ={v} {CLOBBER};
Updating SSA information for statement _89 = MEM[(char * *)this_6(D) + 8B];
Registering new PHI nodes in block #44
Updating SSA information for statement operator delete (_89);
Registering new PHI nodes in block #45
Updating SSA information for statement MEM[(struct  &)this_6(D)] ={v} {CLOBBER};

DFA Statistics for MatrixArbiter::MatrixArbiter(Module*, const string&, int)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            174       1392b
DEF operands                             45        360b
VUSE operands                            51        408b
VDEF operands                            35        280b
PHI nodes                                28       2912b
PHI arguments                            55       2640b
---------------------------------------------------------
Total memory used by DFA/SSA data                 7992b
---------------------------------------------------------

Average number of arguments per PHI node: 2.0 (max: 2)


Hash table statistics:
    var_infos:   size 61, 1 elements, 0.000000 collision/search ratio


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_139 -> { .MEM_27 }

Symbols to be put in SSA form
{ D.32271 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 68
Number of blocks to update: 66 ( 97%)
Affected blocks: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 61 62 63 64 65 66 67



1 loops carried no dependency.
Merging blocks 8 and 50
Merging blocks 12 and 49
Merging blocks 15 and 48
Merging blocks 16 and 51
Merging blocks 18 and 54
Removing basic block 33
basic block 33, loop depth 0
 pred:      
 succ:       46


Removing basic block 47
basic block 47, loop depth 1
 pred:      
goto <bb 16>;
 succ:       16


Removing basic block 52
basic block 52, loop depth 1
 pred:      
goto <bb 16>;
 succ:       16


Removing basic block 53
basic block 53, loop depth 1
 pred:      
goto <bb 16>;
 succ:       16


Removing basic block 56
basic block 56, loop depth 1
 pred:      
 succ:       55


Removing basic block 60
basic block 60, loop depth 1
 pred:      
 succ:       59


Removing basic block 61
basic block 61, loop depth 1
 pred:      
goto <bb 59>;
 succ:       59


Merging blocks 62 and 67
Removing basic block 66
basic block 66, loop depth 1
 pred:      
 succ:       59


Removing basic block 20
basic block 20, loop depth 1
 pred:       19
goto <bb 55>;
 succ:       55


Removing basic block 21
basic block 21, loop depth 2
 pred:       19
goto <bb 19>;
 succ:       19


Removing basic block 19
basic block 19, loop depth 2
 pred:       18
# j_65 = PHI <0(18)>
# DEBUG j => j_65
_25 = (long unsigned int) j_65;
# DEBUG D#287 => &this_6(D)->_matrix
# DEBUG D#8 => D#287
# DEBUG __n => _22
# DEBUG this => D#8
# DEBUG __n => _25
# DEBUG this => D#9
_23 = _25 * 4;
_37 = pretmp_102 + _23;
*_37 = 1;
j_28 = j_65 + 1;
# DEBUG j => j_28
# DEBUG j => j_28
if (j_28 >= i_66)
 succ:      


Merging blocks 18 and 58
Merging blocks 59 and 55
Merging blocks 62 and 65
fix_loop_structure: removing loop 2
Analyzing # of iterations of loop 4
  exit condition [__first_81 + 24, + , 24](no_overflow) != _24
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551591
  result:
    under assumptions ((unsigned long) _24 - (unsigned long) (__first_81 + 24) & 7) == 0
    # of iterations (((unsigned long) _24 - (unsigned long) (__first_81 + 24)) /[ex] 8) * 768614336404564651 & 2305843009213693951, bounded by 768614336404564650
Analyzing # of iterations of loop 1
  exit condition [1, + , 1](no_overflow) < size_11(D)
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) size_11(D) + 4294967295, bounded by 2147483646
Analyzing # of iterations of loop 5
  exit condition [0, + , 1](no_overflow) < (signed long) i_66 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if i_66 <= 0
    # of iterations (unsigned long) ((signed long) i_66 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 5
  exit condition [0, + , 1](no_overflow) < (signed long) i_66 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if i_66 <= 0
    # of iterations (unsigned long) ((signed long) i_66 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 5
  exit condition [0, + , 1](no_overflow) < (signed long) i_66 + -1
  bounds on difference of bases: -9223372036854775808 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    zero if i_66 <= 0
    # of iterations (unsigned long) ((signed long) i_66 + -1), bounded by 9223372036854775806
Statement (exit)if (graphite_IV.612_143 < _144)
 is executed at most (unsigned long) ((signed long) i_66 + -1) (bounded by 9223372036854775806) + 1 times in loop 5.
Induction variable (int *) pretmp_102 + 4 * iteration does not wrap in statement _136 = pretmp_102 + _137;
 in loop 5.
Statement _136 = pretmp_102 + _137;
 is executed at most 4611686018427387902 (bounded by 4611686018427387902) + 1 times in loop 5.
Induction variable (signed long) 1 + 1 * iteration does not wrap in statement graphite_IV.612_142 = graphite_IV.612_143 + 1;
 in loop 5.
Statement graphite_IV.612_142 = graphite_IV.612_143 + 1;
 is executed at most 9223372036854775806 (bounded by 9223372036854775806) + 1 times in loop 5.
Reducing loop iteration estimate by 1; undefined statement must be executed at the last iteration.
Predictions for bb 2
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities
Predictions for bb 5
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 11 predicted to even probabilities
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 0.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 0.0%
  opcode values positive (on trees) heuristics: 27.0%
  guess loop iv compare heuristics: 0.0%
Predictions for bb 16
  DS theory heuristics (ignored): 2.9%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  early return (on trees) heuristics (ignored): 39.0%
  loop exit heuristics: 4.5%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics (ignored): 91.0%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  loop exit heuristics: 91.0%
1 edges in bb 21 predicted to even probabilities
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 24 predicted to even probabilities
0 edges in bb 25 predicted to even probabilities
1 edges in bb 26 predicted to even probabilities
1 edges in bb 27 predicted to even probabilities
Predictions for bb 28
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  DS theory heuristics (ignored): 1.7%
  first match heuristics: 9.0%
  combined heuristics: 9.0%
  pointer (on trees) heuristics (ignored): 15.0%
  loop exit heuristics: 9.0%
1 edges in bb 33 predicted to even probabilities
1 edges in bb 34 predicted to even probabilities
Predictions for bb 35
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 36 predicted to even probabilities
0 edges in bb 37 predicted to even probabilities
Predictions for bb 38
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 39 predicted to even probabilities
Predictions for bb 40
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 41 predicted to even probabilities
Predictions for bb 42
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 45 predicted to even probabilities
0 edges in bb 46 predicted to even probabilities
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_5 })
  {
    <bb 2>:
    _7 = &this_6(D)->D.28444;
    # .MEM_12 = VDEF <.MEM_8(D)>
    Arbiter::Arbiter (_7, parent_9(D), name_10(D), size_11(D));
    # .MEM_13 = VDEF <.MEM_12>
    this_6(D)->D.28444.D.27639._vptr.Module = &MEM[(void *)&_ZTV13MatrixArbiter + 16B];
    # DEBUG D#288 => &this_6(D)->_matrix
    # DEBUG this => D#288
    # DEBUG D#121 => &D#288->D.28398
    # DEBUG this => D#121
    # DEBUG D#120 => &D#121->_M_impl
    # DEBUG this => D#120
    # DEBUG this => D#120
    # DEBUG this => D#120
    # .MEM_41 = VDEF <.MEM_13>
    MEM[(struct _Vector_impl *)this_6(D) + 144B]._M_start = 0B;
    # .MEM_42 = VDEF <.MEM_41>
    MEM[(struct _Vector_impl *)this_6(D) + 144B]._M_finish = 0B;
    # .MEM_43 = VDEF <.MEM_42>
    MEM[(struct _Vector_impl *)this_6(D) + 144B]._M_end_of_storage = 0B;
    # .MEM_15 = VDEF <.MEM_43>
    this_6(D)->_last_req = -1;
    # DEBUG this => &D.29245
    # DEBUG D#140 => &D.29245.D.29234
    # DEBUG this => D#140
    # DEBUG D#139 => &D#140->_M_impl
    # DEBUG this => D#139
    # DEBUG this => D#139
    # DEBUG this => D#139
    # .MEM_44 = VDEF <.MEM_15>
    MEM[(struct _Vector_impl *)&D.29245]._M_start = 0B;
    # .MEM_45 = VDEF <.MEM_44>
    MEM[(struct _Vector_impl *)&D.29245]._M_finish = 0B;
    # .MEM_46 = VDEF <.MEM_45>
    MEM[(struct _Vector_impl *)&D.29245]._M_end_of_storage = 0B;
    _17 = (long unsigned int) size_11(D);
    # DEBUG D#408 => &this_6(D)->_matrix
    # DEBUG this => D#408
    # DEBUG __new_size => _17
    # DEBUG __x => &D.29245
    # DEBUG D#24 => D#408
    # DEBUG D#24 => D#408
    # DEBUG this => D#24
    # DEBUG this => D#24
    if (_17 != 0)
      goto <bb 3>;
    else
      goto <bb 5>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_23 })
  {
    <bb 3>:
    # DEBUG D#24 => D#408
    # DEBUG D#24 => D#408
    # DEBUG this => D#24
    # DEBUG this => D#24
    # DEBUG this => D#408
    # DEBUG D#27 => &D#408->D.28398._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#27
    # DEBUG this => D#408
    # .MEM_109 = VDEF <.MEM_46>
    MEM[(struct __normal_iterator *)&__position] = 0B;
    # DEBUG __n => _17
    # DEBUG __x => &D.29245
    _18 = &this_6(D)->_matrix;
    # .MEM_110 = VDEF <.MEM_109>
    std::vector<std::vector<int> >::_M_fill_insert (_18, __position, _17, &D.29245);

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 })
  {
    <bb 4>:
    # VUSE <.MEM_110>
    pretmp_50 = MEM[(struct _Vector_base *)&D.29245]._M_impl._M_start;

  }
  bb_5 (preds = {bb_2 bb_4 }, succs = {bb_6 bb_7 })
  {
    <bb 5>:
    # .MEM_93 = PHI <.MEM_46(2), .MEM_110(4)>
    # prephitmp_51 = PHI <0B(2), pretmp_50(4)>
    # DEBUG this => &D.29245
    # DEBUG D#155 => &D.29245.D.29234
    # DEBUG this => D#155
    # DEBUG D#158 => D.29245.D.29234._M_impl._M_finish
    # DEBUG D#157 => D.29245.D.29234._M_impl._M_start
    # DEBUG __first => D#157
    # DEBUG __last => D#158
    # DEBUG D.33137 => NULL
    # DEBUG D#55 => D#157
    # DEBUG D#56 => D#158
    # DEBUG __first => D#55
    # DEBUG __last => D#56
    # DEBUG D#54 => D#56
    # DEBUG D#53 => D#55
    # DEBUG D#51 => D#53
    # DEBUG D#52 => D#54
    # DEBUG D.32641 => D#51
    # DEBUG D.32640 => D#52
    # DEBUG D#156 => &D.29245.D.29234
    # DEBUG this => D#156
    # DEBUG D#154 => D#156->_M_impl._M_end_of_storage
    # DEBUG D#153 => (long int) D#154
    # DEBUG D#407 => MEM[(struct _Vector_base *)&D.29245]._M_impl._M_start
    # DEBUG D#152 => (long int) D#407
    # DEBUG D#151 => D#153 - D#152
    # DEBUG D#150 => D#151 /[ex] 4
    # DEBUG D#149 => (long unsigned int) D#150
    # DEBUG this => D#156
    # DEBUG __p => D#407
    # DEBUG __n => D#149
    if (prephitmp_51 != 0B)
      goto <bb 6>;
    else
      goto <bb 7>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 })
  {
    <bb 6>:
    # DEBUG D#147 => &D#156->_M_impl
    # DEBUG D#145 => D#147
    # DEBUG D#146 => D#149
    # DEBUG __p => D#407
    # DEBUG __a => D#145
    # DEBUG __n => D#146
    # DEBUG D#144 => D#146
    # DEBUG D#143 => D#145
    # DEBUG D#141 => D#143
    # DEBUG D#142 => D#144
    # DEBUG __p => D#407
    # DEBUG this => D#141
    # DEBUG D.35609 => D#142
    # .MEM_47 = VDEF <.MEM_93>
    operator delete (prephitmp_51);

  }
  bb_7 (preds = {bb_5 bb_6 }, succs = {bb_8 bb_9 })
  {
    <bb 7>:
    # .MEM_30 = PHI <.MEM_93(5), .MEM_47(6)>
    # DEBUG D#148 => &D#156->_M_impl
    # DEBUG this => D#148
    # DEBUG this => D#148
    # DEBUG this => D#148
    # .MEM_20 = VDEF <.MEM_30>
    D.29245 ={v} {CLOBBER};
    # DEBUG i => 0
    # DEBUG i => 0
    if (size_11(D) <= 0)
      goto <bb 8>;
    else
      goto <bb 9>;

  }
  bb_8 (preds = {bb_7 bb_16 }, succs = {bb_1 })
  {
    <bb 8>:
    # .MEM_151 = PHI <.MEM_20(7), .MEM_149(16)>
    # VUSE <.MEM_151>
    return;

  }
  bb_9 (preds = {bb_7 }, succs = {bb_10 })
  {
    <bb 9>:
    _79 = _17 * 4;

  }
  bb_23 (preds = {bb_3 }, succs = {bb_24 bb_25 })
  {
  <L6>:
    # DEBUG this => &D.29245
    # DEBUG D#155 => &D.29245.D.29234
    # DEBUG this => D#155
    # DEBUG D#158 => D.29245.D.29234._M_impl._M_finish
    # DEBUG D#157 => D.29245.D.29234._M_impl._M_start
    # DEBUG __first => D#157
    # DEBUG __last => D#158
    # DEBUG D.33137 => NULL
    # DEBUG D#55 => D#157
    # DEBUG D#56 => D#158
    # DEBUG __first => D#55
    # DEBUG __last => D#56
    # DEBUG D#54 => D#56
    # DEBUG D#53 => D#55
    # DEBUG D#51 => D#53
    # DEBUG D#52 => D#54
    # DEBUG D.32641 => D#51
    # DEBUG D.32640 => D#52
    # DEBUG D#156 => &D.29245.D.29234
    # DEBUG this => D#156
    # DEBUG D#154 => D#156->_M_impl._M_end_of_storage
    # DEBUG D#153 => (long int) D#154
    # VUSE <.MEM_110>
    _39 = MEM[(struct _Vector_base *)&D.29245]._M_impl._M_start;
    # DEBUG D#152 => (long int) _39
    # DEBUG D#151 => D#153 - D#152
    # DEBUG D#150 => D#151 /[ex] 4
    # DEBUG D#149 => (long unsigned int) D#150
    # DEBUG this => D#156
    # DEBUG __p => _39
    # DEBUG __n => D#149
    if (_39 != 0B)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#147 => &D#156->_M_impl
    # DEBUG D#145 => D#147
    # DEBUG D#146 => D#149
    # DEBUG __p => _39
    # DEBUG __a => D#145
    # DEBUG __n => D#146
    # DEBUG D#144 => D#146
    # DEBUG D#143 => D#145
    # DEBUG D#141 => D#143
    # DEBUG D#142 => D#144
    # DEBUG __p => _39
    # DEBUG this => D#141
    # DEBUG D.35636 => D#142
    # .MEM_53 = VDEF <.MEM_110>
    operator delete (_39);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_26 })
  {
    <bb 25>:
    # .MEM_40 = PHI <.MEM_110(23), .MEM_53(24)>
    # DEBUG D#148 => &D#156->_M_impl
    # DEBUG this => D#148
    # DEBUG this => D#148
    # DEBUG this => D#148
    # .MEM_31 = VDEF <.MEM_40>
    D.29245 ={v} {CLOBBER};
    resx 3

  }
  bb_26 (preds = {bb_25 }, succs = {bb_28 })
  {
  <L10>:
    goto <bb 28> (<L7>);

  }
  bb_27 (preds = {bb_11 }, succs = {bb_28 })
  {
  <L9>:

  }
  bb_28 (preds = {bb_26 bb_27 }, succs = {bb_35 bb_29 })
  {
    # .MEM_5 = PHI <.MEM_31(26), .MEM_114(27)>
  <L7>:
    # DEBUG this => D#408
    # DEBUG D#163 => &D#408->D.28398
    # DEBUG this => D#163
    # VUSE <.MEM_5>
    _24 = MEM[(struct vector *)this_6(D) + 144B].D.28398._M_impl._M_finish;
    # VUSE <.MEM_5>
    __first_81 = MEM[(struct vector *)this_6(D) + 144B].D.28398._M_impl._M_start;
    # DEBUG __first => __first_81
    # DEBUG __last => _24
    # DEBUG __first => __first_81
    if (_24 == __first_81)
      goto <bb 35>;
    else
      goto <bb 29>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_30 })
  {
    <bb 29>:

  }
  bb_34 (preds = {bb_32 }, succs = {bb_35 })
  {
    <bb 34>:
    # VUSE <.MEM_120>
    pretmp_48 = MEM[(struct _Vector_base *)this_6(D) + 144B]._M_impl._M_start;

  }
  bb_35 (preds = {bb_34 bb_28 }, succs = {bb_36 bb_37 })
  {
    <bb 35>:
    # .MEM_62 = PHI <.MEM_120(34), .MEM_5(28)>
    # prephitmp_49 = PHI <pretmp_48(34), __first_81(28)>
    # DEBUG D#164 => &D#408->D.28398
    # DEBUG this => D#164
    # DEBUG D#138 => D#164->_M_impl._M_end_of_storage
    # DEBUG D#137 => (long int) D#138
    # DEBUG D#406 => MEM[(struct _Vector_base *)this_6(D) + 144B]._M_impl._M_start
    # DEBUG D#136 => (long int) D#406
    # DEBUG D#135 => D#137 - D#136
    # DEBUG D#134 => D#135 /[ex] 24
    # DEBUG D#131 => D#164
    # DEBUG D#132 => (long unsigned int) D#134
    # DEBUG __p => D#406
    # DEBUG this => D#131
    # DEBUG __n => D#132
    # DEBUG D#130 => D#132
    # DEBUG D#129 => D#131
    if (prephitmp_49 != 0B)
      goto <bb 36>;
    else
      goto <bb 37>;

  }
  bb_36 (preds = {bb_35 }, succs = {bb_37 })
  {
    <bb 36>:
    # DEBUG D#128 => &D#129->_M_impl
    # DEBUG D#126 => D#128
    # DEBUG D#127 => D#130
    # DEBUG __p => D#406
    # DEBUG __a => D#126
    # DEBUG __n => D#127
    # DEBUG D#125 => D#127
    # DEBUG D#124 => D#126
    # DEBUG D#122 => D#124
    # DEBUG D#123 => D#125
    # DEBUG __p => D#406
    # DEBUG this => D#122
    # DEBUG D.37056 => D#123
    # .MEM_121 = VDEF <.MEM_62>
    operator delete (prephitmp_49);

  }
  bb_37 (preds = {bb_35 bb_36 }, succs = {bb_38 })
  {
    <bb 37>:
    # .MEM_97 = PHI <.MEM_62(35), .MEM_121(36)>
    # DEBUG D#133 => &D#164->_M_impl
    # DEBUG this => D#133
    # DEBUG this => D#133
    # DEBUG this => D#133
    # .MEM_126 = VDEF <.MEM_97>
    MEM[(struct  &)this_6(D) + 144] ={v} {CLOBBER};
    resx 2

  }
  bb_38 (preds = {bb_37 }, succs = {bb_39 bb_40 })
  {
  <L8>:
    # DEBUG this => _7
    # .MEM_127 = VDEF <.MEM_126>
    MEM[(struct Arbiter *)this_6(D)].D.27639._vptr.Module = &MEM[(void *)&_ZTV7Arbiter + 16B];
    # DEBUG D#119 => &_7->_request
    # DEBUG this => D#119
    # DEBUG D#115 => &D#119->D.27582
    # DEBUG this => D#115
    # DEBUG D#118 => D#119->D.27582._M_impl._M_finish
    # DEBUG D#117 => D#119->D.27582._M_impl._M_start
    # DEBUG D#48 => D#117
    # DEBUG D#49 => D#118
    # DEBUG __first => D#48
    # DEBUG __last => D#49
    # DEBUG D.32972 => D#50
    # DEBUG D#47 => D#49
    # DEBUG D#46 => D#48
    # DEBUG D#44 => D#46
    # DEBUG D#45 => D#47
    # DEBUG __first => D#44
    # DEBUG __last => D#45
    # DEBUG D#43 => D#45
    # DEBUG D#42 => D#44
    # DEBUG D#40 => D#42
    # DEBUG D#41 => D#43
    # DEBUG D.32597 => D#40
    # DEBUG D.32596 => D#41
    # DEBUG D#116 => &D#119->D.27582
    # DEBUG this => D#116
    # DEBUG D#114 => D#116->_M_impl._M_end_of_storage
    # DEBUG D#113 => (long int) D#114
    # VUSE <.MEM_127>
    _32 = MEM[(struct _Vector_base *)this_6(D) + 96B]._M_impl._M_start;
    # DEBUG D#112 => (long int) _32
    # DEBUG D#111 => D#113 - D#112
    # DEBUG D#110 => D#111 /[ex] 12
    # DEBUG D#107 => D#116
    # DEBUG D#108 => (long unsigned int) D#110
    # DEBUG __p => _32
    # DEBUG this => D#107
    # DEBUG __n => D#108
    # DEBUG D#106 => D#108
    # DEBUG D#105 => D#107
    if (_32 != 0B)
      goto <bb 39>;
    else
      goto <bb 40>;

  }
  bb_39 (preds = {bb_38 }, succs = {bb_40 })
  {
    <bb 39>:
    # DEBUG D#104 => &D#105->_M_impl
    # DEBUG D#102 => D#104
    # DEBUG D#103 => D#106
    # DEBUG __p => _32
    # DEBUG __a => D#102
    # DEBUG __n => D#103
    # DEBUG D#101 => D#103
    # DEBUG D#100 => D#102
    # DEBUG D#98 => D#100
    # DEBUG D#99 => D#101
    # DEBUG __p => _32
    # DEBUG this => D#98
    # DEBUG D.37072 => D#99
    # .MEM_128 = VDEF <.MEM_127>
    operator delete (_32);

  }
  bb_40 (preds = {bb_38 bb_39 }, succs = {bb_41 bb_42 })
  {
    <bb 40>:
    # .MEM_98 = PHI <.MEM_127(38), .MEM_128(39)>
    # DEBUG D#109 => &D#116->_M_impl
    # DEBUG this => D#109
    # DEBUG this => D#109
    # DEBUG this => D#109
    # .MEM_133 = VDEF <.MEM_98>
    MEM[(struct  &)this_6(D) + 96] ={v} {CLOBBER};
    # DEBUG D#405 => &MEM[(struct Arbiter *)this_6(D)].D.27639
    # DEBUG this => D#405
    # .MEM_134 = VDEF <.MEM_133>
    MEM[(struct Module *)this_6(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#97 => &D#405->_children
    # DEBUG this => D#97
    # DEBUG D#91 => &D#97->D.26765
    # DEBUG this => D#91
    # DEBUG D#94 => D#97->D.26765._M_impl._M_finish
    # DEBUG D#93 => D#97->D.26765._M_impl._M_start
    # DEBUG D#37 => D#93
    # DEBUG D#38 => D#94
    # DEBUG __first => D#37
    # DEBUG __last => D#38
    # DEBUG D.32845 => D#39
    # DEBUG D#36 => D#38
    # DEBUG D#35 => D#37
    # DEBUG D#33 => D#35
    # DEBUG D#34 => D#36
    # DEBUG __first => D#33
    # DEBUG __last => D#34
    # DEBUG D#32 => D#34
    # DEBUG D#31 => D#33
    # DEBUG D#29 => D#31
    # DEBUG D#30 => D#32
    # DEBUG D.32559 => D#29
    # DEBUG D.32558 => D#30
    # DEBUG D#92 => &D#97->D.26765
    # DEBUG this => D#92
    # DEBUG D#90 => D#92->_M_impl._M_end_of_storage
    # DEBUG D#89 => (long int) D#90
    # VUSE <.MEM_134>
    _33 = MEM[(struct _Vector_base *)this_6(D) + 72B]._M_impl._M_start;
    # DEBUG D#88 => (long int) _33
    # DEBUG D#87 => D#89 - D#88
    # DEBUG D#86 => D#87 /[ex] 8
    # DEBUG D#83 => D#92
    # DEBUG D#84 => (long unsigned int) D#86
    # DEBUG __p => _33
    # DEBUG this => D#83
    # DEBUG __n => D#84
    # DEBUG D#82 => D#84
    # DEBUG D#81 => D#83
    if (_33 != 0B)
      goto <bb 41>;
    else
      goto <bb 42>;

  }
  bb_41 (preds = {bb_40 }, succs = {bb_42 })
  {
    <bb 41>:
    # DEBUG D#80 => &D#81->_M_impl
    # DEBUG D#78 => D#80
    # DEBUG D#79 => D#82
    # DEBUG __p => _33
    # DEBUG __a => D#78
    # DEBUG __n => D#79
    # DEBUG D#77 => D#79
    # DEBUG D#76 => D#78
    # DEBUG D#74 => D#76
    # DEBUG D#75 => D#77
    # DEBUG __p => _33
    # DEBUG this => D#74
    # DEBUG D.37088 => D#75
    # .MEM_135 = VDEF <.MEM_134>
    operator delete (_33);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_99 = PHI <.MEM_134(40), .MEM_135(41)>
    # DEBUG D#85 => &D#92->_M_impl
    # DEBUG this => D#85
    # DEBUG this => D#85
    # DEBUG this => D#85
    # .MEM_140 = VDEF <.MEM_99>
    MEM[(struct  &)this_6(D) + 72] ={v} {CLOBBER};
    # DEBUG D#96 => &D#405->_fullname
    # DEBUG this => D#96
    # DEBUG this => D#96
    # DEBUG this => D#96
    # VUSE <.MEM_140>
    _87 = MEM[(char * *)this_6(D) + 40B];
    # DEBUG D#2 => D#96
    # DEBUG this => D#2
    # DEBUG this => D#96
    _88 = &MEM[(const struct basic_string *)this_6(D) + 40B].D.13836._M_local_buf;
    if (_87 != _88)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#72 => MEM[(struct basic_string *)D#96].D.13836._M_allocated_capacity
    # DEBUG D#71 => D#72
    # DEBUG this => D#96
    # DEBUG __size => D#71
    # DEBUG D#70 => D#71
    # DEBUG D#2 => D#96
    # DEBUG this => D#2
    # DEBUG this => D#96
    # DEBUG D#69 => &MEM[(struct basic_string *)D#96]._M_dataplus
    # DEBUG D#67 => D#69
    # DEBUG D#68 => D#70 + 1
    # DEBUG __p => _87
    # DEBUG __a => D#67
    # DEBUG __n => D#68
    # DEBUG D#66 => D#68
    # DEBUG D#65 => D#67
    # DEBUG D#63 => D#65
    # DEBUG D#64 => D#66
    # DEBUG __p => _87
    # DEBUG this => D#63
    # DEBUG D.37101 => D#64
    # .MEM_141 = VDEF <.MEM_140>
    operator delete (_87);

  }
  bb_44 (preds = {bb_42 bb_43 }, succs = {bb_45 bb_46 })
  {
    <bb 44>:
    # .MEM_100 = PHI <.MEM_140(42), .MEM_141(43)>
    # DEBUG D#73 => &MEM[(struct basic_string *)D#96]._M_dataplus
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_145 = VDEF <.MEM_100>
    MEM[(struct  &)this_6(D) + 40] ={v} {CLOBBER};
    # DEBUG D#95 => &D#405->_name
    # DEBUG this => D#95
    # DEBUG this => D#95
    # DEBUG this => D#95
    # VUSE <.MEM_145>
    _89 = MEM[(char * *)this_6(D) + 8B];
    # DEBUG D#2 => D#95
    # DEBUG this => D#2
    # DEBUG this => D#95
    _90 = &MEM[(const struct basic_string *)this_6(D) + 8B].D.13836._M_local_buf;
    if (_89 != _90)
      goto <bb 45>;
    else
      goto <bb 46>;

  }
  bb_45 (preds = {bb_44 }, succs = {bb_46 })
  {
    <bb 45>:
    # DEBUG D#72 => MEM[(struct basic_string *)D#95].D.13836._M_allocated_capacity
    # DEBUG D#71 => D#72
    # DEBUG this => D#95
    # DEBUG __size => D#71
    # DEBUG D#70 => D#71
    # DEBUG D#2 => D#95
    # DEBUG this => D#2
    # DEBUG this => D#95
    # DEBUG D#69 => &MEM[(struct basic_string *)D#95]._M_dataplus
    # DEBUG D#67 => D#69
    # DEBUG D#68 => D#70 + 1
    # DEBUG __p => _89
    # DEBUG __a => D#67
    # DEBUG __n => D#68
    # DEBUG D#66 => D#68
    # DEBUG D#65 => D#67
    # DEBUG D#63 => D#65
    # DEBUG D#64 => D#66
    # DEBUG __p => _89
    # DEBUG this => D#63
    # DEBUG D.37116 => D#64
    # .MEM_146 = VDEF <.MEM_145>
    operator delete (_89);

  }
  bb_46 (preds = {bb_44 bb_45 }, succs = {})
  {
    <bb 46>:
    # .MEM_101 = PHI <.MEM_145(44), .MEM_146(45)>
    # DEBUG D#73 => &MEM[(struct basic_string *)D#95]._M_dataplus
    # DEBUG this => D#73
    # DEBUG this => D#73
    # DEBUG this => D#73
    # .MEM_152 = VDEF <.MEM_101>
    MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
    resx 1

  }
  loop_4 (header = 30, latch = 33, niter = )
  {
    bb_30 (preds = {bb_29 bb_33 }, succs = {bb_31 bb_32 })
    {
      <bb 30>:
      # __first_69 = PHI <__first_81(29), __first_84(33)>
      # .MEM_103 = PHI <.MEM_5(29), .MEM_120(33)>
      # DEBUG __first => __first_69
      # DEBUG __r => __first_69
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#155
      # DEBUG __first => D#157
      # DEBUG __last => D#158
      # DEBUG D.33137 => NULL
      # DEBUG D#55 => D#157
      # DEBUG D#56 => D#158
      # DEBUG __first => D#55
      # DEBUG __last => D#56
      # DEBUG D#54 => D#56
      # DEBUG D#53 => D#55
      # DEBUG D#51 => D#53
      # DEBUG D#52 => D#54
      # DEBUG D.32641 => D#51
      # DEBUG D.32640 => D#52
      # DEBUG this => D#156
      # DEBUG D#154 => D#156->_M_impl._M_end_of_storage
      # DEBUG D#153 => (long int) D#154
      # VUSE <.MEM_103>
      _83 = MEM[(struct _Vector_base *)__first_69]._M_impl._M_start;
      # DEBUG D#152 => (long int) _83
      # DEBUG D#151 => D#153 - D#152
      # DEBUG D#150 => D#151 /[ex] 4
      # DEBUG D#149 => (long unsigned int) D#150
      # DEBUG this => D#156
      # DEBUG __p => _83
      # DEBUG __n => D#149
      if (_83 != 0B)
        goto <bb 31>;
      else
        goto <bb 32>;

    }
    bb_31 (preds = {bb_30 }, succs = {bb_32 })
    {
      <bb 31>:
      # DEBUG D#147 => &D#156->_M_impl
      # DEBUG D#145 => D#147
      # DEBUG D#146 => D#149
      # DEBUG __p => _83
      # DEBUG __a => D#145
      # DEBUG __n => D#146
      # DEBUG D#144 => D#146
      # DEBUG D#143 => D#145
      # DEBUG D#141 => D#143
      # DEBUG D#142 => D#144
      # DEBUG __p => _83
      # DEBUG this => D#141
      # DEBUG D.37042 => D#142
      # .MEM_115 = VDEF <.MEM_103>
      operator delete (_83);

    }
    bb_32 (preds = {bb_30 bb_31 }, succs = {bb_34 bb_33 })
    {
      <bb 32>:
      # .MEM_96 = PHI <.MEM_103(30), .MEM_115(31)>
      # DEBUG D#148 => &D#156->_M_impl
      # DEBUG this => D#148
      # DEBUG this => D#148
      # DEBUG this => D#148
      # .MEM_120 = VDEF <.MEM_96>
      MEM[(struct  &)__first_69] ={v} {CLOBBER};
      __first_84 = __first_69 + 24;
      # DEBUG __first => __first_84
      # DEBUG __first => __first_84
      if (_24 == __first_84)
        goto <bb 34>;
      else
        goto <bb 33>;

    }
    bb_33 (preds = {bb_32 }, succs = {bb_30 })
    {
      <bb 33>:
      goto <bb 30>;

    }
  }
  loop_1 (header = 10, latch = 17, niter = , upper_bound = 2147483646)
  {
    bb_10 (preds = {bb_9 bb_17 }, succs = {bb_11 bb_13 })
    {
      <bb 10>:
      # i_66 = PHI <0(9), i_29(17)>
      # .MEM_63 = PHI <.MEM_20(9), .MEM_149(17)>
      # DEBUG i => i_66
      _22 = (long unsigned int) i_66;
      # DEBUG D#286 => &this_6(D)->_matrix
      # VUSE <.MEM_63>
      _34 = MEM[(struct vector * *)this_6(D) + 144B];
      # DEBUG D#8 => D#286
      # DEBUG __n => _22
      # DEBUG this => D#8
      _16 = _22 * 24;
      _26 = _34 + _16;
      # DEBUG this => _26
      # DEBUG __new_size => _17
      # .MEM_111 = VDEF <.MEM_63>
      __x = 0;
      # DEBUG __x => __x
      # VUSE <.MEM_111>
      _19 = MEM[(int * *)_26];
      # DEBUG D#23 => _26
      # VUSE <.MEM_111>
      _72 = MEM[(int * *)_26 + 8B];
      # DEBUG D#23 => _26
      # DEBUG this => D#23
      # DEBUG this => D#23
      _73 = (long int) _72;
      _74 = (long int) _19;
      _75 = _73 - _74;
      _76 = _75 /[ex] 4;
      _77 = (size_type) _76;
      if (_17 > _77)
        goto <bb 11>;
      else
        goto <bb 13>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_12 bb_27 })
    {
      <bb 11>:
      # DEBUG D#23 => _26
      # DEBUG D#23 => _26
      # DEBUG this => D#23
      # DEBUG this => D#23
      _78 = _17 - _77;
      # DEBUG this => _26
      # DEBUG D#28 => &_26->D.29234._M_impl._M_finish
      # DEBUG this => NULL
      # DEBUG __i => D#28
      # DEBUG this => _26
      # .MEM_113 = VDEF <.MEM_111>
      MEM[(struct __normal_iterator *)&__position] = _72;
      # DEBUG __n => _78
      # DEBUG __x => &__x
      # .MEM_114 = VDEF <.MEM_113>
      std::vector<int>::_M_fill_insert (_26, __position, _78, &__x);

    }
    bb_12 (preds = {bb_11 bb_13 }, succs = {bb_15 })
    {
      <bb 12>:
      # .MEM_150 = PHI <.MEM_114(11), .MEM_111(13)>
      goto <bb 15>;

    }
    bb_13 (preds = {bb_10 }, succs = {bb_14 bb_12 })
    {
      <bb 13>:
      # DEBUG D#23 => _26
      # DEBUG D#23 => _26
      # DEBUG this => D#23
      # DEBUG this => D#23
      if (_17 < _77)
        goto <bb 14>;
      else
        goto <bb 12>;

    }
    bb_14 (preds = {bb_13 }, succs = {bb_15 })
    {
      <bb 14>:
      _80 = _19 + _79;
      # DEBUG D#60 => _26
      # DEBUG __pos => _80
      # DEBUG D#59 => D#60
      # DEBUG this => D#59
      # DEBUG D#57 => &D#59->D.29234
      # DEBUG this => D#57
      # DEBUG D#58 => D#59->D.29234._M_impl._M_finish
      # DEBUG __first => _80
      # DEBUG __last => D#58
      # DEBUG D.32657 => NULL
      # DEBUG D#55 => _80
      # DEBUG D#56 => D#58
      # DEBUG __first => D#55
      # DEBUG __last => D#56
      # DEBUG D#54 => D#56
      # DEBUG D#53 => D#55
      # DEBUG D#51 => D#53
      # DEBUG D#52 => D#54
      # DEBUG D.32641 => D#51
      # DEBUG D.32640 => D#52
      # .MEM_112 = VDEF <.MEM_111>
      MEM[(int * *)_26 + 8B] = _80;

    }
    bb_15 (preds = {bb_12 bb_14 }, succs = {bb_16 bb_18 })
    {
      <bb 15>:
      # .MEM_67 = PHI <.MEM_150(12), .MEM_112(14)>
      # DEBUG j => 0
      if (i_66 <= 0)
        goto <bb 16>;
      else
        goto <bb 18>;

    }
    bb_16 (preds = {bb_15 bb_22 }, succs = {bb_8 bb_17 })
    {
      <bb 16>:
      # .MEM_149 = PHI <.MEM_67(15), .MEM_132(22)>
      i_29 = i_66 + 1;
      # DEBUG i => i_29
      # DEBUG i => i_29
      if (size_11(D) <= i_29)
        goto <bb 8>;
      else
        goto <bb 17>;

    }
    bb_17 (preds = {bb_16 }, succs = {bb_10 })
    {
      <bb 17>:
      goto <bb 10>;

    }
    bb_18 (preds = {bb_15 }, succs = {bb_19 bb_22 })
    {
      <bb 18>:
      # VUSE <.MEM_67>
      pretmp_95 = MEM[(struct vector * *)this_6(D) + 144B];
      pretmp_2 = pretmp_95 + _16;
      # VUSE <.MEM_67>
      pretmp_102 = MEM[(int * *)pretmp_2];
      _148 = i_66 > 0;
      if (_148 != 0)
        goto <bb 19>;
      else
        goto <bb 22>;

    }
    bb_19 (preds = {bb_18 }, succs = {bb_20 })
    {
      <bb 19>:
      _68 = (signed long) i_66;
      _144 = _68 + -1;

    }
    bb_22 (preds = {bb_20 bb_18 }, succs = {bb_16 })
    {
      <bb 22>:
      # .MEM_132 = PHI <.MEM_139(20), .MEM_67(18)>
      goto <bb 16>;

    }
    loop_5 (header = 20, latch = 21, niter = (unsigned long) ((signed long) i_66 + -1), upper_bound = 4611686018427387902)
    {
      bb_20 (preds = {bb_19 bb_21 }, succs = {bb_21 bb_22 })
      {
        <bb 20>:
        # graphite_IV.612_143 = PHI <0(19), graphite_IV.612_142(21)>
        # .MEM_131 = PHI <.MEM_67(19), .MEM_139(21)>
        # DEBUG j => NULL
        # DEBUG D#287 => NULL
        # DEBUG D#8 => NULL
        # DEBUG __n => NULL
        # DEBUG this => NULL
        # DEBUG __n => NULL
        # DEBUG this => NULL
        _138 = (sizetype) graphite_IV.612_143;
        _137 = _138 * 4;
        _136 = pretmp_102 + _137;
        # .MEM_139 = VDEF <.MEM_131>
        *_136 = 1;
        # DEBUG j => NULL
        # DEBUG j => NULL
        graphite_IV.612_142 = graphite_IV.612_143 + 1;
        if (graphite_IV.612_143 < _144)
          goto <bb 21>;
        else
          goto <bb 22>;

      }
      bb_21 (preds = {bb_20 }, succs = {bb_20 })
      {
        <bb 21>:
        goto <bb 20>;

      }
    }
  }
}

Pass statistics:
----------------

MatrixArbiter::MatrixArbiter(Module*, const string&, int) (struct MatrixArbiterD.27650 * const thisD.28440, struct ModuleD.26017 * parentD.28441, const struct stringD.8426 & nameD.28442, intD.9 sizeD.28443)
Eh tree:
   1 cleanup land:{1,<L8>}
     2 cleanup land:{4,<L9>},{2,<L10>}
       3 cleanup land:{3,<L6>}
{
  signed long graphite_IV.612D.37127;
  struct vectorD.27653 * __firstD.37025;
  value_typeD.28797 __xD.37013;
  struct iteratorD.28802 __positionD.37018;
  struct iteratorD.27966 __positionD.37007;
  struct vectorD.27653 * __posD.36980;
  intD.9 jD.29248;
  intD.9 iD.29246;
  struct value_typeD.27961 D.29245;
  struct vectorD.27653 & pretmp_2;
  struct ArbiterD.26830 * _7;
  long unsigned intD.14 _16;
  long unsigned intD.14 _17;
  struct vectorD.27655 * _18;
  intD.9 * const _19;
  long unsigned intD.14 _22;
  struct vectorD.27653 * _24;
  struct vectorD.27653 & _26;
  struct N7Arbiter7entry_tED.26837 * _32;
  struct ModuleD.26017 * * _33;
  struct vectorD.27653 * _34;
  intD.9 * _39;
  struct vectorD.27653 * pretmp_48;
  struct vectorD.27653 * prephitmp_49;
  intD.9 * pretmp_50;
  intD.9 * prephitmp_51;
  signed long _68;
  intD.9 * const _72;
  long intD.12 _73;
  long intD.12 _74;
  long intD.12 _75;
  long intD.12 _76;
  size_typeD.28810 _77;
  long unsigned intD.14 _78;
  long unsigned intD.14 _79;
  intD.9 * _80;
  intD.9 * _83;
  charD.10 * const _87;
  const charD.10 * _88;
  charD.10 * const _89;
  const charD.10 * _90;
  struct vectorD.27653 * pretmp_95;
  intD.9 * pretmp_102;
  intD.9 * _136;
  sizetype _137;
  sizetype _138;
  signed long _144;
  boolD.2757 _148;

;;   basic block 2, loop depth 0, count 0, freq 111, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _7 = &this_6(D)->D.28444;
  # .MEM_12 = VDEF <.MEM_8(D)>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZN7ArbiterC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiD.27634 (_7, parent_9(D), name_10(D), size_11(D));
  # .MEM_13 = VDEF <.MEM_12>
  this_6(D)->D.28444.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV13MatrixArbiterD.28448 + 16B];
  # DEBUG D#288ptD.0 => &this_6(D)->_matrixD.28400
  # DEBUG thisD.35596 => D#288ptD.0
  # DEBUG D#121ptD.0 => &D#288ptD.0->D.28398
  # DEBUG thisD.35597 => D#121ptD.0
  # DEBUG D#120ptD.0 => &D#121ptD.0->_M_implD.27889
  # DEBUG thisD.35598 => D#120ptD.0
  # DEBUG thisD.32998 => D#120ptD.0
  # DEBUG thisD.32996 => D#120ptD.0
  # .MEM_41 = VDEF <.MEM_13>
  MEM[(struct _Vector_implD.27866 *)this_6(D) + 144B]._M_startD.27891 = 0B;
  # .MEM_42 = VDEF <.MEM_41>
  MEM[(struct _Vector_implD.27866 *)this_6(D) + 144B]._M_finishD.27892 = 0B;
  # .MEM_43 = VDEF <.MEM_42>
  MEM[(struct _Vector_implD.27866 *)this_6(D) + 144B]._M_end_of_storageD.27893 = 0B;
  # .MEM_15 = VDEF <.MEM_43>
  this_6(D)->_last_reqD.28401 = -1;
  # DEBUG thisD.35593 => &D.29245
  # DEBUG D#140ptD.0 => &D.29245.D.29234
  # DEBUG thisD.35594 => D#140ptD.0
  # DEBUG D#139ptD.0 => &D#140ptD.0->_M_implD.28725
  # DEBUG thisD.35595 => D#139ptD.0
  # DEBUG thisD.33069 => D#139ptD.0
  # DEBUG thisD.33067 => D#139ptD.0
  # .MEM_44 = VDEF <.MEM_15>
  MEM[(struct _Vector_implD.28702 *)&D.29245]._M_startD.28727 = 0B;
  # .MEM_45 = VDEF <.MEM_44>
  MEM[(struct _Vector_implD.28702 *)&D.29245]._M_finishD.28728 = 0B;
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(struct _Vector_implD.28702 *)&D.29245]._M_end_of_storageD.28729 = 0B;
  # RANGE ~[2147483648, 18446744071562067967]
  _17 = (long unsigned intD.14) size_11(D);
  # DEBUG D#408ptD.0 => &this_6(D)->_matrixD.28400
  # DEBUG thisD.36976 => D#408ptD.0
  # DEBUG __new_sizeD.36977 => _17
  # DEBUG __xD.36978 => &D.29245
  # DEBUG D#24ptD.0 => D#408ptD.0
  # DEBUG D#24ptD.0 => D#408ptD.0
  # DEBUG thisD.37009 => D#24ptD.0
  # DEBUG thisD.37010 => D#24ptD.0
  if (_17 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#24ptD.0 => D#408ptD.0
  # DEBUG D#24ptD.0 => D#408ptD.0
  # DEBUG thisD.35555 => D#24ptD.0
  # DEBUG thisD.35554 => D#24ptD.0
  # DEBUG thisD.35548 => D#408ptD.0
  # DEBUG D#27ptD.0 => &D#408ptD.0->D.28398._M_implD.27889._M_finishD.27892
  # DEBUG thisD.35550 => NULL
  # DEBUG __iD.35549 => D#27ptD.0
  # DEBUG thisD.37008 => D#408ptD.0
  # .MEM_109 = VDEF <.MEM_46>
  MEM[(struct __normal_iteratorD.27967 *)&__positionD.37007] = 0B;
  # DEBUG __nD.37006 => _17
  # DEBUG __xD.37005 => &D.29245
  # PT = nonlocal 
  _18 = &this_6(D)->_matrixD.28400;
  [LP 3] # .MEM_110 = VDEF <.MEM_109>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZNSt6vectorIS_IiSaIiEESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_D.28321 (_18, __positionD.37007, _17, &D.29245);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 32, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_110>
  pretmp_50 = MEM[(struct _Vector_baseD.28492 *)&D.29245]._M_implD.28725._M_startD.28727;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 111, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       2 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_93 = PHI <.MEM_46(2), .MEM_110(4)>
  # PT = nonlocal escaped null 
  # prephitmp_51 = PHI <0B(2), pretmp_50(4)>
  # DEBUG thisD.35599 => &D.29245
  # DEBUG D#155ptD.0 => &D.29245.D.29234
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG D#158ptD.0 => D.29245.D.29234._M_implD.28725._M_finishD.28728
  # DEBUG D#157ptD.0 => D.29245.D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG D#156ptD.0 => &D.29245.D.29234
  # DEBUG thisD.35600 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # DEBUG D#407ptD.0 => MEM[(struct _Vector_baseD.28492 *)&D.29245]._M_implD.28725._M_startD.28727
  # DEBUG D#152ptD.0 => (long intD.12) D#407ptD.0
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35603 => D#156ptD.0
  # DEBUG __pD.35602 => D#407ptD.0
  # DEBUG __nD.35601 => D#149ptD.0
  if (prephitmp_51 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 77, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35607 => D#407ptD.0
  # DEBUG __aD.35605 => D#145ptD.0
  # DEBUG __nD.35606 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35610 => D#407ptD.0
  # DEBUG thisD.35608 => D#141ptD.0
  # DEBUG D.35609 => D#142ptD.0
  # .MEM_47 = VDEF <.MEM_93>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_51);
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 111, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_93(5), .MEM_47(6)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35611 => D#148ptD.0
  # DEBUG thisD.35612 => D#148ptD.0
  # DEBUG thisD.35613 => D#148ptD.0
  # .MEM_20 = VDEF <.MEM_30>
  D.29245 ={v} {CLOBBER};
  # DEBUG iD.29246 => 0
  # DEBUG iD.29246 => 0
  if (size_11(D) <= 0)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 111, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_151 = PHI <.MEM_20(7), .MEM_149(16)>
  # VUSE <.MEM_151>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 9, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  _79 = _17 * 4;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1800, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # i_66 = PHI <0(9), i_29(17)>
  # .MEM_63 = PHI <.MEM_20(9), .MEM_149(17)>
  # DEBUG iD.29246 => i_66
  # RANGE [0, 18446744073709551615]
  _22 = (long unsigned intD.14) i_66;
  # DEBUG D#286ptD.0 => &this_6(D)->_matrixD.28400
  # VUSE <.MEM_63>
  # PT = nonlocal escaped 
  _34 = MEM[(struct vectorD.27653 * *)this_6(D) + 144B];
  # DEBUG D#8ptD.0 => D#286ptD.0
  # DEBUG __nD.35615 => _22
  # DEBUG thisD.35616 => D#8ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _16 = _22 * 24;
  # PT = nonlocal escaped 
  _26 = _34 + _16;
  # DEBUG thisD.37011 => _26
  # DEBUG __new_sizeD.37012 => _17
  # .MEM_111 = VDEF <.MEM_63>
  __xD.37013 = 0;
  # DEBUG __xD.37013 => __xD.37013
  # VUSE <.MEM_111>
  # PT = nonlocal escaped 
  _19 = MEM[(intD.9 * *)_26];
  # DEBUG D#23ptD.0 => _26
  # VUSE <.MEM_111>
  # PT = nonlocal escaped 
  _72 = MEM[(intD.9 * *)_26 + 8B];
  # DEBUG D#23ptD.0 => _26
  # DEBUG thisD.37020 => D#23ptD.0
  # DEBUG thisD.37021 => D#23ptD.0
  _73 = (long intD.12) _72;
  _74 = (long intD.12) _19;
  _75 = _73 - _74;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _76 = _75 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _77 = (size_typeD.28810) _76;
  if (_17 > _77)
    goto <bb 11>;
  else
    goto <bb 13>;
;;    succ:       11 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 522, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#23ptD.0 => _26
  # DEBUG D#23ptD.0 => _26
  # DEBUG thisD.34949 => D#23ptD.0
  # DEBUG thisD.34948 => D#23ptD.0
  # RANGE [1, 18446744073709551615]
  _78 = _17 - _77;
  # DEBUG thisD.34942 => _26
  # DEBUG D#28ptD.0 => &_26->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG thisD.34944 => NULL
  # DEBUG __iD.34943 => D#28ptD.0
  # DEBUG thisD.37019 => _26
  # .MEM_113 = VDEF <.MEM_111>
  MEM[(struct __normal_iteratorD.28803 *)&__positionD.37018] = _72;
  # DEBUG __nD.37017 => _78
  # DEBUG __xD.37016 => &__xD.37013
  [LP 4] # .MEM_114 = VDEF <.MEM_113>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.29157 (_26, __positionD.37018, _78, &__xD.37013);
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 (EH,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 1161, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_150 = PHI <.MEM_114(11), .MEM_111(13)>
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 1278, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       10 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#23ptD.0 => _26
  # DEBUG D#23ptD.0 => _26
  # DEBUG thisD.34954 => D#23ptD.0
  # DEBUG thisD.34953 => D#23ptD.0
  if (_17 < _77)
    goto <bb 14>;
  else
    goto <bb 12>;
;;    succ:       14 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 639, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  _80 = _19 + _79;
  # DEBUG D#60ptD.0 => _26
  # DEBUG __posD.37015 => _80
  # DEBUG D#59ptD.0 => D#60ptD.0
  # DEBUG thisD.37014 => D#59ptD.0
  # DEBUG D#57ptD.0 => &D#59ptD.0->D.29234
  # DEBUG thisD.32665 => D#57ptD.0
  # DEBUG D#58ptD.0 => D#59ptD.0->D.29234._M_implD.28725._M_finishD.28728
  # DEBUG __firstD.32655 => _80
  # DEBUG __lastD.32656 => D#58ptD.0
  # DEBUG D.32657 => NULL
  # DEBUG D#55ptD.0 => _80
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # .MEM_112 = VDEF <.MEM_111>
  MEM[(intD.9 * *)_26 + 8B] = _80;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 1800, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_150(12), .MEM_112(14)>
  # DEBUG jD.29248 => 0
  if (i_66 <= 0)
    goto <bb 16>;
  else
    goto <bb 18>;
;;    succ:       16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 1800, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU)
  # .MEM_149 = PHI <.MEM_67(15), .MEM_132(22)>
  i_29 = i_66 + 1;
  # DEBUG iD.29246 => i_29
  # DEBUG iD.29246 => i_29
  if (size_11(D) <= i_29)
    goto <bb 8>;
  else
    goto <bb 17>;
;;    succ:       8 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 1719, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 1800, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  pretmp_95 = MEM[(struct vectorD.27653 * *)this_6(D) + 144B];
  # PT = nonlocal escaped 
  pretmp_2 = pretmp_95 + _16;
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  pretmp_102 = MEM[(intD.9 * *)pretmp_2];
  _148 = i_66 > 0;
  if (_148 != 0)
    goto <bb 19>;
  else
    goto <bb 22>;
;;    succ:       19 [50.0%]  (TRUE_VALUE)
;;                22 [50.0%]  (FALSE_VALUE)

;;   basic block 19, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [50.0%]  (TRUE_VALUE)
  _68 = (signed long) i_66;
  _144 = _68 + -1;
;;    succ:       20 [100.0%]  (FALLTHRU)

;;   basic block 20, loop depth 2, count 0, freq 10000, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [100.0%]  (FALLTHRU)
;;                21 [100.0%]  (FALLTHRU,DFS_BACK)
  # graphite_IV.612_143 = PHI <0(19), graphite_IV.612_142(21)>
  # .MEM_131 = PHI <.MEM_67(19), .MEM_139(21)>
  # DEBUG jD.29248 => NULL
  # DEBUG D#287ptD.0 => NULL
  # DEBUG D#8ptD.0 => NULL
  # DEBUG __nD.35623 => NULL
  # DEBUG thisD.35624 => NULL
  # DEBUG __nD.35619 => NULL
  # DEBUG thisD.35620 => NULL
  _138 = (sizetype) graphite_IV.612_143;
  _137 = _138 * 4;
  _136 = pretmp_102 + _137;
  # .MEM_139 = VDEF <.MEM_131>
  *_136 = 1;
  # DEBUG jD.29248 => NULL
  # DEBUG jD.29248 => NULL
  graphite_IV.612_142 = graphite_IV.612_143 + 1;
  if (graphite_IV.612_143 < _144)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [91.0%]  (TRUE_VALUE)
;;                22 [9.0%]  (FALSE_VALUE,LOOP_EXIT)

;;   basic block 21, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [91.0%]  (TRUE_VALUE)
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,DFS_BACK)

;;   basic block 22, loop depth 1, count 0, freq 1800, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       20 [9.0%]  (FALSE_VALUE,LOOP_EXIT)
;;                18 [50.0%]  (FALSE_VALUE)
  # .MEM_132 = PHI <.MEM_139(20), .MEM_67(18)>
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       3 (EH,EXECUTABLE)
<L6>: [LP 3]
  # DEBUG thisD.35626 => &D.29245
  # DEBUG D#155ptD.0 => &D.29245.D.29234
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG D#158ptD.0 => D.29245.D.29234._M_implD.28725._M_finishD.28728
  # DEBUG D#157ptD.0 => D.29245.D.29234._M_implD.28725._M_startD.28727
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG D#156ptD.0 => &D.29245.D.29234
  # DEBUG thisD.35627 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_110>
  # PT = nonlocal escaped null 
  _39 = MEM[(struct _Vector_baseD.28492 *)&D.29245]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _39
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.35630 => D#156ptD.0
  # DEBUG __pD.35629 => _39
  # DEBUG __nD.35628 => D#149ptD.0
  if (_39 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.35634 => _39
  # DEBUG __aD.35632 => D#145ptD.0
  # DEBUG __nD.35633 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.35637 => _39
  # DEBUG thisD.35635 => D#141ptD.0
  # DEBUG D.35636 => D#142ptD.0
  # .MEM_53 = VDEF <.MEM_110>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_39);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_110(23), .MEM_53(24)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.35638 => D#148ptD.0
  # DEBUG thisD.35639 => D#148ptD.0
  # DEBUG thisD.35640 => D#148ptD.0
  # .MEM_31 = VDEF <.MEM_40>
  D.29245 ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       26 (EH,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 (EH,EXECUTABLE)
<L10>: [LP 2]
  goto <bb 28> (<L7>);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       11 (EH,EXECUTABLE)
<L9>: [LP 4]
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_31(26), .MEM_114(27)>
<L7>:
  # DEBUG thisD.37022 => D#408ptD.0
  # DEBUG D#163ptD.0 => &D#408ptD.0->D.28398
  # DEBUG thisD.33343 => D#163ptD.0
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  _24 = MEM[(struct vectorD.27655 *)this_6(D) + 144B].D.28398._M_implD.27889._M_finishD.27892;
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  __first_81 = MEM[(struct vectorD.27655 *)this_6(D) + 144B].D.28398._M_implD.27889._M_startD.27891;
  # DEBUG __firstD.37025 => __first_81
  # DEBUG __lastD.37024 => _24
  # DEBUG __firstD.37030 => __first_81
  if (_24 == __first_81)
    goto <bb 35>;
  else
    goto <bb 29>;
;;    succ:       35 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [85.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_69 = PHI <__first_81(29), __first_84(33)>
  # .MEM_103 = PHI <.MEM_5(29), .MEM_120(33)>
  # DEBUG __firstD.37030 => __first_69
  # DEBUG __rD.33173 => __first_69
  # DEBUG __pointerD.37031 => NULL
  # DEBUG thisD.37032 => NULL
  # DEBUG thisD.33138 => D#155ptD.0
  # DEBUG __firstD.33135 => D#157ptD.0
  # DEBUG __lastD.33136 => D#158ptD.0
  # DEBUG D.33137 => NULL
  # DEBUG D#55ptD.0 => D#157ptD.0
  # DEBUG D#56ptD.0 => D#158ptD.0
  # DEBUG __firstD.32652 => D#55ptD.0
  # DEBUG __lastD.32651 => D#56ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D.32641 => D#51ptD.0
  # DEBUG D.32640 => D#52ptD.0
  # DEBUG thisD.37033 => D#156ptD.0
  # DEBUG D#154ptD.0 => D#156ptD.0->_M_implD.28725._M_end_of_storageD.28729
  # DEBUG D#153ptD.0 => (long intD.12) D#154ptD.0
  # VUSE <.MEM_103>
  # PT = nonlocal escaped 
  _83 = MEM[(struct _Vector_baseD.28492 *)__first_69]._M_implD.28725._M_startD.28727;
  # DEBUG D#152ptD.0 => (long intD.12) _83
  # DEBUG D#151ptD.0 => D#153ptD.0 - D#152ptD.0
  # DEBUG D#150ptD.0 => D#151ptD.0 /[ex] 4
  # DEBUG D#149ptD.0 => (long unsigned intD.14) D#150ptD.0
  # DEBUG thisD.37036 => D#156ptD.0
  # DEBUG __pD.37035 => _83
  # DEBUG __nD.37034 => D#149ptD.0
  if (_83 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#147ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG D#145ptD.0 => D#147ptD.0
  # DEBUG D#146ptD.0 => D#149ptD.0
  # DEBUG __pD.37040 => _83
  # DEBUG __aD.37038 => D#145ptD.0
  # DEBUG __nD.37039 => D#146ptD.0
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG __pD.37043 => _83
  # DEBUG thisD.37041 => D#141ptD.0
  # DEBUG D.37042 => D#142ptD.0
  # .MEM_115 = VDEF <.MEM_103>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_83);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_96 = PHI <.MEM_103(30), .MEM_115(31)>
  # DEBUG D#148ptD.0 => &D#156ptD.0->_M_implD.28725
  # DEBUG thisD.37044 => D#148ptD.0
  # DEBUG thisD.37045 => D#148ptD.0
  # DEBUG thisD.37046 => D#148ptD.0
  # .MEM_120 = VDEF <.MEM_96>
  MEM[(struct  &)__first_69] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_84 = __first_69 + 24;
  # DEBUG __firstD.37030 => __first_84
  # DEBUG __firstD.37030 => __first_84
  if (_24 == __first_84)
    goto <bb 34>;
  else
    goto <bb 33>;
;;    succ:       34 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       32 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       32 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_120>
  pretmp_48 = MEM[(struct _Vector_baseD.27656 *)this_6(D) + 144B]._M_implD.27889._M_startD.27891;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                28 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_120(34), .MEM_5(28)>
  # PT = nonlocal escaped 
  # prephitmp_49 = PHI <pretmp_48(34), __first_81(28)>
  # DEBUG D#164ptD.0 => &D#408ptD.0->D.28398
  # DEBUG thisD.37047 => D#164ptD.0
  # DEBUG D#138ptD.0 => D#164ptD.0->_M_implD.27889._M_end_of_storageD.27893
  # DEBUG D#137ptD.0 => (long intD.12) D#138ptD.0
  # DEBUG D#406ptD.0 => MEM[(struct _Vector_baseD.27656 *)this_6(D) + 144B]._M_implD.27889._M_startD.27891
  # DEBUG D#136ptD.0 => (long intD.12) D#406ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0 - D#136ptD.0
  # DEBUG D#134ptD.0 => D#135ptD.0 /[ex] 24
  # DEBUG D#131ptD.0 => D#164ptD.0
  # DEBUG D#132ptD.0 => (long unsigned intD.14) D#134ptD.0
  # DEBUG __pD.37050 => D#406ptD.0
  # DEBUG thisD.37048 => D#131ptD.0
  # DEBUG __nD.37049 => D#132ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#129ptD.0 => D#131ptD.0
  if (prephitmp_49 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#128ptD.0 => &D#129ptD.0->_M_implD.27889
  # DEBUG D#126ptD.0 => D#128ptD.0
  # DEBUG D#127ptD.0 => D#130ptD.0
  # DEBUG __pD.37054 => D#406ptD.0
  # DEBUG __aD.37052 => D#126ptD.0
  # DEBUG __nD.37053 => D#127ptD.0
  # DEBUG D#125ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#123ptD.0 => D#125ptD.0
  # DEBUG __pD.37057 => D#406ptD.0
  # DEBUG thisD.37055 => D#122ptD.0
  # DEBUG D.37056 => D#123ptD.0
  # .MEM_121 = VDEF <.MEM_62>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_49);
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_62(35), .MEM_121(36)>
  # DEBUG D#133ptD.0 => &D#164ptD.0->_M_implD.27889
  # DEBUG thisD.37058 => D#133ptD.0
  # DEBUG thisD.37059 => D#133ptD.0
  # DEBUG thisD.37060 => D#133ptD.0
  # .MEM_126 = VDEF <.MEM_97>
  MEM[(struct  &)this_6(D) + 144] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       38 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 (EH,EXECUTABLE)
<L8>: [LP 1]
  # DEBUG thisD.37061 => _7
  # .MEM_127 = VDEF <.MEM_126>
  MEM[(struct ArbiterD.26830 *)this_6(D)].D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV7ArbiterD.27647 + 16B];
  # DEBUG D#119ptD.0 => &_7->_requestD.27584
  # DEBUG thisD.37062 => D#119ptD.0
  # DEBUG D#115ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.32975 => D#115ptD.0
  # DEBUG D#118ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_finishD.27076
  # DEBUG D#117ptD.0 => D#119ptD.0->D.27582._M_implD.27073._M_startD.27075
  # DEBUG D#48ptD.0 => D#117ptD.0
  # DEBUG D#49ptD.0 => D#118ptD.0
  # DEBUG __firstD.32974 => D#48ptD.0
  # DEBUG __lastD.32973 => D#49ptD.0
  # DEBUG D.32972 => D#50ptD.0
  # DEBUG D#47ptD.0 => D#49ptD.0
  # DEBUG D#46ptD.0 => D#48ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG __firstD.32608 => D#44ptD.0
  # DEBUG __lastD.32607 => D#45ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D.32597 => D#40ptD.0
  # DEBUG D.32596 => D#41ptD.0
  # DEBUG D#116ptD.0 => &D#119ptD.0->D.27582
  # DEBUG thisD.37063 => D#116ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0->_M_implD.27073._M_end_of_storageD.27077
  # DEBUG D#113ptD.0 => (long intD.12) D#114ptD.0
  # VUSE <.MEM_127>
  # PT = nonlocal escaped 
  _32 = MEM[(struct _Vector_baseD.26840 *)this_6(D) + 96B]._M_implD.27073._M_startD.27075;
  # DEBUG D#112ptD.0 => (long intD.12) _32
  # DEBUG D#111ptD.0 => D#113ptD.0 - D#112ptD.0
  # DEBUG D#110ptD.0 => D#111ptD.0 /[ex] 12
  # DEBUG D#107ptD.0 => D#116ptD.0
  # DEBUG D#108ptD.0 => (long unsigned intD.14) D#110ptD.0
  # DEBUG __pD.37066 => _32
  # DEBUG thisD.37064 => D#107ptD.0
  # DEBUG __nD.37065 => D#108ptD.0
  # DEBUG D#106ptD.0 => D#108ptD.0
  # DEBUG D#105ptD.0 => D#107ptD.0
  if (_32 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#104ptD.0 => &D#105ptD.0->_M_implD.27073
  # DEBUG D#102ptD.0 => D#104ptD.0
  # DEBUG D#103ptD.0 => D#106ptD.0
  # DEBUG __pD.37070 => _32
  # DEBUG __aD.37068 => D#102ptD.0
  # DEBUG __nD.37069 => D#103ptD.0
  # DEBUG D#101ptD.0 => D#103ptD.0
  # DEBUG D#100ptD.0 => D#102ptD.0
  # DEBUG D#98ptD.0 => D#100ptD.0
  # DEBUG D#99ptD.0 => D#101ptD.0
  # DEBUG __pD.37073 => _32
  # DEBUG thisD.37071 => D#98ptD.0
  # DEBUG D.37072 => D#99ptD.0
  # .MEM_128 = VDEF <.MEM_127>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_98 = PHI <.MEM_127(38), .MEM_128(39)>
  # DEBUG D#109ptD.0 => &D#116ptD.0->_M_implD.27073
  # DEBUG thisD.37074 => D#109ptD.0
  # DEBUG thisD.37075 => D#109ptD.0
  # DEBUG thisD.37076 => D#109ptD.0
  # .MEM_133 = VDEF <.MEM_98>
  MEM[(struct  &)this_6(D) + 96] ={v} {CLOBBER};
  # DEBUG D#405ptD.0 => &MEM[(struct ArbiterD.26830 *)this_6(D)].D.27639
  # DEBUG thisD.37077 => D#405ptD.0
  # .MEM_134 = VDEF <.MEM_133>
  MEM[(struct ModuleD.26017 *)this_6(D)]._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV6ModuleD.26817 + 16B];
  # DEBUG D#97ptD.0 => &D#405ptD.0->_childrenD.26767
  # DEBUG thisD.37078 => D#97ptD.0
  # DEBUG D#91ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.32848 => D#91ptD.0
  # DEBUG D#94ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_finishD.26259
  # DEBUG D#93ptD.0 => D#97ptD.0->D.26765._M_implD.26256._M_startD.26258
  # DEBUG D#37ptD.0 => D#93ptD.0
  # DEBUG D#38ptD.0 => D#94ptD.0
  # DEBUG __firstD.32847 => D#37ptD.0
  # DEBUG __lastD.32846 => D#38ptD.0
  # DEBUG D.32845 => D#39ptD.0
  # DEBUG D#36ptD.0 => D#38ptD.0
  # DEBUG D#35ptD.0 => D#37ptD.0
  # DEBUG D#33ptD.0 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#36ptD.0
  # DEBUG __firstD.32570 => D#33ptD.0
  # DEBUG __lastD.32569 => D#34ptD.0
  # DEBUG D#32ptD.0 => D#34ptD.0
  # DEBUG D#31ptD.0 => D#33ptD.0
  # DEBUG D#29ptD.0 => D#31ptD.0
  # DEBUG D#30ptD.0 => D#32ptD.0
  # DEBUG D.32559 => D#29ptD.0
  # DEBUG D.32558 => D#30ptD.0
  # DEBUG D#92ptD.0 => &D#97ptD.0->D.26765
  # DEBUG thisD.37079 => D#92ptD.0
  # DEBUG D#90ptD.0 => D#92ptD.0->_M_implD.26256._M_end_of_storageD.26260
  # DEBUG D#89ptD.0 => (long intD.12) D#90ptD.0
  # VUSE <.MEM_134>
  # PT = nonlocal escaped 
  _33 = MEM[(struct _Vector_baseD.26023 *)this_6(D) + 72B]._M_implD.26256._M_startD.26258;
  # DEBUG D#88ptD.0 => (long intD.12) _33
  # DEBUG D#87ptD.0 => D#89ptD.0 - D#88ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0 /[ex] 8
  # DEBUG D#83ptD.0 => D#92ptD.0
  # DEBUG D#84ptD.0 => (long unsigned intD.14) D#86ptD.0
  # DEBUG __pD.37082 => _33
  # DEBUG thisD.37080 => D#83ptD.0
  # DEBUG __nD.37081 => D#84ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG D#81ptD.0 => D#83ptD.0
  if (_33 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#80ptD.0 => &D#81ptD.0->_M_implD.26256
  # DEBUG D#78ptD.0 => D#80ptD.0
  # DEBUG D#79ptD.0 => D#82ptD.0
  # DEBUG __pD.37086 => _33
  # DEBUG __aD.37084 => D#78ptD.0
  # DEBUG __nD.37085 => D#79ptD.0
  # DEBUG D#77ptD.0 => D#79ptD.0
  # DEBUG D#76ptD.0 => D#78ptD.0
  # DEBUG D#74ptD.0 => D#76ptD.0
  # DEBUG D#75ptD.0 => D#77ptD.0
  # DEBUG __pD.37089 => _33
  # DEBUG thisD.37087 => D#74ptD.0
  # DEBUG D.37088 => D#75ptD.0
  # .MEM_135 = VDEF <.MEM_134>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_33);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_134(40), .MEM_135(41)>
  # DEBUG D#85ptD.0 => &D#92ptD.0->_M_implD.26256
  # DEBUG thisD.37090 => D#85ptD.0
  # DEBUG thisD.37091 => D#85ptD.0
  # DEBUG thisD.37092 => D#85ptD.0
  # .MEM_140 = VDEF <.MEM_99>
  MEM[(struct  &)this_6(D) + 72] ={v} {CLOBBER};
  # DEBUG D#96ptD.0 => &D#405ptD.0->_fullnameD.26020
  # DEBUG thisD.37093 => D#96ptD.0
  # DEBUG thisD.37094 => D#96ptD.0
  # DEBUG thisD.37103 => D#96ptD.0
  # VUSE <.MEM_140>
  # PT = nonlocal escaped 
  _87 = MEM[(charD.10 * *)this_6(D) + 40B];
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.37104 => D#96ptD.0
  # PT = nonlocal 
  _88 = &MEM[(const struct basic_stringD.8425 *)this_6(D) + 40B].D.13836._M_local_bufD.13838;
  if (_87 != _88)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#96ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.37096 => D#96ptD.0
  # DEBUG __sizeD.37095 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#96ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#96ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.37099 => _87
  # DEBUG __aD.37097 => D#67ptD.0
  # DEBUG __nD.37098 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.37102 => _87
  # DEBUG thisD.37100 => D#63ptD.0
  # DEBUG D.37101 => D#64ptD.0
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_87);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_100 = PHI <.MEM_140(42), .MEM_141(43)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#96ptD.0]._M_dataplusD.13816
  # DEBUG thisD.37105 => D#73ptD.0
  # DEBUG thisD.37106 => D#73ptD.0
  # DEBUG thisD.37107 => D#73ptD.0
  # .MEM_145 = VDEF <.MEM_100>
  MEM[(struct  &)this_6(D) + 40] ={v} {CLOBBER};
  # DEBUG D#95ptD.0 => &D#405ptD.0->_nameD.26019
  # DEBUG thisD.37108 => D#95ptD.0
  # DEBUG thisD.37109 => D#95ptD.0
  # DEBUG thisD.37118 => D#95ptD.0
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _89 = MEM[(charD.10 * *)this_6(D) + 8B];
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32292 => D#2ptD.0
  # DEBUG thisD.37119 => D#95ptD.0
  # PT = nonlocal 
  _90 = &MEM[(const struct basic_stringD.8425 *)this_6(D) + 8B].D.13836._M_local_bufD.13838;
  if (_89 != _90)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => MEM[(struct basic_stringD.8425 *)D#95ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#71ptD.0 => D#72ptD.0
  # DEBUG thisD.37111 => D#95ptD.0
  # DEBUG __sizeD.37110 => D#71ptD.0
  # DEBUG D#70ptD.0 => D#71ptD.0
  # DEBUG D#2ptD.0 => D#95ptD.0
  # DEBUG thisD.32730 => D#2ptD.0
  # DEBUG thisD.32731 => D#95ptD.0
  # DEBUG D#69ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG D#67ptD.0 => D#69ptD.0
  # DEBUG D#68ptD.0 => D#70ptD.0 + 1
  # DEBUG __pD.37114 => _89
  # DEBUG __aD.37112 => D#67ptD.0
  # DEBUG __nD.37113 => D#68ptD.0
  # DEBUG D#66ptD.0 => D#68ptD.0
  # DEBUG D#65ptD.0 => D#67ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#64ptD.0 => D#66ptD.0
  # DEBUG __pD.37117 => _89
  # DEBUG thisD.37115 => D#63ptD.0
  # DEBUG D.37116 => D#64ptD.0
  # .MEM_146 = VDEF <.MEM_145>
  # USE = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26817 D.27647 D.28448 D.29245 D.37013 } (nonlocal, escaped)
  _ZdlPvD.2766 (_89);
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 1, flags: (NEW, REACHABLE)
;;    pred:       44 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_101 = PHI <.MEM_145(44), .MEM_146(45)>
  # DEBUG D#73ptD.0 => &MEM[(struct basic_stringD.8425 *)D#95ptD.0]._M_dataplusD.13816
  # DEBUG thisD.37120 => D#73ptD.0
  # DEBUG thisD.37121 => D#73ptD.0
  # DEBUG thisD.37122 => D#73ptD.0
  # .MEM_152 = VDEF <.MEM_101>
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}



;; Function <built-in> (MatrixArbiter__MatrixArbiter_Module___const_string___int_._loopfn.0, funcdef_no=1739, decl_uid=37134, cgraph_uid=543, symbol_order=1120)


Pass statistics:
----------------


Pass statistics:
----------------

<built-in> (voidD.45 * .paral_data_paramD.37136)
{
  signed long graphite_IV.613D.37143;
  signed long tt.618D.37142;
  signed long q.617D.37141;
  struct  * .paral_data_load.616D.37140;
  intD.9 * pretmp_4;
  unsigned long _5;
  intD.9 _6;
  signed long _7;
  intD.9 _8;
  signed long _9;
  signed long _10;
  signed long _17;
  signed long _18;
  signed long _19;
  signed long ivtmp_21;
  signed long ivtmp_22;
  sizetype _25;
  sizetype _26;
  intD.9 * _27;

;;   basic block 2, loop depth 0, count 0, freq 720, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_31(D)>
  # PT = nonlocal escaped 
  pretmp_4 = MEM[(struct  *).paral_data_param_1(D)].pretmpD.37130;
  # VUSE <.MEM_31(D)>
  _5 = MEM[(struct  *).paral_data_param_1(D)].D.37131;
  _6 = omp_get_num_threadsD.1718 ();
  # RANGE [-2147483648, 2147483647]
  _7 = (signed long) _6;
  _8 = omp_get_thread_numD.1717 ();
  # RANGE [-2147483648, 2147483647]
  _9 = (signed long) _8;
  _10 = (signed long) _5;
  q.617_11 = _10 / _7;
  tt.618_12 = _10 % _7;
  if (_9 < tt.618_12)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9 [25.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [75.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 720, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [75.0%]  (FALSE_VALUE,EXECUTABLE)
  # q.617_13 = PHI <q.617_14(9), q.617_11(2)>
  # tt.618_15 = PHI <0(9), tt.618_12(2)>
  _17 = _9 * q.617_13;
  _18 = tt.618_15 + _17;
  _19 = q.617_13 + _18;
  if (_18 >= _19)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       5 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;                4 (TRUE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_31(D)(3), .MEM_30(7)>
  # VUSE <.MEM_38>
  return;
;;    succ:       EXIT

;;   basic block 5, loop depth 0, count 0, freq 720, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8000, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # ivtmp_21 = PHI <_18(5), ivtmp_22(8)>
  # .MEM_29 = PHI <.MEM_31(D)(5), .MEM_32(8)>
  # RANGE [0, 18446744073709551615]
  _25 = (sizetype) ivtmp_21;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _26 = _25 * 4;
  # PT = nonlocal escaped 
  _27 = pretmp_4 + _26;
  # .MEM_32 = VDEF <.MEM_29>
  *_27 = 1;
  ivtmp_22 = ivtmp_21 + 1;
  if (_19 > ivtmp_22)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 (FALSE_VALUE,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_32(6)>
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 8000, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 720, maybe hot
;;    prev block 8, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [25.0%]  (TRUE_VALUE,EXECUTABLE)
  q.617_14 = q.617_11 + 1;
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

}


