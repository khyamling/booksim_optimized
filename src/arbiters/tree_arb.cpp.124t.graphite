
;; Function virtual int TreeArbiter::Arbitrate(int*, int*) (_ZN11TreeArbiter9ArbitrateEPiS0_, funcdef_no=1408, decl_uid=29164, cgraph_uid=387, symbol_order=388)


Pass statistics:
----------------

virtual int TreeArbiter::Arbitrate(int*, int*) (struct TreeArbiterD.27650 * const thisD.30414, intD.9 * idD.30411, intD.9 * priD.30412)
{
  intD.9 group_priD.30418;
  intD.9 group_idD.30417;
  intD.9 iD.30416;
  static const charD.10 _ZZN11TreeArbiter9ArbitrateEPiS0_E19__PRETTY_FUNCTION__D.30420[47] = "virtual int TreeArbiter::Arbitrate(int*, int*)";
  intD.9 groupD.30419;
  intD.9 _2;
  intD.9 _8;
  long intD.12 _9;
  intD.9 _10;
  long unsigned intD.14 _11;
  long intD.12 _12;
  intD.9 _13;
  long intD.12 _14;
  struct ArbiterD.26830 * _15;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _16;
  intD.9 (*__vtbl_ptr_typeD.2760) () _17;
  struct ArbiterD.26830 * _19;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _20;
  intD.9 (*__vtbl_ptr_typeD.2760) () _21;
  intD.9 group_pri.76_22;
  intD.9 group_id.77_23;
  struct ArbiterD.26830 * _28;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _29;
  intD.9 (*__vtbl_ptr_typeD.2760) () _30;
  intD.9 _33;
  long unsigned intD.14 _34;
  long intD.12 _35;
  struct ArbiterD.26830 * _36;
  intD.9 _38;
  intD.9 _39;
  intD.9 _40;
  intD.9 _42;
  struct ArbiterD.26830 * _43;
  intD.9 _47;
  const intD.9 _51;
  struct ArbiterD.26830 * * const _54;
  struct ArbiterD.26830 * * const _55;
  intD.9 * _56;
  long unsigned intD.14 _57;
  intD.9 & _58;
  long unsigned intD.14 _59;
  struct ArbiterD.26830 * & _60;
  long intD.12 _61;
  long intD.12 _62;
  long intD.12 _63;
  long intD.12 _64;
  long unsigned intD.14 _65;
  struct ArbiterD.26830 * & _66;
  struct ArbiterD.26830 * * const _69;
  intD.9 _70;
  long intD.12 _73;
  long intD.12 _74;
  long intD.12 _75;
  struct ArbiterD.26830 * * const _76;
  struct ArbiterD.26830 * * const _78;
  long intD.12 _79;
  struct ArbiterD.26830 * * const prephitmp_107;
  struct ArbiterD.26830 * * const prephitmp_108;
  struct ArbiterD.26830 * * const pretmp_110;
  struct ArbiterD.26830 * * const prephitmp_111;
  struct ArbiterD.26830 * * const pretmp_112;
  struct ArbiterD.26830 * * const prephitmp_113;

;;   basic block 2, loop depth 0, count 0, freq 938, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_6(D)>
  _8 = this_7(D)->D.29196._num_reqsD.27589;
  if (_8 == 0)
    goto <bb 19>;
  else
    goto <bb 3>;
;;    succ:       19 [4.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [96.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [96.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG iD.30416 => 0
  # DEBUG D#27ptD.0 => &this_7(D)->_group_arbitersD.28399
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _78 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # DEBUG D#14ptD.0 => D#27ptD.0
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _76 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
  # DEBUG D#14ptD.0 => D#27ptD.0
  # DEBUG thisD.34145 => D#14ptD.0
  # DEBUG thisD.34144 => D#14ptD.0
  _79 = (long intD.12) _76;
  _74 = (long intD.12) _78;
  _75 = _79 - _74;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _73 = _75 /[ex] 8;
  _70 = (intD.9) _73;
  if (_70 > 0)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_109 = PHI <.MEM_6(D)(3), .MEM_4(8)>
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _28 = this_7(D)->_global_arbiterD.28400;
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _29 = _28->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _30 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_29 + 48B];
  # .MEM_31 = VDEF <.MEM_109>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  group_32 = OBJ_TYPE_REF(_30;(struct ArbiterD.26830)_28->6) (_28, 0B, 0B);
  # DEBUG groupD.30419 => group_32
  if (group_32 < 0)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       3 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_72 = PHI <0(5), i_27(9)>
  # .MEM_71 = PHI <.MEM_6(D)(5), .MEM_4(9)>
  # PT = nonlocal escaped 
  # _69 = PHI <_78(5), prephitmp_111(9)>
  # prephitmp_107 = PHI <_76(5), prephitmp_113(9)>
  # prephitmp_108 = PHI <_78(5), prephitmp_111(9)>
  # DEBUG iD.30416 => i_72
  # DEBUG D#27ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#27ptD.0
  # DEBUG thisD.34145 => D#14ptD.0
  # DEBUG thisD.34144 => D#14ptD.0
  # RANGE [0, 18446744073709551615]
  _11 = (long unsigned intD.14) i_72;
  # DEBUG D#25ptD.0 => &this_7(D)->_group_reqsD.29147
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _56 = MEM[(intD.9 * *)this_7(D) + 176B];
  # DEBUG D#22ptD.0 => D#25ptD.0
  # DEBUG __nD.34148 => _11
  # DEBUG thisD.34149 => D#22ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _57 = _11 * 4;
  # PT = nonlocal escaped 
  _58 = _56 + _57;
  # VUSE <.MEM_71>
  _13 = *_58;
  if (_13 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 2639, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#26ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#13ptD.0 => D#26ptD.0
  # DEBUG __nD.34152 => _11
  # DEBUG thisD.34153 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _59 = _11 * 8;
  # PT = nonlocal escaped 
  _60 = _69 + _59;
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _15 = *_60;
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _16 = _15->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_16 + 48B];
  # .MEM_18 = VDEF <.MEM_71>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  OBJ_TYPE_REF(_17;(struct ArbiterD.26830)_15->6) (_15, &group_idD.30417, &group_priD.30418);
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _19 = this_7(D)->_global_arbiterD.28400;
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _20 = _19->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _21 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_20 + 32B];
  # VUSE <.MEM_18>
  group_pri.76_22 = group_priD.30418;
  # VUSE <.MEM_18>
  group_id.77_23 = group_idD.30417;
  # .MEM_24 = VDEF <.MEM_18>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  OBJ_TYPE_REF(_21;(struct ArbiterD.26830)_19->4) (_19, i_72, group_id.77_23, group_pri.76_22);
  # .MEM_25 = VDEF <.MEM_24>
  group_idD.30417 ={v} {CLOBBER};
  # .MEM_26 = VDEF <.MEM_25>
  group_priD.30418 ={v} {CLOBBER};
  # VUSE <.MEM_26>
  pretmp_110 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # VUSE <.MEM_26>
  pretmp_112 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_71(6), .MEM_26(7)>
  # PT = nonlocal escaped 
  # prephitmp_111 = PHI <prephitmp_108(6), pretmp_110(7)>
  # PT = nonlocal escaped 
  # prephitmp_113 = PHI <prephitmp_107(6), pretmp_112(7)>
  i_27 = i_72 + 1;
  # DEBUG iD.30416 => i_27
  # DEBUG iD.30416 => i_27
  # DEBUG D#27ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#27ptD.0
  # DEBUG D#14ptD.0 => D#27ptD.0
  # DEBUG thisD.34145 => D#14ptD.0
  # DEBUG thisD.34144 => D#14ptD.0
  _35 = (long intD.12) prephitmp_113;
  _14 = (long intD.12) prephitmp_111;
  _12 = _35 - _14;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _9 = _12 /[ex] 8;
  _10 = (intD.9) _9;
  if (_10 > i_27)
    goto <bb 9>;
  else
    goto <bb 4>;
;;    succ:       9 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#28ptD.0 => &this_7(D)->_group_arbitersD.28399
  # VUSE <.MEM_31>
  # PT = nonlocal escaped 
  _54 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # DEBUG D#14ptD.0 => D#28ptD.0
  # VUSE <.MEM_31>
  # PT = nonlocal escaped 
  _55 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
  # DEBUG D#14ptD.0 => D#28ptD.0
  # DEBUG thisD.34158 => D#14ptD.0
  # DEBUG thisD.34157 => D#14ptD.0
  _61 = (long intD.12) _55;
  _62 = (long intD.12) _54;
  _63 = _61 - _62;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _64 = _63 /[ex] 8;
  _33 = (intD.9) _64;
  if (group_32 >= _33)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_50 = VDEF <.MEM_31>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  __assert_failD.16699 ("group >= 0 && group < (int)_group_arbiters.size()", "arbiters/tree_arb.cpp", 100, &_ZZN11TreeArbiter9ArbitrateEPiS0_E19__PRETTY_FUNCTION__D.30420);
;;    succ:      

;;   basic block 12, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _34 = (long unsigned intD.14) group_32;
  # DEBUG D#29ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#13ptD.0 => D#29ptD.0
  # DEBUG __nD.34164 => _34
  # DEBUG thisD.34165 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _65 = _34 * 8;
  # PT = nonlocal escaped 
  _66 = _54 + _65;
  # VUSE <.MEM_31>
  # PT = nonlocal escaped 
  _36 = *_66;
  # VUSE <.MEM_31>
  _51 = MEM[(intD.9 *)_36 + 124B];
  # DEBUG D#12ptD.0 => _36
  # DEBUG thisD.34161 => D#12ptD.0
  # DEBUG group_selD.30421 => NULL
  if (_51 < 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_31>
  _38 = this_7(D)->_group_sizeD.27652;
  if (_38 <= _51)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_49 = VDEF <.MEM_31>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  __assert_failD.16699 ("group_sel >= 0 && group_sel < _group_size", "arbiters/tree_arb.cpp", 102, &_ZZN11TreeArbiter9ArbitrateEPiS0_E19__PRETTY_FUNCTION__D.30420);
;;    succ:      

;;   basic block 15, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  _39 = group_32 * _38;
  _40 = _39 + _51;
  # .MEM_41 = VDEF <.MEM_31>
  this_7(D)->D.29196._selectedD.27586 = _40;
  if (_40 < 0)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 898, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_41>
  _42 = this_7(D)->D.29196._sizeD.27585;
  if (_40 >= _42)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_48 = VDEF <.MEM_41>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  __assert_failD.16699 ("_selected >= 0 && _selected < _size", "arbiters/tree_arb.cpp", 104, &_ZZN11TreeArbiter9ArbitrateEPiS0_E19__PRETTY_FUNCTION__D.30420);
;;    succ:      

;;   basic block 18, loop depth 0, count 0, freq 898, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _43 = &this_7(D)->D.29196;
  # .MEM_46 = VDEF <.MEM_41>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  _47 = _ZN7Arbiter9ArbitrateEPiS0_D.27606 (_43, id_44(D), pri_45(D));
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 935, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [4.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _2 = PHI <-1(2), _47(18)>
  # .MEM_5 = PHI <.MEM_6(D)(2), .MEM_46(18)>
  # VUSE <.MEM_5>
  return _2;
;;    succ:       EXIT [100.0%] 

}



Updating SSA:
Registering new PHI nodes in block #6
Registering new PHI nodes in block #7
Registering new PHI nodes in block #8
Registering new PHI nodes in block #9
Registering new PHI nodes in block #20

DFA Statistics for virtual int TreeArbiter::Arbitrate(int*, int*)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            104        832b
DEF operands                             53        424b
VUSE operands                            35        280b
VDEF operands                            10         80b
PHI nodes                                12       1248b
PHI arguments                            23       1104b
---------------------------------------------------------
Total memory used by DFA/SSA data                 3968b
---------------------------------------------------------

Average number of arguments per PHI node: 1.9 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_106 -> { .MEM_4 }
Incremental SSA update started at block: 6
Number of blocks in CFG: 21
Number of blocks to update: 4 ( 19%)
Affected blocks: 6 8 9 20


Creating dr for this_7(D)->D.29196._num_reqs
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: *this_7(D)
	Access function 0: 1088
	Access function 1: 0
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 144B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 144B]
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 152B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 152B]
Creating dr for MEM[(int * *)this_7(D) + 176B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_7(D) + 176B]
Creating dr for MEM[(int * *)this_7(D) + 176B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_7(D) + 176B]
Creating dr for *_58
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_58
Creating dr for *_58
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_58
Creating dr for MEM[(int * *)this_7(D) + 176B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_7(D) + 176B]
Creating dr for MEM[(int * *)this_7(D) + 176B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_7(D) + 176B]
Creating dr for *_58
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_58
Creating dr for *_58
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_58
Creating dr for *_60
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_60
Creating dr for *_60
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_60
Creating dr for _15->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_15
	Access function 0: 0
	Access function 1: 0
Creating dr for _15->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_15
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B]
Creating dr for MEM[(int * *)this_7(D) + 176B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_7(D) + 176B]
Creating dr for MEM[(int * *)this_7(D) + 176B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_7(D) + 176B]
Creating dr for *_58
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_58
Creating dr for *_58
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_58
Creating dr for MEM[(int * *)this_7(D) + 176B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_7(D) + 176B]
Creating dr for MEM[(int * *)this_7(D) + 176B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_7(D) + 176B]
Creating dr for *_58
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_58
Creating dr for *_58
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_58
Creating dr for *_60
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_60
Creating dr for *_60
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_60
Creating dr for _15->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_15
	Access function 0: 0
	Access function 1: 0
Creating dr for _15->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_15
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B]
Creating dr for this_7(D)->_global_arbiter
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: *this_7(D)
	Access function 0: 1344
Creating dr for _28->D.27639._vptr.Module
analyze_innermost: success.
	base_address: _28
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_28
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_29 + 48B]
analyze_innermost: success.
	base_address: _29
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_29 + 48B]
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 144B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 144B]
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 152B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 152B]
Creating dr for *_66
analyze_innermost: success.
	base_address: _54 + (long unsigned int) group_32 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_66
Creating dr for MEM[(int *)_36 + 124B]
analyze_innermost: success.
	base_address: _36
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: MEM[(int *)_36 + 124B]
Creating dr for this_7(D)->_group_size
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 140
	step: 0
	aligned to: 256
	base_object: *this_7(D)
	Access function 0: 1120
Creating dr for this_7(D)->D.29196._selected
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 124
	step: 0
	aligned to: 256
	base_object: *this_7(D)
	Access function 0: 992
	Access function 1: 0
Creating dr for this_7(D)->D.29196._size
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 120
	step: 0
	aligned to: 256
	base_object: *this_7(D)
	Access function 0: 960
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:22, LOOPS:1, CONDITIONS:10, STMTS:111)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_19 bb_3 })
  {
    <bb 2>:
    # VUSE <.MEM_6(D)>
    _8 = this_7(D)->D.29196._num_reqs;
    if (_8 == 0)
      goto <bb 19>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # DEBUG i => 0
    # DEBUG D#27 => &this_7(D)->_group_arbiters
    # VUSE <.MEM_6(D)>
    _78 = MEM[(struct Arbiter * * *)this_7(D) + 144B];
    # DEBUG D#14 => D#27
    # VUSE <.MEM_6(D)>
    _76 = MEM[(struct Arbiter * * *)this_7(D) + 152B];
    # DEBUG D#14 => D#27
    # DEBUG this => D#14
    # DEBUG this => D#14
    _79 = (long int) _76;
    _74 = (long int) _78;
    _75 = _79 - _74;
    _73 = _75 /[ex] 8;
    _70 = (int) _73;
    if (_70 > 0)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 bb_20 }, succs = {bb_11 bb_10 })
  {
    <bb 4>:
    # .MEM_109 = PHI <.MEM_6(D)(3), .MEM_106(20)>
    # VUSE <.MEM_109>
    _28 = this_7(D)->_global_arbiter;
    # VUSE <.MEM_109>
    _29 = _28->D.27639._vptr.Module;
    # VUSE <.MEM_109>
    _30 = MEM[(int (*__vtbl_ptr_type) () *)_29 + 48B];
    # .MEM_31 = VDEF <.MEM_109>
    group_32 = OBJ_TYPE_REF(_30;(struct Arbiter)_28->6) (_28, 0B, 0B);
    # DEBUG group => group_32
    if (group_32 < 0)
      goto <bb 11>;
    else
      goto <bb 10>;

  }
  bb_5 (preds = {bb_3 }, succs = {bb_6 })
  {
    <bb 5>:

  }
  bb_20 (preds = {bb_8 }, succs = {bb_4 })
  {
    <bb 20>:
    # .MEM_106 = PHI <.MEM_4(8)>
    goto <bb 4>;

  }
  bb_10 (preds = {bb_4 }, succs = {bb_11 bb_12 })
  {
    <bb 10>:
    # DEBUG D#28 => &this_7(D)->_group_arbiters
    # VUSE <.MEM_31>
    _54 = MEM[(struct Arbiter * * *)this_7(D) + 144B];
    # DEBUG D#14 => D#28
    # VUSE <.MEM_31>
    _55 = MEM[(struct Arbiter * * *)this_7(D) + 152B];
    # DEBUG D#14 => D#28
    # DEBUG this => D#14
    # DEBUG this => D#14
    _61 = (long int) _55;
    _62 = (long int) _54;
    _63 = _61 - _62;
    _64 = _63 /[ex] 8;
    _33 = (int) _64;
    if (group_32 >= _33)
      goto <bb 11>;
    else
      goto <bb 12>;

  }
  bb_11 (preds = {bb_10 bb_4 }, succs = {})
  {
    <bb 11>:
    # .MEM_50 = VDEF <.MEM_31>
    __assert_fail ("group >= 0 && group < (int)_group_arbiters.size()", "arbiters/tree_arb.cpp", 100, &__PRETTY_FUNCTION__);

  }
  bb_12 (preds = {bb_10 }, succs = {bb_14 bb_13 })
  {
    <bb 12>:
    _34 = (long unsigned int) group_32;
    # DEBUG D#29 => &this_7(D)->_group_arbiters
    # DEBUG D#13 => D#29
    # DEBUG __n => _34
    # DEBUG this => D#13
    _65 = _34 * 8;
    _66 = _54 + _65;
    # VUSE <.MEM_31>
    _36 = *_66;
    # VUSE <.MEM_31>
    _51 = MEM[(int *)_36 + 124B];
    # DEBUG D#12 => _36
    # DEBUG this => D#12
    # DEBUG group_sel => NULL
    if (_51 < 0)
      goto <bb 14>;
    else
      goto <bb 13>;

  }
  bb_13 (preds = {bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # VUSE <.MEM_31>
    _38 = this_7(D)->_group_size;
    if (_38 <= _51)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 bb_12 }, succs = {})
  {
    <bb 14>:
    # .MEM_49 = VDEF <.MEM_31>
    __assert_fail ("group_sel >= 0 && group_sel < _group_size", "arbiters/tree_arb.cpp", 102, &__PRETTY_FUNCTION__);

  }
  bb_15 (preds = {bb_13 }, succs = {bb_17 bb_16 })
  {
    <bb 15>:
    _39 = group_32 * _38;
    _40 = _39 + _51;
    # .MEM_41 = VDEF <.MEM_31>
    this_7(D)->D.29196._selected = _40;
    if (_40 < 0)
      goto <bb 17>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 bb_18 })
  {
    <bb 16>:
    # VUSE <.MEM_41>
    _42 = this_7(D)->D.29196._size;
    if (_40 >= _42)
      goto <bb 17>;
    else
      goto <bb 18>;

  }
  bb_17 (preds = {bb_16 bb_15 }, succs = {})
  {
    <bb 17>:
    # .MEM_48 = VDEF <.MEM_41>
    __assert_fail ("_selected >= 0 && _selected < _size", "arbiters/tree_arb.cpp", 104, &__PRETTY_FUNCTION__);

  }
  bb_18 (preds = {bb_16 }, succs = {bb_19 })
  {
    <bb 18>:
    _43 = &this_7(D)->D.29196;
    # .MEM_46 = VDEF <.MEM_41>
    _47 = Arbiter::Arbitrate (_43, id_44(D), pri_45(D));

  }
  bb_19 (preds = {bb_2 bb_18 }, succs = {bb_21 })
  {
    <bb 19>:
    # _2 = PHI <-1(2), _47(18)>
    # .MEM_5 = PHI <.MEM_6(D)(2), .MEM_46(18)>

  }
  bb_21 (preds = {bb_19 }, succs = {bb_1 })
  {
    <bb 21>:
    # VUSE <.MEM_5>
    return _2;

  }
  loop_1 (header = 6, latch = 9, niter = , upper_bound = 2147483647)
  {
    bb_6 (preds = {bb_5 bb_9 }, succs = {bb_7 bb_8 })
    {
      <bb 6>:
      # i_72 = PHI <0(5), i_27(9)>
      # .MEM_71 = PHI <.MEM_6(D)(5), .MEM_4(9)>
      # _69 = PHI <_78(5), prephitmp_111(9)>
      # prephitmp_107 = PHI <_76(5), prephitmp_113(9)>
      # prephitmp_108 = PHI <_78(5), prephitmp_111(9)>
      # DEBUG i => i_72
      # DEBUG D#27 => &this_7(D)->_group_arbiters
      # DEBUG D#14 => D#27
      # DEBUG this => D#14
      # DEBUG this => D#14
      _11 = (long unsigned int) i_72;
      # DEBUG D#25 => &this_7(D)->_group_reqs
      # VUSE <.MEM_71>
      _56 = MEM[(int * *)this_7(D) + 176B];
      # DEBUG D#22 => D#25
      # DEBUG __n => _11
      # DEBUG this => D#22
      _57 = _11 * 4;
      _58 = _56 + _57;
      # VUSE <.MEM_71>
      _13 = *_58;
      if (_13 != 0)
        goto <bb 7>;
      else
        goto <bb 8>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_8 })
    {
      <bb 7>:
      # DEBUG D#26 => &this_7(D)->_group_arbiters
      # DEBUG D#13 => D#26
      # DEBUG __n => _11
      # DEBUG this => D#13
      _59 = _11 * 8;
      _60 = _69 + _59;
      # VUSE <.MEM_71>
      _15 = *_60;
      # VUSE <.MEM_71>
      _16 = _15->D.27639._vptr.Module;
      # VUSE <.MEM_71>
      _17 = MEM[(int (*__vtbl_ptr_type) () *)_16 + 48B];
      # .MEM_18 = VDEF <.MEM_71>
      OBJ_TYPE_REF(_17;(struct Arbiter)_15->6) (_15, &group_id, &group_pri);
      # VUSE <.MEM_18>
      _19 = this_7(D)->_global_arbiter;
      # VUSE <.MEM_18>
      _20 = _19->D.27639._vptr.Module;
      # VUSE <.MEM_18>
      _21 = MEM[(int (*__vtbl_ptr_type) () *)_20 + 32B];
      # VUSE <.MEM_18>
      group_pri.76_22 = group_pri;
      # VUSE <.MEM_18>
      group_id.77_23 = group_id;
      # .MEM_24 = VDEF <.MEM_18>
      OBJ_TYPE_REF(_21;(struct Arbiter)_19->4) (_19, i_72, group_id.77_23, group_pri.76_22);
      # .MEM_25 = VDEF <.MEM_24>
      group_id ={v} {CLOBBER};
      # .MEM_26 = VDEF <.MEM_25>
      group_pri ={v} {CLOBBER};
      # VUSE <.MEM_26>
      pretmp_110 = MEM[(struct Arbiter * * *)this_7(D) + 144B];
      # VUSE <.MEM_26>
      pretmp_112 = MEM[(struct Arbiter * * *)this_7(D) + 152B];

    }
    bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_20 })
    {
      <bb 8>:
      # .MEM_4 = PHI <.MEM_71(6), .MEM_26(7)>
      # prephitmp_111 = PHI <prephitmp_108(6), pretmp_110(7)>
      # prephitmp_113 = PHI <prephitmp_107(6), pretmp_112(7)>
      i_27 = i_72 + 1;
      # DEBUG i => i_27
      # DEBUG i => i_27
      # DEBUG D#27 => &this_7(D)->_group_arbiters
      # DEBUG D#14 => D#27
      # DEBUG D#14 => D#27
      # DEBUG this => D#14
      # DEBUG this => D#14
      _35 = (long int) prephitmp_113;
      _14 = (long int) prephitmp_111;
      _12 = _35 - _14;
      _9 = _12 /[ex] 8;
      _10 = (int) _9;
      if (_10 > i_27)
        goto <bb 9>;
      else
        goto <bb 20>;

    }
    bb_9 (preds = {bb_8 }, succs = {bb_6 })
    {
      <bb 9>:
      goto <bb 6>;

    }
  }
}

Pass statistics:
----------------

virtual int TreeArbiter::Arbitrate(int*, int*) (struct TreeArbiterD.27650 * const thisD.30414, intD.9 * idD.30411, intD.9 * priD.30412)
{
  intD.9 group_priD.30418;
  intD.9 group_idD.30417;
  intD.9 iD.30416;
  static const charD.10 _ZZN11TreeArbiter9ArbitrateEPiS0_E19__PRETTY_FUNCTION__D.30420[47] = "virtual int TreeArbiter::Arbitrate(int*, int*)";
  intD.9 groupD.30419;
  intD.9 _2;
  intD.9 _8;
  long intD.12 _9;
  intD.9 _10;
  long unsigned intD.14 _11;
  long intD.12 _12;
  intD.9 _13;
  long intD.12 _14;
  struct ArbiterD.26830 * _15;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _16;
  intD.9 (*__vtbl_ptr_typeD.2760) () _17;
  struct ArbiterD.26830 * _19;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _20;
  intD.9 (*__vtbl_ptr_typeD.2760) () _21;
  intD.9 group_pri.76_22;
  intD.9 group_id.77_23;
  struct ArbiterD.26830 * _28;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _29;
  intD.9 (*__vtbl_ptr_typeD.2760) () _30;
  intD.9 _33;
  long unsigned intD.14 _34;
  long intD.12 _35;
  struct ArbiterD.26830 * _36;
  intD.9 _38;
  intD.9 _39;
  intD.9 _40;
  intD.9 _42;
  struct ArbiterD.26830 * _43;
  intD.9 _47;
  const intD.9 _51;
  struct ArbiterD.26830 * * const _54;
  struct ArbiterD.26830 * * const _55;
  intD.9 * _56;
  long unsigned intD.14 _57;
  intD.9 & _58;
  long unsigned intD.14 _59;
  struct ArbiterD.26830 * & _60;
  long intD.12 _61;
  long intD.12 _62;
  long intD.12 _63;
  long intD.12 _64;
  long unsigned intD.14 _65;
  struct ArbiterD.26830 * & _66;
  struct ArbiterD.26830 * * const _69;
  intD.9 _70;
  long intD.12 _73;
  long intD.12 _74;
  long intD.12 _75;
  struct ArbiterD.26830 * * const _76;
  struct ArbiterD.26830 * * const _78;
  long intD.12 _79;
  struct ArbiterD.26830 * * const prephitmp_107;
  struct ArbiterD.26830 * * const prephitmp_108;
  struct ArbiterD.26830 * * const pretmp_110;
  struct ArbiterD.26830 * * const prephitmp_111;
  struct ArbiterD.26830 * * const pretmp_112;
  struct ArbiterD.26830 * * const prephitmp_113;

;;   basic block 2, loop depth 0, count 0, freq 938, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_6(D)>
  _8 = this_7(D)->D.29196._num_reqsD.27589;
  if (_8 == 0)
    goto <bb 19>;
  else
    goto <bb 3>;
;;    succ:       19 [4.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [96.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [96.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG iD.30416 => 0
  # DEBUG D#27ptD.0 => &this_7(D)->_group_arbitersD.28399
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _78 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # DEBUG D#14ptD.0 => D#27ptD.0
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _76 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
  # DEBUG D#14ptD.0 => D#27ptD.0
  # DEBUG thisD.34145 => D#14ptD.0
  # DEBUG thisD.34144 => D#14ptD.0
  _79 = (long intD.12) _76;
  _74 = (long intD.12) _78;
  _75 = _79 - _74;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _73 = _75 /[ex] 8;
  _70 = (intD.9) _73;
  if (_70 > 0)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU)
  # .MEM_109 = PHI <.MEM_6(D)(3), .MEM_106(20)>
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _28 = this_7(D)->_global_arbiterD.28400;
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _29 = _28->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _30 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_29 + 48B];
  # .MEM_31 = VDEF <.MEM_109>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  group_32 = OBJ_TYPE_REF(_30;(struct ArbiterD.26830)_28->6) (_28, 0B, 0B);
  # DEBUG groupD.30419 => group_32
  if (group_32 < 0)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       3 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_72 = PHI <0(5), i_27(9)>
  # .MEM_71 = PHI <.MEM_6(D)(5), .MEM_4(9)>
  # PT = nonlocal escaped 
  # _69 = PHI <_78(5), prephitmp_111(9)>
  # prephitmp_107 = PHI <_76(5), prephitmp_113(9)>
  # prephitmp_108 = PHI <_78(5), prephitmp_111(9)>
  # DEBUG iD.30416 => i_72
  # DEBUG D#27ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#27ptD.0
  # DEBUG thisD.34145 => D#14ptD.0
  # DEBUG thisD.34144 => D#14ptD.0
  # RANGE [0, 18446744073709551615]
  _11 = (long unsigned intD.14) i_72;
  # DEBUG D#25ptD.0 => &this_7(D)->_group_reqsD.29147
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _56 = MEM[(intD.9 * *)this_7(D) + 176B];
  # DEBUG D#22ptD.0 => D#25ptD.0
  # DEBUG __nD.34148 => _11
  # DEBUG thisD.34149 => D#22ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _57 = _11 * 4;
  # PT = nonlocal escaped 
  _58 = _56 + _57;
  # VUSE <.MEM_71>
  _13 = *_58;
  if (_13 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 2639, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#26ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#13ptD.0 => D#26ptD.0
  # DEBUG __nD.34152 => _11
  # DEBUG thisD.34153 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _59 = _11 * 8;
  # PT = nonlocal escaped 
  _60 = _69 + _59;
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _15 = *_60;
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _16 = _15->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_16 + 48B];
  # .MEM_18 = VDEF <.MEM_71>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  OBJ_TYPE_REF(_17;(struct ArbiterD.26830)_15->6) (_15, &group_idD.30417, &group_priD.30418);
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _19 = this_7(D)->_global_arbiterD.28400;
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _20 = _19->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _21 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_20 + 32B];
  # VUSE <.MEM_18>
  group_pri.76_22 = group_priD.30418;
  # VUSE <.MEM_18>
  group_id.77_23 = group_idD.30417;
  # .MEM_24 = VDEF <.MEM_18>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  OBJ_TYPE_REF(_21;(struct ArbiterD.26830)_19->4) (_19, i_72, group_id.77_23, group_pri.76_22);
  # .MEM_25 = VDEF <.MEM_24>
  group_idD.30417 ={v} {CLOBBER};
  # .MEM_26 = VDEF <.MEM_25>
  group_priD.30418 ={v} {CLOBBER};
  # VUSE <.MEM_26>
  pretmp_110 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # VUSE <.MEM_26>
  pretmp_112 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 7, next block 20, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_71(6), .MEM_26(7)>
  # PT = nonlocal escaped 
  # prephitmp_111 = PHI <prephitmp_108(6), pretmp_110(7)>
  # PT = nonlocal escaped 
  # prephitmp_113 = PHI <prephitmp_107(6), pretmp_112(7)>
  i_27 = i_72 + 1;
  # DEBUG iD.30416 => i_27
  # DEBUG iD.30416 => i_27
  # DEBUG D#27ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#27ptD.0
  # DEBUG D#14ptD.0 => D#27ptD.0
  # DEBUG thisD.34145 => D#14ptD.0
  # DEBUG thisD.34144 => D#14ptD.0
  _35 = (long intD.12) prephitmp_113;
  _14 = (long intD.12) prephitmp_111;
  _12 = _35 - _14;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _9 = _12 /[ex] 8;
  _10 = (intD.9) _9;
  if (_10 > i_27)
    goto <bb 9>;
  else
    goto <bb 20>;
;;    succ:       9 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_106 = PHI <.MEM_4(8)>
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU)

;;   basic block 9, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 20, next block 10, flags: (NEW)
;;    pred:       8 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#28ptD.0 => &this_7(D)->_group_arbitersD.28399
  # VUSE <.MEM_31>
  # PT = nonlocal escaped 
  _54 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # DEBUG D#14ptD.0 => D#28ptD.0
  # VUSE <.MEM_31>
  # PT = nonlocal escaped 
  _55 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
  # DEBUG D#14ptD.0 => D#28ptD.0
  # DEBUG thisD.34158 => D#14ptD.0
  # DEBUG thisD.34157 => D#14ptD.0
  _61 = (long intD.12) _55;
  _62 = (long intD.12) _54;
  _63 = _61 - _62;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _64 = _63 /[ex] 8;
  _33 = (intD.9) _64;
  if (group_32 >= _33)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_50 = VDEF <.MEM_31>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  __assert_failD.16699 ("group >= 0 && group < (int)_group_arbiters.size()", "arbiters/tree_arb.cpp", 100, &_ZZN11TreeArbiter9ArbitrateEPiS0_E19__PRETTY_FUNCTION__D.30420);
;;    succ:      

;;   basic block 12, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _34 = (long unsigned intD.14) group_32;
  # DEBUG D#29ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#13ptD.0 => D#29ptD.0
  # DEBUG __nD.34164 => _34
  # DEBUG thisD.34165 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _65 = _34 * 8;
  # PT = nonlocal escaped 
  _66 = _54 + _65;
  # VUSE <.MEM_31>
  # PT = nonlocal escaped 
  _36 = *_66;
  # VUSE <.MEM_31>
  _51 = MEM[(intD.9 *)_36 + 124B];
  # DEBUG D#12ptD.0 => _36
  # DEBUG thisD.34161 => D#12ptD.0
  # DEBUG group_selD.30421 => NULL
  if (_51 < 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_31>
  _38 = this_7(D)->_group_sizeD.27652;
  if (_38 <= _51)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_49 = VDEF <.MEM_31>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  __assert_failD.16699 ("group_sel >= 0 && group_sel < _group_size", "arbiters/tree_arb.cpp", 102, &_ZZN11TreeArbiter9ArbitrateEPiS0_E19__PRETTY_FUNCTION__D.30420);
;;    succ:      

;;   basic block 15, loop depth 0, count 0, freq 899, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  _39 = group_32 * _38;
  _40 = _39 + _51;
  # .MEM_41 = VDEF <.MEM_31>
  this_7(D)->D.29196._selectedD.27586 = _40;
  if (_40 < 0)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 898, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_41>
  _42 = this_7(D)->D.29196._sizeD.27585;
  if (_40 >= _42)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_48 = VDEF <.MEM_41>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  __assert_failD.16699 ("_selected >= 0 && _selected < _size", "arbiters/tree_arb.cpp", 104, &_ZZN11TreeArbiter9ArbitrateEPiS0_E19__PRETTY_FUNCTION__D.30420);
;;    succ:      

;;   basic block 18, loop depth 0, count 0, freq 898, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _43 = &this_7(D)->D.29196;
  # .MEM_46 = VDEF <.MEM_41>
  # USE = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  # CLB = nonlocal null { D.30417 D.30418 D.30420 } (nonlocal, escaped)
  _47 = _ZN7Arbiter9ArbitrateEPiS0_D.27606 (_43, id_44(D), pri_45(D));
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 935, maybe hot
;;    prev block 18, next block 21, flags: (NEW, REACHABLE)
;;    pred:       2 [4.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _2 = PHI <-1(2), _47(18)>
  # .MEM_5 = PHI <.MEM_6(D)(2), .MEM_46(18)>
;;    succ:       21 [100.0%]  (FALLTHRU)

;;   basic block 21, loop depth 0, count 0, freq 935, maybe hot
;;    prev block 19, next block 1, flags: (NEW)
;;    pred:       19 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_5>
  return _2;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual void TreeArbiter::Clear() (_ZN11TreeArbiter5ClearEv, funcdef_no=1409, decl_uid=29171, cgraph_uid=388, symbol_order=389)


Pass statistics:
----------------

virtual void TreeArbiter::Clear() (struct TreeArbiterD.27650 * const thisD.30425)
{
  intD.9 iD.37616;
  intD.9 iD.30427;
  intD.9 _5;
  struct ArbiterD.26830 * * const _6;
  struct ArbiterD.26830 * * const _7;
  struct ArbiterD.26830 * * const _8;
  long intD.12 _9;
  long intD.12 _10;
  long intD.12 _11;
  long intD.12 _12;
  intD.9 _13;
  long unsigned intD.14 _15;
  long unsigned intD.14 _16;
  struct ArbiterD.26830 * & _17;
  struct ArbiterD.26830 * _18;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _19;
  intD.9 (*__vtbl_ptr_typeD.2760) () _20;
  intD.9 * _21;
  long unsigned intD.14 _22;
  intD.9 & _23;
  struct ArbiterD.26830 * _25;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _26;
  intD.9 (*__vtbl_ptr_typeD.2760) () _27;
  struct ArbiterD.26830 * _28;
  struct ArbiterD.26830 * * const _36;
  long intD.12 _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  intD.9 _41;
  struct ArbiterD.26830 * * const _42;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  _5 = this_4(D)->D.29196._num_reqsD.27589;
  if (_5 == 0)
    goto <bb 8>;
  else
    goto <bb 3>;
;;    succ:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG iD.37616 => 0
  # DEBUG D#32ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _6 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#14ptD.0 => D#32ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _36 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 152B];
  # DEBUG D#14ptD.0 => D#32ptD.0
  # DEBUG thisD.37621 => D#14ptD.0
  # DEBUG thisD.37622 => D#14ptD.0
  _37 = (long intD.12) _36;
  _38 = (long intD.12) _6;
  _39 = _37 - _38;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _40 = _39 /[ex] 8;
  _41 = (intD.9) _40;
  if (_41 > 0)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_3(D)(3), .MEM_30(6)>
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _25 = this_4(D)->_global_arbiterD.28400;
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _26 = _25->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _27 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_26 + 56B];
  # .MEM_31 = VDEF <.MEM_57>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  OBJ_TYPE_REF(_27;(struct ArbiterD.26830)_25->7) (_25);
  # PT = nonlocal 
  _28 = &this_4(D)->D.29196;
  # .MEM_32 = VDEF <.MEM_31>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZN7Arbiter5ClearEvD.27608 (_28);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       3 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # _42 = PHI <_6(5), _7(7)>
  # i_43 = PHI <0(5), i_24(7)>
  # .MEM_44 = PHI <.MEM_3(D)(5), .MEM_30(7)>
  # DEBUG iD.37616 => i_43
  # DEBUG D#32ptD.0 => &this_4(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#32ptD.0
  # DEBUG thisD.37621 => D#14ptD.0
  # DEBUG thisD.37622 => D#14ptD.0
  # RANGE [0, 18446744073709551615]
  _15 = (long unsigned intD.14) i_43;
  # DEBUG D#30ptD.0 => &this_4(D)->_group_arbitersD.28399
  # DEBUG D#13ptD.0 => D#30ptD.0
  # DEBUG __nD.37618 => _15
  # DEBUG thisD.37617 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _16 = _15 * 8;
  # PT = nonlocal escaped 
  _17 = _42 + _16;
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _18 = *_17;
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _19 = _18->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _20 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_19 + 56B];
  # .MEM_1 = VDEF <.MEM_44>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  OBJ_TYPE_REF(_20;(struct ArbiterD.26830)_18->7) (_18);
  # DEBUG D#31ptD.0 => &this_4(D)->_group_reqsD.29147
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _21 = MEM[(intD.9 * *)this_4(D) + 176B];
  # DEBUG D#22ptD.0 => D#31ptD.0
  # DEBUG __nD.37620 => _15
  # DEBUG thisD.37619 => D#22ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _22 = _15 * 4;
  # PT = nonlocal escaped 
  _23 = _21 + _22;
  # .MEM_30 = VDEF <.MEM_1>
  *_23 = 0;
  i_24 = i_43 + 1;
  # DEBUG iD.37616 => i_24
  # DEBUG iD.37616 => i_24
  # DEBUG D#32ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _7 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#14ptD.0 => D#32ptD.0
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _8 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 152B];
  # DEBUG D#14ptD.0 => D#32ptD.0
  # DEBUG thisD.37621 => D#14ptD.0
  # DEBUG thisD.37622 => D#14ptD.0
  _9 = (long intD.12) _8;
  _10 = (long intD.12) _7;
  _11 = _9 - _10;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _12 = _11 /[ex] 8;
  _13 = (intD.9) _12;
  if (_13 > i_24)
    goto <bb 7>;
  else
    goto <bb 4>;
;;    succ:       7 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 7, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_3(D)(2), .MEM_32(4)>
  # VUSE <.MEM_2>
  return;
;;    succ:       EXIT [100.0%] 

}



Updating SSA:
Registering new PHI nodes in block #6
Updating SSA information for statement *_23 = 0;
Updating SSA information for statement _7 = MEM[(struct Arbiter * * *)this_4(D) + 144B];
Updating SSA information for statement _8 = MEM[(struct Arbiter * * *)this_4(D) + 152B];
Registering new PHI nodes in block #7
Registering new PHI nodes in block #9

DFA Statistics for virtual void TreeArbiter::Clear()

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                             55        440b
DEF operands                             29        232b
VUSE operands                            17        136b
VDEF operands                             4         32b
PHI nodes                                 6        624b
PHI arguments                            11        528b
---------------------------------------------------------
Total memory used by DFA/SSA data                 1992b
---------------------------------------------------------

Average number of arguments per PHI node: 1.8 (max: 2)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_45 -> { .MEM_30 }
Incremental SSA update started at block: 6
Number of blocks in CFG: 10
Number of blocks to update: 3 ( 30%)
Affected blocks: 6 7 9


Creating dr for this_4(D)->D.29196._num_reqs
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1088
	Access function 1: 0
Creating dr for MEM[(struct Arbiter * * *)this_4(D) + 144B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_4(D) + 144B]
Creating dr for MEM[(struct Arbiter * * *)this_4(D) + 152B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_4(D) + 152B]
Creating dr for *_17
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_17
Creating dr for *_17
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_17
Creating dr for _18->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
	Access function 0: 0
	Access function 1: 0
Creating dr for _18->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
Creating dr for *_17
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_17
Creating dr for *_17
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_17
Creating dr for _18->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
	Access function 0: 0
	Access function 1: 0
Creating dr for _18->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
Creating dr for *_17
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_17
Creating dr for *_17
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_17
Creating dr for _18->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
	Access function 0: 0
	Access function 1: 0
Creating dr for _18->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
Creating dr for *_17
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_17
Creating dr for *_17
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_17
Creating dr for _18->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
	Access function 0: 0
	Access function 1: 0
Creating dr for _18->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B]
Creating dr for this_4(D)->_global_arbiter
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1344
Creating dr for _25->D.27639._vptr.Module
analyze_innermost: success.
	base_address: _25
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_25
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_26 + 56B]
analyze_innermost: success.
	base_address: _26
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_26 + 56B]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:11, LOOPS:1, CONDITIONS:3, STMTS:63)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_8 bb_3 })
  {
    <bb 2>:
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.29196._num_reqs;
    if (_5 == 0)
      goto <bb 8>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # DEBUG i => 0
    # DEBUG D#32 => &this_4(D)->_group_arbiters
    # VUSE <.MEM_3(D)>
    _6 = MEM[(struct Arbiter * * *)this_4(D) + 144B];
    # DEBUG D#14 => D#32
    # VUSE <.MEM_3(D)>
    _36 = MEM[(struct Arbiter * * *)this_4(D) + 152B];
    # DEBUG D#14 => D#32
    # DEBUG this => D#14
    # DEBUG this => D#14
    _37 = (long int) _36;
    _38 = (long int) _6;
    _39 = _37 - _38;
    _40 = _39 /[ex] 8;
    _41 = (int) _40;
    if (_41 > 0)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 bb_9 }, succs = {bb_8 })
  {
    <bb 4>:
    # .MEM_57 = PHI <.MEM_3(D)(3), .MEM_45(9)>
    # VUSE <.MEM_57>
    _25 = this_4(D)->_global_arbiter;
    # VUSE <.MEM_57>
    _26 = _25->D.27639._vptr.Module;
    # VUSE <.MEM_57>
    _27 = MEM[(int (*__vtbl_ptr_type) () *)_26 + 56B];
    # .MEM_31 = VDEF <.MEM_57>
    OBJ_TYPE_REF(_27;(struct Arbiter)_25->7) (_25);
    _28 = &this_4(D)->D.29196;
    # .MEM_32 = VDEF <.MEM_31>
    Arbiter::Clear (_28);
    goto <bb 8>;

  }
  bb_5 (preds = {bb_3 }, succs = {bb_6 })
  {
    <bb 5>:

  }
  bb_9 (preds = {bb_6 }, succs = {bb_4 })
  {
    <bb 9>:
    # .MEM_45 = PHI <.MEM_30(6)>
    goto <bb 4>;

  }
  bb_8 (preds = {bb_2 bb_4 }, succs = {bb_10 })
  {
    <bb 8>:
    # .MEM_2 = PHI <.MEM_3(D)(2), .MEM_32(4)>

  }
  bb_10 (preds = {bb_8 }, succs = {bb_1 })
  {
    <bb 10>:
    # VUSE <.MEM_2>
    return;

  }
  loop_2 (header = 6, latch = 7, niter = , upper_bound = 2147483647)
  {
    bb_6 (preds = {bb_5 bb_7 }, succs = {bb_7 bb_9 })
    {
      <bb 6>:
      # _42 = PHI <_6(5), _7(7)>
      # i_43 = PHI <0(5), i_24(7)>
      # .MEM_44 = PHI <.MEM_3(D)(5), .MEM_30(7)>
      # DEBUG i => i_43
      # DEBUG D#32 => &this_4(D)->_group_arbiters
      # DEBUG D#14 => D#32
      # DEBUG this => D#14
      # DEBUG this => D#14
      _15 = (long unsigned int) i_43;
      # DEBUG D#30 => &this_4(D)->_group_arbiters
      # DEBUG D#13 => D#30
      # DEBUG __n => _15
      # DEBUG this => D#13
      _16 = _15 * 8;
      _17 = _42 + _16;
      # VUSE <.MEM_44>
      _18 = *_17;
      # VUSE <.MEM_44>
      _19 = _18->D.27639._vptr.Module;
      # VUSE <.MEM_44>
      _20 = MEM[(int (*__vtbl_ptr_type) () *)_19 + 56B];
      # .MEM_1 = VDEF <.MEM_44>
      OBJ_TYPE_REF(_20;(struct Arbiter)_18->7) (_18);
      # DEBUG D#31 => &this_4(D)->_group_reqs
      # VUSE <.MEM_1>
      _21 = MEM[(int * *)this_4(D) + 176B];
      # DEBUG D#22 => D#31
      # DEBUG __n => _15
      # DEBUG this => D#22
      _22 = _15 * 4;
      _23 = _21 + _22;
      # .MEM_30 = VDEF <.MEM_1>
      *_23 = 0;
      i_24 = i_43 + 1;
      # DEBUG i => i_24
      # DEBUG i => i_24
      # DEBUG D#32 => &this_4(D)->_group_arbiters
      # VUSE <.MEM_30>
      _7 = MEM[(struct Arbiter * * *)this_4(D) + 144B];
      # DEBUG D#14 => D#32
      # VUSE <.MEM_30>
      _8 = MEM[(struct Arbiter * * *)this_4(D) + 152B];
      # DEBUG D#14 => D#32
      # DEBUG this => D#14
      # DEBUG this => D#14
      _9 = (long int) _8;
      _10 = (long int) _7;
      _11 = _9 - _10;
      _12 = _11 /[ex] 8;
      _13 = (int) _12;
      if (_13 > i_24)
        goto <bb 7>;
      else
        goto <bb 9>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_6 })
    {
      <bb 7>:
      goto <bb 6>;

    }
  }
}

Pass statistics:
----------------

virtual void TreeArbiter::Clear() (struct TreeArbiterD.27650 * const thisD.30425)
{
  intD.9 iD.37616;
  intD.9 iD.30427;
  intD.9 _5;
  struct ArbiterD.26830 * * const _6;
  struct ArbiterD.26830 * * const _7;
  struct ArbiterD.26830 * * const _8;
  long intD.12 _9;
  long intD.12 _10;
  long intD.12 _11;
  long intD.12 _12;
  intD.9 _13;
  long unsigned intD.14 _15;
  long unsigned intD.14 _16;
  struct ArbiterD.26830 * & _17;
  struct ArbiterD.26830 * _18;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _19;
  intD.9 (*__vtbl_ptr_typeD.2760) () _20;
  intD.9 * _21;
  long unsigned intD.14 _22;
  intD.9 & _23;
  struct ArbiterD.26830 * _25;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _26;
  intD.9 (*__vtbl_ptr_typeD.2760) () _27;
  struct ArbiterD.26830 * _28;
  struct ArbiterD.26830 * * const _36;
  long intD.12 _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  intD.9 _41;
  struct ArbiterD.26830 * * const _42;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  _5 = this_4(D)->D.29196._num_reqsD.27589;
  if (_5 == 0)
    goto <bb 8>;
  else
    goto <bb 3>;
;;    succ:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG iD.37616 => 0
  # DEBUG D#32ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _6 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#14ptD.0 => D#32ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _36 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 152B];
  # DEBUG D#14ptD.0 => D#32ptD.0
  # DEBUG thisD.37621 => D#14ptD.0
  # DEBUG thisD.37622 => D#14ptD.0
  _37 = (long intD.12) _36;
  _38 = (long intD.12) _6;
  _39 = _37 - _38;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _40 = _39 /[ex] 8;
  _41 = (intD.9) _40;
  if (_41 > 0)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU)
  # .MEM_57 = PHI <.MEM_3(D)(3), .MEM_45(9)>
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _25 = this_4(D)->_global_arbiterD.28400;
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _26 = _25->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_57>
  # PT = nonlocal escaped 
  _27 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_26 + 56B];
  # .MEM_31 = VDEF <.MEM_57>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  OBJ_TYPE_REF(_27;(struct ArbiterD.26830)_25->7) (_25);
  # PT = nonlocal 
  _28 = &this_4(D)->D.29196;
  # .MEM_32 = VDEF <.MEM_31>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZN7Arbiter5ClearEvD.27608 (_28);
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       3 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 5, next block 9, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # _42 = PHI <_6(5), _7(7)>
  # i_43 = PHI <0(5), i_24(7)>
  # .MEM_44 = PHI <.MEM_3(D)(5), .MEM_30(7)>
  # DEBUG iD.37616 => i_43
  # DEBUG D#32ptD.0 => &this_4(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#32ptD.0
  # DEBUG thisD.37621 => D#14ptD.0
  # DEBUG thisD.37622 => D#14ptD.0
  # RANGE [0, 18446744073709551615]
  _15 = (long unsigned intD.14) i_43;
  # DEBUG D#30ptD.0 => &this_4(D)->_group_arbitersD.28399
  # DEBUG D#13ptD.0 => D#30ptD.0
  # DEBUG __nD.37618 => _15
  # DEBUG thisD.37617 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _16 = _15 * 8;
  # PT = nonlocal escaped 
  _17 = _42 + _16;
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _18 = *_17;
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _19 = _18->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_44>
  # PT = nonlocal escaped 
  _20 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_19 + 56B];
  # .MEM_1 = VDEF <.MEM_44>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  OBJ_TYPE_REF(_20;(struct ArbiterD.26830)_18->7) (_18);
  # DEBUG D#31ptD.0 => &this_4(D)->_group_reqsD.29147
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _21 = MEM[(intD.9 * *)this_4(D) + 176B];
  # DEBUG D#22ptD.0 => D#31ptD.0
  # DEBUG __nD.37620 => _15
  # DEBUG thisD.37619 => D#22ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _22 = _15 * 4;
  # PT = nonlocal escaped 
  _23 = _21 + _22;
  # .MEM_30 = VDEF <.MEM_1>
  *_23 = 0;
  i_24 = i_43 + 1;
  # DEBUG iD.37616 => i_24
  # DEBUG iD.37616 => i_24
  # DEBUG D#32ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _7 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#14ptD.0 => D#32ptD.0
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _8 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 152B];
  # DEBUG D#14ptD.0 => D#32ptD.0
  # DEBUG thisD.37621 => D#14ptD.0
  # DEBUG thisD.37622 => D#14ptD.0
  _9 = (long intD.12) _8;
  _10 = (long intD.12) _7;
  _11 = _9 - _10;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _12 = _11 /[ex] 8;
  _13 = (intD.9) _12;
  if (_13 > i_24)
    goto <bb 7>;
  else
    goto <bb 9>;
;;    succ:       7 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 7, flags: (NEW)
;;    pred:       6 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_45 = PHI <.MEM_30(6)>
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU)

;;   basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 9, next block 8, flags: (NEW)
;;    pred:       6 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 7, next block 10, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_3(D)(2), .MEM_32(4)>
;;    succ:       10 [100.0%]  (FALLTHRU)

;;   basic block 10, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 8, next block 1, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_2>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual void TreeArbiter::PrintState() const (_ZNK11TreeArbiter10PrintStateEv, funcdef_no=1405, decl_uid=29158, cgraph_uid=384, symbol_order=385)


Pass statistics:
----------------

virtual void TreeArbiter::PrintState() const (const struct TreeArbiterD.27650 * const thisD.30394)
{
  char_typeD.20165 D.37672;
  charD.10 __cD.37671;
  char_typeD.20165 D.37669;
  charD.10 __cD.37668;
  char_typeD.23244 D.37666;
  struct basic_ostreamD.9736 & D.37660;
  char_typeD.20165 D.37657;
  charD.10 __cD.37656;
  char_typeD.20165 D.37654;
  charD.10 __cD.37653;
  char_typeD.23244 D.37651;
  struct basic_ostreamD.9736 & D.37645;
  intD.9 iD.30396;
  intD.9 pretmp_1;
  intD.9 pretmp_2;
  long intD.12 _5;
  intD.9 _6;
  struct basic_ostreamD.9736 & _8;
  long unsigned intD.14 _9;
  struct ArbiterD.26830 * _10;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _11;
  intD.9 (*__vtbl_ptr_typeD.2760) () _12;
  struct ArbiterD.26830 * _15;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _16;
  intD.9 (*__vtbl_ptr_typeD.2760) () _17;
  struct ArbiterD.26830 * * const _19;
  struct ArbiterD.26830 * * const _20;
  struct ArbiterD.26830 * * const _21;
  long intD.12 _22;
  long intD.12 _23;
  long intD.12 _24;
  long unsigned intD.14 _25;
  struct ArbiterD.26830 * const & _26;
  const struct __ctype_typeD.23249 * _29;
  const struct __ctype_typeD.23249 * _31;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _32;
  long intD.12 _33;
  sizetype _34;
  struct basic_iosD.9730 * _35;
  struct basic_ostreamD.9736 & _38;
  intD.9 prephitmp_39;
  charD.10 _40;
  char_typeD.20165 _43;
  long intD.12 _45;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _48;
  intD.9 (*__vtbl_ptr_typeD.2760) () _49;
  intD.9 _51;
  voidD.45 * PROF_53;
  char_typeD.20165 _55;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _58;
  long intD.12 _59;
  sizetype _60;
  struct basic_iosD.9730 * _61;
  intD.9 prephitmp_62;
  struct basic_ostreamD.9736 & _64;
  charD.10 _66;
  char_typeD.20165 _69;
  intD.9 pretmp_71;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _74;
  intD.9 (*__vtbl_ptr_typeD.2760) () _75;
  long intD.12 _77;
  long intD.12 _78;
  voidD.45 * PROF_79;
  char_typeD.20165 _81;
  long intD.12 _84;
  struct ArbiterD.26830 * * const _89;
  struct ArbiterD.26830 * * const _90;
  intD.9 pretmp_99;

;;   basic block 2, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG iD.30396 => 0
  # DEBUG iD.30396 => 0
  # DEBUG D#21ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _89 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#14ptD.0 => D#21ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _90 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 152B];
  # DEBUG D#14ptD.0 => D#21ptD.0
  # DEBUG thisD.34100 => D#14ptD.0
  # DEBUG thisD.34099 => D#14ptD.0
  _77 = (long intD.12) _90;
  _45 = (long intD.12) _89;
  _84 = _77 - _45;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _78 = _84 /[ex] 8;
  _51 = (intD.9) _78;
  if (_51 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_3(D)(2), .MEM_13(11)>
  # DEBUG __outD.34120 => &_ZSt4coutD.26000
  # DEBUG __sD.34121 => "Global arbiter:"
  # DEBUG __sD.34122 => "Global arbiter:"
  # .MEM_30 = VDEF <.MEM_103>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (&_ZSt4coutD.26000, "Global arbiter:", 15);
  # DEBUG thisD.34117 => &_ZSt4coutD.26000
  # DEBUG __pfD.34118 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.37658 => &_ZSt4coutD.26000
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _58 = _ZSt4coutD.26000._vptr.basic_ostreamD.24032;
  # VUSE <.MEM_30>
  _59 = MEM[(long intD.12 *)_58 + -24B];
  # RANGE [0, 18446744073709551615]
  _60 = (sizetype) _59;
  # PT = { D.26000 } (nonlocal, escaped)
  _61 = &_ZSt4coutD.26000 + _60;
  # DEBUG thisD.37661 => _61
  # DEBUG __cD.37662 => 10
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _31 = MEM[(const struct basic_iosD.9730 *)_61]._M_ctypeD.23256;
  # DEBUG __fD.37663 => _31
  if (_31 == 0B)
    goto <bb 6>;
  else
    goto <bb 13>;
;;    succ:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 823, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_36 = PHI <0(4), i_14(12)>
  # .MEM_93 = PHI <.MEM_3(D)(4), .MEM_13(12)>
  # DEBUG iD.30396 => i_36
  # DEBUG D#21ptD.0 => &this_4(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#21ptD.0
  # DEBUG thisD.34100 => D#14ptD.0
  # DEBUG thisD.34099 => D#14ptD.0
  # DEBUG __outD.34113 => &_ZSt4coutD.26000
  # DEBUG __sD.34114 => "Group arbiter "
  # DEBUG __sD.34115 => "Group arbiter "
  # .MEM_27 = VDEF <.MEM_93>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (&_ZSt4coutD.26000, "Group arbiter ", 14);
  # .MEM_7 = VDEF <.MEM_27>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _8 = _ZNSolsEiD.23940 (&_ZSt4coutD.26000, i_36);
  # DEBUG __outD.34109 => _8
  # DEBUG __sD.34110 => ":"
  # DEBUG __sD.34111 => ":"
  # .MEM_28 = VDEF <.MEM_7>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (_8, ":", 1);
  # DEBUG thisD.34106 => _8
  # DEBUG __pfD.34107 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.37643 => _8
  # VUSE <.MEM_28>
  # PT = nonlocal escaped null { D.26000 } (nonlocal, escaped)
  _32 = _8->_vptr.basic_ostreamD.24032;
  # VUSE <.MEM_28>
  _33 = MEM[(long intD.12 *)_32 + -24B];
  # RANGE [0, 18446744073709551615]
  _34 = (sizetype) _33;
  # PT = nonlocal escaped 
  _35 = _8 + _34;
  # DEBUG thisD.37646 => _35
  # DEBUG __cD.37647 => 10
  # VUSE <.MEM_28>
  # PT = nonlocal escaped 
  _29 = MEM[(const struct basic_iosD.9730 *)_35]._M_ctypeD.23256;
  # DEBUG __fD.37648 => _29
  if (_29 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_65 = PHI <.MEM_28(5), .MEM_30(3)>
  # .MEM_94 = VDEF <.MEM_65>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2825 ();
;;    succ:      

;;   basic block 7, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.37650 => _29
  # DEBUG __cD.37649 => 10
  # VUSE <.MEM_28>
  _40 = MEM[(const struct ctypeD.10037 *)_29]._M_widen_okD.20171;
  if (_40 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_28>
  _43 = MEM[(const struct ctypeD.10037 *)_29]._M_widenD.20172[10];
  pretmp_71 = (intD.9) _43;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 3546, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.37652 => _29
  # DEBUG __cD.37653 => 10
  # .MEM_86 = VDEF <.MEM_28>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_29);
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _48 = MEM[(const struct ctypeD.10037 *)_29].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _49 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_48 + 48B];
  # PT = anything 
  PROF_53 = [obj_type_ref] OBJ_TYPE_REF(_49;(const struct ctypeD.10037)_29->6);
  if (PROF_53 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 703, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_87 = VDEF <.MEM_86>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _55 = OBJ_TYPE_REF(_49;(const struct ctypeD.10037)_29->6) (_29, 10);
  pretmp_99 = (intD.9) _55;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_52 = PHI <.MEM_28(8), .MEM_86(9), .MEM_87(10)>
  # RANGE [-128, 127]
  # prephitmp_62 = PHI <pretmp_71(8), 10(9), pretmp_99(10)>
  # .MEM_91 = VDEF <.MEM_52>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _38 = _ZNSo3putEcD.23967 (_8, prephitmp_62);
  # DEBUG __osD.37644 => _38
  # .MEM_92 = VDEF <.MEM_91>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_38);
  # RANGE [0, 18446744073709551615]
  _9 = (long unsigned intD.14) i_36;
  # DEBUG D#20ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _21 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#19ptD.0 => D#20ptD.0
  # DEBUG __nD.34103 => _9
  # DEBUG thisD.34104 => D#19ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _25 = _9 * 8;
  # PT = nonlocal escaped 
  _26 = _21 + _25;
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _10 = *_26;
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _11 = _10->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _12 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_11 + 24B];
  # .MEM_13 = VDEF <.MEM_92>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  OBJ_TYPE_REF(_12;(const struct ArbiterD.26830)_10->3) (_10);
  i_14 = i_36 + 1;
  # DEBUG iD.30396 => i_14
  # DEBUG iD.30396 => i_14
  # DEBUG D#21ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_13>
  # PT = nonlocal escaped 
  _19 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#14ptD.0 => D#21ptD.0
  # VUSE <.MEM_13>
  # PT = nonlocal escaped 
  _20 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 152B];
  # DEBUG D#14ptD.0 => D#21ptD.0
  # DEBUG thisD.34100 => D#14ptD.0
  # DEBUG thisD.34099 => D#14ptD.0
  _5 = (long intD.12) _20;
  _22 = (long intD.12) _19;
  _23 = _5 - _22;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _24 = _23 /[ex] 8;
  _6 = (intD.9) _24;
  if (_6 > i_14)
    goto <bb 12>;
  else
    goto <bb 3>;
;;    succ:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.37665 => _31
  # DEBUG __cD.37664 => 10
  # VUSE <.MEM_30>
  _66 = MEM[(const struct ctypeD.10037 *)_31]._M_widen_okD.20171;
  if (_66 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 549, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_30>
  _69 = MEM[(const struct ctypeD.10037 *)_31]._M_widenD.20172[10];
  pretmp_1 = (intD.9) _69;
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.37667 => _31
  # DEBUG __cD.37668 => 10
  # .MEM_95 = VDEF <.MEM_30>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_31);
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _74 = MEM[(const struct ctypeD.10037 *)_31].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _75 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_74 + 48B];
  # PT = anything 
  PROF_79 = [obj_type_ref] OBJ_TYPE_REF(_75;(const struct ctypeD.10037)_31->6);
  if (PROF_79 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [19.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 70, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [19.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_96 = VDEF <.MEM_95>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _81 = OBJ_TYPE_REF(_75;(const struct ctypeD.10037)_31->6) (_31, 10);
  pretmp_2 = (intD.9) _81;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 1, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_85 = PHI <.MEM_30(14), .MEM_95(15), .MEM_96(16)>
  # RANGE [-128, 127]
  # prephitmp_39 = PHI <pretmp_1(14), 10(15), pretmp_2(16)>
  # .MEM_100 = VDEF <.MEM_85>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _64 = _ZNSo3putEcD.23967 (&_ZSt4coutD.26000, prephitmp_39);
  # DEBUG __osD.37659 => _64
  # .MEM_101 = VDEF <.MEM_100>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_64);
  # VUSE <.MEM_101>
  # PT = nonlocal escaped 
  _15 = this_4(D)->_global_arbiterD.28400;
  # VUSE <.MEM_101>
  # PT = nonlocal escaped 
  _16 = _15->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_101>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_16 + 24B];
  # .MEM_18 = VDEF <.MEM_101>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  OBJ_TYPE_REF(_17;(const struct ArbiterD.26830)_15->3) (_15);
  # VUSE <.MEM_18>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct Arbiter * * *)this_4(D) + 144B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_4(D) + 144B]
Creating dr for MEM[(struct Arbiter * * *)this_4(D) + 152B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_4(D) + 152B]
Creating dr for MEM[(const struct ctype *)_29]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_29]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_29]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_29]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_29]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_29]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_29]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_29]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_31]._M_widen_ok
analyze_innermost: success.
	base_address: _31
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_31]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_31]._M_widen[10]
analyze_innermost: success.
	base_address: _31
	offset from base address: 0
	constant offset from base address: 67
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_31]
	Access function 0: 10
	Access function 1: 456

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:18, LOOPS:1, CONDITIONS:8, STMTS:127)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG i => 0
    # DEBUG i => 0
    # DEBUG D#21 => &this_4(D)->_group_arbiters
    # VUSE <.MEM_3(D)>
    _89 = MEM[(struct Arbiter * * *)this_4(D) + 144B];
    # DEBUG D#14 => D#21
    # VUSE <.MEM_3(D)>
    _90 = MEM[(struct Arbiter * * *)this_4(D) + 152B];
    # DEBUG D#14 => D#21
    # DEBUG this => D#14
    # DEBUG this => D#14
    _77 = (long int) _90;
    _45 = (long int) _89;
    _84 = _77 - _45;
    _78 = _84 /[ex] 8;
    _51 = (int) _78;
    if (_51 > 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_11 }, succs = {bb_6 bb_13 })
  {
    <bb 3>:
    # .MEM_103 = PHI <.MEM_3(D)(2), .MEM_13(11)>
    # DEBUG __out => &cout
    # DEBUG __s => "Global arbiter:"
    # DEBUG __s => "Global arbiter:"
    # .MEM_30 = VDEF <.MEM_103>
    std::__ostream_insert<char, std::char_traits<char> > (&cout, "Global arbiter:", 15);
    # DEBUG this => &cout
    # DEBUG __pf => endl
    # DEBUG __os => &cout
    # VUSE <.MEM_30>
    _58 = cout._vptr.basic_ostream;
    # VUSE <.MEM_30>
    _59 = MEM[(long int *)_58 + -24B];
    _60 = (sizetype) _59;
    _61 = &cout + _60;
    # DEBUG this => _61
    # DEBUG __c => 10
    # VUSE <.MEM_30>
    _31 = MEM[(const struct basic_ios *)_61]._M_ctype;
    # DEBUG __f => _31
    if (_31 == 0B)
      goto <bb 6>;
    else
      goto <bb 13>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_6 (preds = {bb_5 bb_3 }, succs = {})
  {
    <bb 6>:
    # .MEM_65 = PHI <.MEM_28(5), .MEM_30(3)>
    # .MEM_94 = VDEF <.MEM_65>
    std::__throw_bad_cast ();

  }
  bb_13 (preds = {bb_3 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # DEBUG this => _31
    # DEBUG __c => 10
    # VUSE <.MEM_30>
    _66 = MEM[(const struct ctype *)_31]._M_widen_ok;
    if (_66 != 0)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_17 })
  {
    <bb 14>:
    # VUSE <.MEM_30>
    _69 = MEM[(const struct ctype *)_31]._M_widen[10];
    pretmp_1 = (int) _69;
    goto <bb 17>;

  }
  bb_15 (preds = {bb_13 }, succs = {bb_17 bb_16 })
  {
    <bb 15>:
    # DEBUG this => _31
    # DEBUG __c => 10
    # .MEM_95 = VDEF <.MEM_30>
    std::ctype<char>::_M_widen_init (_31);
    # VUSE <.MEM_95>
    _74 = MEM[(const struct ctype *)_31].D.20312._vptr.facet;
    # VUSE <.MEM_95>
    _75 = MEM[(int (*__vtbl_ptr_type) () *)_74 + 48B];
    PROF_79 = [obj_type_ref] OBJ_TYPE_REF(_75;(const struct ctype)_31->6);
    if (PROF_79 == do_widen)
      goto <bb 17>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # .MEM_96 = VDEF <.MEM_95>
    _81 = OBJ_TYPE_REF(_75;(const struct ctype)_31->6) (_31, 10);
    pretmp_2 = (int) _81;

  }
  bb_17 (preds = {bb_14 bb_15 bb_16 }, succs = {bb_1 })
  {
    <bb 17>:
    # .MEM_85 = PHI <.MEM_30(14), .MEM_95(15), .MEM_96(16)>
    # prephitmp_39 = PHI <pretmp_1(14), 10(15), pretmp_2(16)>
    # .MEM_100 = VDEF <.MEM_85>
    _64 = std::basic_ostream<char>::put (&cout, prephitmp_39);
    # DEBUG __os => _64
    # .MEM_101 = VDEF <.MEM_100>
    std::basic_ostream<char>::flush (_64);
    # VUSE <.MEM_101>
    _15 = this_4(D)->_global_arbiter;
    # VUSE <.MEM_101>
    _16 = _15->D.27639._vptr.Module;
    # VUSE <.MEM_101>
    _17 = MEM[(int (*__vtbl_ptr_type) () *)_16 + 24B];
    # .MEM_18 = VDEF <.MEM_101>
    OBJ_TYPE_REF(_17;(const struct Arbiter)_15->3) (_15);
    # VUSE <.MEM_18>
    return;

  }
  loop_1 (header = 5, latch = 12, niter = , upper_bound = 2147483647)
  {
    bb_5 (preds = {bb_4 bb_12 }, succs = {bb_6 bb_7 })
    {
      <bb 5>:
      # i_36 = PHI <0(4), i_14(12)>
      # .MEM_93 = PHI <.MEM_3(D)(4), .MEM_13(12)>
      # DEBUG i => i_36
      # DEBUG D#21 => &this_4(D)->_group_arbiters
      # DEBUG D#14 => D#21
      # DEBUG this => D#14
      # DEBUG this => D#14
      # DEBUG __out => &cout
      # DEBUG __s => "Group arbiter "
      # DEBUG __s => "Group arbiter "
      # .MEM_27 = VDEF <.MEM_93>
      std::__ostream_insert<char, std::char_traits<char> > (&cout, "Group arbiter ", 14);
      # .MEM_7 = VDEF <.MEM_27>
      _8 = std::basic_ostream<char>::operator<< (&cout, i_36);
      # DEBUG __out => _8
      # DEBUG __s => ":"
      # DEBUG __s => ":"
      # .MEM_28 = VDEF <.MEM_7>
      std::__ostream_insert<char, std::char_traits<char> > (_8, ":", 1);
      # DEBUG this => _8
      # DEBUG __pf => endl
      # DEBUG __os => _8
      # VUSE <.MEM_28>
      _32 = _8->_vptr.basic_ostream;
      # VUSE <.MEM_28>
      _33 = MEM[(long int *)_32 + -24B];
      _34 = (sizetype) _33;
      _35 = _8 + _34;
      # DEBUG this => _35
      # DEBUG __c => 10
      # VUSE <.MEM_28>
      _29 = MEM[(const struct basic_ios *)_35]._M_ctype;
      # DEBUG __f => _29
      if (_29 == 0B)
        goto <bb 6>;
      else
        goto <bb 7>;

    }
    bb_7 (preds = {bb_5 }, succs = {bb_8 bb_9 })
    {
      <bb 7>:
      # DEBUG this => _29
      # DEBUG __c => 10
      # VUSE <.MEM_28>
      _40 = MEM[(const struct ctype *)_29]._M_widen_ok;
      if (_40 != 0)
        goto <bb 8>;
      else
        goto <bb 9>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_11 })
    {
      <bb 8>:
      # VUSE <.MEM_28>
      _43 = MEM[(const struct ctype *)_29]._M_widen[10];
      pretmp_71 = (int) _43;
      goto <bb 11>;

    }
    bb_9 (preds = {bb_7 }, succs = {bb_11 bb_10 })
    {
      <bb 9>:
      # DEBUG this => _29
      # DEBUG __c => 10
      # .MEM_86 = VDEF <.MEM_28>
      std::ctype<char>::_M_widen_init (_29);
      # VUSE <.MEM_86>
      _48 = MEM[(const struct ctype *)_29].D.20312._vptr.facet;
      # VUSE <.MEM_86>
      _49 = MEM[(int (*__vtbl_ptr_type) () *)_48 + 48B];
      PROF_53 = [obj_type_ref] OBJ_TYPE_REF(_49;(const struct ctype)_29->6);
      if (PROF_53 == do_widen)
        goto <bb 11>;
      else
        goto <bb 10>;

    }
    bb_10 (preds = {bb_9 }, succs = {bb_11 })
    {
      <bb 10>:
      # .MEM_87 = VDEF <.MEM_86>
      _55 = OBJ_TYPE_REF(_49;(const struct ctype)_29->6) (_29, 10);
      pretmp_99 = (int) _55;

    }
    bb_11 (preds = {bb_8 bb_9 bb_10 }, succs = {bb_12 bb_3 })
    {
      <bb 11>:
      # .MEM_52 = PHI <.MEM_28(8), .MEM_86(9), .MEM_87(10)>
      # prephitmp_62 = PHI <pretmp_71(8), 10(9), pretmp_99(10)>
      # .MEM_91 = VDEF <.MEM_52>
      _38 = std::basic_ostream<char>::put (_8, prephitmp_62);
      # DEBUG __os => _38
      # .MEM_92 = VDEF <.MEM_91>
      std::basic_ostream<char>::flush (_38);
      _9 = (long unsigned int) i_36;
      # DEBUG D#20 => &this_4(D)->_group_arbiters
      # VUSE <.MEM_92>
      _21 = MEM[(struct Arbiter * * *)this_4(D) + 144B];
      # DEBUG D#19 => D#20
      # DEBUG __n => _9
      # DEBUG this => D#19
      _25 = _9 * 8;
      _26 = _21 + _25;
      # VUSE <.MEM_92>
      _10 = *_26;
      # VUSE <.MEM_92>
      _11 = _10->D.27639._vptr.Module;
      # VUSE <.MEM_92>
      _12 = MEM[(int (*__vtbl_ptr_type) () *)_11 + 24B];
      # .MEM_13 = VDEF <.MEM_92>
      OBJ_TYPE_REF(_12;(const struct Arbiter)_10->3) (_10);
      i_14 = i_36 + 1;
      # DEBUG i => i_14
      # DEBUG i => i_14
      # DEBUG D#21 => &this_4(D)->_group_arbiters
      # VUSE <.MEM_13>
      _19 = MEM[(struct Arbiter * * *)this_4(D) + 144B];
      # DEBUG D#14 => D#21
      # VUSE <.MEM_13>
      _20 = MEM[(struct Arbiter * * *)this_4(D) + 152B];
      # DEBUG D#14 => D#21
      # DEBUG this => D#14
      # DEBUG this => D#14
      _5 = (long int) _20;
      _22 = (long int) _19;
      _23 = _5 - _22;
      _24 = _23 /[ex] 8;
      _6 = (int) _24;
      if (_6 > i_14)
        goto <bb 12>;
      else
        goto <bb 3>;

    }
    bb_12 (preds = {bb_11 }, succs = {bb_5 })
    {
      <bb 12>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

virtual void TreeArbiter::PrintState() const (const struct TreeArbiterD.27650 * const thisD.30394)
{
  char_typeD.20165 D.37672;
  charD.10 __cD.37671;
  char_typeD.20165 D.37669;
  charD.10 __cD.37668;
  char_typeD.23244 D.37666;
  struct basic_ostreamD.9736 & D.37660;
  char_typeD.20165 D.37657;
  charD.10 __cD.37656;
  char_typeD.20165 D.37654;
  charD.10 __cD.37653;
  char_typeD.23244 D.37651;
  struct basic_ostreamD.9736 & D.37645;
  intD.9 iD.30396;
  intD.9 pretmp_1;
  intD.9 pretmp_2;
  long intD.12 _5;
  intD.9 _6;
  struct basic_ostreamD.9736 & _8;
  long unsigned intD.14 _9;
  struct ArbiterD.26830 * _10;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _11;
  intD.9 (*__vtbl_ptr_typeD.2760) () _12;
  struct ArbiterD.26830 * _15;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _16;
  intD.9 (*__vtbl_ptr_typeD.2760) () _17;
  struct ArbiterD.26830 * * const _19;
  struct ArbiterD.26830 * * const _20;
  struct ArbiterD.26830 * * const _21;
  long intD.12 _22;
  long intD.12 _23;
  long intD.12 _24;
  long unsigned intD.14 _25;
  struct ArbiterD.26830 * const & _26;
  const struct __ctype_typeD.23249 * _29;
  const struct __ctype_typeD.23249 * _31;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _32;
  long intD.12 _33;
  sizetype _34;
  struct basic_iosD.9730 * _35;
  struct basic_ostreamD.9736 & _38;
  intD.9 prephitmp_39;
  charD.10 _40;
  char_typeD.20165 _43;
  long intD.12 _45;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _48;
  intD.9 (*__vtbl_ptr_typeD.2760) () _49;
  intD.9 _51;
  voidD.45 * PROF_53;
  char_typeD.20165 _55;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _58;
  long intD.12 _59;
  sizetype _60;
  struct basic_iosD.9730 * _61;
  intD.9 prephitmp_62;
  struct basic_ostreamD.9736 & _64;
  charD.10 _66;
  char_typeD.20165 _69;
  intD.9 pretmp_71;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _74;
  intD.9 (*__vtbl_ptr_typeD.2760) () _75;
  long intD.12 _77;
  long intD.12 _78;
  voidD.45 * PROF_79;
  char_typeD.20165 _81;
  long intD.12 _84;
  struct ArbiterD.26830 * * const _89;
  struct ArbiterD.26830 * * const _90;
  intD.9 pretmp_99;

;;   basic block 2, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG iD.30396 => 0
  # DEBUG iD.30396 => 0
  # DEBUG D#21ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _89 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#14ptD.0 => D#21ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _90 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 152B];
  # DEBUG D#14ptD.0 => D#21ptD.0
  # DEBUG thisD.34100 => D#14ptD.0
  # DEBUG thisD.34099 => D#14ptD.0
  _77 = (long intD.12) _90;
  _45 = (long intD.12) _89;
  _84 = _77 - _45;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _78 = _84 /[ex] 8;
  _51 = (intD.9) _78;
  if (_51 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_3(D)(2), .MEM_13(11)>
  # DEBUG __outD.34120 => &_ZSt4coutD.26000
  # DEBUG __sD.34121 => "Global arbiter:"
  # DEBUG __sD.34122 => "Global arbiter:"
  # .MEM_30 = VDEF <.MEM_103>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (&_ZSt4coutD.26000, "Global arbiter:", 15);
  # DEBUG thisD.34117 => &_ZSt4coutD.26000
  # DEBUG __pfD.34118 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.37658 => &_ZSt4coutD.26000
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _58 = _ZSt4coutD.26000._vptr.basic_ostreamD.24032;
  # VUSE <.MEM_30>
  _59 = MEM[(long intD.12 *)_58 + -24B];
  # RANGE [0, 18446744073709551615]
  _60 = (sizetype) _59;
  # PT = { D.26000 } (nonlocal, escaped)
  _61 = &_ZSt4coutD.26000 + _60;
  # DEBUG thisD.37661 => _61
  # DEBUG __cD.37662 => 10
  # VUSE <.MEM_30>
  # PT = nonlocal escaped 
  _31 = MEM[(const struct basic_iosD.9730 *)_61]._M_ctypeD.23256;
  # DEBUG __fD.37663 => _31
  if (_31 == 0B)
    goto <bb 6>;
  else
    goto <bb 13>;
;;    succ:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 823, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_36 = PHI <0(4), i_14(12)>
  # .MEM_93 = PHI <.MEM_3(D)(4), .MEM_13(12)>
  # DEBUG iD.30396 => i_36
  # DEBUG D#21ptD.0 => &this_4(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#21ptD.0
  # DEBUG thisD.34100 => D#14ptD.0
  # DEBUG thisD.34099 => D#14ptD.0
  # DEBUG __outD.34113 => &_ZSt4coutD.26000
  # DEBUG __sD.34114 => "Group arbiter "
  # DEBUG __sD.34115 => "Group arbiter "
  # .MEM_27 = VDEF <.MEM_93>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (&_ZSt4coutD.26000, "Group arbiter ", 14);
  # .MEM_7 = VDEF <.MEM_27>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _8 = _ZNSolsEiD.23940 (&_ZSt4coutD.26000, i_36);
  # DEBUG __outD.34109 => _8
  # DEBUG __sD.34110 => ":"
  # DEBUG __sD.34111 => ":"
  # .MEM_28 = VDEF <.MEM_7>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (_8, ":", 1);
  # DEBUG thisD.34106 => _8
  # DEBUG __pfD.34107 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.24072
  # DEBUG __osD.37643 => _8
  # VUSE <.MEM_28>
  # PT = nonlocal escaped null { D.26000 } (nonlocal, escaped)
  _32 = _8->_vptr.basic_ostreamD.24032;
  # VUSE <.MEM_28>
  _33 = MEM[(long intD.12 *)_32 + -24B];
  # RANGE [0, 18446744073709551615]
  _34 = (sizetype) _33;
  # PT = nonlocal escaped 
  _35 = _8 + _34;
  # DEBUG thisD.37646 => _35
  # DEBUG __cD.37647 => 10
  # VUSE <.MEM_28>
  # PT = nonlocal escaped 
  _29 = MEM[(const struct basic_iosD.9730 *)_35]._M_ctypeD.23256;
  # DEBUG __fD.37648 => _29
  if (_29 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_65 = PHI <.MEM_28(5), .MEM_30(3)>
  # .MEM_94 = VDEF <.MEM_65>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZSt16__throw_bad_castvD.2825 ();
;;    succ:      

;;   basic block 7, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.37650 => _29
  # DEBUG __cD.37649 => 10
  # VUSE <.MEM_28>
  _40 = MEM[(const struct ctypeD.10037 *)_29]._M_widen_okD.20171;
  if (_40 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_28>
  _43 = MEM[(const struct ctypeD.10037 *)_29]._M_widenD.20172[10];
  pretmp_71 = (intD.9) _43;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 3546, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.37652 => _29
  # DEBUG __cD.37653 => 10
  # .MEM_86 = VDEF <.MEM_28>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_29);
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _48 = MEM[(const struct ctypeD.10037 *)_29].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _49 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_48 + 48B];
  # PT = anything 
  PROF_53 = [obj_type_ref] OBJ_TYPE_REF(_49;(const struct ctypeD.10037)_29->6);
  if (PROF_53 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 703, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_87 = VDEF <.MEM_86>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _55 = OBJ_TYPE_REF(_49;(const struct ctypeD.10037)_29->6) (_29, 10);
  pretmp_99 = (intD.9) _55;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_52 = PHI <.MEM_28(8), .MEM_86(9), .MEM_87(10)>
  # RANGE [-128, 127]
  # prephitmp_62 = PHI <pretmp_71(8), 10(9), pretmp_99(10)>
  # .MEM_91 = VDEF <.MEM_52>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _38 = _ZNSo3putEcD.23967 (_8, prephitmp_62);
  # DEBUG __osD.37644 => _38
  # .MEM_92 = VDEF <.MEM_91>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_38);
  # RANGE [0, 18446744073709551615]
  _9 = (long unsigned intD.14) i_36;
  # DEBUG D#20ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _21 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#19ptD.0 => D#20ptD.0
  # DEBUG __nD.34103 => _9
  # DEBUG thisD.34104 => D#19ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _25 = _9 * 8;
  # PT = nonlocal escaped 
  _26 = _21 + _25;
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _10 = *_26;
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _11 = _10->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _12 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_11 + 24B];
  # .MEM_13 = VDEF <.MEM_92>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  OBJ_TYPE_REF(_12;(const struct ArbiterD.26830)_10->3) (_10);
  i_14 = i_36 + 1;
  # DEBUG iD.30396 => i_14
  # DEBUG iD.30396 => i_14
  # DEBUG D#21ptD.0 => &this_4(D)->_group_arbitersD.28399
  # VUSE <.MEM_13>
  # PT = nonlocal escaped 
  _19 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 144B];
  # DEBUG D#14ptD.0 => D#21ptD.0
  # VUSE <.MEM_13>
  # PT = nonlocal escaped 
  _20 = MEM[(struct ArbiterD.26830 * * *)this_4(D) + 152B];
  # DEBUG D#14ptD.0 => D#21ptD.0
  # DEBUG thisD.34100 => D#14ptD.0
  # DEBUG thisD.34099 => D#14ptD.0
  _5 = (long intD.12) _20;
  _22 = (long intD.12) _19;
  _23 = _5 - _22;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _24 = _23 /[ex] 8;
  _6 = (intD.9) _24;
  if (_6 > i_14)
    goto <bb 12>;
  else
    goto <bb 3>;
;;    succ:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.37665 => _31
  # DEBUG __cD.37664 => 10
  # VUSE <.MEM_30>
  _66 = MEM[(const struct ctypeD.10037 *)_31]._M_widen_okD.20171;
  if (_66 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 549, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_30>
  _69 = MEM[(const struct ctypeD.10037 *)_31]._M_widenD.20172[10];
  pretmp_1 = (intD.9) _69;
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.37667 => _31
  # DEBUG __cD.37668 => 10
  # .MEM_95 = VDEF <.MEM_30>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZNKSt5ctypeIcE13_M_widen_initEvD.20279 (_31);
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _74 = MEM[(const struct ctypeD.10037 *)_31].D.20312._vptr.facetD.16930;
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _75 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_74 + 48B];
  # PT = anything 
  PROF_79 = [obj_type_ref] OBJ_TYPE_REF(_75;(const struct ctypeD.10037)_31->6);
  if (PROF_79 == _ZNKSt5ctypeIcE8do_widenEcD.20260)
    goto <bb 17>;
  else
    goto <bb 16>;
;;    succ:       17 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [19.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 70, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [19.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_96 = VDEF <.MEM_95>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _81 = OBJ_TYPE_REF(_75;(const struct ctypeD.10037)_31->6) (_31, 10);
  pretmp_2 = (intD.9) _81;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 1, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_85 = PHI <.MEM_30(14), .MEM_95(15), .MEM_96(16)>
  # RANGE [-128, 127]
  # prephitmp_39 = PHI <pretmp_1(14), 10(15), pretmp_2(16)>
  # .MEM_100 = VDEF <.MEM_85>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _64 = _ZNSo3putEcD.23967 (&_ZSt4coutD.26000, prephitmp_39);
  # DEBUG __osD.37659 => _64
  # .MEM_101 = VDEF <.MEM_100>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  _ZNSo5flushEvD.23978 (_64);
  # VUSE <.MEM_101>
  # PT = nonlocal escaped 
  _15 = this_4(D)->_global_arbiterD.28400;
  # VUSE <.MEM_101>
  # PT = nonlocal escaped 
  _16 = _15->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_101>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_16 + 24B];
  # .MEM_18 = VDEF <.MEM_101>
  # USE = nonlocal null { D.26000 } (nonlocal, escaped)
  # CLB = nonlocal null { D.26000 } (nonlocal, escaped)
  OBJ_TYPE_REF(_17;(const struct ArbiterD.26830)_15->3) (_15);
  # VUSE <.MEM_18>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function TreeArbiter::~TreeArbiter() (_ZN11TreeArbiterD2Ev, funcdef_no=1402, decl_uid=29193, cgraph_uid=381, symbol_order=382)


Pass statistics:
----------------

TreeArbiter::~TreeArbiter() (struct TreeArbiterD.27650 * const thisD.29194)
Eh tree:
   2 cleanup land:{3,<L15>}
     3 cleanup land:{2,<L14>}
       4 cleanup land:{7,<L19>},{6,<L18>},{5,<L17>},{1,<L20>}
{
  intD.9 iD.30386;
  struct ArbiterD.26830 * * const pretmp_1;
  struct ArbiterD.26830 * * const pretmp_2;
  long intD.12 _9;
  intD.9 _10;
  long unsigned intD.14 _11;
  struct ArbiterD.26830 * _12;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _13;
  intD.9 (*__vtbl_ptr_typeD.2760) () _14;
  struct ArbiterD.26830 * _17;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _18;
  intD.9 (*__vtbl_ptr_typeD.2760) () _19;
  intD.9 * _21;
  intD.9 * _22;
  struct ArbiterD.26830 * * const prephitmp_23;
  struct ModuleD.26017 * * _24;
  struct ArbiterD.26830 * * _26;
  struct ArbiterD.26830 * _28;
  long intD.12 _32;
  long intD.12 _33;
  long intD.12 _34;
  long unsigned intD.14 _35;
  struct ArbiterD.26830 * & _36;
  struct ArbiterD.26830 * * _37;
  voidD.45 * PROF_65;
  voidD.45 * PROF_67;
  struct N7Arbiter7entry_tED.26837 * _69;
  struct ArbiterD.26830 * * const prephitmp_70;
  charD.10 * const _71;
  const charD.10 * _72;
  charD.10 * const _73;
  const charD.10 * _74;
  struct ArbiterD.26830 * * const prephitmp_106;
  struct ArbiterD.26830 * * const prephitmp_107;
  struct ArbiterD.26830 * * const pretmp_109;
  struct ArbiterD.26830 * * const pretmp_110;
  struct ArbiterD.26830 * * const _112;
  struct ArbiterD.26830 * * const _114;
  long intD.12 _116;
  struct ArbiterD.26830 * * const _117;
  intD.9 _118;
  long intD.12 _119;
  long intD.12 _120;
  long intD.12 _121;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = VDEF <.MEM_6(D)>
  this_7(D)->D.29196.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV11TreeArbiterD.29202 + 16B];
  # DEBUG iD.30386 => 0
  # DEBUG iD.30386 => 0
  # DEBUG D#195ptD.0 => &this_7(D)->_group_arbitersD.28399
  # VUSE <.MEM_8>
  # PT = nonlocal escaped 
  _117 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # DEBUG D#14ptD.0 => D#195ptD.0
  # VUSE <.MEM_8>
  # PT = nonlocal escaped 
  _114 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
  # DEBUG D#14ptD.0 => D#195ptD.0
  # DEBUG thisD.34987 => D#14ptD.0
  # DEBUG thisD.34986 => D#14ptD.0
  _121 = (long intD.12) _114;
  _120 = (long intD.12) _117;
  _116 = _121 - _120;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _119 = _116 /[ex] 8;
  _118 = (intD.9) _119;
  if (_118 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [4.5%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_108 = PHI <.MEM_8(2), .MEM_3(12)>
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _17 = this_7(D)->_global_arbiterD.28400;
  if (_17 != 0B)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_115 = PHI <0(4), i_16(13)>
  # .MEM_113 = PHI <.MEM_8(4), .MEM_3(13)>
  # PT = nonlocal escaped 
  # _112 = PHI <_117(4), prephitmp_70(13)>
  # prephitmp_106 = PHI <_114(4), prephitmp_23(13)>
  # prephitmp_107 = PHI <_117(4), prephitmp_70(13)>
  # DEBUG iD.30386 => i_115
  # DEBUG D#195ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#195ptD.0
  # DEBUG thisD.34987 => D#14ptD.0
  # DEBUG thisD.34986 => D#14ptD.0
  # RANGE [0, 18446744073709551615]
  _11 = (long unsigned intD.14) i_115;
  # DEBUG D#194ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#13ptD.0 => D#194ptD.0
  # DEBUG __nD.34990 => _11
  # DEBUG thisD.34991 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _35 = _11 * 8;
  # PT = nonlocal escaped 
  _36 = _112 + _35;
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  _12 = *_36;
  if (_12 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;
;;    succ:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 6669, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  _13 = _12->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  _14 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_13 + 8B];
  # PT = anything 
  PROF_65 = [obj_type_ref] OBJ_TYPE_REF(_14;(struct ArbiterD.26830)_12->1);
  if (PROF_65 == _ZN11TreeArbiterD0EvD.29187)
    goto <bb 7>;
  else
    goto <bb 9>;
;;    succ:       7 [80.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [20.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 5335, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [80.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.37866 => _12
  [LP 5] # .MEM_79 = VDEF <.MEM_113>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZN11TreeArbiterD1EvD.29190 (_12);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 (EH,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5335, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_80 = VDEF <.MEM_79>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_12);
  # VUSE <.MEM_80>
  pretmp_109 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # VUSE <.MEM_80>
  pretmp_1 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 1334, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       6 [20.0%]  (FALSE_VALUE,EXECUTABLE)
  [LP 6] # .MEM_81 = VDEF <.MEM_113>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  OBJ_TYPE_REF(_14;(struct ArbiterD.26830)_12->1) (_12);
  goto <bb 11>;
;;    succ:       10 (EH,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 (EH,EXECUTABLE)
<L18>: [LP 6]
  goto <bb 35> (<L13>);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 1334, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_81>
  pretmp_110 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # VUSE <.MEM_81>
  pretmp_2 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       5 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_113(5), .MEM_80(8), .MEM_81(11)>
  # PT = nonlocal escaped 
  # prephitmp_70 = PHI <prephitmp_107(5), pretmp_109(8), pretmp_110(11)>
  # PT = nonlocal escaped 
  # prephitmp_23 = PHI <prephitmp_106(5), pretmp_1(8), pretmp_2(11)>
  i_16 = i_115 + 1;
  # DEBUG iD.30386 => i_16
  # DEBUG iD.30386 => i_16
  # DEBUG D#195ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#195ptD.0
  # DEBUG D#14ptD.0 => D#195ptD.0
  # DEBUG thisD.34987 => D#14ptD.0
  # DEBUG thisD.34986 => D#14ptD.0
  _9 = (long intD.12) prephitmp_23;
  _32 = (long intD.12) prephitmp_70;
  _33 = _9 - _32;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _34 = _33 /[ex] 8;
  _10 = (intD.9) _34;
  if (_10 > i_16)
    goto <bb 13>;
  else
    goto <bb 3>;
;;    succ:       13 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       3 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_105 = PHI <.MEM_108(3), .MEM_84(19)>
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _18 = _17->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _19 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_18 + 8B];
  # PT = anything 
  PROF_67 = [obj_type_ref] OBJ_TYPE_REF(_19;(struct ArbiterD.26830)_17->1);
  if (PROF_67 == _ZN11TreeArbiterD0EvD.29187)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [79.9%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [20.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 251, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [79.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.37867 => _17
  [LP 7] # .MEM_82 = VDEF <.MEM_108>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZN11TreeArbiterD1EvD.29190 (_17);
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L19>: [LP 7]
  goto <bb 35> (<L13>);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 251, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_83 = VDEF <.MEM_82>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 63, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [20.1%]  (FALSE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_84 = VDEF <.MEM_108>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  OBJ_TYPE_REF(_19;(struct ArbiterD.26830)_17->1) (_17);
  goto <bb 14>;
;;    succ:       20 (EH,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L20>: [LP 1]
  goto <bb 35> (<L13>);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_105(14), .MEM_83(18)>
  # DEBUG D#198ptD.0 => &this_7(D)->_group_reqsD.29147
  # DEBUG thisD.35008 => D#198ptD.0
  # DEBUG D#190ptD.0 => &D#198ptD.0->D.29145
  # DEBUG thisD.34981 => D#190ptD.0
  # DEBUG D#193ptD.0 => D#198ptD.0->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG D#192ptD.0 => D#198ptD.0->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.34978 => D#192ptD.0
  # DEBUG __lastD.34979 => D#193ptD.0
  # DEBUG D.34980 => NULL
  # DEBUG D#74ptD.0 => D#192ptD.0
  # DEBUG D#75ptD.0 => D#193ptD.0
  # DEBUG __firstD.34389 => D#74ptD.0
  # DEBUG __lastD.34388 => D#75ptD.0
  # DEBUG D#73ptD.0 => D#75ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#71ptD.0 => D#73ptD.0
  # DEBUG D.34378 => D#70ptD.0
  # DEBUG D.34377 => D#71ptD.0
  # DEBUG D#191ptD.0 => &D#198ptD.0->D.29145
  # DEBUG thisD.35009 => D#191ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0->_M_implD.28636._M_end_of_storageD.28640
  # DEBUG D#188ptD.0 => (long intD.12) D#189ptD.0
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Vector_baseD.28403 *)this_7(D) + 176B]._M_implD.28636._M_startD.28638;
  # DEBUG D#187ptD.0 => (long intD.12) _22
  # DEBUG D#186ptD.0 => D#188ptD.0 - D#187ptD.0
  # DEBUG D#185ptD.0 => D#186ptD.0 /[ex] 4
  # DEBUG D#184ptD.0 => (long unsigned intD.14) D#185ptD.0
  # DEBUG thisD.35012 => D#191ptD.0
  # DEBUG __pD.35011 => _22
  # DEBUG __nD.35010 => D#184ptD.0
  if (_22 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#182ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#181ptD.0 => D#184ptD.0
  # DEBUG __pD.35016 => _22
  # DEBUG __aD.35014 => D#180ptD.0
  # DEBUG __nD.35015 => D#181ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG D#176ptD.0 => D#178ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG __pD.35019 => _22
  # DEBUG thisD.35017 => D#176ptD.0
  # DEBUG D.35018 => D#177ptD.0
  # .MEM_41 = VDEF <.MEM_4>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_4(21), .MEM_41(22)>
  # DEBUG D#183ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG thisD.35020 => D#183ptD.0
  # DEBUG thisD.35021 => D#183ptD.0
  # DEBUG thisD.35022 => D#183ptD.0
  # .MEM_46 = VDEF <.MEM_27>
  MEM[(struct  &)this_7(D) + 176] ={v} {CLOBBER};
  # DEBUG D#196ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG thisD.34993 => D#196ptD.0
  # DEBUG D#170ptD.0 => &D#196ptD.0->D.28397
  # DEBUG thisD.34906 => D#170ptD.0
  # DEBUG D#173ptD.0 => D#196ptD.0->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG D#172ptD.0 => D#196ptD.0->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.34903 => D#172ptD.0
  # DEBUG __lastD.34904 => D#173ptD.0
  # DEBUG D.34905 => NULL
  # DEBUG D#64ptD.0 => D#172ptD.0
  # DEBUG D#65ptD.0 => D#173ptD.0
  # DEBUG __firstD.34345 => D#64ptD.0
  # DEBUG __lastD.34344 => D#65ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D.34334 => D#60ptD.0
  # DEBUG D.34333 => D#61ptD.0
  # DEBUG D#171ptD.0 => &D#196ptD.0->D.28397
  # DEBUG thisD.34994 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0->_M_implD.27888._M_end_of_storageD.27892
  # DEBUG D#168ptD.0 => (long intD.12) D#169ptD.0
  # VUSE <.MEM_46>
  # PT = nonlocal escaped 
  _37 = MEM[(struct _Vector_baseD.27655 *)this_7(D) + 144B]._M_implD.27888._M_startD.27890;
  # DEBUG D#167ptD.0 => (long intD.12) _37
  # DEBUG D#166ptD.0 => D#168ptD.0 - D#167ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0 /[ex] 8
  # DEBUG D#164ptD.0 => (long unsigned intD.14) D#165ptD.0
  # DEBUG thisD.34997 => D#171ptD.0
  # DEBUG __pD.34996 => _37
  # DEBUG __nD.34995 => D#164ptD.0
  if (_37 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 353, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#162ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#161ptD.0 => D#164ptD.0
  # DEBUG __pD.35001 => _37
  # DEBUG __aD.34999 => D#160ptD.0
  # DEBUG __nD.35000 => D#161ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG __pD.35004 => _37
  # DEBUG thisD.35002 => D#156ptD.0
  # DEBUG D.35003 => D#157ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_37);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_46(23), .MEM_47(24)>
  # DEBUG D#163ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG thisD.35005 => D#163ptD.0
  # DEBUG thisD.35006 => D#163ptD.0
  # DEBUG thisD.35007 => D#163ptD.0
  # .MEM_52 = VDEF <.MEM_38>
  MEM[(struct  &)this_7(D) + 144] ={v} {CLOBBER};
  # DEBUG D#351ptD.0 => &this_7(D)->D.29196
  # DEBUG thisD.37868 => D#351ptD.0
  # .MEM_85 = VDEF <.MEM_52>
  MEM[(struct ArbiterD.26830 *)this_7(D)].D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV7ArbiterD.27647 + 16B];
  # DEBUG D#153ptD.0 => &D#351ptD.0->_requestD.27584
  # DEBUG thisD.37869 => D#153ptD.0
  # DEBUG D#149ptD.0 => &D#153ptD.0->D.27582
  # DEBUG thisD.34814 => D#149ptD.0
  # DEBUG D#152ptD.0 => D#153ptD.0->D.27582._M_implD.27073._M_finishD.27076
  # DEBUG D#151ptD.0 => D#153ptD.0->D.27582._M_implD.27073._M_startD.27075
  # DEBUG D#57ptD.0 => D#151ptD.0
  # DEBUG D#58ptD.0 => D#152ptD.0
  # DEBUG __firstD.34813 => D#57ptD.0
  # DEBUG __lastD.34812 => D#58ptD.0
  # DEBUG D.34811 => D#59ptD.0
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG __firstD.34307 => D#53ptD.0
  # DEBUG __lastD.34306 => D#54ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D.34296 => D#49ptD.0
  # DEBUG D.34295 => D#50ptD.0
  # DEBUG D#150ptD.0 => &D#153ptD.0->D.27582
  # DEBUG thisD.37870 => D#150ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0->_M_implD.27073._M_end_of_storageD.27077
  # DEBUG D#147ptD.0 => (long intD.12) D#148ptD.0
  # VUSE <.MEM_85>
  # PT = nonlocal escaped 
  _69 = MEM[(struct _Vector_baseD.26840 *)this_7(D) + 96B]._M_implD.27073._M_startD.27075;
  # DEBUG D#146ptD.0 => (long intD.12) _69
  # DEBUG D#145ptD.0 => D#147ptD.0 - D#146ptD.0
  # DEBUG D#144ptD.0 => D#145ptD.0 /[ex] 12
  # DEBUG D#141ptD.0 => D#150ptD.0
  # DEBUG D#142ptD.0 => (long unsigned intD.14) D#144ptD.0
  # DEBUG __pD.37873 => _69
  # DEBUG thisD.37871 => D#141ptD.0
  # DEBUG __nD.37872 => D#142ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  if (_69 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 353, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#138ptD.0 => &D#139ptD.0->_M_implD.27073
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#140ptD.0
  # DEBUG __pD.37877 => _69
  # DEBUG __aD.37875 => D#136ptD.0
  # DEBUG __nD.37876 => D#137ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG D#134ptD.0 => D#136ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.37880 => _69
  # DEBUG thisD.37878 => D#132ptD.0
  # DEBUG D.37879 => D#133ptD.0
  # .MEM_86 = VDEF <.MEM_85>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_69);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_85(25), .MEM_86(26)>
  # DEBUG D#143ptD.0 => &D#150ptD.0->_M_implD.27073
  # DEBUG thisD.37881 => D#143ptD.0
  # DEBUG thisD.37882 => D#143ptD.0
  # DEBUG thisD.37883 => D#143ptD.0
  # .MEM_91 = VDEF <.MEM_75>
  MEM[(struct  &)this_7(D) + 96] ={v} {CLOBBER};
  # DEBUG D#350ptD.0 => &MEM[(struct ArbiterD.26830 *)this_7(D)].D.27639
  # DEBUG thisD.37884 => D#350ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(struct ModuleD.26017 *)this_7(D)]._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV6ModuleD.26817 + 16B];
  # DEBUG D#131ptD.0 => &D#350ptD.0->_childrenD.26767
  # DEBUG thisD.37885 => D#131ptD.0
  # DEBUG D#125ptD.0 => &D#131ptD.0->D.26765
  # DEBUG thisD.34687 => D#125ptD.0
  # DEBUG D#128ptD.0 => D#131ptD.0->D.26765._M_implD.26256._M_finishD.26259
  # DEBUG D#127ptD.0 => D#131ptD.0->D.26765._M_implD.26256._M_startD.26258
  # DEBUG D#46ptD.0 => D#127ptD.0
  # DEBUG D#47ptD.0 => D#128ptD.0
  # DEBUG __firstD.34686 => D#46ptD.0
  # DEBUG __lastD.34685 => D#47ptD.0
  # DEBUG D.34684 => D#48ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG __firstD.34269 => D#42ptD.0
  # DEBUG __lastD.34268 => D#43ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#38ptD.0 => D#40ptD.0
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG D.34258 => D#38ptD.0
  # DEBUG D.34257 => D#39ptD.0
  # DEBUG D#126ptD.0 => &D#131ptD.0->D.26765
  # DEBUG thisD.37886 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0->_M_implD.26256._M_end_of_storageD.26260
  # DEBUG D#123ptD.0 => (long intD.12) D#124ptD.0
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Vector_baseD.26023 *)this_7(D) + 72B]._M_implD.26256._M_startD.26258;
  # DEBUG D#122ptD.0 => (long intD.12) _24
  # DEBUG D#121ptD.0 => D#123ptD.0 - D#122ptD.0
  # DEBUG D#120ptD.0 => D#121ptD.0 /[ex] 8
  # DEBUG D#117ptD.0 => D#126ptD.0
  # DEBUG D#118ptD.0 => (long unsigned intD.14) D#120ptD.0
  # DEBUG __pD.37889 => _24
  # DEBUG thisD.37887 => D#117ptD.0
  # DEBUG __nD.37888 => D#118ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  if (_24 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#114ptD.0 => &D#115ptD.0->_M_implD.26256
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#113ptD.0 => D#116ptD.0
  # DEBUG __pD.37893 => _24
  # DEBUG __aD.37891 => D#112ptD.0
  # DEBUG __nD.37892 => D#113ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#108ptD.0 => D#110ptD.0
  # DEBUG D#109ptD.0 => D#111ptD.0
  # DEBUG __pD.37896 => _24
  # DEBUG thisD.37894 => D#108ptD.0
  # DEBUG D.37895 => D#109ptD.0
  # .MEM_93 = VDEF <.MEM_92>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_76 = PHI <.MEM_92(27), .MEM_93(28)>
  # DEBUG D#119ptD.0 => &D#126ptD.0->_M_implD.26256
  # DEBUG thisD.37897 => D#119ptD.0
  # DEBUG thisD.37898 => D#119ptD.0
  # DEBUG thisD.37899 => D#119ptD.0
  # .MEM_98 = VDEF <.MEM_76>
  MEM[(struct  &)this_7(D) + 72] ={v} {CLOBBER};
  # DEBUG D#130ptD.0 => &D#350ptD.0->_fullnameD.26020
  # DEBUG thisD.37900 => D#130ptD.0
  # DEBUG thisD.37901 => D#130ptD.0
  # DEBUG thisD.37910 => D#130ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped 
  _71 = MEM[(charD.10 * *)this_7(D) + 40B];
  # DEBUG D#5ptD.0 => D#130ptD.0
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.37911 => D#130ptD.0
  # PT = nonlocal 
  _72 = &MEM[(const struct basic_stringD.8425 *)this_7(D) + 40B].D.13836._M_local_bufD.13838;
  if (_71 != _72)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => MEM[(struct basic_stringD.8425 *)D#130ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.37903 => D#130ptD.0
  # DEBUG __sizeD.37902 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => D#130ptD.0
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => D#130ptD.0
  # DEBUG D#97ptD.0 => &MEM[(struct basic_stringD.8425 *)D#130ptD.0]._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.37906 => _71
  # DEBUG __aD.37904 => D#95ptD.0
  # DEBUG __nD.37905 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.37909 => _71
  # DEBUG thisD.37907 => D#91ptD.0
  # DEBUG D.37908 => D#92ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_71);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_98(29), .MEM_99(30)>
  # DEBUG D#101ptD.0 => &MEM[(struct basic_stringD.8425 *)D#130ptD.0]._M_dataplusD.13816
  # DEBUG thisD.37912 => D#101ptD.0
  # DEBUG thisD.37913 => D#101ptD.0
  # DEBUG thisD.37914 => D#101ptD.0
  # .MEM_103 = VDEF <.MEM_77>
  MEM[(struct  &)this_7(D) + 40] ={v} {CLOBBER};
  # DEBUG D#129ptD.0 => &D#350ptD.0->_nameD.26019
  # DEBUG thisD.37915 => D#129ptD.0
  # DEBUG thisD.37916 => D#129ptD.0
  # DEBUG thisD.37925 => D#129ptD.0
  # VUSE <.MEM_103>
  # PT = nonlocal escaped 
  _73 = MEM[(charD.10 * *)this_7(D) + 8B];
  # DEBUG D#5ptD.0 => D#129ptD.0
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.37926 => D#129ptD.0
  # PT = nonlocal 
  _74 = &MEM[(const struct basic_stringD.8425 *)this_7(D) + 8B].D.13836._M_local_bufD.13838;
  if (_73 != _74)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 353, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => MEM[(struct basic_stringD.8425 *)D#129ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.37918 => D#129ptD.0
  # DEBUG __sizeD.37917 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => D#129ptD.0
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => D#129ptD.0
  # DEBUG D#97ptD.0 => &MEM[(struct basic_stringD.8425 *)D#129ptD.0]._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.37921 => _73
  # DEBUG __aD.37919 => D#95ptD.0
  # DEBUG __nD.37920 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.37924 => _73
  # DEBUG thisD.37922 => D#91ptD.0
  # DEBUG D.37923 => D#92ptD.0
  # .MEM_104 = VDEF <.MEM_103>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_73);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       31 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_78 = PHI <.MEM_103(31), .MEM_104(32)>
  # DEBUG D#101ptD.0 => &MEM[(struct basic_stringD.8425 *)D#129ptD.0]._M_dataplusD.13816
  # DEBUG thisD.37927 => D#101ptD.0
  # DEBUG thisD.37928 => D#101ptD.0
  # DEBUG thisD.37929 => D#101ptD.0
  # .MEM_25 = VDEF <.MEM_78>
  MEM[(struct  &)this_7(D)] ={v} {CLOBBER};
  # VUSE <.MEM_25>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       7 (EH,EXECUTABLE)
<L17>: [LP 5]
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_81(10), .MEM_84(20), .MEM_79(34), .MEM_82(17)>
<L13>:
  # DEBUG D#199ptD.0 => &this_7(D)->_group_reqsD.29147
  # DEBUG thisD.35023 => D#199ptD.0
  # DEBUG D#190ptD.0 => &D#199ptD.0->D.29145
  # DEBUG thisD.34981 => D#190ptD.0
  # DEBUG D#193ptD.0 => D#199ptD.0->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG D#192ptD.0 => D#199ptD.0->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.34978 => D#192ptD.0
  # DEBUG __lastD.34979 => D#193ptD.0
  # DEBUG D.34980 => NULL
  # DEBUG D#74ptD.0 => D#192ptD.0
  # DEBUG D#75ptD.0 => D#193ptD.0
  # DEBUG __firstD.34389 => D#74ptD.0
  # DEBUG __lastD.34388 => D#75ptD.0
  # DEBUG D#73ptD.0 => D#75ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#71ptD.0 => D#73ptD.0
  # DEBUG D.34378 => D#70ptD.0
  # DEBUG D.34377 => D#71ptD.0
  # DEBUG D#191ptD.0 => &D#199ptD.0->D.29145
  # DEBUG thisD.35024 => D#191ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0->_M_implD.28636._M_end_of_storageD.28640
  # DEBUG D#188ptD.0 => (long intD.12) D#189ptD.0
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  _21 = MEM[(struct _Vector_baseD.28403 *)this_7(D) + 176B]._M_implD.28636._M_startD.28638;
  # DEBUG D#187ptD.0 => (long intD.12) _21
  # DEBUG D#186ptD.0 => D#188ptD.0 - D#187ptD.0
  # DEBUG D#185ptD.0 => D#186ptD.0 /[ex] 4
  # DEBUG D#184ptD.0 => (long unsigned intD.14) D#185ptD.0
  # DEBUG thisD.35027 => D#191ptD.0
  # DEBUG __pD.35026 => _21
  # DEBUG __nD.35025 => D#184ptD.0
  if (_21 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#182ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#181ptD.0 => D#184ptD.0
  # DEBUG __pD.35031 => _21
  # DEBUG __aD.35029 => D#180ptD.0
  # DEBUG __nD.35030 => D#181ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG D#176ptD.0 => D#178ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG __pD.35034 => _21
  # DEBUG thisD.35032 => D#176ptD.0
  # DEBUG D.35033 => D#177ptD.0
  # .MEM_53 = VDEF <.MEM_5>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_21);
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_5(35), .MEM_53(36)>
  # DEBUG D#183ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG thisD.35035 => D#183ptD.0
  # DEBUG thisD.35036 => D#183ptD.0
  # DEBUG thisD.35037 => D#183ptD.0
  # .MEM_58 = VDEF <.MEM_39>
  MEM[(struct  &)this_7(D) + 176] ={v} {CLOBBER};
  [LP 2] resx 4
;;    succ:       38 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 (EH,EXECUTABLE)
<L14>: [LP 2]
  # DEBUG D#197ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG thisD.35038 => D#197ptD.0
  # DEBUG D#170ptD.0 => &D#197ptD.0->D.28397
  # DEBUG thisD.34906 => D#170ptD.0
  # DEBUG D#173ptD.0 => D#197ptD.0->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG D#172ptD.0 => D#197ptD.0->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.34903 => D#172ptD.0
  # DEBUG __lastD.34904 => D#173ptD.0
  # DEBUG D.34905 => NULL
  # DEBUG D#64ptD.0 => D#172ptD.0
  # DEBUG D#65ptD.0 => D#173ptD.0
  # DEBUG __firstD.34345 => D#64ptD.0
  # DEBUG __lastD.34344 => D#65ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D.34334 => D#60ptD.0
  # DEBUG D.34333 => D#61ptD.0
  # DEBUG D#171ptD.0 => &D#197ptD.0->D.28397
  # DEBUG thisD.35039 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0->_M_implD.27888._M_end_of_storageD.27892
  # DEBUG D#168ptD.0 => (long intD.12) D#169ptD.0
  # VUSE <.MEM_58>
  # PT = nonlocal escaped 
  _26 = MEM[(struct _Vector_baseD.27655 *)this_7(D) + 144B]._M_implD.27888._M_startD.27890;
  # DEBUG D#167ptD.0 => (long intD.12) _26
  # DEBUG D#166ptD.0 => D#168ptD.0 - D#167ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0 /[ex] 8
  # DEBUG D#164ptD.0 => (long unsigned intD.14) D#165ptD.0
  # DEBUG thisD.35042 => D#171ptD.0
  # DEBUG __pD.35041 => _26
  # DEBUG __nD.35040 => D#164ptD.0
  if (_26 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#162ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#161ptD.0 => D#164ptD.0
  # DEBUG __pD.35046 => _26
  # DEBUG __aD.35044 => D#160ptD.0
  # DEBUG __nD.35045 => D#161ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG __pD.35049 => _26
  # DEBUG thisD.35047 => D#156ptD.0
  # DEBUG D.35048 => D#157ptD.0
  # .MEM_59 = VDEF <.MEM_58>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_58(38), .MEM_59(39)>
  # DEBUG D#163ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG thisD.35050 => D#163ptD.0
  # DEBUG thisD.35051 => D#163ptD.0
  # DEBUG thisD.35052 => D#163ptD.0
  # .MEM_64 = VDEF <.MEM_40>
  MEM[(struct  &)this_7(D) + 144] ={v} {CLOBBER};
  [LP 3] resx 3
;;    succ:       41 (EH,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 40, next block 1, flags: (NEW, REACHABLE)
;;    pred:       40 (EH,EXECUTABLE)
<L15>: [LP 3]
  # PT = nonlocal 
  _28 = &this_7(D)->D.29196;
  # .MEM_29 = VDEF <.MEM_64>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZN7ArbiterD2EvD.27626 (_28);
  resx 2
;;    succ:      

}


Creating dr for this_7(D)->D.29196.D.27639._vptr.Module
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_7(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 144B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 144B]
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 152B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 152B]
Creating dr for *_36
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_36
Creating dr for *_36
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_36
Creating dr for *_36
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_36
Creating dr for *_36
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_36
Creating dr for _12->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_12
	Access function 0: 0
	Access function 1: 0
Creating dr for _12->D.27639._vptr.Module
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_12
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_13 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_13 + 8B]
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_13 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_13 + 8B]
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 144B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 144B]
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 144B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 144B]
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 152B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 152B]
Creating dr for MEM[(struct Arbiter * * *)this_7(D) + 152B]
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 152
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_7(D) + 152B]
Creating dr for MEM[(struct _Vector_base *)this_7(D) + 176B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_7(D) + 176B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Vector_base *)this_7(D) + 144B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 144
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_7(D) + 144B]
	Access function 0: 0
	Access function 1: 0
Creating dr for this_7(D)->_global_arbiter
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 168
	step: 0
	aligned to: 256
	base_object: *this_7(D)
	Access function 0: 1344
Creating dr for _17->D.27639._vptr.Module
analyze_innermost: success.
	base_address: _17
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_17
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(int (*__vtbl_ptr_type) () *)_18 + 8B]
analyze_innermost: success.
	base_address: _18
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int (*__vtbl_ptr_type) () *)_18 + 8B]
Creating dr for MEM[(struct _Vector_base *)this_7(D) + 176B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_7(D)
	offset from base address: 0
	constant offset from base address: 176
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_7(D) + 176B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:43, LOOPS:1, CONDITIONS:18, STMTS:479)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # .MEM_8 = VDEF <.MEM_6(D)>
    this_7(D)->D.29196.D.27639._vptr.Module = &MEM[(void *)&_ZTV11TreeArbiter + 16B];
    # DEBUG i => 0
    # DEBUG i => 0
    # DEBUG D#195 => &this_7(D)->_group_arbiters
    # VUSE <.MEM_8>
    _117 = MEM[(struct Arbiter * * *)this_7(D) + 144B];
    # DEBUG D#14 => D#195
    # VUSE <.MEM_8>
    _114 = MEM[(struct Arbiter * * *)this_7(D) + 152B];
    # DEBUG D#14 => D#195
    # DEBUG this => D#14
    # DEBUG this => D#14
    _121 = (long int) _114;
    _120 = (long int) _117;
    _116 = _121 - _120;
    _119 = _116 /[ex] 8;
    _118 = (int) _119;
    if (_118 > 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_12 }, succs = {bb_15 bb_14 })
  {
    <bb 3>:
    # .MEM_108 = PHI <.MEM_8(2), .MEM_3(12)>
    # VUSE <.MEM_108>
    _17 = this_7(D)->_global_arbiter;
    if (_17 != 0B)
      goto <bb 15>;
    else
      goto <bb 14>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_10 (preds = {bb_9 }, succs = {bb_35 })
  {
  <L18>:
    goto <bb 35> (<L13>);

  }
  bb_14 (preds = {bb_3 bb_19 }, succs = {bb_42 })
  {
    <bb 14>:
    # .MEM_105 = PHI <.MEM_108(3), .MEM_84(19)>

  }
  bb_42 (preds = {bb_14 }, succs = {bb_21 })
  {
    <bb 42>:
    goto <bb 21>;

  }
  bb_15 (preds = {bb_3 }, succs = {bb_16 bb_19 })
  {
    <bb 15>:
    # VUSE <.MEM_108>
    _18 = _17->D.27639._vptr.Module;
    # VUSE <.MEM_108>
    _19 = MEM[(int (*__vtbl_ptr_type) () *)_18 + 8B];
    PROF_67 = [obj_type_ref] OBJ_TYPE_REF(_19;(struct Arbiter)_17->1);
    if (PROF_67 == __deleting_dtor )
      goto <bb 16>;
    else
      goto <bb 19>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_18 bb_17 })
  {
    <bb 16>:
    # DEBUG this => _17
    # .MEM_82 = VDEF <.MEM_108>
    TreeArbiter::~TreeArbiter (_17);
    goto <bb 18>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_35 })
  {
  <L19>:
    goto <bb 35> (<L13>);

  }
  bb_18 (preds = {bb_16 }, succs = {bb_21 })
  {
    <bb 18>:
    # .MEM_83 = VDEF <.MEM_82>
    operator delete (_17);
    goto <bb 21>;

  }
  bb_19 (preds = {bb_15 }, succs = {bb_20 bb_14 })
  {
    <bb 19>:
    # .MEM_84 = VDEF <.MEM_108>
    OBJ_TYPE_REF(_19;(struct Arbiter)_17->1) (_17);
    goto <bb 14>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_35 })
  {
  <L20>:
    goto <bb 35> (<L13>);

  }
  bb_21 (preds = {bb_42 bb_18 }, succs = {bb_22 bb_23 })
  {
    <bb 21>:
    # .MEM_4 = PHI <.MEM_105(42), .MEM_83(18)>
    # DEBUG D#198 => &this_7(D)->_group_reqs
    # DEBUG this => D#198
    # DEBUG D#190 => &D#198->D.29145
    # DEBUG this => D#190
    # DEBUG D#193 => D#198->D.29145._M_impl._M_finish
    # DEBUG D#192 => D#198->D.29145._M_impl._M_start
    # DEBUG __first => D#192
    # DEBUG __last => D#193
    # DEBUG D.34980 => NULL
    # DEBUG D#74 => D#192
    # DEBUG D#75 => D#193
    # DEBUG __first => D#74
    # DEBUG __last => D#75
    # DEBUG D#73 => D#75
    # DEBUG D#72 => D#74
    # DEBUG D#70 => D#72
    # DEBUG D#71 => D#73
    # DEBUG D.34378 => D#70
    # DEBUG D.34377 => D#71
    # DEBUG D#191 => &D#198->D.29145
    # DEBUG this => D#191
    # DEBUG D#189 => D#191->_M_impl._M_end_of_storage
    # DEBUG D#188 => (long int) D#189
    # VUSE <.MEM_4>
    _22 = MEM[(struct _Vector_base *)this_7(D) + 176B]._M_impl._M_start;
    # DEBUG D#187 => (long int) _22
    # DEBUG D#186 => D#188 - D#187
    # DEBUG D#185 => D#186 /[ex] 4
    # DEBUG D#184 => (long unsigned int) D#185
    # DEBUG this => D#191
    # DEBUG __p => _22
    # DEBUG __n => D#184
    if (_22 != 0B)
      goto <bb 22>;
    else
      goto <bb 23>;

  }
  bb_22 (preds = {bb_21 }, succs = {bb_23 })
  {
    <bb 22>:
    # DEBUG D#182 => &D#191->_M_impl
    # DEBUG D#180 => D#182
    # DEBUG D#181 => D#184
    # DEBUG __p => _22
    # DEBUG __a => D#180
    # DEBUG __n => D#181
    # DEBUG D#179 => D#181
    # DEBUG D#178 => D#180
    # DEBUG D#176 => D#178
    # DEBUG D#177 => D#179
    # DEBUG __p => _22
    # DEBUG this => D#176
    # DEBUG D.35018 => D#177
    # .MEM_41 = VDEF <.MEM_4>
    operator delete (_22);

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # .MEM_27 = PHI <.MEM_4(21), .MEM_41(22)>
    # DEBUG D#183 => &D#191->_M_impl
    # DEBUG this => D#183
    # DEBUG this => D#183
    # DEBUG this => D#183
    # .MEM_46 = VDEF <.MEM_27>
    MEM[(struct  &)this_7(D) + 176] ={v} {CLOBBER};
    # DEBUG D#196 => &this_7(D)->_group_arbiters
    # DEBUG this => D#196
    # DEBUG D#170 => &D#196->D.28397
    # DEBUG this => D#170
    # DEBUG D#173 => D#196->D.28397._M_impl._M_finish
    # DEBUG D#172 => D#196->D.28397._M_impl._M_start
    # DEBUG __first => D#172
    # DEBUG __last => D#173
    # DEBUG D.34905 => NULL
    # DEBUG D#64 => D#172
    # DEBUG D#65 => D#173
    # DEBUG __first => D#64
    # DEBUG __last => D#65
    # DEBUG D#63 => D#65
    # DEBUG D#62 => D#64
    # DEBUG D#60 => D#62
    # DEBUG D#61 => D#63
    # DEBUG D.34334 => D#60
    # DEBUG D.34333 => D#61
    # DEBUG D#171 => &D#196->D.28397
    # DEBUG this => D#171
    # DEBUG D#169 => D#171->_M_impl._M_end_of_storage
    # DEBUG D#168 => (long int) D#169
    # VUSE <.MEM_46>
    _37 = MEM[(struct _Vector_base *)this_7(D) + 144B]._M_impl._M_start;
    # DEBUG D#167 => (long int) _37
    # DEBUG D#166 => D#168 - D#167
    # DEBUG D#165 => D#166 /[ex] 8
    # DEBUG D#164 => (long unsigned int) D#165
    # DEBUG this => D#171
    # DEBUG __p => _37
    # DEBUG __n => D#164
    if (_37 != 0B)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#162 => &D#171->_M_impl
    # DEBUG D#160 => D#162
    # DEBUG D#161 => D#164
    # DEBUG __p => _37
    # DEBUG __a => D#160
    # DEBUG __n => D#161
    # DEBUG D#159 => D#161
    # DEBUG D#158 => D#160
    # DEBUG D#156 => D#158
    # DEBUG D#157 => D#159
    # DEBUG __p => _37
    # DEBUG this => D#156
    # DEBUG D.35003 => D#157
    # .MEM_47 = VDEF <.MEM_46>
    operator delete (_37);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_26 bb_27 })
  {
    <bb 25>:
    # .MEM_38 = PHI <.MEM_46(23), .MEM_47(24)>
    # DEBUG D#163 => &D#171->_M_impl
    # DEBUG this => D#163
    # DEBUG this => D#163
    # DEBUG this => D#163
    # .MEM_52 = VDEF <.MEM_38>
    MEM[(struct  &)this_7(D) + 144] ={v} {CLOBBER};
    # DEBUG D#351 => &this_7(D)->D.29196
    # DEBUG this => D#351
    # .MEM_85 = VDEF <.MEM_52>
    MEM[(struct Arbiter *)this_7(D)].D.27639._vptr.Module = &MEM[(void *)&_ZTV7Arbiter + 16B];
    # DEBUG D#153 => &D#351->_request
    # DEBUG this => D#153
    # DEBUG D#149 => &D#153->D.27582
    # DEBUG this => D#149
    # DEBUG D#152 => D#153->D.27582._M_impl._M_finish
    # DEBUG D#151 => D#153->D.27582._M_impl._M_start
    # DEBUG D#57 => D#151
    # DEBUG D#58 => D#152
    # DEBUG __first => D#57
    # DEBUG __last => D#58
    # DEBUG D.34811 => D#59
    # DEBUG D#56 => D#58
    # DEBUG D#55 => D#57
    # DEBUG D#53 => D#55
    # DEBUG D#54 => D#56
    # DEBUG __first => D#53
    # DEBUG __last => D#54
    # DEBUG D#52 => D#54
    # DEBUG D#51 => D#53
    # DEBUG D#49 => D#51
    # DEBUG D#50 => D#52
    # DEBUG D.34296 => D#49
    # DEBUG D.34295 => D#50
    # DEBUG D#150 => &D#153->D.27582
    # DEBUG this => D#150
    # DEBUG D#148 => D#150->_M_impl._M_end_of_storage
    # DEBUG D#147 => (long int) D#148
    # VUSE <.MEM_85>
    _69 = MEM[(struct _Vector_base *)this_7(D) + 96B]._M_impl._M_start;
    # DEBUG D#146 => (long int) _69
    # DEBUG D#145 => D#147 - D#146
    # DEBUG D#144 => D#145 /[ex] 12
    # DEBUG D#141 => D#150
    # DEBUG D#142 => (long unsigned int) D#144
    # DEBUG __p => _69
    # DEBUG this => D#141
    # DEBUG __n => D#142
    # DEBUG D#140 => D#142
    # DEBUG D#139 => D#141
    if (_69 != 0B)
      goto <bb 26>;
    else
      goto <bb 27>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    # DEBUG D#138 => &D#139->_M_impl
    # DEBUG D#136 => D#138
    # DEBUG D#137 => D#140
    # DEBUG __p => _69
    # DEBUG __a => D#136
    # DEBUG __n => D#137
    # DEBUG D#135 => D#137
    # DEBUG D#134 => D#136
    # DEBUG D#132 => D#134
    # DEBUG D#133 => D#135
    # DEBUG __p => _69
    # DEBUG this => D#132
    # DEBUG D.37879 => D#133
    # .MEM_86 = VDEF <.MEM_85>
    operator delete (_69);

  }
  bb_27 (preds = {bb_25 bb_26 }, succs = {bb_28 bb_29 })
  {
    <bb 27>:
    # .MEM_75 = PHI <.MEM_85(25), .MEM_86(26)>
    # DEBUG D#143 => &D#150->_M_impl
    # DEBUG this => D#143
    # DEBUG this => D#143
    # DEBUG this => D#143
    # .MEM_91 = VDEF <.MEM_75>
    MEM[(struct  &)this_7(D) + 96] ={v} {CLOBBER};
    # DEBUG D#350 => &MEM[(struct Arbiter *)this_7(D)].D.27639
    # DEBUG this => D#350
    # .MEM_92 = VDEF <.MEM_91>
    MEM[(struct Module *)this_7(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#131 => &D#350->_children
    # DEBUG this => D#131
    # DEBUG D#125 => &D#131->D.26765
    # DEBUG this => D#125
    # DEBUG D#128 => D#131->D.26765._M_impl._M_finish
    # DEBUG D#127 => D#131->D.26765._M_impl._M_start
    # DEBUG D#46 => D#127
    # DEBUG D#47 => D#128
    # DEBUG __first => D#46
    # DEBUG __last => D#47
    # DEBUG D.34684 => D#48
    # DEBUG D#45 => D#47
    # DEBUG D#44 => D#46
    # DEBUG D#42 => D#44
    # DEBUG D#43 => D#45
    # DEBUG __first => D#42
    # DEBUG __last => D#43
    # DEBUG D#41 => D#43
    # DEBUG D#40 => D#42
    # DEBUG D#38 => D#40
    # DEBUG D#39 => D#41
    # DEBUG D.34258 => D#38
    # DEBUG D.34257 => D#39
    # DEBUG D#126 => &D#131->D.26765
    # DEBUG this => D#126
    # DEBUG D#124 => D#126->_M_impl._M_end_of_storage
    # DEBUG D#123 => (long int) D#124
    # VUSE <.MEM_92>
    _24 = MEM[(struct _Vector_base *)this_7(D) + 72B]._M_impl._M_start;
    # DEBUG D#122 => (long int) _24
    # DEBUG D#121 => D#123 - D#122
    # DEBUG D#120 => D#121 /[ex] 8
    # DEBUG D#117 => D#126
    # DEBUG D#118 => (long unsigned int) D#120
    # DEBUG __p => _24
    # DEBUG this => D#117
    # DEBUG __n => D#118
    # DEBUG D#116 => D#118
    # DEBUG D#115 => D#117
    if (_24 != 0B)
      goto <bb 28>;
    else
      goto <bb 29>;

  }
  bb_28 (preds = {bb_27 }, succs = {bb_29 })
  {
    <bb 28>:
    # DEBUG D#114 => &D#115->_M_impl
    # DEBUG D#112 => D#114
    # DEBUG D#113 => D#116
    # DEBUG __p => _24
    # DEBUG __a => D#112
    # DEBUG __n => D#113
    # DEBUG D#111 => D#113
    # DEBUG D#110 => D#112
    # DEBUG D#108 => D#110
    # DEBUG D#109 => D#111
    # DEBUG __p => _24
    # DEBUG this => D#108
    # DEBUG D.37895 => D#109
    # .MEM_93 = VDEF <.MEM_92>
    operator delete (_24);

  }
  bb_29 (preds = {bb_27 bb_28 }, succs = {bb_30 bb_31 })
  {
    <bb 29>:
    # .MEM_76 = PHI <.MEM_92(27), .MEM_93(28)>
    # DEBUG D#119 => &D#126->_M_impl
    # DEBUG this => D#119
    # DEBUG this => D#119
    # DEBUG this => D#119
    # .MEM_98 = VDEF <.MEM_76>
    MEM[(struct  &)this_7(D) + 72] ={v} {CLOBBER};
    # DEBUG D#130 => &D#350->_fullname
    # DEBUG this => D#130
    # DEBUG this => D#130
    # DEBUG this => D#130
    # VUSE <.MEM_98>
    _71 = MEM[(char * *)this_7(D) + 40B];
    # DEBUG D#5 => D#130
    # DEBUG this => D#5
    # DEBUG this => D#130
    _72 = &MEM[(const struct basic_string *)this_7(D) + 40B].D.13836._M_local_buf;
    if (_71 != _72)
      goto <bb 30>;
    else
      goto <bb 31>;

  }
  bb_30 (preds = {bb_29 }, succs = {bb_31 })
  {
    <bb 30>:
    # DEBUG D#100 => MEM[(struct basic_string *)D#130].D.13836._M_allocated_capacity
    # DEBUG D#99 => D#100
    # DEBUG this => D#130
    # DEBUG __size => D#99
    # DEBUG D#98 => D#99
    # DEBUG D#5 => D#130
    # DEBUG this => D#5
    # DEBUG this => D#130
    # DEBUG D#97 => &MEM[(struct basic_string *)D#130]._M_dataplus
    # DEBUG D#95 => D#97
    # DEBUG D#96 => D#98 + 1
    # DEBUG __p => _71
    # DEBUG __a => D#95
    # DEBUG __n => D#96
    # DEBUG D#94 => D#96
    # DEBUG D#93 => D#95
    # DEBUG D#91 => D#93
    # DEBUG D#92 => D#94
    # DEBUG __p => _71
    # DEBUG this => D#91
    # DEBUG D.37908 => D#92
    # .MEM_99 = VDEF <.MEM_98>
    operator delete (_71);

  }
  bb_31 (preds = {bb_29 bb_30 }, succs = {bb_32 bb_33 })
  {
    <bb 31>:
    # .MEM_77 = PHI <.MEM_98(29), .MEM_99(30)>
    # DEBUG D#101 => &MEM[(struct basic_string *)D#130]._M_dataplus
    # DEBUG this => D#101
    # DEBUG this => D#101
    # DEBUG this => D#101
    # .MEM_103 = VDEF <.MEM_77>
    MEM[(struct  &)this_7(D) + 40] ={v} {CLOBBER};
    # DEBUG D#129 => &D#350->_name
    # DEBUG this => D#129
    # DEBUG this => D#129
    # DEBUG this => D#129
    # VUSE <.MEM_103>
    _73 = MEM[(char * *)this_7(D) + 8B];
    # DEBUG D#5 => D#129
    # DEBUG this => D#5
    # DEBUG this => D#129
    _74 = &MEM[(const struct basic_string *)this_7(D) + 8B].D.13836._M_local_buf;
    if (_73 != _74)
      goto <bb 32>;
    else
      goto <bb 33>;

  }
  bb_32 (preds = {bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # DEBUG D#100 => MEM[(struct basic_string *)D#129].D.13836._M_allocated_capacity
    # DEBUG D#99 => D#100
    # DEBUG this => D#129
    # DEBUG __size => D#99
    # DEBUG D#98 => D#99
    # DEBUG D#5 => D#129
    # DEBUG this => D#5
    # DEBUG this => D#129
    # DEBUG D#97 => &MEM[(struct basic_string *)D#129]._M_dataplus
    # DEBUG D#95 => D#97
    # DEBUG D#96 => D#98 + 1
    # DEBUG __p => _73
    # DEBUG __a => D#95
    # DEBUG __n => D#96
    # DEBUG D#94 => D#96
    # DEBUG D#93 => D#95
    # DEBUG D#91 => D#93
    # DEBUG D#92 => D#94
    # DEBUG __p => _73
    # DEBUG this => D#91
    # DEBUG D.37923 => D#92
    # .MEM_104 = VDEF <.MEM_103>
    operator delete (_73);

  }
  bb_33 (preds = {bb_31 bb_32 }, succs = {bb_1 })
  {
    <bb 33>:
    # .MEM_78 = PHI <.MEM_103(31), .MEM_104(32)>
    # DEBUG D#101 => &MEM[(struct basic_string *)D#129]._M_dataplus
    # DEBUG this => D#101
    # DEBUG this => D#101
    # DEBUG this => D#101
    # .MEM_25 = VDEF <.MEM_78>
    MEM[(struct  &)this_7(D)] ={v} {CLOBBER};
    # VUSE <.MEM_25>
    return;

  }
  bb_34 (preds = {bb_7 }, succs = {bb_35 })
  {
  <L17>:

  }
  bb_35 (preds = {bb_10 bb_20 bb_34 bb_17 }, succs = {bb_36 bb_37 })
  {
    # .MEM_5 = PHI <.MEM_81(10), .MEM_84(20), .MEM_79(34), .MEM_82(17)>
  <L13>:
    # DEBUG D#199 => &this_7(D)->_group_reqs
    # DEBUG this => D#199
    # DEBUG D#190 => &D#199->D.29145
    # DEBUG this => D#190
    # DEBUG D#193 => D#199->D.29145._M_impl._M_finish
    # DEBUG D#192 => D#199->D.29145._M_impl._M_start
    # DEBUG __first => D#192
    # DEBUG __last => D#193
    # DEBUG D.34980 => NULL
    # DEBUG D#74 => D#192
    # DEBUG D#75 => D#193
    # DEBUG __first => D#74
    # DEBUG __last => D#75
    # DEBUG D#73 => D#75
    # DEBUG D#72 => D#74
    # DEBUG D#70 => D#72
    # DEBUG D#71 => D#73
    # DEBUG D.34378 => D#70
    # DEBUG D.34377 => D#71
    # DEBUG D#191 => &D#199->D.29145
    # DEBUG this => D#191
    # DEBUG D#189 => D#191->_M_impl._M_end_of_storage
    # DEBUG D#188 => (long int) D#189
    # VUSE <.MEM_5>
    _21 = MEM[(struct _Vector_base *)this_7(D) + 176B]._M_impl._M_start;
    # DEBUG D#187 => (long int) _21
    # DEBUG D#186 => D#188 - D#187
    # DEBUG D#185 => D#186 /[ex] 4
    # DEBUG D#184 => (long unsigned int) D#185
    # DEBUG this => D#191
    # DEBUG __p => _21
    # DEBUG __n => D#184
    if (_21 != 0B)
      goto <bb 36>;
    else
      goto <bb 37>;

  }
  bb_36 (preds = {bb_35 }, succs = {bb_37 })
  {
    <bb 36>:
    # DEBUG D#182 => &D#191->_M_impl
    # DEBUG D#180 => D#182
    # DEBUG D#181 => D#184
    # DEBUG __p => _21
    # DEBUG __a => D#180
    # DEBUG __n => D#181
    # DEBUG D#179 => D#181
    # DEBUG D#178 => D#180
    # DEBUG D#176 => D#178
    # DEBUG D#177 => D#179
    # DEBUG __p => _21
    # DEBUG this => D#176
    # DEBUG D.35033 => D#177
    # .MEM_53 = VDEF <.MEM_5>
    operator delete (_21);

  }
  bb_37 (preds = {bb_35 bb_36 }, succs = {bb_38 })
  {
    <bb 37>:
    # .MEM_39 = PHI <.MEM_5(35), .MEM_53(36)>
    # DEBUG D#183 => &D#191->_M_impl
    # DEBUG this => D#183
    # DEBUG this => D#183
    # DEBUG this => D#183
    # .MEM_58 = VDEF <.MEM_39>
    MEM[(struct  &)this_7(D) + 176] ={v} {CLOBBER};
    resx 4

  }
  bb_38 (preds = {bb_37 }, succs = {bb_39 bb_40 })
  {
  <L14>:
    # DEBUG D#197 => &this_7(D)->_group_arbiters
    # DEBUG this => D#197
    # DEBUG D#170 => &D#197->D.28397
    # DEBUG this => D#170
    # DEBUG D#173 => D#197->D.28397._M_impl._M_finish
    # DEBUG D#172 => D#197->D.28397._M_impl._M_start
    # DEBUG __first => D#172
    # DEBUG __last => D#173
    # DEBUG D.34905 => NULL
    # DEBUG D#64 => D#172
    # DEBUG D#65 => D#173
    # DEBUG __first => D#64
    # DEBUG __last => D#65
    # DEBUG D#63 => D#65
    # DEBUG D#62 => D#64
    # DEBUG D#60 => D#62
    # DEBUG D#61 => D#63
    # DEBUG D.34334 => D#60
    # DEBUG D.34333 => D#61
    # DEBUG D#171 => &D#197->D.28397
    # DEBUG this => D#171
    # DEBUG D#169 => D#171->_M_impl._M_end_of_storage
    # DEBUG D#168 => (long int) D#169
    # VUSE <.MEM_58>
    _26 = MEM[(struct _Vector_base *)this_7(D) + 144B]._M_impl._M_start;
    # DEBUG D#167 => (long int) _26
    # DEBUG D#166 => D#168 - D#167
    # DEBUG D#165 => D#166 /[ex] 8
    # DEBUG D#164 => (long unsigned int) D#165
    # DEBUG this => D#171
    # DEBUG __p => _26
    # DEBUG __n => D#164
    if (_26 != 0B)
      goto <bb 39>;
    else
      goto <bb 40>;

  }
  bb_39 (preds = {bb_38 }, succs = {bb_40 })
  {
    <bb 39>:
    # DEBUG D#162 => &D#171->_M_impl
    # DEBUG D#160 => D#162
    # DEBUG D#161 => D#164
    # DEBUG __p => _26
    # DEBUG __a => D#160
    # DEBUG __n => D#161
    # DEBUG D#159 => D#161
    # DEBUG D#158 => D#160
    # DEBUG D#156 => D#158
    # DEBUG D#157 => D#159
    # DEBUG __p => _26
    # DEBUG this => D#156
    # DEBUG D.35048 => D#157
    # .MEM_59 = VDEF <.MEM_58>
    operator delete (_26);

  }
  bb_40 (preds = {bb_38 bb_39 }, succs = {bb_41 })
  {
    <bb 40>:
    # .MEM_40 = PHI <.MEM_58(38), .MEM_59(39)>
    # DEBUG D#163 => &D#171->_M_impl
    # DEBUG this => D#163
    # DEBUG this => D#163
    # DEBUG this => D#163
    # .MEM_64 = VDEF <.MEM_40>
    MEM[(struct  &)this_7(D) + 144] ={v} {CLOBBER};
    resx 3

  }
  bb_41 (preds = {bb_40 }, succs = {})
  {
  <L15>:
    _28 = &this_7(D)->D.29196;
    # .MEM_29 = VDEF <.MEM_64>
    Arbiter::~Arbiter (_28);
    resx 2

  }
  loop_1 (header = 5, latch = 13, niter = , upper_bound = 2147483647)
  {
    bb_5 (preds = {bb_4 bb_13 }, succs = {bb_6 bb_12 })
    {
      <bb 5>:
      # i_115 = PHI <0(4), i_16(13)>
      # .MEM_113 = PHI <.MEM_8(4), .MEM_3(13)>
      # _112 = PHI <_117(4), prephitmp_70(13)>
      # prephitmp_106 = PHI <_114(4), prephitmp_23(13)>
      # prephitmp_107 = PHI <_117(4), prephitmp_70(13)>
      # DEBUG i => i_115
      # DEBUG D#195 => &this_7(D)->_group_arbiters
      # DEBUG D#14 => D#195
      # DEBUG this => D#14
      # DEBUG this => D#14
      _11 = (long unsigned int) i_115;
      # DEBUG D#194 => &this_7(D)->_group_arbiters
      # DEBUG D#13 => D#194
      # DEBUG __n => _11
      # DEBUG this => D#13
      _35 = _11 * 8;
      _36 = _112 + _35;
      # VUSE <.MEM_113>
      _12 = *_36;
      if (_12 != 0B)
        goto <bb 6>;
      else
        goto <bb 12>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 bb_9 })
    {
      <bb 6>:
      # VUSE <.MEM_113>
      _13 = _12->D.27639._vptr.Module;
      # VUSE <.MEM_113>
      _14 = MEM[(int (*__vtbl_ptr_type) () *)_13 + 8B];
      PROF_65 = [obj_type_ref] OBJ_TYPE_REF(_14;(struct Arbiter)_12->1);
      if (PROF_65 == __deleting_dtor )
        goto <bb 7>;
      else
        goto <bb 9>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_8 bb_34 })
    {
      <bb 7>:
      # DEBUG this => _12
      # .MEM_79 = VDEF <.MEM_113>
      TreeArbiter::~TreeArbiter (_12);

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 })
    {
      <bb 8>:
      # .MEM_80 = VDEF <.MEM_79>
      operator delete (_12);
      # VUSE <.MEM_80>
      pretmp_109 = MEM[(struct Arbiter * * *)this_7(D) + 144B];
      # VUSE <.MEM_80>
      pretmp_1 = MEM[(struct Arbiter * * *)this_7(D) + 152B];
      goto <bb 12>;

    }
    bb_9 (preds = {bb_6 }, succs = {bb_10 bb_11 })
    {
      <bb 9>:
      # .MEM_81 = VDEF <.MEM_113>
      OBJ_TYPE_REF(_14;(struct Arbiter)_12->1) (_12);
      goto <bb 11>;

    }
    bb_11 (preds = {bb_9 }, succs = {bb_12 })
    {
      <bb 11>:
      # VUSE <.MEM_81>
      pretmp_110 = MEM[(struct Arbiter * * *)this_7(D) + 144B];
      # VUSE <.MEM_81>
      pretmp_2 = MEM[(struct Arbiter * * *)this_7(D) + 152B];

    }
    bb_12 (preds = {bb_5 bb_8 bb_11 }, succs = {bb_13 bb_3 })
    {
      <bb 12>:
      # .MEM_3 = PHI <.MEM_113(5), .MEM_80(8), .MEM_81(11)>
      # prephitmp_70 = PHI <prephitmp_107(5), pretmp_109(8), pretmp_110(11)>
      # prephitmp_23 = PHI <prephitmp_106(5), pretmp_1(8), pretmp_2(11)>
      i_16 = i_115 + 1;
      # DEBUG i => i_16
      # DEBUG i => i_16
      # DEBUG D#195 => &this_7(D)->_group_arbiters
      # DEBUG D#14 => D#195
      # DEBUG D#14 => D#195
      # DEBUG this => D#14
      # DEBUG this => D#14
      _9 = (long int) prephitmp_23;
      _32 = (long int) prephitmp_70;
      _33 = _9 - _32;
      _34 = _33 /[ex] 8;
      _10 = (int) _34;
      if (_10 > i_16)
        goto <bb 13>;
      else
        goto <bb 3>;

    }
    bb_13 (preds = {bb_12 }, succs = {bb_5 })
    {
      <bb 13>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

TreeArbiter::~TreeArbiter() (struct TreeArbiterD.27650 * const thisD.29194)
Eh tree:
   2 cleanup land:{3,<L15>}
     3 cleanup land:{2,<L14>}
       4 cleanup land:{7,<L19>},{6,<L18>},{5,<L17>},{1,<L20>}
{
  intD.9 iD.30386;
  struct ArbiterD.26830 * * const pretmp_1;
  struct ArbiterD.26830 * * const pretmp_2;
  long intD.12 _9;
  intD.9 _10;
  long unsigned intD.14 _11;
  struct ArbiterD.26830 * _12;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _13;
  intD.9 (*__vtbl_ptr_typeD.2760) () _14;
  struct ArbiterD.26830 * _17;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _18;
  intD.9 (*__vtbl_ptr_typeD.2760) () _19;
  intD.9 * _21;
  intD.9 * _22;
  struct ArbiterD.26830 * * const prephitmp_23;
  struct ModuleD.26017 * * _24;
  struct ArbiterD.26830 * * _26;
  struct ArbiterD.26830 * _28;
  long intD.12 _32;
  long intD.12 _33;
  long intD.12 _34;
  long unsigned intD.14 _35;
  struct ArbiterD.26830 * & _36;
  struct ArbiterD.26830 * * _37;
  voidD.45 * PROF_65;
  voidD.45 * PROF_67;
  struct N7Arbiter7entry_tED.26837 * _69;
  struct ArbiterD.26830 * * const prephitmp_70;
  charD.10 * const _71;
  const charD.10 * _72;
  charD.10 * const _73;
  const charD.10 * _74;
  struct ArbiterD.26830 * * const prephitmp_106;
  struct ArbiterD.26830 * * const prephitmp_107;
  struct ArbiterD.26830 * * const pretmp_109;
  struct ArbiterD.26830 * * const pretmp_110;
  struct ArbiterD.26830 * * const _112;
  struct ArbiterD.26830 * * const _114;
  long intD.12 _116;
  struct ArbiterD.26830 * * const _117;
  intD.9 _118;
  long intD.12 _119;
  long intD.12 _120;
  long intD.12 _121;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = VDEF <.MEM_6(D)>
  this_7(D)->D.29196.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV11TreeArbiterD.29202 + 16B];
  # DEBUG iD.30386 => 0
  # DEBUG iD.30386 => 0
  # DEBUG D#195ptD.0 => &this_7(D)->_group_arbitersD.28399
  # VUSE <.MEM_8>
  # PT = nonlocal escaped 
  _117 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # DEBUG D#14ptD.0 => D#195ptD.0
  # VUSE <.MEM_8>
  # PT = nonlocal escaped 
  _114 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
  # DEBUG D#14ptD.0 => D#195ptD.0
  # DEBUG thisD.34987 => D#14ptD.0
  # DEBUG thisD.34986 => D#14ptD.0
  _121 = (long intD.12) _114;
  _120 = (long intD.12) _117;
  _116 = _121 - _120;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _119 = _116 /[ex] 8;
  _118 = (intD.9) _119;
  if (_118 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [4.5%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_108 = PHI <.MEM_8(2), .MEM_3(12)>
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _17 = this_7(D)->_global_arbiterD.28400;
  if (_17 != 0B)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_115 = PHI <0(4), i_16(13)>
  # .MEM_113 = PHI <.MEM_8(4), .MEM_3(13)>
  # PT = nonlocal escaped 
  # _112 = PHI <_117(4), prephitmp_70(13)>
  # prephitmp_106 = PHI <_114(4), prephitmp_23(13)>
  # prephitmp_107 = PHI <_117(4), prephitmp_70(13)>
  # DEBUG iD.30386 => i_115
  # DEBUG D#195ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#195ptD.0
  # DEBUG thisD.34987 => D#14ptD.0
  # DEBUG thisD.34986 => D#14ptD.0
  # RANGE [0, 18446744073709551615]
  _11 = (long unsigned intD.14) i_115;
  # DEBUG D#194ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#13ptD.0 => D#194ptD.0
  # DEBUG __nD.34990 => _11
  # DEBUG thisD.34991 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _35 = _11 * 8;
  # PT = nonlocal escaped 
  _36 = _112 + _35;
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  _12 = *_36;
  if (_12 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;
;;    succ:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 6669, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  _13 = _12->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_113>
  # PT = nonlocal escaped 
  _14 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_13 + 8B];
  # PT = anything 
  PROF_65 = [obj_type_ref] OBJ_TYPE_REF(_14;(struct ArbiterD.26830)_12->1);
  if (PROF_65 == _ZN11TreeArbiterD0EvD.29187)
    goto <bb 7>;
  else
    goto <bb 9>;
;;    succ:       7 [80.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [20.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 5335, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [80.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.37866 => _12
  [LP 5] # .MEM_79 = VDEF <.MEM_113>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZN11TreeArbiterD1EvD.29190 (_12);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 (EH,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 5335, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_80 = VDEF <.MEM_79>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_12);
  # VUSE <.MEM_80>
  pretmp_109 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # VUSE <.MEM_80>
  pretmp_1 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 1334, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       6 [20.0%]  (FALSE_VALUE,EXECUTABLE)
  [LP 6] # .MEM_81 = VDEF <.MEM_113>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  OBJ_TYPE_REF(_14;(struct ArbiterD.26830)_12->1) (_12);
  goto <bb 11>;
;;    succ:       10 (EH,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 (EH,EXECUTABLE)
<L18>: [LP 6]
  goto <bb 35> (<L13>);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 1334, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_81>
  pretmp_110 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 144B];
  # VUSE <.MEM_81>
  pretmp_2 = MEM[(struct ArbiterD.26830 * * *)this_7(D) + 152B];
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       5 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_113(5), .MEM_80(8), .MEM_81(11)>
  # PT = nonlocal escaped 
  # prephitmp_70 = PHI <prephitmp_107(5), pretmp_109(8), pretmp_110(11)>
  # PT = nonlocal escaped 
  # prephitmp_23 = PHI <prephitmp_106(5), pretmp_1(8), pretmp_2(11)>
  i_16 = i_115 + 1;
  # DEBUG iD.30386 => i_16
  # DEBUG iD.30386 => i_16
  # DEBUG D#195ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG D#14ptD.0 => D#195ptD.0
  # DEBUG D#14ptD.0 => D#195ptD.0
  # DEBUG thisD.34987 => D#14ptD.0
  # DEBUG thisD.34986 => D#14ptD.0
  _9 = (long intD.12) prephitmp_23;
  _32 = (long intD.12) prephitmp_70;
  _33 = _9 - _32;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _34 = _33 /[ex] 8;
  _10 = (intD.9) _34;
  if (_10 > i_16)
    goto <bb 13>;
  else
    goto <bb 3>;
;;    succ:       13 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 13, next block 42, flags: (NEW)
;;    pred:       3 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_105 = PHI <.MEM_108(3), .MEM_84(19)>
;;    succ:       42 [100.0%]  (FALLTHRU)

;;   basic block 42, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 42, next block 16, flags: (NEW, REACHABLE)
;;    pred:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _18 = _17->D.27639._vptr.ModuleD.26812;
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _19 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_18 + 8B];
  # PT = anything 
  PROF_67 = [obj_type_ref] OBJ_TYPE_REF(_19;(struct ArbiterD.26830)_17->1);
  if (PROF_67 == _ZN11TreeArbiterD0EvD.29187)
    goto <bb 16>;
  else
    goto <bb 19>;
;;    succ:       16 [79.9%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [20.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 251, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [79.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.37867 => _17
  [LP 7] # .MEM_82 = VDEF <.MEM_108>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZN11TreeArbiterD1EvD.29190 (_17);
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 (EH,EXECUTABLE)
<L19>: [LP 7]
  goto <bb 35> (<L13>);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 251, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_83 = VDEF <.MEM_82>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 63, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       15 [20.1%]  (FALSE_VALUE,EXECUTABLE)
  [LP 1] # .MEM_84 = VDEF <.MEM_108>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  OBJ_TYPE_REF(_19;(struct ArbiterD.26830)_17->1) (_17);
  goto <bb 14>;
;;    succ:       20 (EH,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L20>: [LP 1]
  goto <bb 35> (<L13>);
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_105(42), .MEM_83(18)>
  # DEBUG D#198ptD.0 => &this_7(D)->_group_reqsD.29147
  # DEBUG thisD.35008 => D#198ptD.0
  # DEBUG D#190ptD.0 => &D#198ptD.0->D.29145
  # DEBUG thisD.34981 => D#190ptD.0
  # DEBUG D#193ptD.0 => D#198ptD.0->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG D#192ptD.0 => D#198ptD.0->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.34978 => D#192ptD.0
  # DEBUG __lastD.34979 => D#193ptD.0
  # DEBUG D.34980 => NULL
  # DEBUG D#74ptD.0 => D#192ptD.0
  # DEBUG D#75ptD.0 => D#193ptD.0
  # DEBUG __firstD.34389 => D#74ptD.0
  # DEBUG __lastD.34388 => D#75ptD.0
  # DEBUG D#73ptD.0 => D#75ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#71ptD.0 => D#73ptD.0
  # DEBUG D.34378 => D#70ptD.0
  # DEBUG D.34377 => D#71ptD.0
  # DEBUG D#191ptD.0 => &D#198ptD.0->D.29145
  # DEBUG thisD.35009 => D#191ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0->_M_implD.28636._M_end_of_storageD.28640
  # DEBUG D#188ptD.0 => (long intD.12) D#189ptD.0
  # VUSE <.MEM_4>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Vector_baseD.28403 *)this_7(D) + 176B]._M_implD.28636._M_startD.28638;
  # DEBUG D#187ptD.0 => (long intD.12) _22
  # DEBUG D#186ptD.0 => D#188ptD.0 - D#187ptD.0
  # DEBUG D#185ptD.0 => D#186ptD.0 /[ex] 4
  # DEBUG D#184ptD.0 => (long unsigned intD.14) D#185ptD.0
  # DEBUG thisD.35012 => D#191ptD.0
  # DEBUG __pD.35011 => _22
  # DEBUG __nD.35010 => D#184ptD.0
  if (_22 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#182ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#181ptD.0 => D#184ptD.0
  # DEBUG __pD.35016 => _22
  # DEBUG __aD.35014 => D#180ptD.0
  # DEBUG __nD.35015 => D#181ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG D#176ptD.0 => D#178ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG __pD.35019 => _22
  # DEBUG thisD.35017 => D#176ptD.0
  # DEBUG D.35018 => D#177ptD.0
  # .MEM_41 = VDEF <.MEM_4>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_4(21), .MEM_41(22)>
  # DEBUG D#183ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG thisD.35020 => D#183ptD.0
  # DEBUG thisD.35021 => D#183ptD.0
  # DEBUG thisD.35022 => D#183ptD.0
  # .MEM_46 = VDEF <.MEM_27>
  MEM[(struct  &)this_7(D) + 176] ={v} {CLOBBER};
  # DEBUG D#196ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG thisD.34993 => D#196ptD.0
  # DEBUG D#170ptD.0 => &D#196ptD.0->D.28397
  # DEBUG thisD.34906 => D#170ptD.0
  # DEBUG D#173ptD.0 => D#196ptD.0->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG D#172ptD.0 => D#196ptD.0->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.34903 => D#172ptD.0
  # DEBUG __lastD.34904 => D#173ptD.0
  # DEBUG D.34905 => NULL
  # DEBUG D#64ptD.0 => D#172ptD.0
  # DEBUG D#65ptD.0 => D#173ptD.0
  # DEBUG __firstD.34345 => D#64ptD.0
  # DEBUG __lastD.34344 => D#65ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D.34334 => D#60ptD.0
  # DEBUG D.34333 => D#61ptD.0
  # DEBUG D#171ptD.0 => &D#196ptD.0->D.28397
  # DEBUG thisD.34994 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0->_M_implD.27888._M_end_of_storageD.27892
  # DEBUG D#168ptD.0 => (long intD.12) D#169ptD.0
  # VUSE <.MEM_46>
  # PT = nonlocal escaped 
  _37 = MEM[(struct _Vector_baseD.27655 *)this_7(D) + 144B]._M_implD.27888._M_startD.27890;
  # DEBUG D#167ptD.0 => (long intD.12) _37
  # DEBUG D#166ptD.0 => D#168ptD.0 - D#167ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0 /[ex] 8
  # DEBUG D#164ptD.0 => (long unsigned intD.14) D#165ptD.0
  # DEBUG thisD.34997 => D#171ptD.0
  # DEBUG __pD.34996 => _37
  # DEBUG __nD.34995 => D#164ptD.0
  if (_37 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 353, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#162ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#161ptD.0 => D#164ptD.0
  # DEBUG __pD.35001 => _37
  # DEBUG __aD.34999 => D#160ptD.0
  # DEBUG __nD.35000 => D#161ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG __pD.35004 => _37
  # DEBUG thisD.35002 => D#156ptD.0
  # DEBUG D.35003 => D#157ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_37);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_46(23), .MEM_47(24)>
  # DEBUG D#163ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG thisD.35005 => D#163ptD.0
  # DEBUG thisD.35006 => D#163ptD.0
  # DEBUG thisD.35007 => D#163ptD.0
  # .MEM_52 = VDEF <.MEM_38>
  MEM[(struct  &)this_7(D) + 144] ={v} {CLOBBER};
  # DEBUG D#351ptD.0 => &this_7(D)->D.29196
  # DEBUG thisD.37868 => D#351ptD.0
  # .MEM_85 = VDEF <.MEM_52>
  MEM[(struct ArbiterD.26830 *)this_7(D)].D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV7ArbiterD.27647 + 16B];
  # DEBUG D#153ptD.0 => &D#351ptD.0->_requestD.27584
  # DEBUG thisD.37869 => D#153ptD.0
  # DEBUG D#149ptD.0 => &D#153ptD.0->D.27582
  # DEBUG thisD.34814 => D#149ptD.0
  # DEBUG D#152ptD.0 => D#153ptD.0->D.27582._M_implD.27073._M_finishD.27076
  # DEBUG D#151ptD.0 => D#153ptD.0->D.27582._M_implD.27073._M_startD.27075
  # DEBUG D#57ptD.0 => D#151ptD.0
  # DEBUG D#58ptD.0 => D#152ptD.0
  # DEBUG __firstD.34813 => D#57ptD.0
  # DEBUG __lastD.34812 => D#58ptD.0
  # DEBUG D.34811 => D#59ptD.0
  # DEBUG D#56ptD.0 => D#58ptD.0
  # DEBUG D#55ptD.0 => D#57ptD.0
  # DEBUG D#53ptD.0 => D#55ptD.0
  # DEBUG D#54ptD.0 => D#56ptD.0
  # DEBUG __firstD.34307 => D#53ptD.0
  # DEBUG __lastD.34306 => D#54ptD.0
  # DEBUG D#52ptD.0 => D#54ptD.0
  # DEBUG D#51ptD.0 => D#53ptD.0
  # DEBUG D#49ptD.0 => D#51ptD.0
  # DEBUG D#50ptD.0 => D#52ptD.0
  # DEBUG D.34296 => D#49ptD.0
  # DEBUG D.34295 => D#50ptD.0
  # DEBUG D#150ptD.0 => &D#153ptD.0->D.27582
  # DEBUG thisD.37870 => D#150ptD.0
  # DEBUG D#148ptD.0 => D#150ptD.0->_M_implD.27073._M_end_of_storageD.27077
  # DEBUG D#147ptD.0 => (long intD.12) D#148ptD.0
  # VUSE <.MEM_85>
  # PT = nonlocal escaped 
  _69 = MEM[(struct _Vector_baseD.26840 *)this_7(D) + 96B]._M_implD.27073._M_startD.27075;
  # DEBUG D#146ptD.0 => (long intD.12) _69
  # DEBUG D#145ptD.0 => D#147ptD.0 - D#146ptD.0
  # DEBUG D#144ptD.0 => D#145ptD.0 /[ex] 12
  # DEBUG D#141ptD.0 => D#150ptD.0
  # DEBUG D#142ptD.0 => (long unsigned intD.14) D#144ptD.0
  # DEBUG __pD.37873 => _69
  # DEBUG thisD.37871 => D#141ptD.0
  # DEBUG __nD.37872 => D#142ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#139ptD.0 => D#141ptD.0
  if (_69 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 353, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#138ptD.0 => &D#139ptD.0->_M_implD.27073
  # DEBUG D#136ptD.0 => D#138ptD.0
  # DEBUG D#137ptD.0 => D#140ptD.0
  # DEBUG __pD.37877 => _69
  # DEBUG __aD.37875 => D#136ptD.0
  # DEBUG __nD.37876 => D#137ptD.0
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG D#134ptD.0 => D#136ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG __pD.37880 => _69
  # DEBUG thisD.37878 => D#132ptD.0
  # DEBUG D.37879 => D#133ptD.0
  # .MEM_86 = VDEF <.MEM_85>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_69);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_85(25), .MEM_86(26)>
  # DEBUG D#143ptD.0 => &D#150ptD.0->_M_implD.27073
  # DEBUG thisD.37881 => D#143ptD.0
  # DEBUG thisD.37882 => D#143ptD.0
  # DEBUG thisD.37883 => D#143ptD.0
  # .MEM_91 = VDEF <.MEM_75>
  MEM[(struct  &)this_7(D) + 96] ={v} {CLOBBER};
  # DEBUG D#350ptD.0 => &MEM[(struct ArbiterD.26830 *)this_7(D)].D.27639
  # DEBUG thisD.37884 => D#350ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(struct ModuleD.26017 *)this_7(D)]._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV6ModuleD.26817 + 16B];
  # DEBUG D#131ptD.0 => &D#350ptD.0->_childrenD.26767
  # DEBUG thisD.37885 => D#131ptD.0
  # DEBUG D#125ptD.0 => &D#131ptD.0->D.26765
  # DEBUG thisD.34687 => D#125ptD.0
  # DEBUG D#128ptD.0 => D#131ptD.0->D.26765._M_implD.26256._M_finishD.26259
  # DEBUG D#127ptD.0 => D#131ptD.0->D.26765._M_implD.26256._M_startD.26258
  # DEBUG D#46ptD.0 => D#127ptD.0
  # DEBUG D#47ptD.0 => D#128ptD.0
  # DEBUG __firstD.34686 => D#46ptD.0
  # DEBUG __lastD.34685 => D#47ptD.0
  # DEBUG D.34684 => D#48ptD.0
  # DEBUG D#45ptD.0 => D#47ptD.0
  # DEBUG D#44ptD.0 => D#46ptD.0
  # DEBUG D#42ptD.0 => D#44ptD.0
  # DEBUG D#43ptD.0 => D#45ptD.0
  # DEBUG __firstD.34269 => D#42ptD.0
  # DEBUG __lastD.34268 => D#43ptD.0
  # DEBUG D#41ptD.0 => D#43ptD.0
  # DEBUG D#40ptD.0 => D#42ptD.0
  # DEBUG D#38ptD.0 => D#40ptD.0
  # DEBUG D#39ptD.0 => D#41ptD.0
  # DEBUG D.34258 => D#38ptD.0
  # DEBUG D.34257 => D#39ptD.0
  # DEBUG D#126ptD.0 => &D#131ptD.0->D.26765
  # DEBUG thisD.37886 => D#126ptD.0
  # DEBUG D#124ptD.0 => D#126ptD.0->_M_implD.26256._M_end_of_storageD.26260
  # DEBUG D#123ptD.0 => (long intD.12) D#124ptD.0
  # VUSE <.MEM_92>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Vector_baseD.26023 *)this_7(D) + 72B]._M_implD.26256._M_startD.26258;
  # DEBUG D#122ptD.0 => (long intD.12) _24
  # DEBUG D#121ptD.0 => D#123ptD.0 - D#122ptD.0
  # DEBUG D#120ptD.0 => D#121ptD.0 /[ex] 8
  # DEBUG D#117ptD.0 => D#126ptD.0
  # DEBUG D#118ptD.0 => (long unsigned intD.14) D#120ptD.0
  # DEBUG __pD.37889 => _24
  # DEBUG thisD.37887 => D#117ptD.0
  # DEBUG __nD.37888 => D#118ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  if (_24 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#114ptD.0 => &D#115ptD.0->_M_implD.26256
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#113ptD.0 => D#116ptD.0
  # DEBUG __pD.37893 => _24
  # DEBUG __aD.37891 => D#112ptD.0
  # DEBUG __nD.37892 => D#113ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#108ptD.0 => D#110ptD.0
  # DEBUG D#109ptD.0 => D#111ptD.0
  # DEBUG __pD.37896 => _24
  # DEBUG thisD.37894 => D#108ptD.0
  # DEBUG D.37895 => D#109ptD.0
  # .MEM_93 = VDEF <.MEM_92>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_76 = PHI <.MEM_92(27), .MEM_93(28)>
  # DEBUG D#119ptD.0 => &D#126ptD.0->_M_implD.26256
  # DEBUG thisD.37897 => D#119ptD.0
  # DEBUG thisD.37898 => D#119ptD.0
  # DEBUG thisD.37899 => D#119ptD.0
  # .MEM_98 = VDEF <.MEM_76>
  MEM[(struct  &)this_7(D) + 72] ={v} {CLOBBER};
  # DEBUG D#130ptD.0 => &D#350ptD.0->_fullnameD.26020
  # DEBUG thisD.37900 => D#130ptD.0
  # DEBUG thisD.37901 => D#130ptD.0
  # DEBUG thisD.37910 => D#130ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped 
  _71 = MEM[(charD.10 * *)this_7(D) + 40B];
  # DEBUG D#5ptD.0 => D#130ptD.0
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.37911 => D#130ptD.0
  # PT = nonlocal 
  _72 = &MEM[(const struct basic_stringD.8425 *)this_7(D) + 40B].D.13836._M_local_bufD.13838;
  if (_71 != _72)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 314, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => MEM[(struct basic_stringD.8425 *)D#130ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.37903 => D#130ptD.0
  # DEBUG __sizeD.37902 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => D#130ptD.0
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => D#130ptD.0
  # DEBUG D#97ptD.0 => &MEM[(struct basic_stringD.8425 *)D#130ptD.0]._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.37906 => _71
  # DEBUG __aD.37904 => D#95ptD.0
  # DEBUG __nD.37905 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.37909 => _71
  # DEBUG thisD.37907 => D#91ptD.0
  # DEBUG D.37908 => D#92ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_71);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_98(29), .MEM_99(30)>
  # DEBUG D#101ptD.0 => &MEM[(struct basic_stringD.8425 *)D#130ptD.0]._M_dataplusD.13816
  # DEBUG thisD.37912 => D#101ptD.0
  # DEBUG thisD.37913 => D#101ptD.0
  # DEBUG thisD.37914 => D#101ptD.0
  # .MEM_103 = VDEF <.MEM_77>
  MEM[(struct  &)this_7(D) + 40] ={v} {CLOBBER};
  # DEBUG D#129ptD.0 => &D#350ptD.0->_nameD.26019
  # DEBUG thisD.37915 => D#129ptD.0
  # DEBUG thisD.37916 => D#129ptD.0
  # DEBUG thisD.37925 => D#129ptD.0
  # VUSE <.MEM_103>
  # PT = nonlocal escaped 
  _73 = MEM[(charD.10 * *)this_7(D) + 8B];
  # DEBUG D#5ptD.0 => D#129ptD.0
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.37926 => D#129ptD.0
  # PT = nonlocal 
  _74 = &MEM[(const struct basic_stringD.8425 *)this_7(D) + 8B].D.13836._M_local_bufD.13838;
  if (_73 != _74)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 353, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => MEM[(struct basic_stringD.8425 *)D#129ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.37918 => D#129ptD.0
  # DEBUG __sizeD.37917 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => D#129ptD.0
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => D#129ptD.0
  # DEBUG D#97ptD.0 => &MEM[(struct basic_stringD.8425 *)D#129ptD.0]._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.37921 => _73
  # DEBUG __aD.37919 => D#95ptD.0
  # DEBUG __nD.37920 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.37924 => _73
  # DEBUG thisD.37922 => D#91ptD.0
  # DEBUG D.37923 => D#92ptD.0
  # .MEM_104 = VDEF <.MEM_103>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_73);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       31 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_78 = PHI <.MEM_103(31), .MEM_104(32)>
  # DEBUG D#101ptD.0 => &MEM[(struct basic_stringD.8425 *)D#129ptD.0]._M_dataplusD.13816
  # DEBUG thisD.37927 => D#101ptD.0
  # DEBUG thisD.37928 => D#101ptD.0
  # DEBUG thisD.37929 => D#101ptD.0
  # .MEM_25 = VDEF <.MEM_78>
  MEM[(struct  &)this_7(D)] ={v} {CLOBBER};
  # VUSE <.MEM_25>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       7 (EH,EXECUTABLE)
<L17>: [LP 5]
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_81(10), .MEM_84(20), .MEM_79(34), .MEM_82(17)>
<L13>:
  # DEBUG D#199ptD.0 => &this_7(D)->_group_reqsD.29147
  # DEBUG thisD.35023 => D#199ptD.0
  # DEBUG D#190ptD.0 => &D#199ptD.0->D.29145
  # DEBUG thisD.34981 => D#190ptD.0
  # DEBUG D#193ptD.0 => D#199ptD.0->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG D#192ptD.0 => D#199ptD.0->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.34978 => D#192ptD.0
  # DEBUG __lastD.34979 => D#193ptD.0
  # DEBUG D.34980 => NULL
  # DEBUG D#74ptD.0 => D#192ptD.0
  # DEBUG D#75ptD.0 => D#193ptD.0
  # DEBUG __firstD.34389 => D#74ptD.0
  # DEBUG __lastD.34388 => D#75ptD.0
  # DEBUG D#73ptD.0 => D#75ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#71ptD.0 => D#73ptD.0
  # DEBUG D.34378 => D#70ptD.0
  # DEBUG D.34377 => D#71ptD.0
  # DEBUG D#191ptD.0 => &D#199ptD.0->D.29145
  # DEBUG thisD.35024 => D#191ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0->_M_implD.28636._M_end_of_storageD.28640
  # DEBUG D#188ptD.0 => (long intD.12) D#189ptD.0
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  _21 = MEM[(struct _Vector_baseD.28403 *)this_7(D) + 176B]._M_implD.28636._M_startD.28638;
  # DEBUG D#187ptD.0 => (long intD.12) _21
  # DEBUG D#186ptD.0 => D#188ptD.0 - D#187ptD.0
  # DEBUG D#185ptD.0 => D#186ptD.0 /[ex] 4
  # DEBUG D#184ptD.0 => (long unsigned intD.14) D#185ptD.0
  # DEBUG thisD.35027 => D#191ptD.0
  # DEBUG __pD.35026 => _21
  # DEBUG __nD.35025 => D#184ptD.0
  if (_21 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#182ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#181ptD.0 => D#184ptD.0
  # DEBUG __pD.35031 => _21
  # DEBUG __aD.35029 => D#180ptD.0
  # DEBUG __nD.35030 => D#181ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG D#176ptD.0 => D#178ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG __pD.35034 => _21
  # DEBUG thisD.35032 => D#176ptD.0
  # DEBUG D.35033 => D#177ptD.0
  # .MEM_53 = VDEF <.MEM_5>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_21);
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       35 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_5(35), .MEM_53(36)>
  # DEBUG D#183ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG thisD.35035 => D#183ptD.0
  # DEBUG thisD.35036 => D#183ptD.0
  # DEBUG thisD.35037 => D#183ptD.0
  # .MEM_58 = VDEF <.MEM_39>
  MEM[(struct  &)this_7(D) + 176] ={v} {CLOBBER};
  [LP 2] resx 4
;;    succ:       38 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 (EH,EXECUTABLE)
<L14>: [LP 2]
  # DEBUG D#197ptD.0 => &this_7(D)->_group_arbitersD.28399
  # DEBUG thisD.35038 => D#197ptD.0
  # DEBUG D#170ptD.0 => &D#197ptD.0->D.28397
  # DEBUG thisD.34906 => D#170ptD.0
  # DEBUG D#173ptD.0 => D#197ptD.0->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG D#172ptD.0 => D#197ptD.0->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.34903 => D#172ptD.0
  # DEBUG __lastD.34904 => D#173ptD.0
  # DEBUG D.34905 => NULL
  # DEBUG D#64ptD.0 => D#172ptD.0
  # DEBUG D#65ptD.0 => D#173ptD.0
  # DEBUG __firstD.34345 => D#64ptD.0
  # DEBUG __lastD.34344 => D#65ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D.34334 => D#60ptD.0
  # DEBUG D.34333 => D#61ptD.0
  # DEBUG D#171ptD.0 => &D#197ptD.0->D.28397
  # DEBUG thisD.35039 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0->_M_implD.27888._M_end_of_storageD.27892
  # DEBUG D#168ptD.0 => (long intD.12) D#169ptD.0
  # VUSE <.MEM_58>
  # PT = nonlocal escaped 
  _26 = MEM[(struct _Vector_baseD.27655 *)this_7(D) + 144B]._M_implD.27888._M_startD.27890;
  # DEBUG D#167ptD.0 => (long intD.12) _26
  # DEBUG D#166ptD.0 => D#168ptD.0 - D#167ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0 /[ex] 8
  # DEBUG D#164ptD.0 => (long unsigned intD.14) D#165ptD.0
  # DEBUG thisD.35042 => D#171ptD.0
  # DEBUG __pD.35041 => _26
  # DEBUG __nD.35040 => D#164ptD.0
  if (_26 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#162ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#161ptD.0 => D#164ptD.0
  # DEBUG __pD.35046 => _26
  # DEBUG __aD.35044 => D#160ptD.0
  # DEBUG __nD.35045 => D#161ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG __pD.35049 => _26
  # DEBUG thisD.35047 => D#156ptD.0
  # DEBUG D.35048 => D#157ptD.0
  # .MEM_59 = VDEF <.MEM_58>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_58(38), .MEM_59(39)>
  # DEBUG D#163ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG thisD.35050 => D#163ptD.0
  # DEBUG thisD.35051 => D#163ptD.0
  # DEBUG thisD.35052 => D#163ptD.0
  # .MEM_64 = VDEF <.MEM_40>
  MEM[(struct  &)this_7(D) + 144] ={v} {CLOBBER};
  [LP 3] resx 3
;;    succ:       41 (EH,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 40, next block 1, flags: (NEW, REACHABLE)
;;    pred:       40 (EH,EXECUTABLE)
<L15>: [LP 3]
  # PT = nonlocal 
  _28 = &this_7(D)->D.29196;
  # .MEM_29 = VDEF <.MEM_64>
  # USE = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  # CLB = nonlocal { D.26817 D.27647 D.29202 } (nonlocal, escaped)
  _ZN7ArbiterD2EvD.27626 (_28);
  resx 2
;;    succ:      

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Arbiter*; _Alloc = std::allocator<Arbiter*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Arbiter**, std::vector<Arbiter*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Arbiter**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Arbiter*] (_ZNSt6vectorIP7ArbiterSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_, funcdef_no=1584, decl_uid=28320, cgraph_uid=563, symbol_order=564)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Arbiter*; _Alloc = std::allocator<Arbiter*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Arbiter**, std::vector<Arbiter*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Arbiter**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Arbiter*] (struct vectorD.27654 * const thisD.28321, struct iteratorD.27965 __positionD.28322, size_typeD.27973 __nD.28323, struct ArbiterD.26830 * const & __xD.28324)
{
  const long unsigned intD.14 D.38063;
  const size_typeD.27973 __lenD.38057;
  size_typeD.27973 D.38062;
  size_typeD.27973 __nD.38055;
  struct ArbiterD.26830 * * D.38053;
  const ptrdiff_tD.2819 _NumD.38043;
  struct ArbiterD.26830 * * D.38044;
  struct ArbiterD.26830 * * const __positionD.36751;
  struct ArbiterD.26830 * * __firstD.36719;
  const ptrdiff_tD.2819 _NumD.36713;
  const ptrdiff_tD.2819 _NumD.36674;
  struct ArbiterD.26830 * * __firstD.36602;
  long unsigned intD.14 __nD.36603;
  struct ArbiterD.26830 * * __firstD.36553;
  const ptrdiff_tD.2819 _NumD.36549;
  struct ArbiterD.26830 * * __firstD.36502;
  struct ArbiterD.26830 * * __new_finishD.31336;
  const size_typeD.27973 __elems_afterD.31300;
  struct ArbiterD.26830 * __x_copyD.31299;
  struct ArbiterD.26830 * * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  struct ArbiterD.26830 * * const _17;
  long unsigned intD.14 _19;
  difference_typeD.30663 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  struct ArbiterD.26830 * * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  struct ArbiterD.26830 * * _41;
  struct ArbiterD.26830 * * _43;
  long intD.12 _47;
  struct ArbiterD.26830 * * _48;
  long intD.12 __first.7_49;
  struct ArbiterD.26830 * * _53;
  struct ArbiterD.26830 * const _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  struct ArbiterD.26830 * * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  struct ArbiterD.26830 * * _108;
  struct ArbiterD.26830 * * _112;
  struct ArbiterD.26830 * * iftmp.12_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  struct ArbiterD.26830 * * prephitmp_146;
  struct ArbiterD.26830 * * pretmp_147;
  struct ArbiterD.26830 * * prephitmp_148;
  struct ArbiterD.26830 * * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  struct ArbiterD.26830 * * pretmp_166;
  struct ArbiterD.26830 * * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  struct ArbiterD.26830 * * pretmp_173;
  struct ArbiterD.26830 * * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#358ptD.0 => MEM[(struct __normal_iteratorD.27966 *)&__positionD.28322]
  # DEBUG __positionD.36751 => D#358ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(13), .MEM_54(23), .MEM_154(26)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.27966 *)&__positionD.28322];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.28397._M_implD.27888._M_end_of_storageD.27892;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.28397._M_implD.27888._M_finishD.27891;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _10 = _9 /[ex] 8;
  # RANGE ~[1152921504606846976, 17293822569102704639]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.31299 => __x_copy_35
  # DEBUG thisD.36497 => this_4(D)
  # DEBUG D#36ptD.0 => &this_4(D)->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG thisD.36499 => NULL
  # DEBUG __iD.36498 => D#36ptD.0
  # DEBUG __lhsD.36494 => &D.31301
  # DEBUG __rhsD.36495 => &__positionD.28322
  # DEBUG thisD.34410 => &D.31301
  # DEBUG thisD.34408 => &__positionD.28322
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _22 = _23 /[ex] 8;
  # RANGE ~[1152921504606846976, 17293822569102704639]
  __elems_after_37 = (const size_typeD.27973) _22;
  # DEBUG __elems_afterD.31300 => __elems_after_37
  # DEBUG __old_finishD.31308 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#285ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36551 => D#285ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _39 = __n_2(D) * 8;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.36516 => _41
  # DEBUG __lastD.36517 => __first_7
  # DEBUG __resultD.36518 => __first_7
  # DEBUG __allocD.36519 => D#277ptD.0
  # DEBUG D#276ptD.0 => D#277ptD.0
  # DEBUG D#275ptD.0 => D#276ptD.0
  # DEBUG __firstD.36523 => _41
  # DEBUG __lastD.36522 => __first_7
  # DEBUG __resultD.36521 => __first_7
  # DEBUG D.36520 => D#275ptD.0
  # DEBUG __firstD.36526 => _41
  # DEBUG __lastD.36525 => __first_7
  # DEBUG __resultD.36524 => __first_7
  # DEBUG __assignableD.36529 => 1
  # DEBUG __firstD.36532 => _41
  # DEBUG __lastD.36531 => __first_7
  # DEBUG __resultD.36530 => __first_7
  # DEBUG __firstD.36535 => _41
  # DEBUG __lastD.36534 => __first_7
  # DEBUG __resultD.36533 => __first_7
  # DEBUG __itD.36245 => __first_7
  # DEBUG __itD.35078 => __first_7
  # DEBUG __itD.36243 => _41
  # DEBUG __itD.35078 => _41
  # DEBUG __firstD.36538 => _41
  # DEBUG __lastD.36537 => __first_7
  # DEBUG __resultD.36536 => __first_7
  # DEBUG __itD.36225 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.36223 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.36221 => _41
  # DEBUG __itD.35081 => _41
  # DEBUG __firstD.36541 => _41
  # DEBUG __lastD.36540 => __first_7
  # DEBUG __resultD.36539 => __first_7
  # DEBUG __simpleD.36545 => 1
  # DEBUG __firstD.36548 => _41
  # DEBUG __lastD.36547 => __first_7
  # DEBUG __resultD.36546 => __first_7
  __first.7_49 = (long intD.12) _41;
  _47 = _8 - __first.7_49;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_45 = _47 /[ex] 8;
  # DEBUG _NumD.36549 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.28397._M_implD.27888._M_finishD.27891;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.28397._M_implD.27888._M_finishD.27891 = _43;
  # DEBUG thisD.36514 => &__positionD.28322
  # DEBUG __firstD.38027 => D#358ptD.0
  # DEBUG __lastD.38028 => _41
  # DEBUG __resultD.38029 => __first_7
  # DEBUG __itD.35344 => _41
  # DEBUG __itD.35078 => _41
  # DEBUG __itD.35342 => D#358ptD.0
  # DEBUG __itD.35078 => D#358ptD.0
  # DEBUG __firstD.38032 => D#358ptD.0
  # DEBUG __lastD.38031 => _41
  # DEBUG __resultD.38030 => __first_7
  # DEBUG __itD.35324 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.35322 => _41
  # DEBUG __itD.35081 => _41
  # DEBUG __itD.35320 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG __firstD.38035 => D#358ptD.0
  # DEBUG __lastD.38034 => _41
  # DEBUG __resultD.38033 => __first_7
  # DEBUG __simpleD.38039 => 1
  # DEBUG __firstD.38042 => D#358ptD.0
  # DEBUG __lastD.38041 => _41
  # DEBUG __resultD.38040 => __first_7
  _104 = __first.7_49 - _27;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_105 = _104 /[ex] 8;
  # DEBUG _NumD.38043 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.36512 => &__positionD.28322
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.36510 => &__positionD.28322
  # DEBUG D#203ptD.0 => &__x_copyD.31299
  # DEBUG __firstD.36502 => D#358ptD.0
  # DEBUG __lastD.36503 => _48
  # DEBUG D#202ptD.0 => D#203ptD.0
  # DEBUG __valueD.36505 => D#202ptD.0
  # DEBUG __itD.35091 => _48
  # DEBUG __itD.35081 => _48
  # DEBUG __itD.35089 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG __firstD.36508 => D#358ptD.0
  # DEBUG __lastD.36507 => _48
  # DEBUG __valueD.36506 => D#200ptD.0
  # DEBUG __tmpD.36509 => __x_copy_35
  # DEBUG __firstD.36508 => D#358ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.36508 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 8;
  # DEBUG __firstD.36508 => __position_55
  # DEBUG __firstD.36508 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#286ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36624 => D#286ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#263ptD.0 => &__x_copyD.31299
  # DEBUG __firstD.36602 => __first_7
  # DEBUG __nD.36603 => __n_50
  # DEBUG D#262ptD.0 => D#263ptD.0
  # DEBUG __xD.36606 => D#262ptD.0
  # DEBUG D.36605 => D#264ptD.0
  # DEBUG D#261ptD.0 => D#262ptD.0
  # DEBUG __firstD.36609 => __first_7
  # DEBUG __nD.36608 => __n_50
  # DEBUG D#260ptD.0 => D#261ptD.0
  # DEBUG __xD.36607 => D#260ptD.0
  # DEBUG __assignableD.36611 => 1
  # DEBUG D#259ptD.0 => D#260ptD.0
  # DEBUG __firstD.36614 => __first_7
  # DEBUG __nD.36613 => __n_50
  # DEBUG D#258ptD.0 => D#259ptD.0
  # DEBUG __xD.36612 => D#258ptD.0
  # DEBUG D#257ptD.0 => D#258ptD.0
  # DEBUG __firstD.36617 => __first_7
  # DEBUG __nD.36616 => __n_50
  # DEBUG D#256ptD.0 => D#257ptD.0
  # DEBUG __valueD.36615 => D#256ptD.0
  # DEBUG __itD.35928 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG D#255ptD.0 => D#256ptD.0
  # DEBUG __firstD.36620 => __first_7
  # DEBUG __nD.36619 => __n_50
  # DEBUG __valueD.36618 => D#255ptD.0
  # DEBUG __tmpD.36621 => __x_copy_35
  # DEBUG __niterD.36622 => __n_50
  # DEBUG __niterD.36622 => __n_50
  # DEBUG __firstD.36620 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.36622 => __n_111
  # DEBUG __firstD.36620 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.36622 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 8;
  # DEBUG __firstD.36620 => __first_64
  # DEBUG __niterD.36622 => __n_63
  # DEBUG __firstD.36620 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  _160 = __n_50 * 8;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(18), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(18), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.28397._M_implD.27888._M_finishD.27891 = __first_125;
  # DEBUG D#287ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36600 => D#287ptD.0
  # DEBUG thisD.36598 => &__positionD.28322
  # DEBUG __firstD.36563 => D#358ptD.0
  # DEBUG __lastD.36564 => __first_7
  # DEBUG __resultD.36565 => __first_125
  # DEBUG __allocD.36566 => D#277ptD.0
  # DEBUG D#276ptD.0 => D#277ptD.0
  # DEBUG D#275ptD.0 => D#276ptD.0
  # DEBUG __firstD.36570 => D#358ptD.0
  # DEBUG __lastD.36569 => __first_7
  # DEBUG __resultD.36568 => __first_125
  # DEBUG D.36567 => D#275ptD.0
  # DEBUG __firstD.36573 => D#358ptD.0
  # DEBUG __lastD.36572 => __first_7
  # DEBUG __resultD.36571 => __first_125
  # DEBUG __assignableD.36576 => 1
  # DEBUG __firstD.36579 => D#358ptD.0
  # DEBUG __lastD.36578 => __first_7
  # DEBUG __resultD.36577 => __first_125
  # DEBUG __firstD.36582 => D#358ptD.0
  # DEBUG __lastD.36581 => __first_7
  # DEBUG __resultD.36580 => __first_125
  # DEBUG __itD.36245 => __first_7
  # DEBUG __itD.35078 => __first_7
  # DEBUG __itD.36243 => D#358ptD.0
  # DEBUG __itD.35078 => D#358ptD.0
  # DEBUG __firstD.36585 => D#358ptD.0
  # DEBUG __lastD.36584 => __first_7
  # DEBUG __resultD.36583 => __first_125
  # DEBUG __itD.36225 => __first_125
  # DEBUG __itD.35081 => __first_125
  # DEBUG __itD.36223 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.36221 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG __firstD.36588 => D#358ptD.0
  # DEBUG __lastD.36587 => __first_7
  # DEBUG __resultD.36586 => __first_125
  # DEBUG __simpleD.36592 => 1
  # DEBUG __firstD.36595 => D#358ptD.0
  # DEBUG __lastD.36594 => __first_7
  # DEBUG __resultD.36593 => __first_125
  # DEBUG _NumD.36596 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.28397._M_implD.27888._M_finishD.27891;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.28397._M_implD.27888._M_finishD.27891 = _53;
  # DEBUG thisD.36561 => &__positionD.28322
  # DEBUG D#203ptD.0 => &__x_copyD.31299
  # DEBUG __firstD.36553 => D#358ptD.0
  # DEBUG __lastD.36554 => __first_7
  # DEBUG D#202ptD.0 => D#203ptD.0
  # DEBUG __valueD.36556 => D#202ptD.0
  # DEBUG __itD.35091 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.35089 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG __firstD.36559 => D#358ptD.0
  # DEBUG __lastD.36558 => __first_7
  # DEBUG __valueD.36557 => D#200ptD.0
  # DEBUG __tmpD.36560 => __x_copy_35
  # DEBUG __firstD.36559 => D#358ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.36559 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 8;
  # DEBUG __firstD.36559 => __position_58
  # DEBUG __firstD.36559 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.38054 => this_4(D)
  # DEBUG __nD.38055 => __n_2(D)
  # DEBUG __nD.38055 => __n_2(D)
  # DEBUG __sD.38056 => "vector::_M_fill_insert"
  # DEBUG D#219ptD.0 => this_4(D)
  # DEBUG thisD.35380 => D#219ptD.0
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG D#217ptD.0 => &D#218ptD.0->D.28397
  # DEBUG thisD.35370 => D#217ptD.0
  # DEBUG __aD.35362 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#216ptD.0
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG thisD.35353 => D#214ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(struct ArbiterD.26830 * * *)this_4(D)];
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG thisD.38060 => D#14ptD.0
  # DEBUG thisD.38061 => D#14ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _118 = _117 /[ex] 8;
  # RANGE ~[1152921504606846976, 17293822569102704639]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [1152921504606846976, 3458764513820540927] NONZERO 4611686018427387903
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG thisD.35398 => D#14ptD.0
  # DEBUG thisD.35397 => D#14ptD.0
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG thisD.35393 => D#14ptD.0
  # DEBUG thisD.35392 => D#14ptD.0
  # DEBUG __aD.38059 => &D.38063
  # DEBUG __bD.38058 => &__nD.38055
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.38057 => __len_124
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG thisD.35385 => D#14ptD.0
  # DEBUG thisD.35384 => D#14ptD.0
  # DEBUG D#219ptD.0 => this_4(D)
  # DEBUG thisD.35400 => D#219ptD.0
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG D#217ptD.0 => &D#218ptD.0->D.28397
  # DEBUG thisD.35370 => D#217ptD.0
  # DEBUG __aD.35362 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#216ptD.0
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG thisD.35353 => D#214ptD.0
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 8;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [8, 18446744073709551608] NONZERO 18446744073709551608
  # prephitmp_165 = PHI <18446744073709551608(46), pretmp_164(31)>
  # DEBUG __lenD.31332 => NULL
  # DEBUG thisD.36746 => this_4(D)
  # DEBUG D#80ptD.0 => &this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG thisD.36748 => NULL
  # DEBUG __iD.36747 => D#80ptD.0
  # DEBUG __lhsD.36743 => &__positionD.28322
  # DEBUG __rhsD.36744 => &D.31334
  # DEBUG thisD.34410 => &__positionD.28322
  # DEBUG thisD.34408 => &D.31334
  # DEBUG D#298ptD.0 => _157 /[ex] 8
  # DEBUG __elems_beforeD.31333 => (const size_typeD.27973) D#298ptD.0
  # DEBUG D#297ptD.0 => &this_4(D)->D.28397
  # DEBUG D#227ptD.0 => D#297ptD.0
  # DEBUG __nD.38045 => NULL
  # DEBUG thisD.38046 => D#227ptD.0
  # DEBUG D#226ptD.0 => D#227ptD.0
  # DEBUG D#225ptD.0 => &D#226ptD.0->_M_implD.27888
  # DEBUG D#224ptD.0 => D#225ptD.0
  # DEBUG __nD.38049 => NULL
  # DEBUG __aD.38048 => D#224ptD.0
  # DEBUG D#223ptD.0 => D#224ptD.0
  # DEBUG D#221ptD.0 => D#223ptD.0
  # DEBUG D#222ptD.0 => 0B
  # DEBUG __nD.38052 => NULL
  # DEBUG thisD.38050 => D#221ptD.0
  # DEBUG D.38051 => D#222ptD.0
  # DEBUG D#220ptD.0 => D#221ptD.0
  # DEBUG D#214ptD.0 => D#220ptD.0
  # DEBUG thisD.35405 => D#214ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.38066 } (escaped heap)
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.28397._M_implD.27888._M_startD.27890;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.28397._M_implD.27888._M_finishD.27891;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.38066 } (escaped heap)
  # iftmp.12_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.38066 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
  # DEBUG __new_startD.31335 => NULL
  # DEBUG __new_finishD.31336 => NULL
  # DEBUG D#281ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36741 => D#281ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.38066 } (escaped heap)
  __first_20 = iftmp.12_113 + _19;
  # VUSE <.MEM_126>
  # PT = nonlocal escaped 
  _56 = MEM[(struct ArbiterD.26830 * const &)__x_21(D)];
  # DEBUG D#263ptD.0 => __x_21(D)
  # DEBUG __firstD.36719 => __first_20
  # DEBUG __nD.36720 => __n_2(D)
  # DEBUG D#262ptD.0 => D#263ptD.0
  # DEBUG __xD.36723 => D#262ptD.0
  # DEBUG D.36722 => D#264ptD.0
  # DEBUG D#261ptD.0 => D#262ptD.0
  # DEBUG __firstD.36726 => __first_20
  # DEBUG __nD.36725 => __n_2(D)
  # DEBUG D#260ptD.0 => D#261ptD.0
  # DEBUG __xD.36724 => D#260ptD.0
  # DEBUG __assignableD.36728 => 1
  # DEBUG D#259ptD.0 => D#260ptD.0
  # DEBUG __firstD.36731 => __first_20
  # DEBUG __nD.36730 => __n_2(D)
  # DEBUG D#258ptD.0 => D#259ptD.0
  # DEBUG __xD.36729 => D#258ptD.0
  # DEBUG D#257ptD.0 => D#258ptD.0
  # DEBUG __firstD.36734 => __first_20
  # DEBUG __nD.36733 => __n_2(D)
  # DEBUG D#256ptD.0 => D#257ptD.0
  # DEBUG __valueD.36732 => D#256ptD.0
  # DEBUG __itD.35928 => __first_20
  # DEBUG __itD.35081 => __first_20
  # DEBUG D#255ptD.0 => D#256ptD.0
  # DEBUG __firstD.36737 => __first_20
  # DEBUG __nD.36736 => __n_2(D)
  # DEBUG __valueD.36735 => D#255ptD.0
  # DEBUG __tmpD.36738 => _56
  # DEBUG __niterD.36739 => __n_2(D)
  # DEBUG __niterD.36739 => __n_2(D)
  # DEBUG __firstD.36737 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 3458764513820540927] NONZERO 4611686018427387903
  # __n_132 = PHI <__n_79(35), __n_2(D)(33)>
  # PT = null { D.38066 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(33)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(33)>
  # DEBUG __niterD.36739 => __n_132
  # DEBUG __firstD.36737 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 3458764513820540926] NONZERO 4611686018427387903
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.36739 => __n_79
  # PT = null { D.38066 } (escaped heap)
  __first_80 = __first_155 + 8;
  # DEBUG __firstD.36737 => __first_80
  # DEBUG __niterD.36739 => __n_79
  # DEBUG __firstD.36737 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.31336 => 0B
  # DEBUG D#282ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36717 => D#282ptD.0
  # DEBUG thisD.36715 => &__positionD.28322
  # DEBUG D#357ptD.0 => this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.36680 => D#357ptD.0
  # DEBUG __lastD.36681 => D#358ptD.0
  # DEBUG __resultD.36682 => NULL
  # DEBUG __allocD.36683 => D#279ptD.0
  # DEBUG D#278ptD.0 => D#279ptD.0
  # DEBUG D#275ptD.0 => D#278ptD.0
  # DEBUG __firstD.36687 => D#357ptD.0
  # DEBUG __lastD.36686 => D#358ptD.0
  # DEBUG __resultD.36685 => NULL
  # DEBUG D.36684 => D#275ptD.0
  # DEBUG __firstD.36690 => D#357ptD.0
  # DEBUG __lastD.36689 => D#358ptD.0
  # DEBUG __resultD.36688 => NULL
  # DEBUG __assignableD.36693 => 1
  # DEBUG __firstD.36696 => D#357ptD.0
  # DEBUG __lastD.36695 => D#358ptD.0
  # DEBUG __resultD.36694 => NULL
  # DEBUG __firstD.36699 => D#357ptD.0
  # DEBUG __lastD.36698 => D#358ptD.0
  # DEBUG __resultD.36697 => NULL
  # DEBUG __itD.36245 => D#358ptD.0
  # DEBUG __itD.35078 => D#358ptD.0
  # DEBUG __itD.36243 => D#357ptD.0
  # DEBUG __itD.35078 => D#357ptD.0
  # DEBUG __firstD.36702 => D#357ptD.0
  # DEBUG __lastD.36701 => D#358ptD.0
  # DEBUG __resultD.36700 => NULL
  # DEBUG __itD.36225 => NULL
  # DEBUG __itD.35081 => NULL
  # DEBUG __itD.36223 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG __itD.36221 => D#357ptD.0
  # DEBUG __itD.35081 => D#357ptD.0
  # DEBUG __firstD.36705 => D#357ptD.0
  # DEBUG __lastD.36704 => D#358ptD.0
  # DEBUG __resultD.36703 => NULL
  # DEBUG __simpleD.36709 => 1
  # DEBUG __firstD.36712 => D#357ptD.0
  # DEBUG __lastD.36711 => D#358ptD.0
  # DEBUG __resultD.36710 => NULL
  # DEBUG D#356ptD.0 => (long intD.12) D#357ptD.0
  # DEBUG D#355ptD.0 => _158 - D#356ptD.0
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _NumD.36713 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memmoveD.995 (iftmp.12_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#354ptD.0 => (long unsigned intD.14) D#355ptD.0
  # DEBUG __new_finishD.31336 => iftmp.12_113 + D#354ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _25 = __n_2(D) * 8;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.38066 } (escaped heap)
  __new_finish_26 = iftmp.12_113 + _133;
  # DEBUG __new_finishD.31336 => __new_finish_26
  # DEBUG D#283ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36678 => D#283ptD.0
  # DEBUG D#353ptD.0 => this_4(D)->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG thisD.36676 => &__positionD.28322
  # DEBUG __firstD.36641 => D#358ptD.0
  # DEBUG __lastD.36642 => D#353ptD.0
  # DEBUG __resultD.36643 => __new_finish_26
  # DEBUG __allocD.36644 => D#279ptD.0
  # DEBUG D#278ptD.0 => D#279ptD.0
  # DEBUG D#275ptD.0 => D#278ptD.0
  # DEBUG __firstD.36648 => D#358ptD.0
  # DEBUG __lastD.36647 => D#353ptD.0
  # DEBUG __resultD.36646 => __new_finish_26
  # DEBUG D.36645 => D#275ptD.0
  # DEBUG __firstD.36651 => D#358ptD.0
  # DEBUG __lastD.36650 => D#353ptD.0
  # DEBUG __resultD.36649 => __new_finish_26
  # DEBUG __assignableD.36654 => 1
  # DEBUG __firstD.36657 => D#358ptD.0
  # DEBUG __lastD.36656 => D#353ptD.0
  # DEBUG __resultD.36655 => __new_finish_26
  # DEBUG __firstD.36660 => D#358ptD.0
  # DEBUG __lastD.36659 => D#353ptD.0
  # DEBUG __resultD.36658 => __new_finish_26
  # DEBUG __itD.36245 => D#353ptD.0
  # DEBUG __itD.35078 => D#353ptD.0
  # DEBUG __itD.36243 => D#358ptD.0
  # DEBUG __itD.35078 => D#358ptD.0
  # DEBUG __firstD.36663 => D#358ptD.0
  # DEBUG __lastD.36662 => D#353ptD.0
  # DEBUG __resultD.36661 => __new_finish_26
  # DEBUG __itD.36225 => __new_finish_26
  # DEBUG __itD.35081 => __new_finish_26
  # DEBUG __itD.36223 => D#353ptD.0
  # DEBUG __itD.35081 => D#353ptD.0
  # DEBUG __itD.36221 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG __firstD.36666 => D#358ptD.0
  # DEBUG __lastD.36665 => D#353ptD.0
  # DEBUG __resultD.36664 => __new_finish_26
  # DEBUG __simpleD.36670 => 1
  # DEBUG __firstD.36673 => D#358ptD.0
  # DEBUG __lastD.36672 => D#353ptD.0
  # DEBUG __resultD.36671 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_67 = _66 /[ex] 8;
  # DEBUG _NumD.36674 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.38066 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.31336 => _70
  # DEBUG D#284ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36639 => D#284ptD.0
  # DEBUG D#296ptD.0 => this_4(D)->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG D#295ptD.0 => this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.36636 => D#295ptD.0
  # DEBUG __lastD.36637 => D#296ptD.0
  # DEBUG D.36638 => NULL
  # DEBUG D#64ptD.0 => D#295ptD.0
  # DEBUG D#65ptD.0 => D#296ptD.0
  # DEBUG __firstD.34345 => D#64ptD.0
  # DEBUG __lastD.34344 => D#65ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D.34334 => D#60ptD.0
  # DEBUG D.34333 => D#61ptD.0
  # DEBUG D#294ptD.0 => this_4(D)->D.28397._M_implD.27888._M_end_of_storageD.27892
  # DEBUG D#293ptD.0 => (long intD.12) D#294ptD.0
  # DEBUG D#292ptD.0 => (long intD.12) D#357ptD.0
  # DEBUG D#291ptD.0 => D#293ptD.0 - D#292ptD.0
  # DEBUG D#290ptD.0 => D#291ptD.0 /[ex] 8
  # DEBUG D#289ptD.0 => (long unsigned intD.14) D#290ptD.0
  # DEBUG D#288ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36626 => D#288ptD.0
  # DEBUG __pD.36627 => D#357ptD.0
  # DEBUG __nD.36628 => D#289ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#162ptD.0 => &D#288ptD.0->_M_implD.27888
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#161ptD.0 => D#289ptD.0
  # DEBUG __pD.36632 => D#357ptD.0
  # DEBUG __aD.36630 => D#160ptD.0
  # DEBUG __nD.36631 => D#161ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG __pD.36635 => D#357ptD.0
  # DEBUG thisD.36633 => D#156ptD.0
  # DEBUG D.36634 => D#157ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.28397._M_implD.27888._M_startD.27890 = iftmp.12_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.28397._M_implD.27888._M_finishD.27891 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.28397._M_implD.27888._M_end_of_storageD.27892 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(3), .MEM_34(44)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.31332 => NULL
  # DEBUG thisD.36746 => this_4(D)
  # DEBUG D#80ptD.0 => &this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG thisD.36748 => NULL
  # DEBUG __iD.36747 => D#80ptD.0
  # DEBUG __lhsD.36743 => &__positionD.28322
  # DEBUG __rhsD.36744 => &D.31334
  # DEBUG thisD.34410 => &__positionD.28322
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.34408 => &D.31334
  _143 = _144 - _116;
  # DEBUG D#298ptD.0 => _143 /[ex] 8
  # DEBUG __elems_beforeD.31333 => (const size_typeD.27973) D#298ptD.0
  # DEBUG D#297ptD.0 => &this_4(D)->D.28397
  # DEBUG D#227ptD.0 => D#297ptD.0
  # DEBUG __nD.38045 => NULL
  # DEBUG thisD.38046 => D#227ptD.0
  # DEBUG D#226ptD.0 => D#227ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.31332 => NULL
  # DEBUG thisD.36746 => this_4(D)
  # DEBUG D#80ptD.0 => &this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG thisD.36748 => NULL
  # DEBUG __iD.36747 => D#80ptD.0
  # DEBUG __lhsD.36743 => &__positionD.28322
  # DEBUG __rhsD.36744 => &D.31334
  # DEBUG thisD.34410 => &__positionD.28322
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.34408 => &D.31334
  _150 = _151 - _116;
  # DEBUG D#298ptD.0 => _150 /[ex] 8
  # DEBUG __elems_beforeD.31333 => (const size_typeD.27973) D#298ptD.0
  # DEBUG D#297ptD.0 => &this_4(D)->D.28397
  # DEBUG D#227ptD.0 => D#297ptD.0
  # DEBUG __nD.38045 => NULL
  # DEBUG thisD.38046 => D#227ptD.0
  # DEBUG D#226ptD.0 => D#227ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for this_4(D)->D.28397._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.28397._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__x_21(D)
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__x_21(D)
Creating dr for this_4(D)->D.28397._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 8, + , 8](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551607
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 8)) /[ex] 8 & 2305843009213693951, bounded by 2305843009213693950
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 8, + , 8](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551607
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 8)) /[ex] 8 & 2305843009213693951, bounded by 2305843009213693950
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 8, + , 8](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551607
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 8)) /[ex] 8 & 2305843009213693951, bounded by 2305843009213693950
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 8}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 8}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 8}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 8}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 8}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 8}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 8}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 8}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.28397._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.28397._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 8, + , 8](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551607
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 8)) /[ex] 8 & 2305843009213693951, bounded by 2305843009213693950
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 8, + , 8](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551607
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 8)) /[ex] 8 & 2305843009213693951, bounded by 2305843009213693950
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 8}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 8, + , 8](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551607
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 8)) /[ex] 8 & 2305843009213693951, bounded by 2305843009213693950
Creating dr for MEM[(struct Arbiter * * *)this_4(D)]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * * *)this_4(D)]
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for MEM[(struct Arbiter * const &)__x_21(D)]
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct Arbiter * const &)__x_21(D)]
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 8}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 8}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 8}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 8}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 8}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 8}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 8}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.12_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *iftmp.12_113 + (long unsigned int) _153
	Access function 0: {0B, +, 8}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.28397._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.28397._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.28397._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:18)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:39)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:56, LOOPS:4, CONDITIONS:19, STMTS:600)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#358 => MEM[(struct __normal_iterator *)&__position]
    # DEBUG __position => D#358
    if (__n_2(D) != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_10 bb_48 bb_23 bb_49 }, succs = {bb_55 })
  {
    <bb 3>:
    # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>

  }
  bb_55 (preds = {bb_3 }, succs = {bb_45 })
  {
    <bb 55>:
    goto <bb 45>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_28 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    __position_16 = MEM[(struct __normal_iterator *)&__position];
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.28397._M_impl._M_end_of_storage;
    _6 = (long int) _5;
    # VUSE <.MEM_3(D)>
    __first_7 = this_4(D)->D.28397._M_impl._M_finish;
    _8 = (long int) __first_7;
    _9 = _6 - _8;
    _10 = _9 /[ex] 8;
    _11 = (long unsigned int) _10;
    if (__n_2(D) <= _11)
      goto <bb 5>;
    else
      goto <bb 28>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_15 })
  {
    <bb 5>:
    # VUSE <.MEM_3(D)>
    __x_copy_35 = *__x_21(D);
    # DEBUG __x_copy => __x_copy_35
    # DEBUG this => this_4(D)
    # DEBUG D#36 => &this_4(D)->D.28397._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#36
    # DEBUG __lhs => &D.31301
    # DEBUG __rhs => &__position
    # DEBUG this => &D.31301
    # DEBUG this => &__position
    _27 = (long int) __position_16;
    _23 = _8 - _27;
    _22 = _23 /[ex] 8;
    __elems_after_37 = (const size_type) _22;
    # DEBUG __elems_after => __elems_after_37
    # DEBUG __old_finish => __first_7
    if (__n_2(D) < __elems_after_37)
      goto <bb 6>;
    else
      goto <bb 15>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#285 => &this_4(D)->D.28397
    # DEBUG this => D#285
    _39 = __n_2(D) * 8;
    _40 = -_39;
    _41 = __first_7 + _40;
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __alloc => D#277
    # DEBUG D#276 => D#277
    # DEBUG D#275 => D#276
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG D.36520 => D#275
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __assignable => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    __first.7_49 = (long int) _41;
    _47 = _8 - __first.7_49;
    _Num_45 = _47 /[ex] 8;
    # DEBUG _Num => _Num_45
    if (_Num_45 != 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _38 = (long unsigned int) _47;
    # .MEM_97 = VDEF <.MEM_3(D)>
    __builtin_memmove (__first_7, _41, _38);
    # VUSE <.MEM_97>
    pretmp_173 = this_4(D)->D.28397._M_impl._M_finish;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
    # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
    _43 = prephitmp_174 + _39;
    # .MEM_44 = VDEF <.MEM_14>
    this_4(D)->D.28397._M_impl._M_finish = _43;
    # DEBUG this => &__position
    # DEBUG __first => D#358
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG __first => D#358
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG __first => D#358
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => D#358
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    _104 = __first.7_49 - _27;
    _Num_105 = _104 /[ex] 8;
    # DEBUG _Num => _Num_105
    if (_Num_105 != 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    _106 = (long unsigned int) _104;
    _107 = -_106;
    _108 = __first_7 + _107;
    # .MEM_135 = VDEF <.MEM_44>
    __builtin_memmove (_108, __position_16, _106);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_3 bb_11 })
  {
    <bb 10>:
    # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
    # DEBUG this => &__position
    _48 = __position_16 + _39;
    # DEBUG this => &__position
    # DEBUG D#203 => &__x_copy
    # DEBUG __first => D#358
    # DEBUG __last => _48
    # DEBUG D#202 => D#203
    # DEBUG __value => D#202
    # DEBUG __it => _48
    # DEBUG __it => _48
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG D#200 => D#202
    # DEBUG __first => D#358
    # DEBUG __last => _48
    # DEBUG __value => D#200
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#358
    if (__position_16 == _48)
      goto <bb 3>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_13 (preds = {bb_12 }, succs = {bb_48 })
  {
    <bb 13>:
    # .MEM_13 = PHI <.MEM_98(12)>

  }
  bb_48 (preds = {bb_13 }, succs = {bb_3 })
  {
    <bb 48>:
    goto <bb 3>;

  }
  bb_15 (preds = {bb_5 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # DEBUG D#286 => &this_4(D)->D.28397
    # DEBUG this => D#286
    __n_50 = __n_2(D) - __elems_after_37;
    # DEBUG D#263 => &__x_copy
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#262 => D#263
    # DEBUG __x => D#262
    # DEBUG D.36605 => D#264
    # DEBUG D#261 => D#262
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#260 => D#261
    # DEBUG __x => D#260
    # DEBUG __assignable => 1
    # DEBUG D#259 => D#260
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#258 => D#259
    # DEBUG __x => D#258
    # DEBUG D#257 => D#258
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#256 => D#257
    # DEBUG __value => D#256
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG D#255 => D#256
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG __value => D#255
    # DEBUG __tmp => __x_copy_35
    # DEBUG __niter => __n_50
    # DEBUG __niter => __n_50
    # DEBUG __first => __first_7
    if (__n_50 == 0)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
    <bb 18>:

  }
  bb_50 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 50>:
    _160 = __n_50 * 8;
    __first_123 = __first_7 + _160;
    goto <bb 20>;

  }
  bb_20 (preds = {bb_50 bb_15 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # __first_125 = PHI <__first_123(50), __first_7(15)>
    # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
    # .MEM_51 = VDEF <.MEM_84>
    this_4(D)->D.28397._M_impl._M_finish = __first_125;
    # DEBUG D#287 => &this_4(D)->D.28397
    # DEBUG this => D#287
    # DEBUG this => &__position
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#277
    # DEBUG D#276 => D#277
    # DEBUG D#275 => D#276
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG D.36567 => D#275
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __simple => 1
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG _Num => _22
    if (_22 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_168 = (long unsigned int) _23;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _59 = (long unsigned int) _23;
    # .MEM_100 = VDEF <.MEM_51>
    __builtin_memmove (__first_125, __position_16, _59);
    # VUSE <.MEM_100>
    pretmp_166 = this_4(D)->D.28397._M_impl._M_finish;

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_3 bb_24 })
  {
    <bb 23>:
    # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
    # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
    # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
    _53 = prephitmp_167 + prephitmp_169;
    # .MEM_54 = VDEF <.MEM_87>
    this_4(D)->D.28397._M_impl._M_finish = _53;
    # DEBUG this => &__position
    # DEBUG D#203 => &__x_copy
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG D#202 => D#203
    # DEBUG __value => D#202
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG D#200 => D#202
    # DEBUG __first => D#358
    # DEBUG __last => __first_7
    # DEBUG __value => D#200
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#358
    if (__first_7 == __position_16)
      goto <bb 3>;
    else
      goto <bb 24>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:

  }
  bb_26 (preds = {bb_25 }, succs = {bb_49 })
  {
    <bb 26>:
    # .MEM_154 = PHI <.MEM_101(25)>

  }
  bb_49 (preds = {bb_26 }, succs = {bb_3 })
  {
    <bb 49>:
    goto <bb 3>;

  }
  bb_28 (preds = {bb_4 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG this => this_4(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#219 => this_4(D)
    # DEBUG this => D#219
    # DEBUG D#218 => D#219
    # DEBUG D#217 => &D#218->D.28397
    # DEBUG this => D#217
    # DEBUG __a => D#216
    # DEBUG D#215 => D#216
    # DEBUG D#214 => D#215
    # DEBUG this => D#214
    # VUSE <.MEM_3(D)>
    _17 = MEM[(struct Arbiter * * *)this_4(D)];
    # DEBUG D#14 => this_4(D)
    # DEBUG D#14 => this_4(D)
    # DEBUG this => D#14
    # DEBUG this => D#14
    _116 = (long int) _17;
    _117 = _8 - _116;
    _118 = _117 /[ex] 8;
    _119 = (const long unsigned int) _118;
    _120 = 2305843009213693951 - _119;
    if (__n_2(D) > _120)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_134 = VDEF <.MEM_3(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_30 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
    <bb 30>:
    # DEBUG D#14 => this_4(D)
    # DEBUG D#14 => this_4(D)
    # DEBUG this => D#14
    # DEBUG this => D#14
    # DEBUG D#14 => this_4(D)
    # DEBUG D#14 => this_4(D)
    # DEBUG this => D#14
    # DEBUG this => D#14
    # DEBUG __a => &D.38063
    # DEBUG __b => &__n
    _77 = MAX_EXPR <__n_2(D), _119>;
    __len_124 = _77 + _119;
    # DEBUG __len => __len_124
    # DEBUG D#14 => this_4(D)
    # DEBUG D#14 => this_4(D)
    # DEBUG this => D#14
    # DEBUG this => D#14
    # DEBUG D#219 => this_4(D)
    # DEBUG this => D#219
    # DEBUG D#218 => D#219
    # DEBUG D#217 => &D#218->D.28397
    # DEBUG this => D#217
    # DEBUG __a => D#216
    # DEBUG D#215 => D#216
    # DEBUG D#214 => D#215
    # DEBUG this => D#214
    _152 = __len_124 > 2305843009213693951;
    _142 = _119 > __len_124;
    _114 = _142 | _152;
    if (_114 != 0)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_31 (preds = {bb_47 }, succs = {bb_32 })
  {
    <bb 31>:
    pretmp_164 = __len_124 * 8;

  }
  bb_32 (preds = {bb_46 bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # _156 = PHI <_144(46), _151(31)>
    # _157 = PHI <_143(46), _150(31)>
    # prephitmp_165 = PHI <18446744073709551608(46), pretmp_164(31)>
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#80 => &this_4(D)->D.28397._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#80
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.31334
    # DEBUG this => &__position
    # DEBUG this => &D.31334
    # DEBUG D#298 => _157 /[ex] 8
    # DEBUG __elems_before => (const size_type) D#298
    # DEBUG D#297 => &this_4(D)->D.28397
    # DEBUG D#227 => D#297
    # DEBUG __n => NULL
    # DEBUG this => D#227
    # DEBUG D#226 => D#227
    # DEBUG D#225 => &D#226->_M_impl
    # DEBUG D#224 => D#225
    # DEBUG __n => NULL
    # DEBUG __a => D#224
    # DEBUG D#223 => D#224
    # DEBUG D#221 => D#223
    # DEBUG D#222 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#221
    # DEBUG D.38051 => D#222
    # DEBUG D#220 => D#221
    # DEBUG D#214 => D#220
    # DEBUG this => D#214
    # .MEM_131 = VDEF <.MEM_3(D)>
    _112 = operator new (prephitmp_165);
    # VUSE <.MEM_131>
    pretmp_29 = this_4(D)->D.28397._M_impl._M_start;
    # VUSE <.MEM_131>
    pretmp_147 = this_4(D)->D.28397._M_impl._M_finish;
    pretmp_149 = _112 + prephitmp_165;
    pretmp_145 = (long int) pretmp_147;
    pretmp_138 = (long int) pretmp_29;
    pretmp_140 = _156 - pretmp_138;

  }
  bb_33 (preds = {bb_47 bb_32 }, succs = {bb_52 })
  {
    <bb 33>:
    # iftmp.12_113 = PHI <0B(47), _112(32)>
    # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
    # _158 = PHI <_151(47), _156(32)>
    # _153 = PHI <_150(47), _157(32)>
    # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
    # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
    # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
    # prephitmp_137 = PHI <_150(47), pretmp_140(32)>

  }
  bb_52 (preds = {bb_33 }, succs = {bb_34 })
  {
    <bb 52>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#281 => &this_4(D)->D.28397
    # DEBUG this => D#281
    _19 = (long unsigned int) _153;
    __first_20 = iftmp.12_113 + _19;
    # VUSE <.MEM_126>
    _56 = MEM[(struct Arbiter * const &)__x_21(D)];
    # DEBUG D#263 => __x_21(D)
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#262 => D#263
    # DEBUG __x => D#262
    # DEBUG D.36722 => D#264
    # DEBUG D#261 => D#262
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#260 => D#261
    # DEBUG __x => D#260
    # DEBUG __assignable => 1
    # DEBUG D#259 => D#260
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#258 => D#259
    # DEBUG __x => D#258
    # DEBUG D#257 => D#258
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#256 => D#257
    # DEBUG __value => D#256
    # DEBUG __it => __first_20
    # DEBUG __it => __first_20
    # DEBUG D#255 => D#256
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG __value => D#255
    # DEBUG __tmp => _56
    # DEBUG __niter => __n_2(D)
    # DEBUG __niter => __n_2(D)
    # DEBUG __first => __first_20

  }
  bb_36 (preds = {bb_34 }, succs = {bb_51 })
  {
    <bb 36>:

  }
  bb_51 (preds = {bb_36 }, succs = {bb_38 bb_37 })
  {
    <bb 51>:
    # DEBUG __new_finish => 0B
    # DEBUG D#282 => &this_4(D)->D.28397
    # DEBUG this => D#282
    # DEBUG this => &__position
    # DEBUG D#357 => this_4(D)->D.28397._M_impl._M_start
    # DEBUG __first => D#357
    # DEBUG __last => D#358
    # DEBUG __result => NULL
    # DEBUG __alloc => D#279
    # DEBUG D#278 => D#279
    # DEBUG D#275 => D#278
    # DEBUG __first => D#357
    # DEBUG __last => D#358
    # DEBUG __result => NULL
    # DEBUG D.36684 => D#275
    # DEBUG __first => D#357
    # DEBUG __last => D#358
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#357
    # DEBUG __last => D#358
    # DEBUG __result => NULL
    # DEBUG __first => D#357
    # DEBUG __last => D#358
    # DEBUG __result => NULL
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG __it => D#357
    # DEBUG __it => D#357
    # DEBUG __first => D#357
    # DEBUG __last => D#358
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG __it => D#357
    # DEBUG __it => D#357
    # DEBUG __first => D#357
    # DEBUG __last => D#358
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => D#357
    # DEBUG __last => D#358
    # DEBUG __result => NULL
    # DEBUG D#356 => (long int) D#357
    # DEBUG D#355 => _158 - D#356
    _Num_73 = prephitmp_137 /[ex] 8;
    # DEBUG _Num => _Num_73
    if (_Num_73 != 0)
      goto <bb 38>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 37>:
    pretmp_103 = (long unsigned int) prephitmp_137;
    goto <bb 39>;

  }
  bb_38 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 38>:
    _74 = (long unsigned int) prephitmp_137;
    # .MEM_94 = VDEF <.MEM_93>
    __builtin_memmove (iftmp.12_113, prephitmp_146, _74);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_41 bb_40 })
  {
    <bb 39>:
    # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
    # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
    # DEBUG D#354 => (long unsigned int) D#355
    # DEBUG __new_finish => iftmp.12_113 + D#354
    _25 = __n_2(D) * 8;
    _133 = _25 + prephitmp_102;
    __new_finish_26 = iftmp.12_113 + _133;
    # DEBUG __new_finish => __new_finish_26
    # DEBUG D#283 => &this_4(D)->D.28397
    # DEBUG this => D#283
    # DEBUG D#353 => this_4(D)->D.28397._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => D#358
    # DEBUG __last => D#353
    # DEBUG __result => __new_finish_26
    # DEBUG __alloc => D#279
    # DEBUG D#278 => D#279
    # DEBUG D#275 => D#278
    # DEBUG __first => D#358
    # DEBUG __last => D#353
    # DEBUG __result => __new_finish_26
    # DEBUG D.36645 => D#275
    # DEBUG __first => D#358
    # DEBUG __last => D#353
    # DEBUG __result => __new_finish_26
    # DEBUG __assignable => 1
    # DEBUG __first => D#358
    # DEBUG __last => D#353
    # DEBUG __result => __new_finish_26
    # DEBUG __first => D#358
    # DEBUG __last => D#353
    # DEBUG __result => __new_finish_26
    # DEBUG __it => D#353
    # DEBUG __it => D#353
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG __first => D#358
    # DEBUG __last => D#353
    # DEBUG __result => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => D#353
    # DEBUG __it => D#353
    # DEBUG __it => D#358
    # DEBUG __it => D#358
    # DEBUG __first => D#358
    # DEBUG __last => D#353
    # DEBUG __result => __new_finish_26
    # DEBUG __simple => 1
    # DEBUG __first => D#358
    # DEBUG __last => D#353
    # DEBUG __result => __new_finish_26
    _66 = prephitmp_121 - _158;
    _Num_67 = _66 /[ex] 8;
    # DEBUG _Num => _Num_67
    if (_Num_67 != 0)
      goto <bb 41>;
    else
      goto <bb 40>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    pretmp_162 = (long unsigned int) _66;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 41>:
    _68 = (long unsigned int) _66;
    # .MEM_95 = VDEF <.MEM_90>
    __builtin_memcpy (__new_finish_26, __position_16, _68);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
    # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
    _70 = __new_finish_26 + prephitmp_163;
    # DEBUG __new_finish => _70
    # DEBUG D#284 => &this_4(D)->D.28397
    # DEBUG this => D#284
    # DEBUG D#296 => this_4(D)->D.28397._M_impl._M_finish
    # DEBUG D#295 => this_4(D)->D.28397._M_impl._M_start
    # DEBUG __first => D#295
    # DEBUG __last => D#296
    # DEBUG D.36638 => NULL
    # DEBUG D#64 => D#295
    # DEBUG D#65 => D#296
    # DEBUG __first => D#64
    # DEBUG __last => D#65
    # DEBUG D#63 => D#65
    # DEBUG D#62 => D#64
    # DEBUG D#60 => D#62
    # DEBUG D#61 => D#63
    # DEBUG D.34334 => D#60
    # DEBUG D.34333 => D#61
    # DEBUG D#294 => this_4(D)->D.28397._M_impl._M_end_of_storage
    # DEBUG D#293 => (long int) D#294
    # DEBUG D#292 => (long int) D#357
    # DEBUG D#291 => D#293 - D#292
    # DEBUG D#290 => D#291 /[ex] 8
    # DEBUG D#289 => (long unsigned int) D#290
    # DEBUG D#288 => &this_4(D)->D.28397
    # DEBUG this => D#288
    # DEBUG __p => D#357
    # DEBUG __n => D#289
    if (prephitmp_146 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#162 => &D#288->_M_impl
    # DEBUG D#160 => D#162
    # DEBUG D#161 => D#289
    # DEBUG __p => D#357
    # DEBUG __a => D#160
    # DEBUG __n => D#161
    # DEBUG D#159 => D#161
    # DEBUG D#158 => D#160
    # DEBUG D#156 => D#158
    # DEBUG D#157 => D#159
    # DEBUG __p => D#357
    # DEBUG this => D#156
    # DEBUG D.36634 => D#157
    # .MEM_96 = VDEF <.MEM_91>
    operator delete (prephitmp_146);

  }
  bb_44 (preds = {bb_43 bb_42 }, succs = {bb_53 })
  {
    <bb 44>:
    # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>

  }
  bb_53 (preds = {bb_44 }, succs = {bb_45 })
  {
    <bb 53>:
    # .MEM_30 = VDEF <.MEM_92>
    this_4(D)->D.28397._M_impl._M_start = iftmp.12_113;
    # .MEM_31 = VDEF <.MEM_30>
    this_4(D)->D.28397._M_impl._M_finish = _70;
    # .MEM_34 = VDEF <.MEM_31>
    this_4(D)->D.28397._M_impl._M_end_of_storage = prephitmp_148;

  }
  bb_45 (preds = {bb_55 bb_53 }, succs = {bb_54 })
  {
    <bb 45>:
    # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>

  }
  bb_54 (preds = {bb_45 }, succs = {bb_1 })
  {
    <bb 54>:
    # VUSE <.MEM_1>
    return;

  }
  bb_46 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 46>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#80 => &this_4(D)->D.28397._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#80
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.31334
    # DEBUG this => &__position
    _144 = (long int) __position_16;
    # DEBUG this => &D.31334
    _143 = _144 - _116;
    # DEBUG D#298 => _143 /[ex] 8
    # DEBUG __elems_before => (const size_type) D#298
    # DEBUG D#297 => &this_4(D)->D.28397
    # DEBUG D#227 => D#297
    # DEBUG __n => NULL
    # DEBUG this => D#227
    # DEBUG D#226 => D#227
    goto <bb 32>;

  }
  bb_47 (preds = {bb_30 }, succs = {bb_31 bb_33 })
  {
    <bb 47>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#80 => &this_4(D)->D.28397._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#80
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.31334
    # DEBUG this => &__position
    _151 = (long int) __position_16;
    # DEBUG this => &D.31334
    _150 = _151 - _116;
    # DEBUG D#298 => _150 /[ex] 8
    # DEBUG __elems_before => (const size_type) D#298
    # DEBUG D#297 => &this_4(D)->D.28397
    # DEBUG D#227 => D#297
    # DEBUG __n => NULL
    # DEBUG this => D#227
    # DEBUG D#226 => D#227
    if (__len_124 != 0)
      goto <bb 31>;
    else
      goto <bb 33>;

  }
  loop_1 (header = 12, latch = 14, niter = ((unsigned long) _48 - (unsigned long) (__position_16 + 8)) /[ex] 8 & 2305843009213693951, upper_bound = 2305843009213693950)
  {
    bb_12 (preds = {bb_11 bb_14 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __position_109 = PHI <__position_16(11), __position_55(14)>
      # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
      # DEBUG __first => __position_109
      # .MEM_98 = VDEF <.MEM_83>
      *__position_109 = __x_copy_35;
      __position_55 = __position_109 + 8;
      # DEBUG __first => __position_55
      # DEBUG __first => __position_55
      if (_48 == __position_55)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_12 }, succs = {bb_12 })
    {
      <bb 14>:
      goto <bb 12>;

    }
  }
  loop_2 (header = 25, latch = 27, niter = ((unsigned long) __first_7 - (unsigned long) (__position_16 + 8)) /[ex] 8 & 2305843009213693951, upper_bound = 2305843009213693950)
  {
    bb_25 (preds = {bb_24 bb_27 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # __position_110 = PHI <__position_16(24), __position_58(27)>
      # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
      # DEBUG __first => __position_110
      # .MEM_101 = VDEF <.MEM_136>
      *__position_110 = __x_copy_35;
      __position_58 = __position_110 + 8;
      # DEBUG __first => __position_58
      # DEBUG __first => __position_58
      if (__first_7 == __position_58)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_25 }, succs = {bb_25 })
    {
      <bb 27>:
      goto <bb 25>;

    }
  }
  loop_3 (header = 17, latch = 19, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_17 (preds = {bb_16 bb_19 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # __n_111 = PHI <__n_50(16), __n_63(19)>
      # __first_76 = PHI <__first_7(16), __first_64(19)>
      # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
      # DEBUG __niter => __n_111
      # DEBUG __first => __first_76
      # .MEM_99 = VDEF <.MEM_81>
      *__first_76 = __x_copy_35;
      __n_63 = __n_111 + 18446744073709551615;
      # DEBUG __niter => __n_63
      __first_64 = __first_76 + 8;
      # DEBUG __first => __first_64
      # DEBUG __niter => __n_63
      # DEBUG __first => __first_64
      if (__n_63 == 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 19>:
      goto <bb 17>;

    }
  }
  loop_4 (header = 34, latch = 35, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_34 (preds = {bb_35 bb_52 }, succs = {bb_36 bb_35 })
    {
      <bb 34>:
      # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
      # __first_155 = PHI <__first_80(35), __first_20(52)>
      # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
      # DEBUG __niter => __n_132
      # DEBUG __first => __first_155
      # .MEM_93 = VDEF <.MEM_130>
      *__first_155 = _56;
      __n_79 = __n_132 + 18446744073709551615;
      # DEBUG __niter => __n_79
      __first_80 = __first_155 + 8;
      # DEBUG __first => __first_80
      # DEBUG __niter => __n_79
      # DEBUG __first => __first_80
      if (__n_79 == 0)
        goto <bb 36>;
      else
        goto <bb 35>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_34 })
    {
      <bb 35>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = Arbiter*; _Alloc = std::allocator<Arbiter*>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Arbiter**, std::vector<Arbiter*> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Arbiter**; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = Arbiter*] (struct vectorD.27654 * const thisD.28321, struct iteratorD.27965 __positionD.28322, size_typeD.27973 __nD.28323, struct ArbiterD.26830 * const & __xD.28324)
{
  const long unsigned intD.14 D.38063;
  const size_typeD.27973 __lenD.38057;
  size_typeD.27973 D.38062;
  size_typeD.27973 __nD.38055;
  struct ArbiterD.26830 * * D.38053;
  const ptrdiff_tD.2819 _NumD.38043;
  struct ArbiterD.26830 * * D.38044;
  struct ArbiterD.26830 * * const __positionD.36751;
  struct ArbiterD.26830 * * __firstD.36719;
  const ptrdiff_tD.2819 _NumD.36713;
  const ptrdiff_tD.2819 _NumD.36674;
  struct ArbiterD.26830 * * __firstD.36602;
  long unsigned intD.14 __nD.36603;
  struct ArbiterD.26830 * * __firstD.36553;
  const ptrdiff_tD.2819 _NumD.36549;
  struct ArbiterD.26830 * * __firstD.36502;
  struct ArbiterD.26830 * * __new_finishD.31336;
  const size_typeD.27973 __elems_afterD.31300;
  struct ArbiterD.26830 * __x_copyD.31299;
  struct ArbiterD.26830 * * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  struct ArbiterD.26830 * * const _17;
  long unsigned intD.14 _19;
  difference_typeD.30663 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  struct ArbiterD.26830 * * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  struct ArbiterD.26830 * * _41;
  struct ArbiterD.26830 * * _43;
  long intD.12 _47;
  struct ArbiterD.26830 * * _48;
  long intD.12 __first.7_49;
  struct ArbiterD.26830 * * _53;
  struct ArbiterD.26830 * const _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  struct ArbiterD.26830 * * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  struct ArbiterD.26830 * * _108;
  struct ArbiterD.26830 * * _112;
  struct ArbiterD.26830 * * iftmp.12_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  struct ArbiterD.26830 * * prephitmp_146;
  struct ArbiterD.26830 * * pretmp_147;
  struct ArbiterD.26830 * * prephitmp_148;
  struct ArbiterD.26830 * * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  struct ArbiterD.26830 * * pretmp_166;
  struct ArbiterD.26830 * * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  struct ArbiterD.26830 * * pretmp_173;
  struct ArbiterD.26830 * * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#358ptD.0 => MEM[(struct __normal_iteratorD.27966 *)&__positionD.28322]
  # DEBUG __positionD.36751 => D#358ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 55, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 55, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.27966 *)&__positionD.28322];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.28397._M_implD.27888._M_end_of_storageD.27892;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.28397._M_implD.27888._M_finishD.27891;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _10 = _9 /[ex] 8;
  # RANGE ~[1152921504606846976, 17293822569102704639]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.31299 => __x_copy_35
  # DEBUG thisD.36497 => this_4(D)
  # DEBUG D#36ptD.0 => &this_4(D)->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG thisD.36499 => NULL
  # DEBUG __iD.36498 => D#36ptD.0
  # DEBUG __lhsD.36494 => &D.31301
  # DEBUG __rhsD.36495 => &__positionD.28322
  # DEBUG thisD.34410 => &D.31301
  # DEBUG thisD.34408 => &__positionD.28322
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _22 = _23 /[ex] 8;
  # RANGE ~[1152921504606846976, 17293822569102704639]
  __elems_after_37 = (const size_typeD.27973) _22;
  # DEBUG __elems_afterD.31300 => __elems_after_37
  # DEBUG __old_finishD.31308 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#285ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36551 => D#285ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _39 = __n_2(D) * 8;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.36516 => _41
  # DEBUG __lastD.36517 => __first_7
  # DEBUG __resultD.36518 => __first_7
  # DEBUG __allocD.36519 => D#277ptD.0
  # DEBUG D#276ptD.0 => D#277ptD.0
  # DEBUG D#275ptD.0 => D#276ptD.0
  # DEBUG __firstD.36523 => _41
  # DEBUG __lastD.36522 => __first_7
  # DEBUG __resultD.36521 => __first_7
  # DEBUG D.36520 => D#275ptD.0
  # DEBUG __firstD.36526 => _41
  # DEBUG __lastD.36525 => __first_7
  # DEBUG __resultD.36524 => __first_7
  # DEBUG __assignableD.36529 => 1
  # DEBUG __firstD.36532 => _41
  # DEBUG __lastD.36531 => __first_7
  # DEBUG __resultD.36530 => __first_7
  # DEBUG __firstD.36535 => _41
  # DEBUG __lastD.36534 => __first_7
  # DEBUG __resultD.36533 => __first_7
  # DEBUG __itD.36245 => __first_7
  # DEBUG __itD.35078 => __first_7
  # DEBUG __itD.36243 => _41
  # DEBUG __itD.35078 => _41
  # DEBUG __firstD.36538 => _41
  # DEBUG __lastD.36537 => __first_7
  # DEBUG __resultD.36536 => __first_7
  # DEBUG __itD.36225 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.36223 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.36221 => _41
  # DEBUG __itD.35081 => _41
  # DEBUG __firstD.36541 => _41
  # DEBUG __lastD.36540 => __first_7
  # DEBUG __resultD.36539 => __first_7
  # DEBUG __simpleD.36545 => 1
  # DEBUG __firstD.36548 => _41
  # DEBUG __lastD.36547 => __first_7
  # DEBUG __resultD.36546 => __first_7
  __first.7_49 = (long intD.12) _41;
  _47 = _8 - __first.7_49;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_45 = _47 /[ex] 8;
  # DEBUG _NumD.36549 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.28397._M_implD.27888._M_finishD.27891;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.28397._M_implD.27888._M_finishD.27891 = _43;
  # DEBUG thisD.36514 => &__positionD.28322
  # DEBUG __firstD.38027 => D#358ptD.0
  # DEBUG __lastD.38028 => _41
  # DEBUG __resultD.38029 => __first_7
  # DEBUG __itD.35344 => _41
  # DEBUG __itD.35078 => _41
  # DEBUG __itD.35342 => D#358ptD.0
  # DEBUG __itD.35078 => D#358ptD.0
  # DEBUG __firstD.38032 => D#358ptD.0
  # DEBUG __lastD.38031 => _41
  # DEBUG __resultD.38030 => __first_7
  # DEBUG __itD.35324 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.35322 => _41
  # DEBUG __itD.35081 => _41
  # DEBUG __itD.35320 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG __firstD.38035 => D#358ptD.0
  # DEBUG __lastD.38034 => _41
  # DEBUG __resultD.38033 => __first_7
  # DEBUG __simpleD.38039 => 1
  # DEBUG __firstD.38042 => D#358ptD.0
  # DEBUG __lastD.38041 => _41
  # DEBUG __resultD.38040 => __first_7
  _104 = __first.7_49 - _27;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_105 = _104 /[ex] 8;
  # DEBUG _NumD.38043 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.36512 => &__positionD.28322
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.36510 => &__positionD.28322
  # DEBUG D#203ptD.0 => &__x_copyD.31299
  # DEBUG __firstD.36502 => D#358ptD.0
  # DEBUG __lastD.36503 => _48
  # DEBUG D#202ptD.0 => D#203ptD.0
  # DEBUG __valueD.36505 => D#202ptD.0
  # DEBUG __itD.35091 => _48
  # DEBUG __itD.35081 => _48
  # DEBUG __itD.35089 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG __firstD.36508 => D#358ptD.0
  # DEBUG __lastD.36507 => _48
  # DEBUG __valueD.36506 => D#200ptD.0
  # DEBUG __tmpD.36509 => __x_copy_35
  # DEBUG __firstD.36508 => D#358ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.36508 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 8;
  # DEBUG __firstD.36508 => __position_55
  # DEBUG __firstD.36508 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 48, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 48, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#286ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36624 => D#286ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#263ptD.0 => &__x_copyD.31299
  # DEBUG __firstD.36602 => __first_7
  # DEBUG __nD.36603 => __n_50
  # DEBUG D#262ptD.0 => D#263ptD.0
  # DEBUG __xD.36606 => D#262ptD.0
  # DEBUG D.36605 => D#264ptD.0
  # DEBUG D#261ptD.0 => D#262ptD.0
  # DEBUG __firstD.36609 => __first_7
  # DEBUG __nD.36608 => __n_50
  # DEBUG D#260ptD.0 => D#261ptD.0
  # DEBUG __xD.36607 => D#260ptD.0
  # DEBUG __assignableD.36611 => 1
  # DEBUG D#259ptD.0 => D#260ptD.0
  # DEBUG __firstD.36614 => __first_7
  # DEBUG __nD.36613 => __n_50
  # DEBUG D#258ptD.0 => D#259ptD.0
  # DEBUG __xD.36612 => D#258ptD.0
  # DEBUG D#257ptD.0 => D#258ptD.0
  # DEBUG __firstD.36617 => __first_7
  # DEBUG __nD.36616 => __n_50
  # DEBUG D#256ptD.0 => D#257ptD.0
  # DEBUG __valueD.36615 => D#256ptD.0
  # DEBUG __itD.35928 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG D#255ptD.0 => D#256ptD.0
  # DEBUG __firstD.36620 => __first_7
  # DEBUG __nD.36619 => __n_50
  # DEBUG __valueD.36618 => D#255ptD.0
  # DEBUG __tmpD.36621 => __x_copy_35
  # DEBUG __niterD.36622 => __n_50
  # DEBUG __niterD.36622 => __n_50
  # DEBUG __firstD.36620 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.36622 => __n_111
  # DEBUG __firstD.36620 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.36622 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 8;
  # DEBUG __firstD.36620 => __first_64
  # DEBUG __niterD.36622 => __n_63
  # DEBUG __firstD.36620 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 50, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       50 [100.0%]  (FALLTHRU)

;;   basic block 50, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  _160 = __n_50 * 8;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 50, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(50), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.28397._M_implD.27888._M_finishD.27891 = __first_125;
  # DEBUG D#287ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36600 => D#287ptD.0
  # DEBUG thisD.36598 => &__positionD.28322
  # DEBUG __firstD.36563 => D#358ptD.0
  # DEBUG __lastD.36564 => __first_7
  # DEBUG __resultD.36565 => __first_125
  # DEBUG __allocD.36566 => D#277ptD.0
  # DEBUG D#276ptD.0 => D#277ptD.0
  # DEBUG D#275ptD.0 => D#276ptD.0
  # DEBUG __firstD.36570 => D#358ptD.0
  # DEBUG __lastD.36569 => __first_7
  # DEBUG __resultD.36568 => __first_125
  # DEBUG D.36567 => D#275ptD.0
  # DEBUG __firstD.36573 => D#358ptD.0
  # DEBUG __lastD.36572 => __first_7
  # DEBUG __resultD.36571 => __first_125
  # DEBUG __assignableD.36576 => 1
  # DEBUG __firstD.36579 => D#358ptD.0
  # DEBUG __lastD.36578 => __first_7
  # DEBUG __resultD.36577 => __first_125
  # DEBUG __firstD.36582 => D#358ptD.0
  # DEBUG __lastD.36581 => __first_7
  # DEBUG __resultD.36580 => __first_125
  # DEBUG __itD.36245 => __first_7
  # DEBUG __itD.35078 => __first_7
  # DEBUG __itD.36243 => D#358ptD.0
  # DEBUG __itD.35078 => D#358ptD.0
  # DEBUG __firstD.36585 => D#358ptD.0
  # DEBUG __lastD.36584 => __first_7
  # DEBUG __resultD.36583 => __first_125
  # DEBUG __itD.36225 => __first_125
  # DEBUG __itD.35081 => __first_125
  # DEBUG __itD.36223 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.36221 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG __firstD.36588 => D#358ptD.0
  # DEBUG __lastD.36587 => __first_7
  # DEBUG __resultD.36586 => __first_125
  # DEBUG __simpleD.36592 => 1
  # DEBUG __firstD.36595 => D#358ptD.0
  # DEBUG __lastD.36594 => __first_7
  # DEBUG __resultD.36593 => __first_125
  # DEBUG _NumD.36596 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.28397._M_implD.27888._M_finishD.27891;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.28397._M_implD.27888._M_finishD.27891 = _53;
  # DEBUG thisD.36561 => &__positionD.28322
  # DEBUG D#203ptD.0 => &__x_copyD.31299
  # DEBUG __firstD.36553 => D#358ptD.0
  # DEBUG __lastD.36554 => __first_7
  # DEBUG D#202ptD.0 => D#203ptD.0
  # DEBUG __valueD.36556 => D#202ptD.0
  # DEBUG __itD.35091 => __first_7
  # DEBUG __itD.35081 => __first_7
  # DEBUG __itD.35089 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG __firstD.36559 => D#358ptD.0
  # DEBUG __lastD.36558 => __first_7
  # DEBUG __valueD.36557 => D#200ptD.0
  # DEBUG __tmpD.36560 => __x_copy_35
  # DEBUG __firstD.36559 => D#358ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.36559 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 8;
  # DEBUG __firstD.36559 => __position_58
  # DEBUG __firstD.36559 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 49, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
;;    succ:       49 [100.0%]  (FALLTHRU)

;;   basic block 49, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 49, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.38054 => this_4(D)
  # DEBUG __nD.38055 => __n_2(D)
  # DEBUG __nD.38055 => __n_2(D)
  # DEBUG __sD.38056 => "vector::_M_fill_insert"
  # DEBUG D#219ptD.0 => this_4(D)
  # DEBUG thisD.35380 => D#219ptD.0
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG D#217ptD.0 => &D#218ptD.0->D.28397
  # DEBUG thisD.35370 => D#217ptD.0
  # DEBUG __aD.35362 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#216ptD.0
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG thisD.35353 => D#214ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(struct ArbiterD.26830 * * *)this_4(D)];
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG thisD.38060 => D#14ptD.0
  # DEBUG thisD.38061 => D#14ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _118 = _117 /[ex] 8;
  # RANGE ~[1152921504606846976, 17293822569102704639]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [1152921504606846976, 3458764513820540927] NONZERO 4611686018427387903
  _120 = 2305843009213693951 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG thisD.35398 => D#14ptD.0
  # DEBUG thisD.35397 => D#14ptD.0
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG thisD.35393 => D#14ptD.0
  # DEBUG thisD.35392 => D#14ptD.0
  # DEBUG __aD.38059 => &D.38063
  # DEBUG __bD.38058 => &__nD.38055
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.38057 => __len_124
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG D#14ptD.0 => this_4(D)
  # DEBUG thisD.35385 => D#14ptD.0
  # DEBUG thisD.35384 => D#14ptD.0
  # DEBUG D#219ptD.0 => this_4(D)
  # DEBUG thisD.35400 => D#219ptD.0
  # DEBUG D#218ptD.0 => D#219ptD.0
  # DEBUG D#217ptD.0 => &D#218ptD.0->D.28397
  # DEBUG thisD.35370 => D#217ptD.0
  # DEBUG __aD.35362 => D#216ptD.0
  # DEBUG D#215ptD.0 => D#216ptD.0
  # DEBUG D#214ptD.0 => D#215ptD.0
  # DEBUG thisD.35353 => D#214ptD.0
  _152 = __len_124 > 2305843009213693951;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 8;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [8, 18446744073709551608] NONZERO 18446744073709551608
  # prephitmp_165 = PHI <18446744073709551608(46), pretmp_164(31)>
  # DEBUG __lenD.31332 => NULL
  # DEBUG thisD.36746 => this_4(D)
  # DEBUG D#80ptD.0 => &this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG thisD.36748 => NULL
  # DEBUG __iD.36747 => D#80ptD.0
  # DEBUG __lhsD.36743 => &__positionD.28322
  # DEBUG __rhsD.36744 => &D.31334
  # DEBUG thisD.34410 => &__positionD.28322
  # DEBUG thisD.34408 => &D.31334
  # DEBUG D#298ptD.0 => _157 /[ex] 8
  # DEBUG __elems_beforeD.31333 => (const size_typeD.27973) D#298ptD.0
  # DEBUG D#297ptD.0 => &this_4(D)->D.28397
  # DEBUG D#227ptD.0 => D#297ptD.0
  # DEBUG __nD.38045 => NULL
  # DEBUG thisD.38046 => D#227ptD.0
  # DEBUG D#226ptD.0 => D#227ptD.0
  # DEBUG D#225ptD.0 => &D#226ptD.0->_M_implD.27888
  # DEBUG D#224ptD.0 => D#225ptD.0
  # DEBUG __nD.38049 => NULL
  # DEBUG __aD.38048 => D#224ptD.0
  # DEBUG D#223ptD.0 => D#224ptD.0
  # DEBUG D#221ptD.0 => D#223ptD.0
  # DEBUG D#222ptD.0 => 0B
  # DEBUG __nD.38052 => NULL
  # DEBUG thisD.38050 => D#221ptD.0
  # DEBUG D.38051 => D#222ptD.0
  # DEBUG D#220ptD.0 => D#221ptD.0
  # DEBUG D#214ptD.0 => D#220ptD.0
  # DEBUG thisD.35405 => D#214ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.38066 } (escaped heap)
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.28397._M_implD.27888._M_startD.27890;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.28397._M_implD.27888._M_finishD.27891;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 52, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.38066 } (escaped heap)
  # iftmp.12_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.38066 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
;;    succ:       52 [100.0%]  (FALLTHRU)

;;   basic block 52, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.31335 => NULL
  # DEBUG __new_finishD.31336 => NULL
  # DEBUG D#281ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36741 => D#281ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.38066 } (escaped heap)
  __first_20 = iftmp.12_113 + _19;
  # VUSE <.MEM_126>
  # PT = nonlocal escaped 
  _56 = MEM[(struct ArbiterD.26830 * const &)__x_21(D)];
  # DEBUG D#263ptD.0 => __x_21(D)
  # DEBUG __firstD.36719 => __first_20
  # DEBUG __nD.36720 => __n_2(D)
  # DEBUG D#262ptD.0 => D#263ptD.0
  # DEBUG __xD.36723 => D#262ptD.0
  # DEBUG D.36722 => D#264ptD.0
  # DEBUG D#261ptD.0 => D#262ptD.0
  # DEBUG __firstD.36726 => __first_20
  # DEBUG __nD.36725 => __n_2(D)
  # DEBUG D#260ptD.0 => D#261ptD.0
  # DEBUG __xD.36724 => D#260ptD.0
  # DEBUG __assignableD.36728 => 1
  # DEBUG D#259ptD.0 => D#260ptD.0
  # DEBUG __firstD.36731 => __first_20
  # DEBUG __nD.36730 => __n_2(D)
  # DEBUG D#258ptD.0 => D#259ptD.0
  # DEBUG __xD.36729 => D#258ptD.0
  # DEBUG D#257ptD.0 => D#258ptD.0
  # DEBUG __firstD.36734 => __first_20
  # DEBUG __nD.36733 => __n_2(D)
  # DEBUG D#256ptD.0 => D#257ptD.0
  # DEBUG __valueD.36732 => D#256ptD.0
  # DEBUG __itD.35928 => __first_20
  # DEBUG __itD.35081 => __first_20
  # DEBUG D#255ptD.0 => D#256ptD.0
  # DEBUG __firstD.36737 => __first_20
  # DEBUG __nD.36736 => __n_2(D)
  # DEBUG __valueD.36735 => D#255ptD.0
  # DEBUG __tmpD.36738 => _56
  # DEBUG __niterD.36739 => __n_2(D)
  # DEBUG __niterD.36739 => __n_2(D)
  # DEBUG __firstD.36737 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 52, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 3458764513820540927] NONZERO 4611686018427387903
  # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
  # PT = null { D.38066 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(52)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
  # DEBUG __niterD.36739 => __n_132
  # DEBUG __firstD.36737 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 3458764513820540926] NONZERO 4611686018427387903
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.36739 => __n_79
  # PT = null { D.38066 } (escaped heap)
  __first_80 = __first_155 + 8;
  # DEBUG __firstD.36737 => __first_80
  # DEBUG __niterD.36739 => __n_79
  # DEBUG __firstD.36737 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 51, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU)

;;   basic block 51, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.31336 => 0B
  # DEBUG D#282ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36717 => D#282ptD.0
  # DEBUG thisD.36715 => &__positionD.28322
  # DEBUG D#357ptD.0 => this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.36680 => D#357ptD.0
  # DEBUG __lastD.36681 => D#358ptD.0
  # DEBUG __resultD.36682 => NULL
  # DEBUG __allocD.36683 => D#279ptD.0
  # DEBUG D#278ptD.0 => D#279ptD.0
  # DEBUG D#275ptD.0 => D#278ptD.0
  # DEBUG __firstD.36687 => D#357ptD.0
  # DEBUG __lastD.36686 => D#358ptD.0
  # DEBUG __resultD.36685 => NULL
  # DEBUG D.36684 => D#275ptD.0
  # DEBUG __firstD.36690 => D#357ptD.0
  # DEBUG __lastD.36689 => D#358ptD.0
  # DEBUG __resultD.36688 => NULL
  # DEBUG __assignableD.36693 => 1
  # DEBUG __firstD.36696 => D#357ptD.0
  # DEBUG __lastD.36695 => D#358ptD.0
  # DEBUG __resultD.36694 => NULL
  # DEBUG __firstD.36699 => D#357ptD.0
  # DEBUG __lastD.36698 => D#358ptD.0
  # DEBUG __resultD.36697 => NULL
  # DEBUG __itD.36245 => D#358ptD.0
  # DEBUG __itD.35078 => D#358ptD.0
  # DEBUG __itD.36243 => D#357ptD.0
  # DEBUG __itD.35078 => D#357ptD.0
  # DEBUG __firstD.36702 => D#357ptD.0
  # DEBUG __lastD.36701 => D#358ptD.0
  # DEBUG __resultD.36700 => NULL
  # DEBUG __itD.36225 => NULL
  # DEBUG __itD.35081 => NULL
  # DEBUG __itD.36223 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG __itD.36221 => D#357ptD.0
  # DEBUG __itD.35081 => D#357ptD.0
  # DEBUG __firstD.36705 => D#357ptD.0
  # DEBUG __lastD.36704 => D#358ptD.0
  # DEBUG __resultD.36703 => NULL
  # DEBUG __simpleD.36709 => 1
  # DEBUG __firstD.36712 => D#357ptD.0
  # DEBUG __lastD.36711 => D#358ptD.0
  # DEBUG __resultD.36710 => NULL
  # DEBUG D#356ptD.0 => (long intD.12) D#357ptD.0
  # DEBUG D#355ptD.0 => _158 - D#356ptD.0
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_73 = prephitmp_137 /[ex] 8;
  # DEBUG _NumD.36713 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 51, next block 38, flags: (NEW)
;;    pred:       51 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       51 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memmoveD.995 (iftmp.12_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#354ptD.0 => (long unsigned intD.14) D#355ptD.0
  # DEBUG __new_finishD.31336 => iftmp.12_113 + D#354ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _25 = __n_2(D) * 8;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.38066 } (escaped heap)
  __new_finish_26 = iftmp.12_113 + _133;
  # DEBUG __new_finishD.31336 => __new_finish_26
  # DEBUG D#283ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36678 => D#283ptD.0
  # DEBUG D#353ptD.0 => this_4(D)->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG thisD.36676 => &__positionD.28322
  # DEBUG __firstD.36641 => D#358ptD.0
  # DEBUG __lastD.36642 => D#353ptD.0
  # DEBUG __resultD.36643 => __new_finish_26
  # DEBUG __allocD.36644 => D#279ptD.0
  # DEBUG D#278ptD.0 => D#279ptD.0
  # DEBUG D#275ptD.0 => D#278ptD.0
  # DEBUG __firstD.36648 => D#358ptD.0
  # DEBUG __lastD.36647 => D#353ptD.0
  # DEBUG __resultD.36646 => __new_finish_26
  # DEBUG D.36645 => D#275ptD.0
  # DEBUG __firstD.36651 => D#358ptD.0
  # DEBUG __lastD.36650 => D#353ptD.0
  # DEBUG __resultD.36649 => __new_finish_26
  # DEBUG __assignableD.36654 => 1
  # DEBUG __firstD.36657 => D#358ptD.0
  # DEBUG __lastD.36656 => D#353ptD.0
  # DEBUG __resultD.36655 => __new_finish_26
  # DEBUG __firstD.36660 => D#358ptD.0
  # DEBUG __lastD.36659 => D#353ptD.0
  # DEBUG __resultD.36658 => __new_finish_26
  # DEBUG __itD.36245 => D#353ptD.0
  # DEBUG __itD.35078 => D#353ptD.0
  # DEBUG __itD.36243 => D#358ptD.0
  # DEBUG __itD.35078 => D#358ptD.0
  # DEBUG __firstD.36663 => D#358ptD.0
  # DEBUG __lastD.36662 => D#353ptD.0
  # DEBUG __resultD.36661 => __new_finish_26
  # DEBUG __itD.36225 => __new_finish_26
  # DEBUG __itD.35081 => __new_finish_26
  # DEBUG __itD.36223 => D#353ptD.0
  # DEBUG __itD.35081 => D#353ptD.0
  # DEBUG __itD.36221 => D#358ptD.0
  # DEBUG __itD.35081 => D#358ptD.0
  # DEBUG __firstD.36666 => D#358ptD.0
  # DEBUG __lastD.36665 => D#353ptD.0
  # DEBUG __resultD.36664 => __new_finish_26
  # DEBUG __simpleD.36670 => 1
  # DEBUG __firstD.36673 => D#358ptD.0
  # DEBUG __lastD.36672 => D#353ptD.0
  # DEBUG __resultD.36671 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_67 = _66 /[ex] 8;
  # DEBUG _NumD.36674 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.38066 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.31336 => _70
  # DEBUG D#284ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36639 => D#284ptD.0
  # DEBUG D#296ptD.0 => this_4(D)->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG D#295ptD.0 => this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.36636 => D#295ptD.0
  # DEBUG __lastD.36637 => D#296ptD.0
  # DEBUG D.36638 => NULL
  # DEBUG D#64ptD.0 => D#295ptD.0
  # DEBUG D#65ptD.0 => D#296ptD.0
  # DEBUG __firstD.34345 => D#64ptD.0
  # DEBUG __lastD.34344 => D#65ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D.34334 => D#60ptD.0
  # DEBUG D.34333 => D#61ptD.0
  # DEBUG D#294ptD.0 => this_4(D)->D.28397._M_implD.27888._M_end_of_storageD.27892
  # DEBUG D#293ptD.0 => (long intD.12) D#294ptD.0
  # DEBUG D#292ptD.0 => (long intD.12) D#357ptD.0
  # DEBUG D#291ptD.0 => D#293ptD.0 - D#292ptD.0
  # DEBUG D#290ptD.0 => D#291ptD.0 /[ex] 8
  # DEBUG D#289ptD.0 => (long unsigned intD.14) D#290ptD.0
  # DEBUG D#288ptD.0 => &this_4(D)->D.28397
  # DEBUG thisD.36626 => D#288ptD.0
  # DEBUG __pD.36627 => D#357ptD.0
  # DEBUG __nD.36628 => D#289ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#162ptD.0 => &D#288ptD.0->_M_implD.27888
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#161ptD.0 => D#289ptD.0
  # DEBUG __pD.36632 => D#357ptD.0
  # DEBUG __aD.36630 => D#160ptD.0
  # DEBUG __nD.36631 => D#161ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG __pD.36635 => D#357ptD.0
  # DEBUG thisD.36633 => D#156ptD.0
  # DEBUG D.36634 => D#157ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.38066 } (escaped heap)
  # CLB = nonlocal null { D.38066 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 53, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
;;    succ:       53 [100.0%]  (FALLTHRU)

;;   basic block 53, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.28397._M_implD.27888._M_startD.27890 = iftmp.12_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.28397._M_implD.27888._M_finishD.27891 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.28397._M_implD.27888._M_end_of_storageD.27892 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 53, next block 54, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>
;;    succ:       54 [100.0%]  (FALLTHRU)

;;   basic block 54, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 54, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.31332 => NULL
  # DEBUG thisD.36746 => this_4(D)
  # DEBUG D#80ptD.0 => &this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG thisD.36748 => NULL
  # DEBUG __iD.36747 => D#80ptD.0
  # DEBUG __lhsD.36743 => &__positionD.28322
  # DEBUG __rhsD.36744 => &D.31334
  # DEBUG thisD.34410 => &__positionD.28322
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.34408 => &D.31334
  _143 = _144 - _116;
  # DEBUG D#298ptD.0 => _143 /[ex] 8
  # DEBUG __elems_beforeD.31333 => (const size_typeD.27973) D#298ptD.0
  # DEBUG D#297ptD.0 => &this_4(D)->D.28397
  # DEBUG D#227ptD.0 => D#297ptD.0
  # DEBUG __nD.38045 => NULL
  # DEBUG thisD.38046 => D#227ptD.0
  # DEBUG D#226ptD.0 => D#227ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.31332 => NULL
  # DEBUG thisD.36746 => this_4(D)
  # DEBUG D#80ptD.0 => &this_4(D)->D.28397._M_implD.27888._M_startD.27890
  # DEBUG thisD.36748 => NULL
  # DEBUG __iD.36747 => D#80ptD.0
  # DEBUG __lhsD.36743 => &__positionD.28322
  # DEBUG __rhsD.36744 => &D.31334
  # DEBUG thisD.34410 => &__positionD.28322
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.34408 => &D.31334
  _150 = _151 - _116;
  # DEBUG D#298ptD.0 => _150 /[ex] 8
  # DEBUG __elems_beforeD.31333 => (const size_typeD.27973) D#298ptD.0
  # DEBUG D#297ptD.0 => &this_4(D)->D.28397
  # DEBUG D#227ptD.0 => D#297ptD.0
  # DEBUG __nD.38045 => NULL
  # DEBUG thisD.38046 => D#227ptD.0
  # DEBUG D#226ptD.0 => D#227ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=1588, decl_uid=29068, cgraph_uid=567, symbol_order=568)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.28402 * const thisD.29069, struct iteratorD.28713 __positionD.29070, size_typeD.28721 __nD.29071, const value_typeD.28708 & __xD.29072)
{
  const long unsigned intD.14 D.38194;
  const size_typeD.28721 __lenD.38188;
  size_typeD.28721 D.38193;
  size_typeD.28721 __nD.38186;
  intD.9 * D.38184;
  const ptrdiff_tD.2819 _NumD.38174;
  intD.9 * D.38175;
  intD.9 * const __positionD.37338;
  intD.9 * __firstD.37306;
  const ptrdiff_tD.2819 _NumD.37300;
  const ptrdiff_tD.2819 _NumD.37261;
  intD.9 * __firstD.37189;
  long unsigned intD.14 __nD.37190;
  intD.9 * __firstD.37140;
  const ptrdiff_tD.2819 _NumD.37136;
  intD.9 * __firstD.37089;
  intD.9 * __new_finishD.31384;
  const size_typeD.28721 __elems_afterD.31348;
  value_typeD.28708 __x_copyD.31347;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.30786 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.21_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.26_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#398ptD.0 => MEM[(struct __normal_iteratorD.28714 *)&__positionD.29070]
  # DEBUG __positionD.37338 => D#398ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(13), .MEM_54(23), .MEM_154(26)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.28714 *)&__positionD.29070];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.29145._M_implD.28636._M_end_of_storageD.28640;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.29145._M_implD.28636._M_finishD.28639;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.31347 => __x_copy_35
  # DEBUG thisD.37084 => this_4(D)
  # DEBUG D#37ptD.0 => &this_4(D)->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG thisD.37086 => NULL
  # DEBUG __iD.37085 => D#37ptD.0
  # DEBUG __lhsD.37081 => &D.31349
  # DEBUG __rhsD.37082 => &__positionD.29070
  # DEBUG thisD.34420 => &D.31349
  # DEBUG thisD.34418 => &__positionD.29070
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.28721) _22;
  # DEBUG __elems_afterD.31348 => __elems_after_37
  # DEBUG __old_finishD.31356 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#309ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37138 => D#309ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.37103 => _41
  # DEBUG __lastD.37104 => __first_7
  # DEBUG __resultD.37105 => __first_7
  # DEBUG __allocD.37106 => D#301ptD.0
  # DEBUG D#300ptD.0 => D#301ptD.0
  # DEBUG D#299ptD.0 => D#300ptD.0
  # DEBUG __firstD.37110 => _41
  # DEBUG __lastD.37109 => __first_7
  # DEBUG __resultD.37108 => __first_7
  # DEBUG D.37107 => D#299ptD.0
  # DEBUG __firstD.37113 => _41
  # DEBUG __lastD.37112 => __first_7
  # DEBUG __resultD.37111 => __first_7
  # DEBUG __assignableD.37116 => 1
  # DEBUG __firstD.37119 => _41
  # DEBUG __lastD.37118 => __first_7
  # DEBUG __resultD.37117 => __first_7
  # DEBUG __firstD.37122 => _41
  # DEBUG __lastD.37121 => __first_7
  # DEBUG __resultD.37120 => __first_7
  # DEBUG __itD.36832 => __first_7
  # DEBUG __itD.35110 => __first_7
  # DEBUG __itD.36830 => _41
  # DEBUG __itD.35110 => _41
  # DEBUG __firstD.37125 => _41
  # DEBUG __lastD.37124 => __first_7
  # DEBUG __resultD.37123 => __first_7
  # DEBUG __itD.36812 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.36810 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.36808 => _41
  # DEBUG __itD.35113 => _41
  # DEBUG __firstD.37128 => _41
  # DEBUG __lastD.37127 => __first_7
  # DEBUG __resultD.37126 => __first_7
  # DEBUG __simpleD.37132 => 1
  # DEBUG __firstD.37135 => _41
  # DEBUG __lastD.37134 => __first_7
  # DEBUG __resultD.37133 => __first_7
  __first.21_49 = (long intD.12) _41;
  _47 = _8 - __first.21_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.37136 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.29145._M_implD.28636._M_finishD.28639;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.29145._M_implD.28636._M_finishD.28639 = _43;
  # DEBUG thisD.37101 => &__positionD.29070
  # DEBUG __firstD.38158 => D#398ptD.0
  # DEBUG __lastD.38159 => _41
  # DEBUG __resultD.38160 => __first_7
  # DEBUG __itD.35498 => _41
  # DEBUG __itD.35110 => _41
  # DEBUG __itD.35496 => D#398ptD.0
  # DEBUG __itD.35110 => D#398ptD.0
  # DEBUG __firstD.38163 => D#398ptD.0
  # DEBUG __lastD.38162 => _41
  # DEBUG __resultD.38161 => __first_7
  # DEBUG __itD.35478 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.35476 => _41
  # DEBUG __itD.35113 => _41
  # DEBUG __itD.35474 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG __firstD.38166 => D#398ptD.0
  # DEBUG __lastD.38165 => _41
  # DEBUG __resultD.38164 => __first_7
  # DEBUG __simpleD.38170 => 1
  # DEBUG __firstD.38173 => D#398ptD.0
  # DEBUG __lastD.38172 => _41
  # DEBUG __resultD.38171 => __first_7
  _104 = __first.21_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.38174 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.37099 => &__positionD.29070
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.37097 => &__positionD.29070
  # DEBUG D#205ptD.0 => &__x_copyD.31347
  # DEBUG __firstD.37089 => D#398ptD.0
  # DEBUG __lastD.37090 => _48
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG __valueD.37092 => D#204ptD.0
  # DEBUG __itD.35123 => _48
  # DEBUG __itD.35113 => _48
  # DEBUG __itD.35121 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __firstD.37095 => D#398ptD.0
  # DEBUG __lastD.37094 => _48
  # DEBUG __valueD.37093 => D#201ptD.0
  # DEBUG __tmpD.37096 => __x_copy_35
  # DEBUG __firstD.37095 => D#398ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.37095 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.37095 => __position_55
  # DEBUG __firstD.37095 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#310ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37211 => D#310ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#273ptD.0 => &__x_copyD.31347
  # DEBUG __firstD.37189 => __first_7
  # DEBUG __nD.37190 => __n_50
  # DEBUG D#272ptD.0 => D#273ptD.0
  # DEBUG __xD.37193 => D#272ptD.0
  # DEBUG D.37192 => D#274ptD.0
  # DEBUG D#271ptD.0 => D#272ptD.0
  # DEBUG __firstD.37196 => __first_7
  # DEBUG __nD.37195 => __n_50
  # DEBUG D#270ptD.0 => D#271ptD.0
  # DEBUG __xD.37194 => D#270ptD.0
  # DEBUG __assignableD.37198 => 1
  # DEBUG D#269ptD.0 => D#270ptD.0
  # DEBUG __firstD.37201 => __first_7
  # DEBUG __nD.37200 => __n_50
  # DEBUG D#268ptD.0 => D#269ptD.0
  # DEBUG __xD.37199 => D#268ptD.0
  # DEBUG D#267ptD.0 => D#268ptD.0
  # DEBUG __firstD.37204 => __first_7
  # DEBUG __nD.37203 => __n_50
  # DEBUG D#266ptD.0 => D#267ptD.0
  # DEBUG __valueD.37202 => D#266ptD.0
  # DEBUG __itD.36074 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG D#265ptD.0 => D#266ptD.0
  # DEBUG __firstD.37207 => __first_7
  # DEBUG __nD.37206 => __n_50
  # DEBUG __valueD.37205 => D#265ptD.0
  # DEBUG __tmpD.37208 => __x_copy_35
  # DEBUG __niterD.37209 => __n_50
  # DEBUG __niterD.37209 => __n_50
  # DEBUG __firstD.37207 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.37209 => __n_111
  # DEBUG __firstD.37207 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.37209 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.37207 => __first_64
  # DEBUG __niterD.37209 => __n_63
  # DEBUG __firstD.37207 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(18), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(18), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.29145._M_implD.28636._M_finishD.28639 = __first_125;
  # DEBUG D#311ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37187 => D#311ptD.0
  # DEBUG thisD.37185 => &__positionD.29070
  # DEBUG __firstD.37150 => D#398ptD.0
  # DEBUG __lastD.37151 => __first_7
  # DEBUG __resultD.37152 => __first_125
  # DEBUG __allocD.37153 => D#301ptD.0
  # DEBUG D#300ptD.0 => D#301ptD.0
  # DEBUG D#299ptD.0 => D#300ptD.0
  # DEBUG __firstD.37157 => D#398ptD.0
  # DEBUG __lastD.37156 => __first_7
  # DEBUG __resultD.37155 => __first_125
  # DEBUG D.37154 => D#299ptD.0
  # DEBUG __firstD.37160 => D#398ptD.0
  # DEBUG __lastD.37159 => __first_7
  # DEBUG __resultD.37158 => __first_125
  # DEBUG __assignableD.37163 => 1
  # DEBUG __firstD.37166 => D#398ptD.0
  # DEBUG __lastD.37165 => __first_7
  # DEBUG __resultD.37164 => __first_125
  # DEBUG __firstD.37169 => D#398ptD.0
  # DEBUG __lastD.37168 => __first_7
  # DEBUG __resultD.37167 => __first_125
  # DEBUG __itD.36832 => __first_7
  # DEBUG __itD.35110 => __first_7
  # DEBUG __itD.36830 => D#398ptD.0
  # DEBUG __itD.35110 => D#398ptD.0
  # DEBUG __firstD.37172 => D#398ptD.0
  # DEBUG __lastD.37171 => __first_7
  # DEBUG __resultD.37170 => __first_125
  # DEBUG __itD.36812 => __first_125
  # DEBUG __itD.35113 => __first_125
  # DEBUG __itD.36810 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.36808 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG __firstD.37175 => D#398ptD.0
  # DEBUG __lastD.37174 => __first_7
  # DEBUG __resultD.37173 => __first_125
  # DEBUG __simpleD.37179 => 1
  # DEBUG __firstD.37182 => D#398ptD.0
  # DEBUG __lastD.37181 => __first_7
  # DEBUG __resultD.37180 => __first_125
  # DEBUG _NumD.37183 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.29145._M_implD.28636._M_finishD.28639;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.29145._M_implD.28636._M_finishD.28639 = _53;
  # DEBUG thisD.37148 => &__positionD.29070
  # DEBUG D#205ptD.0 => &__x_copyD.31347
  # DEBUG __firstD.37140 => D#398ptD.0
  # DEBUG __lastD.37141 => __first_7
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG __valueD.37143 => D#204ptD.0
  # DEBUG __itD.35123 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.35121 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __firstD.37146 => D#398ptD.0
  # DEBUG __lastD.37145 => __first_7
  # DEBUG __valueD.37144 => D#201ptD.0
  # DEBUG __tmpD.37147 => __x_copy_35
  # DEBUG __firstD.37146 => D#398ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.37146 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.37146 => __position_58
  # DEBUG __firstD.37146 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.38185 => this_4(D)
  # DEBUG __nD.38186 => __n_2(D)
  # DEBUG __nD.38186 => __n_2(D)
  # DEBUG __sD.38187 => "vector::_M_fill_insert"
  # DEBUG D#233ptD.0 => this_4(D)
  # DEBUG thisD.35534 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => &D#232ptD.0->D.29145
  # DEBUG thisD.35524 => D#231ptD.0
  # DEBUG __aD.35516 => D#230ptD.0
  # DEBUG D#229ptD.0 => D#230ptD.0
  # DEBUG D#228ptD.0 => D#229ptD.0
  # DEBUG thisD.35507 => D#228ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG thisD.38191 => D#33ptD.0
  # DEBUG thisD.38192 => D#33ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG thisD.35552 => D#33ptD.0
  # DEBUG thisD.35551 => D#33ptD.0
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG thisD.35547 => D#33ptD.0
  # DEBUG thisD.35546 => D#33ptD.0
  # DEBUG __aD.38190 => &D.38194
  # DEBUG __bD.38189 => &__nD.38186
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.38188 => __len_124
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG thisD.35539 => D#33ptD.0
  # DEBUG thisD.35538 => D#33ptD.0
  # DEBUG D#233ptD.0 => this_4(D)
  # DEBUG thisD.35554 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => &D#232ptD.0->D.29145
  # DEBUG thisD.35524 => D#231ptD.0
  # DEBUG __aD.35516 => D#230ptD.0
  # DEBUG D#229ptD.0 => D#230ptD.0
  # DEBUG D#228ptD.0 => D#229ptD.0
  # DEBUG thisD.35507 => D#228ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.31380 => NULL
  # DEBUG thisD.37333 => this_4(D)
  # DEBUG D#81ptD.0 => &this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG thisD.37335 => NULL
  # DEBUG __iD.37334 => D#81ptD.0
  # DEBUG __lhsD.37330 => &__positionD.29070
  # DEBUG __rhsD.37331 => &D.31382
  # DEBUG thisD.34420 => &__positionD.29070
  # DEBUG thisD.34418 => &D.31382
  # DEBUG D#322ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.31381 => (const size_typeD.28721) D#322ptD.0
  # DEBUG D#321ptD.0 => &this_4(D)->D.29145
  # DEBUG D#241ptD.0 => D#321ptD.0
  # DEBUG __nD.38176 => NULL
  # DEBUG thisD.38177 => D#241ptD.0
  # DEBUG D#240ptD.0 => D#241ptD.0
  # DEBUG D#239ptD.0 => &D#240ptD.0->_M_implD.28636
  # DEBUG D#238ptD.0 => D#239ptD.0
  # DEBUG __nD.38180 => NULL
  # DEBUG __aD.38179 => D#238ptD.0
  # DEBUG D#237ptD.0 => D#238ptD.0
  # DEBUG D#235ptD.0 => D#237ptD.0
  # DEBUG D#236ptD.0 => 0B
  # DEBUG __nD.38183 => NULL
  # DEBUG thisD.38181 => D#235ptD.0
  # DEBUG D.38182 => D#236ptD.0
  # DEBUG D#234ptD.0 => D#235ptD.0
  # DEBUG D#228ptD.0 => D#234ptD.0
  # DEBUG thisD.35559 => D#228ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.38197 } (escaped heap)
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.29145._M_implD.28636._M_startD.28638;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.29145._M_implD.28636._M_finishD.28639;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.38197 } (escaped heap)
  # iftmp.26_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.38197 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
  # DEBUG __new_startD.31383 => NULL
  # DEBUG __new_finishD.31384 => NULL
  # DEBUG D#305ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37328 => D#305ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.38197 } (escaped heap)
  __first_20 = iftmp.26_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#273ptD.0 => __x_21(D)
  # DEBUG __firstD.37306 => __first_20
  # DEBUG __nD.37307 => __n_2(D)
  # DEBUG D#272ptD.0 => D#273ptD.0
  # DEBUG __xD.37310 => D#272ptD.0
  # DEBUG D.37309 => D#274ptD.0
  # DEBUG D#271ptD.0 => D#272ptD.0
  # DEBUG __firstD.37313 => __first_20
  # DEBUG __nD.37312 => __n_2(D)
  # DEBUG D#270ptD.0 => D#271ptD.0
  # DEBUG __xD.37311 => D#270ptD.0
  # DEBUG __assignableD.37315 => 1
  # DEBUG D#269ptD.0 => D#270ptD.0
  # DEBUG __firstD.37318 => __first_20
  # DEBUG __nD.37317 => __n_2(D)
  # DEBUG D#268ptD.0 => D#269ptD.0
  # DEBUG __xD.37316 => D#268ptD.0
  # DEBUG D#267ptD.0 => D#268ptD.0
  # DEBUG __firstD.37321 => __first_20
  # DEBUG __nD.37320 => __n_2(D)
  # DEBUG D#266ptD.0 => D#267ptD.0
  # DEBUG __valueD.37319 => D#266ptD.0
  # DEBUG __itD.36074 => __first_20
  # DEBUG __itD.35113 => __first_20
  # DEBUG D#265ptD.0 => D#266ptD.0
  # DEBUG __firstD.37324 => __first_20
  # DEBUG __nD.37323 => __n_2(D)
  # DEBUG __valueD.37322 => D#265ptD.0
  # DEBUG __tmpD.37325 => _56
  # DEBUG __niterD.37326 => __n_2(D)
  # DEBUG __niterD.37326 => __n_2(D)
  # DEBUG __firstD.37324 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(33)>
  # PT = null { D.38197 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(33)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(33)>
  # DEBUG __niterD.37326 => __n_132
  # DEBUG __firstD.37324 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.37326 => __n_79
  # PT = null { D.38197 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.37324 => __first_80
  # DEBUG __niterD.37326 => __n_79
  # DEBUG __firstD.37324 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.31384 => 0B
  # DEBUG D#306ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37304 => D#306ptD.0
  # DEBUG thisD.37302 => &__positionD.29070
  # DEBUG D#397ptD.0 => this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.37267 => D#397ptD.0
  # DEBUG __lastD.37268 => D#398ptD.0
  # DEBUG __resultD.37269 => NULL
  # DEBUG __allocD.37270 => D#303ptD.0
  # DEBUG D#302ptD.0 => D#303ptD.0
  # DEBUG D#299ptD.0 => D#302ptD.0
  # DEBUG __firstD.37274 => D#397ptD.0
  # DEBUG __lastD.37273 => D#398ptD.0
  # DEBUG __resultD.37272 => NULL
  # DEBUG D.37271 => D#299ptD.0
  # DEBUG __firstD.37277 => D#397ptD.0
  # DEBUG __lastD.37276 => D#398ptD.0
  # DEBUG __resultD.37275 => NULL
  # DEBUG __assignableD.37280 => 1
  # DEBUG __firstD.37283 => D#397ptD.0
  # DEBUG __lastD.37282 => D#398ptD.0
  # DEBUG __resultD.37281 => NULL
  # DEBUG __firstD.37286 => D#397ptD.0
  # DEBUG __lastD.37285 => D#398ptD.0
  # DEBUG __resultD.37284 => NULL
  # DEBUG __itD.36832 => D#398ptD.0
  # DEBUG __itD.35110 => D#398ptD.0
  # DEBUG __itD.36830 => D#397ptD.0
  # DEBUG __itD.35110 => D#397ptD.0
  # DEBUG __firstD.37289 => D#397ptD.0
  # DEBUG __lastD.37288 => D#398ptD.0
  # DEBUG __resultD.37287 => NULL
  # DEBUG __itD.36812 => NULL
  # DEBUG __itD.35113 => NULL
  # DEBUG __itD.36810 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG __itD.36808 => D#397ptD.0
  # DEBUG __itD.35113 => D#397ptD.0
  # DEBUG __firstD.37292 => D#397ptD.0
  # DEBUG __lastD.37291 => D#398ptD.0
  # DEBUG __resultD.37290 => NULL
  # DEBUG __simpleD.37296 => 1
  # DEBUG __firstD.37299 => D#397ptD.0
  # DEBUG __lastD.37298 => D#398ptD.0
  # DEBUG __resultD.37297 => NULL
  # DEBUG D#396ptD.0 => (long intD.12) D#397ptD.0
  # DEBUG D#395ptD.0 => _158 - D#396ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.37300 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memmoveD.995 (iftmp.26_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#394ptD.0 => (long unsigned intD.14) D#395ptD.0
  # DEBUG __new_finishD.31384 => iftmp.26_113 + D#394ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.38197 } (escaped heap)
  __new_finish_26 = iftmp.26_113 + _133;
  # DEBUG __new_finishD.31384 => __new_finish_26
  # DEBUG D#307ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37265 => D#307ptD.0
  # DEBUG D#393ptD.0 => this_4(D)->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG thisD.37263 => &__positionD.29070
  # DEBUG __firstD.37228 => D#398ptD.0
  # DEBUG __lastD.37229 => D#393ptD.0
  # DEBUG __resultD.37230 => __new_finish_26
  # DEBUG __allocD.37231 => D#303ptD.0
  # DEBUG D#302ptD.0 => D#303ptD.0
  # DEBUG D#299ptD.0 => D#302ptD.0
  # DEBUG __firstD.37235 => D#398ptD.0
  # DEBUG __lastD.37234 => D#393ptD.0
  # DEBUG __resultD.37233 => __new_finish_26
  # DEBUG D.37232 => D#299ptD.0
  # DEBUG __firstD.37238 => D#398ptD.0
  # DEBUG __lastD.37237 => D#393ptD.0
  # DEBUG __resultD.37236 => __new_finish_26
  # DEBUG __assignableD.37241 => 1
  # DEBUG __firstD.37244 => D#398ptD.0
  # DEBUG __lastD.37243 => D#393ptD.0
  # DEBUG __resultD.37242 => __new_finish_26
  # DEBUG __firstD.37247 => D#398ptD.0
  # DEBUG __lastD.37246 => D#393ptD.0
  # DEBUG __resultD.37245 => __new_finish_26
  # DEBUG __itD.36832 => D#393ptD.0
  # DEBUG __itD.35110 => D#393ptD.0
  # DEBUG __itD.36830 => D#398ptD.0
  # DEBUG __itD.35110 => D#398ptD.0
  # DEBUG __firstD.37250 => D#398ptD.0
  # DEBUG __lastD.37249 => D#393ptD.0
  # DEBUG __resultD.37248 => __new_finish_26
  # DEBUG __itD.36812 => __new_finish_26
  # DEBUG __itD.35113 => __new_finish_26
  # DEBUG __itD.36810 => D#393ptD.0
  # DEBUG __itD.35113 => D#393ptD.0
  # DEBUG __itD.36808 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG __firstD.37253 => D#398ptD.0
  # DEBUG __lastD.37252 => D#393ptD.0
  # DEBUG __resultD.37251 => __new_finish_26
  # DEBUG __simpleD.37257 => 1
  # DEBUG __firstD.37260 => D#398ptD.0
  # DEBUG __lastD.37259 => D#393ptD.0
  # DEBUG __resultD.37258 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.37261 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.38197 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.31384 => _70
  # DEBUG D#308ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37226 => D#308ptD.0
  # DEBUG D#320ptD.0 => this_4(D)->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG D#319ptD.0 => this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.37223 => D#319ptD.0
  # DEBUG __lastD.37224 => D#320ptD.0
  # DEBUG D.37225 => NULL
  # DEBUG D#74ptD.0 => D#319ptD.0
  # DEBUG D#75ptD.0 => D#320ptD.0
  # DEBUG __firstD.34389 => D#74ptD.0
  # DEBUG __lastD.34388 => D#75ptD.0
  # DEBUG D#73ptD.0 => D#75ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#71ptD.0 => D#73ptD.0
  # DEBUG D.34378 => D#70ptD.0
  # DEBUG D.34377 => D#71ptD.0
  # DEBUG D#318ptD.0 => this_4(D)->D.29145._M_implD.28636._M_end_of_storageD.28640
  # DEBUG D#317ptD.0 => (long intD.12) D#318ptD.0
  # DEBUG D#316ptD.0 => (long intD.12) D#397ptD.0
  # DEBUG D#315ptD.0 => D#317ptD.0 - D#316ptD.0
  # DEBUG D#314ptD.0 => D#315ptD.0 /[ex] 4
  # DEBUG D#313ptD.0 => (long unsigned intD.14) D#314ptD.0
  # DEBUG D#312ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37213 => D#312ptD.0
  # DEBUG __pD.37214 => D#397ptD.0
  # DEBUG __nD.37215 => D#313ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#182ptD.0 => &D#312ptD.0->_M_implD.28636
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#181ptD.0 => D#313ptD.0
  # DEBUG __pD.37219 => D#397ptD.0
  # DEBUG __aD.37217 => D#180ptD.0
  # DEBUG __nD.37218 => D#181ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG D#176ptD.0 => D#178ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG __pD.37222 => D#397ptD.0
  # DEBUG thisD.37220 => D#176ptD.0
  # DEBUG D.37221 => D#177ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.29145._M_implD.28636._M_startD.28638 = iftmp.26_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.29145._M_implD.28636._M_finishD.28639 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.29145._M_implD.28636._M_end_of_storageD.28640 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(3), .MEM_34(44)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.31380 => NULL
  # DEBUG thisD.37333 => this_4(D)
  # DEBUG D#81ptD.0 => &this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG thisD.37335 => NULL
  # DEBUG __iD.37334 => D#81ptD.0
  # DEBUG __lhsD.37330 => &__positionD.29070
  # DEBUG __rhsD.37331 => &D.31382
  # DEBUG thisD.34420 => &__positionD.29070
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.34418 => &D.31382
  _143 = _144 - _116;
  # DEBUG D#322ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.31381 => (const size_typeD.28721) D#322ptD.0
  # DEBUG D#321ptD.0 => &this_4(D)->D.29145
  # DEBUG D#241ptD.0 => D#321ptD.0
  # DEBUG __nD.38176 => NULL
  # DEBUG thisD.38177 => D#241ptD.0
  # DEBUG D#240ptD.0 => D#241ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.31380 => NULL
  # DEBUG thisD.37333 => this_4(D)
  # DEBUG D#81ptD.0 => &this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG thisD.37335 => NULL
  # DEBUG __iD.37334 => D#81ptD.0
  # DEBUG __lhsD.37330 => &__positionD.29070
  # DEBUG __rhsD.37331 => &D.31382
  # DEBUG thisD.34420 => &__positionD.29070
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.34418 => &D.31382
  _150 = _151 - _116;
  # DEBUG D#322ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.31381 => (const size_typeD.28721) D#322ptD.0
  # DEBUG D#321ptD.0 => &this_4(D)->D.29145
  # DEBUG D#241ptD.0 => D#321ptD.0
  # DEBUG __nD.38176 => NULL
  # DEBUG thisD.38177 => D#241ptD.0
  # DEBUG D#240ptD.0 => D#241ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for this_4(D)->D.29145._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.29145._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__x_21(D)
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__x_21(D)
Creating dr for this_4(D)->D.29145._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.29145._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.29145._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for MEM[(int * *)this_4(D)]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D)]
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for MEM[(const int &)__x_21(D)]
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const int &)__x_21(D)]
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.26_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.26_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.26_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.26_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.26_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.26_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.26_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.26_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.26_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.26_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.26_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.26_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.26_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.26_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.26_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.26_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.29145._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.29145._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.29145._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:18)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:39)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:56, LOOPS:4, CONDITIONS:19, STMTS:600)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#398 => MEM[(struct __normal_iterator *)&__position]
    # DEBUG __position => D#398
    if (__n_2(D) != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_10 bb_48 bb_23 bb_49 }, succs = {bb_55 })
  {
    <bb 3>:
    # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>

  }
  bb_55 (preds = {bb_3 }, succs = {bb_45 })
  {
    <bb 55>:
    goto <bb 45>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_28 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    __position_16 = MEM[(struct __normal_iterator *)&__position];
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.29145._M_impl._M_end_of_storage;
    _6 = (long int) _5;
    # VUSE <.MEM_3(D)>
    __first_7 = this_4(D)->D.29145._M_impl._M_finish;
    _8 = (long int) __first_7;
    _9 = _6 - _8;
    _10 = _9 /[ex] 4;
    _11 = (long unsigned int) _10;
    if (__n_2(D) <= _11)
      goto <bb 5>;
    else
      goto <bb 28>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_15 })
  {
    <bb 5>:
    # VUSE <.MEM_3(D)>
    __x_copy_35 = *__x_21(D);
    # DEBUG __x_copy => __x_copy_35
    # DEBUG this => this_4(D)
    # DEBUG D#37 => &this_4(D)->D.29145._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#37
    # DEBUG __lhs => &D.31349
    # DEBUG __rhs => &__position
    # DEBUG this => &D.31349
    # DEBUG this => &__position
    _27 = (long int) __position_16;
    _23 = _8 - _27;
    _22 = _23 /[ex] 4;
    __elems_after_37 = (const size_type) _22;
    # DEBUG __elems_after => __elems_after_37
    # DEBUG __old_finish => __first_7
    if (__n_2(D) < __elems_after_37)
      goto <bb 6>;
    else
      goto <bb 15>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#309 => &this_4(D)->D.29145
    # DEBUG this => D#309
    _39 = __n_2(D) * 4;
    _40 = -_39;
    _41 = __first_7 + _40;
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __alloc => D#301
    # DEBUG D#300 => D#301
    # DEBUG D#299 => D#300
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG D.37107 => D#299
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __assignable => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    __first.21_49 = (long int) _41;
    _47 = _8 - __first.21_49;
    _Num_45 = _47 /[ex] 4;
    # DEBUG _Num => _Num_45
    if (_Num_45 != 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _38 = (long unsigned int) _47;
    # .MEM_97 = VDEF <.MEM_3(D)>
    __builtin_memmove (__first_7, _41, _38);
    # VUSE <.MEM_97>
    pretmp_173 = this_4(D)->D.29145._M_impl._M_finish;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
    # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
    _43 = prephitmp_174 + _39;
    # .MEM_44 = VDEF <.MEM_14>
    this_4(D)->D.29145._M_impl._M_finish = _43;
    # DEBUG this => &__position
    # DEBUG __first => D#398
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG __first => D#398
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG __first => D#398
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __simple => 1
    # DEBUG __first => D#398
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    _104 = __first.21_49 - _27;
    _Num_105 = _104 /[ex] 4;
    # DEBUG _Num => _Num_105
    if (_Num_105 != 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    _106 = (long unsigned int) _104;
    _107 = -_106;
    _108 = __first_7 + _107;
    # .MEM_135 = VDEF <.MEM_44>
    __builtin_memmove (_108, __position_16, _106);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_3 bb_11 })
  {
    <bb 10>:
    # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
    # DEBUG this => &__position
    _48 = __position_16 + _39;
    # DEBUG this => &__position
    # DEBUG D#205 => &__x_copy
    # DEBUG __first => D#398
    # DEBUG __last => _48
    # DEBUG D#204 => D#205
    # DEBUG __value => D#204
    # DEBUG __it => _48
    # DEBUG __it => _48
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG D#201 => D#204
    # DEBUG __first => D#398
    # DEBUG __last => _48
    # DEBUG __value => D#201
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#398
    if (__position_16 == _48)
      goto <bb 3>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_13 (preds = {bb_12 }, succs = {bb_48 })
  {
    <bb 13>:
    # .MEM_13 = PHI <.MEM_98(12)>

  }
  bb_48 (preds = {bb_13 }, succs = {bb_3 })
  {
    <bb 48>:
    goto <bb 3>;

  }
  bb_15 (preds = {bb_5 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # DEBUG D#310 => &this_4(D)->D.29145
    # DEBUG this => D#310
    __n_50 = __n_2(D) - __elems_after_37;
    # DEBUG D#273 => &__x_copy
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#272 => D#273
    # DEBUG __x => D#272
    # DEBUG D.37192 => D#274
    # DEBUG D#271 => D#272
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#270 => D#271
    # DEBUG __x => D#270
    # DEBUG __assignable => 1
    # DEBUG D#269 => D#270
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#268 => D#269
    # DEBUG __x => D#268
    # DEBUG D#267 => D#268
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#266 => D#267
    # DEBUG __value => D#266
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG D#265 => D#266
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG __value => D#265
    # DEBUG __tmp => __x_copy_35
    # DEBUG __niter => __n_50
    # DEBUG __niter => __n_50
    # DEBUG __first => __first_7
    if (__n_50 == 0)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
    <bb 18>:

  }
  bb_50 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 50>:
    _160 = __n_50 * 4;
    __first_123 = __first_7 + _160;
    goto <bb 20>;

  }
  bb_20 (preds = {bb_50 bb_15 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # __first_125 = PHI <__first_123(50), __first_7(15)>
    # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
    # .MEM_51 = VDEF <.MEM_84>
    this_4(D)->D.29145._M_impl._M_finish = __first_125;
    # DEBUG D#311 => &this_4(D)->D.29145
    # DEBUG this => D#311
    # DEBUG this => &__position
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#301
    # DEBUG D#300 => D#301
    # DEBUG D#299 => D#300
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG D.37154 => D#299
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __simple => 1
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG _Num => _22
    if (_22 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_168 = (long unsigned int) _23;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _59 = (long unsigned int) _23;
    # .MEM_100 = VDEF <.MEM_51>
    __builtin_memmove (__first_125, __position_16, _59);
    # VUSE <.MEM_100>
    pretmp_166 = this_4(D)->D.29145._M_impl._M_finish;

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_3 bb_24 })
  {
    <bb 23>:
    # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
    # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
    # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
    _53 = prephitmp_167 + prephitmp_169;
    # .MEM_54 = VDEF <.MEM_87>
    this_4(D)->D.29145._M_impl._M_finish = _53;
    # DEBUG this => &__position
    # DEBUG D#205 => &__x_copy
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG D#204 => D#205
    # DEBUG __value => D#204
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG D#201 => D#204
    # DEBUG __first => D#398
    # DEBUG __last => __first_7
    # DEBUG __value => D#201
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#398
    if (__first_7 == __position_16)
      goto <bb 3>;
    else
      goto <bb 24>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:

  }
  bb_26 (preds = {bb_25 }, succs = {bb_49 })
  {
    <bb 26>:
    # .MEM_154 = PHI <.MEM_101(25)>

  }
  bb_49 (preds = {bb_26 }, succs = {bb_3 })
  {
    <bb 49>:
    goto <bb 3>;

  }
  bb_28 (preds = {bb_4 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG this => this_4(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#233 => this_4(D)
    # DEBUG this => D#233
    # DEBUG D#232 => D#233
    # DEBUG D#231 => &D#232->D.29145
    # DEBUG this => D#231
    # DEBUG __a => D#230
    # DEBUG D#229 => D#230
    # DEBUG D#228 => D#229
    # DEBUG this => D#228
    # VUSE <.MEM_3(D)>
    _17 = MEM[(int * *)this_4(D)];
    # DEBUG D#33 => this_4(D)
    # DEBUG D#33 => this_4(D)
    # DEBUG this => D#33
    # DEBUG this => D#33
    _116 = (long int) _17;
    _117 = _8 - _116;
    _118 = _117 /[ex] 4;
    _119 = (const long unsigned int) _118;
    _120 = 4611686018427387903 - _119;
    if (__n_2(D) > _120)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_134 = VDEF <.MEM_3(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_30 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
    <bb 30>:
    # DEBUG D#33 => this_4(D)
    # DEBUG D#33 => this_4(D)
    # DEBUG this => D#33
    # DEBUG this => D#33
    # DEBUG D#33 => this_4(D)
    # DEBUG D#33 => this_4(D)
    # DEBUG this => D#33
    # DEBUG this => D#33
    # DEBUG __a => &D.38194
    # DEBUG __b => &__n
    _77 = MAX_EXPR <__n_2(D), _119>;
    __len_124 = _77 + _119;
    # DEBUG __len => __len_124
    # DEBUG D#33 => this_4(D)
    # DEBUG D#33 => this_4(D)
    # DEBUG this => D#33
    # DEBUG this => D#33
    # DEBUG D#233 => this_4(D)
    # DEBUG this => D#233
    # DEBUG D#232 => D#233
    # DEBUG D#231 => &D#232->D.29145
    # DEBUG this => D#231
    # DEBUG __a => D#230
    # DEBUG D#229 => D#230
    # DEBUG D#228 => D#229
    # DEBUG this => D#228
    _152 = __len_124 > 4611686018427387903;
    _142 = _119 > __len_124;
    _114 = _142 | _152;
    if (_114 != 0)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_31 (preds = {bb_47 }, succs = {bb_32 })
  {
    <bb 31>:
    pretmp_164 = __len_124 * 4;

  }
  bb_32 (preds = {bb_46 bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # _156 = PHI <_144(46), _151(31)>
    # _157 = PHI <_143(46), _150(31)>
    # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#81 => &this_4(D)->D.29145._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#81
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.31382
    # DEBUG this => &__position
    # DEBUG this => &D.31382
    # DEBUG D#322 => _157 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#322
    # DEBUG D#321 => &this_4(D)->D.29145
    # DEBUG D#241 => D#321
    # DEBUG __n => NULL
    # DEBUG this => D#241
    # DEBUG D#240 => D#241
    # DEBUG D#239 => &D#240->_M_impl
    # DEBUG D#238 => D#239
    # DEBUG __n => NULL
    # DEBUG __a => D#238
    # DEBUG D#237 => D#238
    # DEBUG D#235 => D#237
    # DEBUG D#236 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#235
    # DEBUG D.38182 => D#236
    # DEBUG D#234 => D#235
    # DEBUG D#228 => D#234
    # DEBUG this => D#228
    # .MEM_131 = VDEF <.MEM_3(D)>
    _112 = operator new (prephitmp_165);
    # VUSE <.MEM_131>
    pretmp_29 = this_4(D)->D.29145._M_impl._M_start;
    # VUSE <.MEM_131>
    pretmp_147 = this_4(D)->D.29145._M_impl._M_finish;
    pretmp_149 = _112 + prephitmp_165;
    pretmp_145 = (long int) pretmp_147;
    pretmp_138 = (long int) pretmp_29;
    pretmp_140 = _156 - pretmp_138;

  }
  bb_33 (preds = {bb_47 bb_32 }, succs = {bb_52 })
  {
    <bb 33>:
    # iftmp.26_113 = PHI <0B(47), _112(32)>
    # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
    # _158 = PHI <_151(47), _156(32)>
    # _153 = PHI <_150(47), _157(32)>
    # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
    # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
    # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
    # prephitmp_137 = PHI <_150(47), pretmp_140(32)>

  }
  bb_52 (preds = {bb_33 }, succs = {bb_34 })
  {
    <bb 52>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#305 => &this_4(D)->D.29145
    # DEBUG this => D#305
    _19 = (long unsigned int) _153;
    __first_20 = iftmp.26_113 + _19;
    # VUSE <.MEM_126>
    _56 = MEM[(const int &)__x_21(D)];
    # DEBUG D#273 => __x_21(D)
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#272 => D#273
    # DEBUG __x => D#272
    # DEBUG D.37309 => D#274
    # DEBUG D#271 => D#272
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#270 => D#271
    # DEBUG __x => D#270
    # DEBUG __assignable => 1
    # DEBUG D#269 => D#270
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#268 => D#269
    # DEBUG __x => D#268
    # DEBUG D#267 => D#268
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#266 => D#267
    # DEBUG __value => D#266
    # DEBUG __it => __first_20
    # DEBUG __it => __first_20
    # DEBUG D#265 => D#266
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG __value => D#265
    # DEBUG __tmp => _56
    # DEBUG __niter => __n_2(D)
    # DEBUG __niter => __n_2(D)
    # DEBUG __first => __first_20

  }
  bb_36 (preds = {bb_34 }, succs = {bb_51 })
  {
    <bb 36>:

  }
  bb_51 (preds = {bb_36 }, succs = {bb_38 bb_37 })
  {
    <bb 51>:
    # DEBUG __new_finish => 0B
    # DEBUG D#306 => &this_4(D)->D.29145
    # DEBUG this => D#306
    # DEBUG this => &__position
    # DEBUG D#397 => this_4(D)->D.29145._M_impl._M_start
    # DEBUG __first => D#397
    # DEBUG __last => D#398
    # DEBUG __result => NULL
    # DEBUG __alloc => D#303
    # DEBUG D#302 => D#303
    # DEBUG D#299 => D#302
    # DEBUG __first => D#397
    # DEBUG __last => D#398
    # DEBUG __result => NULL
    # DEBUG D.37271 => D#299
    # DEBUG __first => D#397
    # DEBUG __last => D#398
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#397
    # DEBUG __last => D#398
    # DEBUG __result => NULL
    # DEBUG __first => D#397
    # DEBUG __last => D#398
    # DEBUG __result => NULL
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG __it => D#397
    # DEBUG __it => D#397
    # DEBUG __first => D#397
    # DEBUG __last => D#398
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG __it => D#397
    # DEBUG __it => D#397
    # DEBUG __first => D#397
    # DEBUG __last => D#398
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => D#397
    # DEBUG __last => D#398
    # DEBUG __result => NULL
    # DEBUG D#396 => (long int) D#397
    # DEBUG D#395 => _158 - D#396
    _Num_73 = prephitmp_137 /[ex] 4;
    # DEBUG _Num => _Num_73
    if (_Num_73 != 0)
      goto <bb 38>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 37>:
    pretmp_103 = (long unsigned int) prephitmp_137;
    goto <bb 39>;

  }
  bb_38 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 38>:
    _74 = (long unsigned int) prephitmp_137;
    # .MEM_94 = VDEF <.MEM_93>
    __builtin_memmove (iftmp.26_113, prephitmp_146, _74);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_41 bb_40 })
  {
    <bb 39>:
    # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
    # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
    # DEBUG D#394 => (long unsigned int) D#395
    # DEBUG __new_finish => iftmp.26_113 + D#394
    _25 = __n_2(D) * 4;
    _133 = _25 + prephitmp_102;
    __new_finish_26 = iftmp.26_113 + _133;
    # DEBUG __new_finish => __new_finish_26
    # DEBUG D#307 => &this_4(D)->D.29145
    # DEBUG this => D#307
    # DEBUG D#393 => this_4(D)->D.29145._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => D#398
    # DEBUG __last => D#393
    # DEBUG __result => __new_finish_26
    # DEBUG __alloc => D#303
    # DEBUG D#302 => D#303
    # DEBUG D#299 => D#302
    # DEBUG __first => D#398
    # DEBUG __last => D#393
    # DEBUG __result => __new_finish_26
    # DEBUG D.37232 => D#299
    # DEBUG __first => D#398
    # DEBUG __last => D#393
    # DEBUG __result => __new_finish_26
    # DEBUG __assignable => 1
    # DEBUG __first => D#398
    # DEBUG __last => D#393
    # DEBUG __result => __new_finish_26
    # DEBUG __first => D#398
    # DEBUG __last => D#393
    # DEBUG __result => __new_finish_26
    # DEBUG __it => D#393
    # DEBUG __it => D#393
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG __first => D#398
    # DEBUG __last => D#393
    # DEBUG __result => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => D#393
    # DEBUG __it => D#393
    # DEBUG __it => D#398
    # DEBUG __it => D#398
    # DEBUG __first => D#398
    # DEBUG __last => D#393
    # DEBUG __result => __new_finish_26
    # DEBUG __simple => 1
    # DEBUG __first => D#398
    # DEBUG __last => D#393
    # DEBUG __result => __new_finish_26
    _66 = prephitmp_121 - _158;
    _Num_67 = _66 /[ex] 4;
    # DEBUG _Num => _Num_67
    if (_Num_67 != 0)
      goto <bb 41>;
    else
      goto <bb 40>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    pretmp_162 = (long unsigned int) _66;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 41>:
    _68 = (long unsigned int) _66;
    # .MEM_95 = VDEF <.MEM_90>
    __builtin_memcpy (__new_finish_26, __position_16, _68);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
    # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
    _70 = __new_finish_26 + prephitmp_163;
    # DEBUG __new_finish => _70
    # DEBUG D#308 => &this_4(D)->D.29145
    # DEBUG this => D#308
    # DEBUG D#320 => this_4(D)->D.29145._M_impl._M_finish
    # DEBUG D#319 => this_4(D)->D.29145._M_impl._M_start
    # DEBUG __first => D#319
    # DEBUG __last => D#320
    # DEBUG D.37225 => NULL
    # DEBUG D#74 => D#319
    # DEBUG D#75 => D#320
    # DEBUG __first => D#74
    # DEBUG __last => D#75
    # DEBUG D#73 => D#75
    # DEBUG D#72 => D#74
    # DEBUG D#70 => D#72
    # DEBUG D#71 => D#73
    # DEBUG D.34378 => D#70
    # DEBUG D.34377 => D#71
    # DEBUG D#318 => this_4(D)->D.29145._M_impl._M_end_of_storage
    # DEBUG D#317 => (long int) D#318
    # DEBUG D#316 => (long int) D#397
    # DEBUG D#315 => D#317 - D#316
    # DEBUG D#314 => D#315 /[ex] 4
    # DEBUG D#313 => (long unsigned int) D#314
    # DEBUG D#312 => &this_4(D)->D.29145
    # DEBUG this => D#312
    # DEBUG __p => D#397
    # DEBUG __n => D#313
    if (prephitmp_146 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#182 => &D#312->_M_impl
    # DEBUG D#180 => D#182
    # DEBUG D#181 => D#313
    # DEBUG __p => D#397
    # DEBUG __a => D#180
    # DEBUG __n => D#181
    # DEBUG D#179 => D#181
    # DEBUG D#178 => D#180
    # DEBUG D#176 => D#178
    # DEBUG D#177 => D#179
    # DEBUG __p => D#397
    # DEBUG this => D#176
    # DEBUG D.37221 => D#177
    # .MEM_96 = VDEF <.MEM_91>
    operator delete (prephitmp_146);

  }
  bb_44 (preds = {bb_43 bb_42 }, succs = {bb_53 })
  {
    <bb 44>:
    # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>

  }
  bb_53 (preds = {bb_44 }, succs = {bb_45 })
  {
    <bb 53>:
    # .MEM_30 = VDEF <.MEM_92>
    this_4(D)->D.29145._M_impl._M_start = iftmp.26_113;
    # .MEM_31 = VDEF <.MEM_30>
    this_4(D)->D.29145._M_impl._M_finish = _70;
    # .MEM_34 = VDEF <.MEM_31>
    this_4(D)->D.29145._M_impl._M_end_of_storage = prephitmp_148;

  }
  bb_45 (preds = {bb_55 bb_53 }, succs = {bb_54 })
  {
    <bb 45>:
    # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>

  }
  bb_54 (preds = {bb_45 }, succs = {bb_1 })
  {
    <bb 54>:
    # VUSE <.MEM_1>
    return;

  }
  bb_46 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 46>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#81 => &this_4(D)->D.29145._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#81
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.31382
    # DEBUG this => &__position
    _144 = (long int) __position_16;
    # DEBUG this => &D.31382
    _143 = _144 - _116;
    # DEBUG D#322 => _143 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#322
    # DEBUG D#321 => &this_4(D)->D.29145
    # DEBUG D#241 => D#321
    # DEBUG __n => NULL
    # DEBUG this => D#241
    # DEBUG D#240 => D#241
    goto <bb 32>;

  }
  bb_47 (preds = {bb_30 }, succs = {bb_31 bb_33 })
  {
    <bb 47>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#81 => &this_4(D)->D.29145._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#81
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.31382
    # DEBUG this => &__position
    _151 = (long int) __position_16;
    # DEBUG this => &D.31382
    _150 = _151 - _116;
    # DEBUG D#322 => _150 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#322
    # DEBUG D#321 => &this_4(D)->D.29145
    # DEBUG D#241 => D#321
    # DEBUG __n => NULL
    # DEBUG this => D#241
    # DEBUG D#240 => D#241
    if (__len_124 != 0)
      goto <bb 31>;
    else
      goto <bb 33>;

  }
  loop_1 (header = 12, latch = 14, niter = ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_12 (preds = {bb_11 bb_14 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __position_109 = PHI <__position_16(11), __position_55(14)>
      # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
      # DEBUG __first => __position_109
      # .MEM_98 = VDEF <.MEM_83>
      *__position_109 = __x_copy_35;
      __position_55 = __position_109 + 4;
      # DEBUG __first => __position_55
      # DEBUG __first => __position_55
      if (_48 == __position_55)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_12 }, succs = {bb_12 })
    {
      <bb 14>:
      goto <bb 12>;

    }
  }
  loop_2 (header = 25, latch = 27, niter = ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_25 (preds = {bb_24 bb_27 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # __position_110 = PHI <__position_16(24), __position_58(27)>
      # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
      # DEBUG __first => __position_110
      # .MEM_101 = VDEF <.MEM_136>
      *__position_110 = __x_copy_35;
      __position_58 = __position_110 + 4;
      # DEBUG __first => __position_58
      # DEBUG __first => __position_58
      if (__first_7 == __position_58)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_25 }, succs = {bb_25 })
    {
      <bb 27>:
      goto <bb 25>;

    }
  }
  loop_3 (header = 17, latch = 19, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_17 (preds = {bb_16 bb_19 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # __n_111 = PHI <__n_50(16), __n_63(19)>
      # __first_76 = PHI <__first_7(16), __first_64(19)>
      # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
      # DEBUG __niter => __n_111
      # DEBUG __first => __first_76
      # .MEM_99 = VDEF <.MEM_81>
      *__first_76 = __x_copy_35;
      __n_63 = __n_111 + 18446744073709551615;
      # DEBUG __niter => __n_63
      __first_64 = __first_76 + 4;
      # DEBUG __first => __first_64
      # DEBUG __niter => __n_63
      # DEBUG __first => __first_64
      if (__n_63 == 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 19>:
      goto <bb 17>;

    }
  }
  loop_4 (header = 34, latch = 35, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_34 (preds = {bb_35 bb_52 }, succs = {bb_36 bb_35 })
    {
      <bb 34>:
      # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
      # __first_155 = PHI <__first_80(35), __first_20(52)>
      # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
      # DEBUG __niter => __n_132
      # DEBUG __first => __first_155
      # .MEM_93 = VDEF <.MEM_130>
      *__first_155 = _56;
      __n_79 = __n_132 + 18446744073709551615;
      # DEBUG __niter => __n_79
      __first_80 = __first_155 + 4;
      # DEBUG __first => __first_80
      # DEBUG __niter => __n_79
      # DEBUG __first => __first_80
      if (__n_79 == 0)
        goto <bb 36>;
      else
        goto <bb 35>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_34 })
    {
      <bb 35>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.28402 * const thisD.29069, struct iteratorD.28713 __positionD.29070, size_typeD.28721 __nD.29071, const value_typeD.28708 & __xD.29072)
{
  const long unsigned intD.14 D.38194;
  const size_typeD.28721 __lenD.38188;
  size_typeD.28721 D.38193;
  size_typeD.28721 __nD.38186;
  intD.9 * D.38184;
  const ptrdiff_tD.2819 _NumD.38174;
  intD.9 * D.38175;
  intD.9 * const __positionD.37338;
  intD.9 * __firstD.37306;
  const ptrdiff_tD.2819 _NumD.37300;
  const ptrdiff_tD.2819 _NumD.37261;
  intD.9 * __firstD.37189;
  long unsigned intD.14 __nD.37190;
  intD.9 * __firstD.37140;
  const ptrdiff_tD.2819 _NumD.37136;
  intD.9 * __firstD.37089;
  intD.9 * __new_finishD.31384;
  const size_typeD.28721 __elems_afterD.31348;
  value_typeD.28708 __x_copyD.31347;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.30786 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.21_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.26_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#398ptD.0 => MEM[(struct __normal_iteratorD.28714 *)&__positionD.29070]
  # DEBUG __positionD.37338 => D#398ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 55, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 55, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.28714 *)&__positionD.29070];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.29145._M_implD.28636._M_end_of_storageD.28640;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.29145._M_implD.28636._M_finishD.28639;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.31347 => __x_copy_35
  # DEBUG thisD.37084 => this_4(D)
  # DEBUG D#37ptD.0 => &this_4(D)->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG thisD.37086 => NULL
  # DEBUG __iD.37085 => D#37ptD.0
  # DEBUG __lhsD.37081 => &D.31349
  # DEBUG __rhsD.37082 => &__positionD.29070
  # DEBUG thisD.34420 => &D.31349
  # DEBUG thisD.34418 => &__positionD.29070
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.28721) _22;
  # DEBUG __elems_afterD.31348 => __elems_after_37
  # DEBUG __old_finishD.31356 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#309ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37138 => D#309ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.37103 => _41
  # DEBUG __lastD.37104 => __first_7
  # DEBUG __resultD.37105 => __first_7
  # DEBUG __allocD.37106 => D#301ptD.0
  # DEBUG D#300ptD.0 => D#301ptD.0
  # DEBUG D#299ptD.0 => D#300ptD.0
  # DEBUG __firstD.37110 => _41
  # DEBUG __lastD.37109 => __first_7
  # DEBUG __resultD.37108 => __first_7
  # DEBUG D.37107 => D#299ptD.0
  # DEBUG __firstD.37113 => _41
  # DEBUG __lastD.37112 => __first_7
  # DEBUG __resultD.37111 => __first_7
  # DEBUG __assignableD.37116 => 1
  # DEBUG __firstD.37119 => _41
  # DEBUG __lastD.37118 => __first_7
  # DEBUG __resultD.37117 => __first_7
  # DEBUG __firstD.37122 => _41
  # DEBUG __lastD.37121 => __first_7
  # DEBUG __resultD.37120 => __first_7
  # DEBUG __itD.36832 => __first_7
  # DEBUG __itD.35110 => __first_7
  # DEBUG __itD.36830 => _41
  # DEBUG __itD.35110 => _41
  # DEBUG __firstD.37125 => _41
  # DEBUG __lastD.37124 => __first_7
  # DEBUG __resultD.37123 => __first_7
  # DEBUG __itD.36812 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.36810 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.36808 => _41
  # DEBUG __itD.35113 => _41
  # DEBUG __firstD.37128 => _41
  # DEBUG __lastD.37127 => __first_7
  # DEBUG __resultD.37126 => __first_7
  # DEBUG __simpleD.37132 => 1
  # DEBUG __firstD.37135 => _41
  # DEBUG __lastD.37134 => __first_7
  # DEBUG __resultD.37133 => __first_7
  __first.21_49 = (long intD.12) _41;
  _47 = _8 - __first.21_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.37136 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.29145._M_implD.28636._M_finishD.28639;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.29145._M_implD.28636._M_finishD.28639 = _43;
  # DEBUG thisD.37101 => &__positionD.29070
  # DEBUG __firstD.38158 => D#398ptD.0
  # DEBUG __lastD.38159 => _41
  # DEBUG __resultD.38160 => __first_7
  # DEBUG __itD.35498 => _41
  # DEBUG __itD.35110 => _41
  # DEBUG __itD.35496 => D#398ptD.0
  # DEBUG __itD.35110 => D#398ptD.0
  # DEBUG __firstD.38163 => D#398ptD.0
  # DEBUG __lastD.38162 => _41
  # DEBUG __resultD.38161 => __first_7
  # DEBUG __itD.35478 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.35476 => _41
  # DEBUG __itD.35113 => _41
  # DEBUG __itD.35474 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG __firstD.38166 => D#398ptD.0
  # DEBUG __lastD.38165 => _41
  # DEBUG __resultD.38164 => __first_7
  # DEBUG __simpleD.38170 => 1
  # DEBUG __firstD.38173 => D#398ptD.0
  # DEBUG __lastD.38172 => _41
  # DEBUG __resultD.38171 => __first_7
  _104 = __first.21_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.38174 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.37099 => &__positionD.29070
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.37097 => &__positionD.29070
  # DEBUG D#205ptD.0 => &__x_copyD.31347
  # DEBUG __firstD.37089 => D#398ptD.0
  # DEBUG __lastD.37090 => _48
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG __valueD.37092 => D#204ptD.0
  # DEBUG __itD.35123 => _48
  # DEBUG __itD.35113 => _48
  # DEBUG __itD.35121 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __firstD.37095 => D#398ptD.0
  # DEBUG __lastD.37094 => _48
  # DEBUG __valueD.37093 => D#201ptD.0
  # DEBUG __tmpD.37096 => __x_copy_35
  # DEBUG __firstD.37095 => D#398ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.37095 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.37095 => __position_55
  # DEBUG __firstD.37095 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 48, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 48, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#310ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37211 => D#310ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#273ptD.0 => &__x_copyD.31347
  # DEBUG __firstD.37189 => __first_7
  # DEBUG __nD.37190 => __n_50
  # DEBUG D#272ptD.0 => D#273ptD.0
  # DEBUG __xD.37193 => D#272ptD.0
  # DEBUG D.37192 => D#274ptD.0
  # DEBUG D#271ptD.0 => D#272ptD.0
  # DEBUG __firstD.37196 => __first_7
  # DEBUG __nD.37195 => __n_50
  # DEBUG D#270ptD.0 => D#271ptD.0
  # DEBUG __xD.37194 => D#270ptD.0
  # DEBUG __assignableD.37198 => 1
  # DEBUG D#269ptD.0 => D#270ptD.0
  # DEBUG __firstD.37201 => __first_7
  # DEBUG __nD.37200 => __n_50
  # DEBUG D#268ptD.0 => D#269ptD.0
  # DEBUG __xD.37199 => D#268ptD.0
  # DEBUG D#267ptD.0 => D#268ptD.0
  # DEBUG __firstD.37204 => __first_7
  # DEBUG __nD.37203 => __n_50
  # DEBUG D#266ptD.0 => D#267ptD.0
  # DEBUG __valueD.37202 => D#266ptD.0
  # DEBUG __itD.36074 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG D#265ptD.0 => D#266ptD.0
  # DEBUG __firstD.37207 => __first_7
  # DEBUG __nD.37206 => __n_50
  # DEBUG __valueD.37205 => D#265ptD.0
  # DEBUG __tmpD.37208 => __x_copy_35
  # DEBUG __niterD.37209 => __n_50
  # DEBUG __niterD.37209 => __n_50
  # DEBUG __firstD.37207 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.37209 => __n_111
  # DEBUG __firstD.37207 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.37209 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.37207 => __first_64
  # DEBUG __niterD.37209 => __n_63
  # DEBUG __firstD.37207 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 50, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       50 [100.0%]  (FALLTHRU)

;;   basic block 50, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 50, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(50), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.29145._M_implD.28636._M_finishD.28639 = __first_125;
  # DEBUG D#311ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37187 => D#311ptD.0
  # DEBUG thisD.37185 => &__positionD.29070
  # DEBUG __firstD.37150 => D#398ptD.0
  # DEBUG __lastD.37151 => __first_7
  # DEBUG __resultD.37152 => __first_125
  # DEBUG __allocD.37153 => D#301ptD.0
  # DEBUG D#300ptD.0 => D#301ptD.0
  # DEBUG D#299ptD.0 => D#300ptD.0
  # DEBUG __firstD.37157 => D#398ptD.0
  # DEBUG __lastD.37156 => __first_7
  # DEBUG __resultD.37155 => __first_125
  # DEBUG D.37154 => D#299ptD.0
  # DEBUG __firstD.37160 => D#398ptD.0
  # DEBUG __lastD.37159 => __first_7
  # DEBUG __resultD.37158 => __first_125
  # DEBUG __assignableD.37163 => 1
  # DEBUG __firstD.37166 => D#398ptD.0
  # DEBUG __lastD.37165 => __first_7
  # DEBUG __resultD.37164 => __first_125
  # DEBUG __firstD.37169 => D#398ptD.0
  # DEBUG __lastD.37168 => __first_7
  # DEBUG __resultD.37167 => __first_125
  # DEBUG __itD.36832 => __first_7
  # DEBUG __itD.35110 => __first_7
  # DEBUG __itD.36830 => D#398ptD.0
  # DEBUG __itD.35110 => D#398ptD.0
  # DEBUG __firstD.37172 => D#398ptD.0
  # DEBUG __lastD.37171 => __first_7
  # DEBUG __resultD.37170 => __first_125
  # DEBUG __itD.36812 => __first_125
  # DEBUG __itD.35113 => __first_125
  # DEBUG __itD.36810 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.36808 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG __firstD.37175 => D#398ptD.0
  # DEBUG __lastD.37174 => __first_7
  # DEBUG __resultD.37173 => __first_125
  # DEBUG __simpleD.37179 => 1
  # DEBUG __firstD.37182 => D#398ptD.0
  # DEBUG __lastD.37181 => __first_7
  # DEBUG __resultD.37180 => __first_125
  # DEBUG _NumD.37183 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.29145._M_implD.28636._M_finishD.28639;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.29145._M_implD.28636._M_finishD.28639 = _53;
  # DEBUG thisD.37148 => &__positionD.29070
  # DEBUG D#205ptD.0 => &__x_copyD.31347
  # DEBUG __firstD.37140 => D#398ptD.0
  # DEBUG __lastD.37141 => __first_7
  # DEBUG D#204ptD.0 => D#205ptD.0
  # DEBUG __valueD.37143 => D#204ptD.0
  # DEBUG __itD.35123 => __first_7
  # DEBUG __itD.35113 => __first_7
  # DEBUG __itD.35121 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __firstD.37146 => D#398ptD.0
  # DEBUG __lastD.37145 => __first_7
  # DEBUG __valueD.37144 => D#201ptD.0
  # DEBUG __tmpD.37147 => __x_copy_35
  # DEBUG __firstD.37146 => D#398ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.37146 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.37146 => __position_58
  # DEBUG __firstD.37146 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 49, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
;;    succ:       49 [100.0%]  (FALLTHRU)

;;   basic block 49, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 49, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.38185 => this_4(D)
  # DEBUG __nD.38186 => __n_2(D)
  # DEBUG __nD.38186 => __n_2(D)
  # DEBUG __sD.38187 => "vector::_M_fill_insert"
  # DEBUG D#233ptD.0 => this_4(D)
  # DEBUG thisD.35534 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => &D#232ptD.0->D.29145
  # DEBUG thisD.35524 => D#231ptD.0
  # DEBUG __aD.35516 => D#230ptD.0
  # DEBUG D#229ptD.0 => D#230ptD.0
  # DEBUG D#228ptD.0 => D#229ptD.0
  # DEBUG thisD.35507 => D#228ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG thisD.38191 => D#33ptD.0
  # DEBUG thisD.38192 => D#33ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.2834 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG thisD.35552 => D#33ptD.0
  # DEBUG thisD.35551 => D#33ptD.0
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG thisD.35547 => D#33ptD.0
  # DEBUG thisD.35546 => D#33ptD.0
  # DEBUG __aD.38190 => &D.38194
  # DEBUG __bD.38189 => &__nD.38186
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.38188 => __len_124
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG D#33ptD.0 => this_4(D)
  # DEBUG thisD.35539 => D#33ptD.0
  # DEBUG thisD.35538 => D#33ptD.0
  # DEBUG D#233ptD.0 => this_4(D)
  # DEBUG thisD.35554 => D#233ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG D#231ptD.0 => &D#232ptD.0->D.29145
  # DEBUG thisD.35524 => D#231ptD.0
  # DEBUG __aD.35516 => D#230ptD.0
  # DEBUG D#229ptD.0 => D#230ptD.0
  # DEBUG D#228ptD.0 => D#229ptD.0
  # DEBUG thisD.35507 => D#228ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.31380 => NULL
  # DEBUG thisD.37333 => this_4(D)
  # DEBUG D#81ptD.0 => &this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG thisD.37335 => NULL
  # DEBUG __iD.37334 => D#81ptD.0
  # DEBUG __lhsD.37330 => &__positionD.29070
  # DEBUG __rhsD.37331 => &D.31382
  # DEBUG thisD.34420 => &__positionD.29070
  # DEBUG thisD.34418 => &D.31382
  # DEBUG D#322ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.31381 => (const size_typeD.28721) D#322ptD.0
  # DEBUG D#321ptD.0 => &this_4(D)->D.29145
  # DEBUG D#241ptD.0 => D#321ptD.0
  # DEBUG __nD.38176 => NULL
  # DEBUG thisD.38177 => D#241ptD.0
  # DEBUG D#240ptD.0 => D#241ptD.0
  # DEBUG D#239ptD.0 => &D#240ptD.0->_M_implD.28636
  # DEBUG D#238ptD.0 => D#239ptD.0
  # DEBUG __nD.38180 => NULL
  # DEBUG __aD.38179 => D#238ptD.0
  # DEBUG D#237ptD.0 => D#238ptD.0
  # DEBUG D#235ptD.0 => D#237ptD.0
  # DEBUG D#236ptD.0 => 0B
  # DEBUG __nD.38183 => NULL
  # DEBUG thisD.38181 => D#235ptD.0
  # DEBUG D.38182 => D#236ptD.0
  # DEBUG D#234ptD.0 => D#235ptD.0
  # DEBUG D#228ptD.0 => D#234ptD.0
  # DEBUG thisD.35559 => D#228ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.38197 } (escaped heap)
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.29145._M_implD.28636._M_startD.28638;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.29145._M_implD.28636._M_finishD.28639;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 52, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.38197 } (escaped heap)
  # iftmp.26_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.38197 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
;;    succ:       52 [100.0%]  (FALLTHRU)

;;   basic block 52, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.31383 => NULL
  # DEBUG __new_finishD.31384 => NULL
  # DEBUG D#305ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37328 => D#305ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.38197 } (escaped heap)
  __first_20 = iftmp.26_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#273ptD.0 => __x_21(D)
  # DEBUG __firstD.37306 => __first_20
  # DEBUG __nD.37307 => __n_2(D)
  # DEBUG D#272ptD.0 => D#273ptD.0
  # DEBUG __xD.37310 => D#272ptD.0
  # DEBUG D.37309 => D#274ptD.0
  # DEBUG D#271ptD.0 => D#272ptD.0
  # DEBUG __firstD.37313 => __first_20
  # DEBUG __nD.37312 => __n_2(D)
  # DEBUG D#270ptD.0 => D#271ptD.0
  # DEBUG __xD.37311 => D#270ptD.0
  # DEBUG __assignableD.37315 => 1
  # DEBUG D#269ptD.0 => D#270ptD.0
  # DEBUG __firstD.37318 => __first_20
  # DEBUG __nD.37317 => __n_2(D)
  # DEBUG D#268ptD.0 => D#269ptD.0
  # DEBUG __xD.37316 => D#268ptD.0
  # DEBUG D#267ptD.0 => D#268ptD.0
  # DEBUG __firstD.37321 => __first_20
  # DEBUG __nD.37320 => __n_2(D)
  # DEBUG D#266ptD.0 => D#267ptD.0
  # DEBUG __valueD.37319 => D#266ptD.0
  # DEBUG __itD.36074 => __first_20
  # DEBUG __itD.35113 => __first_20
  # DEBUG D#265ptD.0 => D#266ptD.0
  # DEBUG __firstD.37324 => __first_20
  # DEBUG __nD.37323 => __n_2(D)
  # DEBUG __valueD.37322 => D#265ptD.0
  # DEBUG __tmpD.37325 => _56
  # DEBUG __niterD.37326 => __n_2(D)
  # DEBUG __niterD.37326 => __n_2(D)
  # DEBUG __firstD.37324 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 52, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
  # PT = null { D.38197 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(52)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
  # DEBUG __niterD.37326 => __n_132
  # DEBUG __firstD.37324 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.37326 => __n_79
  # PT = null { D.38197 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.37324 => __first_80
  # DEBUG __niterD.37326 => __n_79
  # DEBUG __firstD.37324 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 51, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU)

;;   basic block 51, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.31384 => 0B
  # DEBUG D#306ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37304 => D#306ptD.0
  # DEBUG thisD.37302 => &__positionD.29070
  # DEBUG D#397ptD.0 => this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.37267 => D#397ptD.0
  # DEBUG __lastD.37268 => D#398ptD.0
  # DEBUG __resultD.37269 => NULL
  # DEBUG __allocD.37270 => D#303ptD.0
  # DEBUG D#302ptD.0 => D#303ptD.0
  # DEBUG D#299ptD.0 => D#302ptD.0
  # DEBUG __firstD.37274 => D#397ptD.0
  # DEBUG __lastD.37273 => D#398ptD.0
  # DEBUG __resultD.37272 => NULL
  # DEBUG D.37271 => D#299ptD.0
  # DEBUG __firstD.37277 => D#397ptD.0
  # DEBUG __lastD.37276 => D#398ptD.0
  # DEBUG __resultD.37275 => NULL
  # DEBUG __assignableD.37280 => 1
  # DEBUG __firstD.37283 => D#397ptD.0
  # DEBUG __lastD.37282 => D#398ptD.0
  # DEBUG __resultD.37281 => NULL
  # DEBUG __firstD.37286 => D#397ptD.0
  # DEBUG __lastD.37285 => D#398ptD.0
  # DEBUG __resultD.37284 => NULL
  # DEBUG __itD.36832 => D#398ptD.0
  # DEBUG __itD.35110 => D#398ptD.0
  # DEBUG __itD.36830 => D#397ptD.0
  # DEBUG __itD.35110 => D#397ptD.0
  # DEBUG __firstD.37289 => D#397ptD.0
  # DEBUG __lastD.37288 => D#398ptD.0
  # DEBUG __resultD.37287 => NULL
  # DEBUG __itD.36812 => NULL
  # DEBUG __itD.35113 => NULL
  # DEBUG __itD.36810 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG __itD.36808 => D#397ptD.0
  # DEBUG __itD.35113 => D#397ptD.0
  # DEBUG __firstD.37292 => D#397ptD.0
  # DEBUG __lastD.37291 => D#398ptD.0
  # DEBUG __resultD.37290 => NULL
  # DEBUG __simpleD.37296 => 1
  # DEBUG __firstD.37299 => D#397ptD.0
  # DEBUG __lastD.37298 => D#398ptD.0
  # DEBUG __resultD.37297 => NULL
  # DEBUG D#396ptD.0 => (long intD.12) D#397ptD.0
  # DEBUG D#395ptD.0 => _158 - D#396ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.37300 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 51, next block 38, flags: (NEW)
;;    pred:       51 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       51 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memmoveD.995 (iftmp.26_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#394ptD.0 => (long unsigned intD.14) D#395ptD.0
  # DEBUG __new_finishD.31384 => iftmp.26_113 + D#394ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.38197 } (escaped heap)
  __new_finish_26 = iftmp.26_113 + _133;
  # DEBUG __new_finishD.31384 => __new_finish_26
  # DEBUG D#307ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37265 => D#307ptD.0
  # DEBUG D#393ptD.0 => this_4(D)->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG thisD.37263 => &__positionD.29070
  # DEBUG __firstD.37228 => D#398ptD.0
  # DEBUG __lastD.37229 => D#393ptD.0
  # DEBUG __resultD.37230 => __new_finish_26
  # DEBUG __allocD.37231 => D#303ptD.0
  # DEBUG D#302ptD.0 => D#303ptD.0
  # DEBUG D#299ptD.0 => D#302ptD.0
  # DEBUG __firstD.37235 => D#398ptD.0
  # DEBUG __lastD.37234 => D#393ptD.0
  # DEBUG __resultD.37233 => __new_finish_26
  # DEBUG D.37232 => D#299ptD.0
  # DEBUG __firstD.37238 => D#398ptD.0
  # DEBUG __lastD.37237 => D#393ptD.0
  # DEBUG __resultD.37236 => __new_finish_26
  # DEBUG __assignableD.37241 => 1
  # DEBUG __firstD.37244 => D#398ptD.0
  # DEBUG __lastD.37243 => D#393ptD.0
  # DEBUG __resultD.37242 => __new_finish_26
  # DEBUG __firstD.37247 => D#398ptD.0
  # DEBUG __lastD.37246 => D#393ptD.0
  # DEBUG __resultD.37245 => __new_finish_26
  # DEBUG __itD.36832 => D#393ptD.0
  # DEBUG __itD.35110 => D#393ptD.0
  # DEBUG __itD.36830 => D#398ptD.0
  # DEBUG __itD.35110 => D#398ptD.0
  # DEBUG __firstD.37250 => D#398ptD.0
  # DEBUG __lastD.37249 => D#393ptD.0
  # DEBUG __resultD.37248 => __new_finish_26
  # DEBUG __itD.36812 => __new_finish_26
  # DEBUG __itD.35113 => __new_finish_26
  # DEBUG __itD.36810 => D#393ptD.0
  # DEBUG __itD.35113 => D#393ptD.0
  # DEBUG __itD.36808 => D#398ptD.0
  # DEBUG __itD.35113 => D#398ptD.0
  # DEBUG __firstD.37253 => D#398ptD.0
  # DEBUG __lastD.37252 => D#393ptD.0
  # DEBUG __resultD.37251 => __new_finish_26
  # DEBUG __simpleD.37257 => 1
  # DEBUG __firstD.37260 => D#398ptD.0
  # DEBUG __lastD.37259 => D#393ptD.0
  # DEBUG __resultD.37258 => __new_finish_26
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.37261 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.38197 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.31384 => _70
  # DEBUG D#308ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37226 => D#308ptD.0
  # DEBUG D#320ptD.0 => this_4(D)->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG D#319ptD.0 => this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.37223 => D#319ptD.0
  # DEBUG __lastD.37224 => D#320ptD.0
  # DEBUG D.37225 => NULL
  # DEBUG D#74ptD.0 => D#319ptD.0
  # DEBUG D#75ptD.0 => D#320ptD.0
  # DEBUG __firstD.34389 => D#74ptD.0
  # DEBUG __lastD.34388 => D#75ptD.0
  # DEBUG D#73ptD.0 => D#75ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#71ptD.0 => D#73ptD.0
  # DEBUG D.34378 => D#70ptD.0
  # DEBUG D.34377 => D#71ptD.0
  # DEBUG D#318ptD.0 => this_4(D)->D.29145._M_implD.28636._M_end_of_storageD.28640
  # DEBUG D#317ptD.0 => (long intD.12) D#318ptD.0
  # DEBUG D#316ptD.0 => (long intD.12) D#397ptD.0
  # DEBUG D#315ptD.0 => D#317ptD.0 - D#316ptD.0
  # DEBUG D#314ptD.0 => D#315ptD.0 /[ex] 4
  # DEBUG D#313ptD.0 => (long unsigned intD.14) D#314ptD.0
  # DEBUG D#312ptD.0 => &this_4(D)->D.29145
  # DEBUG thisD.37213 => D#312ptD.0
  # DEBUG __pD.37214 => D#397ptD.0
  # DEBUG __nD.37215 => D#313ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#182ptD.0 => &D#312ptD.0->_M_implD.28636
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#181ptD.0 => D#313ptD.0
  # DEBUG __pD.37219 => D#397ptD.0
  # DEBUG __aD.37217 => D#180ptD.0
  # DEBUG __nD.37218 => D#181ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG D#176ptD.0 => D#178ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG __pD.37222 => D#397ptD.0
  # DEBUG thisD.37220 => D#176ptD.0
  # DEBUG D.37221 => D#177ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.38197 } (escaped heap)
  # CLB = nonlocal null { D.38197 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 53, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
;;    succ:       53 [100.0%]  (FALLTHRU)

;;   basic block 53, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.29145._M_implD.28636._M_startD.28638 = iftmp.26_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.29145._M_implD.28636._M_finishD.28639 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.29145._M_implD.28636._M_end_of_storageD.28640 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 53, next block 54, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>
;;    succ:       54 [100.0%]  (FALLTHRU)

;;   basic block 54, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 54, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.31380 => NULL
  # DEBUG thisD.37333 => this_4(D)
  # DEBUG D#81ptD.0 => &this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG thisD.37335 => NULL
  # DEBUG __iD.37334 => D#81ptD.0
  # DEBUG __lhsD.37330 => &__positionD.29070
  # DEBUG __rhsD.37331 => &D.31382
  # DEBUG thisD.34420 => &__positionD.29070
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.34418 => &D.31382
  _143 = _144 - _116;
  # DEBUG D#322ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.31381 => (const size_typeD.28721) D#322ptD.0
  # DEBUG D#321ptD.0 => &this_4(D)->D.29145
  # DEBUG D#241ptD.0 => D#321ptD.0
  # DEBUG __nD.38176 => NULL
  # DEBUG thisD.38177 => D#241ptD.0
  # DEBUG D#240ptD.0 => D#241ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.31380 => NULL
  # DEBUG thisD.37333 => this_4(D)
  # DEBUG D#81ptD.0 => &this_4(D)->D.29145._M_implD.28636._M_startD.28638
  # DEBUG thisD.37335 => NULL
  # DEBUG __iD.37334 => D#81ptD.0
  # DEBUG __lhsD.37330 => &__positionD.29070
  # DEBUG __rhsD.37331 => &D.31382
  # DEBUG thisD.34420 => &__positionD.29070
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.34418 => &D.31382
  _150 = _151 - _116;
  # DEBUG D#322ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.31381 => (const size_typeD.28721) D#322ptD.0
  # DEBUG D#321ptD.0 => &this_4(D)->D.29145
  # DEBUG D#241ptD.0 => D#321ptD.0
  # DEBUG __nD.38176 => NULL
  # DEBUG thisD.38177 => D#241ptD.0
  # DEBUG D#240ptD.0 => D#241ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function TreeArbiter::TreeArbiter(Module*, const string&, int, int, const string&) (_ZN11TreeArbiterC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS9_, funcdef_no=1399, decl_uid=29180, cgraph_uid=378, symbol_order=379)


Pass statistics:
----------------


Global statistics (BBS:104, LOOPS:1, CONDITIONS:41, STMTS:1169)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

TreeArbiter::TreeArbiter(Module*, const string&, int, int, const string&) (struct TreeArbiterD.27650 * const thisD.29181, struct ModuleD.26017 * parentD.29182, const struct stringD.8426 & nameD.29183, intD.9 sizeD.29184, intD.9 groupsD.29185, const struct stringD.8426 & arb_typeD.29186)
Eh tree:
   1 cleanup land:{1,<L12>}
     2 cleanup land:{2,<L11>}
       3 cleanup land:{28,<L34>},{27,<L32>},{18,<L23>},{16,<L20>},{15,<L19>},{3,<L35>}
         20 must_not_throw
         17 cleanup land:{17,<L21>},{9,<L22>}
           18 cleanup land:{10,<L14>}
             19 cleanup land:{11,<L13>}
         11 cleanup land:{8,<L8>}
         8 must_not_throw
         5 cleanup land:{26,<L31>},{20,<L25>},{19,<L24>},{5,<L33>}
           21 cleanup land:{29,<L36>},{25,<L30>},{24,<L29>},{23,<L28>},{22,<L27>},{21,<L26>},{12,<L37>}
             23 cleanup land:{14,<L16>}
             22 cleanup land:{13,<L17>}
           6 cleanup land:{6,<L5>}
{
  size_typeD.13799 __dnewD.38587;
  size_typeD.13799 __dnewD.38521;
  size_typeD.13799 __dnewD.38492;
  struct __string_typeD.29616 D.38485;
  struct __string_typeD.29616 D.38484;
  struct iteratorD.28713 __positionD.38302;
  value_typeD.28708 __xD.38297;
  struct iteratorD.27965 __positionD.38291;
  struct ArbiterD.26830 * __xD.38286;
  struct ostringstreamD.9745 group_arb_nameD.30371;
  intD.9 iD.30369;
  const struct stringD.8426 D.30373;
  struct __string_typeD.29786 D.30372;
  static const charD.10 _ZZN11TreeArbiterC4EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS9_E19__PRETTY_FUNCTION__D.30311[74] = "TreeArbiter::TreeArbiter(Module*, const string&, int, int, const string&)";
  static const charD.10 _ZZN11TreeArbiterC4EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS9_E19__PRETTY_FUNCTION__D.30311[74] = "TreeArbiter::TreeArbiter(Module*, const string&, int, int, const string&)";
  struct ArbiterD.26830 * _6;
  intD.9 _14;
  long unsigned intD.14 _15;
  struct vectorD.27654 * _16;
  intD.9 * const _17;
  struct vectorD.28402 * _18;
  intD.9 _20;
  charD.10 * const _22;
  long unsigned intD.14 _24;
  struct ArbiterD.26830 * & _25;
  intD.9 _26;
  const voidD.45 * prephitmp_27;
  struct ArbiterD.26830 * _30;
  charD.10 * const _33;
  charD.10 * const _36;
  long unsigned intD.14 _40;
  struct ArbiterD.26830 * _44;
  charD.10 * const _46;
  charD.10 * const _48;
  intD.9 * _51;
  struct ArbiterD.26830 * * _52;
  struct ArbiterD.26830 * * _56;
  charD.10 * const _57;
  charD.10 * const pretmp_76;
  charD.10 * const prephitmp_77;
  size_typeD.13799 pretmp_78;
  size_typeD.13799 prephitmp_79;
  const voidD.45 * prephitmp_86;
  size_typeD.13799 pretmp_88;
  size_typeD.13799 prephitmp_89;
  const voidD.45 * pretmp_104;
  boolD.2757 _105;
  const voidD.45 * pretmp_106;
  boolD.2757 _107;
  intD.9 * const _112;
  long intD.12 _113;
  long intD.12 _114;
  long intD.12 _115;
  long intD.12 _116;
  size_typeD.28721 _117;
  long unsigned intD.14 _118;
  long unsigned intD.14 _119;
  intD.9 * _120;
  long intD.12 _123;
  sizetype iftmp.35_124;
  struct basic_iosD.9730 * _125;
  intD.9 * const _130;
  long intD.12 _135;
  sizetype iftmp.41_136;
  struct basic_iosD.9730 * _137;
  char_typeD.18837 * const _141;
  char_typeD.18837 * const _142;
  char_typeD.18837 * const _143;
  charD.10 * const _144;
  char_typeD.18837 * const _145;
  charD.10 * const _146;
  charD.10 * const _148;
  charD.10 * const _149;
  charD.10 * const _150;
  long intD.12 __last.52_151;
  long intD.12 __first.53_152;
  difference_typeD.31707 _153;
  long unsigned intD.14 __dnew.49_154;
  charD.10 * _155;
  long unsigned intD.14 __dnew.50_156;
  const char_typeD.9490 _158;
  charD.10 * _161;
  long intD.12 __last.52_163;
  long intD.12 __first.53_164;
  difference_typeD.31707 _165;
  long unsigned intD.14 __dnew.49_166;
  charD.10 * _167;
  long unsigned intD.14 __dnew.50_168;
  const char_typeD.9490 _170;
  charD.10 * _173;
  charD.10 * const _174;
  charD.10 * const _175;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.40_176;
  long intD.12 _177;
  sizetype iftmp.41_178;
  struct basic_iosD.9730 * _179;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.42_180;
  size_typeD.28721 _183;
  const voidD.45 * prephitmp_189;
  boolD.2757 _194;
  const voidD.45 * prephitmp_214;
  charD.10 * const pretmp_272;
  charD.10 * const prephitmp_273;

;;   basic block 2, loop depth 0, count 0, freq 204, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _6 = &this_5(D)->D.29196;
  # .MEM_11 = VDEF <.MEM_7(D)>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZN7ArbiterC2EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiD.27634 (_6, parent_8(D), name_9(D), size_10(D));
  # .MEM_12 = VDEF <.MEM_11>
  this_5(D)->D.29196.D.27639._vptr.ModuleD.26812 = &MEM[(voidD.45 *)&_ZTV11TreeArbiterD.29202 + 16B];
  # DEBUG D#327ptD.0 => &this_5(D)->_group_arbitersD.28399
  # DEBUG thisD.37379 => D#327ptD.0
  # DEBUG D#155ptD.0 => &D#327ptD.0->D.28397
  # DEBUG thisD.37380 => D#155ptD.0
  # DEBUG D#154ptD.0 => &D#155ptD.0->_M_implD.27888
  # DEBUG thisD.37381 => D#154ptD.0
  # DEBUG thisD.34837 => D#154ptD.0
  # DEBUG thisD.34835 => D#154ptD.0
  # .MEM_62 = VDEF <.MEM_12>
  MEM[(struct _Vector_implD.27865 *)this_5(D) + 144B]._M_startD.27890 = 0B;
  # .MEM_63 = VDEF <.MEM_62>
  MEM[(struct _Vector_implD.27865 *)this_5(D) + 144B]._M_finishD.27891 = 0B;
  # .MEM_64 = VDEF <.MEM_63>
  MEM[(struct _Vector_implD.27865 *)this_5(D) + 144B]._M_end_of_storageD.27892 = 0B;
  # DEBUG D#326ptD.0 => &this_5(D)->_group_reqsD.29147
  # DEBUG thisD.37376 => D#326ptD.0
  # DEBUG D#175ptD.0 => &D#326ptD.0->D.29145
  # DEBUG thisD.37377 => D#175ptD.0
  # DEBUG D#174ptD.0 => &D#175ptD.0->_M_implD.28636
  # DEBUG thisD.37378 => D#174ptD.0
  # DEBUG thisD.34912 => D#174ptD.0
  # DEBUG thisD.34910 => D#174ptD.0
  # .MEM_65 = VDEF <.MEM_64>
  MEM[(struct _Vector_implD.28613 *)this_5(D) + 176B]._M_startD.28638 = 0B;
  # .MEM_66 = VDEF <.MEM_65>
  MEM[(struct _Vector_implD.28613 *)this_5(D) + 176B]._M_finishD.28639 = 0B;
  # .MEM_67 = VDEF <.MEM_66>
  MEM[(struct _Vector_implD.28613 *)this_5(D) + 176B]._M_end_of_storageD.28640 = 0B;
  _14 = size_10(D) % groups_13(D);
  if (_14 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_55 = VDEF <.MEM_67>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  __assert_failD.16699 ("size % groups == 0", "arbiters/tree_arb.cpp", 43, &_ZZN11TreeArbiterC4EP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiiS9_E19__PRETTY_FUNCTION__D.30311);
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 204, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[2147483648, 18446744071562067967]
  _15 = (long unsigned intD.14) groups_13(D);
  # DEBUG D#465ptD.0 => &this_5(D)->_group_arbitersD.28399
  # DEBUG thisD.38284 => D#465ptD.0
  # DEBUG __new_sizeD.38285 => _15
  # .MEM_215 = VDEF <.MEM_67>
  __xD.38286 = 0B;
  # DEBUG __xD.38286 => __xD.38286
  # DEBUG D#14ptD.0 => D#465ptD.0
  # DEBUG D#14ptD.0 => D#465ptD.0
  # DEBUG thisD.38293 => D#14ptD.0
  # DEBUG thisD.38294 => D#14ptD.0
  if (_15 != 0)
    goto <bb 5>;
  else
    goto <bb 103>;
;;    succ:       5 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                103 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#14ptD.0 => D#465ptD.0
  # DEBUG D#14ptD.0 => D#465ptD.0
  # DEBUG thisD.36776 => D#14ptD.0
  # DEBUG thisD.36775 => D#14ptD.0
  # DEBUG thisD.36769 => D#465ptD.0
  # DEBUG D#36ptD.0 => &D#465ptD.0->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG thisD.36771 => NULL
  # DEBUG __iD.36770 => D#36ptD.0
  # DEBUG thisD.38292 => D#465ptD.0
  # .MEM_217 = VDEF <.MEM_215>
  MEM[(struct __normal_iteratorD.27966 *)&__positionD.38291] = 0B;
  # DEBUG __nD.38290 => _15
  # DEBUG __xD.38289 => &__xD.38286
  # PT = nonlocal 
  _16 = &this_5(D)->_group_arbitersD.28399;
  [LP 15] # .MEM_218 = VDEF <.MEM_217>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt6vectorIP7ArbiterSaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_D.28320 (_16, __positionD.38291, _15, &__xD.38286);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                89 (EH,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _18 = &this_5(D)->_group_reqsD.29147;
  # DEBUG thisD.38295 => _18
  # DEBUG __new_sizeD.38296 => _15
  # .MEM_219 = VDEF <.MEM_218>
  __xD.38297 = 0;
  # DEBUG __xD.38297 => __xD.38297
  # VUSE <.MEM_219>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_5(D) + 176B];
  # DEBUG D#33ptD.0 => _18
  # VUSE <.MEM_219>
  # PT = nonlocal escaped 
  _112 = MEM[(intD.9 * *)this_5(D) + 184B];
  # DEBUG D#33ptD.0 => _18
  # DEBUG thisD.38304 => D#33ptD.0
  # DEBUG thisD.38305 => D#33ptD.0
  _113 = (long intD.12) _112;
  _114 = (long intD.12) _17;
  _115 = _113 - _114;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _116 = _115 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _117 = (size_typeD.28721) _116;
  if (_15 > _117)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#33ptD.0 => _18
  # DEBUG D#33ptD.0 => _18
  # DEBUG thisD.37363 => D#33ptD.0
  # DEBUG thisD.37362 => D#33ptD.0
  # RANGE [1, 18446744073709551615]
  _118 = _15 - _117;
  # DEBUG thisD.37356 => _18
  # DEBUG D#37ptD.0 => &_18->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG thisD.37358 => NULL
  # DEBUG __iD.37357 => D#37ptD.0
  # DEBUG thisD.38303 => _18
  # .MEM_221 = VDEF <.MEM_219>
  MEM[(struct __normal_iteratorD.28714 *)&__positionD.38302] = _112;
  # DEBUG __nD.38301 => _118
  # DEBUG __xD.38300 => &__xD.38297
  [LP 16] # .MEM_222 = VDEF <.MEM_221>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.29068 (_18, __positionD.38302, _118, &__xD.38297);
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 (EH,EXECUTABLE)
<L20>: [LP 16]
  goto <bb 90> (<L10>);
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 105, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_348 = PHI <.MEM_222(7), .MEM_132(10)>
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 161, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       6 (FALSE_VALUE,EXECUTABLE)
;;                103 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _130 = PHI <_17(6), 0B(103)>
  # RANGE ~[2305843009213693952, 16140901064495857663]
  # _183 = PHI <_117(6), 0(103)>
  # .MEM_132 = PHI <.MEM_219(6), .MEM_190(103)>
  # DEBUG thisD.38295 => NULL
  # DEBUG __new_sizeD.38296 => _15
  # DEBUG __xD.38297 => __xD.38297
  # DEBUG thisD.38304 => D#33ptD.0
  # DEBUG thisD.38305 => D#33ptD.0
  # DEBUG thisD.37368 => D#33ptD.0
  # DEBUG thisD.37367 => D#33ptD.0
  if (_15 < _183)
    goto <bb 11>;
  else
    goto <bb 9>;
;;    succ:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _119 = _15 * 4;
  # PT = nonlocal escaped 
  _120 = _130 + _119;
  # DEBUG __posD.38299 => _120
  # DEBUG D#78ptD.0 => D#79ptD.0
  # DEBUG thisD.38298 => D#78ptD.0
  # DEBUG D#76ptD.0 => &D#78ptD.0->D.29145
  # DEBUG thisD.34402 => D#76ptD.0
  # DEBUG D#77ptD.0 => D#78ptD.0->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG __firstD.34392 => _120
  # DEBUG __lastD.34393 => D#77ptD.0
  # DEBUG D.34394 => NULL
  # DEBUG D#74ptD.0 => _120
  # DEBUG D#75ptD.0 => D#77ptD.0
  # DEBUG __firstD.34389 => D#74ptD.0
  # DEBUG __lastD.34388 => D#75ptD.0
  # DEBUG D#73ptD.0 => D#75ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#71ptD.0 => D#73ptD.0
  # DEBUG D.34378 => D#70ptD.0
  # DEBUG D.34377 => D#71ptD.0
  # .MEM_220 = VDEF <.MEM_132>
  MEM[(intD.9 * *)this_5(D) + 184B] = _120;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 204, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_188 = PHI <.MEM_220(11), .MEM_348(9)>
  _20 = size_10(D) / groups_13(D);
  # .MEM_21 = VDEF <.MEM_188>
  this_5(D)->_group_sizeD.27652 = _20;
  # DEBUG iD.30369 => 0
  # DEBUG iD.30369 => 0
  if (groups_13(D) <= 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 200, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                73 [2.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_344 = PHI <.MEM_21(12), .MEM_34(73)>
  # DEBUG D#35ptD.0 => &D.30374
  # DEBUG thisD.37406 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG thisD.34210 => D#34ptD.0
  # DEBUG D#213ptD.0 => &D.30374
  # DEBUG thisD.38568 => &D.30373
  # DEBUG __sD.38570 => "global_arb"
  # DEBUG __aD.38569 => D#213ptD.0
  # DEBUG D#212ptD.0 => D#213ptD.0
  # DEBUG thisD.38580 => &D.30373
  # DEBUG D#210ptD.0 => &D.30373._M_dataplusD.13816
  # DEBUG D#87ptD.0 => D#212ptD.0
  # DEBUG thisD.38583 => D#210ptD.0
  # DEBUG __datD.38582 => &D.30373.D.13836._M_local_bufD.13838
  # DEBUG __aD.38581 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0
  # DEBUG D#84ptD.0 => D#210ptD.0
  # DEBUG D#85ptD.0 => D#86ptD.0
  # DEBUG thisD.34446 => D#84ptD.0
  # DEBUG __aD.34447 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG thisD.34428 => D#82ptD.0
  # DEBUG D.34429 => D#83ptD.0
  # .MEM_339 = VDEF <.MEM_344>
  MEM[(struct _Alloc_hiderD.13815 *)&D.30373]._M_pD.13822 = &D.30373.D.13836._M_local_bufD.13838;
  # DEBUG __sD.38579 => "global_arb"
  # DEBUG thisD.38573 => &D.30373
  # DEBUG __begD.38572 => "global_arb"
  # DEBUG __endD.38571 => &MEM[(voidD.45 *)"global_arb" + 10B]
  # DEBUG thisD.38577 => &D.30373
  # DEBUG __begD.38576 => "global_arb"
  # DEBUG __endD.38575 => &MEM[(voidD.45 *)"global_arb" + 10B]
  # DEBUG thisD.38584 => &D.30373
  # DEBUG __begD.38585 => "global_arb"
  # DEBUG __endD.38586 => &MEM[(voidD.45 *)"global_arb" + 10B]
  # DEBUG __ptrD.35697 => "global_arb"
  # DEBUG __firstD.38610 => "global_arb"
  # DEBUG __lastD.38609 => &MEM[(voidD.45 *)"global_arb" + 10B]
  # DEBUG D#242ptD.0 => &__firstD.38610
  # DEBUG D.35626 => D#242ptD.0
  # DEBUG __firstD.38612 => "global_arb"
  # DEBUG __lastD.38611 => &MEM[(voidD.45 *)"global_arb" + 10B]
  # DEBUG __dnewD.38587 => 10
  # DEBUG D#5ptD.0 => &D.30373
  # DEBUG thisD.35671 => D#5ptD.0
  # DEBUG __pD.38590 => &D.30373.D.13836._M_local_bufD.13838
  # DEBUG __k1D.38589 => "global_arb"
  # DEBUG __k2D.38588 => &MEM[(voidD.45 *)"global_arb" + 10B]
  # DEBUG __dD.38593 => &D.30373.D.13836._M_local_bufD.13838
  # DEBUG __sD.38592 => "global_arb"
  # DEBUG __nD.38591 => 10
  # DEBUG __s1D.38596 => &D.30373.D.13836._M_local_bufD.13838
  # DEBUG __s2D.38595 => "global_arb"
  # DEBUG __nD.38594 => 10
  # .MEM_345 = VDEF <.MEM_339>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  memcpyD.992 (&D.30373.D.13836._M_local_bufD.13838, "global_arb", 10);
  # DEBUG thisD.38600 => &D.30373
  # DEBUG __nD.38599 => 10
  # DEBUG D#6ptD.0 => &D.30373
  # DEBUG __lengthD.38602 => 10
  # DEBUG thisD.38601 => D#6ptD.0
  # .MEM_346 = VDEF <.MEM_345>
  MEM[(size_typeD.13799 *)&D.30373 + 8B] = 10;
  # DEBUG D#5ptD.0 => &D.30373
  # DEBUG thisD.33971 => D#5ptD.0
  # DEBUG __c1D.38604 => &MEM[(voidD.45 *)&D.30373 + 26B]
  # DEBUG __c2D.38603 => D#9ptD.0
  # .MEM_347 = VDEF <.MEM_346>
  MEM[(char_typeD.9490 &)&D.30373 + 26] = 0;
  # DEBUG D#461ptD.0 => {CLOBBER}
  # DEBUG __dnewD.38587 => D#461ptD.0
  [LP 8] # .MEM_43 = VDEF <.MEM_347>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _44 = _ZN7Arbiter10NewArbiterEP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_iD.27616 (_6, &D.30373, arb_type_28(D), groups_13(D));
  goto <bb 75>;
;;    succ:       85 (EH,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 200, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_21>
  pretmp_104 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29855 + 8B];
  # VUSE <.MEM_21>
  pretmp_106 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29855 + 16B];
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9800, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_204 = PHI <0(14), i_35(74)>
  # .MEM_201 = PHI <.MEM_21(14), .MEM_34(74)>
  # PT = nonlocal escaped 
  # prephitmp_27 = PHI <pretmp_104(14), iftmp.40_176(74)>
  # PT = nonlocal escaped 
  # prephitmp_86 = PHI <pretmp_106(14), iftmp.42_180(74)>
  # DEBUG iD.30369 => i_204
  # DEBUG thisD.38306 => &group_arb_nameD.30371
  # DEBUG __modeD.38307 => 16
  # DEBUG D#106ptD.0 => &group_arb_nameD.30371.D.29849
  # DEBUG thisD.38327 => D#106ptD.0
  # .MEM_223 = VDEF <.MEM_201>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt8ios_baseC2EvD.18313 (&MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B].D.23348);
  # .MEM_224 = VDEF <.MEM_223>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B].D.23348._vptr.ios_baseD.18324 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.23357 + 16B];
  # .MEM_225 = VDEF <.MEM_224>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B]._M_tieD.23252 = 0B;
  # .MEM_226 = VDEF <.MEM_225>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B]._M_fillD.23253 = 0;
  # .MEM_227 = VDEF <.MEM_226>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B]._M_fill_initD.23254 = 0;
  # .MEM_228 = VDEF <.MEM_227>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B]._M_streambufD.23255 = 0B;
  # .MEM_229 = VDEF <.MEM_228>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B]._M_ctypeD.23256 = 0B;
  # .MEM_230 = VDEF <.MEM_229>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B]._M_num_putD.23257 = 0B;
  # .MEM_231 = VDEF <.MEM_230>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B]._M_num_getD.23258 = 0B;
  # DEBUG thisD.38329 => &group_arb_nameD.30371.D.29846
  # DEBUG __vtt_parmD.38328 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29855 + 8B]
  # .MEM_232 = VDEF <.MEM_231>
  MEM[(struct basic_ostreamD.9736 *)&group_arb_nameD.30371]._vptr.basic_ostreamD.24032 = prephitmp_27;
  # VUSE <.MEM_232>
  _123 = MEM[(long intD.12 *)prephitmp_27 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.35_124 = (sizetype) _123;
  # PT = { D.30371 } (escaped)
  _125 = &group_arb_nameD.30371.D.29846 + iftmp.35_124;
  # .MEM_233 = VDEF <.MEM_232>
  _125->D.23348._vptr.ios_baseD.18324 = prephitmp_86;
  [LP 17] # .MEM_234 = VDEF <.MEM_233>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.23323 (_125, 0B);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 (EH,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 9800, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_235 = VDEF <.MEM_234>
  group_arb_nameD.30371.D.29846._vptr.basic_ostreamD.24032 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29850 + 24B];
  # .MEM_236 = VDEF <.MEM_235>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B].D.23348._vptr.ios_baseD.18324 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29850 + 64B];
  # DEBUG __aD.38312 => 16
  # DEBUG __bD.38311 => 16
  # DEBUG D#104ptD.0 => &group_arb_nameD.30371._M_stringbufD.29789
  # DEBUG thisD.38314 => D#104ptD.0
  # DEBUG __modeD.38313 => NULL
  # DEBUG D#90ptD.0 => &MEM[(struct basic_stringbufD.9740 *)D#104ptD.0].D.29696
  # DEBUG thisD.38315 => D#90ptD.0
  # .MEM_237 = VDEF <.MEM_236>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._vptr.basic_streambufD.19120 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.19129 + 16B];
  # .MEM_238 = VDEF <.MEM_237>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_in_begD.18966 = 0B;
  # .MEM_239 = VDEF <.MEM_238>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_in_curD.18967 = 0B;
  # .MEM_240 = VDEF <.MEM_239>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_in_endD.18968 = 0B;
  # .MEM_241 = VDEF <.MEM_240>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_out_begD.18969 = 0B;
  # .MEM_242 = VDEF <.MEM_241>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_out_curD.18970 = 0B;
  # .MEM_243 = VDEF <.MEM_242>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_out_endD.18971 = 0B;
  # .MEM_244 = VDEF <.MEM_243>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt6localeC1EvD.16855 (&MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_buf_localeD.18972);
  # .MEM_245 = VDEF <.MEM_244>
  MEM[(struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696._vptr.basic_streambufD.19120 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEED.29700 + 16B];
  # .MEM_246 = VDEF <.MEM_245>
  MEM[(struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B]._M_modeD.29618 = 16;
  # DEBUG D#89ptD.0 => &MEM[(struct basic_stringbufD.9740 *)D#104ptD.0]._M_stringD.29619
  # DEBUG thisD.38316 => D#89ptD.0
  # DEBUG thisD.34466 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG thisD.34210 => D#34ptD.0
  # DEBUG thisD.38317 => D#89ptD.0
  # DEBUG D#88ptD.0 => &MEM[(struct basic_stringD.8425 *)D#89ptD.0]._M_dataplusD.13816
  # DEBUG thisD.38320 => D#88ptD.0
  # DEBUG __datD.38319 => &MEM[(struct basic_stringD.8425 *)&group_arb_nameD.30371 + 80B].D.13836._M_local_bufD.13838
  # DEBUG __aD.38318 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0
  # DEBUG D#84ptD.0 => D#88ptD.0
  # DEBUG D#85ptD.0 => D#86ptD.0
  # DEBUG thisD.34446 => D#84ptD.0
  # DEBUG __aD.34447 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG thisD.34428 => D#82ptD.0
  # DEBUG D.34429 => D#83ptD.0
  # .MEM_247 = VDEF <.MEM_246>
  MEM[(struct _Alloc_hiderD.13815 *)&group_arb_nameD.30371 + 80B]._M_pD.13822 = &MEM[(struct basic_stringD.8425 *)&group_arb_nameD.30371 + 80B].D.13836._M_local_bufD.13838;
  # DEBUG thisD.34471 => NULL
  # DEBUG thisD.34457 => NULL
  # DEBUG thisD.38322 => D#89ptD.0
  # DEBUG __nD.38321 => 0
  # DEBUG D#6ptD.0 => D#89ptD.0
  # DEBUG __lengthD.38324 => 0
  # DEBUG thisD.38323 => D#6ptD.0
  # .MEM_248 = VDEF <.MEM_247>
  MEM[(size_typeD.13799 *)&group_arb_nameD.30371 + 88B] = 0;
  # DEBUG D#5ptD.0 => D#89ptD.0
  # DEBUG thisD.33971 => D#5ptD.0
  # DEBUG __c1D.38326 => &MEM[(struct basic_stringD.8425 *)&group_arb_nameD.30371 + 80B].D.13836._M_local_bufD.13838
  # DEBUG __c2D.38325 => D#9ptD.0
  # .MEM_249 = VDEF <.MEM_248>
  MEM[(char_typeD.9490 &)&group_arb_nameD.30371 + 96] = 0;
  [LP 11] # .MEM_250 = VDEF <.MEM_249>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.23323 (&MEM[(voidD.45 *)&group_arb_nameD.30371 + 112B], &group_arb_nameD.30371._M_stringbufD.29789.D.29696);
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # prephitmp_189 = PHI <prephitmp_27(16)>
  # PT = nonlocal escaped 
  # prephitmp_214 = PHI <prephitmp_86(16)>
<L13>: [LP 11]
  # DEBUG thisD.38333 => &group_arb_nameD.30371._M_stringbufD.29789
  # .MEM_323 = VDEF <.MEM_250>
  MEM[(struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696._vptr.basic_streambufD.19120 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEED.29700 + 16B];
  # DEBUG D#103ptD.0 => &MEM[(struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B]._M_stringD.29619
  # DEBUG thisD.38334 => D#103ptD.0
  # DEBUG thisD.38335 => D#103ptD.0
  # DEBUG thisD.38344 => D#103ptD.0
  # VUSE <.MEM_323>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 } (nonlocal, escaped)
  _22 = MEM[(charD.10 * *)&group_arb_nameD.30371 + 80B];
  # DEBUG D#5ptD.0 => D#103ptD.0
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.38345 => D#103ptD.0
  if (&MEM[(const struct basic_stringD.8425 *)&group_arb_nameD.30371 + 80B].D.13836._M_local_bufD.13838 != _22)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => MEM[(struct basic_stringD.8425 *)D#103ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.38337 => D#103ptD.0
  # DEBUG __sizeD.38336 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => D#103ptD.0
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => D#103ptD.0
  # DEBUG D#97ptD.0 => &MEM[(struct basic_stringD.8425 *)D#103ptD.0]._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.38340 => _22
  # DEBUG __aD.38338 => D#95ptD.0
  # DEBUG __nD.38339 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.38343 => _22
  # DEBUG thisD.38341 => D#91ptD.0
  # DEBUG D.38342 => D#92ptD.0
  # .MEM_324 = VDEF <.MEM_323>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_187 = PHI <.MEM_323(17), .MEM_324(18)>
  # DEBUG D#101ptD.0 => &MEM[(struct basic_stringD.8425 *)D#103ptD.0]._M_dataplusD.13816
  # DEBUG thisD.38346 => D#101ptD.0
  # DEBUG thisD.38347 => D#101ptD.0
  # DEBUG thisD.38348 => D#101ptD.0
  # .MEM_328 = VDEF <.MEM_187>
  MEM[(struct  &)&group_arb_nameD.30371 + 80] ={v} {CLOBBER};
  # DEBUG D#102ptD.0 => &MEM[(struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # DEBUG thisD.38349 => D#102ptD.0
  # .MEM_329 = VDEF <.MEM_328>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._vptr.basic_streambufD.19120 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.19129 + 16B];
  # .MEM_330 = VDEF <.MEM_329>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt6localeD1EvD.16859 (&MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_buf_localeD.18972);
  # .MEM_332 = VDEF <.MEM_330>
  MEM[(struct  &)&group_arb_nameD.30371 + 8] ={v} {CLOBBER};
  [LP 10] resx 19
;;    succ:       20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 (EH,EXECUTABLE)
<L14>: [LP 10]
  # DEBUG thisD.38310 => &group_arb_nameD.30371.D.29846
  # DEBUG __vtt_parmD.38309 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29855 + 8B]
  # VUSE <.MEM_332>
  _135 = MEM[(long intD.12 *)prephitmp_189 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.41_136 = (sizetype) _135;
  # PT = { D.30371 } (escaped)
  _137 = &group_arb_nameD.30371.D.29846 + iftmp.41_136;
  # .MEM_334 = VDEF <.MEM_332>
  _137->D.23348._vptr.ios_baseD.18324 = prephitmp_214;
  # .MEM_335 = VDEF <.MEM_334>
  MEM[(struct  &)&group_arb_nameD.30371] ={v} {CLOBBER};
  [LP 9] resx 18
;;    succ:       21 (EH,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 (EH,EXECUTABLE)
<L22>: [LP 9]
  goto <bb 23> (<L15>);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       15 (EH,EXECUTABLE)
<L21>: [LP 17]
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_200 = PHI <.MEM_234(22), .MEM_335(21)>
<L15>:
  # DEBUG D#105ptD.0 => &group_arb_nameD.30371.D.29849
  # DEBUG thisD.38308 => D#105ptD.0
  # .MEM_336 = VDEF <.MEM_200>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B].D.23348._vptr.ios_baseD.18324 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.23357 + 16B];
  [MNT 20] # .MEM_337 = VDEF <.MEM_336>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.18321 (&MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B].D.23348);
  [LP 18] resx 17
;;    succ:       24 (EH,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 (EH,EXECUTABLE)
<L23>: [LP 18]
  goto <bb 90> (<L10>);
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9800, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.37382 => &group_arb_nameD.30371.D.29846
  # DEBUG __sD.37383 => "group_arb"
  # DEBUG __sD.37384 => "group_arb"
  [LP 19] # .MEM_68 = VDEF <.MEM_250>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.10199 (&group_arb_nameD.30371.D.29846, "group_arb", 9);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                82 (EH,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 9800, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 20] # .MEM_23 = VDEF <.MEM_68>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSolsEiD.23940 (&group_arb_nameD.30371.D.29846, i_204);
  goto <bb 28>;
;;    succ:       27 (EH,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       26 (EH,EXECUTABLE)
<L25>: [LP 20]
  goto <bb 83> (<L6>);
;;    succ:       83 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 9800, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _24 = (long unsigned intD.14) i_204;
  # DEBUG D#323ptD.0 => &this_5(D)->_group_arbitersD.28399
  # VUSE <.MEM_23>
  # PT = nonlocal escaped 
  _56 = MEM[(struct ArbiterD.26830 * * *)this_5(D) + 144B];
  # DEBUG D#13ptD.0 => D#323ptD.0
  # DEBUG __nD.37388 => _24
  # DEBUG thisD.37389 => D#13ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _40 = _24 * 8;
  # PT = nonlocal escaped 
  _25 = _56 + _40;
  # VUSE <.MEM_23>
  _26 = this_5(D)->_group_sizeD.27652;
  # DEBUG thisD.37386 => &group_arb_nameD.30371
  # DEBUG thisD.38350 => &group_arb_nameD.30371._M_stringbufD.29789
  # DEBUG thisD.38473 => &D.30372
  # DEBUG thisD.35744 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG thisD.34210 => D#34ptD.0
  # DEBUG thisD.38474 => &D.30372
  # DEBUG D#88ptD.0 => &D.30372._M_dataplusD.13816
  # DEBUG thisD.38477 => D#88ptD.0
  # DEBUG __datD.38476 => &D.30372.D.13836._M_local_bufD.13838
  # DEBUG __aD.38475 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0
  # DEBUG D#84ptD.0 => D#88ptD.0
  # DEBUG D#85ptD.0 => D#86ptD.0
  # DEBUG thisD.34446 => D#84ptD.0
  # DEBUG __aD.34447 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG thisD.34428 => D#82ptD.0
  # DEBUG D.34429 => D#83ptD.0
  # .MEM_251 = VDEF <.MEM_23>
  MEM[(struct _Alloc_hiderD.13815 *)&D.30372]._M_pD.13822 = &D.30372.D.13836._M_local_bufD.13838;
  # DEBUG thisD.35749 => NULL
  # DEBUG thisD.34457 => NULL
  # DEBUG thisD.38479 => &D.30372
  # DEBUG __nD.38478 => 0
  # DEBUG D#6ptD.0 => &D.30372
  # DEBUG __lengthD.38481 => 0
  # DEBUG thisD.38480 => D#6ptD.0
  # .MEM_252 = VDEF <.MEM_251>
  MEM[(size_typeD.13799 *)&D.30372 + 8B] = 0;
  # DEBUG D#5ptD.0 => &D.30372
  # DEBUG thisD.33971 => D#5ptD.0
  # DEBUG __c1D.38483 => &D.30372.D.13836._M_local_bufD.13838
  # DEBUG __c2D.38482 => D#9ptD.0
  # .MEM_253 = VDEF <.MEM_252>
  MEM[(char_typeD.9490 &)&D.30372 + 16] = 0;
  # DEBUG D#248ptD.0 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # VUSE <.MEM_253>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 } (nonlocal, escaped)
  _141 = MEM[(char_typeD.18837 * *)&group_arb_nameD.30371 + 48B];
  # DEBUG D#2ptD.0 => D#248ptD.0
  # DEBUG thisD.35741 => D#2ptD.0
  if (_141 != 0B)
    goto <bb 29>;
  else
    goto <bb 51>;
;;    succ:       29 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 9141, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#249ptD.0 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # DEBUG D#2ptD.0 => D#249ptD.0
  # DEBUG thisD.35760 => D#2ptD.0
  # DEBUG D#250ptD.0 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # VUSE <.MEM_253>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 } (nonlocal, escaped)
  _142 = MEM[(char_typeD.18837 * *)&group_arb_nameD.30371 + 32B];
  # DEBUG D#3ptD.0 => D#250ptD.0
  # DEBUG thisD.35757 => D#3ptD.0
  if (_141 > _142)
    goto <bb 30>;
  else
    goto <bb 40>;
;;    succ:       30 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 4571, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.38456 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG thisD.34210 => D#34ptD.0
  # DEBUG D#253ptD.0 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # DEBUG D#2ptD.0 => D#253ptD.0
  # DEBUG thisD.35783 => D#2ptD.0
  # DEBUG D#254ptD.0 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # VUSE <.MEM_253>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 } (nonlocal, escaped)
  _143 = MEM[(char_typeD.18837 * *)&group_arb_nameD.30371 + 40B];
  # DEBUG D#4ptD.0 => D#254ptD.0
  # DEBUG thisD.35780 => D#4ptD.0
  # DEBUG thisD.38460 => &D.38485
  # DEBUG __begD.38459 => _143
  # DEBUG __endD.38458 => _141
  # DEBUG __aD.38457 => NULL
  # DEBUG thisD.38461 => &D.38485
  # DEBUG D#246ptD.0 => &D.38485._M_dataplusD.13816
  # DEBUG thisD.38464 => D#246ptD.0
  # DEBUG __datD.38463 => &D.38485.D.13836._M_local_bufD.13838
  # DEBUG __aD.38462 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0
  # DEBUG D#84ptD.0 => D#246ptD.0
  # DEBUG D#85ptD.0 => D#86ptD.0
  # DEBUG thisD.34446 => D#84ptD.0
  # DEBUG __aD.34447 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG thisD.34428 => D#82ptD.0
  # DEBUG D.34429 => D#83ptD.0
  # .MEM_278 = VDEF <.MEM_253>
  MEM[(struct _Alloc_hiderD.13815 *)&D.38485]._M_pD.13822 = &D.38485.D.13836._M_local_bufD.13838;
  # DEBUG thisD.38467 => &D.38485
  # DEBUG __begD.38466 => _143
  # DEBUG __endD.38465 => _141
  # DEBUG thisD.38471 => &D.38485
  # DEBUG __begD.38470 => _143
  # DEBUG __endD.38469 => _141
  # DEBUG thisD.38489 => &D.38485
  # DEBUG __begD.38490 => _143
  # DEBUG __endD.38491 => _141
  # DEBUG __ptrD.35697 => _143
  if (_143 == 0B)
    goto <bb 98>;
  else
    goto <bb 97>;
;;    succ:       98 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                97 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 1325, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       97 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 21] # .MEM_280 = VDEF <.MEM_279>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _155 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.13860 (&D.38485, &__dnewD.38492, 0);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                61 (EH,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 1325, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.38485
  # DEBUG __pD.38511 => _155
  # DEBUG thisD.38510 => D#7ptD.0
  # .MEM_281 = VDEF <.MEM_280>
  MEM[(charD.10 * *)&D.38485] = _155;
  # VUSE <.MEM_281>
  __dnew.50_156 = __dnewD.38492;
  # DEBUG D#8ptD.0 => &D.38485
  # DEBUG __capacityD.38513 => __dnew.50_156
  # DEBUG thisD.38512 => D#8ptD.0
  # .MEM_282 = VDEF <.MEM_281>
  MEM[(size_typeD.13799 *)&D.38485 + 16B] = __dnew.50_156;
  # DEBUG D#5ptD.0 => &D.38485
  # DEBUG thisD.35671 => D#5ptD.0
  # DEBUG __pD.38495 => _155
  # DEBUG __k1D.38494 => _143
  # DEBUG __k2D.38493 => _141
  # DEBUG __dD.38498 => _155
  # DEBUG __sD.38497 => _143
  # DEBUG __nD.38496 => __dnew.49_154
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 3244, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       97 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#5ptD.0 => &D.38485
  # DEBUG thisD.35671 => D#5ptD.0
  # DEBUG __pD.38495 => &D.38485.D.13836._M_local_bufD.13838
  # DEBUG __k1D.38494 => _143
  # DEBUG __k2D.38493 => _141
  # DEBUG __dD.38498 => &D.38485.D.13836._M_local_bufD.13838
  # DEBUG __sD.38497 => _143
  # DEBUG __nD.38496 => __dnew.49_154
  if (__dnew.49_154 == 1)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 1729, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_279>
  _158 = MEM[(const char_typeD.9490 &)_143];
  # DEBUG D#9ptD.0 => _143
  # DEBUG __c1D.38503 => &D.38485.D.13836._M_local_bufD.13838
  # DEBUG __c2D.38502 => D#9ptD.0
  # .MEM_283 = VDEF <.MEM_279>
  MEM[(char_typeD.9490 &)&D.38485 + 16] = _158;
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 2840, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38485 } (nonlocal, escaped)
  # _175 = PHI <&D.38485.D.13836._M_local_bufD.13838(33), _155(32)>
  # .MEM_147 = PHI <.MEM_279(33), .MEM_282(32)>
  # DEBUG D#5ptD.0 => &D.38485
  # DEBUG thisD.35671 => D#5ptD.0
  # DEBUG __pD.38495 => _175
  # DEBUG __k1D.38494 => _143
  # DEBUG __k2D.38493 => _141
  # DEBUG __dD.38498 => _175
  # DEBUG __sD.38497 => _143
  # DEBUG __nD.38496 => __dnew.49_154
  # DEBUG __s1D.38501 => _175
  # DEBUG __s2D.38500 => _143
  # DEBUG __nD.38499 => __dnew.49_154
  # .MEM_284 = VDEF <.MEM_147>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  memcpyD.992 (_175, _143, __dnew.49_154);
  # VUSE <.MEM_284>
  pretmp_78 = __dnewD.38492;
  # VUSE <.MEM_284>
  pretmp_272 = MEM[(charD.10 * *)&D.38485];
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 4569, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_202 = PHI <.MEM_283(34), .MEM_284(35)>
  # prephitmp_79 = PHI <__dnew.49_154(34), pretmp_78(35)>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38485 } (nonlocal, escaped)
  # prephitmp_273 = PHI <&D.38485.D.13836._M_local_bufD.13838(34), pretmp_272(35)>
  # DEBUG D#463ptD.0 => __dnewD.38492
  # DEBUG thisD.38505 => &D.38485
  # DEBUG __nD.38504 => D#463ptD.0
  # DEBUG D#6ptD.0 => &D.38485
  # DEBUG __lengthD.38507 => D#463ptD.0
  # DEBUG thisD.38506 => D#6ptD.0
  # .MEM_285 = VDEF <.MEM_202>
  MEM[(size_typeD.13799 *)&D.38485 + 8B] = prephitmp_79;
  # DEBUG D#5ptD.0 => &D.38485
  # DEBUG thisD.33971 => D#5ptD.0
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38485 } (nonlocal, escaped)
  _161 = prephitmp_273 + prephitmp_79;
  # DEBUG __c1D.38509 => _161
  # DEBUG __c2D.38508 => D#9ptD.0
  # .MEM_286 = VDEF <.MEM_285>
  MEM[(char_typeD.9490 &)_161] = 0;
  # .MEM_287 = VDEF <.MEM_286>
  __dnewD.38492 ={v} {CLOBBER};
  # DEBUG thisD.38453 => &D.30372
  # DEBUG __strD.38452 => &D.38485
  # DEBUG thisD.38455 => &D.30372
  # DEBUG __strD.38454 => &D.38485
  [LP 14] # .MEM_288 = VDEF <.MEM_287>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.14004 (&D.30372, &D.38485);
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 (EH,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 4569, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.38436 => &D.38485
  # DEBUG thisD.38437 => &D.38485
  # DEBUG thisD.38446 => &D.38485
  # VUSE <.MEM_288>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38485 } (nonlocal, escaped)
  _144 = MEM[(charD.10 * *)&D.38485];
  # DEBUG D#5ptD.0 => &D.38485
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.38447 => &D.38485
  if (&D.38485.D.13836._M_local_bufD.13838 != _144)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 3580, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.38485.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.38439 => &D.38485
  # DEBUG __sizeD.38438 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.38485
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.38485
  # DEBUG D#97ptD.0 => &D.38485._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.38442 => _144
  # DEBUG __aD.38440 => D#95ptD.0
  # DEBUG __nD.38441 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.38445 => _144
  # DEBUG thisD.38443 => D#91ptD.0
  # DEBUG D.38444 => D#92ptD.0
  # .MEM_289 = VDEF <.MEM_288>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_144);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 4569, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_203 = PHI <.MEM_288(37), .MEM_289(38)>
  # DEBUG D#101ptD.0 => &D.38485._M_dataplusD.13816
  # DEBUG thisD.38448 => D#101ptD.0
  # DEBUG thisD.38449 => D#101ptD.0
  # DEBUG thisD.38450 => D#101ptD.0
  # .MEM_294 = VDEF <.MEM_203>
  D.38485 ={v} {CLOBBER};
  # DEBUG thisD.38451 => NULL
  # DEBUG thisD.35792 => NULL
  goto <bb 66>;
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 4571, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       29 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.38419 => D#35ptD.0
  # DEBUG D#34ptD.0 => D#35ptD.0
  # DEBUG thisD.34210 => D#34ptD.0
  # DEBUG D#251ptD.0 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # DEBUG D#3ptD.0 => D#251ptD.0
  # DEBUG thisD.35829 => D#3ptD.0
  # DEBUG D#252ptD.0 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # VUSE <.MEM_253>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 } (nonlocal, escaped)
  _145 = MEM[(char_typeD.18837 * *)&group_arb_nameD.30371 + 40B];
  # DEBUG D#4ptD.0 => D#252ptD.0
  # DEBUG thisD.35826 => D#4ptD.0
  # DEBUG thisD.38423 => &D.38484
  # DEBUG __begD.38422 => _145
  # DEBUG __endD.38421 => _142
  # DEBUG __aD.38420 => NULL
  # DEBUG thisD.38424 => &D.38484
  # DEBUG D#246ptD.0 => &D.38484._M_dataplusD.13816
  # DEBUG thisD.38427 => D#246ptD.0
  # DEBUG __datD.38426 => &D.38484.D.13836._M_local_bufD.13838
  # DEBUG __aD.38425 => D#87ptD.0
  # DEBUG D#86ptD.0 => D#87ptD.0
  # DEBUG D#84ptD.0 => D#246ptD.0
  # DEBUG D#85ptD.0 => D#86ptD.0
  # DEBUG thisD.34446 => D#84ptD.0
  # DEBUG __aD.34447 => D#85ptD.0
  # DEBUG D#83ptD.0 => D#85ptD.0
  # DEBUG D#82ptD.0 => D#84ptD.0
  # DEBUG thisD.34428 => D#82ptD.0
  # DEBUG D.34429 => D#83ptD.0
  # .MEM_254 = VDEF <.MEM_253>
  MEM[(struct _Alloc_hiderD.13815 *)&D.38484]._M_pD.13822 = &D.38484.D.13836._M_local_bufD.13838;
  # DEBUG thisD.38430 => &D.38484
  # DEBUG __begD.38429 => _145
  # DEBUG __endD.38428 => _142
  # DEBUG thisD.38434 => &D.38484
  # DEBUG __begD.38433 => _145
  # DEBUG __endD.38432 => _142
  # DEBUG thisD.38518 => &D.38484
  # DEBUG __begD.38519 => _145
  # DEBUG __endD.38520 => _142
  # DEBUG __ptrD.35697 => _145
  # RANGE [0, 1]
  _194 = _142 != 0B;
  # RANGE [0, 1]
  _107 = _145 == 0B;
  # RANGE [0, 1]
  _105 = _107 & _194;
  if (_105 != 0)
    goto <bb 100>;
  else
    goto <bb 102>;
;;    succ:       100 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                102 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 1325, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       102 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 22] # .MEM_256 = VDEF <.MEM_255>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _167 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.13860 (&D.38484, &__dnewD.38521, 0);
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 (EH,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 (EH,EXECUTABLE)
<L27>: [LP 22]
  goto <bb 62> (<L18>);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 1325, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.38484
  # DEBUG __pD.38540 => _167
  # DEBUG thisD.38539 => D#7ptD.0
  # .MEM_257 = VDEF <.MEM_256>
  MEM[(charD.10 * *)&D.38484] = _167;
  # VUSE <.MEM_257>
  __dnew.50_168 = __dnewD.38521;
  # DEBUG D#8ptD.0 => &D.38484
  # DEBUG __capacityD.38542 => __dnew.50_168
  # DEBUG thisD.38541 => D#8ptD.0
  # .MEM_258 = VDEF <.MEM_257>
  MEM[(size_typeD.13799 *)&D.38484 + 16B] = __dnew.50_168;
  # DEBUG D#5ptD.0 => &D.38484
  # DEBUG thisD.35671 => D#5ptD.0
  # DEBUG __pD.38524 => _167
  # DEBUG __k1D.38523 => _145
  # DEBUG __k2D.38522 => _142
  # DEBUG __dD.38527 => _167
  # DEBUG __sD.38526 => _145
  # DEBUG __nD.38525 => __dnew.49_166
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 3244, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       102 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#5ptD.0 => &D.38484
  # DEBUG thisD.35671 => D#5ptD.0
  # DEBUG __pD.38524 => &D.38484.D.13836._M_local_bufD.13838
  # DEBUG __k1D.38523 => _145
  # DEBUG __k2D.38522 => _142
  # DEBUG __dD.38527 => &D.38484.D.13836._M_local_bufD.13838
  # DEBUG __sD.38526 => _145
  # DEBUG __nD.38525 => __dnew.49_166
  if (__dnew.49_166 == 1)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 1729, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_255>
  _170 = MEM[(const char_typeD.9490 &)_145];
  # DEBUG D#9ptD.0 => _145
  # DEBUG __c1D.38532 => &D.38484.D.13836._M_local_bufD.13838
  # DEBUG __c2D.38531 => D#9ptD.0
  # .MEM_259 = VDEF <.MEM_255>
  MEM[(char_typeD.9490 &)&D.38484 + 16] = _170;
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 2840, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       44 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38484 } (nonlocal, escaped)
  # _174 = PHI <&D.38484.D.13836._M_local_bufD.13838(44), _167(43)>
  # .MEM_140 = PHI <.MEM_255(44), .MEM_258(43)>
  # DEBUG D#5ptD.0 => &D.38484
  # DEBUG thisD.35671 => D#5ptD.0
  # DEBUG __pD.38524 => _174
  # DEBUG __k1D.38523 => _145
  # DEBUG __k2D.38522 => _142
  # DEBUG __dD.38527 => _174
  # DEBUG __sD.38526 => _145
  # DEBUG __nD.38525 => __dnew.49_166
  # DEBUG __s1D.38530 => _174
  # DEBUG __s2D.38529 => _145
  # DEBUG __nD.38528 => __dnew.49_166
  # .MEM_260 = VDEF <.MEM_140>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  memcpyD.992 (_174, _145, __dnew.49_166);
  # VUSE <.MEM_260>
  pretmp_88 = __dnewD.38521;
  # VUSE <.MEM_260>
  pretmp_76 = MEM[(charD.10 * *)&D.38484];
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 4569, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_205 = PHI <.MEM_259(45), .MEM_260(46)>
  # prephitmp_89 = PHI <__dnew.49_166(45), pretmp_88(46)>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38484 } (nonlocal, escaped)
  # prephitmp_77 = PHI <&D.38484.D.13836._M_local_bufD.13838(45), pretmp_76(46)>
  # DEBUG D#464ptD.0 => __dnewD.38521
  # DEBUG thisD.38534 => &D.38484
  # DEBUG __nD.38533 => D#464ptD.0
  # DEBUG D#6ptD.0 => &D.38484
  # DEBUG __lengthD.38536 => D#464ptD.0
  # DEBUG thisD.38535 => D#6ptD.0
  # .MEM_261 = VDEF <.MEM_205>
  MEM[(size_typeD.13799 *)&D.38484 + 8B] = prephitmp_89;
  # DEBUG D#5ptD.0 => &D.38484
  # DEBUG thisD.33971 => D#5ptD.0
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38484 } (nonlocal, escaped)
  _173 = prephitmp_77 + prephitmp_89;
  # DEBUG __c1D.38538 => _173
  # DEBUG __c2D.38537 => D#9ptD.0
  # .MEM_262 = VDEF <.MEM_261>
  MEM[(char_typeD.9490 &)_173] = 0;
  # .MEM_263 = VDEF <.MEM_262>
  __dnewD.38521 ={v} {CLOBBER};
  # DEBUG thisD.38416 => &D.30372
  # DEBUG __strD.38415 => &D.38484
  # DEBUG thisD.38418 => &D.30372
  # DEBUG __strD.38417 => &D.38484
  [LP 13] # .MEM_264 = VDEF <.MEM_263>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.14004 (&D.30372, &D.38484);
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                57 (EH,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 4569, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.38399 => &D.38484
  # DEBUG thisD.38400 => &D.38484
  # DEBUG thisD.38409 => &D.38484
  # VUSE <.MEM_264>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38484 } (nonlocal, escaped)
  _146 = MEM[(charD.10 * *)&D.38484];
  # DEBUG D#5ptD.0 => &D.38484
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.38410 => &D.38484
  if (&D.38484.D.13836._M_local_bufD.13838 != _146)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 1, count 0, freq 3580, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.38484.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.38402 => &D.38484
  # DEBUG __sizeD.38401 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.38484
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.38484
  # DEBUG D#97ptD.0 => &D.38484._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.38405 => _146
  # DEBUG __aD.38403 => D#95ptD.0
  # DEBUG __nD.38404 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.38408 => _146
  # DEBUG thisD.38406 => D#91ptD.0
  # DEBUG D.38407 => D#92ptD.0
  # .MEM_265 = VDEF <.MEM_264>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_146);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 4569, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_206 = PHI <.MEM_264(48), .MEM_265(49)>
  # DEBUG D#101ptD.0 => &D.38484._M_dataplusD.13816
  # DEBUG thisD.38411 => D#101ptD.0
  # DEBUG thisD.38412 => D#101ptD.0
  # DEBUG thisD.38413 => D#101ptD.0
  # .MEM_270 = VDEF <.MEM_206>
  D.38484 ={v} {CLOBBER};
  # DEBUG thisD.38414 => NULL
  # DEBUG thisD.35838 => NULL
  goto <bb 66>;
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 659, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       28 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.38396 => &D.30372
  # DEBUG __strD.38395 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B]._M_stringD.29619
  # DEBUG thisD.38398 => &D.30372
  # DEBUG __strD.38397 => &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B]._M_stringD.29619
  [LP 23] # .MEM_302 = VDEF <.MEM_253>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.14004 (&D.30372, &MEM[(const struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B]._M_stringD.29619);
  goto <bb 66>;
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 (EH,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 (EH,EXECUTABLE)
<L28>: [LP 23]
  goto <bb 62> (<L18>);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       36 (EH,EXECUTABLE)
<L16>: [LP 14]
  # DEBUG thisD.38380 => &D.38485
  # DEBUG thisD.38381 => &D.38485
  # DEBUG thisD.38390 => &D.38485
  # VUSE <.MEM_288>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38485 } (nonlocal, escaped)
  _148 = MEM[(charD.10 * *)&D.38485];
  # DEBUG D#5ptD.0 => &D.38485
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.38391 => &D.38485
  if (&D.38485.D.13836._M_local_bufD.13838 != _148)
    goto <bb 54>;
  else
    goto <bb 55>;
;;    succ:       54 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       53 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.38485.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.38383 => &D.38485
  # DEBUG __sizeD.38382 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.38485
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.38485
  # DEBUG D#97ptD.0 => &D.38485._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.38386 => _148
  # DEBUG __aD.38384 => D#95ptD.0
  # DEBUG __nD.38385 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.38389 => _148
  # DEBUG thisD.38387 => D#91ptD.0
  # DEBUG D.38388 => D#92ptD.0
  # .MEM_295 = VDEF <.MEM_288>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_148);
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       53 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_207 = PHI <.MEM_288(53), .MEM_295(54)>
  # DEBUG D#101ptD.0 => &D.38485._M_dataplusD.13816
  # DEBUG thisD.38392 => D#101ptD.0
  # DEBUG thisD.38393 => D#101ptD.0
  # DEBUG thisD.38394 => D#101ptD.0
  # .MEM_300 = VDEF <.MEM_207>
  D.38485 ={v} {CLOBBER};
  [LP 24] resx 23
;;    succ:       56 (EH,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       55 (EH,EXECUTABLE)
<L29>: [LP 24]
  goto <bb 62> (<L18>);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       47 (EH,EXECUTABLE)
<L17>: [LP 13]
  # DEBUG thisD.38364 => &D.38484
  # DEBUG thisD.38365 => &D.38484
  # DEBUG thisD.38374 => &D.38484
  # VUSE <.MEM_264>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 D.38484 } (nonlocal, escaped)
  _149 = MEM[(charD.10 * *)&D.38484];
  # DEBUG D#5ptD.0 => &D.38484
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.38375 => &D.38484
  if (&D.38484.D.13836._M_local_bufD.13838 != _149)
    goto <bb 58>;
  else
    goto <bb 59>;
;;    succ:       58 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.38484.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.38367 => &D.38484
  # DEBUG __sizeD.38366 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.38484
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.38484
  # DEBUG D#97ptD.0 => &D.38484._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.38370 => _149
  # DEBUG __aD.38368 => D#95ptD.0
  # DEBUG __nD.38369 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.38373 => _149
  # DEBUG thisD.38371 => D#91ptD.0
  # DEBUG D.38372 => D#92ptD.0
  # .MEM_271 = VDEF <.MEM_264>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_149);
;;    succ:       59 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       57 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_208 = PHI <.MEM_264(57), .MEM_271(58)>
  # DEBUG D#101ptD.0 => &D.38484._M_dataplusD.13816
  # DEBUG thisD.38376 => D#101ptD.0
  # DEBUG thisD.38377 => D#101ptD.0
  # DEBUG thisD.38378 => D#101ptD.0
  # .MEM_276 = VDEF <.MEM_208>
  D.38484 ={v} {CLOBBER};
  [LP 25] resx 22
;;    succ:       60 (EH,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 59, next block 61, flags: (NEW)
;;    pred:       59 (EH,EXECUTABLE)
<L30>: [LP 25]
  goto <bb 62> (<L18>);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 60, next block 62, flags: (NEW)
;;    pred:       31 (EH,EXECUTABLE)
<L26>: [LP 21]
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                99 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                101 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_209 = PHI <.MEM_280(61), .MEM_256(42), .MEM_302(52), .MEM_300(56), .MEM_276(60), .MEM_301(99), .MEM_277(101)>
<L18>:
  # DEBUG thisD.38353 => &D.30372
  # DEBUG thisD.38354 => &D.30372
  # DEBUG thisD.35903 => &D.30372
  # VUSE <.MEM_209>
  # PT = nonlocal escaped { D.30372 } (escaped)
  _150 = MEM[(charD.10 * *)&D.30372];
  # DEBUG D#5ptD.0 => &D.30372
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.35904 => &D.30372
  if (&D.30372.D.13836._M_local_bufD.13838 != _150)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                64 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       62 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.30372.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.38356 => &D.30372
  # DEBUG __sizeD.38355 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.30372
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.30372
  # DEBUG D#97ptD.0 => &D.30372._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.38359 => _150
  # DEBUG __aD.38357 => D#95ptD.0
  # DEBUG __nD.38358 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.38362 => _150
  # DEBUG thisD.38360 => D#91ptD.0
  # DEBUG D.38361 => D#92ptD.0
  # .MEM_322 = VDEF <.MEM_209>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_150);
;;    succ:       64 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       62 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_210 = PHI <.MEM_209(62), .MEM_322(63)>
  # DEBUG D#101ptD.0 => &D.30372._M_dataplusD.13816
  # DEBUG thisD.35905 => D#101ptD.0
  # DEBUG thisD.35906 => D#101ptD.0
  # DEBUG thisD.35907 => D#101ptD.0
  [LP 26] resx 21
;;    succ:       65 (EH,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 64, next block 66, flags: (NEW)
;;    pred:       64 (EH,EXECUTABLE)
<L31>: [LP 26]
  goto <bb 83> (<L6>);
;;    succ:       83 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 1, count 0, freq 9796, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_211 = PHI <.MEM_270(50), .MEM_294(39), .MEM_302(51)>
  [LP 6] # .MEM_29 = VDEF <.MEM_211>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _30 = _ZN7Arbiter10NewArbiterEP6ModuleRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_iD.27616 (_6, &D.30372, arb_type_28(D), _26);
;;    succ:       78 (EH,EXECUTABLE)
;;                67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 1, count 0, freq 9796, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_31 = VDEF <.MEM_29>
  *_25 = _30;
  # DEBUG thisD.37391 => &D.30372
  # DEBUG thisD.37392 => &D.30372
  # DEBUG thisD.37401 => &D.30372
  # VUSE <.MEM_31>
  # PT = nonlocal escaped { D.30372 } (escaped)
  _57 = MEM[(charD.10 * *)&D.30372];
  # DEBUG D#5ptD.0 => &D.30372
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.37402 => &D.30372
  if (&D.30372.D.13836._M_local_bufD.13838 != _57)
    goto <bb 68>;
  else
    goto <bb 69>;
;;    succ:       68 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                69 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 68, loop depth 1, count 0, freq 6841, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       67 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.30372.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.37394 => &D.30372
  # DEBUG __sizeD.37393 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.30372
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.30372
  # DEBUG D#97ptD.0 => &D.30372._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.37397 => _57
  # DEBUG __aD.37395 => D#95ptD.0
  # DEBUG __nD.37396 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.37400 => _57
  # DEBUG thisD.37398 => D#91ptD.0
  # DEBUG D.37399 => D#92ptD.0
  # .MEM_70 = VDEF <.MEM_31>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_57);
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 1, count 0, freq 9796, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       67 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                68 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_31(67), .MEM_70(68)>
  # DEBUG D#101ptD.0 => &D.30372._M_dataplusD.13816
  # DEBUG thisD.37403 => D#101ptD.0
  # DEBUG thisD.37404 => D#101ptD.0
  # DEBUG thisD.37405 => D#101ptD.0
  # .MEM_32 = VDEF <.MEM_53>
  D.30372 ={v} {CLOBBER};
  # DEBUG thisD.38547 => &group_arb_nameD.30371
  # .MEM_303 = VDEF <.MEM_32>
  group_arb_nameD.30371.D.29846._vptr.basic_ostreamD.24032 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29850 + 24B];
  # .MEM_304 = VDEF <.MEM_303>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B].D.23348._vptr.ios_baseD.18324 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29850 + 64B];
  # DEBUG thisD.38551 => &group_arb_nameD.30371._M_stringbufD.29789
  # .MEM_305 = VDEF <.MEM_304>
  MEM[(struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696._vptr.basic_streambufD.19120 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEED.29700 + 16B];
  # DEBUG D#103ptD.0 => &MEM[(struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B]._M_stringD.29619
  # DEBUG thisD.38552 => D#103ptD.0
  # DEBUG thisD.38553 => D#103ptD.0
  # DEBUG thisD.38562 => D#103ptD.0
  # VUSE <.MEM_305>
  # PT = nonlocal escaped null { D.19129 D.23357 D.29700 D.29850 D.30371 } (nonlocal, escaped)
  _33 = MEM[(charD.10 * *)&group_arb_nameD.30371 + 80B];
  # DEBUG D#5ptD.0 => D#103ptD.0
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.38563 => D#103ptD.0
  if (&MEM[(const struct basic_stringD.8425 *)&group_arb_nameD.30371 + 80B].D.13836._M_local_bufD.13838 != _33)
    goto <bb 70>;
  else
    goto <bb 71>;
;;    succ:       70 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 70, loop depth 1, count 0, freq 7675, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       69 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => MEM[(struct basic_stringD.8425 *)D#103ptD.0].D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.38555 => D#103ptD.0
  # DEBUG __sizeD.38554 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => D#103ptD.0
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => D#103ptD.0
  # DEBUG D#97ptD.0 => &MEM[(struct basic_stringD.8425 *)D#103ptD.0]._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.38558 => _33
  # DEBUG __aD.38556 => D#95ptD.0
  # DEBUG __nD.38557 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.38561 => _33
  # DEBUG thisD.38559 => D#91ptD.0
  # DEBUG D.38560 => D#92ptD.0
  # .MEM_306 = VDEF <.MEM_305>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_33);
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 1, count 0, freq 9796, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       69 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_212 = PHI <.MEM_305(69), .MEM_306(70)>
  # DEBUG D#101ptD.0 => &MEM[(struct basic_stringD.8425 *)D#103ptD.0]._M_dataplusD.13816
  # DEBUG thisD.38564 => D#101ptD.0
  # DEBUG thisD.38565 => D#101ptD.0
  # DEBUG thisD.38566 => D#101ptD.0
  # .MEM_310 = VDEF <.MEM_212>
  MEM[(struct  &)&group_arb_nameD.30371 + 80] ={v} {CLOBBER};
  # DEBUG D#102ptD.0 => &MEM[(struct basic_stringbufD.9740 *)&group_arb_nameD.30371 + 8B].D.29696
  # DEBUG thisD.38567 => D#102ptD.0
  # .MEM_311 = VDEF <.MEM_310>
  MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._vptr.basic_streambufD.19120 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.19129 + 16B];
  # .MEM_312 = VDEF <.MEM_311>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt6localeD1EvD.16859 (&MEM[(struct basic_streambufD.9732 *)&group_arb_nameD.30371 + 8B]._M_buf_localeD.18972);
  # .MEM_314 = VDEF <.MEM_312>
  MEM[(struct  &)&group_arb_nameD.30371 + 8] ={v} {CLOBBER};
  # DEBUG thisD.38550 => &group_arb_nameD.30371.D.29846
  # DEBUG __vtt_parmD.38549 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29855 + 8B]
  # VUSE <.MEM_314>
  # PT = nonlocal escaped 
  iftmp.40_176 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29855 + 8B];
  # VUSE <.MEM_314>
  _177 = MEM[(long intD.12 *)iftmp.40_176 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.41_178 = (sizetype) _177;
  # PT = { D.30371 } (escaped)
  _179 = &group_arb_nameD.30371.D.29846 + iftmp.41_178;
  # VUSE <.MEM_314>
  # PT = nonlocal escaped 
  iftmp.42_180 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.29855 + 16B];
  # .MEM_316 = VDEF <.MEM_314>
  _179->D.23348._vptr.ios_baseD.18324 = iftmp.42_180;
  # .MEM_317 = VDEF <.MEM_316>
  MEM[(struct  &)&group_arb_nameD.30371] ={v} {CLOBBER};
  # DEBUG D#107ptD.0 => &group_arb_nameD.30371.D.29849
  # DEBUG thisD.38548 => D#107ptD.0
  # .MEM_318 = VDEF <.MEM_317>
  MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B].D.23348._vptr.ios_baseD.18324 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.23357 + 16B];
  [LP 27] # .MEM_319 = VDEF <.MEM_318>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.18321 (&MEM[(struct basic_iosD.9730 *)&group_arb_nameD.30371 + 112B].D.23348);
  goto <bb 73>;
;;    succ:       73 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                72 (EH,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 71, next block 73, flags: (NEW)
;;    pred:       71 (EH,EXECUTABLE)
<L32>: [LP 27]
  goto <bb 90> (<L10>);
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 73, loop depth 1, count 0, freq 9800, maybe hot
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       71 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = VDEF <.MEM_319>
  group_arb_nameD.30371 ={v} {CLOBBER};
  i_35 = i_204 + 1;
  # DEBUG iD.30369 => i_35
  # DEBUG iD.30369 => i_35
  if (groups_13(D) <= i_35)
    goto <bb 13>;
  else
    goto <bb 74>;
;;    succ:       13 [2.0%]  (TRUE_VALUE,EXECUTABLE)
;;                74 [98.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 74, loop depth 1, count 0, freq 9604, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 [98.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 200, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_45 = VDEF <.MEM_43>
  this_5(D)->_global_arbiterD.28400 = _44;
  # DEBUG thisD.37409 => &D.30373
  # DEBUG thisD.37410 => &D.30373
  # DEBUG thisD.37419 => &D.30373
  # VUSE <.MEM_45>
  # PT = nonlocal escaped { D.30373 } (escaped)
  _48 = MEM[(charD.10 * *)&D.30373];
  # DEBUG D#5ptD.0 => &D.30373
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.37420 => &D.30373
  if (&D.30373.D.13836._M_local_bufD.13838 != _48)
    goto <bb 76>;
  else
    goto <bb 77>;
;;    succ:       76 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 157, maybe hot
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       75 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.30373.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.37412 => &D.30373
  # DEBUG __sizeD.37411 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.30373
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.30373
  # DEBUG D#97ptD.0 => &D.30373._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.37415 => _48
  # DEBUG __aD.37413 => D#95ptD.0
  # DEBUG __nD.37414 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.37418 => _48
  # DEBUG thisD.37416 => D#91ptD.0
  # DEBUG D.37417 => D#92ptD.0
  # .MEM_80 = VDEF <.MEM_45>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_48);
;;    succ:       77 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 200, maybe hot
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       75 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                76 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_45(75), .MEM_80(76)>
  # DEBUG D#101ptD.0 => &D.30373._M_dataplusD.13816
  # DEBUG thisD.37421 => D#101ptD.0
  # DEBUG thisD.37422 => D#101ptD.0
  # DEBUG thisD.37423 => D#101ptD.0
  # .MEM_47 = VDEF <.MEM_49>
  D.30373 ={v} {CLOBBER};
  # DEBUG thisD.37407 => &D.30374
  # DEBUG thisD.37408 => &D.30374
  # VUSE <.MEM_47>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 77, next block 79, flags: (NEW, REACHABLE)
;;    pred:       66 (EH,EXECUTABLE)
<L5>: [LP 6]
  # DEBUG thisD.37424 => &D.30372
  # DEBUG thisD.37425 => &D.30372
  # DEBUG thisD.37434 => &D.30372
  # VUSE <.MEM_29>
  # PT = nonlocal escaped { D.30372 } (escaped)
  _46 = MEM[(charD.10 * *)&D.30372];
  # DEBUG D#5ptD.0 => &D.30372
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.37435 => &D.30372
  if (&D.30372.D.13836._M_local_bufD.13838 != _46)
    goto <bb 79>;
  else
    goto <bb 80>;
;;    succ:       79 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       78 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.30372.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.37427 => &D.30372
  # DEBUG __sizeD.37426 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.30372
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.30372
  # DEBUG D#97ptD.0 => &D.30372._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.37430 => _46
  # DEBUG __aD.37428 => D#95ptD.0
  # DEBUG __nD.37429 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.37433 => _46
  # DEBUG thisD.37431 => D#91ptD.0
  # DEBUG D.37432 => D#92ptD.0
  # .MEM_75 = VDEF <.MEM_29>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_46);
;;    succ:       80 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 79, next block 81, flags: (NEW, REACHABLE)
;;    pred:       78 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                79 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_29(78), .MEM_75(79)>
  # DEBUG D#101ptD.0 => &D.30372._M_dataplusD.13816
  # DEBUG thisD.37436 => D#101ptD.0
  # DEBUG thisD.37437 => D#101ptD.0
  # DEBUG thisD.37438 => D#101ptD.0
  # .MEM_37 = VDEF <.MEM_58>
  D.30372 ={v} {CLOBBER};
  [LP 5] resx 6
;;    succ:       81 (EH,EXECUTABLE)

;;   basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 80, next block 82, flags: (NEW)
;;    pred:       80 (EH,EXECUTABLE)
<L33>: [LP 5]
  goto <bb 83> (<L6>);
;;    succ:       83 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 81, next block 83, flags: (NEW)
;;    pred:       25 (EH,EXECUTABLE)
<L24>: [LP 19]
;;    succ:       83 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 82, next block 84, flags: (NEW, REACHABLE)
;;    pred:       82 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                81 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_68(82), .MEM_23(27), .MEM_210(65), .MEM_37(81)>
<L6>:
  [MNT 8] # .MEM_38 = VDEF <.MEM_3>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1EvD.29838 (&group_arb_nameD.30371);
  [LP 28] resx 5
;;    succ:       84 (EH,EXECUTABLE)

;;   basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 83, next block 85, flags: (NEW)
;;    pred:       83 (EH,EXECUTABLE)
<L34>: [LP 28]
  goto <bb 90> (<L10>);
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 84, next block 86, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L8>: [LP 8]
  # DEBUG thisD.37439 => &D.30373
  # DEBUG thisD.37440 => &D.30373
  # DEBUG thisD.37449 => &D.30373
  # VUSE <.MEM_43>
  # PT = nonlocal escaped { D.30373 } (escaped)
  _36 = MEM[(charD.10 * *)&D.30373];
  # DEBUG D#5ptD.0 => &D.30373
  # DEBUG thisD.33913 => D#5ptD.0
  # DEBUG thisD.37450 => &D.30373
  if (&D.30373.D.13836._M_local_bufD.13838 != _36)
    goto <bb 86>;
  else
    goto <bb 87>;
;;    succ:       86 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                87 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 85, next block 87, flags: (NEW, REACHABLE)
;;    pred:       85 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#100ptD.0 => D.30373.D.13836._M_allocated_capacityD.13839
  # DEBUG D#99ptD.0 => D#100ptD.0
  # DEBUG thisD.37442 => &D.30373
  # DEBUG __sizeD.37441 => D#99ptD.0
  # DEBUG D#98ptD.0 => D#99ptD.0
  # DEBUG D#5ptD.0 => &D.30373
  # DEBUG thisD.34520 => D#5ptD.0
  # DEBUG thisD.34521 => &D.30373
  # DEBUG D#97ptD.0 => &D.30373._M_dataplusD.13816
  # DEBUG D#95ptD.0 => D#97ptD.0
  # DEBUG D#96ptD.0 => D#98ptD.0 + 1
  # DEBUG __pD.37445 => _36
  # DEBUG __aD.37443 => D#95ptD.0
  # DEBUG __nD.37444 => D#96ptD.0
  # DEBUG D#94ptD.0 => D#96ptD.0
  # DEBUG D#93ptD.0 => D#95ptD.0
  # DEBUG D#91ptD.0 => D#93ptD.0
  # DEBUG D#92ptD.0 => D#94ptD.0
  # DEBUG __pD.37448 => _36
  # DEBUG thisD.37446 => D#91ptD.0
  # DEBUG D.37447 => D#92ptD.0
  # .MEM_85 = VDEF <.MEM_43>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_36);
;;    succ:       87 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 86, next block 88, flags: (NEW, REACHABLE)
;;    pred:       85 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                86 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_43(85), .MEM_85(86)>
  # DEBUG D#101ptD.0 => &D.30373._M_dataplusD.13816
  # DEBUG thisD.37451 => D#101ptD.0
  # DEBUG thisD.37452 => D#101ptD.0
  # DEBUG thisD.37453 => D#101ptD.0
  # .MEM_50 = VDEF <.MEM_59>
  D.30373 ={v} {CLOBBER};
  [LP 3] resx 11
;;    succ:       88 (EH,EXECUTABLE)

;;   basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 87, next block 89, flags: (NEW)
;;    pred:       87 (EH,EXECUTABLE)
<L35>: [LP 3]
  goto <bb 90> (<L10>);
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 88, next block 90, flags: (NEW)
;;    pred:       5 (EH,EXECUTABLE)
<L19>: [LP 15]
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 89, next block 91, flags: (NEW, REACHABLE)
;;    pred:       89 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                72 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                84 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_218(89), .MEM_222(8), .MEM_319(72), .MEM_50(88), .MEM_337(24), .MEM_38(84)>
<L10>:
  # .MEM_39 = VDEF <.MEM_4>
  group_arb_nameD.30371 ={v} {CLOBBER};
  # DEBUG D#325ptD.0 => &this_5(D)->_group_reqsD.29147
  # DEBUG thisD.37456 => D#325ptD.0
  # DEBUG D#190ptD.0 => &D#325ptD.0->D.29145
  # DEBUG thisD.34981 => D#190ptD.0
  # DEBUG D#193ptD.0 => D#325ptD.0->D.29145._M_implD.28636._M_finishD.28639
  # DEBUG D#192ptD.0 => D#325ptD.0->D.29145._M_implD.28636._M_startD.28638
  # DEBUG __firstD.34978 => D#192ptD.0
  # DEBUG __lastD.34979 => D#193ptD.0
  # DEBUG D.34980 => NULL
  # DEBUG D#74ptD.0 => D#192ptD.0
  # DEBUG D#75ptD.0 => D#193ptD.0
  # DEBUG __firstD.34389 => D#74ptD.0
  # DEBUG __lastD.34388 => D#75ptD.0
  # DEBUG D#73ptD.0 => D#75ptD.0
  # DEBUG D#72ptD.0 => D#74ptD.0
  # DEBUG D#70ptD.0 => D#72ptD.0
  # DEBUG D#71ptD.0 => D#73ptD.0
  # DEBUG D.34378 => D#70ptD.0
  # DEBUG D.34377 => D#71ptD.0
  # DEBUG D#191ptD.0 => &D#325ptD.0->D.29145
  # DEBUG thisD.37457 => D#191ptD.0
  # DEBUG D#189ptD.0 => D#191ptD.0->_M_implD.28636._M_end_of_storageD.28640
  # DEBUG D#188ptD.0 => (long intD.12) D#189ptD.0
  # VUSE <.MEM_39>
  # PT = nonlocal escaped 
  _51 = MEM[(struct _Vector_baseD.28403 *)this_5(D) + 176B]._M_implD.28636._M_startD.28638;
  # DEBUG D#187ptD.0 => (long intD.12) _51
  # DEBUG D#186ptD.0 => D#188ptD.0 - D#187ptD.0
  # DEBUG D#185ptD.0 => D#186ptD.0 /[ex] 4
  # DEBUG D#184ptD.0 => (long unsigned intD.14) D#185ptD.0
  # DEBUG thisD.37460 => D#191ptD.0
  # DEBUG __pD.37459 => _51
  # DEBUG __nD.37458 => D#184ptD.0
  if (_51 != 0B)
    goto <bb 91>;
  else
    goto <bb 92>;
;;    succ:       91 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                92 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       90 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#182ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG D#181ptD.0 => D#184ptD.0
  # DEBUG __pD.37464 => _51
  # DEBUG __aD.37462 => D#180ptD.0
  # DEBUG __nD.37463 => D#181ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#178ptD.0 => D#180ptD.0
  # DEBUG D#176ptD.0 => D#178ptD.0
  # DEBUG D#177ptD.0 => D#179ptD.0
  # DEBUG __pD.37467 => _51
  # DEBUG thisD.37465 => D#176ptD.0
  # DEBUG D.37466 => D#177ptD.0
  # .MEM_90 = VDEF <.MEM_39>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_51);
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       90 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                91 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_39(90), .MEM_90(91)>
  # DEBUG D#183ptD.0 => &D#191ptD.0->_M_implD.28636
  # DEBUG thisD.37468 => D#183ptD.0
  # DEBUG thisD.37469 => D#183ptD.0
  # DEBUG thisD.37470 => D#183ptD.0
  # .MEM_95 = VDEF <.MEM_60>
  MEM[(struct  &)this_5(D) + 176] ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       93 (EH,EXECUTABLE)

;;   basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       92 (EH,EXECUTABLE)
<L11>: [LP 2]
  # DEBUG D#324ptD.0 => &this_5(D)->_group_arbitersD.28399
  # DEBUG thisD.37471 => D#324ptD.0
  # DEBUG D#170ptD.0 => &D#324ptD.0->D.28397
  # DEBUG thisD.34906 => D#170ptD.0
  # DEBUG D#173ptD.0 => D#324ptD.0->D.28397._M_implD.27888._M_finishD.27891
  # DEBUG D#172ptD.0 => D#324ptD.0->D.28397._M_implD.27888._M_startD.27890
  # DEBUG __firstD.34903 => D#172ptD.0
  # DEBUG __lastD.34904 => D#173ptD.0
  # DEBUG D.34905 => NULL
  # DEBUG D#64ptD.0 => D#172ptD.0
  # DEBUG D#65ptD.0 => D#173ptD.0
  # DEBUG __firstD.34345 => D#64ptD.0
  # DEBUG __lastD.34344 => D#65ptD.0
  # DEBUG D#63ptD.0 => D#65ptD.0
  # DEBUG D#62ptD.0 => D#64ptD.0
  # DEBUG D#60ptD.0 => D#62ptD.0
  # DEBUG D#61ptD.0 => D#63ptD.0
  # DEBUG D.34334 => D#60ptD.0
  # DEBUG D.34333 => D#61ptD.0
  # DEBUG D#171ptD.0 => &D#324ptD.0->D.28397
  # DEBUG thisD.37472 => D#171ptD.0
  # DEBUG D#169ptD.0 => D#171ptD.0->_M_implD.27888._M_end_of_storageD.27892
  # DEBUG D#168ptD.0 => (long intD.12) D#169ptD.0
  # VUSE <.MEM_95>
  # PT = nonlocal escaped 
  _52 = MEM[(struct _Vector_baseD.27655 *)this_5(D) + 144B]._M_implD.27888._M_startD.27890;
  # DEBUG D#167ptD.0 => (long intD.12) _52
  # DEBUG D#166ptD.0 => D#168ptD.0 - D#167ptD.0
  # DEBUG D#165ptD.0 => D#166ptD.0 /[ex] 8
  # DEBUG D#164ptD.0 => (long unsigned intD.14) D#165ptD.0
  # DEBUG thisD.37475 => D#171ptD.0
  # DEBUG __pD.37474 => _52
  # DEBUG __nD.37473 => D#164ptD.0
  if (_52 != 0B)
    goto <bb 94>;
  else
    goto <bb 95>;
;;    succ:       94 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                95 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       93 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#162ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG D#160ptD.0 => D#162ptD.0
  # DEBUG D#161ptD.0 => D#164ptD.0
  # DEBUG __pD.37479 => _52
  # DEBUG __aD.37477 => D#160ptD.0
  # DEBUG __nD.37478 => D#161ptD.0
  # DEBUG D#159ptD.0 => D#161ptD.0
  # DEBUG D#158ptD.0 => D#160ptD.0
  # DEBUG D#156ptD.0 => D#158ptD.0
  # DEBUG D#157ptD.0 => D#159ptD.0
  # DEBUG __pD.37482 => _52
  # DEBUG thisD.37480 => D#156ptD.0
  # DEBUG D.37481 => D#157ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZdlPvD.2766 (_52);
;;    succ:       95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 94, next block 96, flags: (NEW, REACHABLE)
;;    pred:       93 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                94 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_95(93), .MEM_96(94)>
  # DEBUG D#163ptD.0 => &D#171ptD.0->_M_implD.27888
  # DEBUG thisD.37483 => D#163ptD.0
  # DEBUG thisD.37484 => D#163ptD.0
  # DEBUG thisD.37485 => D#163ptD.0
  # .MEM_101 = VDEF <.MEM_61>
  MEM[(struct  &)this_5(D) + 144] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       96 (EH,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       95 (EH,EXECUTABLE)
<L12>: [LP 1]
  # .MEM_54 = VDEF <.MEM_101>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZN7ArbiterD2EvD.27626 (_6);
  resx 1
;;    succ:      

;;   basic block 97, loop depth 1, count 0, freq 4569, maybe hot
;;   Invalid sum of incoming frequencies 686, should be 4569
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       30 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.38515 => _143
  # DEBUG __lastD.38514 => _141
  # DEBUG D#242ptD.0 => &__firstD.38515
  # DEBUG D.35626 => D#242ptD.0
  # DEBUG __firstD.38517 => _143
  # DEBUG __lastD.38516 => _141
  __last.52_151 = (long intD.12) _141;
  __first.53_152 = (long intD.12) _143;
  _153 = __last.52_151 - __first.53_152;
  # RANGE [0, 18446744073709551615]
  __dnew.49_154 = (long unsigned intD.14) _153;
  # .MEM_279 = VDEF <.MEM_278>
  __dnewD.38492 = __dnew.49_154;
  if (__dnew.49_154 > 15)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 98, loop depth 0, count 0, freq 583, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 3885, should be 583
;;    prev block 97, next block 99, flags: (NEW, REACHABLE)
;;    pred:       30 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 29] # .MEM_301 = VDEF <.MEM_278>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2828 ("basic_string::_M_construct null not valid");
;;    succ:       99 (EH,EXECUTABLE)

;;   basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 98, next block 100, flags: (NEW)
;;    pred:       98 (EH,EXECUTABLE)
<L36>: [LP 29]
  goto <bb 62> (<L18>);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 583, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 3885, should be 583
;;    prev block 99, next block 101, flags: (NEW, REACHABLE)
;;    pred:       40 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 12] # .MEM_277 = VDEF <.MEM_254>
  # USE = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  # CLB = nonlocal null { D.19129 D.23357 D.29202 D.29700 D.29850 D.30311 D.30371 D.30372 D.30373 D.38286 D.38297 D.38484 D.38485 D.38492 D.38521 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.2828 ("basic_string::_M_construct null not valid");
;;    succ:       101 (EH,EXECUTABLE)

;;   basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 100, next block 102, flags: (NEW)
;;    pred:       100 (EH,EXECUTABLE)
<L37>: [LP 12]
  goto <bb 62> (<L18>);
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 1, count 0, freq 4569, maybe hot
;;   Invalid sum of incoming frequencies 686, should be 4569
;;    prev block 101, next block 103, flags: (NEW, REACHABLE)
;;    pred:       40 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.38544 => _145
  # DEBUG __lastD.38543 => _142
  # DEBUG D#242ptD.0 => &__firstD.38544
  # DEBUG D.35626 => D#242ptD.0
  # DEBUG __firstD.38546 => _145
  # DEBUG __lastD.38545 => _142
  __last.52_163 = (long intD.12) _142;
  __first.53_164 = (long intD.12) _145;
  _165 = __last.52_163 - __first.53_164;
  # RANGE [0, 18446744073709551615]
  __dnew.49_166 = (long unsigned intD.14) _165;
  # .MEM_255 = VDEF <.MEM_254>
  __dnewD.38521 = __dnew.49_166;
  if (__dnew.49_166 > 15)
    goto <bb 41>;
  else
    goto <bb 44>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 103, loop depth 0, count 0, freq 162, maybe hot
;;    prev block 102, next block 1, flags: (NEW, REACHABLE)
;;    pred:       4 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#462ptD.0 => &this_5(D)->_group_reqsD.29147
  # DEBUG thisD.38295 => D#462ptD.0
  # DEBUG __new_sizeD.38296 => _15
  # .MEM_190 = VDEF <.MEM_215>
  __xD.38297 = 0;
  # DEBUG __xD.38297 => __xD.38297
  # DEBUG D#33ptD.0 => D#462ptD.0
  # DEBUG D#33ptD.0 => D#462ptD.0
  # DEBUG thisD.38304 => D#33ptD.0
  # DEBUG thisD.38305 => D#33ptD.0
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

}


