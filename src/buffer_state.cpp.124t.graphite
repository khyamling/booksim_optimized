
;; Function virtual void BufferState::Display(std::ostream&) const (_ZNK11BufferState7DisplayERSo, funcdef_no=2213, decl_uid=42257, cgraph_uid=680, symbol_order=681)


Pass statistics:
----------------

virtual void BufferState::Display(std::ostream&) const (const struct BufferStateD.39590 * const thisD.44003, struct ostreamD.3834 & osD.44001)
{
  char_typeD.16738 D.62982;
  charD.10 __cD.62981;
  char_typeD.16738 D.62979;
  charD.10 __cD.62978;
  char_typeD.19817 D.62976;
  struct basic_ostreamD.3833 & D.62970;
  struct basic_ostreamD.3833 & D.62966;
  char_typeD.16738 D.62963;
  charD.10 __cD.62962;
  char_typeD.16738 D.62960;
  charD.10 __cD.62959;
  char_typeD.19817 D.62957;
  char_typeD.16738 D.62951;
  charD.10 __cD.62950;
  char_typeD.16738 D.62948;
  charD.10 __cD.62947;
  char_typeD.19817 D.62945;
  struct basic_ostreamD.3833 & D.62939;
  struct basic_ostreamD.3833 & D.62936;
  intD.9 vD.44005;
  long intD.12 _5;
  const size_typeD.11502 _7;
  intD.9 _8;
  struct basic_ostreamD.3833 & _10;
  intD.9 _11;
  struct basic_ostreamD.3833 & _13;
  const struct __ctype_typeD.19822 * _14;
  long unsigned intD.14 _15;
  intD.9 _16;
  intD.9 _17;
  struct basic_ostreamD.3833 & _19;
  struct basic_ostreamD.3833 & _21;
  intD.9 * const _23;
  intD.9 * const _24;
  _Bit_typeD.26520 * const _25;
  charD.10 * const _26;
  struct basic_ostreamD.3833 & _27;
  intD.9 _28;
  struct __ostream_typeD.20476 & _29;
  const intD.9 & _30;
  unsigned intD.13 _31;
  unsigned intD.13 _32;
  long unsigned intD.14 _33;
  long unsigned intD.14 _34;
  _Bit_typeD.26520 * _35;
  long unsigned intD.14 _36;
  long unsigned intD.14 _37;
  long unsigned intD.14 _38;
  boolD.2757 _39;
  long unsigned intD.14 _40;
  const intD.9 & _41;
  const struct __ctype_typeD.19822 * _44;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _46;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _53;
  long intD.12 _54;
  sizetype _55;
  struct basic_iosD.3827 * _56;
  struct basic_ostreamD.3833 & _59;
  long intD.12 _61;
  sizetype _62;
  struct basic_iosD.3827 * _63;
  struct basic_ostreamD.3833 & _66;
  charD.10 _68;
  char_typeD.16738 _71;
  intD.9 pretmp_73;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _76;
  intD.9 (*__vtbl_ptr_typeD.2760) () _77;
  intD.9 pretmp_79;
  intD.9 pretmp_80;
  voidD.45 * PROF_81;
  char_typeD.16738 _83;
  const struct __ctype_typeD.19822 * _86;
  charD.10 _87;
  char_typeD.16738 _90;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _95;
  intD.9 (*__vtbl_ptr_typeD.2760) () _96;
  voidD.45 * PROF_100;
  char_typeD.16738 _102;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _105;
  long intD.12 _106;
  sizetype _107;
  struct basic_iosD.3827 * _108;
  struct basic_ostreamD.3833 & _111;
  intD.9 _112;
  charD.10 _114;
  char_typeD.16738 _117;
  intD.9 prephitmp_119;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _122;
  intD.9 (*__vtbl_ptr_typeD.2760) () _123;
  intD.9 pretmp_125;
  voidD.45 * PROF_127;
  char_typeD.16738 _129;
  intD.9 prephitmp_138;
  intD.9 prephitmp_139;
  intD.9 pretmp_152;
  intD.9 pretmp_156;

;;   basic block 2, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#57ptD.0 => &this_3(D)->D.42278
  # DEBUG thisD.53472 => D#57ptD.0
  # DEBUG __osD.53469 => os_6(D)
  # DEBUG __strD.53470 => NULL
  # VUSE <.MEM_4(D)>
  _7 = MEM[(long unsigned intD.14 *)this_3(D) + 48B];
  # DEBUG thisD.52964 => D#2ptD.0
  _5 = (long intD.12) _7;
  # DEBUG thisD.52961 => NULL
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _26 = MEM[(charD.10 * *)this_3(D) + 40B];
  # DEBUG thisD.52890 => D#1ptD.0
  # .MEM_42 = VDEF <.MEM_4(D)>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _27 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (os_6(D), _26, _5);
  # DEBUG __outD.53465 => _27
  # DEBUG __sD.53466 => " :"
  # DEBUG __sD.53467 => " :"
  # .MEM_43 = VDEF <.MEM_42>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (_27, " :", 2);
  # DEBUG thisD.53462 => _27
  # DEBUG __pfD.53463 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  # DEBUG __osD.62937 => _27
  # VUSE <.MEM_43>
  # PT = nonlocal escaped null 
  _46 = _27->_vptr.basic_ostreamD.20605;
  # VUSE <.MEM_43>
  _61 = MEM[(long intD.12 *)_46 + -24B];
  # RANGE [0, 18446744073709551615]
  _62 = (sizetype) _61;
  # PT = nonlocal escaped 
  _63 = _27 + _62;
  # DEBUG thisD.62940 => _63
  # DEBUG __cD.62941 => 10
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _44 = MEM[(const struct basic_iosD.3827 *)_63]._M_ctypeD.19829;
  # DEBUG __fD.62942 => _44
  if (_44 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_43(2), .MEM_9(8), .MEM_20(16)>
  # .MEM_163 = VDEF <.MEM_67>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__throw_bad_castvD.3958 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62944 => _44
  # DEBUG __cD.62943 => 10
  # VUSE <.MEM_43>
  _68 = MEM[(const struct ctypeD.7063 *)_44]._M_widen_okD.16744;
  if (_68 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 552, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_43>
  _71 = MEM[(const struct ctypeD.7063 *)_44]._M_widenD.16745[10];
  pretmp_73 = (intD.9) _71;
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 352, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62946 => _44
  # DEBUG __cD.62947 => 10
  # .MEM_135 = VDEF <.MEM_43>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.16852 (_44);
  # VUSE <.MEM_135>
  # PT = nonlocal escaped 
  _76 = MEM[(const struct ctypeD.7063 *)_44].D.16885._vptr.facetD.13503;
  # VUSE <.MEM_135>
  # PT = nonlocal escaped 
  _77 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_76 + 48B];
  # PT = anything 
  PROF_81 = [obj_type_ref] OBJ_TYPE_REF(_77;(const struct ctypeD.7063)_44->6);
  if (PROF_81 == _ZNKSt5ctypeIcE8do_widenEcD.16833)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [19.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 70, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [19.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_136 = VDEF <.MEM_135>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _83 = OBJ_TYPE_REF(_77;(const struct ctypeD.7063)_44->6) (_44, 10);
  pretmp_80 = (intD.9) _83;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_43(5), .MEM_135(6), .MEM_136(7)>
  # RANGE [-128, 127]
  # prephitmp_138 = PHI <pretmp_73(5), 10(6), pretmp_80(7)>
  # .MEM_140 = VDEF <.MEM_99>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _66 = _ZNSo3putEcD.20540 (_27, prephitmp_138);
  # DEBUG __osD.62938 => _66
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNSo5flushEvD.20551 (_66);
  # VUSE <.MEM_141>
  _8 = this_3(D)->_occupancyD.41302;
  # DEBUG __outD.53458 => os_6(D)
  # DEBUG __sD.53459 => " occupied = "
  # DEBUG __sD.53460 => " occupied = "
  # .MEM_45 = VDEF <.MEM_141>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (os_6(D), " occupied = ", 12);
  # .MEM_9 = VDEF <.MEM_45>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _10 = _ZNSolsEiD.20513 (os_6(D), _8);
  # DEBUG thisD.53455 => _10
  # DEBUG __pfD.53456 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  # DEBUG __osD.62934 => _10
  # VUSE <.MEM_9>
  # PT = nonlocal escaped null 
  _53 = _10->_vptr.basic_ostreamD.20605;
  # VUSE <.MEM_9>
  _54 = MEM[(long intD.12 *)_53 + -24B];
  # RANGE [0, 18446744073709551615]
  _55 = (sizetype) _54;
  # PT = nonlocal escaped 
  _56 = _10 + _55;
  # DEBUG thisD.62952 => _56
  # DEBUG __cD.62953 => 10
  # VUSE <.MEM_9>
  # PT = nonlocal escaped 
  _86 = MEM[(const struct basic_iosD.3827 *)_56]._M_ctypeD.19829;
  # DEBUG __fD.62954 => _86
  if (_86 == 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62956 => _86
  # DEBUG __cD.62955 => 10
  # VUSE <.MEM_9>
  _87 = MEM[(const struct ctypeD.7063 *)_86]._M_widen_okD.16744;
  if (_87 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 551, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_9>
  _90 = MEM[(const struct ctypeD.7063 *)_86]._M_widenD.16745[10];
  pretmp_125 = (intD.9) _90;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 352, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62958 => _86
  # DEBUG __cD.62959 => 10
  # .MEM_143 = VDEF <.MEM_9>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.16852 (_86);
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _95 = MEM[(const struct ctypeD.7063 *)_86].D.16885._vptr.facetD.13503;
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _96 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_95 + 48B];
  # PT = anything 
  PROF_100 = [obj_type_ref] OBJ_TYPE_REF(_96;(const struct ctypeD.7063)_86->6);
  if (PROF_100 == _ZNKSt5ctypeIcE8do_widenEcD.16833)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [19.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 70, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [19.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_144 = VDEF <.MEM_143>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _102 = OBJ_TYPE_REF(_96;(const struct ctypeD.7063)_86->6) (_86, 10);
  pretmp_79 = (intD.9) _102;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_132 = PHI <.MEM_9(10), .MEM_143(11), .MEM_144(12)>
  # RANGE [-128, 127]
  # prephitmp_139 = PHI <pretmp_125(10), 10(11), pretmp_79(12)>
  # .MEM_148 = VDEF <.MEM_132>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _59 = _ZNSo3putEcD.20540 (_10, prephitmp_139);
  # DEBUG __osD.62935 => _59
  # .MEM_149 = VDEF <.MEM_148>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNSo5flushEvD.20551 (_59);
  # DEBUG vD.44005 => 0
  # VUSE <.MEM_149>
  _112 = this_3(D)->_vcsD.41304;
  if (_112 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_149(13), .MEM_159(21)>
  # VUSE <.MEM_60>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 15, loop depth 0, count 0, freq 823, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # v_98 = PHI <0(15), v_22(22)>
  # .MEM_133 = PHI <.MEM_149(15), .MEM_159(22)>
  # DEBUG vD.44005 => v_98
  # DEBUG __outD.53507 => os_6(D)
  # DEBUG __sD.53508 => "  VC "
  # DEBUG __sD.53509 => "  VC "
  # .MEM_47 = VDEF <.MEM_133>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (os_6(D), "  VC ", 5);
  # .MEM_12 = VDEF <.MEM_47>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _13 = _ZNSolsEiD.20513 (os_6(D), v_98);
  # DEBUG __outD.62967 => _13
  # DEBUG __sD.62968 => ": "
  # DEBUG __sD.62969 => ": "
  # .MEM_151 = VDEF <.MEM_12>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (_13, ": ", 2);
  # RANGE [0, 18446744073709551615]
  _15 = (long unsigned intD.14) v_98;
  # DEBUG D#58ptD.0 => &this_3(D)->_vc_occupancyD.41303
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _23 = MEM[(intD.9 * *)this_3(D) + 112B];
  # DEBUG D#30ptD.0 => D#58ptD.0
  # DEBUG __nD.53504 => _15
  # DEBUG thisD.53505 => D#30ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = _15 * 4;
  # PT = nonlocal escaped 
  _41 = _23 + _40;
  # VUSE <.MEM_151>
  _16 = *_41;
  # DEBUG D#59ptD.0 => &this_3(D)->_tail_sentD.42207
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _25 = MEM[(_Bit_typeD.26520 * *)this_3(D) + 176B];
  # DEBUG D#56ptD.0 => D#59ptD.0
  # DEBUG __nD.53497 => _15
  # DEBUG thisD.53498 => D#56ptD.0
  # RANGE [0, 4294967295]
  _31 = (unsigned intD.13) _15;
  # RANGE [0, 63] NONZERO 63
  _32 = _31 & 63;
  # RANGE [0, 288230376151711743] NONZERO 288230376151711743
  _33 = _15 >> 6;
  # RANGE [0, 2305843009213693944] NONZERO 2305843009213693944
  _34 = _33 * 8;
  # PT = nonlocal escaped 
  _35 = _25 + _34;
  # DEBUG thisD.53441 => NULL
  # DEBUG __xD.53440 => _35
  # DEBUG __yD.53439 => _32
  # DEBUG thisD.53444 => D#26ptD.0
  # DEBUG __xD.53443 => _35
  # DEBUG __yD.53442 => _32
  # DEBUG thisD.53090 => D#26ptD.0
  # DEBUG thisD.53499 => D#28ptD.0
  # DEBUG thisD.53500 => D#28ptD.0
  # RANGE [1, 9223372036854775808]
  _36 = 1 << _32;
  # DEBUG thisD.53181 => NULL
  # DEBUG __xD.53180 => _35
  # DEBUG __yD.53179 => _36
  # DEBUG thisD.53501 => NULL
  # VUSE <.MEM_151>
  _37 = *_35;
  # RANGE [0, 9223372036854775808]
  _38 = _36 & _37;
  # RANGE [0, 1]
  _39 = _38 != 0;
  # DEBUG D#60ptD.0 => &this_3(D)->_in_use_byD.41306
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _24 = MEM[(intD.9 * *)this_3(D) + 152B];
  # DEBUG D#30ptD.0 => D#60ptD.0
  # DEBUG __nD.53493 => _15
  # DEBUG thisD.53494 => D#30ptD.0
  # PT = nonlocal escaped 
  _30 = _24 + _40;
  # VUSE <.MEM_151>
  _17 = *_30;
  # DEBUG __outD.53488 => os_6(D)
  # DEBUG __sD.53489 => "in_use_by = "
  # DEBUG __sD.53490 => "in_use_by = "
  # .MEM_48 = VDEF <.MEM_151>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (os_6(D), "in_use_by = ", 12);
  # .MEM_18 = VDEF <.MEM_48>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _19 = _ZNSolsEiD.20513 (os_6(D), _17);
  # DEBUG __outD.53484 => _19
  # DEBUG __sD.53485 => ", tail_sent = "
  # DEBUG __sD.53486 => ", tail_sent = "
  # .MEM_49 = VDEF <.MEM_18>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (_19, ", tail_sent = ", 14);
  # DEBUG thisD.53481 => _19
  # DEBUG __nD.53482 => _39
  # RANGE [0, 1] NONZERO 1
  _28 = (intD.9) _39;
  # .MEM_50 = VDEF <.MEM_49>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _29 = _ZNSo9_M_insertIbEERSoT_D.20730 (_19, _28);
  # DEBUG __outD.53477 => _29
  # DEBUG __sD.53478 => ", occupied = "
  # DEBUG __sD.53479 => ", occupied = "
  # .MEM_51 = VDEF <.MEM_50>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (_29, ", occupied = ", 13);
  # .MEM_20 = VDEF <.MEM_51>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _21 = _ZNSolsEiD.20513 (_29, _16);
  # DEBUG thisD.53474 => _21
  # DEBUG __pfD.53475 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  # DEBUG __osD.62964 => _21
  # VUSE <.MEM_20>
  # PT = nonlocal escaped null 
  _105 = _21->_vptr.basic_ostreamD.20605;
  # VUSE <.MEM_20>
  _106 = MEM[(long intD.12 *)_105 + -24B];
  # RANGE [0, 18446744073709551615]
  _107 = (sizetype) _106;
  # PT = nonlocal escaped 
  _108 = _21 + _107;
  # DEBUG thisD.62971 => _108
  # DEBUG __cD.62972 => 10
  # VUSE <.MEM_20>
  # PT = nonlocal escaped 
  _14 = MEM[(const struct basic_iosD.3827 *)_108]._M_ctypeD.19829;
  # DEBUG __fD.62973 => _14
  if (_14 == 0B)
    goto <bb 3>;
  else
    goto <bb 17>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62975 => _14
  # DEBUG __cD.62974 => 10
  # VUSE <.MEM_20>
  _114 = MEM[(const struct ctypeD.7063 *)_14]._M_widen_okD.16744;
  if (_114 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_20>
  _117 = MEM[(const struct ctypeD.7063 *)_14]._M_widenD.16745[10];
  pretmp_152 = (intD.9) _117;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 3546, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62977 => _14
  # DEBUG __cD.62978 => 10
  # .MEM_153 = VDEF <.MEM_20>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.16852 (_14);
  # VUSE <.MEM_153>
  # PT = nonlocal escaped 
  _122 = MEM[(const struct ctypeD.7063 *)_14].D.16885._vptr.facetD.13503;
  # VUSE <.MEM_153>
  # PT = nonlocal escaped 
  _123 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_122 + 48B];
  # PT = anything 
  PROF_127 = [obj_type_ref] OBJ_TYPE_REF(_123;(const struct ctypeD.7063)_14->6);
  if (PROF_127 == _ZNKSt5ctypeIcE8do_widenEcD.16833)
    goto <bb 21>;
  else
    goto <bb 20>;
;;    succ:       21 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 703, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_154 = VDEF <.MEM_153>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _129 = OBJ_TYPE_REF(_123;(const struct ctypeD.7063)_14->6) (_14, 10);
  pretmp_156 = (intD.9) _129;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_134 = PHI <.MEM_20(18), .MEM_153(19), .MEM_154(20)>
  # RANGE [-128, 127]
  # prephitmp_119 = PHI <pretmp_152(18), 10(19), pretmp_156(20)>
  # .MEM_158 = VDEF <.MEM_134>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _111 = _ZNSo3putEcD.20540 (_21, prephitmp_119);
  # DEBUG __osD.62965 => _111
  # .MEM_159 = VDEF <.MEM_158>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNSo5flushEvD.20551 (_111);
  v_22 = v_98 + 1;
  # DEBUG vD.44005 => v_22
  # DEBUG vD.44005 => v_22
  # VUSE <.MEM_159>
  _11 = this_3(D)->_vcsD.41304;
  if (_11 <= v_22)
    goto <bb 14>;
  else
    goto <bb 22>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 21, next block 1, flags: (NEW)
;;    pred:       21 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

}


Creating dr for MEM[(long unsigned int *)this_3(D) + 48B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)this_3(D) + 48B]
Creating dr for MEM[(char * *)this_3(D) + 40B]
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)this_3(D) + 40B]
Creating dr for MEM[(const struct ctype *)_44]._M_widen_ok
analyze_innermost: success.
	base_address: _44
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_44]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_44]._M_widen[10]
analyze_innermost: success.
	base_address: _44
	offset from base address: 0
	constant offset from base address: 67
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_44]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_86]._M_widen_ok
analyze_innermost: success.
	base_address: _86
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_86]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_86]._M_widen[10]
analyze_innermost: success.
	base_address: _86
	offset from base address: 0
	constant offset from base address: 67
	step: 0
	aligned to: 256
	base_object: MEM[(const struct ctype *)_86]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_14]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_14]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_14]._M_widen_ok
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_14]
	Access function 0: 448
Creating dr for MEM[(const struct ctype *)_14]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_14]
	Access function 0: 10
	Access function 1: 456
Creating dr for MEM[(const struct ctype *)_14]._M_widen[10]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const struct ctype *)_14]
	Access function 0: 10
	Access function 1: 456

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:24, LOOPS:1, CONDITIONS:11, STMTS:192)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#57 => &this_3(D)->D.42278
    # DEBUG this => D#57
    # DEBUG __os => os_6(D)
    # DEBUG __str => NULL
    # VUSE <.MEM_4(D)>
    _7 = MEM[(long unsigned int *)this_3(D) + 48B];
    # DEBUG this => D#2
    _5 = (long int) _7;
    # DEBUG this => NULL
    # VUSE <.MEM_4(D)>
    _26 = MEM[(char * *)this_3(D) + 40B];
    # DEBUG this => D#1
    # .MEM_42 = VDEF <.MEM_4(D)>
    _27 = std::__ostream_insert<char, std::char_traits<char> > (os_6(D), _26, _5);
    # DEBUG __out => _27
    # DEBUG __s => " :"
    # DEBUG __s => " :"
    # .MEM_43 = VDEF <.MEM_42>
    std::__ostream_insert<char, std::char_traits<char> > (_27, " :", 2);
    # DEBUG this => _27
    # DEBUG __pf => endl
    # DEBUG __os => _27
    # VUSE <.MEM_43>
    _46 = _27->_vptr.basic_ostream;
    # VUSE <.MEM_43>
    _61 = MEM[(long int *)_46 + -24B];
    _62 = (sizetype) _61;
    _63 = _27 + _62;
    # DEBUG this => _63
    # DEBUG __c => 10
    # VUSE <.MEM_43>
    _44 = MEM[(const struct basic_ios *)_63]._M_ctype;
    # DEBUG __f => _44
    if (_44 == 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 bb_8 bb_16 }, succs = {})
  {
    <bb 3>:
    # .MEM_67 = PHI <.MEM_43(2), .MEM_9(8), .MEM_20(16)>
    # .MEM_163 = VDEF <.MEM_67>
    std::__throw_bad_cast ();

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # DEBUG this => _44
    # DEBUG __c => 10
    # VUSE <.MEM_43>
    _68 = MEM[(const struct ctype *)_44]._M_widen_ok;
    if (_68 != 0)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_8 })
  {
    <bb 5>:
    # VUSE <.MEM_43>
    _71 = MEM[(const struct ctype *)_44]._M_widen[10];
    pretmp_73 = (int) _71;
    goto <bb 8>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_8 bb_7 })
  {
    <bb 6>:
    # DEBUG this => _44
    # DEBUG __c => 10
    # .MEM_135 = VDEF <.MEM_43>
    std::ctype<char>::_M_widen_init (_44);
    # VUSE <.MEM_135>
    _76 = MEM[(const struct ctype *)_44].D.16885._vptr.facet;
    # VUSE <.MEM_135>
    _77 = MEM[(int (*__vtbl_ptr_type) () *)_76 + 48B];
    PROF_81 = [obj_type_ref] OBJ_TYPE_REF(_77;(const struct ctype)_44->6);
    if (PROF_81 == do_widen)
      goto <bb 8>;
    else
      goto <bb 7>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    # .MEM_136 = VDEF <.MEM_135>
    _83 = OBJ_TYPE_REF(_77;(const struct ctype)_44->6) (_44, 10);
    pretmp_80 = (int) _83;

  }
  bb_8 (preds = {bb_5 bb_6 bb_7 }, succs = {bb_3 bb_9 })
  {
    <bb 8>:
    # .MEM_99 = PHI <.MEM_43(5), .MEM_135(6), .MEM_136(7)>
    # prephitmp_138 = PHI <pretmp_73(5), 10(6), pretmp_80(7)>
    # .MEM_140 = VDEF <.MEM_99>
    _66 = std::basic_ostream<char>::put (_27, prephitmp_138);
    # DEBUG __os => _66
    # .MEM_141 = VDEF <.MEM_140>
    std::basic_ostream<char>::flush (_66);
    # VUSE <.MEM_141>
    _8 = this_3(D)->_occupancy;
    # DEBUG __out => os_6(D)
    # DEBUG __s => " occupied = "
    # DEBUG __s => " occupied = "
    # .MEM_45 = VDEF <.MEM_141>
    std::__ostream_insert<char, std::char_traits<char> > (os_6(D), " occupied = ", 12);
    # .MEM_9 = VDEF <.MEM_45>
    _10 = std::basic_ostream<char>::operator<< (os_6(D), _8);
    # DEBUG this => _10
    # DEBUG __pf => endl
    # DEBUG __os => _10
    # VUSE <.MEM_9>
    _53 = _10->_vptr.basic_ostream;
    # VUSE <.MEM_9>
    _54 = MEM[(long int *)_53 + -24B];
    _55 = (sizetype) _54;
    _56 = _10 + _55;
    # DEBUG this => _56
    # DEBUG __c => 10
    # VUSE <.MEM_9>
    _86 = MEM[(const struct basic_ios *)_56]._M_ctype;
    # DEBUG __f => _86
    if (_86 == 0B)
      goto <bb 3>;
    else
      goto <bb 9>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 bb_11 })
  {
    <bb 9>:
    # DEBUG this => _86
    # DEBUG __c => 10
    # VUSE <.MEM_9>
    _87 = MEM[(const struct ctype *)_86]._M_widen_ok;
    if (_87 != 0)
      goto <bb 10>;
    else
      goto <bb 11>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_13 })
  {
    <bb 10>:
    # VUSE <.MEM_9>
    _90 = MEM[(const struct ctype *)_86]._M_widen[10];
    pretmp_125 = (int) _90;
    goto <bb 13>;

  }
  bb_11 (preds = {bb_9 }, succs = {bb_13 bb_12 })
  {
    <bb 11>:
    # DEBUG this => _86
    # DEBUG __c => 10
    # .MEM_143 = VDEF <.MEM_9>
    std::ctype<char>::_M_widen_init (_86);
    # VUSE <.MEM_143>
    _95 = MEM[(const struct ctype *)_86].D.16885._vptr.facet;
    # VUSE <.MEM_143>
    _96 = MEM[(int (*__vtbl_ptr_type) () *)_95 + 48B];
    PROF_100 = [obj_type_ref] OBJ_TYPE_REF(_96;(const struct ctype)_86->6);
    if (PROF_100 == do_widen)
      goto <bb 13>;
    else
      goto <bb 12>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 })
  {
    <bb 12>:
    # .MEM_144 = VDEF <.MEM_143>
    _102 = OBJ_TYPE_REF(_96;(const struct ctype)_86->6) (_86, 10);
    pretmp_79 = (int) _102;

  }
  bb_13 (preds = {bb_10 bb_11 bb_12 }, succs = {bb_14 bb_15 })
  {
    <bb 13>:
    # .MEM_132 = PHI <.MEM_9(10), .MEM_143(11), .MEM_144(12)>
    # prephitmp_139 = PHI <pretmp_125(10), 10(11), pretmp_79(12)>
    # .MEM_148 = VDEF <.MEM_132>
    _59 = std::basic_ostream<char>::put (_10, prephitmp_139);
    # DEBUG __os => _59
    # .MEM_149 = VDEF <.MEM_148>
    std::basic_ostream<char>::flush (_59);
    # DEBUG v => 0
    # VUSE <.MEM_149>
    _112 = this_3(D)->_vcs;
    if (_112 <= 0)
      goto <bb 14>;
    else
      goto <bb 15>;

  }
  bb_14 (preds = {bb_13 bb_21 }, succs = {bb_23 })
  {
    <bb 14>:
    # .MEM_60 = PHI <.MEM_149(13), .MEM_159(21)>

  }
  bb_23 (preds = {bb_14 }, succs = {bb_1 })
  {
    <bb 23>:
    # VUSE <.MEM_60>
    return;

  }
  bb_15 (preds = {bb_13 }, succs = {bb_16 })
  {
    <bb 15>:

  }
  loop_1 (header = 16, latch = 22, niter = , upper_bound = 2147483647)
  {
    bb_16 (preds = {bb_15 bb_22 }, succs = {bb_3 bb_17 })
    {
      <bb 16>:
      # v_98 = PHI <0(15), v_22(22)>
      # .MEM_133 = PHI <.MEM_149(15), .MEM_159(22)>
      # DEBUG v => v_98
      # DEBUG __out => os_6(D)
      # DEBUG __s => "  VC "
      # DEBUG __s => "  VC "
      # .MEM_47 = VDEF <.MEM_133>
      std::__ostream_insert<char, std::char_traits<char> > (os_6(D), "  VC ", 5);
      # .MEM_12 = VDEF <.MEM_47>
      _13 = std::basic_ostream<char>::operator<< (os_6(D), v_98);
      # DEBUG __out => _13
      # DEBUG __s => ": "
      # DEBUG __s => ": "
      # .MEM_151 = VDEF <.MEM_12>
      std::__ostream_insert<char, std::char_traits<char> > (_13, ": ", 2);
      _15 = (long unsigned int) v_98;
      # DEBUG D#58 => &this_3(D)->_vc_occupancy
      # VUSE <.MEM_151>
      _23 = MEM[(int * *)this_3(D) + 112B];
      # DEBUG D#30 => D#58
      # DEBUG __n => _15
      # DEBUG this => D#30
      _40 = _15 * 4;
      _41 = _23 + _40;
      # VUSE <.MEM_151>
      _16 = *_41;
      # DEBUG D#59 => &this_3(D)->_tail_sent
      # VUSE <.MEM_151>
      _25 = MEM[(_Bit_type * *)this_3(D) + 176B];
      # DEBUG D#56 => D#59
      # DEBUG __n => _15
      # DEBUG this => D#56
      _31 = (unsigned int) _15;
      _32 = _31 & 63;
      _33 = _15 >> 6;
      _34 = _33 * 8;
      _35 = _25 + _34;
      # DEBUG this => NULL
      # DEBUG __x => _35
      # DEBUG __y => _32
      # DEBUG this => D#26
      # DEBUG __x => _35
      # DEBUG __y => _32
      # DEBUG this => D#26
      # DEBUG this => D#28
      # DEBUG this => D#28
      _36 = 1 << _32;
      # DEBUG this => NULL
      # DEBUG __x => _35
      # DEBUG __y => _36
      # DEBUG this => NULL
      # VUSE <.MEM_151>
      _37 = *_35;
      _38 = _36 & _37;
      _39 = _38 != 0;
      # DEBUG D#60 => &this_3(D)->_in_use_by
      # VUSE <.MEM_151>
      _24 = MEM[(int * *)this_3(D) + 152B];
      # DEBUG D#30 => D#60
      # DEBUG __n => _15
      # DEBUG this => D#30
      _30 = _24 + _40;
      # VUSE <.MEM_151>
      _17 = *_30;
      # DEBUG __out => os_6(D)
      # DEBUG __s => "in_use_by = "
      # DEBUG __s => "in_use_by = "
      # .MEM_48 = VDEF <.MEM_151>
      std::__ostream_insert<char, std::char_traits<char> > (os_6(D), "in_use_by = ", 12);
      # .MEM_18 = VDEF <.MEM_48>
      _19 = std::basic_ostream<char>::operator<< (os_6(D), _17);
      # DEBUG __out => _19
      # DEBUG __s => ", tail_sent = "
      # DEBUG __s => ", tail_sent = "
      # .MEM_49 = VDEF <.MEM_18>
      std::__ostream_insert<char, std::char_traits<char> > (_19, ", tail_sent = ", 14);
      # DEBUG this => _19
      # DEBUG __n => _39
      _28 = (int) _39;
      # .MEM_50 = VDEF <.MEM_49>
      _29 = std::basic_ostream<char>::_M_insert<bool> (_19, _28);
      # DEBUG __out => _29
      # DEBUG __s => ", occupied = "
      # DEBUG __s => ", occupied = "
      # .MEM_51 = VDEF <.MEM_50>
      std::__ostream_insert<char, std::char_traits<char> > (_29, ", occupied = ", 13);
      # .MEM_20 = VDEF <.MEM_51>
      _21 = std::basic_ostream<char>::operator<< (_29, _16);
      # DEBUG this => _21
      # DEBUG __pf => endl
      # DEBUG __os => _21
      # VUSE <.MEM_20>
      _105 = _21->_vptr.basic_ostream;
      # VUSE <.MEM_20>
      _106 = MEM[(long int *)_105 + -24B];
      _107 = (sizetype) _106;
      _108 = _21 + _107;
      # DEBUG this => _108
      # DEBUG __c => 10
      # VUSE <.MEM_20>
      _14 = MEM[(const struct basic_ios *)_108]._M_ctype;
      # DEBUG __f => _14
      if (_14 == 0B)
        goto <bb 3>;
      else
        goto <bb 17>;

    }
    bb_17 (preds = {bb_16 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # DEBUG this => _14
      # DEBUG __c => 10
      # VUSE <.MEM_20>
      _114 = MEM[(const struct ctype *)_14]._M_widen_ok;
      if (_114 != 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_18 (preds = {bb_17 }, succs = {bb_21 })
    {
      <bb 18>:
      # VUSE <.MEM_20>
      _117 = MEM[(const struct ctype *)_14]._M_widen[10];
      pretmp_152 = (int) _117;
      goto <bb 21>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_21 bb_20 })
    {
      <bb 19>:
      # DEBUG this => _14
      # DEBUG __c => 10
      # .MEM_153 = VDEF <.MEM_20>
      std::ctype<char>::_M_widen_init (_14);
      # VUSE <.MEM_153>
      _122 = MEM[(const struct ctype *)_14].D.16885._vptr.facet;
      # VUSE <.MEM_153>
      _123 = MEM[(int (*__vtbl_ptr_type) () *)_122 + 48B];
      PROF_127 = [obj_type_ref] OBJ_TYPE_REF(_123;(const struct ctype)_14->6);
      if (PROF_127 == do_widen)
        goto <bb 21>;
      else
        goto <bb 20>;

    }
    bb_20 (preds = {bb_19 }, succs = {bb_21 })
    {
      <bb 20>:
      # .MEM_154 = VDEF <.MEM_153>
      _129 = OBJ_TYPE_REF(_123;(const struct ctype)_14->6) (_14, 10);
      pretmp_156 = (int) _129;

    }
    bb_21 (preds = {bb_18 bb_19 bb_20 }, succs = {bb_14 bb_22 })
    {
      <bb 21>:
      # .MEM_134 = PHI <.MEM_20(18), .MEM_153(19), .MEM_154(20)>
      # prephitmp_119 = PHI <pretmp_152(18), 10(19), pretmp_156(20)>
      # .MEM_158 = VDEF <.MEM_134>
      _111 = std::basic_ostream<char>::put (_21, prephitmp_119);
      # DEBUG __os => _111
      # .MEM_159 = VDEF <.MEM_158>
      std::basic_ostream<char>::flush (_111);
      v_22 = v_98 + 1;
      # DEBUG v => v_22
      # DEBUG v => v_22
      # VUSE <.MEM_159>
      _11 = this_3(D)->_vcs;
      if (_11 <= v_22)
        goto <bb 14>;
      else
        goto <bb 22>;

    }
    bb_22 (preds = {bb_21 }, succs = {bb_16 })
    {
      <bb 22>:
      goto <bb 16>;

    }
  }
}

Pass statistics:
----------------

virtual void BufferState::Display(std::ostream&) const (const struct BufferStateD.39590 * const thisD.44003, struct ostreamD.3834 & osD.44001)
{
  char_typeD.16738 D.62982;
  charD.10 __cD.62981;
  char_typeD.16738 D.62979;
  charD.10 __cD.62978;
  char_typeD.19817 D.62976;
  struct basic_ostreamD.3833 & D.62970;
  struct basic_ostreamD.3833 & D.62966;
  char_typeD.16738 D.62963;
  charD.10 __cD.62962;
  char_typeD.16738 D.62960;
  charD.10 __cD.62959;
  char_typeD.19817 D.62957;
  char_typeD.16738 D.62951;
  charD.10 __cD.62950;
  char_typeD.16738 D.62948;
  charD.10 __cD.62947;
  char_typeD.19817 D.62945;
  struct basic_ostreamD.3833 & D.62939;
  struct basic_ostreamD.3833 & D.62936;
  intD.9 vD.44005;
  long intD.12 _5;
  const size_typeD.11502 _7;
  intD.9 _8;
  struct basic_ostreamD.3833 & _10;
  intD.9 _11;
  struct basic_ostreamD.3833 & _13;
  const struct __ctype_typeD.19822 * _14;
  long unsigned intD.14 _15;
  intD.9 _16;
  intD.9 _17;
  struct basic_ostreamD.3833 & _19;
  struct basic_ostreamD.3833 & _21;
  intD.9 * const _23;
  intD.9 * const _24;
  _Bit_typeD.26520 * const _25;
  charD.10 * const _26;
  struct basic_ostreamD.3833 & _27;
  intD.9 _28;
  struct __ostream_typeD.20476 & _29;
  const intD.9 & _30;
  unsigned intD.13 _31;
  unsigned intD.13 _32;
  long unsigned intD.14 _33;
  long unsigned intD.14 _34;
  _Bit_typeD.26520 * _35;
  long unsigned intD.14 _36;
  long unsigned intD.14 _37;
  long unsigned intD.14 _38;
  boolD.2757 _39;
  long unsigned intD.14 _40;
  const intD.9 & _41;
  const struct __ctype_typeD.19822 * _44;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _46;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _53;
  long intD.12 _54;
  sizetype _55;
  struct basic_iosD.3827 * _56;
  struct basic_ostreamD.3833 & _59;
  long intD.12 _61;
  sizetype _62;
  struct basic_iosD.3827 * _63;
  struct basic_ostreamD.3833 & _66;
  charD.10 _68;
  char_typeD.16738 _71;
  intD.9 pretmp_73;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _76;
  intD.9 (*__vtbl_ptr_typeD.2760) () _77;
  intD.9 pretmp_79;
  intD.9 pretmp_80;
  voidD.45 * PROF_81;
  char_typeD.16738 _83;
  const struct __ctype_typeD.19822 * _86;
  charD.10 _87;
  char_typeD.16738 _90;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _95;
  intD.9 (*__vtbl_ptr_typeD.2760) () _96;
  voidD.45 * PROF_100;
  char_typeD.16738 _102;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _105;
  long intD.12 _106;
  sizetype _107;
  struct basic_iosD.3827 * _108;
  struct basic_ostreamD.3833 & _111;
  intD.9 _112;
  charD.10 _114;
  char_typeD.16738 _117;
  intD.9 prephitmp_119;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _122;
  intD.9 (*__vtbl_ptr_typeD.2760) () _123;
  intD.9 pretmp_125;
  voidD.45 * PROF_127;
  char_typeD.16738 _129;
  intD.9 prephitmp_138;
  intD.9 prephitmp_139;
  intD.9 pretmp_152;
  intD.9 pretmp_156;

;;   basic block 2, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#57ptD.0 => &this_3(D)->D.42278
  # DEBUG thisD.53472 => D#57ptD.0
  # DEBUG __osD.53469 => os_6(D)
  # DEBUG __strD.53470 => NULL
  # VUSE <.MEM_4(D)>
  _7 = MEM[(long unsigned intD.14 *)this_3(D) + 48B];
  # DEBUG thisD.52964 => D#2ptD.0
  _5 = (long intD.12) _7;
  # DEBUG thisD.52961 => NULL
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _26 = MEM[(charD.10 * *)this_3(D) + 40B];
  # DEBUG thisD.52890 => D#1ptD.0
  # .MEM_42 = VDEF <.MEM_4(D)>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _27 = _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (os_6(D), _26, _5);
  # DEBUG __outD.53465 => _27
  # DEBUG __sD.53466 => " :"
  # DEBUG __sD.53467 => " :"
  # .MEM_43 = VDEF <.MEM_42>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (_27, " :", 2);
  # DEBUG thisD.53462 => _27
  # DEBUG __pfD.53463 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  # DEBUG __osD.62937 => _27
  # VUSE <.MEM_43>
  # PT = nonlocal escaped null 
  _46 = _27->_vptr.basic_ostreamD.20605;
  # VUSE <.MEM_43>
  _61 = MEM[(long intD.12 *)_46 + -24B];
  # RANGE [0, 18446744073709551615]
  _62 = (sizetype) _61;
  # PT = nonlocal escaped 
  _63 = _27 + _62;
  # DEBUG thisD.62940 => _63
  # DEBUG __cD.62941 => 10
  # VUSE <.MEM_43>
  # PT = nonlocal escaped 
  _44 = MEM[(const struct basic_iosD.3827 *)_63]._M_ctypeD.19829;
  # DEBUG __fD.62942 => _44
  if (_44 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_43(2), .MEM_9(8), .MEM_20(16)>
  # .MEM_163 = VDEF <.MEM_67>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__throw_bad_castvD.3958 ();
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62944 => _44
  # DEBUG __cD.62943 => 10
  # VUSE <.MEM_43>
  _68 = MEM[(const struct ctypeD.7063 *)_44]._M_widen_okD.16744;
  if (_68 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 552, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_43>
  _71 = MEM[(const struct ctypeD.7063 *)_44]._M_widenD.16745[10];
  pretmp_73 = (intD.9) _71;
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 352, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62946 => _44
  # DEBUG __cD.62947 => 10
  # .MEM_135 = VDEF <.MEM_43>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.16852 (_44);
  # VUSE <.MEM_135>
  # PT = nonlocal escaped 
  _76 = MEM[(const struct ctypeD.7063 *)_44].D.16885._vptr.facetD.13503;
  # VUSE <.MEM_135>
  # PT = nonlocal escaped 
  _77 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_76 + 48B];
  # PT = anything 
  PROF_81 = [obj_type_ref] OBJ_TYPE_REF(_77;(const struct ctypeD.7063)_44->6);
  if (PROF_81 == _ZNKSt5ctypeIcE8do_widenEcD.16833)
    goto <bb 8>;
  else
    goto <bb 7>;
;;    succ:       8 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [19.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 70, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [19.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_136 = VDEF <.MEM_135>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _83 = OBJ_TYPE_REF(_77;(const struct ctypeD.7063)_44->6) (_44, 10);
  pretmp_80 = (intD.9) _83;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_43(5), .MEM_135(6), .MEM_136(7)>
  # RANGE [-128, 127]
  # prephitmp_138 = PHI <pretmp_73(5), 10(6), pretmp_80(7)>
  # .MEM_140 = VDEF <.MEM_99>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _66 = _ZNSo3putEcD.20540 (_27, prephitmp_138);
  # DEBUG __osD.62938 => _66
  # .MEM_141 = VDEF <.MEM_140>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNSo5flushEvD.20551 (_66);
  # VUSE <.MEM_141>
  _8 = this_3(D)->_occupancyD.41302;
  # DEBUG __outD.53458 => os_6(D)
  # DEBUG __sD.53459 => " occupied = "
  # DEBUG __sD.53460 => " occupied = "
  # .MEM_45 = VDEF <.MEM_141>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (os_6(D), " occupied = ", 12);
  # .MEM_9 = VDEF <.MEM_45>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _10 = _ZNSolsEiD.20513 (os_6(D), _8);
  # DEBUG thisD.53455 => _10
  # DEBUG __pfD.53456 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  # DEBUG __osD.62934 => _10
  # VUSE <.MEM_9>
  # PT = nonlocal escaped null 
  _53 = _10->_vptr.basic_ostreamD.20605;
  # VUSE <.MEM_9>
  _54 = MEM[(long intD.12 *)_53 + -24B];
  # RANGE [0, 18446744073709551615]
  _55 = (sizetype) _54;
  # PT = nonlocal escaped 
  _56 = _10 + _55;
  # DEBUG thisD.62952 => _56
  # DEBUG __cD.62953 => 10
  # VUSE <.MEM_9>
  # PT = nonlocal escaped 
  _86 = MEM[(const struct basic_iosD.3827 *)_56]._M_ctypeD.19829;
  # DEBUG __fD.62954 => _86
  if (_86 == 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62956 => _86
  # DEBUG __cD.62955 => 10
  # VUSE <.MEM_9>
  _87 = MEM[(const struct ctypeD.7063 *)_86]._M_widen_okD.16744;
  if (_87 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 551, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_9>
  _90 = MEM[(const struct ctypeD.7063 *)_86]._M_widenD.16745[10];
  pretmp_125 = (intD.9) _90;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 352, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62958 => _86
  # DEBUG __cD.62959 => 10
  # .MEM_143 = VDEF <.MEM_9>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.16852 (_86);
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _95 = MEM[(const struct ctypeD.7063 *)_86].D.16885._vptr.facetD.13503;
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _96 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_95 + 48B];
  # PT = anything 
  PROF_100 = [obj_type_ref] OBJ_TYPE_REF(_96;(const struct ctypeD.7063)_86->6);
  if (PROF_100 == _ZNKSt5ctypeIcE8do_widenEcD.16833)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [19.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 70, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [19.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_144 = VDEF <.MEM_143>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _102 = OBJ_TYPE_REF(_96;(const struct ctypeD.7063)_86->6) (_86, 10);
  pretmp_79 = (intD.9) _102;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 904, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_132 = PHI <.MEM_9(10), .MEM_143(11), .MEM_144(12)>
  # RANGE [-128, 127]
  # prephitmp_139 = PHI <pretmp_125(10), 10(11), pretmp_79(12)>
  # .MEM_148 = VDEF <.MEM_132>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _59 = _ZNSo3putEcD.20540 (_10, prephitmp_139);
  # DEBUG __osD.62935 => _59
  # .MEM_149 = VDEF <.MEM_148>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNSo5flushEvD.20551 (_59);
  # DEBUG vD.44005 => 0
  # VUSE <.MEM_149>
  _112 = this_3(D)->_vcsD.41304;
  if (_112 <= 0)
    goto <bb 14>;
  else
    goto <bb 15>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 13, next block 23, flags: (NEW, REACHABLE)
;;    pred:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_149(13), .MEM_159(21)>
;;    succ:       23 [100.0%]  (FALLTHRU)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_60>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 15, loop depth 0, count 0, freq 823, maybe hot
;;    prev block 23, next block 16, flags: (NEW)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # v_98 = PHI <0(15), v_22(22)>
  # .MEM_133 = PHI <.MEM_149(15), .MEM_159(22)>
  # DEBUG vD.44005 => v_98
  # DEBUG __outD.53507 => os_6(D)
  # DEBUG __sD.53508 => "  VC "
  # DEBUG __sD.53509 => "  VC "
  # .MEM_47 = VDEF <.MEM_133>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (os_6(D), "  VC ", 5);
  # .MEM_12 = VDEF <.MEM_47>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _13 = _ZNSolsEiD.20513 (os_6(D), v_98);
  # DEBUG __outD.62967 => _13
  # DEBUG __sD.62968 => ": "
  # DEBUG __sD.62969 => ": "
  # .MEM_151 = VDEF <.MEM_12>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (_13, ": ", 2);
  # RANGE [0, 18446744073709551615]
  _15 = (long unsigned intD.14) v_98;
  # DEBUG D#58ptD.0 => &this_3(D)->_vc_occupancyD.41303
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _23 = MEM[(intD.9 * *)this_3(D) + 112B];
  # DEBUG D#30ptD.0 => D#58ptD.0
  # DEBUG __nD.53504 => _15
  # DEBUG thisD.53505 => D#30ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = _15 * 4;
  # PT = nonlocal escaped 
  _41 = _23 + _40;
  # VUSE <.MEM_151>
  _16 = *_41;
  # DEBUG D#59ptD.0 => &this_3(D)->_tail_sentD.42207
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _25 = MEM[(_Bit_typeD.26520 * *)this_3(D) + 176B];
  # DEBUG D#56ptD.0 => D#59ptD.0
  # DEBUG __nD.53497 => _15
  # DEBUG thisD.53498 => D#56ptD.0
  # RANGE [0, 4294967295]
  _31 = (unsigned intD.13) _15;
  # RANGE [0, 63] NONZERO 63
  _32 = _31 & 63;
  # RANGE [0, 288230376151711743] NONZERO 288230376151711743
  _33 = _15 >> 6;
  # RANGE [0, 2305843009213693944] NONZERO 2305843009213693944
  _34 = _33 * 8;
  # PT = nonlocal escaped 
  _35 = _25 + _34;
  # DEBUG thisD.53441 => NULL
  # DEBUG __xD.53440 => _35
  # DEBUG __yD.53439 => _32
  # DEBUG thisD.53444 => D#26ptD.0
  # DEBUG __xD.53443 => _35
  # DEBUG __yD.53442 => _32
  # DEBUG thisD.53090 => D#26ptD.0
  # DEBUG thisD.53499 => D#28ptD.0
  # DEBUG thisD.53500 => D#28ptD.0
  # RANGE [1, 9223372036854775808]
  _36 = 1 << _32;
  # DEBUG thisD.53181 => NULL
  # DEBUG __xD.53180 => _35
  # DEBUG __yD.53179 => _36
  # DEBUG thisD.53501 => NULL
  # VUSE <.MEM_151>
  _37 = *_35;
  # RANGE [0, 9223372036854775808]
  _38 = _36 & _37;
  # RANGE [0, 1]
  _39 = _38 != 0;
  # DEBUG D#60ptD.0 => &this_3(D)->_in_use_byD.41306
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _24 = MEM[(intD.9 * *)this_3(D) + 152B];
  # DEBUG D#30ptD.0 => D#60ptD.0
  # DEBUG __nD.53493 => _15
  # DEBUG thisD.53494 => D#30ptD.0
  # PT = nonlocal escaped 
  _30 = _24 + _40;
  # VUSE <.MEM_151>
  _17 = *_30;
  # DEBUG __outD.53488 => os_6(D)
  # DEBUG __sD.53489 => "in_use_by = "
  # DEBUG __sD.53490 => "in_use_by = "
  # .MEM_48 = VDEF <.MEM_151>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (os_6(D), "in_use_by = ", 12);
  # .MEM_18 = VDEF <.MEM_48>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _19 = _ZNSolsEiD.20513 (os_6(D), _17);
  # DEBUG __outD.53484 => _19
  # DEBUG __sD.53485 => ", tail_sent = "
  # DEBUG __sD.53486 => ", tail_sent = "
  # .MEM_49 = VDEF <.MEM_18>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (_19, ", tail_sent = ", 14);
  # DEBUG thisD.53481 => _19
  # DEBUG __nD.53482 => _39
  # RANGE [0, 1] NONZERO 1
  _28 = (intD.9) _39;
  # .MEM_50 = VDEF <.MEM_49>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _29 = _ZNSo9_M_insertIbEERSoT_D.20730 (_19, _28);
  # DEBUG __outD.53477 => _29
  # DEBUG __sD.53478 => ", occupied = "
  # DEBUG __sD.53479 => ", occupied = "
  # .MEM_51 = VDEF <.MEM_50>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (_29, ", occupied = ", 13);
  # .MEM_20 = VDEF <.MEM_51>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _21 = _ZNSolsEiD.20513 (_29, _16);
  # DEBUG thisD.53474 => _21
  # DEBUG __pfD.53475 => _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_D.20645
  # DEBUG __osD.62964 => _21
  # VUSE <.MEM_20>
  # PT = nonlocal escaped null 
  _105 = _21->_vptr.basic_ostreamD.20605;
  # VUSE <.MEM_20>
  _106 = MEM[(long intD.12 *)_105 + -24B];
  # RANGE [0, 18446744073709551615]
  _107 = (sizetype) _106;
  # PT = nonlocal escaped 
  _108 = _21 + _107;
  # DEBUG thisD.62971 => _108
  # DEBUG __cD.62972 => 10
  # VUSE <.MEM_20>
  # PT = nonlocal escaped 
  _14 = MEM[(const struct basic_iosD.3827 *)_108]._M_ctypeD.19829;
  # DEBUG __fD.62973 => _14
  if (_14 == 0B)
    goto <bb 3>;
  else
    goto <bb 17>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9096, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62975 => _14
  # DEBUG __cD.62974 => 10
  # VUSE <.MEM_20>
  _114 = MEM[(const struct ctypeD.7063 *)_14]._M_widen_okD.16744;
  if (_114 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_20>
  _117 = MEM[(const struct ctypeD.7063 *)_14]._M_widenD.16745[10];
  pretmp_152 = (intD.9) _117;
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 3546, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.62977 => _14
  # DEBUG __cD.62978 => 10
  # .MEM_153 = VDEF <.MEM_20>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNKSt5ctypeIcE13_M_widen_initEvD.16852 (_14);
  # VUSE <.MEM_153>
  # PT = nonlocal escaped 
  _122 = MEM[(const struct ctypeD.7063 *)_14].D.16885._vptr.facetD.13503;
  # VUSE <.MEM_153>
  # PT = nonlocal escaped 
  _123 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_122 + 48B];
  # PT = anything 
  PROF_127 = [obj_type_ref] OBJ_TYPE_REF(_123;(const struct ctypeD.7063)_14->6);
  if (PROF_127 == _ZNKSt5ctypeIcE8do_widenEcD.16833)
    goto <bb 21>;
  else
    goto <bb 20>;
;;    succ:       21 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [19.8%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 703, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [19.8%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_154 = VDEF <.MEM_153>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _129 = OBJ_TYPE_REF(_123;(const struct ctypeD.7063)_14->6) (_14, 10);
  pretmp_156 = (intD.9) _129;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [80.2%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_134 = PHI <.MEM_20(18), .MEM_153(19), .MEM_154(20)>
  # RANGE [-128, 127]
  # prephitmp_119 = PHI <pretmp_152(18), 10(19), pretmp_156(20)>
  # .MEM_158 = VDEF <.MEM_134>
  # PT = nonlocal escaped 
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _111 = _ZNSo3putEcD.20540 (_21, prephitmp_119);
  # DEBUG __osD.62965 => _111
  # .MEM_159 = VDEF <.MEM_158>
  # USE = nonlocal null 
  # CLB = nonlocal null 
  _ZNSo5flushEvD.20551 (_111);
  v_22 = v_98 + 1;
  # DEBUG vD.44005 => v_22
  # DEBUG vD.44005 => v_22
  # VUSE <.MEM_159>
  _11 = this_3(D)->_vcsD.41304;
  if (_11 <= v_22)
    goto <bb 14>;
  else
    goto <bb 22>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 21, next block 1, flags: (NEW)
;;    pred:       21 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

}



;; Function virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::TakeBuffer(int) (_ZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy10TakeBufferEi, funcdef_no=2174, decl_uid=40403, cgraph_uid=641, symbol_order=642)


Pass statistics:
----------------

virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::TakeBuffer(int) (struct ShiftingDynamicLimitedSharedBufferPolicyD.40395 * const thisD.42850, intD.9 vcD.42848)
Eh tree:
   1 cleanup land:{1,<L7>}
{
  boolD.2757 this__F_F__max_held_slots_lsm.1346D.63350;
  intD.9 this__F_F__max_held_slots_lsm.1345D.63349;
  size_typeD.11502 __dnewD.63318;
  const struct stringD.2845 D.63297;
  intD.9 iD.42853;
  static const charD.10 _ZZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy10TakeBufferEiE19__PRETTY_FUNCTION__D.42852[84] = "virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::TakeBuffer(int)";
  intD.9 _10;
  intD.9 _13;
  intD.9 _19;
  intD.9 _20;
  intD.9 _21;
  struct ModuleD.29620 * _22;
  charD.10 * const _23;
  charD.10 * const _24;
  charD.10 * _34;
  long unsigned intD.14 __dnew.49_35;
  intD.9 pretmp_36;
  long unsigned intD.14 __dnew.49_38;
  charD.10 * const _39;
  charD.10 * _40;
  intD.9 prephitmp_55;
  intD.9 _56;
  intD.9 prephitmp_58;
  intD.9 prephitmp_61;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#773ptD.0 => &this_3(D)->D.40430.D.40391
  # DEBUG thisD.63262 => D#773ptD.0
  # DEBUG vcD.63263 => vc_6(D)
  # VUSE <.MEM_5(D)>
  _19 = MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_3(D)]._active_vcsD.40305;
  _20 = _19 + 1;
  # .MEM_42 = VDEF <.MEM_5(D)>
  MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_3(D)]._active_vcsD.40305 = _20;
  # VUSE <.MEM_42>
  _21 = MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_3(D)]._vcsD.40304;
  if (_20 > _21)
    goto <bb 3>;
  else
    goto <bb 10>;
;;    succ:       3 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.63296 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.63299 => &D.63297
  # DEBUG __sD.63300 => "Number of active VCs is too large."
  # DEBUG __aD.63301 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.63311 => &D.63297
  # DEBUG D#296ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.63314 => D#296ptD.0
  # DEBUG __datD.63313 => &D.63297.D.11539._M_local_bufD.11541
  # DEBUG __aD.63312 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  MEM[(struct _Alloc_hiderD.11518 *)&D.63297]._M_pD.11525 = &D.63297.D.11539._M_local_bufD.11541;
  # DEBUG __sD.63310 => "Number of active VCs is too large."
  # DEBUG thisD.63304 => &D.63297
  # DEBUG __begD.63303 => "Number of active VCs is too large."
  # DEBUG __endD.63302 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG thisD.63308 => &D.63297
  # DEBUG __begD.63307 => "Number of active VCs is too large."
  # DEBUG __endD.63306 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG thisD.63315 => &D.63297
  # DEBUG __begD.63316 => "Number of active VCs is too large."
  # DEBUG __endD.63317 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG __ptrD.55982 => "Number of active VCs is too large."
  # DEBUG __firstD.63341 => "Number of active VCs is too large."
  # DEBUG __lastD.63340 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG D#316ptD.0 => &__firstD.63341
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.63343 => "Number of active VCs is too large."
  # DEBUG __lastD.63342 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # .MEM_44 = VDEF <.MEM_43>
  __dnewD.63318 = 34;
  # .MEM_45 = VDEF <.MEM_44>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  _34 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.63297, &__dnewD.63318, 0);
  # DEBUG D#7ptD.0 => &D.63297
  # DEBUG __pD.63337 => _34
  # DEBUG thisD.63336 => D#7ptD.0
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(charD.10 * *)&D.63297] = _34;
  # VUSE <.MEM_46>
  __dnew.49_35 = __dnewD.63318;
  # DEBUG D#8ptD.0 => &D.63297
  # DEBUG __capacityD.63339 => __dnew.49_35
  # DEBUG thisD.63338 => D#8ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  MEM[(size_typeD.11502 *)&D.63297 + 16B] = __dnew.49_35;
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.63321 => _34
  # DEBUG __k1D.63320 => "Number of active VCs is too large."
  # DEBUG __k2D.63319 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG __dD.63324 => _34
  # DEBUG __sD.63323 => "Number of active VCs is too large."
  # DEBUG __nD.63322 => 34
  # DEBUG __s1D.63327 => _34
  # DEBUG __s2D.63326 => "Number of active VCs is too large."
  # DEBUG __nD.63325 => 34
  # .MEM_49 = VDEF <.MEM_47>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  memcpyD.992 (_34, "Number of active VCs is too large.", 34);
  # VUSE <.MEM_49>
  __dnew.49_38 = __dnewD.63318;
  # DEBUG thisD.63331 => &D.63297
  # DEBUG __nD.63330 => __dnew.49_38
  # DEBUG D#9ptD.0 => &D.63297
  # DEBUG __lengthD.63333 => __dnew.49_38
  # DEBUG thisD.63332 => D#9ptD.0
  # .MEM_50 = VDEF <.MEM_49>
  MEM[(size_typeD.11502 *)&D.63297 + 8B] = __dnew.49_38;
  # VUSE <.MEM_50>
  # PT = nonlocal escaped null { D.63297 } (escaped)
  _39 = MEM[(charD.10 * *)&D.63297];
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.63297 } (escaped)
  _40 = _39 + __dnew.49_38;
  # DEBUG __c1D.63335 => _40
  # DEBUG __c2D.63334 => D#10ptD.0
  # .MEM_51 = VDEF <.MEM_50>
  MEM[(char_typeD.6629 &)_40] = 0;
  # .MEM_52 = VDEF <.MEM_51>
  __dnewD.63318 ={v} {CLOBBER};
  # PT = nonlocal 
  _22 = &MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_3(D)].D.40349.D.40291.D.39647;
  [LP 1] # .MEM_53 = VDEF <.MEM_52>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_22, &D.63297);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.63280 => &D.63297
  # DEBUG thisD.63281 => &D.63297
  # DEBUG thisD.63290 => &D.63297
  # VUSE <.MEM_53>
  # PT = nonlocal escaped null { D.63297 } (escaped)
  _23 = MEM[(charD.10 * *)&D.63297];
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.63291 => &D.63297
  if (&D.63297.D.11539._M_local_bufD.11541 != _23)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.63297.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.63283 => &D.63297
  # DEBUG __sizeD.63282 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.63297
  # DEBUG D#185ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.63286 => _23
  # DEBUG __aD.63284 => D#183ptD.0
  # DEBUG __nD.63285 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.63289 => _23
  # DEBUG thisD.63287 => D#179ptD.0
  # DEBUG D.63288 => D#180ptD.0
  # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  _ZdlPvD.2766 (_23);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_53(4), .MEM_54(5)>
  # DEBUG D#189ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG thisD.63292 => D#189ptD.0
  # DEBUG thisD.63293 => D#189ptD.0
  # DEBUG thisD.63294 => D#189ptD.0
  # .MEM_59 = VDEF <.MEM_27>
  D.63297 ={v} {CLOBBER};
  # DEBUG thisD.63295 => NULL
  # DEBUG thisD.55775 => NULL
  # VUSE <.MEM_59>
  pretmp_36 = this_3(D)->D.40430.D.40391._active_vcsD.40305;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 (EH,EXECUTABLE)
<L7>: [LP 1]
  # DEBUG thisD.63265 => &D.63297
  # DEBUG thisD.63266 => &D.63297
  # DEBUG thisD.63275 => &D.63297
  # VUSE <.MEM_53>
  # PT = nonlocal escaped null { D.63297 } (escaped)
  _24 = MEM[(charD.10 * *)&D.63297];
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.63276 => &D.63297
  if (&D.63297.D.11539._M_local_bufD.11541 != _24)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.63297.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.63268 => &D.63297
  # DEBUG __sizeD.63267 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.63297
  # DEBUG D#185ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.63271 => _24
  # DEBUG __aD.63269 => D#183ptD.0
  # DEBUG __nD.63270 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.63274 => _24
  # DEBUG thisD.63272 => D#179ptD.0
  # DEBUG D.63273 => D#180ptD.0
  # .MEM_60 = VDEF <.MEM_53>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_18 = PHI <.MEM_53(7), .MEM_60(8)>
  # DEBUG D#189ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG thisD.63277 => D#189ptD.0
  # DEBUG thisD.63278 => D#189ptD.0
  # DEBUG thisD.63279 => D#189ptD.0
  # .MEM_65 = VDEF <.MEM_18>
  D.63297 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_41 = PHI <.MEM_59(6), .MEM_42(2)>
  # prephitmp_55 = PHI <pretmp_36(6), _20(2)>
  if (prephitmp_55 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#306ptD.0 => this_3(D)
  # DEBUG D#307ptD.0 => vc_6(D)
  # DEBUG D#308ptD.0 => D#307ptD.0
  # DEBUG vcD.63345 => D#308ptD.0
  # DEBUG D#309ptD.0 => D#306ptD.0
  # DEBUG thisD.63346 => D#309ptD.0
  # .MEM_66 = VDEF <.MEM_41>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  __assert_failD.24398 ("_active_vcs", "buffer_state.cpp", 342, &_ZZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy10TakeBufferEiE19__PRETTY_FUNCTION__D.42852);
;;    succ:      

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483646]
  i_9 = prephitmp_55 + -1;
  # DEBUG iD.42853 => i_9
  # VUSE <.MEM_41>
  _10 = this_3(D)->D.40430.D.40391.D.40349._buf_sizeD.39701;
  # .MEM_11 = VDEF <.MEM_41>
  this_3(D)->D.40430.D.40391._max_held_slotsD.40306 = _10;
  # DEBUG iD.42853 => i_9
  if (i_9 == 0)
    goto <bb 17>;
  else
    goto <bb 13>;
;;    succ:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_31 = PHI <i_9(13), i_15(16)>
  # .MEM_29 = PHI <.MEM_11(13), .MEM_29(16)>
  # prephitmp_61 = PHI <_10(13), _13(16)>
  # DEBUG iD.42853 => i_31
  # RANGE [-1073741824, 1073741823]
  _13 = prephitmp_61 >> 1;
  i_15 = i_31 >> 1;
  # DEBUG iD.42853 => i_15
  # DEBUG iD.42853 => i_15
  if (i_15 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-1073741824, 1073741823]
  # _56 = PHI <_13(14)>
  # this__F_F__max_held_slots_lsm.1345_2 = PHI <_13(14)>
  # .MEM_1 = VDEF <.MEM_29>
  this_3(D)->D.40430.D.40391._max_held_slotsD.40306 = this__F_F__max_held_slots_lsm.1345_2;
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_33 = PHI <.MEM_1(15), .MEM_11(12)>
  # prephitmp_58 = PHI <_56(15), _10(12)>
  if (prephitmp_58 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_17 = VDEF <.MEM_33>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  __assert_failD.24398 ("_max_held_slots > 0", "buffer_state.cpp", 349, &_ZZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy10TakeBufferEiE19__PRETTY_FUNCTION__D.42852);
;;    succ:      

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_33>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._active_vcs
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]
	Access function 0: 1760
Creating dr for MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._active_vcs
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]
	Access function 0: 1760
Creating dr for MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._vcs
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 216
	step: 0
	aligned to: 256
	base_object: MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]
	Access function 0: 1728
Creating dr for MEM[(struct _Alloc_hider *)&D.63297]._M_p
analyze_innermost: success.
	base_address: &D.63297
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.63297]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.63297]
analyze_innermost: success.
	base_address: &D.63297
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.63297]
Creating dr for MEM[(char * *)&D.63297]
analyze_innermost: success.
	base_address: &D.63297
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.63297]
Creating dr for this_3(D)->D.40430.D.40391.D.40349._buf_size
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 104
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 832
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for this_3(D)->D.40430.D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 1792
	Access function 1: 0
	Access function 2: 0
Creating dr for this_3(D)->D.40430.D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 1792
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:21, LOOPS:1, CONDITIONS:8, STMTS:187)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_10 })
  {
    <bb 2>:
    # DEBUG D#773 => &this_3(D)->D.40430.D.40391
    # DEBUG this => D#773
    # DEBUG vc => vc_6(D)
    # VUSE <.MEM_5(D)>
    _19 = MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._active_vcs;
    _20 = _19 + 1;
    # .MEM_42 = VDEF <.MEM_5(D)>
    MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._active_vcs = _20;
    # VUSE <.MEM_42>
    _21 = MEM[(struct LimitedSharedBufferPolicy *)this_3(D)]._vcs;
    if (_20 > _21)
      goto <bb 3>;
    else
      goto <bb 10>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_7 })
  {
    <bb 3>:
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG this => &D.63297
    # DEBUG __s => "Number of active VCs is too large."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.63297
    # DEBUG D#296 => &D.63297._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.63297.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_43 = VDEF <.MEM_42>
    MEM[(struct _Alloc_hider *)&D.63297]._M_p = &D.63297.D.11539._M_local_buf;
    # DEBUG __s => "Number of active VCs is too large."
    # DEBUG this => &D.63297
    # DEBUG __beg => "Number of active VCs is too large."
    # DEBUG __end => &MEM[(void *)"Number of active VCs is too large." + 34B]
    # DEBUG this => &D.63297
    # DEBUG __beg => "Number of active VCs is too large."
    # DEBUG __end => &MEM[(void *)"Number of active VCs is too large." + 34B]
    # DEBUG this => &D.63297
    # DEBUG __beg => "Number of active VCs is too large."
    # DEBUG __end => &MEM[(void *)"Number of active VCs is too large." + 34B]
    # DEBUG __ptr => "Number of active VCs is too large."
    # DEBUG __first => "Number of active VCs is too large."
    # DEBUG __last => &MEM[(void *)"Number of active VCs is too large." + 34B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Number of active VCs is too large."
    # DEBUG __last => &MEM[(void *)"Number of active VCs is too large." + 34B]
    # .MEM_44 = VDEF <.MEM_43>
    __dnew = 34;
    # .MEM_45 = VDEF <.MEM_44>
    _34 = std::__cxx11::basic_string<char>::_M_create (&D.63297, &__dnew, 0);
    # DEBUG D#7 => &D.63297
    # DEBUG __p => _34
    # DEBUG this => D#7
    # .MEM_46 = VDEF <.MEM_45>
    MEM[(char * *)&D.63297] = _34;
    # VUSE <.MEM_46>
    __dnew.49_35 = __dnew;
    # DEBUG D#8 => &D.63297
    # DEBUG __capacity => __dnew.49_35
    # DEBUG this => D#8
    # .MEM_47 = VDEF <.MEM_46>
    MEM[(size_type *)&D.63297 + 16B] = __dnew.49_35;
    # DEBUG D#1 => &D.63297
    # DEBUG this => D#1
    # DEBUG __p => _34
    # DEBUG __k1 => "Number of active VCs is too large."
    # DEBUG __k2 => &MEM[(void *)"Number of active VCs is too large." + 34B]
    # DEBUG __d => _34
    # DEBUG __s => "Number of active VCs is too large."
    # DEBUG __n => 34
    # DEBUG __s1 => _34
    # DEBUG __s2 => "Number of active VCs is too large."
    # DEBUG __n => 34
    # .MEM_49 = VDEF <.MEM_47>
    __builtin_memcpy (_34, "Number of active VCs is too large.", 34);
    # VUSE <.MEM_49>
    __dnew.49_38 = __dnew;
    # DEBUG this => &D.63297
    # DEBUG __n => __dnew.49_38
    # DEBUG D#9 => &D.63297
    # DEBUG __length => __dnew.49_38
    # DEBUG this => D#9
    # .MEM_50 = VDEF <.MEM_49>
    MEM[(size_type *)&D.63297 + 8B] = __dnew.49_38;
    # VUSE <.MEM_50>
    _39 = MEM[(char * *)&D.63297];
    # DEBUG D#1 => &D.63297
    # DEBUG this => D#1
    _40 = _39 + __dnew.49_38;
    # DEBUG __c1 => _40
    # DEBUG __c2 => D#10
    # .MEM_51 = VDEF <.MEM_50>
    MEM[(char_type &)_40] = 0;
    # .MEM_52 = VDEF <.MEM_51>
    __dnew ={v} {CLOBBER};
    _22 = &MEM[(struct LimitedSharedBufferPolicy *)this_3(D)].D.40349.D.40291.D.39647;
    # .MEM_53 = VDEF <.MEM_52>
    Module::Error (_22, &D.63297);

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # DEBUG this => &D.63297
    # DEBUG this => &D.63297
    # DEBUG this => &D.63297
    # VUSE <.MEM_53>
    _23 = MEM[(char * *)&D.63297];
    # DEBUG D#1 => &D.63297
    # DEBUG this => D#1
    # DEBUG this => &D.63297
    if (&D.63297.D.11539._M_local_buf != _23)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:
    # DEBUG D#188 => D.63297.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.63297
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.63297
    # DEBUG this => D#1
    # DEBUG this => &D.63297
    # DEBUG D#185 => &D.63297._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _23
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _23
    # DEBUG this => D#179
    # DEBUG D.63288 => D#180
    # .MEM_54 = VDEF <.MEM_53>
    operator delete (_23);

  }
  bb_6 (preds = {bb_4 bb_5 }, succs = {bb_10 })
  {
    <bb 6>:
    # .MEM_27 = PHI <.MEM_53(4), .MEM_54(5)>
    # DEBUG D#189 => &D.63297._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_59 = VDEF <.MEM_27>
    D.63297 ={v} {CLOBBER};
    # DEBUG this => NULL
    # DEBUG this => NULL
    # VUSE <.MEM_59>
    pretmp_36 = this_3(D)->D.40430.D.40391._active_vcs;
    goto <bb 10>;

  }
  bb_7 (preds = {bb_3 }, succs = {bb_8 bb_9 })
  {
  <L7>:
    # DEBUG this => &D.63297
    # DEBUG this => &D.63297
    # DEBUG this => &D.63297
    # VUSE <.MEM_53>
    _24 = MEM[(char * *)&D.63297];
    # DEBUG D#1 => &D.63297
    # DEBUG this => D#1
    # DEBUG this => &D.63297
    if (&D.63297.D.11539._M_local_buf != _24)
      goto <bb 8>;
    else
      goto <bb 9>;

  }
  bb_8 (preds = {bb_7 }, succs = {bb_9 })
  {
    <bb 8>:
    # DEBUG D#188 => D.63297.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.63297
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.63297
    # DEBUG this => D#1
    # DEBUG this => &D.63297
    # DEBUG D#185 => &D.63297._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _24
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _24
    # DEBUG this => D#179
    # DEBUG D.63273 => D#180
    # .MEM_60 = VDEF <.MEM_53>
    operator delete (_24);

  }
  bb_9 (preds = {bb_7 bb_8 }, succs = {})
  {
    <bb 9>:
    # .MEM_18 = PHI <.MEM_53(7), .MEM_60(8)>
    # DEBUG D#189 => &D.63297._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_65 = VDEF <.MEM_18>
    D.63297 ={v} {CLOBBER};
    resx 1

  }
  bb_10 (preds = {bb_6 bb_2 }, succs = {bb_11 bb_12 })
  {
    <bb 10>:
    # .MEM_41 = PHI <.MEM_59(6), .MEM_42(2)>
    # prephitmp_55 = PHI <pretmp_36(6), _20(2)>
    if (prephitmp_55 == 0)
      goto <bb 11>;
    else
      goto <bb 12>;

  }
  bb_11 (preds = {bb_10 }, succs = {})
  {
    <bb 11>:
    # DEBUG D#306 => this_3(D)
    # DEBUG D#307 => vc_6(D)
    # DEBUG D#308 => D#307
    # DEBUG vc => D#308
    # DEBUG D#309 => D#306
    # DEBUG this => D#309
    # .MEM_66 = VDEF <.MEM_41>
    __assert_fail ("_active_vcs", "buffer_state.cpp", 342, &__PRETTY_FUNCTION__);

  }
  bb_12 (preds = {bb_10 }, succs = {bb_17 bb_13 })
  {
    <bb 12>:
    i_9 = prephitmp_55 + -1;
    # DEBUG i => i_9
    # VUSE <.MEM_41>
    _10 = this_3(D)->D.40430.D.40391.D.40349._buf_size;
    # .MEM_11 = VDEF <.MEM_41>
    this_3(D)->D.40430.D.40391._max_held_slots = _10;
    # DEBUG i => i_9
    if (i_9 == 0)
      goto <bb 17>;
    else
      goto <bb 13>;

  }
  bb_13 (preds = {bb_12 }, succs = {bb_14 })
  {
    <bb 13>:

  }
  bb_15 (preds = {bb_14 }, succs = {bb_20 })
  {
    <bb 15>:
    # _56 = PHI <_13(14)>

  }
  bb_20 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 20>:
    # .MEM_1 = VDEF <.MEM_29>
    this_3(D)->D.40430.D.40391._max_held_slots = _56;
    goto <bb 17>;

  }
  bb_17 (preds = {bb_20 bb_12 }, succs = {bb_18 bb_19 })
  {
    <bb 17>:
    # .MEM_33 = PHI <.MEM_1(20), .MEM_11(12)>
    # prephitmp_58 = PHI <_56(20), _10(12)>
    if (prephitmp_58 <= 0)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {})
  {
    <bb 18>:
    # .MEM_17 = VDEF <.MEM_33>
    __assert_fail ("_max_held_slots > 0", "buffer_state.cpp", 349, &__PRETTY_FUNCTION__);

  }
  bb_19 (preds = {bb_17 }, succs = {bb_1 })
  {
    <bb 19>:
    # VUSE <.MEM_33>
    return;

  }
  loop_1 (header = 14, latch = 16, niter = )
  {
    bb_14 (preds = {bb_13 bb_16 }, succs = {bb_15 bb_16 })
    {
      <bb 14>:
      # i_31 = PHI <i_9(13), i_15(16)>
      # .MEM_29 = PHI <.MEM_11(13), .MEM_29(16)>
      # prephitmp_61 = PHI <_10(13), _13(16)>
      # DEBUG i => i_31
      _13 = prephitmp_61 >> 1;
      i_15 = i_31 >> 1;
      # DEBUG i => i_15
      # DEBUG i => i_15
      if (i_15 == 0)
        goto <bb 15>;
      else
        goto <bb 16>;

    }
    bb_16 (preds = {bb_14 }, succs = {bb_14 })
    {
      <bb 16>:
      goto <bb 14>;

    }
  }
}

Pass statistics:
----------------

virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::TakeBuffer(int) (struct ShiftingDynamicLimitedSharedBufferPolicyD.40395 * const thisD.42850, intD.9 vcD.42848)
Eh tree:
   1 cleanup land:{1,<L7>}
{
  boolD.2757 this__F_F__max_held_slots_lsm.1346D.63350;
  intD.9 this__F_F__max_held_slots_lsm.1345D.63349;
  size_typeD.11502 __dnewD.63318;
  const struct stringD.2845 D.63297;
  intD.9 iD.42853;
  static const charD.10 _ZZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy10TakeBufferEiE19__PRETTY_FUNCTION__D.42852[84] = "virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::TakeBuffer(int)";
  intD.9 _10;
  intD.9 _13;
  intD.9 _19;
  intD.9 _20;
  intD.9 _21;
  struct ModuleD.29620 * _22;
  charD.10 * const _23;
  charD.10 * const _24;
  charD.10 * _34;
  long unsigned intD.14 __dnew.49_35;
  intD.9 pretmp_36;
  long unsigned intD.14 __dnew.49_38;
  charD.10 * const _39;
  charD.10 * _40;
  intD.9 prephitmp_55;
  intD.9 _56;
  intD.9 prephitmp_58;
  intD.9 prephitmp_61;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#773ptD.0 => &this_3(D)->D.40430.D.40391
  # DEBUG thisD.63262 => D#773ptD.0
  # DEBUG vcD.63263 => vc_6(D)
  # VUSE <.MEM_5(D)>
  _19 = MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_3(D)]._active_vcsD.40305;
  _20 = _19 + 1;
  # .MEM_42 = VDEF <.MEM_5(D)>
  MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_3(D)]._active_vcsD.40305 = _20;
  # VUSE <.MEM_42>
  _21 = MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_3(D)]._vcsD.40304;
  if (_20 > _21)
    goto <bb 3>;
  else
    goto <bb 10>;
;;    succ:       3 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.63296 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.63299 => &D.63297
  # DEBUG __sD.63300 => "Number of active VCs is too large."
  # DEBUG __aD.63301 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.63311 => &D.63297
  # DEBUG D#296ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.63314 => D#296ptD.0
  # DEBUG __datD.63313 => &D.63297.D.11539._M_local_bufD.11541
  # DEBUG __aD.63312 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_43 = VDEF <.MEM_42>
  MEM[(struct _Alloc_hiderD.11518 *)&D.63297]._M_pD.11525 = &D.63297.D.11539._M_local_bufD.11541;
  # DEBUG __sD.63310 => "Number of active VCs is too large."
  # DEBUG thisD.63304 => &D.63297
  # DEBUG __begD.63303 => "Number of active VCs is too large."
  # DEBUG __endD.63302 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG thisD.63308 => &D.63297
  # DEBUG __begD.63307 => "Number of active VCs is too large."
  # DEBUG __endD.63306 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG thisD.63315 => &D.63297
  # DEBUG __begD.63316 => "Number of active VCs is too large."
  # DEBUG __endD.63317 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG __ptrD.55982 => "Number of active VCs is too large."
  # DEBUG __firstD.63341 => "Number of active VCs is too large."
  # DEBUG __lastD.63340 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG D#316ptD.0 => &__firstD.63341
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.63343 => "Number of active VCs is too large."
  # DEBUG __lastD.63342 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # .MEM_44 = VDEF <.MEM_43>
  __dnewD.63318 = 34;
  # .MEM_45 = VDEF <.MEM_44>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  _34 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.63297, &__dnewD.63318, 0);
  # DEBUG D#7ptD.0 => &D.63297
  # DEBUG __pD.63337 => _34
  # DEBUG thisD.63336 => D#7ptD.0
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(charD.10 * *)&D.63297] = _34;
  # VUSE <.MEM_46>
  __dnew.49_35 = __dnewD.63318;
  # DEBUG D#8ptD.0 => &D.63297
  # DEBUG __capacityD.63339 => __dnew.49_35
  # DEBUG thisD.63338 => D#8ptD.0
  # .MEM_47 = VDEF <.MEM_46>
  MEM[(size_typeD.11502 *)&D.63297 + 16B] = __dnew.49_35;
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.63321 => _34
  # DEBUG __k1D.63320 => "Number of active VCs is too large."
  # DEBUG __k2D.63319 => &MEM[(voidD.45 *)"Number of active VCs is too large." + 34B]
  # DEBUG __dD.63324 => _34
  # DEBUG __sD.63323 => "Number of active VCs is too large."
  # DEBUG __nD.63322 => 34
  # DEBUG __s1D.63327 => _34
  # DEBUG __s2D.63326 => "Number of active VCs is too large."
  # DEBUG __nD.63325 => 34
  # .MEM_49 = VDEF <.MEM_47>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  memcpyD.992 (_34, "Number of active VCs is too large.", 34);
  # VUSE <.MEM_49>
  __dnew.49_38 = __dnewD.63318;
  # DEBUG thisD.63331 => &D.63297
  # DEBUG __nD.63330 => __dnew.49_38
  # DEBUG D#9ptD.0 => &D.63297
  # DEBUG __lengthD.63333 => __dnew.49_38
  # DEBUG thisD.63332 => D#9ptD.0
  # .MEM_50 = VDEF <.MEM_49>
  MEM[(size_typeD.11502 *)&D.63297 + 8B] = __dnew.49_38;
  # VUSE <.MEM_50>
  # PT = nonlocal escaped null { D.63297 } (escaped)
  _39 = MEM[(charD.10 * *)&D.63297];
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.63297 } (escaped)
  _40 = _39 + __dnew.49_38;
  # DEBUG __c1D.63335 => _40
  # DEBUG __c2D.63334 => D#10ptD.0
  # .MEM_51 = VDEF <.MEM_50>
  MEM[(char_typeD.6629 &)_40] = 0;
  # .MEM_52 = VDEF <.MEM_51>
  __dnewD.63318 ={v} {CLOBBER};
  # PT = nonlocal 
  _22 = &MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_3(D)].D.40349.D.40291.D.39647;
  [LP 1] # .MEM_53 = VDEF <.MEM_52>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_22, &D.63297);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.63280 => &D.63297
  # DEBUG thisD.63281 => &D.63297
  # DEBUG thisD.63290 => &D.63297
  # VUSE <.MEM_53>
  # PT = nonlocal escaped null { D.63297 } (escaped)
  _23 = MEM[(charD.10 * *)&D.63297];
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.63291 => &D.63297
  if (&D.63297.D.11539._M_local_bufD.11541 != _23)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 245, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.63297.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.63283 => &D.63297
  # DEBUG __sizeD.63282 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.63297
  # DEBUG D#185ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.63286 => _23
  # DEBUG __aD.63284 => D#183ptD.0
  # DEBUG __nD.63285 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.63289 => _23
  # DEBUG thisD.63287 => D#179ptD.0
  # DEBUG D.63288 => D#180ptD.0
  # .MEM_54 = VDEF <.MEM_53>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  _ZdlPvD.2766 (_23);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_27 = PHI <.MEM_53(4), .MEM_54(5)>
  # DEBUG D#189ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG thisD.63292 => D#189ptD.0
  # DEBUG thisD.63293 => D#189ptD.0
  # DEBUG thisD.63294 => D#189ptD.0
  # .MEM_59 = VDEF <.MEM_27>
  D.63297 ={v} {CLOBBER};
  # DEBUG thisD.63295 => NULL
  # DEBUG thisD.55775 => NULL
  # VUSE <.MEM_59>
  pretmp_36 = this_3(D)->D.40430.D.40391._active_vcsD.40305;
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       3 (EH,EXECUTABLE)
<L7>: [LP 1]
  # DEBUG thisD.63265 => &D.63297
  # DEBUG thisD.63266 => &D.63297
  # DEBUG thisD.63275 => &D.63297
  # VUSE <.MEM_53>
  # PT = nonlocal escaped null { D.63297 } (escaped)
  _24 = MEM[(charD.10 * *)&D.63297];
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.63276 => &D.63297
  if (&D.63297.D.11539._M_local_bufD.11541 != _24)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.63297.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.63268 => &D.63297
  # DEBUG __sizeD.63267 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.63297
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.63297
  # DEBUG D#185ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.63271 => _24
  # DEBUG __aD.63269 => D#183ptD.0
  # DEBUG __nD.63270 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.63274 => _24
  # DEBUG thisD.63272 => D#179ptD.0
  # DEBUG D.63273 => D#180ptD.0
  # .MEM_60 = VDEF <.MEM_53>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_18 = PHI <.MEM_53(7), .MEM_60(8)>
  # DEBUG D#189ptD.0 => &D.63297._M_dataplusD.11519
  # DEBUG thisD.63277 => D#189ptD.0
  # DEBUG thisD.63278 => D#189ptD.0
  # DEBUG thisD.63279 => D#189ptD.0
  # .MEM_65 = VDEF <.MEM_18>
  D.63297 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_41 = PHI <.MEM_59(6), .MEM_42(2)>
  # prephitmp_55 = PHI <pretmp_36(6), _20(2)>
  if (prephitmp_55 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#306ptD.0 => this_3(D)
  # DEBUG D#307ptD.0 => vc_6(D)
  # DEBUG D#308ptD.0 => D#307ptD.0
  # DEBUG vcD.63345 => D#308ptD.0
  # DEBUG D#309ptD.0 => D#306ptD.0
  # DEBUG thisD.63346 => D#309ptD.0
  # .MEM_66 = VDEF <.MEM_41>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  __assert_failD.24398 ("_active_vcs", "buffer_state.cpp", 342, &_ZZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy10TakeBufferEiE19__PRETTY_FUNCTION__D.42852);
;;    succ:      

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483646]
  i_9 = prephitmp_55 + -1;
  # DEBUG iD.42853 => i_9
  # VUSE <.MEM_41>
  _10 = this_3(D)->D.40430.D.40391.D.40349._buf_sizeD.39701;
  # .MEM_11 = VDEF <.MEM_41>
  this_3(D)->D.40430.D.40391._max_held_slotsD.40306 = _10;
  # DEBUG iD.42853 => i_9
  if (i_9 == 0)
    goto <bb 17>;
  else
    goto <bb 13>;
;;    succ:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_31 = PHI <i_9(13), i_15(16)>
  # .MEM_29 = PHI <.MEM_11(13), .MEM_29(16)>
  # prephitmp_61 = PHI <_10(13), _13(16)>
  # DEBUG iD.42853 => i_31
  # RANGE [-1073741824, 1073741823]
  _13 = prephitmp_61 >> 1;
  i_15 = i_31 >> 1;
  # DEBUG iD.42853 => i_15
  # DEBUG iD.42853 => i_15
  if (i_15 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 20, flags: (NEW)
;;    pred:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-1073741824, 1073741823]
  # _56 = PHI <_13(14)>
;;    succ:       20 [100.0%]  (FALLTHRU)

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 16, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU)
  # .MEM_1 = VDEF <.MEM_29>
  this_3(D)->D.40430.D.40391._max_held_slotsD.40306 = _56;
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 20, next block 17, flags: (NEW)
;;    pred:       14 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_33 = PHI <.MEM_1(20), .MEM_11(12)>
  # prephitmp_58 = PHI <_56(20), _10(12)>
  if (prephitmp_58 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_17 = VDEF <.MEM_33>
  # USE = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42852 D.63297 D.63318 } (nonlocal, escaped)
  __assert_failD.24398 ("_max_held_slots > 0", "buffer_state.cpp", 349, &_ZZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy10TakeBufferEiE19__PRETTY_FUNCTION__D.42852);
;;    succ:      

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_33>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (_ZN11BufferState32SimpleFeedbackSharedBufferPolicyD0Ev, funcdef_no=2925, decl_uid=41276, cgraph_uid=1392, symbol_order=1395)


Pass statistics:
----------------

virtual BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (struct SimpleFeedbackSharedBufferPolicyD.41259 * const thisD.41277)
{
  intD.9 * * __nstartD.63833;
  struct queueD.40450 * __firstD.63805;
  intD.9 * _5;
  intD.9 * _7;
  intD.9 * _8;
  struct queueD.40450 * _10;
  intD.9 * * _16;
  intD.9 * * _17;
  intD.9 * * _18;
  intD.9 * _21;
  intD.9 * _24;
  intD.9 * _25;
  intD.9 * _26;
  intD.9 * _27;
  struct ModuleD.29620 * * _29;
  charD.10 * const _30;
  const charD.10 * _31;
  charD.10 * const _32;
  const charD.10 * _33;
  intD.9 * * pretmp_50;
  intD.9 * * prephitmp_51;
  struct queueD.40450 * pretmp_59;
  struct queueD.40450 * prephitmp_60;

;;   basic block 2, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.63755 => this_2(D)
  # .MEM_48 = VDEF <.MEM_1(D)>
  this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState32SimpleFeedbackSharedBufferPolicyED.41298 + 16B];
  # DEBUG D#467ptD.0 => &this_2(D)->_pending_creditsD.41261
  # DEBUG thisD.63756 => D#467ptD.0
  # DEBUG D#154ptD.0 => &D#467ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#467ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#467ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#467ptD.0->D.40238
  # DEBUG thisD.63757 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_48>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 312B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _5
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63760 => D#155ptD.0
  # DEBUG __pD.63759 => _5
  # DEBUG __nD.63758 => D#148ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63764 => _5
  # DEBUG __aD.63762 => D#144ptD.0
  # DEBUG __nD.63763 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63767 => _5
  # DEBUG thisD.63765 => D#140ptD.0
  # DEBUG D.63766 => D#141ptD.0
  # .MEM_49 = VDEF <.MEM_48>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_48(2), .MEM_49(3)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63768 => D#147ptD.0
  # DEBUG thisD.63769 => D#147ptD.0
  # DEBUG thisD.63770 => D#147ptD.0
  # .MEM_54 = VDEF <.MEM_34>
  MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
  # DEBUG D#784ptD.0 => &this_2(D)->D.41295
  # DEBUG thisD.63771 => D#784ptD.0
  # .MEM_55 = VDEF <.MEM_54>
  MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)].D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#783ptD.0 => &MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)]._flit_sent_timeD.41197
  # DEBUG thisD.63802 => D#783ptD.0
  # DEBUG D#463ptD.0 => &D#783ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _10 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  __first_11 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.63805 => __first_11
  # DEBUG __lastD.63804 => _10
  # DEBUG __firstD.63810 => __first_11
  if (_10 == __first_11)
    goto <bb 16>;
  else
    goto <bb 5>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_28 = PHI <__first_11(5), __first_14(14)>
  # .MEM_145 = PHI <.MEM_55(5), .MEM_63(14)>
  # DEBUG __firstD.63810 => __first_28
  # DEBUG __rD.57673 => __first_28
  # DEBUG __pointerD.63811 => NULL
  # DEBUG thisD.63812 => NULL
  # DEBUG thisD.63813 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#782ptD.0 => &MEM[(struct dequeD.40449 *)__first_28].D.43590
  # DEBUG thisD.63828 => D#782ptD.0
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_mapD.43043;
  if (_16 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;
;;    succ:       7 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _17 = MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _18 = _17 + 8;
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  __nstart_19 = MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.63834 => D#782ptD.0
  # DEBUG __nstartD.63833 => __nstart_19
  # DEBUG __nfinishD.63832 => _18
  # DEBUG __nD.63835 => __nstart_19
  # DEBUG __nD.63835 => __nstart_19
  if (_18 <= __nstart_19)
    goto <bb 12>;
  else
    goto <bb 8>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_146 = PHI <__nstart_19(8), __nstart_22(10)>
  # .MEM_143 = PHI <.MEM_145(8), .MEM_56(10)>
  # DEBUG __nD.63835 => __nstart_146
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _21 = *__nstart_146;
  # DEBUG thisD.63837 => D#782ptD.0
  # DEBUG __pD.63836 => _21
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#782ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.63841 => _21
  # DEBUG __aD.63839 => D#144ptD.0
  # DEBUG __nD.63840 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63844 => _21
  # DEBUG thisD.63842 => D#140ptD.0
  # DEBUG D.63843 => D#141ptD.0
  # .MEM_56 = VDEF <.MEM_143>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_21);
  # PT = nonlocal escaped 
  __nstart_22 = __nstart_146 + 8;
  # DEBUG __nD.63835 => __nstart_22
  # DEBUG __nD.63835 => __nstart_22
  if (_18 <= __nstart_22)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_56>
  pretmp_50 = MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_mapD.43043;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_142 = PHI <.MEM_56(11), .MEM_145(7)>
  # PT = nonlocal escaped 
  # prephitmp_51 = PHI <pretmp_50(11), _16(7)>
  # DEBUG D#447ptD.0 => D#782ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#786ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#782ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.63847 => D#786ptD.0
  # DEBUG thisD.63845 => D#445ptD.0
  # DEBUG __nD.63846 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.63848
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.63851 => D#786ptD.0
  # DEBUG __aD.63849 => D#265ptD.0
  # DEBUG __nD.63850 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.63854 => D#786ptD.0
  # DEBUG thisD.63852 => D#261ptD.0
  # DEBUG D.63853 => D#262ptD.0
  # .MEM_57 = VDEF <.MEM_142>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_51);
  # DEBUG thisD.57611 => &__map_allocD.63848
  # DEBUG thisD.57590 => &__map_allocD.63848
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       6 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_145(6), .MEM_57(12)>
  # DEBUG D#448ptD.0 => &D#782ptD.0->_M_implD.43041
  # DEBUG thisD.63829 => D#448ptD.0
  # DEBUG thisD.63830 => D#448ptD.0
  # DEBUG thisD.63831 => D#448ptD.0
  # .MEM_63 = VDEF <.MEM_37>
  MEM[(struct  &)__first_28] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_14 = __first_28 + 80;
  # DEBUG __firstD.63810 => __first_14
  # DEBUG __firstD.63810 => __first_14
  if (_10 == __first_14)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_63>
  pretmp_59 = MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_144 = PHI <.MEM_63(15), .MEM_55(4)>
  # PT = nonlocal escaped 
  # prephitmp_60 = PHI <pretmp_59(15), __first_11(4)>
  # DEBUG D#464ptD.0 => &D#783ptD.0->D.41195
  # DEBUG thisD.63814 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#785ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#785ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.63817 => D#785ptD.0
  # DEBUG thisD.63815 => D#253ptD.0
  # DEBUG __nD.63816 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_60 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.63821 => D#785ptD.0
  # DEBUG __aD.63819 => D#248ptD.0
  # DEBUG __nD.63820 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.63824 => D#785ptD.0
  # DEBUG thisD.63822 => D#244ptD.0
  # DEBUG D.63823 => D#245ptD.0
  # .MEM_64 = VDEF <.MEM_144>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_60);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_144(16), .MEM_64(17)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.63825 => D#255ptD.0
  # DEBUG thisD.63826 => D#255ptD.0
  # DEBUG thisD.63827 => D#255ptD.0
  # .MEM_69 = VDEF <.MEM_38>
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466ptD.0 => &D#784ptD.0->_round_trip_timeD.40448
  # DEBUG thisD.63772 => D#466ptD.0
  # DEBUG D#154ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.63773 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _7
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63776 => D#155ptD.0
  # DEBUG __pD.63775 => _7
  # DEBUG __nD.63774 => D#148ptD.0
  if (_7 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63780 => _7
  # DEBUG __aD.63778 => D#144ptD.0
  # DEBUG __nD.63779 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63783 => _7
  # DEBUG thisD.63781 => D#140ptD.0
  # DEBUG D.63782 => D#141ptD.0
  # .MEM_70 = VDEF <.MEM_69>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_69(18), .MEM_70(19)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63784 => D#147ptD.0
  # DEBUG thisD.63785 => D#147ptD.0
  # DEBUG thisD.63786 => D#147ptD.0
  # .MEM_75 = VDEF <.MEM_39>
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465ptD.0 => &D#784ptD.0->_occupancy_limitD.40447
  # DEBUG thisD.63787 => D#465ptD.0
  # DEBUG D#154ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.63788 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _8
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63791 => D#155ptD.0
  # DEBUG __pD.63790 => _8
  # DEBUG __nD.63789 => D#148ptD.0
  if (_8 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63795 => _8
  # DEBUG __aD.63793 => D#144ptD.0
  # DEBUG __nD.63794 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63798 => _8
  # DEBUG thisD.63796 => D#140ptD.0
  # DEBUG D.63797 => D#141ptD.0
  # .MEM_76 = VDEF <.MEM_75>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_75(20), .MEM_76(21)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63799 => D#147ptD.0
  # DEBUG thisD.63800 => D#147ptD.0
  # DEBUG thisD.63801 => D#147ptD.0
  # .MEM_81 = VDEF <.MEM_40>
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#781ptD.0 => &MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)].D.41247
  # DEBUG thisD.63855 => D#781ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)].D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#224ptD.0 => &D#781ptD.0->_reserved_slotsD.40245
  # DEBUG thisD.63856 => D#224ptD.0
  # DEBUG D#154ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.63857 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_82>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _24
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63860 => D#155ptD.0
  # DEBUG __pD.63859 => _24
  # DEBUG __nD.63858 => D#148ptD.0
  if (_24 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63864 => _24
  # DEBUG __aD.63862 => D#144ptD.0
  # DEBUG __nD.63863 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63867 => _24
  # DEBUG thisD.63865 => D#140ptD.0
  # DEBUG D.63866 => D#141ptD.0
  # .MEM_83 = VDEF <.MEM_82>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_41 = PHI <.MEM_82(22), .MEM_83(23)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63868 => D#147ptD.0
  # DEBUG thisD.63869 => D#147ptD.0
  # DEBUG thisD.63870 => D#147ptD.0
  # .MEM_88 = VDEF <.MEM_41>
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223ptD.0 => &D#781ptD.0->_private_buf_occupancyD.40242
  # DEBUG thisD.63871 => D#223ptD.0
  # DEBUG D#154ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.63872 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_88>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _25
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63875 => D#155ptD.0
  # DEBUG __pD.63874 => _25
  # DEBUG __nD.63873 => D#148ptD.0
  if (_25 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63879 => _25
  # DEBUG __aD.63877 => D#144ptD.0
  # DEBUG __nD.63878 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63882 => _25
  # DEBUG thisD.63880 => D#140ptD.0
  # DEBUG D.63881 => D#141ptD.0
  # .MEM_89 = VDEF <.MEM_88>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_42 = PHI <.MEM_88(24), .MEM_89(25)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63883 => D#147ptD.0
  # DEBUG thisD.63884 => D#147ptD.0
  # DEBUG thisD.63885 => D#147ptD.0
  # .MEM_94 = VDEF <.MEM_42>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222ptD.0 => &D#781ptD.0->_private_buf_sizeD.40241
  # DEBUG thisD.63886 => D#222ptD.0
  # DEBUG D#154ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.63887 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _26 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _26
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63890 => D#155ptD.0
  # DEBUG __pD.63889 => _26
  # DEBUG __nD.63888 => D#148ptD.0
  if (_26 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63894 => _26
  # DEBUG __aD.63892 => D#144ptD.0
  # DEBUG __nD.63893 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63897 => _26
  # DEBUG thisD.63895 => D#140ptD.0
  # DEBUG D.63896 => D#141ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_43 = PHI <.MEM_94(26), .MEM_95(27)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63898 => D#147ptD.0
  # DEBUG thisD.63899 => D#147ptD.0
  # DEBUG thisD.63900 => D#147ptD.0
  # .MEM_100 = VDEF <.MEM_43>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221ptD.0 => &D#781ptD.0->_private_buf_vc_mapD.40240
  # DEBUG thisD.63901 => D#221ptD.0
  # DEBUG D#154ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.63902 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_100>
  # PT = nonlocal escaped 
  _27 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _27
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63905 => D#155ptD.0
  # DEBUG __pD.63904 => _27
  # DEBUG __nD.63903 => D#148ptD.0
  if (_27 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63909 => _27
  # DEBUG __aD.63907 => D#144ptD.0
  # DEBUG __nD.63908 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63912 => _27
  # DEBUG thisD.63910 => D#140ptD.0
  # DEBUG D.63911 => D#141ptD.0
  # .MEM_101 = VDEF <.MEM_100>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_27);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_100(28), .MEM_101(29)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63913 => D#147ptD.0
  # DEBUG thisD.63914 => D#147ptD.0
  # DEBUG thisD.63915 => D#147ptD.0
  # .MEM_106 = VDEF <.MEM_44>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220ptD.0 => &D#781ptD.0->D.40291
  # DEBUG thisD.63916 => D#220ptD.0
  # DEBUG D#780ptD.0 => &MEM[(struct BufferPolicyD.39592 *)this_2(D)].D.39647
  # DEBUG thisD.63917 => D#780ptD.0
  # .MEM_108 = VDEF <.MEM_106>
  MEM[(struct ModuleD.29620 *)this_2(D)]._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTV6ModuleD.30420 + 16B];
  # DEBUG D#219ptD.0 => &D#780ptD.0->_childrenD.30370
  # DEBUG thisD.63918 => D#219ptD.0
  # DEBUG D#213ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.54616 => D#213ptD.0
  # DEBUG D#216ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_finishD.29862
  # DEBUG D#215ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_startD.29861
  # DEBUG D#118ptD.0 => D#215ptD.0
  # DEBUG D#119ptD.0 => D#216ptD.0
  # DEBUG __firstD.54615 => D#118ptD.0
  # DEBUG __lastD.54614 => D#119ptD.0
  # DEBUG D.54613 => D#120ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG __firstD.54036 => D#114ptD.0
  # DEBUG __lastD.54035 => D#115ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D.54025 => D#110ptD.0
  # DEBUG D.54024 => D#111ptD.0
  # DEBUG D#214ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.63919 => D#214ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0->_M_implD.29859._M_end_of_storageD.29863
  # DEBUG D#211ptD.0 => (long intD.12) D#212ptD.0
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _29 = MEM[(struct _Vector_baseD.29626 *)this_2(D) + 72B]._M_implD.29859._M_startD.29861;
  # DEBUG D#210ptD.0 => (long intD.12) _29
  # DEBUG D#209ptD.0 => D#211ptD.0 - D#210ptD.0
  # DEBUG D#208ptD.0 => D#209ptD.0 /[ex] 8
  # DEBUG D#205ptD.0 => D#214ptD.0
  # DEBUG D#206ptD.0 => (long unsigned intD.14) D#208ptD.0
  # DEBUG __pD.63922 => _29
  # DEBUG thisD.63920 => D#205ptD.0
  # DEBUG __nD.63921 => D#206ptD.0
  # DEBUG D#204ptD.0 => D#206ptD.0
  # DEBUG D#203ptD.0 => D#205ptD.0
  if (_29 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#202ptD.0 => &D#203ptD.0->_M_implD.29859
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __pD.63926 => _29
  # DEBUG __aD.63924 => D#200ptD.0
  # DEBUG __nD.63925 => D#201ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG __pD.63929 => _29
  # DEBUG thisD.63927 => D#196ptD.0
  # DEBUG D.63928 => D#197ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_29);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_45 = PHI <.MEM_108(30), .MEM_109(31)>
  # DEBUG D#207ptD.0 => &D#214ptD.0->_M_implD.29859
  # DEBUG thisD.63930 => D#207ptD.0
  # DEBUG thisD.63931 => D#207ptD.0
  # DEBUG thisD.63932 => D#207ptD.0
  # .MEM_114 = VDEF <.MEM_45>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218ptD.0 => &D#780ptD.0->_fullnameD.29623
  # DEBUG thisD.63933 => D#218ptD.0
  # DEBUG thisD.63934 => D#218ptD.0
  # DEBUG thisD.63943 => D#218ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _30 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.63944 => D#218ptD.0
  # PT = nonlocal 
  _31 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_30 != _31)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#218ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.63936 => D#218ptD.0
  # DEBUG __sizeD.63935 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#218ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.63939 => _30
  # DEBUG __aD.63937 => D#183ptD.0
  # DEBUG __nD.63938 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.63942 => _30
  # DEBUG thisD.63940 => D#179ptD.0
  # DEBUG D.63941 => D#180ptD.0
  # .MEM_115 = VDEF <.MEM_114>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_30);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_46 = PHI <.MEM_114(32), .MEM_115(33)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG thisD.63945 => D#189ptD.0
  # DEBUG thisD.63946 => D#189ptD.0
  # DEBUG thisD.63947 => D#189ptD.0
  # .MEM_119 = VDEF <.MEM_46>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217ptD.0 => &D#780ptD.0->_nameD.29622
  # DEBUG thisD.63948 => D#217ptD.0
  # DEBUG thisD.63949 => D#217ptD.0
  # DEBUG thisD.63958 => D#217ptD.0
  # VUSE <.MEM_119>
  # PT = nonlocal escaped 
  _32 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.63959 => D#217ptD.0
  # PT = nonlocal 
  _33 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_32 != _33)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#217ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.63951 => D#217ptD.0
  # DEBUG __sizeD.63950 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#217ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.63954 => _32
  # DEBUG __aD.63952 => D#183ptD.0
  # DEBUG __nD.63953 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.63957 => _32
  # DEBUG thisD.63955 => D#179ptD.0
  # DEBUG D.63956 => D#180ptD.0
  # .MEM_120 = VDEF <.MEM_119>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 35, next block 1, flags: (NEW, REACHABLE)
;;    pred:       34 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_47 = PHI <.MEM_119(34), .MEM_120(35)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG thisD.63960 => D#189ptD.0
  # DEBUG thisD.63961 => D#189ptD.0
  # DEBUG thisD.63962 => D#189ptD.0
  # .MEM_129 = VDEF <.MEM_47>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_129>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
	Access function 4: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 312B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 312
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 312B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_19
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_19
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Analyzing # of iterations of loop 2
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < _17 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _17 - (unsigned long) __nstart_19) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 2
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < _17 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _17 - (unsigned long) __nstart_19) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Analyzing # of iterations of loop 1
  exit condition [__first_11 + 80, + , 80](no_overflow) != _10
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551535
  result:
    under assumptions ((unsigned long) _10 - (unsigned long) (__first_11 + 80) & 15) == 0
    # of iterations (((unsigned long) _10 - (unsigned long) (__first_11 + 80)) /[ex] 16) * 922337203685477581 & 1152921504606846975, bounded by 230584300921369395
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_19
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_19
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Analyzing # of iterations of loop 2
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < _17 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _17 - (unsigned long) __nstart_19) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_19
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_19
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Creating dr for *__nstart_146
analyze_innermost: success.
	base_address: __nstart_19
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_146
Analyzing # of iterations of loop 2
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < _17 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _17 - (unsigned long) __nstart_19) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_11
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_11]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Analyzing # of iterations of loop 1
  exit condition [__first_11 + 80, + , 80](no_overflow) != _10
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551535
  result:
    under assumptions ((unsigned long) _10 - (unsigned long) (__first_11 + 80) & 15) == 0
    # of iterations (((unsigned long) _10 - (unsigned long) (__first_11 + 80)) /[ex] 16) * 922337203685477581 & 1152921504606846975, bounded by 230584300921369395
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 272
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 272B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:39, LOOPS:2, CONDITIONS:16, STMTS:662)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG this => this_2(D)
    # .MEM_48 = VDEF <.MEM_1(D)>
    this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState32SimpleFeedbackSharedBufferPolicyE + 16B];
    # DEBUG D#467 => &this_2(D)->_pending_credits
    # DEBUG this => D#467
    # DEBUG D#154 => &D#467->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#467->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#467->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#467->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_48>
    _5 = MEM[(struct _Vector_base *)this_2(D) + 312B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _5
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _5
    # DEBUG __n => D#148
    if (_5 != 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _5
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _5
    # DEBUG this => D#140
    # DEBUG D.63766 => D#141
    # .MEM_49 = VDEF <.MEM_48>
    operator delete (_5);

  }
  bb_4 (preds = {bb_2 bb_3 }, succs = {bb_16 bb_5 })
  {
    <bb 4>:
    # .MEM_34 = PHI <.MEM_48(2), .MEM_49(3)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_54 = VDEF <.MEM_34>
    MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
    # DEBUG D#784 => &this_2(D)->D.41295
    # DEBUG this => D#784
    # .MEM_55 = VDEF <.MEM_54>
    MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)].D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
    # DEBUG D#783 => &MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)]._flit_sent_time
    # DEBUG this => D#783
    # DEBUG D#463 => &D#783->D.41195
    # DEBUG this => D#463
    # VUSE <.MEM_55>
    _10 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish;
    # VUSE <.MEM_55>
    __first_11 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start;
    # DEBUG __first => __first_11
    # DEBUG __last => _10
    # DEBUG __first => __first_11
    if (_10 == __first_11)
      goto <bb 16>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:

  }
  bb_15 (preds = {bb_13 }, succs = {bb_37 })
  {
    <bb 15>:

  }
  bb_37 (preds = {bb_15 }, succs = {bb_16 })
  {
    <bb 37>:
    # VUSE <.MEM_63>
    pretmp_59 = MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start;

  }
  bb_16 (preds = {bb_37 bb_4 }, succs = {bb_17 bb_18 })
  {
    <bb 16>:
    # .MEM_144 = PHI <.MEM_63(37), .MEM_55(4)>
    # prephitmp_60 = PHI <pretmp_59(37), __first_11(4)>
    # DEBUG D#464 => &D#783->D.41195
    # DEBUG this => D#464
    # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
    # DEBUG D#259 => (long int) D#260
    # DEBUG D#785 => MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
    # DEBUG D#258 => (long int) D#785
    # DEBUG D#257 => D#259 - D#258
    # DEBUG D#256 => D#257 /[ex] 80
    # DEBUG D#253 => D#464
    # DEBUG D#254 => (long unsigned int) D#256
    # DEBUG __p => D#785
    # DEBUG this => D#253
    # DEBUG __n => D#254
    # DEBUG D#252 => D#254
    # DEBUG D#251 => D#253
    if (prephitmp_60 != 0B)
      goto <bb 17>;
    else
      goto <bb 18>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_18 })
  {
    <bb 17>:
    # DEBUG D#250 => &D#251->_M_impl
    # DEBUG D#248 => D#250
    # DEBUG D#249 => D#252
    # DEBUG __p => D#785
    # DEBUG __a => D#248
    # DEBUG __n => D#249
    # DEBUG D#247 => D#249
    # DEBUG D#246 => D#248
    # DEBUG D#244 => D#246
    # DEBUG D#245 => D#247
    # DEBUG __p => D#785
    # DEBUG this => D#244
    # DEBUG D.63823 => D#245
    # .MEM_64 = VDEF <.MEM_144>
    operator delete (prephitmp_60);

  }
  bb_18 (preds = {bb_16 bb_17 }, succs = {bb_19 bb_20 })
  {
    <bb 18>:
    # .MEM_38 = PHI <.MEM_144(16), .MEM_64(17)>
    # DEBUG D#255 => &D#464->_M_impl
    # DEBUG this => D#255
    # DEBUG this => D#255
    # DEBUG this => D#255
    # .MEM_69 = VDEF <.MEM_38>
    MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
    # DEBUG D#466 => &D#784->_round_trip_time
    # DEBUG this => D#466
    # DEBUG D#154 => &D#466->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#466->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#466->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#466->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_69>
    _7 = MEM[(struct _Vector_base *)this_2(D) + 248B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _7
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _7
    # DEBUG __n => D#148
    if (_7 != 0B)
      goto <bb 19>;
    else
      goto <bb 20>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _7
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _7
    # DEBUG this => D#140
    # DEBUG D.63782 => D#141
    # .MEM_70 = VDEF <.MEM_69>
    operator delete (_7);

  }
  bb_20 (preds = {bb_18 bb_19 }, succs = {bb_21 bb_22 })
  {
    <bb 20>:
    # .MEM_39 = PHI <.MEM_69(18), .MEM_70(19)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_75 = VDEF <.MEM_39>
    MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
    # DEBUG D#465 => &D#784->_occupancy_limit
    # DEBUG this => D#465
    # DEBUG D#154 => &D#465->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#465->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#465->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#465->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_75>
    _8 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _8
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _8
    # DEBUG __n => D#148
    if (_8 != 0B)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _8
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _8
    # DEBUG this => D#140
    # DEBUG D.63797 => D#141
    # .MEM_76 = VDEF <.MEM_75>
    operator delete (_8);

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # .MEM_40 = PHI <.MEM_75(20), .MEM_76(21)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_81 = VDEF <.MEM_40>
    MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
    # DEBUG D#781 => &MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)].D.41247
    # DEBUG this => D#781
    # .MEM_82 = VDEF <.MEM_81>
    MEM[(struct SharedBufferPolicy *)this_2(D)].D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
    # DEBUG D#224 => &D#781->_reserved_slots
    # DEBUG this => D#224
    # DEBUG D#154 => &D#224->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#224->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#224->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#224->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_82>
    _24 = MEM[(struct _Vector_base *)this_2(D) + 192B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _24
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _24
    # DEBUG __n => D#148
    if (_24 != 0B)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 }, succs = {bb_24 })
  {
    <bb 23>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _24
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _24
    # DEBUG this => D#140
    # DEBUG D.63866 => D#141
    # .MEM_83 = VDEF <.MEM_82>
    operator delete (_24);

  }
  bb_24 (preds = {bb_22 bb_23 }, succs = {bb_25 bb_26 })
  {
    <bb 24>:
    # .MEM_41 = PHI <.MEM_82(22), .MEM_83(23)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_88 = VDEF <.MEM_41>
    MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
    # DEBUG D#223 => &D#781->_private_buf_occupancy
    # DEBUG this => D#223
    # DEBUG D#154 => &D#223->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#223->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#223->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#223->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_88>
    _25 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _25
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _25
    # DEBUG __n => D#148
    if (_25 != 0B)
      goto <bb 25>;
    else
      goto <bb 26>;

  }
  bb_25 (preds = {bb_24 }, succs = {bb_26 })
  {
    <bb 25>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _25
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _25
    # DEBUG this => D#140
    # DEBUG D.63881 => D#141
    # .MEM_89 = VDEF <.MEM_88>
    operator delete (_25);

  }
  bb_26 (preds = {bb_24 bb_25 }, succs = {bb_27 bb_28 })
  {
    <bb 26>:
    # .MEM_42 = PHI <.MEM_88(24), .MEM_89(25)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_94 = VDEF <.MEM_42>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#222 => &D#781->_private_buf_size
    # DEBUG this => D#222
    # DEBUG D#154 => &D#222->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#222->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#222->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#222->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_94>
    _26 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _26
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _26
    # DEBUG __n => D#148
    if (_26 != 0B)
      goto <bb 27>;
    else
      goto <bb 28>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_28 })
  {
    <bb 27>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _26
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _26
    # DEBUG this => D#140
    # DEBUG D.63896 => D#141
    # .MEM_95 = VDEF <.MEM_94>
    operator delete (_26);

  }
  bb_28 (preds = {bb_26 bb_27 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # .MEM_43 = PHI <.MEM_94(26), .MEM_95(27)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_100 = VDEF <.MEM_43>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#221 => &D#781->_private_buf_vc_map
    # DEBUG this => D#221
    # DEBUG D#154 => &D#221->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#221->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#221->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#221->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_100>
    _27 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _27
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _27
    # DEBUG __n => D#148
    if (_27 != 0B)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_30 })
  {
    <bb 29>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _27
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _27
    # DEBUG this => D#140
    # DEBUG D.63911 => D#141
    # .MEM_101 = VDEF <.MEM_100>
    operator delete (_27);

  }
  bb_30 (preds = {bb_28 bb_29 }, succs = {bb_31 bb_32 })
  {
    <bb 30>:
    # .MEM_44 = PHI <.MEM_100(28), .MEM_101(29)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_106 = VDEF <.MEM_44>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#220 => &D#781->D.40291
    # DEBUG this => D#220
    # DEBUG D#780 => &MEM[(struct BufferPolicy *)this_2(D)].D.39647
    # DEBUG this => D#780
    # .MEM_108 = VDEF <.MEM_106>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#219 => &D#780->_children
    # DEBUG this => D#219
    # DEBUG D#213 => &D#219->D.30368
    # DEBUG this => D#213
    # DEBUG D#216 => D#219->D.30368._M_impl._M_finish
    # DEBUG D#215 => D#219->D.30368._M_impl._M_start
    # DEBUG D#118 => D#215
    # DEBUG D#119 => D#216
    # DEBUG __first => D#118
    # DEBUG __last => D#119
    # DEBUG D.54613 => D#120
    # DEBUG D#117 => D#119
    # DEBUG D#116 => D#118
    # DEBUG D#114 => D#116
    # DEBUG D#115 => D#117
    # DEBUG __first => D#114
    # DEBUG __last => D#115
    # DEBUG D#113 => D#115
    # DEBUG D#112 => D#114
    # DEBUG D#110 => D#112
    # DEBUG D#111 => D#113
    # DEBUG D.54025 => D#110
    # DEBUG D.54024 => D#111
    # DEBUG D#214 => &D#219->D.30368
    # DEBUG this => D#214
    # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
    # DEBUG D#211 => (long int) D#212
    # VUSE <.MEM_108>
    _29 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#210 => (long int) _29
    # DEBUG D#209 => D#211 - D#210
    # DEBUG D#208 => D#209 /[ex] 8
    # DEBUG D#205 => D#214
    # DEBUG D#206 => (long unsigned int) D#208
    # DEBUG __p => _29
    # DEBUG this => D#205
    # DEBUG __n => D#206
    # DEBUG D#204 => D#206
    # DEBUG D#203 => D#205
    if (_29 != 0B)
      goto <bb 31>;
    else
      goto <bb 32>;

  }
  bb_31 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 31>:
    # DEBUG D#202 => &D#203->_M_impl
    # DEBUG D#200 => D#202
    # DEBUG D#201 => D#204
    # DEBUG __p => _29
    # DEBUG __a => D#200
    # DEBUG __n => D#201
    # DEBUG D#199 => D#201
    # DEBUG D#198 => D#200
    # DEBUG D#196 => D#198
    # DEBUG D#197 => D#199
    # DEBUG __p => _29
    # DEBUG this => D#196
    # DEBUG D.63928 => D#197
    # .MEM_109 = VDEF <.MEM_108>
    operator delete (_29);

  }
  bb_32 (preds = {bb_30 bb_31 }, succs = {bb_33 bb_34 })
  {
    <bb 32>:
    # .MEM_45 = PHI <.MEM_108(30), .MEM_109(31)>
    # DEBUG D#207 => &D#214->_M_impl
    # DEBUG this => D#207
    # DEBUG this => D#207
    # DEBUG this => D#207
    # .MEM_114 = VDEF <.MEM_45>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#218 => &D#780->_fullname
    # DEBUG this => D#218
    # DEBUG this => D#218
    # DEBUG this => D#218
    # VUSE <.MEM_114>
    _30 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#218
    # DEBUG this => D#1
    # DEBUG this => D#218
    _31 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_30 != _31)
      goto <bb 33>;
    else
      goto <bb 34>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_34 })
  {
    <bb 33>:
    # DEBUG D#188 => MEM[(struct basic_string *)D#218].D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => D#218
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => D#218
    # DEBUG this => D#1
    # DEBUG this => D#218
    # DEBUG D#185 => &MEM[(struct basic_string *)D#218]._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _30
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _30
    # DEBUG this => D#179
    # DEBUG D.63941 => D#180
    # .MEM_115 = VDEF <.MEM_114>
    operator delete (_30);

  }
  bb_34 (preds = {bb_32 bb_33 }, succs = {bb_35 bb_36 })
  {
    <bb 34>:
    # .MEM_46 = PHI <.MEM_114(32), .MEM_115(33)>
    # DEBUG D#189 => &MEM[(struct basic_string *)D#218]._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_119 = VDEF <.MEM_46>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#217 => &D#780->_name
    # DEBUG this => D#217
    # DEBUG this => D#217
    # DEBUG this => D#217
    # VUSE <.MEM_119>
    _32 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#217
    # DEBUG this => D#1
    # DEBUG this => D#217
    _33 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_32 != _33)
      goto <bb 35>;
    else
      goto <bb 36>;

  }
  bb_35 (preds = {bb_34 }, succs = {bb_36 })
  {
    <bb 35>:
    # DEBUG D#188 => MEM[(struct basic_string *)D#217].D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => D#217
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => D#217
    # DEBUG this => D#1
    # DEBUG this => D#217
    # DEBUG D#185 => &MEM[(struct basic_string *)D#217]._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _32
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _32
    # DEBUG this => D#179
    # DEBUG D.63956 => D#180
    # .MEM_120 = VDEF <.MEM_119>
    operator delete (_32);

  }
  bb_36 (preds = {bb_34 bb_35 }, succs = {bb_1 })
  {
    <bb 36>:
    # .MEM_47 = PHI <.MEM_119(34), .MEM_120(35)>
    # DEBUG D#189 => &MEM[(struct basic_string *)D#217]._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_129 = VDEF <.MEM_47>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # .MEM_4 = VDEF <.MEM_129>
    operator delete (this_2(D));
    # VUSE <.MEM_4>
    return;

  }
  loop_1 (header = 6, latch = 14, niter = )
  {
    bb_6 (preds = {bb_5 bb_14 }, succs = {bb_7 bb_13 })
    {
      <bb 6>:
      # __first_28 = PHI <__first_11(5), __first_14(14)>
      # .MEM_145 = PHI <.MEM_55(5), .MEM_63(14)>
      # DEBUG __first => __first_28
      # DEBUG __r => __first_28
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#458
      # DEBUG D#449 => &D#458->D.43590
      # DEBUG this => D#449
      # DEBUG this => D#458
      # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
      # DEBUG this => NULL
      # DEBUG __x => D#66
      # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
      # DEBUG D.57660 => D#457
      # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
      # DEBUG D.57661 => D#456
      # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
      # DEBUG D.57662 => D#455
      # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
      # DEBUG D.57663 => D#454
      # DEBUG this => D#458
      # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
      # DEBUG this => NULL
      # DEBUG __x => D#67
      # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
      # DEBUG D.57656 => D#453
      # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
      # DEBUG D.57657 => D#452
      # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
      # DEBUG D.57658 => D#451
      # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
      # DEBUG D.57659 => D#450
      # DEBUG D#68 => D#458
      # DEBUG this => D#68
      # DEBUG __first => D#69
      # DEBUG __last => D#70
      # DEBUG D.57644 => D#71
      # DEBUG D#782 => &MEM[(struct deque *)__first_28].D.43590
      # DEBUG this => D#782
      # VUSE <.MEM_145>
      _16 = MEM[(struct _Deque_base *)__first_28]._M_impl._M_map;
      if (_16 != 0B)
        goto <bb 7>;
      else
        goto <bb 13>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_12 bb_8 })
    {
      <bb 7>:
      # VUSE <.MEM_145>
      _17 = MEM[(struct _Deque_base *)__first_28]._M_impl._M_finish._M_node;
      _18 = _17 + 8;
      # VUSE <.MEM_145>
      __nstart_19 = MEM[(struct _Deque_base *)__first_28]._M_impl._M_start._M_node;
      # DEBUG this => D#782
      # DEBUG __nstart => __nstart_19
      # DEBUG __nfinish => _18
      # DEBUG __n => __nstart_19
      # DEBUG __n => __nstart_19
      if (_18 <= __nstart_19)
        goto <bb 12>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_9 })
    {
      <bb 8>:

    }
    bb_11 (preds = {bb_9 }, succs = {bb_38 })
    {
      <bb 11>:

    }
    bb_38 (preds = {bb_11 }, succs = {bb_12 })
    {
      <bb 38>:
      # VUSE <.MEM_56>
      pretmp_50 = MEM[(struct _Deque_base *)__first_28]._M_impl._M_map;

    }
    bb_12 (preds = {bb_38 bb_7 }, succs = {bb_13 })
    {
      <bb 12>:
      # .MEM_142 = PHI <.MEM_56(38), .MEM_145(7)>
      # prephitmp_51 = PHI <pretmp_50(38), _16(7)>
      # DEBUG D#447 => D#782->_M_impl._M_map_size
      # DEBUG D#786 => MEM[(struct _Deque_base *)__first_28]._M_impl._M_map
      # DEBUG D#445 => D#782
      # DEBUG D#446 => D#447
      # DEBUG __p => D#786
      # DEBUG this => D#445
      # DEBUG __n => D#446
      # DEBUG D#444 => D#446
      # DEBUG D#443 => D#445
      # DEBUG D#442 => D#443
      # DEBUG this => D#442
      # DEBUG D#441 => D#442
      # DEBUG this => D#441
      # DEBUG this => NULL
      # DEBUG D.57578 => NULL
      # DEBUG this => NULL
      # DEBUG D#265 => &__map_alloc
      # DEBUG D#266 => D#444
      # DEBUG __p => D#786
      # DEBUG __a => D#265
      # DEBUG __n => D#266
      # DEBUG D#264 => D#266
      # DEBUG D#263 => D#265
      # DEBUG D#261 => D#263
      # DEBUG D#262 => D#264
      # DEBUG __p => D#786
      # DEBUG this => D#261
      # DEBUG D.63853 => D#262
      # .MEM_57 = VDEF <.MEM_142>
      operator delete (prephitmp_51);
      # DEBUG this => &__map_alloc
      # DEBUG this => &__map_alloc

    }
    bb_13 (preds = {bb_6 bb_12 }, succs = {bb_15 bb_14 })
    {
      <bb 13>:
      # .MEM_37 = PHI <.MEM_145(6), .MEM_57(12)>
      # DEBUG D#448 => &D#782->_M_impl
      # DEBUG this => D#448
      # DEBUG this => D#448
      # DEBUG this => D#448
      # .MEM_63 = VDEF <.MEM_37>
      MEM[(struct  &)__first_28] ={v} {CLOBBER};
      __first_14 = __first_28 + 80;
      # DEBUG __first => __first_14
      # DEBUG __first => __first_14
      if (_10 == __first_14)
        goto <bb 15>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_13 }, succs = {bb_6 })
    {
      <bb 14>:
      goto <bb 6>;

    }
    loop_2 (header = 9, latch = 10, niter = (((unsigned long) _17 - (unsigned long) __nstart_19) + 7) / 8, upper_bound = 2305843009213693951)
    {
      bb_9 (preds = {bb_8 bb_10 }, succs = {bb_11 bb_10 })
      {
        <bb 9>:
        # __nstart_146 = PHI <__nstart_19(8), __nstart_22(10)>
        # .MEM_143 = PHI <.MEM_145(8), .MEM_56(10)>
        # DEBUG __n => __nstart_146
        # VUSE <.MEM_143>
        _21 = *__nstart_146;
        # DEBUG this => D#782
        # DEBUG __p => _21
        # DEBUG __size => 4
        # DEBUG D#167 => &D#782->_M_impl
        # DEBUG D#144 => D#167
        # DEBUG __p => _21
        # DEBUG __a => D#144
        # DEBUG __n => D#145
        # DEBUG D#143 => D#145
        # DEBUG D#142 => D#144
        # DEBUG D#140 => D#142
        # DEBUG D#141 => D#143
        # DEBUG __p => _21
        # DEBUG this => D#140
        # DEBUG D.63843 => D#141
        # .MEM_56 = VDEF <.MEM_143>
        operator delete (_21);
        __nstart_22 = __nstart_146 + 8;
        # DEBUG __n => __nstart_22
        # DEBUG __n => __nstart_22
        if (_18 <= __nstart_22)
          goto <bb 11>;
        else
          goto <bb 10>;

      }
      bb_10 (preds = {bb_9 }, succs = {bb_9 })
      {
        <bb 10>:
        goto <bb 9>;

      }
    }
  }
}

Pass statistics:
----------------

virtual BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (struct SimpleFeedbackSharedBufferPolicyD.41259 * const thisD.41277)
{
  intD.9 * * __nstartD.63833;
  struct queueD.40450 * __firstD.63805;
  intD.9 * _5;
  intD.9 * _7;
  intD.9 * _8;
  struct queueD.40450 * _10;
  intD.9 * * _16;
  intD.9 * * _17;
  intD.9 * * _18;
  intD.9 * _21;
  intD.9 * _24;
  intD.9 * _25;
  intD.9 * _26;
  intD.9 * _27;
  struct ModuleD.29620 * * _29;
  charD.10 * const _30;
  const charD.10 * _31;
  charD.10 * const _32;
  const charD.10 * _33;
  intD.9 * * pretmp_50;
  intD.9 * * prephitmp_51;
  struct queueD.40450 * pretmp_59;
  struct queueD.40450 * prephitmp_60;

;;   basic block 2, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.63755 => this_2(D)
  # .MEM_48 = VDEF <.MEM_1(D)>
  this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState32SimpleFeedbackSharedBufferPolicyED.41298 + 16B];
  # DEBUG D#467ptD.0 => &this_2(D)->_pending_creditsD.41261
  # DEBUG thisD.63756 => D#467ptD.0
  # DEBUG D#154ptD.0 => &D#467ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#467ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#467ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#467ptD.0->D.40238
  # DEBUG thisD.63757 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_48>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 312B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _5
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63760 => D#155ptD.0
  # DEBUG __pD.63759 => _5
  # DEBUG __nD.63758 => D#148ptD.0
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63764 => _5
  # DEBUG __aD.63762 => D#144ptD.0
  # DEBUG __nD.63763 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63767 => _5
  # DEBUG thisD.63765 => D#140ptD.0
  # DEBUG D.63766 => D#141ptD.0
  # .MEM_49 = VDEF <.MEM_48>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_5);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_48(2), .MEM_49(3)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63768 => D#147ptD.0
  # DEBUG thisD.63769 => D#147ptD.0
  # DEBUG thisD.63770 => D#147ptD.0
  # .MEM_54 = VDEF <.MEM_34>
  MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
  # DEBUG D#784ptD.0 => &this_2(D)->D.41295
  # DEBUG thisD.63771 => D#784ptD.0
  # .MEM_55 = VDEF <.MEM_54>
  MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)].D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#783ptD.0 => &MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)]._flit_sent_timeD.41197
  # DEBUG thisD.63802 => D#783ptD.0
  # DEBUG D#463ptD.0 => &D#783ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _10 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  __first_11 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.63805 => __first_11
  # DEBUG __lastD.63804 => _10
  # DEBUG __firstD.63810 => __first_11
  if (_10 == __first_11)
    goto <bb 16>;
  else
    goto <bb 5>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_28 = PHI <__first_11(5), __first_14(14)>
  # .MEM_145 = PHI <.MEM_55(5), .MEM_63(14)>
  # DEBUG __firstD.63810 => __first_28
  # DEBUG __rD.57673 => __first_28
  # DEBUG __pointerD.63811 => NULL
  # DEBUG thisD.63812 => NULL
  # DEBUG thisD.63813 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#782ptD.0 => &MEM[(struct dequeD.40449 *)__first_28].D.43590
  # DEBUG thisD.63828 => D#782ptD.0
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_mapD.43043;
  if (_16 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;
;;    succ:       7 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  _17 = MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _18 = _17 + 8;
  # VUSE <.MEM_145>
  # PT = nonlocal escaped 
  __nstart_19 = MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.63834 => D#782ptD.0
  # DEBUG __nstartD.63833 => __nstart_19
  # DEBUG __nfinishD.63832 => _18
  # DEBUG __nD.63835 => __nstart_19
  # DEBUG __nD.63835 => __nstart_19
  if (_18 <= __nstart_19)
    goto <bb 12>;
  else
    goto <bb 8>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_146 = PHI <__nstart_19(8), __nstart_22(10)>
  # .MEM_143 = PHI <.MEM_145(8), .MEM_56(10)>
  # DEBUG __nD.63835 => __nstart_146
  # VUSE <.MEM_143>
  # PT = nonlocal escaped 
  _21 = *__nstart_146;
  # DEBUG thisD.63837 => D#782ptD.0
  # DEBUG __pD.63836 => _21
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#782ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.63841 => _21
  # DEBUG __aD.63839 => D#144ptD.0
  # DEBUG __nD.63840 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63844 => _21
  # DEBUG thisD.63842 => D#140ptD.0
  # DEBUG D.63843 => D#141ptD.0
  # .MEM_56 = VDEF <.MEM_143>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_21);
  # PT = nonlocal escaped 
  __nstart_22 = __nstart_146 + 8;
  # DEBUG __nD.63835 => __nstart_22
  # DEBUG __nD.63835 => __nstart_22
  if (_18 <= __nstart_22)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 10, next block 38, flags: (NEW)
;;    pred:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       38 [100.0%]  (FALLTHRU)

;;   basic block 38, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 11, next block 12, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_56>
  pretmp_50 = MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_mapD.43043;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 38, next block 13, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_142 = PHI <.MEM_56(38), .MEM_145(7)>
  # PT = nonlocal escaped 
  # prephitmp_51 = PHI <pretmp_50(38), _16(7)>
  # DEBUG D#447ptD.0 => D#782ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#786ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_28]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#782ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.63847 => D#786ptD.0
  # DEBUG thisD.63845 => D#445ptD.0
  # DEBUG __nD.63846 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.63848
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.63851 => D#786ptD.0
  # DEBUG __aD.63849 => D#265ptD.0
  # DEBUG __nD.63850 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.63854 => D#786ptD.0
  # DEBUG thisD.63852 => D#261ptD.0
  # DEBUG D.63853 => D#262ptD.0
  # .MEM_57 = VDEF <.MEM_142>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_51);
  # DEBUG thisD.57611 => &__map_allocD.63848
  # DEBUG thisD.57590 => &__map_allocD.63848
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       6 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_145(6), .MEM_57(12)>
  # DEBUG D#448ptD.0 => &D#782ptD.0->_M_implD.43041
  # DEBUG thisD.63829 => D#448ptD.0
  # DEBUG thisD.63830 => D#448ptD.0
  # DEBUG thisD.63831 => D#448ptD.0
  # .MEM_63 = VDEF <.MEM_37>
  MEM[(struct  &)__first_28] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_14 = __first_28 + 80;
  # DEBUG __firstD.63810 => __first_14
  # DEBUG __firstD.63810 => __first_14
  if (_10 == __first_14)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 14, next block 37, flags: (NEW)
;;    pred:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       37 [100.0%]  (FALLTHRU)

;;   basic block 37, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 15, next block 16, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_63>
  pretmp_59 = MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 37, next block 17, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_144 = PHI <.MEM_63(37), .MEM_55(4)>
  # PT = nonlocal escaped 
  # prephitmp_60 = PHI <pretmp_59(37), __first_11(4)>
  # DEBUG D#464ptD.0 => &D#783ptD.0->D.41195
  # DEBUG thisD.63814 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#785ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#785ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.63817 => D#785ptD.0
  # DEBUG thisD.63815 => D#253ptD.0
  # DEBUG __nD.63816 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_60 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.63821 => D#785ptD.0
  # DEBUG __aD.63819 => D#248ptD.0
  # DEBUG __nD.63820 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.63824 => D#785ptD.0
  # DEBUG thisD.63822 => D#244ptD.0
  # DEBUG D.63823 => D#245ptD.0
  # .MEM_64 = VDEF <.MEM_144>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_60);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_144(16), .MEM_64(17)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.63825 => D#255ptD.0
  # DEBUG thisD.63826 => D#255ptD.0
  # DEBUG thisD.63827 => D#255ptD.0
  # .MEM_69 = VDEF <.MEM_38>
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466ptD.0 => &D#784ptD.0->_round_trip_timeD.40448
  # DEBUG thisD.63772 => D#466ptD.0
  # DEBUG D#154ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.63773 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _7
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63776 => D#155ptD.0
  # DEBUG __pD.63775 => _7
  # DEBUG __nD.63774 => D#148ptD.0
  if (_7 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63780 => _7
  # DEBUG __aD.63778 => D#144ptD.0
  # DEBUG __nD.63779 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63783 => _7
  # DEBUG thisD.63781 => D#140ptD.0
  # DEBUG D.63782 => D#141ptD.0
  # .MEM_70 = VDEF <.MEM_69>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_69(18), .MEM_70(19)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63784 => D#147ptD.0
  # DEBUG thisD.63785 => D#147ptD.0
  # DEBUG thisD.63786 => D#147ptD.0
  # .MEM_75 = VDEF <.MEM_39>
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465ptD.0 => &D#784ptD.0->_occupancy_limitD.40447
  # DEBUG thisD.63787 => D#465ptD.0
  # DEBUG D#154ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.63788 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _8
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63791 => D#155ptD.0
  # DEBUG __pD.63790 => _8
  # DEBUG __nD.63789 => D#148ptD.0
  if (_8 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63795 => _8
  # DEBUG __aD.63793 => D#144ptD.0
  # DEBUG __nD.63794 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63798 => _8
  # DEBUG thisD.63796 => D#140ptD.0
  # DEBUG D.63797 => D#141ptD.0
  # .MEM_76 = VDEF <.MEM_75>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_75(20), .MEM_76(21)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63799 => D#147ptD.0
  # DEBUG thisD.63800 => D#147ptD.0
  # DEBUG thisD.63801 => D#147ptD.0
  # .MEM_81 = VDEF <.MEM_40>
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#781ptD.0 => &MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)].D.41247
  # DEBUG thisD.63855 => D#781ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)].D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#224ptD.0 => &D#781ptD.0->_reserved_slotsD.40245
  # DEBUG thisD.63856 => D#224ptD.0
  # DEBUG D#154ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.63857 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_82>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _24
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63860 => D#155ptD.0
  # DEBUG __pD.63859 => _24
  # DEBUG __nD.63858 => D#148ptD.0
  if (_24 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63864 => _24
  # DEBUG __aD.63862 => D#144ptD.0
  # DEBUG __nD.63863 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63867 => _24
  # DEBUG thisD.63865 => D#140ptD.0
  # DEBUG D.63866 => D#141ptD.0
  # .MEM_83 = VDEF <.MEM_82>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_41 = PHI <.MEM_82(22), .MEM_83(23)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63868 => D#147ptD.0
  # DEBUG thisD.63869 => D#147ptD.0
  # DEBUG thisD.63870 => D#147ptD.0
  # .MEM_88 = VDEF <.MEM_41>
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223ptD.0 => &D#781ptD.0->_private_buf_occupancyD.40242
  # DEBUG thisD.63871 => D#223ptD.0
  # DEBUG D#154ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.63872 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_88>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _25
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63875 => D#155ptD.0
  # DEBUG __pD.63874 => _25
  # DEBUG __nD.63873 => D#148ptD.0
  if (_25 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63879 => _25
  # DEBUG __aD.63877 => D#144ptD.0
  # DEBUG __nD.63878 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63882 => _25
  # DEBUG thisD.63880 => D#140ptD.0
  # DEBUG D.63881 => D#141ptD.0
  # .MEM_89 = VDEF <.MEM_88>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_42 = PHI <.MEM_88(24), .MEM_89(25)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63883 => D#147ptD.0
  # DEBUG thisD.63884 => D#147ptD.0
  # DEBUG thisD.63885 => D#147ptD.0
  # .MEM_94 = VDEF <.MEM_42>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222ptD.0 => &D#781ptD.0->_private_buf_sizeD.40241
  # DEBUG thisD.63886 => D#222ptD.0
  # DEBUG D#154ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.63887 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _26 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _26
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63890 => D#155ptD.0
  # DEBUG __pD.63889 => _26
  # DEBUG __nD.63888 => D#148ptD.0
  if (_26 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63894 => _26
  # DEBUG __aD.63892 => D#144ptD.0
  # DEBUG __nD.63893 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63897 => _26
  # DEBUG thisD.63895 => D#140ptD.0
  # DEBUG D.63896 => D#141ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_43 = PHI <.MEM_94(26), .MEM_95(27)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63898 => D#147ptD.0
  # DEBUG thisD.63899 => D#147ptD.0
  # DEBUG thisD.63900 => D#147ptD.0
  # .MEM_100 = VDEF <.MEM_43>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221ptD.0 => &D#781ptD.0->_private_buf_vc_mapD.40240
  # DEBUG thisD.63901 => D#221ptD.0
  # DEBUG D#154ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.63902 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_100>
  # PT = nonlocal escaped 
  _27 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _27
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63905 => D#155ptD.0
  # DEBUG __pD.63904 => _27
  # DEBUG __nD.63903 => D#148ptD.0
  if (_27 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63909 => _27
  # DEBUG __aD.63907 => D#144ptD.0
  # DEBUG __nD.63908 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63912 => _27
  # DEBUG thisD.63910 => D#140ptD.0
  # DEBUG D.63911 => D#141ptD.0
  # .MEM_101 = VDEF <.MEM_100>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_27);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_100(28), .MEM_101(29)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63913 => D#147ptD.0
  # DEBUG thisD.63914 => D#147ptD.0
  # DEBUG thisD.63915 => D#147ptD.0
  # .MEM_106 = VDEF <.MEM_44>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220ptD.0 => &D#781ptD.0->D.40291
  # DEBUG thisD.63916 => D#220ptD.0
  # DEBUG D#780ptD.0 => &MEM[(struct BufferPolicyD.39592 *)this_2(D)].D.39647
  # DEBUG thisD.63917 => D#780ptD.0
  # .MEM_108 = VDEF <.MEM_106>
  MEM[(struct ModuleD.29620 *)this_2(D)]._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTV6ModuleD.30420 + 16B];
  # DEBUG D#219ptD.0 => &D#780ptD.0->_childrenD.30370
  # DEBUG thisD.63918 => D#219ptD.0
  # DEBUG D#213ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.54616 => D#213ptD.0
  # DEBUG D#216ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_finishD.29862
  # DEBUG D#215ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_startD.29861
  # DEBUG D#118ptD.0 => D#215ptD.0
  # DEBUG D#119ptD.0 => D#216ptD.0
  # DEBUG __firstD.54615 => D#118ptD.0
  # DEBUG __lastD.54614 => D#119ptD.0
  # DEBUG D.54613 => D#120ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG __firstD.54036 => D#114ptD.0
  # DEBUG __lastD.54035 => D#115ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D.54025 => D#110ptD.0
  # DEBUG D.54024 => D#111ptD.0
  # DEBUG D#214ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.63919 => D#214ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0->_M_implD.29859._M_end_of_storageD.29863
  # DEBUG D#211ptD.0 => (long intD.12) D#212ptD.0
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _29 = MEM[(struct _Vector_baseD.29626 *)this_2(D) + 72B]._M_implD.29859._M_startD.29861;
  # DEBUG D#210ptD.0 => (long intD.12) _29
  # DEBUG D#209ptD.0 => D#211ptD.0 - D#210ptD.0
  # DEBUG D#208ptD.0 => D#209ptD.0 /[ex] 8
  # DEBUG D#205ptD.0 => D#214ptD.0
  # DEBUG D#206ptD.0 => (long unsigned intD.14) D#208ptD.0
  # DEBUG __pD.63922 => _29
  # DEBUG thisD.63920 => D#205ptD.0
  # DEBUG __nD.63921 => D#206ptD.0
  # DEBUG D#204ptD.0 => D#206ptD.0
  # DEBUG D#203ptD.0 => D#205ptD.0
  if (_29 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#202ptD.0 => &D#203ptD.0->_M_implD.29859
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __pD.63926 => _29
  # DEBUG __aD.63924 => D#200ptD.0
  # DEBUG __nD.63925 => D#201ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG __pD.63929 => _29
  # DEBUG thisD.63927 => D#196ptD.0
  # DEBUG D.63928 => D#197ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_29);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_45 = PHI <.MEM_108(30), .MEM_109(31)>
  # DEBUG D#207ptD.0 => &D#214ptD.0->_M_implD.29859
  # DEBUG thisD.63930 => D#207ptD.0
  # DEBUG thisD.63931 => D#207ptD.0
  # DEBUG thisD.63932 => D#207ptD.0
  # .MEM_114 = VDEF <.MEM_45>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218ptD.0 => &D#780ptD.0->_fullnameD.29623
  # DEBUG thisD.63933 => D#218ptD.0
  # DEBUG thisD.63934 => D#218ptD.0
  # DEBUG thisD.63943 => D#218ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _30 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.63944 => D#218ptD.0
  # PT = nonlocal 
  _31 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_30 != _31)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#218ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.63936 => D#218ptD.0
  # DEBUG __sizeD.63935 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#218ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.63939 => _30
  # DEBUG __aD.63937 => D#183ptD.0
  # DEBUG __nD.63938 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.63942 => _30
  # DEBUG thisD.63940 => D#179ptD.0
  # DEBUG D.63941 => D#180ptD.0
  # .MEM_115 = VDEF <.MEM_114>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_30);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_46 = PHI <.MEM_114(32), .MEM_115(33)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG thisD.63945 => D#189ptD.0
  # DEBUG thisD.63946 => D#189ptD.0
  # DEBUG thisD.63947 => D#189ptD.0
  # .MEM_119 = VDEF <.MEM_46>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217ptD.0 => &D#780ptD.0->_nameD.29622
  # DEBUG thisD.63948 => D#217ptD.0
  # DEBUG thisD.63949 => D#217ptD.0
  # DEBUG thisD.63958 => D#217ptD.0
  # VUSE <.MEM_119>
  # PT = nonlocal escaped 
  _32 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.63959 => D#217ptD.0
  # PT = nonlocal 
  _33 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_32 != _33)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#217ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.63951 => D#217ptD.0
  # DEBUG __sizeD.63950 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#217ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.63954 => _32
  # DEBUG __aD.63952 => D#183ptD.0
  # DEBUG __nD.63953 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.63957 => _32
  # DEBUG thisD.63955 => D#179ptD.0
  # DEBUG D.63956 => D#180ptD.0
  # .MEM_120 = VDEF <.MEM_119>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 35, next block 1, flags: (NEW, REACHABLE)
;;    pred:       34 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_47 = PHI <.MEM_119(34), .MEM_120(35)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG thisD.63960 => D#189ptD.0
  # DEBUG thisD.63961 => D#189ptD.0
  # DEBUG thisD.63962 => D#189ptD.0
  # .MEM_129 = VDEF <.MEM_47>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_129>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (_ZN11BufferState26FeedbackSharedBufferPolicyD0Ev, funcdef_no=2198, decl_uid=41228, cgraph_uid=664, symbol_order=665)


Pass statistics:
----------------

virtual BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (struct FeedbackSharedBufferPolicyD.40434 * const thisD.41229)
{
  intD.9 * * __nstartD.64046;
  struct queueD.40450 * __firstD.64018;
  struct queueD.40450 * _3;
  intD.9 * _6;
  intD.9 * _7;
  intD.9 * * _14;
  intD.9 * * _15;
  intD.9 * * _16;
  intD.9 * _19;
  intD.9 * _22;
  intD.9 * _23;
  intD.9 * _24;
  intD.9 * _25;
  struct ModuleD.29620 * * _27;
  charD.10 * const _28;
  const charD.10 * _29;
  charD.10 * const _30;
  const charD.10 * _31;
  struct queueD.40450 * pretmp_48;
  struct queueD.40450 * prephitmp_49;
  intD.9 * * pretmp_52;
  intD.9 * * prephitmp_55;

;;   basic block 2, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.63984 => this_2(D)
  # .MEM_45 = VDEF <.MEM_1(D)>
  this_2(D)->D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#790ptD.0 => &this_2(D)->_flit_sent_timeD.41197
  # DEBUG thisD.64015 => D#790ptD.0
  # DEBUG D#463ptD.0 => &D#790ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_45>
  # PT = nonlocal escaped 
  _3 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_45>
  # PT = nonlocal escaped 
  __first_9 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.64018 => __first_9
  # DEBUG __lastD.64017 => _3
  # DEBUG __firstD.64023 => __first_9
  if (_3 == __first_9)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_134 = PHI <__first_9(3), __first_12(12)>
  # .MEM_132 = PHI <.MEM_45(3), .MEM_53(12)>
  # DEBUG __firstD.64023 => __first_134
  # DEBUG __rD.57673 => __first_134
  # DEBUG __pointerD.64024 => NULL
  # DEBUG thisD.64025 => NULL
  # DEBUG thisD.64026 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#789ptD.0 => &MEM[(struct dequeD.40449 *)__first_134].D.43590
  # DEBUG thisD.64041 => D#789ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _14 = MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_mapD.43043;
  if (_14 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;
;;    succ:       5 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _15 = MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _16 = _15 + 8;
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __nstart_17 = MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.64047 => D#789ptD.0
  # DEBUG __nstartD.64046 => __nstart_17
  # DEBUG __nfinishD.64045 => _16
  # DEBUG __nD.64048 => __nstart_17
  # DEBUG __nD.64048 => __nstart_17
  if (_16 <= __nstart_17)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_133 = PHI <__nstart_17(6), __nstart_20(8)>
  # .MEM_130 = PHI <.MEM_132(6), .MEM_46(8)>
  # DEBUG __nD.64048 => __nstart_133
  # VUSE <.MEM_130>
  # PT = nonlocal escaped 
  _19 = *__nstart_133;
  # DEBUG thisD.64050 => D#789ptD.0
  # DEBUG __pD.64049 => _19
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#789ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.64054 => _19
  # DEBUG __aD.64052 => D#144ptD.0
  # DEBUG __nD.64053 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64057 => _19
  # DEBUG thisD.64055 => D#140ptD.0
  # DEBUG D.64056 => D#141ptD.0
  # .MEM_46 = VDEF <.MEM_130>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
  # PT = nonlocal escaped 
  __nstart_20 = __nstart_133 + 8;
  # DEBUG __nD.64048 => __nstart_20
  # DEBUG __nD.64048 => __nstart_20
  if (_16 <= __nstart_20)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_46>
  pretmp_52 = MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_mapD.43043;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_46(9), .MEM_132(5)>
  # PT = nonlocal escaped 
  # prephitmp_55 = PHI <pretmp_52(9), _14(5)>
  # DEBUG D#447ptD.0 => D#789ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#792ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#789ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.64060 => D#792ptD.0
  # DEBUG thisD.64058 => D#445ptD.0
  # DEBUG __nD.64059 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.64061
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.64064 => D#792ptD.0
  # DEBUG __aD.64062 => D#265ptD.0
  # DEBUG __nD.64063 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.64067 => D#792ptD.0
  # DEBUG thisD.64065 => D#261ptD.0
  # DEBUG D.64066 => D#262ptD.0
  # .MEM_47 = VDEF <.MEM_129>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_55);
  # DEBUG thisD.57611 => &__map_allocD.64061
  # DEBUG thisD.57590 => &__map_allocD.64061
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       4 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_132(4), .MEM_47(10)>
  # DEBUG D#448ptD.0 => &D#789ptD.0->_M_implD.43041
  # DEBUG thisD.64042 => D#448ptD.0
  # DEBUG thisD.64043 => D#448ptD.0
  # DEBUG thisD.64044 => D#448ptD.0
  # .MEM_53 = VDEF <.MEM_34>
  MEM[(struct  &)__first_134] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_12 = __first_134 + 80;
  # DEBUG __firstD.64023 => __first_12
  # DEBUG __firstD.64023 => __first_12
  if (_3 == __first_12)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_53>
  pretmp_48 = MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_131 = PHI <.MEM_53(13), .MEM_45(2)>
  # PT = nonlocal escaped 
  # prephitmp_49 = PHI <pretmp_48(13), __first_9(2)>
  # DEBUG D#464ptD.0 => &D#790ptD.0->D.41195
  # DEBUG thisD.64027 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#791ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#791ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.64030 => D#791ptD.0
  # DEBUG thisD.64028 => D#253ptD.0
  # DEBUG __nD.64029 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_49 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.64034 => D#791ptD.0
  # DEBUG __aD.64032 => D#248ptD.0
  # DEBUG __nD.64033 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.64037 => D#791ptD.0
  # DEBUG thisD.64035 => D#244ptD.0
  # DEBUG D.64036 => D#245ptD.0
  # .MEM_54 = VDEF <.MEM_131>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_49);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_131(14), .MEM_54(15)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.64038 => D#255ptD.0
  # DEBUG thisD.64039 => D#255ptD.0
  # DEBUG thisD.64040 => D#255ptD.0
  # .MEM_59 = VDEF <.MEM_35>
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466ptD.0 => &this_2(D)->_round_trip_timeD.40448
  # DEBUG thisD.63985 => D#466ptD.0
  # DEBUG D#154ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.63986 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _6 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _6
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63989 => D#155ptD.0
  # DEBUG __pD.63988 => _6
  # DEBUG __nD.63987 => D#148ptD.0
  if (_6 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63993 => _6
  # DEBUG __aD.63991 => D#144ptD.0
  # DEBUG __nD.63992 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63996 => _6
  # DEBUG thisD.63994 => D#140ptD.0
  # DEBUG D.63995 => D#141ptD.0
  # .MEM_60 = VDEF <.MEM_59>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_6);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_36 = PHI <.MEM_59(16), .MEM_60(17)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63997 => D#147ptD.0
  # DEBUG thisD.63998 => D#147ptD.0
  # DEBUG thisD.63999 => D#147ptD.0
  # .MEM_65 = VDEF <.MEM_36>
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465ptD.0 => &this_2(D)->_occupancy_limitD.40447
  # DEBUG thisD.64000 => D#465ptD.0
  # DEBUG D#154ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.64001 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _7
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64004 => D#155ptD.0
  # DEBUG __pD.64003 => _7
  # DEBUG __nD.64002 => D#148ptD.0
  if (_7 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64008 => _7
  # DEBUG __aD.64006 => D#144ptD.0
  # DEBUG __nD.64007 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64011 => _7
  # DEBUG thisD.64009 => D#140ptD.0
  # DEBUG D.64010 => D#141ptD.0
  # .MEM_66 = VDEF <.MEM_65>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_65(18), .MEM_66(19)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64012 => D#147ptD.0
  # DEBUG thisD.64013 => D#147ptD.0
  # DEBUG thisD.64014 => D#147ptD.0
  # .MEM_71 = VDEF <.MEM_37>
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#788ptD.0 => &this_2(D)->D.41247
  # DEBUG thisD.64068 => D#788ptD.0
  # .MEM_72 = VDEF <.MEM_71>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)].D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#224ptD.0 => &D#788ptD.0->_reserved_slotsD.40245
  # DEBUG thisD.64069 => D#224ptD.0
  # DEBUG D#154ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.64070 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_72>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _22
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64073 => D#155ptD.0
  # DEBUG __pD.64072 => _22
  # DEBUG __nD.64071 => D#148ptD.0
  if (_22 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64077 => _22
  # DEBUG __aD.64075 => D#144ptD.0
  # DEBUG __nD.64076 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64080 => _22
  # DEBUG thisD.64078 => D#140ptD.0
  # DEBUG D.64079 => D#141ptD.0
  # .MEM_73 = VDEF <.MEM_72>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_72(20), .MEM_73(21)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64081 => D#147ptD.0
  # DEBUG thisD.64082 => D#147ptD.0
  # DEBUG thisD.64083 => D#147ptD.0
  # .MEM_78 = VDEF <.MEM_38>
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223ptD.0 => &D#788ptD.0->_private_buf_occupancyD.40242
  # DEBUG thisD.64084 => D#223ptD.0
  # DEBUG D#154ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.64085 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_78>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _23
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64088 => D#155ptD.0
  # DEBUG __pD.64087 => _23
  # DEBUG __nD.64086 => D#148ptD.0
  if (_23 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64092 => _23
  # DEBUG __aD.64090 => D#144ptD.0
  # DEBUG __nD.64091 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64095 => _23
  # DEBUG thisD.64093 => D#140ptD.0
  # DEBUG D.64094 => D#141ptD.0
  # .MEM_79 = VDEF <.MEM_78>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_23);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_78(22), .MEM_79(23)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64096 => D#147ptD.0
  # DEBUG thisD.64097 => D#147ptD.0
  # DEBUG thisD.64098 => D#147ptD.0
  # .MEM_84 = VDEF <.MEM_39>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222ptD.0 => &D#788ptD.0->_private_buf_sizeD.40241
  # DEBUG thisD.64099 => D#222ptD.0
  # DEBUG D#154ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.64100 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_84>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _24
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64103 => D#155ptD.0
  # DEBUG __pD.64102 => _24
  # DEBUG __nD.64101 => D#148ptD.0
  if (_24 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64107 => _24
  # DEBUG __aD.64105 => D#144ptD.0
  # DEBUG __nD.64106 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64110 => _24
  # DEBUG thisD.64108 => D#140ptD.0
  # DEBUG D.64109 => D#141ptD.0
  # .MEM_85 = VDEF <.MEM_84>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_84(24), .MEM_85(25)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64111 => D#147ptD.0
  # DEBUG thisD.64112 => D#147ptD.0
  # DEBUG thisD.64113 => D#147ptD.0
  # .MEM_90 = VDEF <.MEM_40>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221ptD.0 => &D#788ptD.0->_private_buf_vc_mapD.40240
  # DEBUG thisD.64114 => D#221ptD.0
  # DEBUG D#154ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.64115 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _25
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64118 => D#155ptD.0
  # DEBUG __pD.64117 => _25
  # DEBUG __nD.64116 => D#148ptD.0
  if (_25 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64122 => _25
  # DEBUG __aD.64120 => D#144ptD.0
  # DEBUG __nD.64121 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64125 => _25
  # DEBUG thisD.64123 => D#140ptD.0
  # DEBUG D.64124 => D#141ptD.0
  # .MEM_91 = VDEF <.MEM_90>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_41 = PHI <.MEM_90(26), .MEM_91(27)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64126 => D#147ptD.0
  # DEBUG thisD.64127 => D#147ptD.0
  # DEBUG thisD.64128 => D#147ptD.0
  # .MEM_96 = VDEF <.MEM_41>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220ptD.0 => &D#788ptD.0->D.40291
  # DEBUG thisD.64129 => D#220ptD.0
  # DEBUG D#787ptD.0 => &MEM[(struct BufferPolicyD.39592 *)this_2(D)].D.39647
  # DEBUG thisD.64130 => D#787ptD.0
  # .MEM_98 = VDEF <.MEM_96>
  MEM[(struct ModuleD.29620 *)this_2(D)]._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTV6ModuleD.30420 + 16B];
  # DEBUG D#219ptD.0 => &D#787ptD.0->_childrenD.30370
  # DEBUG thisD.64131 => D#219ptD.0
  # DEBUG D#213ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.54616 => D#213ptD.0
  # DEBUG D#216ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_finishD.29862
  # DEBUG D#215ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_startD.29861
  # DEBUG D#118ptD.0 => D#215ptD.0
  # DEBUG D#119ptD.0 => D#216ptD.0
  # DEBUG __firstD.54615 => D#118ptD.0
  # DEBUG __lastD.54614 => D#119ptD.0
  # DEBUG D.54613 => D#120ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG __firstD.54036 => D#114ptD.0
  # DEBUG __lastD.54035 => D#115ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D.54025 => D#110ptD.0
  # DEBUG D.54024 => D#111ptD.0
  # DEBUG D#214ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.64132 => D#214ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0->_M_implD.29859._M_end_of_storageD.29863
  # DEBUG D#211ptD.0 => (long intD.12) D#212ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped 
  _27 = MEM[(struct _Vector_baseD.29626 *)this_2(D) + 72B]._M_implD.29859._M_startD.29861;
  # DEBUG D#210ptD.0 => (long intD.12) _27
  # DEBUG D#209ptD.0 => D#211ptD.0 - D#210ptD.0
  # DEBUG D#208ptD.0 => D#209ptD.0 /[ex] 8
  # DEBUG D#205ptD.0 => D#214ptD.0
  # DEBUG D#206ptD.0 => (long unsigned intD.14) D#208ptD.0
  # DEBUG __pD.64135 => _27
  # DEBUG thisD.64133 => D#205ptD.0
  # DEBUG __nD.64134 => D#206ptD.0
  # DEBUG D#204ptD.0 => D#206ptD.0
  # DEBUG D#203ptD.0 => D#205ptD.0
  if (_27 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#202ptD.0 => &D#203ptD.0->_M_implD.29859
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __pD.64139 => _27
  # DEBUG __aD.64137 => D#200ptD.0
  # DEBUG __nD.64138 => D#201ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG __pD.64142 => _27
  # DEBUG thisD.64140 => D#196ptD.0
  # DEBUG D.64141 => D#197ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_27);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_42 = PHI <.MEM_98(28), .MEM_99(29)>
  # DEBUG D#207ptD.0 => &D#214ptD.0->_M_implD.29859
  # DEBUG thisD.64143 => D#207ptD.0
  # DEBUG thisD.64144 => D#207ptD.0
  # DEBUG thisD.64145 => D#207ptD.0
  # .MEM_104 = VDEF <.MEM_42>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218ptD.0 => &D#787ptD.0->_fullnameD.29623
  # DEBUG thisD.64146 => D#218ptD.0
  # DEBUG thisD.64147 => D#218ptD.0
  # DEBUG thisD.64156 => D#218ptD.0
  # VUSE <.MEM_104>
  # PT = nonlocal escaped 
  _28 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.64157 => D#218ptD.0
  # PT = nonlocal 
  _29 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_28 != _29)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#218ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.64149 => D#218ptD.0
  # DEBUG __sizeD.64148 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#218ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.64152 => _28
  # DEBUG __aD.64150 => D#183ptD.0
  # DEBUG __nD.64151 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.64155 => _28
  # DEBUG thisD.64153 => D#179ptD.0
  # DEBUG D.64154 => D#180ptD.0
  # .MEM_105 = VDEF <.MEM_104>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_28);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_43 = PHI <.MEM_104(30), .MEM_105(31)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG thisD.64158 => D#189ptD.0
  # DEBUG thisD.64159 => D#189ptD.0
  # DEBUG thisD.64160 => D#189ptD.0
  # .MEM_109 = VDEF <.MEM_43>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217ptD.0 => &D#787ptD.0->_nameD.29622
  # DEBUG thisD.64161 => D#217ptD.0
  # DEBUG thisD.64162 => D#217ptD.0
  # DEBUG thisD.64171 => D#217ptD.0
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _30 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.64172 => D#217ptD.0
  # PT = nonlocal 
  _31 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_30 != _31)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#217ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.64164 => D#217ptD.0
  # DEBUG __sizeD.64163 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#217ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.64167 => _30
  # DEBUG __aD.64165 => D#183ptD.0
  # DEBUG __nD.64166 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.64170 => _30
  # DEBUG thisD.64168 => D#179ptD.0
  # DEBUG D.64169 => D#180ptD.0
  # .MEM_110 = VDEF <.MEM_109>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_30);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 33, next block 1, flags: (NEW, REACHABLE)
;;    pred:       32 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_109(32), .MEM_110(33)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG thisD.64173 => D#189ptD.0
  # DEBUG thisD.64174 => D#189ptD.0
  # DEBUG thisD.64175 => D#189ptD.0
  # .MEM_118 = VDEF <.MEM_44>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_118>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.41247.D.40291.D.39647._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 280
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 272B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 272
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 272B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_17
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_17
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Analyzing # of iterations of loop 2
  exit condition [__nstart_17 + 8, + , 8](no_overflow) < _15 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _15 - (unsigned long) __nstart_17) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 2
  exit condition [__nstart_17 + 8, + , 8](no_overflow) < _15 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _15 - (unsigned long) __nstart_17) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Analyzing # of iterations of loop 1
  exit condition [__first_9 + 80, + , 80](no_overflow) != _3
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551535
  result:
    under assumptions ((unsigned long) _3 - (unsigned long) (__first_9 + 80) & 15) == 0
    # of iterations (((unsigned long) _3 - (unsigned long) (__first_9 + 80)) /[ex] 16) * 922337203685477581 & 1152921504606846975, bounded by 230584300921369395
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_17
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_17
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Analyzing # of iterations of loop 2
  exit condition [__nstart_17 + 8, + , 8](no_overflow) < _15 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _15 - (unsigned long) __nstart_17) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_17
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_17
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Creating dr for *__nstart_133
analyze_innermost: success.
	base_address: __nstart_17
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_133
Analyzing # of iterations of loop 2
  exit condition [__nstart_17 + 8, + , 8](no_overflow) < _15 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _15 - (unsigned long) __nstart_17) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_9
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_9]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Analyzing # of iterations of loop 1
  exit condition [__first_9 + 80, + , 80](no_overflow) != _3
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551535
  result:
    under assumptions ((unsigned long) _3 - (unsigned long) (__first_9 + 80) & 15) == 0
    # of iterations (((unsigned long) _3 - (unsigned long) (__first_9 + 80)) /[ex] 16) * 922337203685477581 & 1152921504606846975, bounded by 230584300921369395
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 272
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 272B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:37, LOOPS:2, CONDITIONS:15, STMTS:608)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_14 bb_3 })
  {
    <bb 2>:
    # DEBUG this => this_2(D)
    # .MEM_45 = VDEF <.MEM_1(D)>
    this_2(D)->D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
    # DEBUG D#790 => &this_2(D)->_flit_sent_time
    # DEBUG this => D#790
    # DEBUG D#463 => &D#790->D.41195
    # DEBUG this => D#463
    # VUSE <.MEM_45>
    _3 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish;
    # VUSE <.MEM_45>
    __first_9 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start;
    # DEBUG __first => __first_9
    # DEBUG __last => _3
    # DEBUG __first => __first_9
    if (_3 == __first_9)
      goto <bb 14>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_13 (preds = {bb_11 }, succs = {bb_35 })
  {
    <bb 13>:

  }
  bb_35 (preds = {bb_13 }, succs = {bb_14 })
  {
    <bb 35>:
    # VUSE <.MEM_53>
    pretmp_48 = MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start;

  }
  bb_14 (preds = {bb_35 bb_2 }, succs = {bb_15 bb_16 })
  {
    <bb 14>:
    # .MEM_131 = PHI <.MEM_53(35), .MEM_45(2)>
    # prephitmp_49 = PHI <pretmp_48(35), __first_9(2)>
    # DEBUG D#464 => &D#790->D.41195
    # DEBUG this => D#464
    # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
    # DEBUG D#259 => (long int) D#260
    # DEBUG D#791 => MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
    # DEBUG D#258 => (long int) D#791
    # DEBUG D#257 => D#259 - D#258
    # DEBUG D#256 => D#257 /[ex] 80
    # DEBUG D#253 => D#464
    # DEBUG D#254 => (long unsigned int) D#256
    # DEBUG __p => D#791
    # DEBUG this => D#253
    # DEBUG __n => D#254
    # DEBUG D#252 => D#254
    # DEBUG D#251 => D#253
    if (prephitmp_49 != 0B)
      goto <bb 15>;
    else
      goto <bb 16>;

  }
  bb_15 (preds = {bb_14 }, succs = {bb_16 })
  {
    <bb 15>:
    # DEBUG D#250 => &D#251->_M_impl
    # DEBUG D#248 => D#250
    # DEBUG D#249 => D#252
    # DEBUG __p => D#791
    # DEBUG __a => D#248
    # DEBUG __n => D#249
    # DEBUG D#247 => D#249
    # DEBUG D#246 => D#248
    # DEBUG D#244 => D#246
    # DEBUG D#245 => D#247
    # DEBUG __p => D#791
    # DEBUG this => D#244
    # DEBUG D.64036 => D#245
    # .MEM_54 = VDEF <.MEM_131>
    operator delete (prephitmp_49);

  }
  bb_16 (preds = {bb_14 bb_15 }, succs = {bb_17 bb_18 })
  {
    <bb 16>:
    # .MEM_35 = PHI <.MEM_131(14), .MEM_54(15)>
    # DEBUG D#255 => &D#464->_M_impl
    # DEBUG this => D#255
    # DEBUG this => D#255
    # DEBUG this => D#255
    # .MEM_59 = VDEF <.MEM_35>
    MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
    # DEBUG D#466 => &this_2(D)->_round_trip_time
    # DEBUG this => D#466
    # DEBUG D#154 => &D#466->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#466->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#466->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#466->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_59>
    _6 = MEM[(struct _Vector_base *)this_2(D) + 248B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _6
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _6
    # DEBUG __n => D#148
    if (_6 != 0B)
      goto <bb 17>;
    else
      goto <bb 18>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_18 })
  {
    <bb 17>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _6
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _6
    # DEBUG this => D#140
    # DEBUG D.63995 => D#141
    # .MEM_60 = VDEF <.MEM_59>
    operator delete (_6);

  }
  bb_18 (preds = {bb_16 bb_17 }, succs = {bb_19 bb_20 })
  {
    <bb 18>:
    # .MEM_36 = PHI <.MEM_59(16), .MEM_60(17)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_65 = VDEF <.MEM_36>
    MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
    # DEBUG D#465 => &this_2(D)->_occupancy_limit
    # DEBUG this => D#465
    # DEBUG D#154 => &D#465->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#465->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#465->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#465->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_65>
    _7 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _7
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _7
    # DEBUG __n => D#148
    if (_7 != 0B)
      goto <bb 19>;
    else
      goto <bb 20>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _7
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _7
    # DEBUG this => D#140
    # DEBUG D.64010 => D#141
    # .MEM_66 = VDEF <.MEM_65>
    operator delete (_7);

  }
  bb_20 (preds = {bb_18 bb_19 }, succs = {bb_21 bb_22 })
  {
    <bb 20>:
    # .MEM_37 = PHI <.MEM_65(18), .MEM_66(19)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_71 = VDEF <.MEM_37>
    MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
    # DEBUG D#788 => &this_2(D)->D.41247
    # DEBUG this => D#788
    # .MEM_72 = VDEF <.MEM_71>
    MEM[(struct SharedBufferPolicy *)this_2(D)].D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
    # DEBUG D#224 => &D#788->_reserved_slots
    # DEBUG this => D#224
    # DEBUG D#154 => &D#224->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#224->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#224->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#224->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_72>
    _22 = MEM[(struct _Vector_base *)this_2(D) + 192B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _22
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _22
    # DEBUG __n => D#148
    if (_22 != 0B)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _22
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _22
    # DEBUG this => D#140
    # DEBUG D.64079 => D#141
    # .MEM_73 = VDEF <.MEM_72>
    operator delete (_22);

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # .MEM_38 = PHI <.MEM_72(20), .MEM_73(21)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_78 = VDEF <.MEM_38>
    MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
    # DEBUG D#223 => &D#788->_private_buf_occupancy
    # DEBUG this => D#223
    # DEBUG D#154 => &D#223->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#223->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#223->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#223->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_78>
    _23 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _23
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _23
    # DEBUG __n => D#148
    if (_23 != 0B)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 }, succs = {bb_24 })
  {
    <bb 23>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _23
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _23
    # DEBUG this => D#140
    # DEBUG D.64094 => D#141
    # .MEM_79 = VDEF <.MEM_78>
    operator delete (_23);

  }
  bb_24 (preds = {bb_22 bb_23 }, succs = {bb_25 bb_26 })
  {
    <bb 24>:
    # .MEM_39 = PHI <.MEM_78(22), .MEM_79(23)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_84 = VDEF <.MEM_39>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#222 => &D#788->_private_buf_size
    # DEBUG this => D#222
    # DEBUG D#154 => &D#222->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#222->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#222->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#222->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_84>
    _24 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _24
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _24
    # DEBUG __n => D#148
    if (_24 != 0B)
      goto <bb 25>;
    else
      goto <bb 26>;

  }
  bb_25 (preds = {bb_24 }, succs = {bb_26 })
  {
    <bb 25>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _24
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _24
    # DEBUG this => D#140
    # DEBUG D.64109 => D#141
    # .MEM_85 = VDEF <.MEM_84>
    operator delete (_24);

  }
  bb_26 (preds = {bb_24 bb_25 }, succs = {bb_27 bb_28 })
  {
    <bb 26>:
    # .MEM_40 = PHI <.MEM_84(24), .MEM_85(25)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_90 = VDEF <.MEM_40>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#221 => &D#788->_private_buf_vc_map
    # DEBUG this => D#221
    # DEBUG D#154 => &D#221->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#221->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#221->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#221->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_90>
    _25 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _25
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _25
    # DEBUG __n => D#148
    if (_25 != 0B)
      goto <bb 27>;
    else
      goto <bb 28>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_28 })
  {
    <bb 27>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _25
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _25
    # DEBUG this => D#140
    # DEBUG D.64124 => D#141
    # .MEM_91 = VDEF <.MEM_90>
    operator delete (_25);

  }
  bb_28 (preds = {bb_26 bb_27 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # .MEM_41 = PHI <.MEM_90(26), .MEM_91(27)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_96 = VDEF <.MEM_41>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#220 => &D#788->D.40291
    # DEBUG this => D#220
    # DEBUG D#787 => &MEM[(struct BufferPolicy *)this_2(D)].D.39647
    # DEBUG this => D#787
    # .MEM_98 = VDEF <.MEM_96>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#219 => &D#787->_children
    # DEBUG this => D#219
    # DEBUG D#213 => &D#219->D.30368
    # DEBUG this => D#213
    # DEBUG D#216 => D#219->D.30368._M_impl._M_finish
    # DEBUG D#215 => D#219->D.30368._M_impl._M_start
    # DEBUG D#118 => D#215
    # DEBUG D#119 => D#216
    # DEBUG __first => D#118
    # DEBUG __last => D#119
    # DEBUG D.54613 => D#120
    # DEBUG D#117 => D#119
    # DEBUG D#116 => D#118
    # DEBUG D#114 => D#116
    # DEBUG D#115 => D#117
    # DEBUG __first => D#114
    # DEBUG __last => D#115
    # DEBUG D#113 => D#115
    # DEBUG D#112 => D#114
    # DEBUG D#110 => D#112
    # DEBUG D#111 => D#113
    # DEBUG D.54025 => D#110
    # DEBUG D.54024 => D#111
    # DEBUG D#214 => &D#219->D.30368
    # DEBUG this => D#214
    # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
    # DEBUG D#211 => (long int) D#212
    # VUSE <.MEM_98>
    _27 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#210 => (long int) _27
    # DEBUG D#209 => D#211 - D#210
    # DEBUG D#208 => D#209 /[ex] 8
    # DEBUG D#205 => D#214
    # DEBUG D#206 => (long unsigned int) D#208
    # DEBUG __p => _27
    # DEBUG this => D#205
    # DEBUG __n => D#206
    # DEBUG D#204 => D#206
    # DEBUG D#203 => D#205
    if (_27 != 0B)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_30 })
  {
    <bb 29>:
    # DEBUG D#202 => &D#203->_M_impl
    # DEBUG D#200 => D#202
    # DEBUG D#201 => D#204
    # DEBUG __p => _27
    # DEBUG __a => D#200
    # DEBUG __n => D#201
    # DEBUG D#199 => D#201
    # DEBUG D#198 => D#200
    # DEBUG D#196 => D#198
    # DEBUG D#197 => D#199
    # DEBUG __p => _27
    # DEBUG this => D#196
    # DEBUG D.64141 => D#197
    # .MEM_99 = VDEF <.MEM_98>
    operator delete (_27);

  }
  bb_30 (preds = {bb_28 bb_29 }, succs = {bb_31 bb_32 })
  {
    <bb 30>:
    # .MEM_42 = PHI <.MEM_98(28), .MEM_99(29)>
    # DEBUG D#207 => &D#214->_M_impl
    # DEBUG this => D#207
    # DEBUG this => D#207
    # DEBUG this => D#207
    # .MEM_104 = VDEF <.MEM_42>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#218 => &D#787->_fullname
    # DEBUG this => D#218
    # DEBUG this => D#218
    # DEBUG this => D#218
    # VUSE <.MEM_104>
    _28 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#218
    # DEBUG this => D#1
    # DEBUG this => D#218
    _29 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_28 != _29)
      goto <bb 31>;
    else
      goto <bb 32>;

  }
  bb_31 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 31>:
    # DEBUG D#188 => MEM[(struct basic_string *)D#218].D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => D#218
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => D#218
    # DEBUG this => D#1
    # DEBUG this => D#218
    # DEBUG D#185 => &MEM[(struct basic_string *)D#218]._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _28
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _28
    # DEBUG this => D#179
    # DEBUG D.64154 => D#180
    # .MEM_105 = VDEF <.MEM_104>
    operator delete (_28);

  }
  bb_32 (preds = {bb_30 bb_31 }, succs = {bb_33 bb_34 })
  {
    <bb 32>:
    # .MEM_43 = PHI <.MEM_104(30), .MEM_105(31)>
    # DEBUG D#189 => &MEM[(struct basic_string *)D#218]._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_109 = VDEF <.MEM_43>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#217 => &D#787->_name
    # DEBUG this => D#217
    # DEBUG this => D#217
    # DEBUG this => D#217
    # VUSE <.MEM_109>
    _30 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#217
    # DEBUG this => D#1
    # DEBUG this => D#217
    _31 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_30 != _31)
      goto <bb 33>;
    else
      goto <bb 34>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_34 })
  {
    <bb 33>:
    # DEBUG D#188 => MEM[(struct basic_string *)D#217].D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => D#217
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => D#217
    # DEBUG this => D#1
    # DEBUG this => D#217
    # DEBUG D#185 => &MEM[(struct basic_string *)D#217]._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _30
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _30
    # DEBUG this => D#179
    # DEBUG D.64169 => D#180
    # .MEM_110 = VDEF <.MEM_109>
    operator delete (_30);

  }
  bb_34 (preds = {bb_32 bb_33 }, succs = {bb_1 })
  {
    <bb 34>:
    # .MEM_44 = PHI <.MEM_109(32), .MEM_110(33)>
    # DEBUG D#189 => &MEM[(struct basic_string *)D#217]._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_118 = VDEF <.MEM_44>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # .MEM_4 = VDEF <.MEM_118>
    operator delete (this_2(D));
    # VUSE <.MEM_4>
    return;

  }
  loop_1 (header = 4, latch = 12, niter = )
  {
    bb_4 (preds = {bb_3 bb_12 }, succs = {bb_5 bb_11 })
    {
      <bb 4>:
      # __first_134 = PHI <__first_9(3), __first_12(12)>
      # .MEM_132 = PHI <.MEM_45(3), .MEM_53(12)>
      # DEBUG __first => __first_134
      # DEBUG __r => __first_134
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#458
      # DEBUG D#449 => &D#458->D.43590
      # DEBUG this => D#449
      # DEBUG this => D#458
      # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
      # DEBUG this => NULL
      # DEBUG __x => D#66
      # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
      # DEBUG D.57660 => D#457
      # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
      # DEBUG D.57661 => D#456
      # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
      # DEBUG D.57662 => D#455
      # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
      # DEBUG D.57663 => D#454
      # DEBUG this => D#458
      # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
      # DEBUG this => NULL
      # DEBUG __x => D#67
      # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
      # DEBUG D.57656 => D#453
      # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
      # DEBUG D.57657 => D#452
      # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
      # DEBUG D.57658 => D#451
      # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
      # DEBUG D.57659 => D#450
      # DEBUG D#68 => D#458
      # DEBUG this => D#68
      # DEBUG __first => D#69
      # DEBUG __last => D#70
      # DEBUG D.57644 => D#71
      # DEBUG D#789 => &MEM[(struct deque *)__first_134].D.43590
      # DEBUG this => D#789
      # VUSE <.MEM_132>
      _14 = MEM[(struct _Deque_base *)__first_134]._M_impl._M_map;
      if (_14 != 0B)
        goto <bb 5>;
      else
        goto <bb 11>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_10 bb_6 })
    {
      <bb 5>:
      # VUSE <.MEM_132>
      _15 = MEM[(struct _Deque_base *)__first_134]._M_impl._M_finish._M_node;
      _16 = _15 + 8;
      # VUSE <.MEM_132>
      __nstart_17 = MEM[(struct _Deque_base *)__first_134]._M_impl._M_start._M_node;
      # DEBUG this => D#789
      # DEBUG __nstart => __nstart_17
      # DEBUG __nfinish => _16
      # DEBUG __n => __nstart_17
      # DEBUG __n => __nstart_17
      if (_16 <= __nstart_17)
        goto <bb 10>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_9 (preds = {bb_7 }, succs = {bb_36 })
    {
      <bb 9>:

    }
    bb_36 (preds = {bb_9 }, succs = {bb_10 })
    {
      <bb 36>:
      # VUSE <.MEM_46>
      pretmp_52 = MEM[(struct _Deque_base *)__first_134]._M_impl._M_map;

    }
    bb_10 (preds = {bb_36 bb_5 }, succs = {bb_11 })
    {
      <bb 10>:
      # .MEM_129 = PHI <.MEM_46(36), .MEM_132(5)>
      # prephitmp_55 = PHI <pretmp_52(36), _14(5)>
      # DEBUG D#447 => D#789->_M_impl._M_map_size
      # DEBUG D#792 => MEM[(struct _Deque_base *)__first_134]._M_impl._M_map
      # DEBUG D#445 => D#789
      # DEBUG D#446 => D#447
      # DEBUG __p => D#792
      # DEBUG this => D#445
      # DEBUG __n => D#446
      # DEBUG D#444 => D#446
      # DEBUG D#443 => D#445
      # DEBUG D#442 => D#443
      # DEBUG this => D#442
      # DEBUG D#441 => D#442
      # DEBUG this => D#441
      # DEBUG this => NULL
      # DEBUG D.57578 => NULL
      # DEBUG this => NULL
      # DEBUG D#265 => &__map_alloc
      # DEBUG D#266 => D#444
      # DEBUG __p => D#792
      # DEBUG __a => D#265
      # DEBUG __n => D#266
      # DEBUG D#264 => D#266
      # DEBUG D#263 => D#265
      # DEBUG D#261 => D#263
      # DEBUG D#262 => D#264
      # DEBUG __p => D#792
      # DEBUG this => D#261
      # DEBUG D.64066 => D#262
      # .MEM_47 = VDEF <.MEM_129>
      operator delete (prephitmp_55);
      # DEBUG this => &__map_alloc
      # DEBUG this => &__map_alloc

    }
    bb_11 (preds = {bb_4 bb_10 }, succs = {bb_13 bb_12 })
    {
      <bb 11>:
      # .MEM_34 = PHI <.MEM_132(4), .MEM_47(10)>
      # DEBUG D#448 => &D#789->_M_impl
      # DEBUG this => D#448
      # DEBUG this => D#448
      # DEBUG this => D#448
      # .MEM_53 = VDEF <.MEM_34>
      MEM[(struct  &)__first_134] ={v} {CLOBBER};
      __first_12 = __first_134 + 80;
      # DEBUG __first => __first_12
      # DEBUG __first => __first_12
      if (_3 == __first_12)
        goto <bb 13>;
      else
        goto <bb 12>;

    }
    bb_12 (preds = {bb_11 }, succs = {bb_4 })
    {
      <bb 12>:
      goto <bb 4>;

    }
    loop_2 (header = 7, latch = 8, niter = (((unsigned long) _15 - (unsigned long) __nstart_17) + 7) / 8, upper_bound = 2305843009213693951)
    {
      bb_7 (preds = {bb_6 bb_8 }, succs = {bb_9 bb_8 })
      {
        <bb 7>:
        # __nstart_133 = PHI <__nstart_17(6), __nstart_20(8)>
        # .MEM_130 = PHI <.MEM_132(6), .MEM_46(8)>
        # DEBUG __n => __nstart_133
        # VUSE <.MEM_130>
        _19 = *__nstart_133;
        # DEBUG this => D#789
        # DEBUG __p => _19
        # DEBUG __size => 4
        # DEBUG D#167 => &D#789->_M_impl
        # DEBUG D#144 => D#167
        # DEBUG __p => _19
        # DEBUG __a => D#144
        # DEBUG __n => D#145
        # DEBUG D#143 => D#145
        # DEBUG D#142 => D#144
        # DEBUG D#140 => D#142
        # DEBUG D#141 => D#143
        # DEBUG __p => _19
        # DEBUG this => D#140
        # DEBUG D.64056 => D#141
        # .MEM_46 = VDEF <.MEM_130>
        operator delete (_19);
        __nstart_20 = __nstart_133 + 8;
        # DEBUG __n => __nstart_20
        # DEBUG __n => __nstart_20
        if (_16 <= __nstart_20)
          goto <bb 9>;
        else
          goto <bb 8>;

      }
      bb_8 (preds = {bb_7 }, succs = {bb_7 })
      {
        <bb 8>:
        goto <bb 7>;

      }
    }
  }
}

Pass statistics:
----------------

virtual BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (struct FeedbackSharedBufferPolicyD.40434 * const thisD.41229)
{
  intD.9 * * __nstartD.64046;
  struct queueD.40450 * __firstD.64018;
  struct queueD.40450 * _3;
  intD.9 * _6;
  intD.9 * _7;
  intD.9 * * _14;
  intD.9 * * _15;
  intD.9 * * _16;
  intD.9 * _19;
  intD.9 * _22;
  intD.9 * _23;
  intD.9 * _24;
  intD.9 * _25;
  struct ModuleD.29620 * * _27;
  charD.10 * const _28;
  const charD.10 * _29;
  charD.10 * const _30;
  const charD.10 * _31;
  struct queueD.40450 * pretmp_48;
  struct queueD.40450 * prephitmp_49;
  intD.9 * * pretmp_52;
  intD.9 * * prephitmp_55;

;;   basic block 2, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.63984 => this_2(D)
  # .MEM_45 = VDEF <.MEM_1(D)>
  this_2(D)->D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#790ptD.0 => &this_2(D)->_flit_sent_timeD.41197
  # DEBUG thisD.64015 => D#790ptD.0
  # DEBUG D#463ptD.0 => &D#790ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_45>
  # PT = nonlocal escaped 
  _3 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_45>
  # PT = nonlocal escaped 
  __first_9 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.64018 => __first_9
  # DEBUG __lastD.64017 => _3
  # DEBUG __firstD.64023 => __first_9
  if (_3 == __first_9)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_134 = PHI <__first_9(3), __first_12(12)>
  # .MEM_132 = PHI <.MEM_45(3), .MEM_53(12)>
  # DEBUG __firstD.64023 => __first_134
  # DEBUG __rD.57673 => __first_134
  # DEBUG __pointerD.64024 => NULL
  # DEBUG thisD.64025 => NULL
  # DEBUG thisD.64026 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#789ptD.0 => &MEM[(struct dequeD.40449 *)__first_134].D.43590
  # DEBUG thisD.64041 => D#789ptD.0
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _14 = MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_mapD.43043;
  if (_14 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;
;;    succ:       5 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  _15 = MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _16 = _15 + 8;
  # VUSE <.MEM_132>
  # PT = nonlocal escaped 
  __nstart_17 = MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.64047 => D#789ptD.0
  # DEBUG __nstartD.64046 => __nstart_17
  # DEBUG __nfinishD.64045 => _16
  # DEBUG __nD.64048 => __nstart_17
  # DEBUG __nD.64048 => __nstart_17
  if (_16 <= __nstart_17)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_133 = PHI <__nstart_17(6), __nstart_20(8)>
  # .MEM_130 = PHI <.MEM_132(6), .MEM_46(8)>
  # DEBUG __nD.64048 => __nstart_133
  # VUSE <.MEM_130>
  # PT = nonlocal escaped 
  _19 = *__nstart_133;
  # DEBUG thisD.64050 => D#789ptD.0
  # DEBUG __pD.64049 => _19
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#789ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.64054 => _19
  # DEBUG __aD.64052 => D#144ptD.0
  # DEBUG __nD.64053 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64057 => _19
  # DEBUG thisD.64055 => D#140ptD.0
  # DEBUG D.64056 => D#141ptD.0
  # .MEM_46 = VDEF <.MEM_130>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
  # PT = nonlocal escaped 
  __nstart_20 = __nstart_133 + 8;
  # DEBUG __nD.64048 => __nstart_20
  # DEBUG __nD.64048 => __nstart_20
  if (_16 <= __nstart_20)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 8, next block 36, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       36 [100.0%]  (FALLTHRU)

;;   basic block 36, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 9, next block 10, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_46>
  pretmp_52 = MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_mapD.43043;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 36, next block 11, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_46(36), .MEM_132(5)>
  # PT = nonlocal escaped 
  # prephitmp_55 = PHI <pretmp_52(36), _14(5)>
  # DEBUG D#447ptD.0 => D#789ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#792ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_134]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#789ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.64060 => D#792ptD.0
  # DEBUG thisD.64058 => D#445ptD.0
  # DEBUG __nD.64059 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.64061
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.64064 => D#792ptD.0
  # DEBUG __aD.64062 => D#265ptD.0
  # DEBUG __nD.64063 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.64067 => D#792ptD.0
  # DEBUG thisD.64065 => D#261ptD.0
  # DEBUG D.64066 => D#262ptD.0
  # .MEM_47 = VDEF <.MEM_129>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_55);
  # DEBUG thisD.57611 => &__map_allocD.64061
  # DEBUG thisD.57590 => &__map_allocD.64061
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       4 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_132(4), .MEM_47(10)>
  # DEBUG D#448ptD.0 => &D#789ptD.0->_M_implD.43041
  # DEBUG thisD.64042 => D#448ptD.0
  # DEBUG thisD.64043 => D#448ptD.0
  # DEBUG thisD.64044 => D#448ptD.0
  # .MEM_53 = VDEF <.MEM_34>
  MEM[(struct  &)__first_134] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_12 = __first_134 + 80;
  # DEBUG __firstD.64023 => __first_12
  # DEBUG __firstD.64023 => __first_12
  if (_3 == __first_12)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 12, next block 35, flags: (NEW)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       35 [100.0%]  (FALLTHRU)

;;   basic block 35, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_53>
  pretmp_48 = MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 35, next block 15, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_131 = PHI <.MEM_53(35), .MEM_45(2)>
  # PT = nonlocal escaped 
  # prephitmp_49 = PHI <pretmp_48(35), __first_9(2)>
  # DEBUG D#464ptD.0 => &D#790ptD.0->D.41195
  # DEBUG thisD.64027 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#791ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#791ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.64030 => D#791ptD.0
  # DEBUG thisD.64028 => D#253ptD.0
  # DEBUG __nD.64029 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_49 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.64034 => D#791ptD.0
  # DEBUG __aD.64032 => D#248ptD.0
  # DEBUG __nD.64033 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.64037 => D#791ptD.0
  # DEBUG thisD.64035 => D#244ptD.0
  # DEBUG D.64036 => D#245ptD.0
  # .MEM_54 = VDEF <.MEM_131>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_49);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_131(14), .MEM_54(15)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.64038 => D#255ptD.0
  # DEBUG thisD.64039 => D#255ptD.0
  # DEBUG thisD.64040 => D#255ptD.0
  # .MEM_59 = VDEF <.MEM_35>
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466ptD.0 => &this_2(D)->_round_trip_timeD.40448
  # DEBUG thisD.63985 => D#466ptD.0
  # DEBUG D#154ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.63986 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  _6 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _6
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.63989 => D#155ptD.0
  # DEBUG __pD.63988 => _6
  # DEBUG __nD.63987 => D#148ptD.0
  if (_6 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.63993 => _6
  # DEBUG __aD.63991 => D#144ptD.0
  # DEBUG __nD.63992 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.63996 => _6
  # DEBUG thisD.63994 => D#140ptD.0
  # DEBUG D.63995 => D#141ptD.0
  # .MEM_60 = VDEF <.MEM_59>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_6);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_36 = PHI <.MEM_59(16), .MEM_60(17)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.63997 => D#147ptD.0
  # DEBUG thisD.63998 => D#147ptD.0
  # DEBUG thisD.63999 => D#147ptD.0
  # .MEM_65 = VDEF <.MEM_36>
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465ptD.0 => &this_2(D)->_occupancy_limitD.40447
  # DEBUG thisD.64000 => D#465ptD.0
  # DEBUG D#154ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.64001 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_65>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _7
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64004 => D#155ptD.0
  # DEBUG __pD.64003 => _7
  # DEBUG __nD.64002 => D#148ptD.0
  if (_7 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64008 => _7
  # DEBUG __aD.64006 => D#144ptD.0
  # DEBUG __nD.64007 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64011 => _7
  # DEBUG thisD.64009 => D#140ptD.0
  # DEBUG D.64010 => D#141ptD.0
  # .MEM_66 = VDEF <.MEM_65>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_37 = PHI <.MEM_65(18), .MEM_66(19)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64012 => D#147ptD.0
  # DEBUG thisD.64013 => D#147ptD.0
  # DEBUG thisD.64014 => D#147ptD.0
  # .MEM_71 = VDEF <.MEM_37>
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#788ptD.0 => &this_2(D)->D.41247
  # DEBUG thisD.64068 => D#788ptD.0
  # .MEM_72 = VDEF <.MEM_71>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)].D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#224ptD.0 => &D#788ptD.0->_reserved_slotsD.40245
  # DEBUG thisD.64069 => D#224ptD.0
  # DEBUG D#154ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.64070 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_72>
  # PT = nonlocal escaped 
  _22 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _22
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64073 => D#155ptD.0
  # DEBUG __pD.64072 => _22
  # DEBUG __nD.64071 => D#148ptD.0
  if (_22 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64077 => _22
  # DEBUG __aD.64075 => D#144ptD.0
  # DEBUG __nD.64076 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64080 => _22
  # DEBUG thisD.64078 => D#140ptD.0
  # DEBUG D.64079 => D#141ptD.0
  # .MEM_73 = VDEF <.MEM_72>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_22);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_38 = PHI <.MEM_72(20), .MEM_73(21)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64081 => D#147ptD.0
  # DEBUG thisD.64082 => D#147ptD.0
  # DEBUG thisD.64083 => D#147ptD.0
  # .MEM_78 = VDEF <.MEM_38>
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223ptD.0 => &D#788ptD.0->_private_buf_occupancyD.40242
  # DEBUG thisD.64084 => D#223ptD.0
  # DEBUG D#154ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.64085 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_78>
  # PT = nonlocal escaped 
  _23 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _23
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64088 => D#155ptD.0
  # DEBUG __pD.64087 => _23
  # DEBUG __nD.64086 => D#148ptD.0
  if (_23 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64092 => _23
  # DEBUG __aD.64090 => D#144ptD.0
  # DEBUG __nD.64091 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64095 => _23
  # DEBUG thisD.64093 => D#140ptD.0
  # DEBUG D.64094 => D#141ptD.0
  # .MEM_79 = VDEF <.MEM_78>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_23);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_39 = PHI <.MEM_78(22), .MEM_79(23)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64096 => D#147ptD.0
  # DEBUG thisD.64097 => D#147ptD.0
  # DEBUG thisD.64098 => D#147ptD.0
  # .MEM_84 = VDEF <.MEM_39>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222ptD.0 => &D#788ptD.0->_private_buf_sizeD.40241
  # DEBUG thisD.64099 => D#222ptD.0
  # DEBUG D#154ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.64100 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_84>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _24
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64103 => D#155ptD.0
  # DEBUG __pD.64102 => _24
  # DEBUG __nD.64101 => D#148ptD.0
  if (_24 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64107 => _24
  # DEBUG __aD.64105 => D#144ptD.0
  # DEBUG __nD.64106 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64110 => _24
  # DEBUG thisD.64108 => D#140ptD.0
  # DEBUG D.64109 => D#141ptD.0
  # .MEM_85 = VDEF <.MEM_84>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_24);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_40 = PHI <.MEM_84(24), .MEM_85(25)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64111 => D#147ptD.0
  # DEBUG thisD.64112 => D#147ptD.0
  # DEBUG thisD.64113 => D#147ptD.0
  # .MEM_90 = VDEF <.MEM_40>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221ptD.0 => &D#788ptD.0->_private_buf_vc_mapD.40240
  # DEBUG thisD.64114 => D#221ptD.0
  # DEBUG D#154ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.64115 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _25
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64118 => D#155ptD.0
  # DEBUG __pD.64117 => _25
  # DEBUG __nD.64116 => D#148ptD.0
  if (_25 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64122 => _25
  # DEBUG __aD.64120 => D#144ptD.0
  # DEBUG __nD.64121 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64125 => _25
  # DEBUG thisD.64123 => D#140ptD.0
  # DEBUG D.64124 => D#141ptD.0
  # .MEM_91 = VDEF <.MEM_90>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_41 = PHI <.MEM_90(26), .MEM_91(27)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64126 => D#147ptD.0
  # DEBUG thisD.64127 => D#147ptD.0
  # DEBUG thisD.64128 => D#147ptD.0
  # .MEM_96 = VDEF <.MEM_41>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220ptD.0 => &D#788ptD.0->D.40291
  # DEBUG thisD.64129 => D#220ptD.0
  # DEBUG D#787ptD.0 => &MEM[(struct BufferPolicyD.39592 *)this_2(D)].D.39647
  # DEBUG thisD.64130 => D#787ptD.0
  # .MEM_98 = VDEF <.MEM_96>
  MEM[(struct ModuleD.29620 *)this_2(D)]._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTV6ModuleD.30420 + 16B];
  # DEBUG D#219ptD.0 => &D#787ptD.0->_childrenD.30370
  # DEBUG thisD.64131 => D#219ptD.0
  # DEBUG D#213ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.54616 => D#213ptD.0
  # DEBUG D#216ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_finishD.29862
  # DEBUG D#215ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_startD.29861
  # DEBUG D#118ptD.0 => D#215ptD.0
  # DEBUG D#119ptD.0 => D#216ptD.0
  # DEBUG __firstD.54615 => D#118ptD.0
  # DEBUG __lastD.54614 => D#119ptD.0
  # DEBUG D.54613 => D#120ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG __firstD.54036 => D#114ptD.0
  # DEBUG __lastD.54035 => D#115ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D.54025 => D#110ptD.0
  # DEBUG D.54024 => D#111ptD.0
  # DEBUG D#214ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.64132 => D#214ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0->_M_implD.29859._M_end_of_storageD.29863
  # DEBUG D#211ptD.0 => (long intD.12) D#212ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped 
  _27 = MEM[(struct _Vector_baseD.29626 *)this_2(D) + 72B]._M_implD.29859._M_startD.29861;
  # DEBUG D#210ptD.0 => (long intD.12) _27
  # DEBUG D#209ptD.0 => D#211ptD.0 - D#210ptD.0
  # DEBUG D#208ptD.0 => D#209ptD.0 /[ex] 8
  # DEBUG D#205ptD.0 => D#214ptD.0
  # DEBUG D#206ptD.0 => (long unsigned intD.14) D#208ptD.0
  # DEBUG __pD.64135 => _27
  # DEBUG thisD.64133 => D#205ptD.0
  # DEBUG __nD.64134 => D#206ptD.0
  # DEBUG D#204ptD.0 => D#206ptD.0
  # DEBUG D#203ptD.0 => D#205ptD.0
  if (_27 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#202ptD.0 => &D#203ptD.0->_M_implD.29859
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __pD.64139 => _27
  # DEBUG __aD.64137 => D#200ptD.0
  # DEBUG __nD.64138 => D#201ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG __pD.64142 => _27
  # DEBUG thisD.64140 => D#196ptD.0
  # DEBUG D.64141 => D#197ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_27);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_42 = PHI <.MEM_98(28), .MEM_99(29)>
  # DEBUG D#207ptD.0 => &D#214ptD.0->_M_implD.29859
  # DEBUG thisD.64143 => D#207ptD.0
  # DEBUG thisD.64144 => D#207ptD.0
  # DEBUG thisD.64145 => D#207ptD.0
  # .MEM_104 = VDEF <.MEM_42>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218ptD.0 => &D#787ptD.0->_fullnameD.29623
  # DEBUG thisD.64146 => D#218ptD.0
  # DEBUG thisD.64147 => D#218ptD.0
  # DEBUG thisD.64156 => D#218ptD.0
  # VUSE <.MEM_104>
  # PT = nonlocal escaped 
  _28 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.64157 => D#218ptD.0
  # PT = nonlocal 
  _29 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_28 != _29)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#218ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.64149 => D#218ptD.0
  # DEBUG __sizeD.64148 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#218ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.64152 => _28
  # DEBUG __aD.64150 => D#183ptD.0
  # DEBUG __nD.64151 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.64155 => _28
  # DEBUG thisD.64153 => D#179ptD.0
  # DEBUG D.64154 => D#180ptD.0
  # .MEM_105 = VDEF <.MEM_104>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_28);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_43 = PHI <.MEM_104(30), .MEM_105(31)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG thisD.64158 => D#189ptD.0
  # DEBUG thisD.64159 => D#189ptD.0
  # DEBUG thisD.64160 => D#189ptD.0
  # .MEM_109 = VDEF <.MEM_43>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217ptD.0 => &D#787ptD.0->_nameD.29622
  # DEBUG thisD.64161 => D#217ptD.0
  # DEBUG thisD.64162 => D#217ptD.0
  # DEBUG thisD.64171 => D#217ptD.0
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _30 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.64172 => D#217ptD.0
  # PT = nonlocal 
  _31 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_30 != _31)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#217ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.64164 => D#217ptD.0
  # DEBUG __sizeD.64163 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#217ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.64167 => _30
  # DEBUG __aD.64165 => D#183ptD.0
  # DEBUG __nD.64166 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.64170 => _30
  # DEBUG thisD.64168 => D#179ptD.0
  # DEBUG D.64169 => D#180ptD.0
  # .MEM_110 = VDEF <.MEM_109>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_30);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 33, next block 1, flags: (NEW, REACHABLE)
;;    pred:       32 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_109(32), .MEM_110(33)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG thisD.64173 => D#189ptD.0
  # DEBUG thisD.64174 => D#189ptD.0
  # DEBUG thisD.64175 => D#189ptD.0
  # .MEM_118 = VDEF <.MEM_44>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # .MEM_4 = VDEF <.MEM_118>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (this_2(D));
  # VUSE <.MEM_4>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (_ZN11BufferState32SimpleFeedbackSharedBufferPolicyD2Ev, funcdef_no=2923, decl_uid=41282, cgraph_uid=1390, symbol_order=1393)


Pass statistics:
----------------

BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (struct SimpleFeedbackSharedBufferPolicyD.41259 * const thisD.41283)
{
  intD.9 * * __nstartD.64715;
  struct queueD.40450 * __firstD.64687;
  struct queueD.40450 * _6;
  intD.9 * _8;
  intD.9 * * pretmp_10;
  intD.9 * * prephitmp_11;
  intD.9 * _16;
  intD.9 * _17;
  intD.9 * * _24;
  intD.9 * * _25;
  intD.9 * * _26;
  intD.9 * _29;
  intD.9 * _32;
  intD.9 * _33;
  intD.9 * _34;
  intD.9 * _35;
  struct ModuleD.29620 * * _37;
  charD.10 * const _38;
  const charD.10 * _39;
  charD.10 * const _40;
  const charD.10 * _41;
  struct queueD.40450 * pretmp_59;
  struct queueD.40450 * prephitmp_60;

;;   basic block 2, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState32SimpleFeedbackSharedBufferPolicyED.41298 + 16B];
  # DEBUG D#467ptD.0 => &this_2(D)->_pending_creditsD.41261
  # DEBUG thisD.57800 => D#467ptD.0
  # DEBUG D#154ptD.0 => &D#467ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#467ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#467ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#467ptD.0->D.40238
  # DEBUG thisD.57801 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 312B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _8
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.57804 => D#155ptD.0
  # DEBUG __pD.57803 => _8
  # DEBUG __nD.57802 => D#148ptD.0
  if (_8 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.57808 => _8
  # DEBUG __aD.57806 => D#144ptD.0
  # DEBUG __nD.57807 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.57811 => _8
  # DEBUG thisD.57809 => D#140ptD.0
  # DEBUG D.57810 => D#141ptD.0
  # .MEM_9 = VDEF <.MEM_3>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_3(2), .MEM_9(3)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.57812 => D#147ptD.0
  # DEBUG thisD.57813 => D#147ptD.0
  # DEBUG thisD.57814 => D#147ptD.0
  # .MEM_14 = VDEF <.MEM_4>
  MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
  # DEBUG D#805ptD.0 => &this_2(D)->D.41295
  # DEBUG thisD.64653 => D#805ptD.0
  # .MEM_55 = VDEF <.MEM_14>
  MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)].D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#804ptD.0 => &MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)]._flit_sent_timeD.41197
  # DEBUG thisD.64684 => D#804ptD.0
  # DEBUG D#463ptD.0 => &D#804ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _6 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  __first_19 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.64687 => __first_19
  # DEBUG __lastD.64686 => _6
  # DEBUG __firstD.64692 => __first_19
  if (_6 == __first_19)
    goto <bb 16>;
  else
    goto <bb 5>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_36 = PHI <__first_19(5), __first_22(14)>
  # .MEM_144 = PHI <.MEM_55(5), .MEM_63(14)>
  # DEBUG __firstD.64692 => __first_36
  # DEBUG __rD.57673 => __first_36
  # DEBUG __pointerD.64693 => NULL
  # DEBUG thisD.64694 => NULL
  # DEBUG thisD.64695 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#803ptD.0 => &MEM[(struct dequeD.40449 *)__first_36].D.43590
  # DEBUG thisD.64710 => D#803ptD.0
  # VUSE <.MEM_144>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_mapD.43043;
  if (_24 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;
;;    succ:       7 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_144>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _26 = _25 + 8;
  # VUSE <.MEM_144>
  # PT = nonlocal escaped 
  __nstart_27 = MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.64716 => D#803ptD.0
  # DEBUG __nstartD.64715 => __nstart_27
  # DEBUG __nfinishD.64714 => _26
  # DEBUG __nD.64717 => __nstart_27
  # DEBUG __nD.64717 => __nstart_27
  if (_26 <= __nstart_27)
    goto <bb 12>;
  else
    goto <bb 8>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_145 = PHI <__nstart_27(8), __nstart_30(10)>
  # .MEM_142 = PHI <.MEM_144(8), .MEM_56(10)>
  # DEBUG __nD.64717 => __nstart_145
  # VUSE <.MEM_142>
  # PT = nonlocal escaped 
  _29 = *__nstart_145;
  # DEBUG thisD.64719 => D#803ptD.0
  # DEBUG __pD.64718 => _29
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#803ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.64723 => _29
  # DEBUG __aD.64721 => D#144ptD.0
  # DEBUG __nD.64722 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64726 => _29
  # DEBUG thisD.64724 => D#140ptD.0
  # DEBUG D.64725 => D#141ptD.0
  # .MEM_56 = VDEF <.MEM_142>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_29);
  # PT = nonlocal escaped 
  __nstart_30 = __nstart_145 + 8;
  # DEBUG __nD.64717 => __nstart_30
  # DEBUG __nD.64717 => __nstart_30
  if (_26 <= __nstart_30)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_56>
  pretmp_10 = MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_mapD.43043;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_141 = PHI <.MEM_56(11), .MEM_144(7)>
  # PT = nonlocal escaped 
  # prephitmp_11 = PHI <pretmp_10(11), _24(7)>
  # DEBUG D#447ptD.0 => D#803ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#807ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#803ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.64729 => D#807ptD.0
  # DEBUG thisD.64727 => D#445ptD.0
  # DEBUG __nD.64728 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.64730
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.64733 => D#807ptD.0
  # DEBUG __aD.64731 => D#265ptD.0
  # DEBUG __nD.64732 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.64736 => D#807ptD.0
  # DEBUG thisD.64734 => D#261ptD.0
  # DEBUG D.64735 => D#262ptD.0
  # .MEM_57 = VDEF <.MEM_141>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_11);
  # DEBUG thisD.57611 => &__map_allocD.64730
  # DEBUG thisD.57590 => &__map_allocD.64730
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       6 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_144(6), .MEM_57(12)>
  # DEBUG D#448ptD.0 => &D#803ptD.0->_M_implD.43041
  # DEBUG thisD.64711 => D#448ptD.0
  # DEBUG thisD.64712 => D#448ptD.0
  # DEBUG thisD.64713 => D#448ptD.0
  # .MEM_63 = VDEF <.MEM_44>
  MEM[(struct  &)__first_36] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_22 = __first_36 + 80;
  # DEBUG __firstD.64692 => __first_22
  # DEBUG __firstD.64692 => __first_22
  if (_6 == __first_22)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_63>
  pretmp_59 = MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_143 = PHI <.MEM_63(15), .MEM_55(4)>
  # PT = nonlocal escaped 
  # prephitmp_60 = PHI <pretmp_59(15), __first_19(4)>
  # DEBUG D#464ptD.0 => &D#804ptD.0->D.41195
  # DEBUG thisD.64696 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#806ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#806ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.64699 => D#806ptD.0
  # DEBUG thisD.64697 => D#253ptD.0
  # DEBUG __nD.64698 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_60 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.64703 => D#806ptD.0
  # DEBUG __aD.64701 => D#248ptD.0
  # DEBUG __nD.64702 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.64706 => D#806ptD.0
  # DEBUG thisD.64704 => D#244ptD.0
  # DEBUG D.64705 => D#245ptD.0
  # .MEM_64 = VDEF <.MEM_143>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_60);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_45 = PHI <.MEM_143(16), .MEM_64(17)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.64707 => D#255ptD.0
  # DEBUG thisD.64708 => D#255ptD.0
  # DEBUG thisD.64709 => D#255ptD.0
  # .MEM_69 = VDEF <.MEM_45>
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466ptD.0 => &D#805ptD.0->_round_trip_timeD.40448
  # DEBUG thisD.64654 => D#466ptD.0
  # DEBUG D#154ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.64655 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _16
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64658 => D#155ptD.0
  # DEBUG __pD.64657 => _16
  # DEBUG __nD.64656 => D#148ptD.0
  if (_16 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64662 => _16
  # DEBUG __aD.64660 => D#144ptD.0
  # DEBUG __nD.64661 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64665 => _16
  # DEBUG thisD.64663 => D#140ptD.0
  # DEBUG D.64664 => D#141ptD.0
  # .MEM_70 = VDEF <.MEM_69>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_46 = PHI <.MEM_69(18), .MEM_70(19)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64666 => D#147ptD.0
  # DEBUG thisD.64667 => D#147ptD.0
  # DEBUG thisD.64668 => D#147ptD.0
  # .MEM_75 = VDEF <.MEM_46>
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465ptD.0 => &D#805ptD.0->_occupancy_limitD.40447
  # DEBUG thisD.64669 => D#465ptD.0
  # DEBUG D#154ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.64670 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _17 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _17
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64673 => D#155ptD.0
  # DEBUG __pD.64672 => _17
  # DEBUG __nD.64671 => D#148ptD.0
  if (_17 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64677 => _17
  # DEBUG __aD.64675 => D#144ptD.0
  # DEBUG __nD.64676 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64680 => _17
  # DEBUG thisD.64678 => D#140ptD.0
  # DEBUG D.64679 => D#141ptD.0
  # .MEM_76 = VDEF <.MEM_75>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_47 = PHI <.MEM_75(20), .MEM_76(21)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64681 => D#147ptD.0
  # DEBUG thisD.64682 => D#147ptD.0
  # DEBUG thisD.64683 => D#147ptD.0
  # .MEM_81 = VDEF <.MEM_47>
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#802ptD.0 => &MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)].D.41247
  # DEBUG thisD.64737 => D#802ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)].D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#224ptD.0 => &D#802ptD.0->_reserved_slotsD.40245
  # DEBUG thisD.64738 => D#224ptD.0
  # DEBUG D#154ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.64739 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_82>
  # PT = nonlocal escaped 
  _32 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _32
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64742 => D#155ptD.0
  # DEBUG __pD.64741 => _32
  # DEBUG __nD.64740 => D#148ptD.0
  if (_32 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64746 => _32
  # DEBUG __aD.64744 => D#144ptD.0
  # DEBUG __nD.64745 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64749 => _32
  # DEBUG thisD.64747 => D#140ptD.0
  # DEBUG D.64748 => D#141ptD.0
  # .MEM_83 = VDEF <.MEM_82>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_48 = PHI <.MEM_82(22), .MEM_83(23)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64750 => D#147ptD.0
  # DEBUG thisD.64751 => D#147ptD.0
  # DEBUG thisD.64752 => D#147ptD.0
  # .MEM_88 = VDEF <.MEM_48>
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223ptD.0 => &D#802ptD.0->_private_buf_occupancyD.40242
  # DEBUG thisD.64753 => D#223ptD.0
  # DEBUG D#154ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.64754 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_88>
  # PT = nonlocal escaped 
  _33 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _33
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64757 => D#155ptD.0
  # DEBUG __pD.64756 => _33
  # DEBUG __nD.64755 => D#148ptD.0
  if (_33 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64761 => _33
  # DEBUG __aD.64759 => D#144ptD.0
  # DEBUG __nD.64760 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64764 => _33
  # DEBUG thisD.64762 => D#140ptD.0
  # DEBUG D.64763 => D#141ptD.0
  # .MEM_89 = VDEF <.MEM_88>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_33);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_88(24), .MEM_89(25)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64765 => D#147ptD.0
  # DEBUG thisD.64766 => D#147ptD.0
  # DEBUG thisD.64767 => D#147ptD.0
  # .MEM_94 = VDEF <.MEM_49>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222ptD.0 => &D#802ptD.0->_private_buf_sizeD.40241
  # DEBUG thisD.64768 => D#222ptD.0
  # DEBUG D#154ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.64769 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _34 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _34
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64772 => D#155ptD.0
  # DEBUG __pD.64771 => _34
  # DEBUG __nD.64770 => D#148ptD.0
  if (_34 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64776 => _34
  # DEBUG __aD.64774 => D#144ptD.0
  # DEBUG __nD.64775 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64779 => _34
  # DEBUG thisD.64777 => D#140ptD.0
  # DEBUG D.64778 => D#141ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_34);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_50 = PHI <.MEM_94(26), .MEM_95(27)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64780 => D#147ptD.0
  # DEBUG thisD.64781 => D#147ptD.0
  # DEBUG thisD.64782 => D#147ptD.0
  # .MEM_100 = VDEF <.MEM_50>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221ptD.0 => &D#802ptD.0->_private_buf_vc_mapD.40240
  # DEBUG thisD.64783 => D#221ptD.0
  # DEBUG D#154ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.64784 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_100>
  # PT = nonlocal escaped 
  _35 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _35
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64787 => D#155ptD.0
  # DEBUG __pD.64786 => _35
  # DEBUG __nD.64785 => D#148ptD.0
  if (_35 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64791 => _35
  # DEBUG __aD.64789 => D#144ptD.0
  # DEBUG __nD.64790 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64794 => _35
  # DEBUG thisD.64792 => D#140ptD.0
  # DEBUG D.64793 => D#141ptD.0
  # .MEM_101 = VDEF <.MEM_100>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_35);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_51 = PHI <.MEM_100(28), .MEM_101(29)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64795 => D#147ptD.0
  # DEBUG thisD.64796 => D#147ptD.0
  # DEBUG thisD.64797 => D#147ptD.0
  # .MEM_106 = VDEF <.MEM_51>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220ptD.0 => &D#802ptD.0->D.40291
  # DEBUG thisD.64798 => D#220ptD.0
  # DEBUG D#801ptD.0 => &MEM[(struct BufferPolicyD.39592 *)this_2(D)].D.39647
  # DEBUG thisD.64799 => D#801ptD.0
  # .MEM_108 = VDEF <.MEM_106>
  MEM[(struct ModuleD.29620 *)this_2(D)]._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTV6ModuleD.30420 + 16B];
  # DEBUG D#219ptD.0 => &D#801ptD.0->_childrenD.30370
  # DEBUG thisD.64800 => D#219ptD.0
  # DEBUG D#213ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.54616 => D#213ptD.0
  # DEBUG D#216ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_finishD.29862
  # DEBUG D#215ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_startD.29861
  # DEBUG D#118ptD.0 => D#215ptD.0
  # DEBUG D#119ptD.0 => D#216ptD.0
  # DEBUG __firstD.54615 => D#118ptD.0
  # DEBUG __lastD.54614 => D#119ptD.0
  # DEBUG D.54613 => D#120ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG __firstD.54036 => D#114ptD.0
  # DEBUG __lastD.54035 => D#115ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D.54025 => D#110ptD.0
  # DEBUG D.54024 => D#111ptD.0
  # DEBUG D#214ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.64801 => D#214ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0->_M_implD.29859._M_end_of_storageD.29863
  # DEBUG D#211ptD.0 => (long intD.12) D#212ptD.0
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _37 = MEM[(struct _Vector_baseD.29626 *)this_2(D) + 72B]._M_implD.29859._M_startD.29861;
  # DEBUG D#210ptD.0 => (long intD.12) _37
  # DEBUG D#209ptD.0 => D#211ptD.0 - D#210ptD.0
  # DEBUG D#208ptD.0 => D#209ptD.0 /[ex] 8
  # DEBUG D#205ptD.0 => D#214ptD.0
  # DEBUG D#206ptD.0 => (long unsigned intD.14) D#208ptD.0
  # DEBUG __pD.64804 => _37
  # DEBUG thisD.64802 => D#205ptD.0
  # DEBUG __nD.64803 => D#206ptD.0
  # DEBUG D#204ptD.0 => D#206ptD.0
  # DEBUG D#203ptD.0 => D#205ptD.0
  if (_37 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#202ptD.0 => &D#203ptD.0->_M_implD.29859
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __pD.64808 => _37
  # DEBUG __aD.64806 => D#200ptD.0
  # DEBUG __nD.64807 => D#201ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG __pD.64811 => _37
  # DEBUG thisD.64809 => D#196ptD.0
  # DEBUG D.64810 => D#197ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_37);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_52 = PHI <.MEM_108(30), .MEM_109(31)>
  # DEBUG D#207ptD.0 => &D#214ptD.0->_M_implD.29859
  # DEBUG thisD.64812 => D#207ptD.0
  # DEBUG thisD.64813 => D#207ptD.0
  # DEBUG thisD.64814 => D#207ptD.0
  # .MEM_114 = VDEF <.MEM_52>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218ptD.0 => &D#801ptD.0->_fullnameD.29623
  # DEBUG thisD.64815 => D#218ptD.0
  # DEBUG thisD.64816 => D#218ptD.0
  # DEBUG thisD.64825 => D#218ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _38 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.64826 => D#218ptD.0
  # PT = nonlocal 
  _39 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_38 != _39)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#218ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.64818 => D#218ptD.0
  # DEBUG __sizeD.64817 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#218ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.64821 => _38
  # DEBUG __aD.64819 => D#183ptD.0
  # DEBUG __nD.64820 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.64824 => _38
  # DEBUG thisD.64822 => D#179ptD.0
  # DEBUG D.64823 => D#180ptD.0
  # .MEM_115 = VDEF <.MEM_114>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_38);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_114(32), .MEM_115(33)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG thisD.64827 => D#189ptD.0
  # DEBUG thisD.64828 => D#189ptD.0
  # DEBUG thisD.64829 => D#189ptD.0
  # .MEM_119 = VDEF <.MEM_53>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217ptD.0 => &D#801ptD.0->_nameD.29622
  # DEBUG thisD.64830 => D#217ptD.0
  # DEBUG thisD.64831 => D#217ptD.0
  # DEBUG thisD.64840 => D#217ptD.0
  # VUSE <.MEM_119>
  # PT = nonlocal escaped 
  _40 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.64841 => D#217ptD.0
  # PT = nonlocal 
  _41 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_40 != _41)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#217ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.64833 => D#217ptD.0
  # DEBUG __sizeD.64832 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#217ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.64836 => _40
  # DEBUG __aD.64834 => D#183ptD.0
  # DEBUG __nD.64835 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.64839 => _40
  # DEBUG thisD.64837 => D#179ptD.0
  # DEBUG D.64838 => D#180ptD.0
  # .MEM_120 = VDEF <.MEM_119>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 35, next block 1, flags: (NEW, REACHABLE)
;;    pred:       34 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_54 = PHI <.MEM_119(34), .MEM_120(35)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG thisD.64842 => D#189ptD.0
  # DEBUG thisD.64843 => D#189ptD.0
  # DEBUG thisD.64844 => D#189ptD.0
  # .MEM_7 = VDEF <.MEM_54>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_7>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
	Access function 4: 0
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 312B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 312
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 312B]
	Access function 0: 0
	Access function 1: 0
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_27
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_27
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Analyzing # of iterations of loop 2
  exit condition [__nstart_27 + 8, + , 8](no_overflow) < _25 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _25 - (unsigned long) __nstart_27) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 2
  exit condition [__nstart_27 + 8, + , 8](no_overflow) < _25 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _25 - (unsigned long) __nstart_27) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Analyzing # of iterations of loop 1
  exit condition [__first_19 + 80, + , 80](no_overflow) != _6
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551535
  result:
    under assumptions ((unsigned long) _6 - (unsigned long) (__first_19 + 80) & 15) == 0
    # of iterations (((unsigned long) _6 - (unsigned long) (__first_19 + 80)) /[ex] 16) * 922337203685477581 & 1152921504606846975, bounded by 230584300921369395
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_27
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_27
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Analyzing # of iterations of loop 2
  exit condition [__nstart_27 + 8, + , 8](no_overflow) < _25 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _25 - (unsigned long) __nstart_27) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_27
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_27
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Creating dr for *__nstart_145
analyze_innermost: success.
	base_address: __nstart_27
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_145
Analyzing # of iterations of loop 2
  exit condition [__nstart_27 + 8, + , 8](no_overflow) < _25 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _25 - (unsigned long) __nstart_27) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_19
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_19]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Analyzing # of iterations of loop 1
  exit condition [__first_19 + 80, + , 80](no_overflow) != _6
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551535
  result:
    under assumptions ((unsigned long) _6 - (unsigned long) (__first_19 + 80) & 15) == 0
    # of iterations (((unsigned long) _6 - (unsigned long) (__first_19 + 80)) /[ex] 16) * 922337203685477581 & 1152921504606846975, bounded by 230584300921369395
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 272
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 272B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:39, LOOPS:2, CONDITIONS:16, STMTS:660)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState32SimpleFeedbackSharedBufferPolicyE + 16B];
    # DEBUG D#467 => &this_2(D)->_pending_credits
    # DEBUG this => D#467
    # DEBUG D#154 => &D#467->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#467->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#467->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#467->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_3>
    _8 = MEM[(struct _Vector_base *)this_2(D) + 312B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _8
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _8
    # DEBUG __n => D#148
    if (_8 != 0B)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _8
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _8
    # DEBUG this => D#140
    # DEBUG D.57810 => D#141
    # .MEM_9 = VDEF <.MEM_3>
    operator delete (_8);

  }
  bb_4 (preds = {bb_2 bb_3 }, succs = {bb_16 bb_5 })
  {
    <bb 4>:
    # .MEM_4 = PHI <.MEM_3(2), .MEM_9(3)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_14 = VDEF <.MEM_4>
    MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
    # DEBUG D#805 => &this_2(D)->D.41295
    # DEBUG this => D#805
    # .MEM_55 = VDEF <.MEM_14>
    MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)].D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
    # DEBUG D#804 => &MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)]._flit_sent_time
    # DEBUG this => D#804
    # DEBUG D#463 => &D#804->D.41195
    # DEBUG this => D#463
    # VUSE <.MEM_55>
    _6 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish;
    # VUSE <.MEM_55>
    __first_19 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start;
    # DEBUG __first => __first_19
    # DEBUG __last => _6
    # DEBUG __first => __first_19
    if (_6 == __first_19)
      goto <bb 16>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:

  }
  bb_15 (preds = {bb_13 }, succs = {bb_37 })
  {
    <bb 15>:

  }
  bb_37 (preds = {bb_15 }, succs = {bb_16 })
  {
    <bb 37>:
    # VUSE <.MEM_63>
    pretmp_59 = MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start;

  }
  bb_16 (preds = {bb_37 bb_4 }, succs = {bb_17 bb_18 })
  {
    <bb 16>:
    # .MEM_143 = PHI <.MEM_63(37), .MEM_55(4)>
    # prephitmp_60 = PHI <pretmp_59(37), __first_19(4)>
    # DEBUG D#464 => &D#804->D.41195
    # DEBUG this => D#464
    # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
    # DEBUG D#259 => (long int) D#260
    # DEBUG D#806 => MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
    # DEBUG D#258 => (long int) D#806
    # DEBUG D#257 => D#259 - D#258
    # DEBUG D#256 => D#257 /[ex] 80
    # DEBUG D#253 => D#464
    # DEBUG D#254 => (long unsigned int) D#256
    # DEBUG __p => D#806
    # DEBUG this => D#253
    # DEBUG __n => D#254
    # DEBUG D#252 => D#254
    # DEBUG D#251 => D#253
    if (prephitmp_60 != 0B)
      goto <bb 17>;
    else
      goto <bb 18>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_18 })
  {
    <bb 17>:
    # DEBUG D#250 => &D#251->_M_impl
    # DEBUG D#248 => D#250
    # DEBUG D#249 => D#252
    # DEBUG __p => D#806
    # DEBUG __a => D#248
    # DEBUG __n => D#249
    # DEBUG D#247 => D#249
    # DEBUG D#246 => D#248
    # DEBUG D#244 => D#246
    # DEBUG D#245 => D#247
    # DEBUG __p => D#806
    # DEBUG this => D#244
    # DEBUG D.64705 => D#245
    # .MEM_64 = VDEF <.MEM_143>
    operator delete (prephitmp_60);

  }
  bb_18 (preds = {bb_16 bb_17 }, succs = {bb_19 bb_20 })
  {
    <bb 18>:
    # .MEM_45 = PHI <.MEM_143(16), .MEM_64(17)>
    # DEBUG D#255 => &D#464->_M_impl
    # DEBUG this => D#255
    # DEBUG this => D#255
    # DEBUG this => D#255
    # .MEM_69 = VDEF <.MEM_45>
    MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
    # DEBUG D#466 => &D#805->_round_trip_time
    # DEBUG this => D#466
    # DEBUG D#154 => &D#466->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#466->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#466->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#466->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_69>
    _16 = MEM[(struct _Vector_base *)this_2(D) + 248B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _16
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _16
    # DEBUG __n => D#148
    if (_16 != 0B)
      goto <bb 19>;
    else
      goto <bb 20>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _16
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _16
    # DEBUG this => D#140
    # DEBUG D.64664 => D#141
    # .MEM_70 = VDEF <.MEM_69>
    operator delete (_16);

  }
  bb_20 (preds = {bb_18 bb_19 }, succs = {bb_21 bb_22 })
  {
    <bb 20>:
    # .MEM_46 = PHI <.MEM_69(18), .MEM_70(19)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_75 = VDEF <.MEM_46>
    MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
    # DEBUG D#465 => &D#805->_occupancy_limit
    # DEBUG this => D#465
    # DEBUG D#154 => &D#465->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#465->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#465->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#465->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_75>
    _17 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _17
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _17
    # DEBUG __n => D#148
    if (_17 != 0B)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _17
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _17
    # DEBUG this => D#140
    # DEBUG D.64679 => D#141
    # .MEM_76 = VDEF <.MEM_75>
    operator delete (_17);

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # .MEM_47 = PHI <.MEM_75(20), .MEM_76(21)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_81 = VDEF <.MEM_47>
    MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
    # DEBUG D#802 => &MEM[(struct FeedbackSharedBufferPolicy *)this_2(D)].D.41247
    # DEBUG this => D#802
    # .MEM_82 = VDEF <.MEM_81>
    MEM[(struct SharedBufferPolicy *)this_2(D)].D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
    # DEBUG D#224 => &D#802->_reserved_slots
    # DEBUG this => D#224
    # DEBUG D#154 => &D#224->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#224->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#224->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#224->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_82>
    _32 = MEM[(struct _Vector_base *)this_2(D) + 192B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _32
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _32
    # DEBUG __n => D#148
    if (_32 != 0B)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 }, succs = {bb_24 })
  {
    <bb 23>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _32
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _32
    # DEBUG this => D#140
    # DEBUG D.64748 => D#141
    # .MEM_83 = VDEF <.MEM_82>
    operator delete (_32);

  }
  bb_24 (preds = {bb_22 bb_23 }, succs = {bb_25 bb_26 })
  {
    <bb 24>:
    # .MEM_48 = PHI <.MEM_82(22), .MEM_83(23)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_88 = VDEF <.MEM_48>
    MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
    # DEBUG D#223 => &D#802->_private_buf_occupancy
    # DEBUG this => D#223
    # DEBUG D#154 => &D#223->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#223->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#223->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#223->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_88>
    _33 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _33
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _33
    # DEBUG __n => D#148
    if (_33 != 0B)
      goto <bb 25>;
    else
      goto <bb 26>;

  }
  bb_25 (preds = {bb_24 }, succs = {bb_26 })
  {
    <bb 25>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _33
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _33
    # DEBUG this => D#140
    # DEBUG D.64763 => D#141
    # .MEM_89 = VDEF <.MEM_88>
    operator delete (_33);

  }
  bb_26 (preds = {bb_24 bb_25 }, succs = {bb_27 bb_28 })
  {
    <bb 26>:
    # .MEM_49 = PHI <.MEM_88(24), .MEM_89(25)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_94 = VDEF <.MEM_49>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#222 => &D#802->_private_buf_size
    # DEBUG this => D#222
    # DEBUG D#154 => &D#222->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#222->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#222->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#222->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_94>
    _34 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _34
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _34
    # DEBUG __n => D#148
    if (_34 != 0B)
      goto <bb 27>;
    else
      goto <bb 28>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_28 })
  {
    <bb 27>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _34
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _34
    # DEBUG this => D#140
    # DEBUG D.64778 => D#141
    # .MEM_95 = VDEF <.MEM_94>
    operator delete (_34);

  }
  bb_28 (preds = {bb_26 bb_27 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # .MEM_50 = PHI <.MEM_94(26), .MEM_95(27)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_100 = VDEF <.MEM_50>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#221 => &D#802->_private_buf_vc_map
    # DEBUG this => D#221
    # DEBUG D#154 => &D#221->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#221->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#221->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#221->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_100>
    _35 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _35
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _35
    # DEBUG __n => D#148
    if (_35 != 0B)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_30 })
  {
    <bb 29>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _35
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _35
    # DEBUG this => D#140
    # DEBUG D.64793 => D#141
    # .MEM_101 = VDEF <.MEM_100>
    operator delete (_35);

  }
  bb_30 (preds = {bb_28 bb_29 }, succs = {bb_31 bb_32 })
  {
    <bb 30>:
    # .MEM_51 = PHI <.MEM_100(28), .MEM_101(29)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_106 = VDEF <.MEM_51>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#220 => &D#802->D.40291
    # DEBUG this => D#220
    # DEBUG D#801 => &MEM[(struct BufferPolicy *)this_2(D)].D.39647
    # DEBUG this => D#801
    # .MEM_108 = VDEF <.MEM_106>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#219 => &D#801->_children
    # DEBUG this => D#219
    # DEBUG D#213 => &D#219->D.30368
    # DEBUG this => D#213
    # DEBUG D#216 => D#219->D.30368._M_impl._M_finish
    # DEBUG D#215 => D#219->D.30368._M_impl._M_start
    # DEBUG D#118 => D#215
    # DEBUG D#119 => D#216
    # DEBUG __first => D#118
    # DEBUG __last => D#119
    # DEBUG D.54613 => D#120
    # DEBUG D#117 => D#119
    # DEBUG D#116 => D#118
    # DEBUG D#114 => D#116
    # DEBUG D#115 => D#117
    # DEBUG __first => D#114
    # DEBUG __last => D#115
    # DEBUG D#113 => D#115
    # DEBUG D#112 => D#114
    # DEBUG D#110 => D#112
    # DEBUG D#111 => D#113
    # DEBUG D.54025 => D#110
    # DEBUG D.54024 => D#111
    # DEBUG D#214 => &D#219->D.30368
    # DEBUG this => D#214
    # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
    # DEBUG D#211 => (long int) D#212
    # VUSE <.MEM_108>
    _37 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#210 => (long int) _37
    # DEBUG D#209 => D#211 - D#210
    # DEBUG D#208 => D#209 /[ex] 8
    # DEBUG D#205 => D#214
    # DEBUG D#206 => (long unsigned int) D#208
    # DEBUG __p => _37
    # DEBUG this => D#205
    # DEBUG __n => D#206
    # DEBUG D#204 => D#206
    # DEBUG D#203 => D#205
    if (_37 != 0B)
      goto <bb 31>;
    else
      goto <bb 32>;

  }
  bb_31 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 31>:
    # DEBUG D#202 => &D#203->_M_impl
    # DEBUG D#200 => D#202
    # DEBUG D#201 => D#204
    # DEBUG __p => _37
    # DEBUG __a => D#200
    # DEBUG __n => D#201
    # DEBUG D#199 => D#201
    # DEBUG D#198 => D#200
    # DEBUG D#196 => D#198
    # DEBUG D#197 => D#199
    # DEBUG __p => _37
    # DEBUG this => D#196
    # DEBUG D.64810 => D#197
    # .MEM_109 = VDEF <.MEM_108>
    operator delete (_37);

  }
  bb_32 (preds = {bb_30 bb_31 }, succs = {bb_33 bb_34 })
  {
    <bb 32>:
    # .MEM_52 = PHI <.MEM_108(30), .MEM_109(31)>
    # DEBUG D#207 => &D#214->_M_impl
    # DEBUG this => D#207
    # DEBUG this => D#207
    # DEBUG this => D#207
    # .MEM_114 = VDEF <.MEM_52>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#218 => &D#801->_fullname
    # DEBUG this => D#218
    # DEBUG this => D#218
    # DEBUG this => D#218
    # VUSE <.MEM_114>
    _38 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#218
    # DEBUG this => D#1
    # DEBUG this => D#218
    _39 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_38 != _39)
      goto <bb 33>;
    else
      goto <bb 34>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_34 })
  {
    <bb 33>:
    # DEBUG D#188 => MEM[(struct basic_string *)D#218].D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => D#218
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => D#218
    # DEBUG this => D#1
    # DEBUG this => D#218
    # DEBUG D#185 => &MEM[(struct basic_string *)D#218]._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _38
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _38
    # DEBUG this => D#179
    # DEBUG D.64823 => D#180
    # .MEM_115 = VDEF <.MEM_114>
    operator delete (_38);

  }
  bb_34 (preds = {bb_32 bb_33 }, succs = {bb_35 bb_36 })
  {
    <bb 34>:
    # .MEM_53 = PHI <.MEM_114(32), .MEM_115(33)>
    # DEBUG D#189 => &MEM[(struct basic_string *)D#218]._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_119 = VDEF <.MEM_53>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#217 => &D#801->_name
    # DEBUG this => D#217
    # DEBUG this => D#217
    # DEBUG this => D#217
    # VUSE <.MEM_119>
    _40 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#217
    # DEBUG this => D#1
    # DEBUG this => D#217
    _41 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_40 != _41)
      goto <bb 35>;
    else
      goto <bb 36>;

  }
  bb_35 (preds = {bb_34 }, succs = {bb_36 })
  {
    <bb 35>:
    # DEBUG D#188 => MEM[(struct basic_string *)D#217].D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => D#217
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => D#217
    # DEBUG this => D#1
    # DEBUG this => D#217
    # DEBUG D#185 => &MEM[(struct basic_string *)D#217]._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _40
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _40
    # DEBUG this => D#179
    # DEBUG D.64838 => D#180
    # .MEM_120 = VDEF <.MEM_119>
    operator delete (_40);

  }
  bb_36 (preds = {bb_34 bb_35 }, succs = {bb_1 })
  {
    <bb 36>:
    # .MEM_54 = PHI <.MEM_119(34), .MEM_120(35)>
    # DEBUG D#189 => &MEM[(struct basic_string *)D#217]._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_7 = VDEF <.MEM_54>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # VUSE <.MEM_7>
    return;

  }
  loop_1 (header = 6, latch = 14, niter = )
  {
    bb_6 (preds = {bb_5 bb_14 }, succs = {bb_7 bb_13 })
    {
      <bb 6>:
      # __first_36 = PHI <__first_19(5), __first_22(14)>
      # .MEM_144 = PHI <.MEM_55(5), .MEM_63(14)>
      # DEBUG __first => __first_36
      # DEBUG __r => __first_36
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#458
      # DEBUG D#449 => &D#458->D.43590
      # DEBUG this => D#449
      # DEBUG this => D#458
      # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
      # DEBUG this => NULL
      # DEBUG __x => D#66
      # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
      # DEBUG D.57660 => D#457
      # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
      # DEBUG D.57661 => D#456
      # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
      # DEBUG D.57662 => D#455
      # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
      # DEBUG D.57663 => D#454
      # DEBUG this => D#458
      # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
      # DEBUG this => NULL
      # DEBUG __x => D#67
      # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
      # DEBUG D.57656 => D#453
      # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
      # DEBUG D.57657 => D#452
      # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
      # DEBUG D.57658 => D#451
      # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
      # DEBUG D.57659 => D#450
      # DEBUG D#68 => D#458
      # DEBUG this => D#68
      # DEBUG __first => D#69
      # DEBUG __last => D#70
      # DEBUG D.57644 => D#71
      # DEBUG D#803 => &MEM[(struct deque *)__first_36].D.43590
      # DEBUG this => D#803
      # VUSE <.MEM_144>
      _24 = MEM[(struct _Deque_base *)__first_36]._M_impl._M_map;
      if (_24 != 0B)
        goto <bb 7>;
      else
        goto <bb 13>;

    }
    bb_7 (preds = {bb_6 }, succs = {bb_12 bb_8 })
    {
      <bb 7>:
      # VUSE <.MEM_144>
      _25 = MEM[(struct _Deque_base *)__first_36]._M_impl._M_finish._M_node;
      _26 = _25 + 8;
      # VUSE <.MEM_144>
      __nstart_27 = MEM[(struct _Deque_base *)__first_36]._M_impl._M_start._M_node;
      # DEBUG this => D#803
      # DEBUG __nstart => __nstart_27
      # DEBUG __nfinish => _26
      # DEBUG __n => __nstart_27
      # DEBUG __n => __nstart_27
      if (_26 <= __nstart_27)
        goto <bb 12>;
      else
        goto <bb 8>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_9 })
    {
      <bb 8>:

    }
    bb_11 (preds = {bb_9 }, succs = {bb_38 })
    {
      <bb 11>:

    }
    bb_38 (preds = {bb_11 }, succs = {bb_12 })
    {
      <bb 38>:
      # VUSE <.MEM_56>
      pretmp_10 = MEM[(struct _Deque_base *)__first_36]._M_impl._M_map;

    }
    bb_12 (preds = {bb_38 bb_7 }, succs = {bb_13 })
    {
      <bb 12>:
      # .MEM_141 = PHI <.MEM_56(38), .MEM_144(7)>
      # prephitmp_11 = PHI <pretmp_10(38), _24(7)>
      # DEBUG D#447 => D#803->_M_impl._M_map_size
      # DEBUG D#807 => MEM[(struct _Deque_base *)__first_36]._M_impl._M_map
      # DEBUG D#445 => D#803
      # DEBUG D#446 => D#447
      # DEBUG __p => D#807
      # DEBUG this => D#445
      # DEBUG __n => D#446
      # DEBUG D#444 => D#446
      # DEBUG D#443 => D#445
      # DEBUG D#442 => D#443
      # DEBUG this => D#442
      # DEBUG D#441 => D#442
      # DEBUG this => D#441
      # DEBUG this => NULL
      # DEBUG D.57578 => NULL
      # DEBUG this => NULL
      # DEBUG D#265 => &__map_alloc
      # DEBUG D#266 => D#444
      # DEBUG __p => D#807
      # DEBUG __a => D#265
      # DEBUG __n => D#266
      # DEBUG D#264 => D#266
      # DEBUG D#263 => D#265
      # DEBUG D#261 => D#263
      # DEBUG D#262 => D#264
      # DEBUG __p => D#807
      # DEBUG this => D#261
      # DEBUG D.64735 => D#262
      # .MEM_57 = VDEF <.MEM_141>
      operator delete (prephitmp_11);
      # DEBUG this => &__map_alloc
      # DEBUG this => &__map_alloc

    }
    bb_13 (preds = {bb_6 bb_12 }, succs = {bb_15 bb_14 })
    {
      <bb 13>:
      # .MEM_44 = PHI <.MEM_144(6), .MEM_57(12)>
      # DEBUG D#448 => &D#803->_M_impl
      # DEBUG this => D#448
      # DEBUG this => D#448
      # DEBUG this => D#448
      # .MEM_63 = VDEF <.MEM_44>
      MEM[(struct  &)__first_36] ={v} {CLOBBER};
      __first_22 = __first_36 + 80;
      # DEBUG __first => __first_22
      # DEBUG __first => __first_22
      if (_6 == __first_22)
        goto <bb 15>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_13 }, succs = {bb_6 })
    {
      <bb 14>:
      goto <bb 6>;

    }
    loop_2 (header = 9, latch = 10, niter = (((unsigned long) _25 - (unsigned long) __nstart_27) + 7) / 8, upper_bound = 2305843009213693951)
    {
      bb_9 (preds = {bb_8 bb_10 }, succs = {bb_11 bb_10 })
      {
        <bb 9>:
        # __nstart_145 = PHI <__nstart_27(8), __nstart_30(10)>
        # .MEM_142 = PHI <.MEM_144(8), .MEM_56(10)>
        # DEBUG __n => __nstart_145
        # VUSE <.MEM_142>
        _29 = *__nstart_145;
        # DEBUG this => D#803
        # DEBUG __p => _29
        # DEBUG __size => 4
        # DEBUG D#167 => &D#803->_M_impl
        # DEBUG D#144 => D#167
        # DEBUG __p => _29
        # DEBUG __a => D#144
        # DEBUG __n => D#145
        # DEBUG D#143 => D#145
        # DEBUG D#142 => D#144
        # DEBUG D#140 => D#142
        # DEBUG D#141 => D#143
        # DEBUG __p => _29
        # DEBUG this => D#140
        # DEBUG D.64725 => D#141
        # .MEM_56 = VDEF <.MEM_142>
        operator delete (_29);
        __nstart_30 = __nstart_145 + 8;
        # DEBUG __n => __nstart_30
        # DEBUG __n => __nstart_30
        if (_26 <= __nstart_30)
          goto <bb 11>;
        else
          goto <bb 10>;

      }
      bb_10 (preds = {bb_9 }, succs = {bb_9 })
      {
        <bb 10>:
        goto <bb 9>;

      }
    }
  }
}

Pass statistics:
----------------

BufferState::SimpleFeedbackSharedBufferPolicy::~SimpleFeedbackSharedBufferPolicy() (struct SimpleFeedbackSharedBufferPolicyD.41259 * const thisD.41283)
{
  intD.9 * * __nstartD.64715;
  struct queueD.40450 * __firstD.64687;
  struct queueD.40450 * _6;
  intD.9 * _8;
  intD.9 * * pretmp_10;
  intD.9 * * prephitmp_11;
  intD.9 * _16;
  intD.9 * _17;
  intD.9 * * _24;
  intD.9 * * _25;
  intD.9 * * _26;
  intD.9 * _29;
  intD.9 * _32;
  intD.9 * _33;
  intD.9 * _34;
  intD.9 * _35;
  struct ModuleD.29620 * * _37;
  charD.10 * const _38;
  const charD.10 * _39;
  charD.10 * const _40;
  const charD.10 * _41;
  struct queueD.40450 * pretmp_59;
  struct queueD.40450 * prephitmp_60;

;;   basic block 2, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.41295.D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState32SimpleFeedbackSharedBufferPolicyED.41298 + 16B];
  # DEBUG D#467ptD.0 => &this_2(D)->_pending_creditsD.41261
  # DEBUG thisD.57800 => D#467ptD.0
  # DEBUG D#154ptD.0 => &D#467ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#467ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#467ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#467ptD.0->D.40238
  # DEBUG thisD.57801 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _8 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 312B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _8
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.57804 => D#155ptD.0
  # DEBUG __pD.57803 => _8
  # DEBUG __nD.57802 => D#148ptD.0
  if (_8 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.57808 => _8
  # DEBUG __aD.57806 => D#144ptD.0
  # DEBUG __nD.57807 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.57811 => _8
  # DEBUG thisD.57809 => D#140ptD.0
  # DEBUG D.57810 => D#141ptD.0
  # .MEM_9 = VDEF <.MEM_3>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_8);
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_3(2), .MEM_9(3)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.57812 => D#147ptD.0
  # DEBUG thisD.57813 => D#147ptD.0
  # DEBUG thisD.57814 => D#147ptD.0
  # .MEM_14 = VDEF <.MEM_4>
  MEM[(struct  &)this_2(D) + 312] ={v} {CLOBBER};
  # DEBUG D#805ptD.0 => &this_2(D)->D.41295
  # DEBUG thisD.64653 => D#805ptD.0
  # .MEM_55 = VDEF <.MEM_14>
  MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)].D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#804ptD.0 => &MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)]._flit_sent_timeD.41197
  # DEBUG thisD.64684 => D#804ptD.0
  # DEBUG D#463ptD.0 => &D#804ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  _6 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_55>
  # PT = nonlocal escaped 
  __first_19 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.64687 => __first_19
  # DEBUG __lastD.64686 => _6
  # DEBUG __firstD.64692 => __first_19
  if (_6 == __first_19)
    goto <bb 16>;
  else
    goto <bb 5>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_36 = PHI <__first_19(5), __first_22(14)>
  # .MEM_144 = PHI <.MEM_55(5), .MEM_63(14)>
  # DEBUG __firstD.64692 => __first_36
  # DEBUG __rD.57673 => __first_36
  # DEBUG __pointerD.64693 => NULL
  # DEBUG thisD.64694 => NULL
  # DEBUG thisD.64695 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#803ptD.0 => &MEM[(struct dequeD.40449 *)__first_36].D.43590
  # DEBUG thisD.64710 => D#803ptD.0
  # VUSE <.MEM_144>
  # PT = nonlocal escaped 
  _24 = MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_mapD.43043;
  if (_24 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;
;;    succ:       7 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_144>
  # PT = nonlocal escaped 
  _25 = MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _26 = _25 + 8;
  # VUSE <.MEM_144>
  # PT = nonlocal escaped 
  __nstart_27 = MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.64716 => D#803ptD.0
  # DEBUG __nstartD.64715 => __nstart_27
  # DEBUG __nfinishD.64714 => _26
  # DEBUG __nD.64717 => __nstart_27
  # DEBUG __nD.64717 => __nstart_27
  if (_26 <= __nstart_27)
    goto <bb 12>;
  else
    goto <bb 8>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_145 = PHI <__nstart_27(8), __nstart_30(10)>
  # .MEM_142 = PHI <.MEM_144(8), .MEM_56(10)>
  # DEBUG __nD.64717 => __nstart_145
  # VUSE <.MEM_142>
  # PT = nonlocal escaped 
  _29 = *__nstart_145;
  # DEBUG thisD.64719 => D#803ptD.0
  # DEBUG __pD.64718 => _29
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#803ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.64723 => _29
  # DEBUG __aD.64721 => D#144ptD.0
  # DEBUG __nD.64722 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64726 => _29
  # DEBUG thisD.64724 => D#140ptD.0
  # DEBUG D.64725 => D#141ptD.0
  # .MEM_56 = VDEF <.MEM_142>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_29);
  # PT = nonlocal escaped 
  __nstart_30 = __nstart_145 + 8;
  # DEBUG __nD.64717 => __nstart_30
  # DEBUG __nD.64717 => __nstart_30
  if (_26 <= __nstart_30)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 10, next block 38, flags: (NEW)
;;    pred:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       38 [100.0%]  (FALLTHRU)

;;   basic block 38, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 11, next block 12, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_56>
  pretmp_10 = MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_mapD.43043;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 38, next block 13, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_141 = PHI <.MEM_56(38), .MEM_144(7)>
  # PT = nonlocal escaped 
  # prephitmp_11 = PHI <pretmp_10(38), _24(7)>
  # DEBUG D#447ptD.0 => D#803ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#807ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_36]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#803ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.64729 => D#807ptD.0
  # DEBUG thisD.64727 => D#445ptD.0
  # DEBUG __nD.64728 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.64730
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.64733 => D#807ptD.0
  # DEBUG __aD.64731 => D#265ptD.0
  # DEBUG __nD.64732 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.64736 => D#807ptD.0
  # DEBUG thisD.64734 => D#261ptD.0
  # DEBUG D.64735 => D#262ptD.0
  # .MEM_57 = VDEF <.MEM_141>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_11);
  # DEBUG thisD.57611 => &__map_allocD.64730
  # DEBUG thisD.57590 => &__map_allocD.64730
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       6 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_44 = PHI <.MEM_144(6), .MEM_57(12)>
  # DEBUG D#448ptD.0 => &D#803ptD.0->_M_implD.43041
  # DEBUG thisD.64711 => D#448ptD.0
  # DEBUG thisD.64712 => D#448ptD.0
  # DEBUG thisD.64713 => D#448ptD.0
  # .MEM_63 = VDEF <.MEM_44>
  MEM[(struct  &)__first_36] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_22 = __first_36 + 80;
  # DEBUG __firstD.64692 => __first_22
  # DEBUG __firstD.64692 => __first_22
  if (_6 == __first_22)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 6>;
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 14, next block 37, flags: (NEW)
;;    pred:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       37 [100.0%]  (FALLTHRU)

;;   basic block 37, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 15, next block 16, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_63>
  pretmp_59 = MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 37, next block 17, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_143 = PHI <.MEM_63(37), .MEM_55(4)>
  # PT = nonlocal escaped 
  # prephitmp_60 = PHI <pretmp_59(37), __first_19(4)>
  # DEBUG D#464ptD.0 => &D#804ptD.0->D.41195
  # DEBUG thisD.64696 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#806ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#806ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.64699 => D#806ptD.0
  # DEBUG thisD.64697 => D#253ptD.0
  # DEBUG __nD.64698 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_60 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.64703 => D#806ptD.0
  # DEBUG __aD.64701 => D#248ptD.0
  # DEBUG __nD.64702 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.64706 => D#806ptD.0
  # DEBUG thisD.64704 => D#244ptD.0
  # DEBUG D.64705 => D#245ptD.0
  # .MEM_64 = VDEF <.MEM_143>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_60);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_45 = PHI <.MEM_143(16), .MEM_64(17)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.64707 => D#255ptD.0
  # DEBUG thisD.64708 => D#255ptD.0
  # DEBUG thisD.64709 => D#255ptD.0
  # .MEM_69 = VDEF <.MEM_45>
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466ptD.0 => &D#805ptD.0->_round_trip_timeD.40448
  # DEBUG thisD.64654 => D#466ptD.0
  # DEBUG D#154ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.64655 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _16 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _16
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64658 => D#155ptD.0
  # DEBUG __pD.64657 => _16
  # DEBUG __nD.64656 => D#148ptD.0
  if (_16 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64662 => _16
  # DEBUG __aD.64660 => D#144ptD.0
  # DEBUG __nD.64661 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64665 => _16
  # DEBUG thisD.64663 => D#140ptD.0
  # DEBUG D.64664 => D#141ptD.0
  # .MEM_70 = VDEF <.MEM_69>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_46 = PHI <.MEM_69(18), .MEM_70(19)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64666 => D#147ptD.0
  # DEBUG thisD.64667 => D#147ptD.0
  # DEBUG thisD.64668 => D#147ptD.0
  # .MEM_75 = VDEF <.MEM_46>
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465ptD.0 => &D#805ptD.0->_occupancy_limitD.40447
  # DEBUG thisD.64669 => D#465ptD.0
  # DEBUG D#154ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.64670 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _17 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _17
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64673 => D#155ptD.0
  # DEBUG __pD.64672 => _17
  # DEBUG __nD.64671 => D#148ptD.0
  if (_17 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64677 => _17
  # DEBUG __aD.64675 => D#144ptD.0
  # DEBUG __nD.64676 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64680 => _17
  # DEBUG thisD.64678 => D#140ptD.0
  # DEBUG D.64679 => D#141ptD.0
  # .MEM_76 = VDEF <.MEM_75>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_17);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_47 = PHI <.MEM_75(20), .MEM_76(21)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64681 => D#147ptD.0
  # DEBUG thisD.64682 => D#147ptD.0
  # DEBUG thisD.64683 => D#147ptD.0
  # .MEM_81 = VDEF <.MEM_47>
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#802ptD.0 => &MEM[(struct FeedbackSharedBufferPolicyD.40434 *)this_2(D)].D.41247
  # DEBUG thisD.64737 => D#802ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)].D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#224ptD.0 => &D#802ptD.0->_reserved_slotsD.40245
  # DEBUG thisD.64738 => D#224ptD.0
  # DEBUG D#154ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.64739 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_82>
  # PT = nonlocal escaped 
  _32 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _32
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64742 => D#155ptD.0
  # DEBUG __pD.64741 => _32
  # DEBUG __nD.64740 => D#148ptD.0
  if (_32 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64746 => _32
  # DEBUG __aD.64744 => D#144ptD.0
  # DEBUG __nD.64745 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64749 => _32
  # DEBUG thisD.64747 => D#140ptD.0
  # DEBUG D.64748 => D#141ptD.0
  # .MEM_83 = VDEF <.MEM_82>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_48 = PHI <.MEM_82(22), .MEM_83(23)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64750 => D#147ptD.0
  # DEBUG thisD.64751 => D#147ptD.0
  # DEBUG thisD.64752 => D#147ptD.0
  # .MEM_88 = VDEF <.MEM_48>
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223ptD.0 => &D#802ptD.0->_private_buf_occupancyD.40242
  # DEBUG thisD.64753 => D#223ptD.0
  # DEBUG D#154ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.64754 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_88>
  # PT = nonlocal escaped 
  _33 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _33
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64757 => D#155ptD.0
  # DEBUG __pD.64756 => _33
  # DEBUG __nD.64755 => D#148ptD.0
  if (_33 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64761 => _33
  # DEBUG __aD.64759 => D#144ptD.0
  # DEBUG __nD.64760 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64764 => _33
  # DEBUG thisD.64762 => D#140ptD.0
  # DEBUG D.64763 => D#141ptD.0
  # .MEM_89 = VDEF <.MEM_88>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_33);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_88(24), .MEM_89(25)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64765 => D#147ptD.0
  # DEBUG thisD.64766 => D#147ptD.0
  # DEBUG thisD.64767 => D#147ptD.0
  # .MEM_94 = VDEF <.MEM_49>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222ptD.0 => &D#802ptD.0->_private_buf_sizeD.40241
  # DEBUG thisD.64768 => D#222ptD.0
  # DEBUG D#154ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.64769 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _34 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _34
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64772 => D#155ptD.0
  # DEBUG __pD.64771 => _34
  # DEBUG __nD.64770 => D#148ptD.0
  if (_34 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64776 => _34
  # DEBUG __aD.64774 => D#144ptD.0
  # DEBUG __nD.64775 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64779 => _34
  # DEBUG thisD.64777 => D#140ptD.0
  # DEBUG D.64778 => D#141ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_34);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_50 = PHI <.MEM_94(26), .MEM_95(27)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64780 => D#147ptD.0
  # DEBUG thisD.64781 => D#147ptD.0
  # DEBUG thisD.64782 => D#147ptD.0
  # .MEM_100 = VDEF <.MEM_50>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221ptD.0 => &D#802ptD.0->_private_buf_vc_mapD.40240
  # DEBUG thisD.64783 => D#221ptD.0
  # DEBUG D#154ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.64784 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_100>
  # PT = nonlocal escaped 
  _35 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _35
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64787 => D#155ptD.0
  # DEBUG __pD.64786 => _35
  # DEBUG __nD.64785 => D#148ptD.0
  if (_35 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64791 => _35
  # DEBUG __aD.64789 => D#144ptD.0
  # DEBUG __nD.64790 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64794 => _35
  # DEBUG thisD.64792 => D#140ptD.0
  # DEBUG D.64793 => D#141ptD.0
  # .MEM_101 = VDEF <.MEM_100>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_35);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_51 = PHI <.MEM_100(28), .MEM_101(29)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64795 => D#147ptD.0
  # DEBUG thisD.64796 => D#147ptD.0
  # DEBUG thisD.64797 => D#147ptD.0
  # .MEM_106 = VDEF <.MEM_51>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220ptD.0 => &D#802ptD.0->D.40291
  # DEBUG thisD.64798 => D#220ptD.0
  # DEBUG D#801ptD.0 => &MEM[(struct BufferPolicyD.39592 *)this_2(D)].D.39647
  # DEBUG thisD.64799 => D#801ptD.0
  # .MEM_108 = VDEF <.MEM_106>
  MEM[(struct ModuleD.29620 *)this_2(D)]._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTV6ModuleD.30420 + 16B];
  # DEBUG D#219ptD.0 => &D#801ptD.0->_childrenD.30370
  # DEBUG thisD.64800 => D#219ptD.0
  # DEBUG D#213ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.54616 => D#213ptD.0
  # DEBUG D#216ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_finishD.29862
  # DEBUG D#215ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_startD.29861
  # DEBUG D#118ptD.0 => D#215ptD.0
  # DEBUG D#119ptD.0 => D#216ptD.0
  # DEBUG __firstD.54615 => D#118ptD.0
  # DEBUG __lastD.54614 => D#119ptD.0
  # DEBUG D.54613 => D#120ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG __firstD.54036 => D#114ptD.0
  # DEBUG __lastD.54035 => D#115ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D.54025 => D#110ptD.0
  # DEBUG D.54024 => D#111ptD.0
  # DEBUG D#214ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.64801 => D#214ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0->_M_implD.29859._M_end_of_storageD.29863
  # DEBUG D#211ptD.0 => (long intD.12) D#212ptD.0
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _37 = MEM[(struct _Vector_baseD.29626 *)this_2(D) + 72B]._M_implD.29859._M_startD.29861;
  # DEBUG D#210ptD.0 => (long intD.12) _37
  # DEBUG D#209ptD.0 => D#211ptD.0 - D#210ptD.0
  # DEBUG D#208ptD.0 => D#209ptD.0 /[ex] 8
  # DEBUG D#205ptD.0 => D#214ptD.0
  # DEBUG D#206ptD.0 => (long unsigned intD.14) D#208ptD.0
  # DEBUG __pD.64804 => _37
  # DEBUG thisD.64802 => D#205ptD.0
  # DEBUG __nD.64803 => D#206ptD.0
  # DEBUG D#204ptD.0 => D#206ptD.0
  # DEBUG D#203ptD.0 => D#205ptD.0
  if (_37 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#202ptD.0 => &D#203ptD.0->_M_implD.29859
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __pD.64808 => _37
  # DEBUG __aD.64806 => D#200ptD.0
  # DEBUG __nD.64807 => D#201ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG __pD.64811 => _37
  # DEBUG thisD.64809 => D#196ptD.0
  # DEBUG D.64810 => D#197ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_37);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_52 = PHI <.MEM_108(30), .MEM_109(31)>
  # DEBUG D#207ptD.0 => &D#214ptD.0->_M_implD.29859
  # DEBUG thisD.64812 => D#207ptD.0
  # DEBUG thisD.64813 => D#207ptD.0
  # DEBUG thisD.64814 => D#207ptD.0
  # .MEM_114 = VDEF <.MEM_52>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218ptD.0 => &D#801ptD.0->_fullnameD.29623
  # DEBUG thisD.64815 => D#218ptD.0
  # DEBUG thisD.64816 => D#218ptD.0
  # DEBUG thisD.64825 => D#218ptD.0
  # VUSE <.MEM_114>
  # PT = nonlocal escaped 
  _38 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.64826 => D#218ptD.0
  # PT = nonlocal 
  _39 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_38 != _39)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#218ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.64818 => D#218ptD.0
  # DEBUG __sizeD.64817 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#218ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.64821 => _38
  # DEBUG __aD.64819 => D#183ptD.0
  # DEBUG __nD.64820 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.64824 => _38
  # DEBUG thisD.64822 => D#179ptD.0
  # DEBUG D.64823 => D#180ptD.0
  # .MEM_115 = VDEF <.MEM_114>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_38);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_114(32), .MEM_115(33)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG thisD.64827 => D#189ptD.0
  # DEBUG thisD.64828 => D#189ptD.0
  # DEBUG thisD.64829 => D#189ptD.0
  # .MEM_119 = VDEF <.MEM_53>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217ptD.0 => &D#801ptD.0->_nameD.29622
  # DEBUG thisD.64830 => D#217ptD.0
  # DEBUG thisD.64831 => D#217ptD.0
  # DEBUG thisD.64840 => D#217ptD.0
  # VUSE <.MEM_119>
  # PT = nonlocal escaped 
  _40 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.64841 => D#217ptD.0
  # PT = nonlocal 
  _41 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_40 != _41)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#217ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.64833 => D#217ptD.0
  # DEBUG __sizeD.64832 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#217ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.64836 => _40
  # DEBUG __aD.64834 => D#183ptD.0
  # DEBUG __nD.64835 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.64839 => _40
  # DEBUG thisD.64837 => D#179ptD.0
  # DEBUG D.64838 => D#180ptD.0
  # .MEM_120 = VDEF <.MEM_119>
  # USE = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 D.41298 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 35, next block 1, flags: (NEW, REACHABLE)
;;    pred:       34 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_54 = PHI <.MEM_119(34), .MEM_120(35)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG thisD.64842 => D#189ptD.0
  # DEBUG thisD.64843 => D#189ptD.0
  # DEBUG thisD.64844 => D#189ptD.0
  # .MEM_7 = VDEF <.MEM_54>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_7>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (_ZN11BufferState26FeedbackSharedBufferPolicyD2Ev, funcdef_no=2196, decl_uid=41234, cgraph_uid=662, symbol_order=663)


Pass statistics:
----------------

BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (struct FeedbackSharedBufferPolicyD.40434 * const thisD.41235)
{
  intD.9 * * __nstartD.64897;
  struct queueD.40450 * __firstD.64869;
  intD.9 * * _5;
  intD.9 * _7;
  struct ModuleD.29620 * * _9;
  intD.9 * _11;
  struct queueD.40450 * _25;
  intD.9 * * _31;
  intD.9 * * _32;
  intD.9 * _35;
  intD.9 * _38;
  intD.9 * _39;
  intD.9 * _40;
  intD.9 * _41;
  charD.10 * const _43;
  const charD.10 * _44;
  charD.10 * const _45;
  const charD.10 * _46;
  struct queueD.40450 * pretmp_60;
  struct queueD.40450 * prephitmp_61;
  intD.9 * * pretmp_64;
  intD.9 * * prephitmp_67;

;;   basic block 2, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#811ptD.0 => &this_2(D)->_flit_sent_timeD.41197
  # DEBUG thisD.64866 => D#811ptD.0
  # DEBUG D#463ptD.0 => &D#811ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _25 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __first_26 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.64869 => __first_26
  # DEBUG __lastD.64868 => _25
  # DEBUG __firstD.64874 => __first_26
  if (_25 == __first_26)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_133 = PHI <__first_26(3), __first_29(12)>
  # .MEM_120 = PHI <.MEM_3(3), .MEM_65(12)>
  # DEBUG __firstD.64874 => __first_133
  # DEBUG __rD.57673 => __first_133
  # DEBUG __pointerD.64875 => NULL
  # DEBUG thisD.64876 => NULL
  # DEBUG thisD.64877 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#810ptD.0 => &MEM[(struct dequeD.40449 *)__first_133].D.43590
  # DEBUG thisD.64892 => D#810ptD.0
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_mapD.43043;
  if (_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;
;;    succ:       5 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _31 = MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _32 = _31 + 8;
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  __nstart_33 = MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.64898 => D#810ptD.0
  # DEBUG __nstartD.64897 => __nstart_33
  # DEBUG __nfinishD.64896 => _32
  # DEBUG __nD.64899 => __nstart_33
  # DEBUG __nD.64899 => __nstart_33
  if (_32 <= __nstart_33)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_132 = PHI <__nstart_33(6), __nstart_36(8)>
  # .MEM_130 = PHI <.MEM_120(6), .MEM_58(8)>
  # DEBUG __nD.64899 => __nstart_132
  # VUSE <.MEM_130>
  # PT = nonlocal escaped 
  _35 = *__nstart_132;
  # DEBUG thisD.64901 => D#810ptD.0
  # DEBUG __pD.64900 => _35
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#810ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.64905 => _35
  # DEBUG __aD.64903 => D#144ptD.0
  # DEBUG __nD.64904 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64908 => _35
  # DEBUG thisD.64906 => D#140ptD.0
  # DEBUG D.64907 => D#141ptD.0
  # .MEM_58 = VDEF <.MEM_130>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_35);
  # PT = nonlocal escaped 
  __nstart_36 = __nstart_132 + 8;
  # DEBUG __nD.64899 => __nstart_36
  # DEBUG __nD.64899 => __nstart_36
  if (_32 <= __nstart_36)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_58>
  pretmp_64 = MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_mapD.43043;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_58(9), .MEM_120(5)>
  # PT = nonlocal escaped 
  # prephitmp_67 = PHI <pretmp_64(9), _5(5)>
  # DEBUG D#447ptD.0 => D#810ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#813ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#810ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.64911 => D#813ptD.0
  # DEBUG thisD.64909 => D#445ptD.0
  # DEBUG __nD.64910 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.64912
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.64915 => D#813ptD.0
  # DEBUG __aD.64913 => D#265ptD.0
  # DEBUG __nD.64914 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.64918 => D#813ptD.0
  # DEBUG thisD.64916 => D#261ptD.0
  # DEBUG D.64917 => D#262ptD.0
  # .MEM_59 = VDEF <.MEM_129>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_67);
  # DEBUG thisD.57611 => &__map_allocD.64912
  # DEBUG thisD.57590 => &__map_allocD.64912
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       4 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_120(4), .MEM_59(10)>
  # DEBUG D#448ptD.0 => &D#810ptD.0->_M_implD.43041
  # DEBUG thisD.64893 => D#448ptD.0
  # DEBUG thisD.64894 => D#448ptD.0
  # DEBUG thisD.64895 => D#448ptD.0
  # .MEM_65 = VDEF <.MEM_49>
  MEM[(struct  &)__first_133] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_29 = __first_133 + 80;
  # DEBUG __firstD.64874 => __first_29
  # DEBUG __firstD.64874 => __first_29
  if (_25 == __first_29)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_65>
  pretmp_60 = MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_131 = PHI <.MEM_65(13), .MEM_3(2)>
  # PT = nonlocal escaped 
  # prephitmp_61 = PHI <pretmp_60(13), __first_26(2)>
  # DEBUG D#464ptD.0 => &D#811ptD.0->D.41195
  # DEBUG thisD.64878 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#812ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#812ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.64881 => D#812ptD.0
  # DEBUG thisD.64879 => D#253ptD.0
  # DEBUG __nD.64880 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_61 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.64885 => D#812ptD.0
  # DEBUG __aD.64883 => D#248ptD.0
  # DEBUG __nD.64884 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.64888 => D#812ptD.0
  # DEBUG thisD.64886 => D#244ptD.0
  # DEBUG D.64887 => D#245ptD.0
  # .MEM_66 = VDEF <.MEM_131>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_61);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_50 = PHI <.MEM_131(14), .MEM_66(15)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.64889 => D#255ptD.0
  # DEBUG thisD.64890 => D#255ptD.0
  # DEBUG thisD.64891 => D#255ptD.0
  # .MEM_71 = VDEF <.MEM_50>
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466ptD.0 => &this_2(D)->_round_trip_timeD.40448
  # DEBUG thisD.57783 => D#466ptD.0
  # DEBUG D#154ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.57784 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _7
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.57787 => D#155ptD.0
  # DEBUG __pD.57786 => _7
  # DEBUG __nD.57785 => D#148ptD.0
  if (_7 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.57791 => _7
  # DEBUG __aD.57789 => D#144ptD.0
  # DEBUG __nD.57790 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.57794 => _7
  # DEBUG thisD.57792 => D#140ptD.0
  # DEBUG D.57793 => D#141ptD.0
  # .MEM_13 = VDEF <.MEM_71>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_6 = PHI <.MEM_71(16), .MEM_13(17)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.57795 => D#147ptD.0
  # DEBUG thisD.57796 => D#147ptD.0
  # DEBUG thisD.57797 => D#147ptD.0
  # .MEM_18 = VDEF <.MEM_6>
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465ptD.0 => &this_2(D)->_occupancy_limitD.40447
  # DEBUG thisD.57768 => D#465ptD.0
  # DEBUG D#154ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.57769 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _11
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.57772 => D#155ptD.0
  # DEBUG __pD.57771 => _11
  # DEBUG __nD.57770 => D#148ptD.0
  if (_11 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.57776 => _11
  # DEBUG __aD.57774 => D#144ptD.0
  # DEBUG __nD.57775 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.57779 => _11
  # DEBUG thisD.57777 => D#140ptD.0
  # DEBUG D.57778 => D#141ptD.0
  # .MEM_19 = VDEF <.MEM_18>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_18(18), .MEM_19(19)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.57780 => D#147ptD.0
  # DEBUG thisD.57781 => D#147ptD.0
  # DEBUG thisD.57782 => D#147ptD.0
  # .MEM_24 = VDEF <.MEM_12>
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#809ptD.0 => &this_2(D)->D.41247
  # DEBUG thisD.64919 => D#809ptD.0
  # .MEM_72 = VDEF <.MEM_24>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)].D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#224ptD.0 => &D#809ptD.0->_reserved_slotsD.40245
  # DEBUG thisD.64920 => D#224ptD.0
  # DEBUG D#154ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.64921 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_72>
  # PT = nonlocal escaped 
  _38 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _38
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64924 => D#155ptD.0
  # DEBUG __pD.64923 => _38
  # DEBUG __nD.64922 => D#148ptD.0
  if (_38 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64928 => _38
  # DEBUG __aD.64926 => D#144ptD.0
  # DEBUG __nD.64927 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64931 => _38
  # DEBUG thisD.64929 => D#140ptD.0
  # DEBUG D.64930 => D#141ptD.0
  # .MEM_73 = VDEF <.MEM_72>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_38);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_51 = PHI <.MEM_72(20), .MEM_73(21)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64932 => D#147ptD.0
  # DEBUG thisD.64933 => D#147ptD.0
  # DEBUG thisD.64934 => D#147ptD.0
  # .MEM_78 = VDEF <.MEM_51>
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223ptD.0 => &D#809ptD.0->_private_buf_occupancyD.40242
  # DEBUG thisD.64935 => D#223ptD.0
  # DEBUG D#154ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.64936 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_78>
  # PT = nonlocal escaped 
  _39 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _39
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64939 => D#155ptD.0
  # DEBUG __pD.64938 => _39
  # DEBUG __nD.64937 => D#148ptD.0
  if (_39 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64943 => _39
  # DEBUG __aD.64941 => D#144ptD.0
  # DEBUG __nD.64942 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64946 => _39
  # DEBUG thisD.64944 => D#140ptD.0
  # DEBUG D.64945 => D#141ptD.0
  # .MEM_79 = VDEF <.MEM_78>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_39);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_52 = PHI <.MEM_78(22), .MEM_79(23)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64947 => D#147ptD.0
  # DEBUG thisD.64948 => D#147ptD.0
  # DEBUG thisD.64949 => D#147ptD.0
  # .MEM_84 = VDEF <.MEM_52>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222ptD.0 => &D#809ptD.0->_private_buf_sizeD.40241
  # DEBUG thisD.64950 => D#222ptD.0
  # DEBUG D#154ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.64951 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_84>
  # PT = nonlocal escaped 
  _40 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _40
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64954 => D#155ptD.0
  # DEBUG __pD.64953 => _40
  # DEBUG __nD.64952 => D#148ptD.0
  if (_40 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64958 => _40
  # DEBUG __aD.64956 => D#144ptD.0
  # DEBUG __nD.64957 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64961 => _40
  # DEBUG thisD.64959 => D#140ptD.0
  # DEBUG D.64960 => D#141ptD.0
  # .MEM_85 = VDEF <.MEM_84>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_84(24), .MEM_85(25)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64962 => D#147ptD.0
  # DEBUG thisD.64963 => D#147ptD.0
  # DEBUG thisD.64964 => D#147ptD.0
  # .MEM_90 = VDEF <.MEM_53>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221ptD.0 => &D#809ptD.0->_private_buf_vc_mapD.40240
  # DEBUG thisD.64965 => D#221ptD.0
  # DEBUG D#154ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.64966 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  _41 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _41
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64969 => D#155ptD.0
  # DEBUG __pD.64968 => _41
  # DEBUG __nD.64967 => D#148ptD.0
  if (_41 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64973 => _41
  # DEBUG __aD.64971 => D#144ptD.0
  # DEBUG __nD.64972 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64976 => _41
  # DEBUG thisD.64974 => D#140ptD.0
  # DEBUG D.64975 => D#141ptD.0
  # .MEM_91 = VDEF <.MEM_90>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_41);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_54 = PHI <.MEM_90(26), .MEM_91(27)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64977 => D#147ptD.0
  # DEBUG thisD.64978 => D#147ptD.0
  # DEBUG thisD.64979 => D#147ptD.0
  # .MEM_96 = VDEF <.MEM_54>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220ptD.0 => &D#809ptD.0->D.40291
  # DEBUG thisD.64980 => D#220ptD.0
  # DEBUG D#808ptD.0 => &MEM[(struct BufferPolicyD.39592 *)this_2(D)].D.39647
  # DEBUG thisD.64981 => D#808ptD.0
  # .MEM_98 = VDEF <.MEM_96>
  MEM[(struct ModuleD.29620 *)this_2(D)]._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTV6ModuleD.30420 + 16B];
  # DEBUG D#219ptD.0 => &D#808ptD.0->_childrenD.30370
  # DEBUG thisD.64982 => D#219ptD.0
  # DEBUG D#213ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.54616 => D#213ptD.0
  # DEBUG D#216ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_finishD.29862
  # DEBUG D#215ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_startD.29861
  # DEBUG D#118ptD.0 => D#215ptD.0
  # DEBUG D#119ptD.0 => D#216ptD.0
  # DEBUG __firstD.54615 => D#118ptD.0
  # DEBUG __lastD.54614 => D#119ptD.0
  # DEBUG D.54613 => D#120ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG __firstD.54036 => D#114ptD.0
  # DEBUG __lastD.54035 => D#115ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D.54025 => D#110ptD.0
  # DEBUG D.54024 => D#111ptD.0
  # DEBUG D#214ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.64983 => D#214ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0->_M_implD.29859._M_end_of_storageD.29863
  # DEBUG D#211ptD.0 => (long intD.12) D#212ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped 
  _9 = MEM[(struct _Vector_baseD.29626 *)this_2(D) + 72B]._M_implD.29859._M_startD.29861;
  # DEBUG D#210ptD.0 => (long intD.12) _9
  # DEBUG D#209ptD.0 => D#211ptD.0 - D#210ptD.0
  # DEBUG D#208ptD.0 => D#209ptD.0 /[ex] 8
  # DEBUG D#205ptD.0 => D#214ptD.0
  # DEBUG D#206ptD.0 => (long unsigned intD.14) D#208ptD.0
  # DEBUG __pD.64986 => _9
  # DEBUG thisD.64984 => D#205ptD.0
  # DEBUG __nD.64985 => D#206ptD.0
  # DEBUG D#204ptD.0 => D#206ptD.0
  # DEBUG D#203ptD.0 => D#205ptD.0
  if (_9 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#202ptD.0 => &D#203ptD.0->_M_implD.29859
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __pD.64990 => _9
  # DEBUG __aD.64988 => D#200ptD.0
  # DEBUG __nD.64989 => D#201ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG __pD.64993 => _9
  # DEBUG thisD.64991 => D#196ptD.0
  # DEBUG D.64992 => D#197ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_9);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_98(28), .MEM_99(29)>
  # DEBUG D#207ptD.0 => &D#214ptD.0->_M_implD.29859
  # DEBUG thisD.64994 => D#207ptD.0
  # DEBUG thisD.64995 => D#207ptD.0
  # DEBUG thisD.64996 => D#207ptD.0
  # .MEM_104 = VDEF <.MEM_55>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218ptD.0 => &D#808ptD.0->_fullnameD.29623
  # DEBUG thisD.64997 => D#218ptD.0
  # DEBUG thisD.64998 => D#218ptD.0
  # DEBUG thisD.65007 => D#218ptD.0
  # VUSE <.MEM_104>
  # PT = nonlocal escaped 
  _43 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.65008 => D#218ptD.0
  # PT = nonlocal 
  _44 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_43 != _44)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#218ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.65000 => D#218ptD.0
  # DEBUG __sizeD.64999 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#218ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.65003 => _43
  # DEBUG __aD.65001 => D#183ptD.0
  # DEBUG __nD.65002 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.65006 => _43
  # DEBUG thisD.65004 => D#179ptD.0
  # DEBUG D.65005 => D#180ptD.0
  # .MEM_105 = VDEF <.MEM_104>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_43);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_56 = PHI <.MEM_104(30), .MEM_105(31)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG thisD.65009 => D#189ptD.0
  # DEBUG thisD.65010 => D#189ptD.0
  # DEBUG thisD.65011 => D#189ptD.0
  # .MEM_109 = VDEF <.MEM_56>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217ptD.0 => &D#808ptD.0->_nameD.29622
  # DEBUG thisD.65012 => D#217ptD.0
  # DEBUG thisD.65013 => D#217ptD.0
  # DEBUG thisD.65022 => D#217ptD.0
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _45 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.65023 => D#217ptD.0
  # PT = nonlocal 
  _46 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_45 != _46)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#217ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.65015 => D#217ptD.0
  # DEBUG __sizeD.65014 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#217ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.65018 => _45
  # DEBUG __aD.65016 => D#183ptD.0
  # DEBUG __nD.65017 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.65021 => _45
  # DEBUG thisD.65019 => D#179ptD.0
  # DEBUG D.65020 => D#180ptD.0
  # .MEM_110 = VDEF <.MEM_109>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_45);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 33, next block 1, flags: (NEW, REACHABLE)
;;    pred:       32 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_109(32), .MEM_110(33)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG thisD.65024 => D#189ptD.0
  # DEBUG thisD.65025 => D#189ptD.0
  # DEBUG thisD.65026 => D#189ptD.0
  # .MEM_10 = VDEF <.MEM_57>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_10>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_2(D)->D.41247.D.40291.D.39647._vptr.Module
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 280
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 272B]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 272
	step: 0
	aligned to: 256
	base_object: MEM[(struct vector *)this_2(D) + 272B]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_33
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_33
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Analyzing # of iterations of loop 2
  exit condition [__nstart_33 + 8, + , 8](no_overflow) < _31 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _31 - (unsigned long) __nstart_33) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 2
  exit condition [__nstart_33 + 8, + , 8](no_overflow) < _31 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _31 - (unsigned long) __nstart_33) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Analyzing # of iterations of loop 1
  exit condition [__first_26 + 80, + , 80](no_overflow) != _25
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551535
  result:
    under assumptions ((unsigned long) _25 - (unsigned long) (__first_26 + 80) & 15) == 0
    # of iterations (((unsigned long) _25 - (unsigned long) (__first_26 + 80)) /[ex] 16) * 922337203685477581 & 1152921504606846975, bounded by 230584300921369395
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 72
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 40
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: {0B, +, 80}_1
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_33
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_33
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Analyzing # of iterations of loop 2
  exit condition [__nstart_33 + 8, + , 8](no_overflow) < _31 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _31 - (unsigned long) __nstart_33) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_33
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_33
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Creating dr for *__nstart_132
analyze_innermost: success.
	base_address: __nstart_33
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_132
Analyzing # of iterations of loop 2
  exit condition [__nstart_33 + 8, + , 8](no_overflow) < _31 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _31 - (unsigned long) __nstart_33) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Creating dr for MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
analyze_innermost: success.
	base_address: __first_26
	offset from base address: 0
	constant offset from base address: 0
	step: 80
	aligned to: 256
	base_object: MEM[(struct _Deque_base *)__first_26]
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0B, +, 80}_1
Analyzing # of iterations of loop 1
  exit condition [__first_26 + 80, + , 80](no_overflow) != _25
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551535
  result:
    under assumptions ((unsigned long) _25 - (unsigned long) (__first_26 + 80) & 15) == 0
    # of iterations (((unsigned long) _25 - (unsigned long) (__first_26 + 80)) /[ex] 16) * 922337203685477581 & 1152921504606846975, bounded by 230584300921369395
Creating dr for MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 272
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Vector_base *)this_2(D) + 272B]
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:37, LOOPS:2, CONDITIONS:15, STMTS:606)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_14 bb_3 })
  {
    <bb 2>:
    # .MEM_3 = VDEF <.MEM_1(D)>
    this_2(D)->D.41247.D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyE + 16B];
    # DEBUG D#811 => &this_2(D)->_flit_sent_time
    # DEBUG this => D#811
    # DEBUG D#463 => &D#811->D.41195
    # DEBUG this => D#463
    # VUSE <.MEM_3>
    _25 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_finish;
    # VUSE <.MEM_3>
    __first_26 = MEM[(struct vector *)this_2(D) + 272B].D.41195._M_impl._M_start;
    # DEBUG __first => __first_26
    # DEBUG __last => _25
    # DEBUG __first => __first_26
    if (_25 == __first_26)
      goto <bb 14>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_13 (preds = {bb_11 }, succs = {bb_35 })
  {
    <bb 13>:

  }
  bb_35 (preds = {bb_13 }, succs = {bb_14 })
  {
    <bb 35>:
    # VUSE <.MEM_65>
    pretmp_60 = MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start;

  }
  bb_14 (preds = {bb_35 bb_2 }, succs = {bb_15 bb_16 })
  {
    <bb 14>:
    # .MEM_131 = PHI <.MEM_65(35), .MEM_3(2)>
    # prephitmp_61 = PHI <pretmp_60(35), __first_26(2)>
    # DEBUG D#464 => &D#811->D.41195
    # DEBUG this => D#464
    # DEBUG D#260 => D#464->_M_impl._M_end_of_storage
    # DEBUG D#259 => (long int) D#260
    # DEBUG D#812 => MEM[(struct _Vector_base *)this_2(D) + 272B]._M_impl._M_start
    # DEBUG D#258 => (long int) D#812
    # DEBUG D#257 => D#259 - D#258
    # DEBUG D#256 => D#257 /[ex] 80
    # DEBUG D#253 => D#464
    # DEBUG D#254 => (long unsigned int) D#256
    # DEBUG __p => D#812
    # DEBUG this => D#253
    # DEBUG __n => D#254
    # DEBUG D#252 => D#254
    # DEBUG D#251 => D#253
    if (prephitmp_61 != 0B)
      goto <bb 15>;
    else
      goto <bb 16>;

  }
  bb_15 (preds = {bb_14 }, succs = {bb_16 })
  {
    <bb 15>:
    # DEBUG D#250 => &D#251->_M_impl
    # DEBUG D#248 => D#250
    # DEBUG D#249 => D#252
    # DEBUG __p => D#812
    # DEBUG __a => D#248
    # DEBUG __n => D#249
    # DEBUG D#247 => D#249
    # DEBUG D#246 => D#248
    # DEBUG D#244 => D#246
    # DEBUG D#245 => D#247
    # DEBUG __p => D#812
    # DEBUG this => D#244
    # DEBUG D.64887 => D#245
    # .MEM_66 = VDEF <.MEM_131>
    operator delete (prephitmp_61);

  }
  bb_16 (preds = {bb_14 bb_15 }, succs = {bb_17 bb_18 })
  {
    <bb 16>:
    # .MEM_50 = PHI <.MEM_131(14), .MEM_66(15)>
    # DEBUG D#255 => &D#464->_M_impl
    # DEBUG this => D#255
    # DEBUG this => D#255
    # DEBUG this => D#255
    # .MEM_71 = VDEF <.MEM_50>
    MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
    # DEBUG D#466 => &this_2(D)->_round_trip_time
    # DEBUG this => D#466
    # DEBUG D#154 => &D#466->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#466->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#466->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#466->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_71>
    _7 = MEM[(struct _Vector_base *)this_2(D) + 248B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _7
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _7
    # DEBUG __n => D#148
    if (_7 != 0B)
      goto <bb 17>;
    else
      goto <bb 18>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_18 })
  {
    <bb 17>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _7
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _7
    # DEBUG this => D#140
    # DEBUG D.57793 => D#141
    # .MEM_13 = VDEF <.MEM_71>
    operator delete (_7);

  }
  bb_18 (preds = {bb_16 bb_17 }, succs = {bb_19 bb_20 })
  {
    <bb 18>:
    # .MEM_6 = PHI <.MEM_71(16), .MEM_13(17)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_18 = VDEF <.MEM_6>
    MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
    # DEBUG D#465 => &this_2(D)->_occupancy_limit
    # DEBUG this => D#465
    # DEBUG D#154 => &D#465->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#465->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#465->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#465->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_18>
    _11 = MEM[(struct _Vector_base *)this_2(D) + 224B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _11
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _11
    # DEBUG __n => D#148
    if (_11 != 0B)
      goto <bb 19>;
    else
      goto <bb 20>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _11
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _11
    # DEBUG this => D#140
    # DEBUG D.57778 => D#141
    # .MEM_19 = VDEF <.MEM_18>
    operator delete (_11);

  }
  bb_20 (preds = {bb_18 bb_19 }, succs = {bb_21 bb_22 })
  {
    <bb 20>:
    # .MEM_12 = PHI <.MEM_18(18), .MEM_19(19)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_24 = VDEF <.MEM_12>
    MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
    # DEBUG D#809 => &this_2(D)->D.41247
    # DEBUG this => D#809
    # .MEM_72 = VDEF <.MEM_24>
    MEM[(struct SharedBufferPolicy *)this_2(D)].D.40291.D.39647._vptr.Module = &MEM[(void *)&_ZTVN11BufferState18SharedBufferPolicyE + 16B];
    # DEBUG D#224 => &D#809->_reserved_slots
    # DEBUG this => D#224
    # DEBUG D#154 => &D#224->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#224->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#224->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#224->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_72>
    _38 = MEM[(struct _Vector_base *)this_2(D) + 192B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _38
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _38
    # DEBUG __n => D#148
    if (_38 != 0B)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _38
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _38
    # DEBUG this => D#140
    # DEBUG D.64930 => D#141
    # .MEM_73 = VDEF <.MEM_72>
    operator delete (_38);

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {bb_23 bb_24 })
  {
    <bb 22>:
    # .MEM_51 = PHI <.MEM_72(20), .MEM_73(21)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_78 = VDEF <.MEM_51>
    MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
    # DEBUG D#223 => &D#809->_private_buf_occupancy
    # DEBUG this => D#223
    # DEBUG D#154 => &D#223->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#223->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#223->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#223->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_78>
    _39 = MEM[(struct _Vector_base *)this_2(D) + 160B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _39
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _39
    # DEBUG __n => D#148
    if (_39 != 0B)
      goto <bb 23>;
    else
      goto <bb 24>;

  }
  bb_23 (preds = {bb_22 }, succs = {bb_24 })
  {
    <bb 23>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _39
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _39
    # DEBUG this => D#140
    # DEBUG D.64945 => D#141
    # .MEM_79 = VDEF <.MEM_78>
    operator delete (_39);

  }
  bb_24 (preds = {bb_22 bb_23 }, succs = {bb_25 bb_26 })
  {
    <bb 24>:
    # .MEM_52 = PHI <.MEM_78(22), .MEM_79(23)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_84 = VDEF <.MEM_52>
    MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
    # DEBUG D#222 => &D#809->_private_buf_size
    # DEBUG this => D#222
    # DEBUG D#154 => &D#222->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#222->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#222->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#222->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_84>
    _40 = MEM[(struct _Vector_base *)this_2(D) + 136B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _40
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _40
    # DEBUG __n => D#148
    if (_40 != 0B)
      goto <bb 25>;
    else
      goto <bb 26>;

  }
  bb_25 (preds = {bb_24 }, succs = {bb_26 })
  {
    <bb 25>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _40
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _40
    # DEBUG this => D#140
    # DEBUG D.64960 => D#141
    # .MEM_85 = VDEF <.MEM_84>
    operator delete (_40);

  }
  bb_26 (preds = {bb_24 bb_25 }, succs = {bb_27 bb_28 })
  {
    <bb 26>:
    # .MEM_53 = PHI <.MEM_84(24), .MEM_85(25)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_90 = VDEF <.MEM_53>
    MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
    # DEBUG D#221 => &D#809->_private_buf_vc_map
    # DEBUG this => D#221
    # DEBUG D#154 => &D#221->D.40238
    # DEBUG this => D#154
    # DEBUG D#157 => D#221->D.40238._M_impl._M_finish
    # DEBUG D#156 => D#221->D.40238._M_impl._M_start
    # DEBUG __first => D#156
    # DEBUG __last => D#157
    # DEBUG D.54209 => NULL
    # DEBUG D#134 => D#156
    # DEBUG D#135 => D#157
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#155 => &D#221->D.40238
    # DEBUG this => D#155
    # DEBUG D#153 => D#155->_M_impl._M_end_of_storage
    # DEBUG D#152 => (long int) D#153
    # VUSE <.MEM_90>
    _41 = MEM[(struct _Vector_base *)this_2(D) + 112B]._M_impl._M_start;
    # DEBUG D#151 => (long int) _41
    # DEBUG D#150 => D#152 - D#151
    # DEBUG D#149 => D#150 /[ex] 4
    # DEBUG D#148 => (long unsigned int) D#149
    # DEBUG this => D#155
    # DEBUG __p => _41
    # DEBUG __n => D#148
    if (_41 != 0B)
      goto <bb 27>;
    else
      goto <bb 28>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_28 })
  {
    <bb 27>:
    # DEBUG D#146 => &D#155->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#148
    # DEBUG __p => _41
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => _41
    # DEBUG this => D#140
    # DEBUG D.64975 => D#141
    # .MEM_91 = VDEF <.MEM_90>
    operator delete (_41);

  }
  bb_28 (preds = {bb_26 bb_27 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # .MEM_54 = PHI <.MEM_90(26), .MEM_91(27)>
    # DEBUG D#147 => &D#155->_M_impl
    # DEBUG this => D#147
    # DEBUG this => D#147
    # DEBUG this => D#147
    # .MEM_96 = VDEF <.MEM_54>
    MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
    # DEBUG D#220 => &D#809->D.40291
    # DEBUG this => D#220
    # DEBUG D#808 => &MEM[(struct BufferPolicy *)this_2(D)].D.39647
    # DEBUG this => D#808
    # .MEM_98 = VDEF <.MEM_96>
    MEM[(struct Module *)this_2(D)]._vptr.Module = &MEM[(void *)&_ZTV6Module + 16B];
    # DEBUG D#219 => &D#808->_children
    # DEBUG this => D#219
    # DEBUG D#213 => &D#219->D.30368
    # DEBUG this => D#213
    # DEBUG D#216 => D#219->D.30368._M_impl._M_finish
    # DEBUG D#215 => D#219->D.30368._M_impl._M_start
    # DEBUG D#118 => D#215
    # DEBUG D#119 => D#216
    # DEBUG __first => D#118
    # DEBUG __last => D#119
    # DEBUG D.54613 => D#120
    # DEBUG D#117 => D#119
    # DEBUG D#116 => D#118
    # DEBUG D#114 => D#116
    # DEBUG D#115 => D#117
    # DEBUG __first => D#114
    # DEBUG __last => D#115
    # DEBUG D#113 => D#115
    # DEBUG D#112 => D#114
    # DEBUG D#110 => D#112
    # DEBUG D#111 => D#113
    # DEBUG D.54025 => D#110
    # DEBUG D.54024 => D#111
    # DEBUG D#214 => &D#219->D.30368
    # DEBUG this => D#214
    # DEBUG D#212 => D#214->_M_impl._M_end_of_storage
    # DEBUG D#211 => (long int) D#212
    # VUSE <.MEM_98>
    _9 = MEM[(struct _Vector_base *)this_2(D) + 72B]._M_impl._M_start;
    # DEBUG D#210 => (long int) _9
    # DEBUG D#209 => D#211 - D#210
    # DEBUG D#208 => D#209 /[ex] 8
    # DEBUG D#205 => D#214
    # DEBUG D#206 => (long unsigned int) D#208
    # DEBUG __p => _9
    # DEBUG this => D#205
    # DEBUG __n => D#206
    # DEBUG D#204 => D#206
    # DEBUG D#203 => D#205
    if (_9 != 0B)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {bb_30 })
  {
    <bb 29>:
    # DEBUG D#202 => &D#203->_M_impl
    # DEBUG D#200 => D#202
    # DEBUG D#201 => D#204
    # DEBUG __p => _9
    # DEBUG __a => D#200
    # DEBUG __n => D#201
    # DEBUG D#199 => D#201
    # DEBUG D#198 => D#200
    # DEBUG D#196 => D#198
    # DEBUG D#197 => D#199
    # DEBUG __p => _9
    # DEBUG this => D#196
    # DEBUG D.64992 => D#197
    # .MEM_99 = VDEF <.MEM_98>
    operator delete (_9);

  }
  bb_30 (preds = {bb_28 bb_29 }, succs = {bb_31 bb_32 })
  {
    <bb 30>:
    # .MEM_55 = PHI <.MEM_98(28), .MEM_99(29)>
    # DEBUG D#207 => &D#214->_M_impl
    # DEBUG this => D#207
    # DEBUG this => D#207
    # DEBUG this => D#207
    # .MEM_104 = VDEF <.MEM_55>
    MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
    # DEBUG D#218 => &D#808->_fullname
    # DEBUG this => D#218
    # DEBUG this => D#218
    # DEBUG this => D#218
    # VUSE <.MEM_104>
    _43 = MEM[(char * *)this_2(D) + 40B];
    # DEBUG D#1 => D#218
    # DEBUG this => D#1
    # DEBUG this => D#218
    _44 = &MEM[(const struct basic_string *)this_2(D) + 40B].D.11539._M_local_buf;
    if (_43 != _44)
      goto <bb 31>;
    else
      goto <bb 32>;

  }
  bb_31 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 31>:
    # DEBUG D#188 => MEM[(struct basic_string *)D#218].D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => D#218
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => D#218
    # DEBUG this => D#1
    # DEBUG this => D#218
    # DEBUG D#185 => &MEM[(struct basic_string *)D#218]._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _43
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _43
    # DEBUG this => D#179
    # DEBUG D.65005 => D#180
    # .MEM_105 = VDEF <.MEM_104>
    operator delete (_43);

  }
  bb_32 (preds = {bb_30 bb_31 }, succs = {bb_33 bb_34 })
  {
    <bb 32>:
    # .MEM_56 = PHI <.MEM_104(30), .MEM_105(31)>
    # DEBUG D#189 => &MEM[(struct basic_string *)D#218]._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_109 = VDEF <.MEM_56>
    MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
    # DEBUG D#217 => &D#808->_name
    # DEBUG this => D#217
    # DEBUG this => D#217
    # DEBUG this => D#217
    # VUSE <.MEM_109>
    _45 = MEM[(char * *)this_2(D) + 8B];
    # DEBUG D#1 => D#217
    # DEBUG this => D#1
    # DEBUG this => D#217
    _46 = &MEM[(const struct basic_string *)this_2(D) + 8B].D.11539._M_local_buf;
    if (_45 != _46)
      goto <bb 33>;
    else
      goto <bb 34>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_34 })
  {
    <bb 33>:
    # DEBUG D#188 => MEM[(struct basic_string *)D#217].D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => D#217
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => D#217
    # DEBUG this => D#1
    # DEBUG this => D#217
    # DEBUG D#185 => &MEM[(struct basic_string *)D#217]._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _45
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _45
    # DEBUG this => D#179
    # DEBUG D.65020 => D#180
    # .MEM_110 = VDEF <.MEM_109>
    operator delete (_45);

  }
  bb_34 (preds = {bb_32 bb_33 }, succs = {bb_1 })
  {
    <bb 34>:
    # .MEM_57 = PHI <.MEM_109(32), .MEM_110(33)>
    # DEBUG D#189 => &MEM[(struct basic_string *)D#217]._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_10 = VDEF <.MEM_57>
    MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
    # VUSE <.MEM_10>
    return;

  }
  loop_1 (header = 4, latch = 12, niter = )
  {
    bb_4 (preds = {bb_3 bb_12 }, succs = {bb_5 bb_11 })
    {
      <bb 4>:
      # __first_133 = PHI <__first_26(3), __first_29(12)>
      # .MEM_120 = PHI <.MEM_3(3), .MEM_65(12)>
      # DEBUG __first => __first_133
      # DEBUG __r => __first_133
      # DEBUG __pointer => NULL
      # DEBUG this => NULL
      # DEBUG this => D#458
      # DEBUG D#449 => &D#458->D.43590
      # DEBUG this => D#449
      # DEBUG this => D#458
      # DEBUG D#66 => &D#458->D.43590._M_impl._M_finish
      # DEBUG this => NULL
      # DEBUG __x => D#66
      # DEBUG D#457 => MEM[(const struct iterator &)D#458 + 48]._M_cur
      # DEBUG D.57660 => D#457
      # DEBUG D#456 => MEM[(const struct iterator &)D#458 + 48]._M_first
      # DEBUG D.57661 => D#456
      # DEBUG D#455 => MEM[(const struct iterator &)D#458 + 48]._M_last
      # DEBUG D.57662 => D#455
      # DEBUG D#454 => MEM[(const struct iterator &)D#458 + 48]._M_node
      # DEBUG D.57663 => D#454
      # DEBUG this => D#458
      # DEBUG D#67 => &D#458->D.43590._M_impl._M_start
      # DEBUG this => NULL
      # DEBUG __x => D#67
      # DEBUG D#453 => MEM[(const struct iterator &)D#458 + 16]._M_cur
      # DEBUG D.57656 => D#453
      # DEBUG D#452 => MEM[(const struct iterator &)D#458 + 16]._M_first
      # DEBUG D.57657 => D#452
      # DEBUG D#451 => MEM[(const struct iterator &)D#458 + 16]._M_last
      # DEBUG D.57658 => D#451
      # DEBUG D#450 => MEM[(const struct iterator &)D#458 + 16]._M_node
      # DEBUG D.57659 => D#450
      # DEBUG D#68 => D#458
      # DEBUG this => D#68
      # DEBUG __first => D#69
      # DEBUG __last => D#70
      # DEBUG D.57644 => D#71
      # DEBUG D#810 => &MEM[(struct deque *)__first_133].D.43590
      # DEBUG this => D#810
      # VUSE <.MEM_120>
      _5 = MEM[(struct _Deque_base *)__first_133]._M_impl._M_map;
      if (_5 != 0B)
        goto <bb 5>;
      else
        goto <bb 11>;

    }
    bb_5 (preds = {bb_4 }, succs = {bb_10 bb_6 })
    {
      <bb 5>:
      # VUSE <.MEM_120>
      _31 = MEM[(struct _Deque_base *)__first_133]._M_impl._M_finish._M_node;
      _32 = _31 + 8;
      # VUSE <.MEM_120>
      __nstart_33 = MEM[(struct _Deque_base *)__first_133]._M_impl._M_start._M_node;
      # DEBUG this => D#810
      # DEBUG __nstart => __nstart_33
      # DEBUG __nfinish => _32
      # DEBUG __n => __nstart_33
      # DEBUG __n => __nstart_33
      if (_32 <= __nstart_33)
        goto <bb 10>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:

    }
    bb_9 (preds = {bb_7 }, succs = {bb_36 })
    {
      <bb 9>:

    }
    bb_36 (preds = {bb_9 }, succs = {bb_10 })
    {
      <bb 36>:
      # VUSE <.MEM_58>
      pretmp_64 = MEM[(struct _Deque_base *)__first_133]._M_impl._M_map;

    }
    bb_10 (preds = {bb_36 bb_5 }, succs = {bb_11 })
    {
      <bb 10>:
      # .MEM_129 = PHI <.MEM_58(36), .MEM_120(5)>
      # prephitmp_67 = PHI <pretmp_64(36), _5(5)>
      # DEBUG D#447 => D#810->_M_impl._M_map_size
      # DEBUG D#813 => MEM[(struct _Deque_base *)__first_133]._M_impl._M_map
      # DEBUG D#445 => D#810
      # DEBUG D#446 => D#447
      # DEBUG __p => D#813
      # DEBUG this => D#445
      # DEBUG __n => D#446
      # DEBUG D#444 => D#446
      # DEBUG D#443 => D#445
      # DEBUG D#442 => D#443
      # DEBUG this => D#442
      # DEBUG D#441 => D#442
      # DEBUG this => D#441
      # DEBUG this => NULL
      # DEBUG D.57578 => NULL
      # DEBUG this => NULL
      # DEBUG D#265 => &__map_alloc
      # DEBUG D#266 => D#444
      # DEBUG __p => D#813
      # DEBUG __a => D#265
      # DEBUG __n => D#266
      # DEBUG D#264 => D#266
      # DEBUG D#263 => D#265
      # DEBUG D#261 => D#263
      # DEBUG D#262 => D#264
      # DEBUG __p => D#813
      # DEBUG this => D#261
      # DEBUG D.64917 => D#262
      # .MEM_59 = VDEF <.MEM_129>
      operator delete (prephitmp_67);
      # DEBUG this => &__map_alloc
      # DEBUG this => &__map_alloc

    }
    bb_11 (preds = {bb_4 bb_10 }, succs = {bb_13 bb_12 })
    {
      <bb 11>:
      # .MEM_49 = PHI <.MEM_120(4), .MEM_59(10)>
      # DEBUG D#448 => &D#810->_M_impl
      # DEBUG this => D#448
      # DEBUG this => D#448
      # DEBUG this => D#448
      # .MEM_65 = VDEF <.MEM_49>
      MEM[(struct  &)__first_133] ={v} {CLOBBER};
      __first_29 = __first_133 + 80;
      # DEBUG __first => __first_29
      # DEBUG __first => __first_29
      if (_25 == __first_29)
        goto <bb 13>;
      else
        goto <bb 12>;

    }
    bb_12 (preds = {bb_11 }, succs = {bb_4 })
    {
      <bb 12>:
      goto <bb 4>;

    }
    loop_2 (header = 7, latch = 8, niter = (((unsigned long) _31 - (unsigned long) __nstart_33) + 7) / 8, upper_bound = 2305843009213693951)
    {
      bb_7 (preds = {bb_6 bb_8 }, succs = {bb_9 bb_8 })
      {
        <bb 7>:
        # __nstart_132 = PHI <__nstart_33(6), __nstart_36(8)>
        # .MEM_130 = PHI <.MEM_120(6), .MEM_58(8)>
        # DEBUG __n => __nstart_132
        # VUSE <.MEM_130>
        _35 = *__nstart_132;
        # DEBUG this => D#810
        # DEBUG __p => _35
        # DEBUG __size => 4
        # DEBUG D#167 => &D#810->_M_impl
        # DEBUG D#144 => D#167
        # DEBUG __p => _35
        # DEBUG __a => D#144
        # DEBUG __n => D#145
        # DEBUG D#143 => D#145
        # DEBUG D#142 => D#144
        # DEBUG D#140 => D#142
        # DEBUG D#141 => D#143
        # DEBUG __p => _35
        # DEBUG this => D#140
        # DEBUG D.64907 => D#141
        # .MEM_58 = VDEF <.MEM_130>
        operator delete (_35);
        __nstart_36 = __nstart_132 + 8;
        # DEBUG __n => __nstart_36
        # DEBUG __n => __nstart_36
        if (_32 <= __nstart_36)
          goto <bb 9>;
        else
          goto <bb 8>;

      }
      bb_8 (preds = {bb_7 }, succs = {bb_7 })
      {
        <bb 8>:
        goto <bb 7>;

      }
    }
  }
}

Pass statistics:
----------------

BufferState::FeedbackSharedBufferPolicy::~FeedbackSharedBufferPolicy() (struct FeedbackSharedBufferPolicyD.40434 * const thisD.41235)
{
  intD.9 * * __nstartD.64897;
  struct queueD.40450 * __firstD.64869;
  intD.9 * * _5;
  intD.9 * _7;
  struct ModuleD.29620 * * _9;
  intD.9 * _11;
  struct queueD.40450 * _25;
  intD.9 * * _31;
  intD.9 * * _32;
  intD.9 * _35;
  intD.9 * _38;
  intD.9 * _39;
  intD.9 * _40;
  intD.9 * _41;
  charD.10 * const _43;
  const charD.10 * _44;
  charD.10 * const _45;
  const charD.10 * _46;
  struct queueD.40450 * pretmp_60;
  struct queueD.40450 * prephitmp_61;
  intD.9 * * pretmp_64;
  intD.9 * * prephitmp_67;

;;   basic block 2, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = VDEF <.MEM_1(D)>
  this_2(D)->D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#811ptD.0 => &this_2(D)->_flit_sent_timeD.41197
  # DEBUG thisD.64866 => D#811ptD.0
  # DEBUG D#463ptD.0 => &D#811ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  _25 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_3>
  # PT = nonlocal escaped 
  __first_26 = MEM[(struct vectorD.40452 *)this_2(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.64869 => __first_26
  # DEBUG __lastD.64868 => _25
  # DEBUG __firstD.64874 => __first_26
  if (_25 == __first_26)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_133 = PHI <__first_26(3), __first_29(12)>
  # .MEM_120 = PHI <.MEM_3(3), .MEM_65(12)>
  # DEBUG __firstD.64874 => __first_133
  # DEBUG __rD.57673 => __first_133
  # DEBUG __pointerD.64875 => NULL
  # DEBUG thisD.64876 => NULL
  # DEBUG thisD.64877 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#810ptD.0 => &MEM[(struct dequeD.40449 *)__first_133].D.43590
  # DEBUG thisD.64892 => D#810ptD.0
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _5 = MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_mapD.43043;
  if (_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 11>;
;;    succ:       5 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _31 = MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _32 = _31 + 8;
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  __nstart_33 = MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.64898 => D#810ptD.0
  # DEBUG __nstartD.64897 => __nstart_33
  # DEBUG __nfinishD.64896 => _32
  # DEBUG __nD.64899 => __nstart_33
  # DEBUG __nD.64899 => __nstart_33
  if (_32 <= __nstart_33)
    goto <bb 10>;
  else
    goto <bb 6>;
;;    succ:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_132 = PHI <__nstart_33(6), __nstart_36(8)>
  # .MEM_130 = PHI <.MEM_120(6), .MEM_58(8)>
  # DEBUG __nD.64899 => __nstart_132
  # VUSE <.MEM_130>
  # PT = nonlocal escaped 
  _35 = *__nstart_132;
  # DEBUG thisD.64901 => D#810ptD.0
  # DEBUG __pD.64900 => _35
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#810ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.64905 => _35
  # DEBUG __aD.64903 => D#144ptD.0
  # DEBUG __nD.64904 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64908 => _35
  # DEBUG thisD.64906 => D#140ptD.0
  # DEBUG D.64907 => D#141ptD.0
  # .MEM_58 = VDEF <.MEM_130>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_35);
  # PT = nonlocal escaped 
  __nstart_36 = __nstart_132 + 8;
  # DEBUG __nD.64899 => __nstart_36
  # DEBUG __nD.64899 => __nstart_36
  if (_32 <= __nstart_36)
    goto <bb 9>;
  else
    goto <bb 8>;
;;    succ:       9 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 8, next block 36, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       36 [100.0%]  (FALLTHRU)

;;   basic block 36, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 9, next block 10, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_58>
  pretmp_64 = MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_mapD.43043;
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 36, next block 11, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_129 = PHI <.MEM_58(36), .MEM_120(5)>
  # PT = nonlocal escaped 
  # prephitmp_67 = PHI <pretmp_64(36), _5(5)>
  # DEBUG D#447ptD.0 => D#810ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#813ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_133]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#810ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.64911 => D#813ptD.0
  # DEBUG thisD.64909 => D#445ptD.0
  # DEBUG __nD.64910 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.64912
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.64915 => D#813ptD.0
  # DEBUG __aD.64913 => D#265ptD.0
  # DEBUG __nD.64914 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.64918 => D#813ptD.0
  # DEBUG thisD.64916 => D#261ptD.0
  # DEBUG D.64917 => D#262ptD.0
  # .MEM_59 = VDEF <.MEM_129>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_67);
  # DEBUG thisD.57611 => &__map_allocD.64912
  # DEBUG thisD.57590 => &__map_allocD.64912
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       4 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_49 = PHI <.MEM_120(4), .MEM_59(10)>
  # DEBUG D#448ptD.0 => &D#810ptD.0->_M_implD.43041
  # DEBUG thisD.64893 => D#448ptD.0
  # DEBUG thisD.64894 => D#448ptD.0
  # DEBUG thisD.64895 => D#448ptD.0
  # .MEM_65 = VDEF <.MEM_49>
  MEM[(struct  &)__first_133] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_29 = __first_133 + 80;
  # DEBUG __firstD.64874 => __first_29
  # DEBUG __firstD.64874 => __first_29
  if (_25 == __first_29)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 12, next block 35, flags: (NEW)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       35 [100.0%]  (FALLTHRU)

;;   basic block 35, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_65>
  pretmp_60 = MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 35, next block 15, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_131 = PHI <.MEM_65(35), .MEM_3(2)>
  # PT = nonlocal escaped 
  # prephitmp_61 = PHI <pretmp_60(35), __first_26(2)>
  # DEBUG D#464ptD.0 => &D#811ptD.0->D.41195
  # DEBUG thisD.64878 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#812ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_2(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#812ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.64881 => D#812ptD.0
  # DEBUG thisD.64879 => D#253ptD.0
  # DEBUG __nD.64880 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_61 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.64885 => D#812ptD.0
  # DEBUG __aD.64883 => D#248ptD.0
  # DEBUG __nD.64884 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.64888 => D#812ptD.0
  # DEBUG thisD.64886 => D#244ptD.0
  # DEBUG D.64887 => D#245ptD.0
  # .MEM_66 = VDEF <.MEM_131>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_61);
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       14 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_50 = PHI <.MEM_131(14), .MEM_66(15)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.64889 => D#255ptD.0
  # DEBUG thisD.64890 => D#255ptD.0
  # DEBUG thisD.64891 => D#255ptD.0
  # .MEM_71 = VDEF <.MEM_50>
  MEM[(struct  &)this_2(D) + 272] ={v} {CLOBBER};
  # DEBUG D#466ptD.0 => &this_2(D)->_round_trip_timeD.40448
  # DEBUG thisD.57783 => D#466ptD.0
  # DEBUG D#154ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#466ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#466ptD.0->D.40238
  # DEBUG thisD.57784 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_71>
  # PT = nonlocal escaped 
  _7 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _7
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.57787 => D#155ptD.0
  # DEBUG __pD.57786 => _7
  # DEBUG __nD.57785 => D#148ptD.0
  if (_7 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.57791 => _7
  # DEBUG __aD.57789 => D#144ptD.0
  # DEBUG __nD.57790 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.57794 => _7
  # DEBUG thisD.57792 => D#140ptD.0
  # DEBUG D.57793 => D#141ptD.0
  # .MEM_13 = VDEF <.MEM_71>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_7);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_6 = PHI <.MEM_71(16), .MEM_13(17)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.57795 => D#147ptD.0
  # DEBUG thisD.57796 => D#147ptD.0
  # DEBUG thisD.57797 => D#147ptD.0
  # .MEM_18 = VDEF <.MEM_6>
  MEM[(struct  &)this_2(D) + 248] ={v} {CLOBBER};
  # DEBUG D#465ptD.0 => &this_2(D)->_occupancy_limitD.40447
  # DEBUG thisD.57768 => D#465ptD.0
  # DEBUG D#154ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#465ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#465ptD.0->D.40238
  # DEBUG thisD.57769 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _11 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _11
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.57772 => D#155ptD.0
  # DEBUG __pD.57771 => _11
  # DEBUG __nD.57770 => D#148ptD.0
  if (_11 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.57776 => _11
  # DEBUG __aD.57774 => D#144ptD.0
  # DEBUG __nD.57775 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.57779 => _11
  # DEBUG thisD.57777 => D#140ptD.0
  # DEBUG D.57778 => D#141ptD.0
  # .MEM_19 = VDEF <.MEM_18>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_11);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_18(18), .MEM_19(19)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.57780 => D#147ptD.0
  # DEBUG thisD.57781 => D#147ptD.0
  # DEBUG thisD.57782 => D#147ptD.0
  # .MEM_24 = VDEF <.MEM_12>
  MEM[(struct  &)this_2(D) + 224] ={v} {CLOBBER};
  # DEBUG D#809ptD.0 => &this_2(D)->D.41247
  # DEBUG thisD.64919 => D#809ptD.0
  # .MEM_72 = VDEF <.MEM_24>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)].D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#224ptD.0 => &D#809ptD.0->_reserved_slotsD.40245
  # DEBUG thisD.64920 => D#224ptD.0
  # DEBUG D#154ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#224ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#224ptD.0->D.40238
  # DEBUG thisD.64921 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_72>
  # PT = nonlocal escaped 
  _38 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _38
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64924 => D#155ptD.0
  # DEBUG __pD.64923 => _38
  # DEBUG __nD.64922 => D#148ptD.0
  if (_38 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64928 => _38
  # DEBUG __aD.64926 => D#144ptD.0
  # DEBUG __nD.64927 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64931 => _38
  # DEBUG thisD.64929 => D#140ptD.0
  # DEBUG D.64930 => D#141ptD.0
  # .MEM_73 = VDEF <.MEM_72>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_38);
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_51 = PHI <.MEM_72(20), .MEM_73(21)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64932 => D#147ptD.0
  # DEBUG thisD.64933 => D#147ptD.0
  # DEBUG thisD.64934 => D#147ptD.0
  # .MEM_78 = VDEF <.MEM_51>
  MEM[(struct  &)this_2(D) + 192] ={v} {CLOBBER};
  # DEBUG D#223ptD.0 => &D#809ptD.0->_private_buf_occupancyD.40242
  # DEBUG thisD.64935 => D#223ptD.0
  # DEBUG D#154ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#223ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#223ptD.0->D.40238
  # DEBUG thisD.64936 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_78>
  # PT = nonlocal escaped 
  _39 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _39
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64939 => D#155ptD.0
  # DEBUG __pD.64938 => _39
  # DEBUG __nD.64937 => D#148ptD.0
  if (_39 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64943 => _39
  # DEBUG __aD.64941 => D#144ptD.0
  # DEBUG __nD.64942 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64946 => _39
  # DEBUG thisD.64944 => D#140ptD.0
  # DEBUG D.64945 => D#141ptD.0
  # .MEM_79 = VDEF <.MEM_78>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_39);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_52 = PHI <.MEM_78(22), .MEM_79(23)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64947 => D#147ptD.0
  # DEBUG thisD.64948 => D#147ptD.0
  # DEBUG thisD.64949 => D#147ptD.0
  # .MEM_84 = VDEF <.MEM_52>
  MEM[(struct  &)this_2(D) + 160] ={v} {CLOBBER};
  # DEBUG D#222ptD.0 => &D#809ptD.0->_private_buf_sizeD.40241
  # DEBUG thisD.64950 => D#222ptD.0
  # DEBUG D#154ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#222ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#222ptD.0->D.40238
  # DEBUG thisD.64951 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_84>
  # PT = nonlocal escaped 
  _40 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _40
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64954 => D#155ptD.0
  # DEBUG __pD.64953 => _40
  # DEBUG __nD.64952 => D#148ptD.0
  if (_40 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64958 => _40
  # DEBUG __aD.64956 => D#144ptD.0
  # DEBUG __nD.64957 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64961 => _40
  # DEBUG thisD.64959 => D#140ptD.0
  # DEBUG D.64960 => D#141ptD.0
  # .MEM_85 = VDEF <.MEM_84>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_84(24), .MEM_85(25)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64962 => D#147ptD.0
  # DEBUG thisD.64963 => D#147ptD.0
  # DEBUG thisD.64964 => D#147ptD.0
  # .MEM_90 = VDEF <.MEM_53>
  MEM[(struct  &)this_2(D) + 136] ={v} {CLOBBER};
  # DEBUG D#221ptD.0 => &D#809ptD.0->_private_buf_vc_mapD.40240
  # DEBUG thisD.64965 => D#221ptD.0
  # DEBUG D#154ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#221ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#221ptD.0->D.40238
  # DEBUG thisD.64966 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  _41 = MEM[(struct _Vector_baseD.39702 *)this_2(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _41
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.64969 => D#155ptD.0
  # DEBUG __pD.64968 => _41
  # DEBUG __nD.64967 => D#148ptD.0
  if (_41 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.64973 => _41
  # DEBUG __aD.64971 => D#144ptD.0
  # DEBUG __nD.64972 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.64976 => _41
  # DEBUG thisD.64974 => D#140ptD.0
  # DEBUG D.64975 => D#141ptD.0
  # .MEM_91 = VDEF <.MEM_90>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_41);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_54 = PHI <.MEM_90(26), .MEM_91(27)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.64977 => D#147ptD.0
  # DEBUG thisD.64978 => D#147ptD.0
  # DEBUG thisD.64979 => D#147ptD.0
  # .MEM_96 = VDEF <.MEM_54>
  MEM[(struct  &)this_2(D) + 112] ={v} {CLOBBER};
  # DEBUG D#220ptD.0 => &D#809ptD.0->D.40291
  # DEBUG thisD.64980 => D#220ptD.0
  # DEBUG D#808ptD.0 => &MEM[(struct BufferPolicyD.39592 *)this_2(D)].D.39647
  # DEBUG thisD.64981 => D#808ptD.0
  # .MEM_98 = VDEF <.MEM_96>
  MEM[(struct ModuleD.29620 *)this_2(D)]._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTV6ModuleD.30420 + 16B];
  # DEBUG D#219ptD.0 => &D#808ptD.0->_childrenD.30370
  # DEBUG thisD.64982 => D#219ptD.0
  # DEBUG D#213ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.54616 => D#213ptD.0
  # DEBUG D#216ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_finishD.29862
  # DEBUG D#215ptD.0 => D#219ptD.0->D.30368._M_implD.29859._M_startD.29861
  # DEBUG D#118ptD.0 => D#215ptD.0
  # DEBUG D#119ptD.0 => D#216ptD.0
  # DEBUG __firstD.54615 => D#118ptD.0
  # DEBUG __lastD.54614 => D#119ptD.0
  # DEBUG D.54613 => D#120ptD.0
  # DEBUG D#117ptD.0 => D#119ptD.0
  # DEBUG D#116ptD.0 => D#118ptD.0
  # DEBUG D#114ptD.0 => D#116ptD.0
  # DEBUG D#115ptD.0 => D#117ptD.0
  # DEBUG __firstD.54036 => D#114ptD.0
  # DEBUG __lastD.54035 => D#115ptD.0
  # DEBUG D#113ptD.0 => D#115ptD.0
  # DEBUG D#112ptD.0 => D#114ptD.0
  # DEBUG D#110ptD.0 => D#112ptD.0
  # DEBUG D#111ptD.0 => D#113ptD.0
  # DEBUG D.54025 => D#110ptD.0
  # DEBUG D.54024 => D#111ptD.0
  # DEBUG D#214ptD.0 => &D#219ptD.0->D.30368
  # DEBUG thisD.64983 => D#214ptD.0
  # DEBUG D#212ptD.0 => D#214ptD.0->_M_implD.29859._M_end_of_storageD.29863
  # DEBUG D#211ptD.0 => (long intD.12) D#212ptD.0
  # VUSE <.MEM_98>
  # PT = nonlocal escaped 
  _9 = MEM[(struct _Vector_baseD.29626 *)this_2(D) + 72B]._M_implD.29859._M_startD.29861;
  # DEBUG D#210ptD.0 => (long intD.12) _9
  # DEBUG D#209ptD.0 => D#211ptD.0 - D#210ptD.0
  # DEBUG D#208ptD.0 => D#209ptD.0 /[ex] 8
  # DEBUG D#205ptD.0 => D#214ptD.0
  # DEBUG D#206ptD.0 => (long unsigned intD.14) D#208ptD.0
  # DEBUG __pD.64986 => _9
  # DEBUG thisD.64984 => D#205ptD.0
  # DEBUG __nD.64985 => D#206ptD.0
  # DEBUG D#204ptD.0 => D#206ptD.0
  # DEBUG D#203ptD.0 => D#205ptD.0
  if (_9 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#202ptD.0 => &D#203ptD.0->_M_implD.29859
  # DEBUG D#200ptD.0 => D#202ptD.0
  # DEBUG D#201ptD.0 => D#204ptD.0
  # DEBUG __pD.64990 => _9
  # DEBUG __aD.64988 => D#200ptD.0
  # DEBUG __nD.64989 => D#201ptD.0
  # DEBUG D#199ptD.0 => D#201ptD.0
  # DEBUG D#198ptD.0 => D#200ptD.0
  # DEBUG D#196ptD.0 => D#198ptD.0
  # DEBUG D#197ptD.0 => D#199ptD.0
  # DEBUG __pD.64993 => _9
  # DEBUG thisD.64991 => D#196ptD.0
  # DEBUG D.64992 => D#197ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_9);
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_98(28), .MEM_99(29)>
  # DEBUG D#207ptD.0 => &D#214ptD.0->_M_implD.29859
  # DEBUG thisD.64994 => D#207ptD.0
  # DEBUG thisD.64995 => D#207ptD.0
  # DEBUG thisD.64996 => D#207ptD.0
  # .MEM_104 = VDEF <.MEM_55>
  MEM[(struct  &)this_2(D) + 72] ={v} {CLOBBER};
  # DEBUG D#218ptD.0 => &D#808ptD.0->_fullnameD.29623
  # DEBUG thisD.64997 => D#218ptD.0
  # DEBUG thisD.64998 => D#218ptD.0
  # DEBUG thisD.65007 => D#218ptD.0
  # VUSE <.MEM_104>
  # PT = nonlocal escaped 
  _43 = MEM[(charD.10 * *)this_2(D) + 40B];
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.65008 => D#218ptD.0
  # PT = nonlocal 
  _44 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 40B].D.11539._M_local_bufD.11541;
  if (_43 != _44)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 69, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#218ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.65000 => D#218ptD.0
  # DEBUG __sizeD.64999 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#218ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#218ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.65003 => _43
  # DEBUG __aD.65001 => D#183ptD.0
  # DEBUG __nD.65002 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.65006 => _43
  # DEBUG thisD.65004 => D#179ptD.0
  # DEBUG D.65005 => D#180ptD.0
  # .MEM_105 = VDEF <.MEM_104>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_43);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_56 = PHI <.MEM_104(30), .MEM_105(31)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#218ptD.0]._M_dataplusD.11519
  # DEBUG thisD.65009 => D#189ptD.0
  # DEBUG thisD.65010 => D#189ptD.0
  # DEBUG thisD.65011 => D#189ptD.0
  # .MEM_109 = VDEF <.MEM_56>
  MEM[(struct  &)this_2(D) + 40] ={v} {CLOBBER};
  # DEBUG D#217ptD.0 => &D#808ptD.0->_nameD.29622
  # DEBUG thisD.65012 => D#217ptD.0
  # DEBUG thisD.65013 => D#217ptD.0
  # DEBUG thisD.65022 => D#217ptD.0
  # VUSE <.MEM_109>
  # PT = nonlocal escaped 
  _45 = MEM[(charD.10 * *)this_2(D) + 8B];
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.65023 => D#217ptD.0
  # PT = nonlocal 
  _46 = &MEM[(const struct basic_stringD.2844 *)this_2(D) + 8B].D.11539._M_local_bufD.11541;
  if (_45 != _46)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 78, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#217ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.65015 => D#217ptD.0
  # DEBUG __sizeD.65014 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#217ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#217ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.65018 => _45
  # DEBUG __aD.65016 => D#183ptD.0
  # DEBUG __nD.65017 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.65021 => _45
  # DEBUG thisD.65019 => D#179ptD.0
  # DEBUG D.65020 => D#180ptD.0
  # .MEM_110 = VDEF <.MEM_109>
  # USE = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  # CLB = nonlocal { D.30420 D.40300 D.41257 } (nonlocal, escaped)
  _ZdlPvD.2766 (_45);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 33, next block 1, flags: (NEW, REACHABLE)
;;    pred:       32 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_109(32), .MEM_110(33)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#217ptD.0]._M_dataplusD.11519
  # DEBUG thisD.65024 => D#189ptD.0
  # DEBUG thisD.65025 => D#189ptD.0
  # DEBUG thisD.65026 => D#189ptD.0
  # .MEM_10 = VDEF <.MEM_57>
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # VUSE <.MEM_10>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual void BufferState::SharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState18SharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2141, decl_uid=40255, cgraph_uid=608, symbol_order=609)


Pass statistics:
----------------

virtual void BufferState::SharedBufferPolicy::SendingFlit(const Flit*) (struct SharedBufferPolicyD.39699 * const thisD.42712, const struct FlitD.33590 * const fD.42710)
Eh tree:
   2 cleanup land:{2,<L15>}
{
  size_typeD.11502 __dnewD.66019;
  intD.9 iD.42715;
  const intD.9 vcD.42714;
  const struct stringD.2845 D.42718;
  long unsigned intD.14 _8;
  intD.9 & _10;
  intD.9 _11;
  intD.9 _12;
  long unsigned intD.14 _15;
  intD.9 _16;
  intD.9 _17;
  intD.9 _19;
  intD.9 _20;
  intD.9 _21;
  intD.9 _23;
  intD.9 & _24;
  struct ModuleD.29620 * _26;
  charD.10 * const _29;
  boolD.2757 _33;
  long unsigned intD.14 _34;
  intD.9 _35;
  intD.9 _36;
  intD.9 * _39;
  intD.9 * _40;
  intD.9 * _41;
  intD.9 * _42;
  intD.9 * _43;
  long unsigned intD.14 _44;
  intD.9 & _45;
  intD.9 & _46;
  intD.9 & _47;
  charD.10 * const _48;
  intD.9 _59;
  intD.9 _60;
  intD.9 & _61;
  intD.9 * _65;
  charD.10 * _68;
  long unsigned intD.14 __dnew.49_69;
  long unsigned intD.14 __dnew.49_72;
  charD.10 * const _73;
  charD.10 * _74;
  intD.9 & _84;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  vc_7 = f_6(D)->vcD.33600;
  # DEBUG vcD.42714 => vc_7
  # RANGE ~[2147483648, 18446744071562067967]
  _8 = (long unsigned intD.14) vc_7;
  # DEBUG D#334ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _39 = MEM[(intD.9 * *)this_9(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.56323 => _8
  # DEBUG thisD.56324 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _34 = _8 * 4;
  # PT = nonlocal escaped 
  _24 = _39 + _34;
  # VUSE <.MEM_5(D)>
  _11 = *_24;
  if (_11 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _8
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _12 = _11 + -1;
  # .MEM_13 = VDEF <.MEM_5(D)>
  *_24 = _12;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &this_9(D)->_private_buf_vc_mapD.40240
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _40 = MEM[(intD.9 * *)this_9(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.56343 => _8
  # DEBUG thisD.56344 => D#43ptD.0
  # PT = nonlocal escaped 
  _46 = _40 + _34;
  # VUSE <.MEM_5(D)>
  i_14 = *_46;
  # DEBUG iD.42715 => i_14
  # RANGE ~[2147483648, 18446744071562067967]
  _15 = (long unsigned intD.14) i_14;
  # DEBUG D#337ptD.0 => &this_9(D)->_private_buf_occupancyD.40242
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _41 = MEM[(intD.9 * *)this_9(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.56339 => _15
  # DEBUG thisD.56340 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _44 = _15 * 4;
  # PT = nonlocal escaped 
  _45 = _41 + _44;
  # VUSE <.MEM_5(D)>
  _16 = *_45;
  _17 = _16 + 1;
  # .MEM_18 = VDEF <.MEM_5(D)>
  *_45 = _17;
  # DEBUG D#338ptD.0 => &this_9(D)->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _15
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &this_9(D)->_private_buf_sizeD.40241
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _42 = MEM[(intD.9 * *)this_9(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.56331 => _15
  # DEBUG thisD.56332 => D#43ptD.0
  # PT = nonlocal escaped 
  _10 = _42 + _44;
  # VUSE <.MEM_18>
  _19 = *_10;
  if (_17 > _19)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_70 = PHI <.MEM_18(4), .MEM_22(6)>
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_18>
  _20 = this_9(D)->_shared_buf_occupancyD.40244;
  _21 = _20 + 1;
  # .MEM_22 = VDEF <.MEM_18>
  this_9(D)->_shared_buf_occupancyD.40244 = _21;
  # VUSE <.MEM_22>
  _23 = this_9(D)->_shared_buf_sizeD.40243;
  if (_21 > _23)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.42717
  # DEBUG thisD.56346 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42717
  # DEBUG thisD.66000 => &D.42718
  # DEBUG __sD.66001 => "Shared buffer overflow."
  # DEBUG __aD.66002 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66012 => &D.42718
  # DEBUG D#296ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66015 => D#296ptD.0
  # DEBUG __datD.66014 => &D.42718.D.11539._M_local_bufD.11541
  # DEBUG __aD.66013 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_62 = VDEF <.MEM_22>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42718]._M_pD.11525 = &D.42718.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66011 => "Shared buffer overflow."
  # DEBUG thisD.66005 => &D.42718
  # DEBUG __begD.66004 => "Shared buffer overflow."
  # DEBUG __endD.66003 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66009 => &D.42718
  # DEBUG __begD.66008 => "Shared buffer overflow."
  # DEBUG __endD.66007 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66016 => &D.42718
  # DEBUG __begD.66017 => "Shared buffer overflow."
  # DEBUG __endD.66018 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.66042 => "Shared buffer overflow."
  # DEBUG __lastD.66041 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.66042
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66044 => "Shared buffer overflow."
  # DEBUG __lastD.66043 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_75 = VDEF <.MEM_62>
  __dnewD.66019 = 23;
  # .MEM_76 = VDEF <.MEM_75>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _68 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42718, &__dnewD.66019, 0);
  # DEBUG D#7ptD.0 => &D.42718
  # DEBUG __pD.66038 => _68
  # DEBUG thisD.66037 => D#7ptD.0
  # .MEM_77 = VDEF <.MEM_76>
  MEM[(charD.10 * *)&D.42718] = _68;
  # VUSE <.MEM_77>
  __dnew.49_69 = __dnewD.66019;
  # DEBUG D#8ptD.0 => &D.42718
  # DEBUG __capacityD.66040 => __dnew.49_69
  # DEBUG thisD.66039 => D#8ptD.0
  # .MEM_78 = VDEF <.MEM_77>
  MEM[(size_typeD.11502 *)&D.42718 + 16B] = __dnew.49_69;
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66022 => _68
  # DEBUG __k1D.66021 => "Shared buffer overflow."
  # DEBUG __k2D.66020 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.66025 => _68
  # DEBUG __sD.66024 => "Shared buffer overflow."
  # DEBUG __nD.66023 => 23
  # DEBUG __s1D.66028 => _68
  # DEBUG __s2D.66027 => "Shared buffer overflow."
  # DEBUG __nD.66026 => 23
  # .MEM_80 = VDEF <.MEM_78>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  memcpyD.992 (_68, "Shared buffer overflow.", 23);
  # VUSE <.MEM_80>
  __dnew.49_72 = __dnewD.66019;
  # DEBUG thisD.66032 => &D.42718
  # DEBUG __nD.66031 => __dnew.49_72
  # DEBUG D#9ptD.0 => &D.42718
  # DEBUG __lengthD.66034 => __dnew.49_72
  # DEBUG thisD.66033 => D#9ptD.0
  # .MEM_81 = VDEF <.MEM_80>
  MEM[(size_typeD.11502 *)&D.42718 + 8B] = __dnew.49_72;
  # VUSE <.MEM_81>
  # PT = nonlocal escaped null { D.42718 } (escaped)
  _73 = MEM[(charD.10 * *)&D.42718];
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42718 } (escaped)
  _74 = _73 + __dnew.49_72;
  # DEBUG __c1D.66036 => _74
  # DEBUG __c2D.66035 => D#10ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  MEM[(char_typeD.6629 &)_74] = 0;
  # .MEM_83 = VDEF <.MEM_82>
  __dnewD.66019 ={v} {CLOBBER};
  # PT = nonlocal 
  _26 = &this_9(D)->D.40291.D.39647;
  [LP 2] # .MEM_27 = VDEF <.MEM_83>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_26, &D.42718);
;;    succ:       17 (EH,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56349 => &D.42718
  # DEBUG thisD.56350 => &D.42718
  # DEBUG thisD.56359 => &D.42718
  # VUSE <.MEM_27>
  # PT = nonlocal escaped null { D.42718 } (escaped)
  _29 = MEM[(charD.10 * *)&D.42718];
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56360 => &D.42718
  if (&D.42718.D.11539._M_local_bufD.11541 != _29)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42718.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56352 => &D.42718
  # DEBUG __sizeD.56351 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42718
  # DEBUG D#185ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56355 => _29
  # DEBUG __aD.56353 => D#183ptD.0
  # DEBUG __nD.56354 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56358 => _29
  # DEBUG thisD.56356 => D#179ptD.0
  # DEBUG D.56357 => D#180ptD.0
  # .MEM_49 = VDEF <.MEM_27>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _ZdlPvD.2766 (_29);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_32 = PHI <.MEM_27(8), .MEM_49(9)>
  # DEBUG D#189ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG thisD.56361 => D#189ptD.0
  # DEBUG thisD.56362 => D#189ptD.0
  # DEBUG thisD.56363 => D#189ptD.0
  # .MEM_28 = VDEF <.MEM_32>
  D.42718 ={v} {CLOBBER};
  # DEBUG thisD.56347 => &D.42717
  # DEBUG thisD.56348 => &D.42717
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_13(3), .MEM_70(5), .MEM_28(10)>
  # VUSE <.MEM_1>
  _33 = f_6(D)->tailD.33603;
  if (_33 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_1(11), .MEM_1(13), .MEM_38(15)>
  # VUSE <.MEM_58>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _65 = MEM[(intD.9 * *)this_9(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.56365 => _8
  # DEBUG thisD.56366 => D#43ptD.0
  # PT = nonlocal escaped 
  _84 = _65 + _34;
  # VUSE <.MEM_1>
  _60 = *_84;
  if (_60 != 0)
    goto <bb 14>;
  else
    goto <bb 12>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_1(14), .MEM_38(16)>
  # _59 = PHI <_60(14), _35(16)>
  # PT = nonlocal escaped 
  # _61 = PHI <_84(14), _47(16)>
  # DEBUG D#341ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # DEBUG __nD.56365 => _8
  # DEBUG thisD.56366 => D#43ptD.0
  # DEBUG D#340ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _8
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _36 = _59 + -1;
  # .MEM_37 = VDEF <.MEM_71>
  *_61 = _36;
  # .MEM_38 = VDEF <.MEM_37>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (this_9(D), vc_7);
  # DEBUG D#341ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # VUSE <.MEM_38>
  # PT = nonlocal escaped 
  _43 = MEM[(intD.9 * *)this_9(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.56365 => _8
  # DEBUG thisD.56366 => D#43ptD.0
  # PT = nonlocal escaped 
  _47 = _43 + _34;
  # VUSE <.MEM_38>
  _35 = *_47;
  if (_35 != 0)
    goto <bb 16>;
  else
    goto <bb 12>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L15>: [LP 2]
  # DEBUG thisD.56372 => &D.42718
  # DEBUG thisD.56373 => &D.42718
  # DEBUG thisD.56382 => &D.42718
  # VUSE <.MEM_27>
  # PT = nonlocal escaped null { D.42718 } (escaped)
  _48 = MEM[(charD.10 * *)&D.42718];
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56383 => &D.42718
  if (&D.42718.D.11539._M_local_bufD.11541 != _48)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42718.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56375 => &D.42718
  # DEBUG __sizeD.56374 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42718
  # DEBUG D#185ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56378 => _48
  # DEBUG __aD.56376 => D#183ptD.0
  # DEBUG __nD.56377 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56381 => _48
  # DEBUG thisD.56379 => D#179ptD.0
  # DEBUG D.56380 => D#180ptD.0
  # .MEM_54 = VDEF <.MEM_27>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _ZdlPvD.2766 (_48);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_27(17), .MEM_54(18)>
  # DEBUG D#189ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG thisD.56384 => D#189ptD.0
  # DEBUG thisD.56385 => D#189ptD.0
  # DEBUG thisD.56386 => D#189ptD.0
  # .MEM_31 = VDEF <.MEM_30>
  D.42718 ={v} {CLOBBER};
  resx 2
;;    succ:      

}



Updating SSA:
Registering new PHI nodes in block #15
Updating SSA information for statement BufferState::SharedBufferPolicy::ProcessFreeSlot (this_9(D), vc_7);
Updating SSA information for statement _43 = MEM[(int * *)this_9(D) + 192B];
Updating SSA information for statement _35 = *_47;
Registering new PHI nodes in block #16
Registering new PHI nodes in block #20

DFA Statistics for virtual void BufferState::SharedBufferPolicy::SendingFlit(const Flit*)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            101        808b
DEF operands                             38        304b
VUSE operands                            41        328b
VDEF operands                            19        152b
PHI nodes                                 9        936b
PHI arguments                            19        912b
---------------------------------------------------------
Total memory used by DFA/SSA data                 3440b
---------------------------------------------------------

Average number of arguments per PHI node: 2.1 (max: 3)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_3 -> { .MEM_38 }
Incremental SSA update started at block: 15
Number of blocks in CFG: 21
Number of blocks to update: 3 ( 14%)
Affected blocks: 15 16 20


Creating dr for f_6(D)->vc
analyze_innermost: success.
	base_address: f_6(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *f_6(D)
	Access function 0: 32
Creating dr for MEM[(int * *)this_9(D) + 192B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_9(D) + 192B]
Creating dr for *_24
analyze_innermost: success.
	base_address: _39 + (long unsigned int) vc_7 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_24
Creating dr for *_24
analyze_innermost: success.
	base_address: _39 + (long unsigned int) vc_7 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_24
Creating dr for MEM[(int * *)this_9(D) + 112B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_9(D) + 112B]
Creating dr for *_46
analyze_innermost: success.
	base_address: _40 + (long unsigned int) vc_7 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_46
Creating dr for MEM[(int * *)this_9(D) + 160B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_9(D) + 160B]
Creating dr for *_45
analyze_innermost: success.
	base_address: _41 + (long unsigned int) i_14 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_45
Creating dr for *_45
analyze_innermost: success.
	base_address: _41 + (long unsigned int) i_14 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_45
Creating dr for MEM[(int * *)this_9(D) + 136B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_9(D) + 136B]
Creating dr for *_10
analyze_innermost: success.
	base_address: _42 + (long unsigned int) i_14 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_10
Creating dr for this_9(D)->_shared_buf_occupancy
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: *this_9(D)
	Access function 0: 1504
Creating dr for this_9(D)->_shared_buf_occupancy
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: *this_9(D)
	Access function 0: 1504
Creating dr for this_9(D)->_shared_buf_size
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: *this_9(D)
	Access function 0: 1472
Creating dr for MEM[(struct _Alloc_hider *)&D.42718]._M_p
analyze_innermost: success.
	base_address: &D.42718
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.42718]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.42718]
analyze_innermost: success.
	base_address: &D.42718
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.42718]
Creating dr for MEM[(char * *)&D.42718]
analyze_innermost: success.
	base_address: &D.42718
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.42718]
Creating dr for f_6(D)->tail
analyze_innermost: success.
	base_address: f_6(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_6(D)
	Access function 0: 104
Creating dr for MEM[(int * *)this_9(D) + 192B]
analyze_innermost: success.
	base_address: this_9(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_9(D) + 192B]
Creating dr for *_84
analyze_innermost: success.
	base_address: _65 + (long unsigned int) vc_7 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_84
Creating dr for *_61
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_61
Creating dr for *_61
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_61
Creating dr for *_61
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_61
Creating dr for *_61
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_61
Creating dr for *_61
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_61
Creating dr for *_61
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_61
Creating dr for *_61
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_61
Creating dr for *_61
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_61

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:23, LOOPS:1, CONDITIONS:9, STMTS:239)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # VUSE <.MEM_5(D)>
    vc_7 = f_6(D)->vc;
    # DEBUG vc => vc_7
    _8 = (long unsigned int) vc_7;
    # DEBUG D#334 => &this_9(D)->_reserved_slots
    # VUSE <.MEM_5(D)>
    _39 = MEM[(int * *)this_9(D) + 192B];
    # DEBUG D#43 => D#334
    # DEBUG __n => _8
    # DEBUG this => D#43
    _34 = _8 * 4;
    _24 = _39 + _34;
    # VUSE <.MEM_5(D)>
    _11 = *_24;
    if (_11 > 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_11 })
  {
    <bb 3>:
    # DEBUG D#335 => &this_9(D)->_reserved_slots
    # DEBUG D#43 => D#335
    # DEBUG __n => _8
    # DEBUG this => D#43
    _12 = _11 + -1;
    # .MEM_13 = VDEF <.MEM_5(D)>
    *_24 = _12;
    goto <bb 11>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_6 bb_5 })
  {
    <bb 4>:
    # DEBUG D#336 => &this_9(D)->_private_buf_vc_map
    # VUSE <.MEM_5(D)>
    _40 = MEM[(int * *)this_9(D) + 112B];
    # DEBUG D#43 => D#336
    # DEBUG __n => _8
    # DEBUG this => D#43
    _46 = _40 + _34;
    # VUSE <.MEM_5(D)>
    i_14 = *_46;
    # DEBUG i => i_14
    _15 = (long unsigned int) i_14;
    # DEBUG D#337 => &this_9(D)->_private_buf_occupancy
    # VUSE <.MEM_5(D)>
    _41 = MEM[(int * *)this_9(D) + 160B];
    # DEBUG D#43 => D#337
    # DEBUG __n => _15
    # DEBUG this => D#43
    _44 = _15 * 4;
    _45 = _41 + _44;
    # VUSE <.MEM_5(D)>
    _16 = *_45;
    _17 = _16 + 1;
    # .MEM_18 = VDEF <.MEM_5(D)>
    *_45 = _17;
    # DEBUG D#338 => &this_9(D)->_private_buf_occupancy
    # DEBUG D#43 => D#338
    # DEBUG __n => _15
    # DEBUG this => D#43
    # DEBUG D#339 => &this_9(D)->_private_buf_size
    # VUSE <.MEM_18>
    _42 = MEM[(int * *)this_9(D) + 136B];
    # DEBUG D#43 => D#339
    # DEBUG __n => _15
    # DEBUG this => D#43
    _10 = _42 + _44;
    # VUSE <.MEM_18>
    _19 = *_10;
    if (_17 > _19)
      goto <bb 6>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 bb_6 }, succs = {bb_21 })
  {
    <bb 5>:
    # .MEM_70 = PHI <.MEM_18(4), .MEM_22(6)>

  }
  bb_21 (preds = {bb_5 }, succs = {bb_11 })
  {
    <bb 21>:
    goto <bb 11>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_5 })
  {
    <bb 6>:
    # VUSE <.MEM_18>
    _20 = this_9(D)->_shared_buf_occupancy;
    _21 = _20 + 1;
    # .MEM_22 = VDEF <.MEM_18>
    this_9(D)->_shared_buf_occupancy = _21;
    # VUSE <.MEM_22>
    _23 = this_9(D)->_shared_buf_size;
    if (_21 > _23)
      goto <bb 7>;
    else
      goto <bb 5>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_17 bb_8 })
  {
    <bb 7>:
    # DEBUG D#63 => &D.42717
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG D#299 => &D.42717
    # DEBUG this => &D.42718
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.42718
    # DEBUG D#296 => &D.42718._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.42718.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_62 = VDEF <.MEM_22>
    MEM[(struct _Alloc_hider *)&D.42718]._M_p = &D.42718.D.11539._M_local_buf;
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG this => &D.42718
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.42718
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.42718
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __ptr => "Shared buffer overflow."
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # .MEM_75 = VDEF <.MEM_62>
    __dnew = 23;
    # .MEM_76 = VDEF <.MEM_75>
    _68 = std::__cxx11::basic_string<char>::_M_create (&D.42718, &__dnew, 0);
    # DEBUG D#7 => &D.42718
    # DEBUG __p => _68
    # DEBUG this => D#7
    # .MEM_77 = VDEF <.MEM_76>
    MEM[(char * *)&D.42718] = _68;
    # VUSE <.MEM_77>
    __dnew.49_69 = __dnew;
    # DEBUG D#8 => &D.42718
    # DEBUG __capacity => __dnew.49_69
    # DEBUG this => D#8
    # .MEM_78 = VDEF <.MEM_77>
    MEM[(size_type *)&D.42718 + 16B] = __dnew.49_69;
    # DEBUG D#1 => &D.42718
    # DEBUG this => D#1
    # DEBUG __p => _68
    # DEBUG __k1 => "Shared buffer overflow."
    # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __d => _68
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __n => 23
    # DEBUG __s1 => _68
    # DEBUG __s2 => "Shared buffer overflow."
    # DEBUG __n => 23
    # .MEM_80 = VDEF <.MEM_78>
    __builtin_memcpy (_68, "Shared buffer overflow.", 23);
    # VUSE <.MEM_80>
    __dnew.49_72 = __dnew;
    # DEBUG this => &D.42718
    # DEBUG __n => __dnew.49_72
    # DEBUG D#9 => &D.42718
    # DEBUG __length => __dnew.49_72
    # DEBUG this => D#9
    # .MEM_81 = VDEF <.MEM_80>
    MEM[(size_type *)&D.42718 + 8B] = __dnew.49_72;
    # VUSE <.MEM_81>
    _73 = MEM[(char * *)&D.42718];
    # DEBUG D#1 => &D.42718
    # DEBUG this => D#1
    _74 = _73 + __dnew.49_72;
    # DEBUG __c1 => _74
    # DEBUG __c2 => D#10
    # .MEM_82 = VDEF <.MEM_81>
    MEM[(char_type &)_74] = 0;
    # .MEM_83 = VDEF <.MEM_82>
    __dnew ={v} {CLOBBER};
    _26 = &this_9(D)->D.40291.D.39647;
    # .MEM_27 = VDEF <.MEM_83>
    Module::Error (_26, &D.42718);

  }
  bb_8 (preds = {bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # DEBUG this => &D.42718
    # DEBUG this => &D.42718
    # DEBUG this => &D.42718
    # VUSE <.MEM_27>
    _29 = MEM[(char * *)&D.42718];
    # DEBUG D#1 => &D.42718
    # DEBUG this => D#1
    # DEBUG this => &D.42718
    if (&D.42718.D.11539._M_local_buf != _29)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    # DEBUG D#188 => D.42718.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.42718
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.42718
    # DEBUG this => D#1
    # DEBUG this => &D.42718
    # DEBUG D#185 => &D.42718._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _29
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _29
    # DEBUG this => D#179
    # DEBUG D.56357 => D#180
    # .MEM_49 = VDEF <.MEM_27>
    operator delete (_29);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_32 = PHI <.MEM_27(8), .MEM_49(9)>
    # DEBUG D#189 => &D.42718._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_28 = VDEF <.MEM_32>
    D.42718 ={v} {CLOBBER};
    # DEBUG this => &D.42717
    # DEBUG this => &D.42717

  }
  bb_11 (preds = {bb_3 bb_21 bb_10 }, succs = {bb_13 bb_12 })
  {
    <bb 11>:
    # .MEM_1 = PHI <.MEM_13(3), .MEM_70(21), .MEM_28(10)>
    # VUSE <.MEM_1>
    _33 = f_6(D)->tail;
    if (_33 != 0)
      goto <bb 13>;
    else
      goto <bb 12>;

  }
  bb_12 (preds = {bb_11 bb_13 bb_20 }, succs = {bb_22 })
  {
    <bb 12>:
    # .MEM_58 = PHI <.MEM_1(11), .MEM_1(13), .MEM_3(20)>

  }
  bb_22 (preds = {bb_12 }, succs = {bb_1 })
  {
    <bb 22>:
    # VUSE <.MEM_58>
    return;

  }
  bb_13 (preds = {bb_11 }, succs = {bb_14 bb_12 })
  {
    <bb 13>:
    # DEBUG D#341 => &this_9(D)->_reserved_slots
    # VUSE <.MEM_1>
    _65 = MEM[(int * *)this_9(D) + 192B];
    # DEBUG D#43 => D#341
    # DEBUG __n => _8
    # DEBUG this => D#43
    _84 = _65 + _34;
    # VUSE <.MEM_1>
    _60 = *_84;
    if (_60 != 0)
      goto <bb 14>;
    else
      goto <bb 12>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 })
  {
    <bb 14>:

  }
  bb_20 (preds = {bb_15 }, succs = {bb_12 })
  {
    <bb 20>:
    # .MEM_3 = PHI <.MEM_38(15)>
    goto <bb 12>;

  }
  bb_17 (preds = {bb_7 }, succs = {bb_18 bb_19 })
  {
  <L15>:
    # DEBUG this => &D.42718
    # DEBUG this => &D.42718
    # DEBUG this => &D.42718
    # VUSE <.MEM_27>
    _48 = MEM[(char * *)&D.42718];
    # DEBUG D#1 => &D.42718
    # DEBUG this => D#1
    # DEBUG this => &D.42718
    if (&D.42718.D.11539._M_local_buf != _48)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#188 => D.42718.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.42718
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.42718
    # DEBUG this => D#1
    # DEBUG this => &D.42718
    # DEBUG D#185 => &D.42718._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _48
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _48
    # DEBUG this => D#179
    # DEBUG D.56380 => D#180
    # .MEM_54 = VDEF <.MEM_27>
    operator delete (_48);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {})
  {
    <bb 19>:
    # .MEM_30 = PHI <.MEM_27(17), .MEM_54(18)>
    # DEBUG D#189 => &D.42718._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_31 = VDEF <.MEM_30>
    D.42718 ={v} {CLOBBER};
    resx 2

  }
  loop_1 (header = 15, latch = 16, niter = )
  {
    bb_15 (preds = {bb_14 bb_16 }, succs = {bb_16 bb_20 })
    {
      <bb 15>:
      # .MEM_71 = PHI <.MEM_1(14), .MEM_38(16)>
      # _59 = PHI <_60(14), _35(16)>
      # _61 = PHI <_84(14), _47(16)>
      # DEBUG D#341 => &this_9(D)->_reserved_slots
      # DEBUG __n => _8
      # DEBUG this => D#43
      # DEBUG D#340 => &this_9(D)->_reserved_slots
      # DEBUG D#43 => D#340
      # DEBUG __n => _8
      # DEBUG this => D#43
      _36 = _59 + -1;
      # .MEM_37 = VDEF <.MEM_71>
      *_61 = _36;
      # .MEM_38 = VDEF <.MEM_37>
      BufferState::SharedBufferPolicy::ProcessFreeSlot (this_9(D), vc_7);
      # DEBUG D#341 => &this_9(D)->_reserved_slots
      # VUSE <.MEM_38>
      _43 = MEM[(int * *)this_9(D) + 192B];
      # DEBUG D#43 => D#341
      # DEBUG __n => _8
      # DEBUG this => D#43
      _47 = _43 + _34;
      # VUSE <.MEM_38>
      _35 = *_47;
      if (_35 != 0)
        goto <bb 16>;
      else
        goto <bb 20>;

    }
    bb_16 (preds = {bb_15 }, succs = {bb_15 })
    {
      <bb 16>:
      goto <bb 15>;

    }
  }
}

Pass statistics:
----------------

virtual void BufferState::SharedBufferPolicy::SendingFlit(const Flit*) (struct SharedBufferPolicyD.39699 * const thisD.42712, const struct FlitD.33590 * const fD.42710)
Eh tree:
   2 cleanup land:{2,<L15>}
{
  size_typeD.11502 __dnewD.66019;
  intD.9 iD.42715;
  const intD.9 vcD.42714;
  const struct stringD.2845 D.42718;
  long unsigned intD.14 _8;
  intD.9 & _10;
  intD.9 _11;
  intD.9 _12;
  long unsigned intD.14 _15;
  intD.9 _16;
  intD.9 _17;
  intD.9 _19;
  intD.9 _20;
  intD.9 _21;
  intD.9 _23;
  intD.9 & _24;
  struct ModuleD.29620 * _26;
  charD.10 * const _29;
  boolD.2757 _33;
  long unsigned intD.14 _34;
  intD.9 _35;
  intD.9 _36;
  intD.9 * _39;
  intD.9 * _40;
  intD.9 * _41;
  intD.9 * _42;
  intD.9 * _43;
  long unsigned intD.14 _44;
  intD.9 & _45;
  intD.9 & _46;
  intD.9 & _47;
  charD.10 * const _48;
  intD.9 _59;
  intD.9 _60;
  intD.9 & _61;
  intD.9 * _65;
  charD.10 * _68;
  long unsigned intD.14 __dnew.49_69;
  long unsigned intD.14 __dnew.49_72;
  charD.10 * const _73;
  charD.10 * _74;
  intD.9 & _84;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_5(D)>
  vc_7 = f_6(D)->vcD.33600;
  # DEBUG vcD.42714 => vc_7
  # RANGE ~[2147483648, 18446744071562067967]
  _8 = (long unsigned intD.14) vc_7;
  # DEBUG D#334ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _39 = MEM[(intD.9 * *)this_9(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.56323 => _8
  # DEBUG thisD.56324 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _34 = _8 * 4;
  # PT = nonlocal escaped 
  _24 = _39 + _34;
  # VUSE <.MEM_5(D)>
  _11 = *_24;
  if (_11 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _8
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _12 = _11 + -1;
  # .MEM_13 = VDEF <.MEM_5(D)>
  *_24 = _12;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &this_9(D)->_private_buf_vc_mapD.40240
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _40 = MEM[(intD.9 * *)this_9(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.56343 => _8
  # DEBUG thisD.56344 => D#43ptD.0
  # PT = nonlocal escaped 
  _46 = _40 + _34;
  # VUSE <.MEM_5(D)>
  i_14 = *_46;
  # DEBUG iD.42715 => i_14
  # RANGE ~[2147483648, 18446744071562067967]
  _15 = (long unsigned intD.14) i_14;
  # DEBUG D#337ptD.0 => &this_9(D)->_private_buf_occupancyD.40242
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _41 = MEM[(intD.9 * *)this_9(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.56339 => _15
  # DEBUG thisD.56340 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _44 = _15 * 4;
  # PT = nonlocal escaped 
  _45 = _41 + _44;
  # VUSE <.MEM_5(D)>
  _16 = *_45;
  _17 = _16 + 1;
  # .MEM_18 = VDEF <.MEM_5(D)>
  *_45 = _17;
  # DEBUG D#338ptD.0 => &this_9(D)->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _15
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &this_9(D)->_private_buf_sizeD.40241
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _42 = MEM[(intD.9 * *)this_9(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.56331 => _15
  # DEBUG thisD.56332 => D#43ptD.0
  # PT = nonlocal escaped 
  _10 = _42 + _44;
  # VUSE <.MEM_18>
  _19 = *_10;
  if (_17 > _19)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 21, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_70 = PHI <.MEM_18(4), .MEM_22(6)>
;;    succ:       21 [100.0%]  (FALLTHRU)

;;   basic block 21, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 21, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_18>
  _20 = this_9(D)->_shared_buf_occupancyD.40244;
  _21 = _20 + 1;
  # .MEM_22 = VDEF <.MEM_18>
  this_9(D)->_shared_buf_occupancyD.40244 = _21;
  # VUSE <.MEM_22>
  _23 = this_9(D)->_shared_buf_sizeD.40243;
  if (_21 > _23)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.42717
  # DEBUG thisD.56346 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42717
  # DEBUG thisD.66000 => &D.42718
  # DEBUG __sD.66001 => "Shared buffer overflow."
  # DEBUG __aD.66002 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66012 => &D.42718
  # DEBUG D#296ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66015 => D#296ptD.0
  # DEBUG __datD.66014 => &D.42718.D.11539._M_local_bufD.11541
  # DEBUG __aD.66013 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_62 = VDEF <.MEM_22>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42718]._M_pD.11525 = &D.42718.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66011 => "Shared buffer overflow."
  # DEBUG thisD.66005 => &D.42718
  # DEBUG __begD.66004 => "Shared buffer overflow."
  # DEBUG __endD.66003 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66009 => &D.42718
  # DEBUG __begD.66008 => "Shared buffer overflow."
  # DEBUG __endD.66007 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66016 => &D.42718
  # DEBUG __begD.66017 => "Shared buffer overflow."
  # DEBUG __endD.66018 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.66042 => "Shared buffer overflow."
  # DEBUG __lastD.66041 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.66042
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66044 => "Shared buffer overflow."
  # DEBUG __lastD.66043 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_75 = VDEF <.MEM_62>
  __dnewD.66019 = 23;
  # .MEM_76 = VDEF <.MEM_75>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _68 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42718, &__dnewD.66019, 0);
  # DEBUG D#7ptD.0 => &D.42718
  # DEBUG __pD.66038 => _68
  # DEBUG thisD.66037 => D#7ptD.0
  # .MEM_77 = VDEF <.MEM_76>
  MEM[(charD.10 * *)&D.42718] = _68;
  # VUSE <.MEM_77>
  __dnew.49_69 = __dnewD.66019;
  # DEBUG D#8ptD.0 => &D.42718
  # DEBUG __capacityD.66040 => __dnew.49_69
  # DEBUG thisD.66039 => D#8ptD.0
  # .MEM_78 = VDEF <.MEM_77>
  MEM[(size_typeD.11502 *)&D.42718 + 16B] = __dnew.49_69;
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66022 => _68
  # DEBUG __k1D.66021 => "Shared buffer overflow."
  # DEBUG __k2D.66020 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.66025 => _68
  # DEBUG __sD.66024 => "Shared buffer overflow."
  # DEBUG __nD.66023 => 23
  # DEBUG __s1D.66028 => _68
  # DEBUG __s2D.66027 => "Shared buffer overflow."
  # DEBUG __nD.66026 => 23
  # .MEM_80 = VDEF <.MEM_78>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  memcpyD.992 (_68, "Shared buffer overflow.", 23);
  # VUSE <.MEM_80>
  __dnew.49_72 = __dnewD.66019;
  # DEBUG thisD.66032 => &D.42718
  # DEBUG __nD.66031 => __dnew.49_72
  # DEBUG D#9ptD.0 => &D.42718
  # DEBUG __lengthD.66034 => __dnew.49_72
  # DEBUG thisD.66033 => D#9ptD.0
  # .MEM_81 = VDEF <.MEM_80>
  MEM[(size_typeD.11502 *)&D.42718 + 8B] = __dnew.49_72;
  # VUSE <.MEM_81>
  # PT = nonlocal escaped null { D.42718 } (escaped)
  _73 = MEM[(charD.10 * *)&D.42718];
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42718 } (escaped)
  _74 = _73 + __dnew.49_72;
  # DEBUG __c1D.66036 => _74
  # DEBUG __c2D.66035 => D#10ptD.0
  # .MEM_82 = VDEF <.MEM_81>
  MEM[(char_typeD.6629 &)_74] = 0;
  # .MEM_83 = VDEF <.MEM_82>
  __dnewD.66019 ={v} {CLOBBER};
  # PT = nonlocal 
  _26 = &this_9(D)->D.40291.D.39647;
  [LP 2] # .MEM_27 = VDEF <.MEM_83>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_26, &D.42718);
;;    succ:       17 (EH,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56349 => &D.42718
  # DEBUG thisD.56350 => &D.42718
  # DEBUG thisD.56359 => &D.42718
  # VUSE <.MEM_27>
  # PT = nonlocal escaped null { D.42718 } (escaped)
  _29 = MEM[(charD.10 * *)&D.42718];
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56360 => &D.42718
  if (&D.42718.D.11539._M_local_bufD.11541 != _29)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42718.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56352 => &D.42718
  # DEBUG __sizeD.56351 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42718
  # DEBUG D#185ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56355 => _29
  # DEBUG __aD.56353 => D#183ptD.0
  # DEBUG __nD.56354 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56358 => _29
  # DEBUG thisD.56356 => D#179ptD.0
  # DEBUG D.56357 => D#180ptD.0
  # .MEM_49 = VDEF <.MEM_27>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _ZdlPvD.2766 (_29);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_32 = PHI <.MEM_27(8), .MEM_49(9)>
  # DEBUG D#189ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG thisD.56361 => D#189ptD.0
  # DEBUG thisD.56362 => D#189ptD.0
  # DEBUG thisD.56363 => D#189ptD.0
  # .MEM_28 = VDEF <.MEM_32>
  D.42718 ={v} {CLOBBER};
  # DEBUG thisD.56347 => &D.42717
  # DEBUG thisD.56348 => &D.42717
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_13(3), .MEM_70(21), .MEM_28(10)>
  # VUSE <.MEM_1>
  _33 = f_6(D)->tailD.33603;
  if (_33 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 11, next block 22, flags: (NEW, REACHABLE)
;;    pred:       11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU)
  # .MEM_58 = PHI <.MEM_1(11), .MEM_1(13), .MEM_3(20)>
;;    succ:       22 [100.0%]  (FALLTHRU)

;;   basic block 22, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_58>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 14, flags: (NEW)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # VUSE <.MEM_1>
  # PT = nonlocal escaped 
  _65 = MEM[(intD.9 * *)this_9(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.56365 => _8
  # DEBUG thisD.56366 => D#43ptD.0
  # PT = nonlocal escaped 
  _84 = _65 + _34;
  # VUSE <.MEM_1>
  _60 = *_84;
  if (_60 != 0)
    goto <bb 14>;
  else
    goto <bb 12>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 20, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_1(14), .MEM_38(16)>
  # _59 = PHI <_60(14), _35(16)>
  # PT = nonlocal escaped 
  # _61 = PHI <_84(14), _47(16)>
  # DEBUG D#341ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # DEBUG __nD.56365 => _8
  # DEBUG thisD.56366 => D#43ptD.0
  # DEBUG D#340ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _8
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _36 = _59 + -1;
  # .MEM_37 = VDEF <.MEM_71>
  *_61 = _36;
  # .MEM_38 = VDEF <.MEM_37>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (this_9(D), vc_7);
  # DEBUG D#341ptD.0 => &this_9(D)->_reserved_slotsD.40245
  # VUSE <.MEM_38>
  # PT = nonlocal escaped 
  _43 = MEM[(intD.9 * *)this_9(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.56365 => _8
  # DEBUG thisD.56366 => D#43ptD.0
  # PT = nonlocal escaped 
  _47 = _43 + _34;
  # VUSE <.MEM_38>
  _35 = *_47;
  if (_35 != 0)
    goto <bb 16>;
  else
    goto <bb 20>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 16, flags: (NEW)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_38(15)>
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 20, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L15>: [LP 2]
  # DEBUG thisD.56372 => &D.42718
  # DEBUG thisD.56373 => &D.42718
  # DEBUG thisD.56382 => &D.42718
  # VUSE <.MEM_27>
  # PT = nonlocal escaped null { D.42718 } (escaped)
  _48 = MEM[(charD.10 * *)&D.42718];
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56383 => &D.42718
  if (&D.42718.D.11539._M_local_bufD.11541 != _48)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42718.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56375 => &D.42718
  # DEBUG __sizeD.56374 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42718
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42718
  # DEBUG D#185ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56378 => _48
  # DEBUG __aD.56376 => D#183ptD.0
  # DEBUG __nD.56377 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56381 => _48
  # DEBUG thisD.56379 => D#179ptD.0
  # DEBUG D.56380 => D#180ptD.0
  # .MEM_54 = VDEF <.MEM_27>
  # USE = nonlocal null { D.42718 D.66019 } (escaped)
  # CLB = nonlocal null { D.42718 D.66019 } (escaped)
  _ZdlPvD.2766 (_48);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 1, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_27(17), .MEM_54(18)>
  # DEBUG D#189ptD.0 => &D.42718._M_dataplusD.11519
  # DEBUG thisD.56384 => D#189ptD.0
  # DEBUG thisD.56385 => D#189ptD.0
  # DEBUG thisD.56386 => D#189ptD.0
  # .MEM_31 = VDEF <.MEM_30>
  D.42718 ={v} {CLOBBER};
  resx 2
;;    succ:      

}



;; Function virtual void BufferState::DynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState32DynamicLimitedSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2166, decl_uid=40367, cgraph_uid=633, symbol_order=634)


Pass statistics:
----------------

virtual void BufferState::DynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct DynamicLimitedSharedBufferPolicyD.40356 * const thisD.42828, const struct FlitD.33590 * const fD.42826)
Eh tree:
   2 cleanup land:{2,<L8>}
   1 cleanup land:{1,<L7>}
{
  size_typeD.11502 __dnewD.66346;
  size_typeD.11502 __dnewD.66301;
  intD.9 iD.66240;
  const intD.9 vcD.66235;
  const struct stringD.2845 D.66280;
  const struct stringD.2845 D.66231;
  intD.9 _9;
  intD.9 _10;
  struct SharedBufferPolicyD.39699 * _14;
  boolD.2757 _15;
  intD.9 _16;
  intD.9 _17;
  charD.10 * const _19;
  charD.10 * const _20;
  long unsigned intD.14 _21;
  intD.9 * _22;
  long unsigned intD.14 _23;
  intD.9 & _24;
  intD.9 _25;
  intD.9 _26;
  intD.9 * _27;
  intD.9 & _28;
  long unsigned intD.14 _30;
  intD.9 * _31;
  long unsigned intD.14 _32;
  intD.9 & _33;
  intD.9 _34;
  intD.9 _35;
  intD.9 * _36;
  intD.9 & _37;
  intD.9 _38;
  intD.9 _39;
  intD.9 _40;
  intD.9 _41;
  charD.10 * const _43;
  boolD.2757 _44;
  intD.9 * _45;
  intD.9 & _46;
  intD.9 _47;
  intD.9 _48;
  charD.10 * const _49;
  intD.9 * _56;
  intD.9 & _57;
  intD.9 _59;
  charD.10 * _60;
  long unsigned intD.14 __dnew.49_61;
  long unsigned intD.14 __dnew.49_64;
  charD.10 * const _65;
  charD.10 * _66;
  intD.9 _73;
  intD.9 & _74;
  charD.10 * _77;
  long unsigned intD.14 __dnew.49_78;
  intD.9 pretmp_79;
  long unsigned intD.14 __dnew.49_81;
  charD.10 * const _82;
  charD.10 * _83;
  intD.9 pretmp_123;
  intD.9 pretmp_130;
  intD.9 prephitmp_131;
  intD.9 pretmp_132;
  intD.9 prephitmp_133;
  const boolD.2757 pretmp_137;
  const boolD.2757 prephitmp_138;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#885ptD.0 => &this_2(D)->D.40391
  # DEBUG thisD.66196 => D#885ptD.0
  # DEBUG fD.66197 => f_5(D)
  # PT = nonlocal 
  _14 = &MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_2(D)].D.40349;
  # DEBUG thisD.66233 => _14
  # DEBUG fD.66234 => f_5(D)
  # VUSE <.MEM_4(D)>
  vc_6 = f_5(D)->vcD.33600;
  # DEBUG vcD.66235 => vc_6
  # RANGE ~[2147483648, 18446744071562067967]
  _21 = (long unsigned intD.14) vc_6;
  # DEBUG D#334ptD.0 => &_14->_reserved_slotsD.40245
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _22 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.66239 => _21
  # DEBUG thisD.66238 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _23 = _21 * 4;
  # PT = nonlocal escaped 
  _24 = _22 + _23;
  # VUSE <.MEM_4(D)>
  _25 = *_24;
  if (_25 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_14->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _21
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _26 = _25 + -1;
  # .MEM_89 = VDEF <.MEM_4(D)>
  *_24 = _26;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_14->_private_buf_vc_mapD.40240
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _27 = MEM[(intD.9 * *)this_2(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.66275 => _21
  # DEBUG thisD.66274 => D#43ptD.0
  # PT = nonlocal escaped 
  _28 = _27 + _23;
  # VUSE <.MEM_4(D)>
  i_29 = *_28;
  # DEBUG iD.66240 => i_29
  # RANGE ~[2147483648, 18446744071562067967]
  _30 = (long unsigned intD.14) i_29;
  # DEBUG D#337ptD.0 => &_14->_private_buf_occupancyD.40242
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _31 = MEM[(intD.9 * *)this_2(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.66277 => _30
  # DEBUG thisD.66276 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _32 = _30 * 4;
  # PT = nonlocal escaped 
  _33 = _31 + _32;
  # VUSE <.MEM_4(D)>
  _34 = *_33;
  _35 = _34 + 1;
  # .MEM_90 = VDEF <.MEM_4(D)>
  *_33 = _35;
  # DEBUG D#338ptD.0 => &_14->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _30
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_14->_private_buf_sizeD.40241
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  _36 = MEM[(intD.9 * *)this_2(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.66279 => _30
  # DEBUG thisD.66278 => D#43ptD.0
  # PT = nonlocal escaped 
  _37 = _36 + _32;
  # VUSE <.MEM_90>
  _38 = *_37;
  if (_35 > _38)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_136 = PHI <.MEM_90(4), .MEM_91(6)>
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_90>
  _39 = MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_occupancyD.40244;
  _40 = _39 + 1;
  # .MEM_91 = VDEF <.MEM_90>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_occupancyD.40244 = _40;
  # VUSE <.MEM_91>
  _41 = MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_sizeD.40243;
  if (_40 > _41)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66273 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66282 => &D.66280
  # DEBUG __sD.66283 => "Shared buffer overflow."
  # DEBUG __aD.66284 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66294 => &D.66280
  # DEBUG D#296ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66297 => D#296ptD.0
  # DEBUG __datD.66296 => &D.66280.D.11539._M_local_bufD.11541
  # DEBUG __aD.66295 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66280]._M_pD.11525 = &D.66280.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66293 => "Shared buffer overflow."
  # DEBUG thisD.66287 => &D.66280
  # DEBUG __begD.66286 => "Shared buffer overflow."
  # DEBUG __endD.66285 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66291 => &D.66280
  # DEBUG __begD.66290 => "Shared buffer overflow."
  # DEBUG __endD.66289 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66298 => &D.66280
  # DEBUG __begD.66299 => "Shared buffer overflow."
  # DEBUG __endD.66300 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.66324 => "Shared buffer overflow."
  # DEBUG __lastD.66323 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.66324
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66326 => "Shared buffer overflow."
  # DEBUG __lastD.66325 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_93 = VDEF <.MEM_92>
  __dnewD.66301 = 23;
  # .MEM_94 = VDEF <.MEM_93>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _60 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66280, &__dnewD.66301, 0);
  # DEBUG D#7ptD.0 => &D.66280
  # DEBUG __pD.66320 => _60
  # DEBUG thisD.66319 => D#7ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  MEM[(charD.10 * *)&D.66280] = _60;
  # VUSE <.MEM_95>
  __dnew.49_61 = __dnewD.66301;
  # DEBUG D#8ptD.0 => &D.66280
  # DEBUG __capacityD.66322 => __dnew.49_61
  # DEBUG thisD.66321 => D#8ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  MEM[(size_typeD.11502 *)&D.66280 + 16B] = __dnew.49_61;
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66304 => _60
  # DEBUG __k1D.66303 => "Shared buffer overflow."
  # DEBUG __k2D.66302 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.66307 => _60
  # DEBUG __sD.66306 => "Shared buffer overflow."
  # DEBUG __nD.66305 => 23
  # DEBUG __s1D.66310 => _60
  # DEBUG __s2D.66309 => "Shared buffer overflow."
  # DEBUG __nD.66308 => 23
  # .MEM_98 = VDEF <.MEM_96>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  memcpyD.992 (_60, "Shared buffer overflow.", 23);
  # VUSE <.MEM_98>
  __dnew.49_64 = __dnewD.66301;
  # DEBUG thisD.66314 => &D.66280
  # DEBUG __nD.66313 => __dnew.49_64
  # DEBUG D#9ptD.0 => &D.66280
  # DEBUG __lengthD.66316 => __dnew.49_64
  # DEBUG thisD.66315 => D#9ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  MEM[(size_typeD.11502 *)&D.66280 + 8B] = __dnew.49_64;
  # VUSE <.MEM_99>
  # PT = nonlocal escaped null { D.66280 } (escaped)
  _65 = MEM[(charD.10 * *)&D.66280];
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66280 } (escaped)
  _66 = _65 + __dnew.49_64;
  # DEBUG __c1D.66318 => _66
  # DEBUG __c2D.66317 => D#10ptD.0
  # .MEM_100 = VDEF <.MEM_99>
  MEM[(char_typeD.6629 &)_66] = 0;
  # .MEM_101 = VDEF <.MEM_100>
  __dnewD.66301 ={v} {CLOBBER};
  [LP 2] # .MEM_102 = VDEF <.MEM_101>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_14, &D.66280);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66257 => &D.66280
  # DEBUG thisD.66258 => &D.66280
  # DEBUG thisD.66267 => &D.66280
  # VUSE <.MEM_102>
  # PT = nonlocal escaped null { D.66280 } (escaped)
  _43 = MEM[(charD.10 * *)&D.66280];
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66268 => &D.66280
  if (&D.66280.D.11539._M_local_bufD.11541 != _43)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66280.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66260 => &D.66280
  # DEBUG __sizeD.66259 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66280
  # DEBUG D#185ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66263 => _43
  # DEBUG __aD.66261 => D#183ptD.0
  # DEBUG __nD.66262 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66266 => _43
  # DEBUG thisD.66264 => D#179ptD.0
  # DEBUG D.66265 => D#180ptD.0
  # .MEM_103 = VDEF <.MEM_102>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZdlPvD.2766 (_43);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_102(8), .MEM_103(9)>
  # DEBUG D#189ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG thisD.66269 => D#189ptD.0
  # DEBUG thisD.66270 => D#189ptD.0
  # DEBUG thisD.66271 => D#189ptD.0
  # .MEM_108 = VDEF <.MEM_55>
  D.66280 ={v} {CLOBBER};
  # DEBUG thisD.66272 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_54 = PHI <.MEM_89(3), .MEM_136(5), .MEM_108(10)>
  # VUSE <.MEM_54>
  _44 = f_5(D)->tailD.33603;
  if (_44 != 0)
    goto <bb 12>;
  else
    goto <bb 29>;
;;    succ:       12 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_14->_reserved_slotsD.40245
  # VUSE <.MEM_54>
  # PT = nonlocal escaped 
  _56 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66237 => _21
  # DEBUG thisD.66236 => D#43ptD.0
  # PT = nonlocal escaped 
  _57 = _56 + _23;
  # VUSE <.MEM_54>
  _73 = *_57;
  if (_73 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_54(12), .MEM_116(20)>
  # VUSE <.MEM_97>
  _16 = MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_2(D)]._active_vcsD.40305;
  _17 = _16 + -1;
  # .MEM_117 = VDEF <.MEM_97>
  MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_2(D)]._active_vcsD.40305 = _17;
  if (_17 < 0)
    goto <bb 22>;
  else
    goto <bb 32>;
;;    succ:       22 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _74 = PHI <_57(14), _46(16)>
  # _59 = PHI <_73(14), _47(16)>
  # .MEM_75 = PHI <.MEM_54(14), .MEM_116(16)>
  # DEBUG D#341ptD.0 => &_14->_reserved_slotsD.40245
  # DEBUG __nD.66237 => _21
  # DEBUG thisD.66236 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_14->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _21
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _48 = _59 + -1;
  # .MEM_115 = VDEF <.MEM_75>
  *_74 = _48;
  # .MEM_116 = VDEF <.MEM_115>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_14, vc_6);
  # DEBUG D#341ptD.0 => &_14->_reserved_slotsD.40245
  # VUSE <.MEM_116>
  # PT = nonlocal escaped 
  _45 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66237 => _21
  # DEBUG thisD.66236 => D#43ptD.0
  # PT = nonlocal escaped 
  _46 = _45 + _23;
  # VUSE <.MEM_116>
  _47 = *_46;
  if (_47 != 0)
    goto <bb 16>;
  else
    goto <bb 20>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L8>: [LP 2]
  # DEBUG thisD.66242 => &D.66280
  # DEBUG thisD.66243 => &D.66280
  # DEBUG thisD.66252 => &D.66280
  # VUSE <.MEM_102>
  # PT = nonlocal escaped null { D.66280 } (escaped)
  _49 = MEM[(charD.10 * *)&D.66280];
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66253 => &D.66280
  if (&D.66280.D.11539._M_local_bufD.11541 != _49)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66280.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66245 => &D.66280
  # DEBUG __sizeD.66244 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66280
  # DEBUG D#185ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66248 => _49
  # DEBUG __aD.66246 => D#183ptD.0
  # DEBUG __nD.66247 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66251 => _49
  # DEBUG thisD.66249 => D#179ptD.0
  # DEBUG D.66250 => D#180ptD.0
  # .MEM_109 = VDEF <.MEM_102>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZdlPvD.2766 (_49);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_102(17), .MEM_109(18)>
  # DEBUG D#189ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG thisD.66254 => D#189ptD.0
  # DEBUG thisD.66255 => D#189ptD.0
  # DEBUG thisD.66256 => D#189ptD.0
  # .MEM_114 = VDEF <.MEM_53>
  D.66280 ={v} {CLOBBER};
  resx 2
;;    succ:      

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_116>
  _15 = f_5(D)->tailD.33603;
  if (_15 != 0)
    goto <bb 13>;
  else
    goto <bb 21>;
;;    succ:       13 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_116>
  pretmp_130 = this_2(D)->D.40391._max_held_slotsD.40306;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       13 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66230 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66327 => &D.66231
  # DEBUG __sD.66328 => "Number of active VCs fell below zero."
  # DEBUG __aD.66329 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66339 => &D.66231
  # DEBUG D#296ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66342 => D#296ptD.0
  # DEBUG __datD.66341 => &D.66231.D.11539._M_local_bufD.11541
  # DEBUG __aD.66340 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_118 = VDEF <.MEM_117>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66231]._M_pD.11525 = &D.66231.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66338 => "Number of active VCs fell below zero."
  # DEBUG thisD.66332 => &D.66231
  # DEBUG __begD.66331 => "Number of active VCs fell below zero."
  # DEBUG __endD.66330 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66336 => &D.66231
  # DEBUG __begD.66335 => "Number of active VCs fell below zero."
  # DEBUG __endD.66334 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66343 => &D.66231
  # DEBUG __begD.66344 => "Number of active VCs fell below zero."
  # DEBUG __endD.66345 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptrD.55982 => "Number of active VCs fell below zero."
  # DEBUG __firstD.66369 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66368 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316ptD.0 => &__firstD.66369
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66371 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66370 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # .MEM_119 = VDEF <.MEM_118>
  __dnewD.66346 = 37;
  # .MEM_120 = VDEF <.MEM_119>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _77 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66231, &__dnewD.66346, 0);
  # DEBUG D#7ptD.0 => &D.66231
  # DEBUG __pD.66365 => _77
  # DEBUG thisD.66364 => D#7ptD.0
  # .MEM_121 = VDEF <.MEM_120>
  MEM[(charD.10 * *)&D.66231] = _77;
  # VUSE <.MEM_121>
  __dnew.49_78 = __dnewD.66346;
  # DEBUG D#8ptD.0 => &D.66231
  # DEBUG __capacityD.66367 => __dnew.49_78
  # DEBUG thisD.66366 => D#8ptD.0
  # .MEM_122 = VDEF <.MEM_121>
  MEM[(size_typeD.11502 *)&D.66231 + 16B] = __dnew.49_78;
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66349 => _77
  # DEBUG __k1D.66348 => "Number of active VCs fell below zero."
  # DEBUG __k2D.66347 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __dD.66352 => _77
  # DEBUG __sD.66351 => "Number of active VCs fell below zero."
  # DEBUG __nD.66350 => 37
  # DEBUG __s1D.66355 => _77
  # DEBUG __s2D.66354 => "Number of active VCs fell below zero."
  # DEBUG __nD.66353 => 37
  # .MEM_124 = VDEF <.MEM_122>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  memcpyD.992 (_77, "Number of active VCs fell below zero.", 37);
  # VUSE <.MEM_124>
  __dnew.49_81 = __dnewD.66346;
  # DEBUG thisD.66359 => &D.66231
  # DEBUG __nD.66358 => __dnew.49_81
  # DEBUG D#9ptD.0 => &D.66231
  # DEBUG __lengthD.66361 => __dnew.49_81
  # DEBUG thisD.66360 => D#9ptD.0
  # .MEM_125 = VDEF <.MEM_124>
  MEM[(size_typeD.11502 *)&D.66231 + 8B] = __dnew.49_81;
  # VUSE <.MEM_125>
  # PT = nonlocal escaped null { D.66231 } (escaped)
  _82 = MEM[(charD.10 * *)&D.66231];
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66231 } (escaped)
  _83 = _82 + __dnew.49_81;
  # DEBUG __c1D.66363 => _83
  # DEBUG __c2D.66362 => D#10ptD.0
  # .MEM_126 = VDEF <.MEM_125>
  MEM[(char_typeD.6629 &)_83] = 0;
  # .MEM_127 = VDEF <.MEM_126>
  __dnewD.66346 ={v} {CLOBBER};
  [LP 1] # .MEM_128 = VDEF <.MEM_127>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_14, &D.66231);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66214 => &D.66231
  # DEBUG thisD.66215 => &D.66231
  # DEBUG thisD.66224 => &D.66231
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null { D.66231 } (escaped)
  _19 = MEM[(charD.10 * *)&D.66231];
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66225 => &D.66231
  if (&D.66231.D.11539._M_local_bufD.11541 != _19)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 120, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66231.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66217 => &D.66231
  # DEBUG __sizeD.66216 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66231
  # DEBUG D#185ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66220 => _19
  # DEBUG __aD.66218 => D#183ptD.0
  # DEBUG __nD.66219 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66223 => _19
  # DEBUG thisD.66221 => D#179ptD.0
  # DEBUG D.66222 => D#180ptD.0
  # .MEM_129 = VDEF <.MEM_128>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_86 = PHI <.MEM_128(23), .MEM_129(24)>
  # DEBUG D#189ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG thisD.66226 => D#189ptD.0
  # DEBUG thisD.66227 => D#189ptD.0
  # DEBUG thisD.66228 => D#189ptD.0
  # .MEM_134 = VDEF <.MEM_86>
  D.66231 ={v} {CLOBBER};
  # DEBUG thisD.66229 => NULL
  # DEBUG thisD.56392 => NULL
  # VUSE <.MEM_134>
  pretmp_137 = f_5(D)->tailD.33603;
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       22 (EH,EXECUTABLE)
<L7>: [LP 1]
  # DEBUG thisD.66199 => &D.66231
  # DEBUG thisD.66200 => &D.66231
  # DEBUG thisD.66209 => &D.66231
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null { D.66231 } (escaped)
  _20 = MEM[(charD.10 * *)&D.66231];
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66210 => &D.66231
  if (&D.66231.D.11539._M_local_bufD.11541 != _20)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66231.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66202 => &D.66231
  # DEBUG __sizeD.66201 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66231
  # DEBUG D#185ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66205 => _20
  # DEBUG __aD.66203 => D#183ptD.0
  # DEBUG __nD.66204 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66208 => _20
  # DEBUG thisD.66206 => D#179ptD.0
  # DEBUG D.66207 => D#180ptD.0
  # .MEM_135 = VDEF <.MEM_128>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZdlPvD.2766 (_20);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_128(26), .MEM_135(27)>
  # DEBUG D#189ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG thisD.66211 => D#189ptD.0
  # DEBUG thisD.66212 => D#189ptD.0
  # DEBUG thisD.66213 => D#189ptD.0
  # .MEM_140 = VDEF <.MEM_87>
  D.66231 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 29, loop depth 0, count 0, freq 747, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_88 = PHI <.MEM_134(25), .MEM_54(11)>
  # prephitmp_138 = PHI <pretmp_137(25), _44(11)>
  if (prephitmp_138 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;
;;    succ:       31 [1.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [98.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [98.7%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_88>
  pretmp_79 = this_2(D)->D.40391._max_held_slotsD.40306;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       29 [1.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_88>
  pretmp_132 = this_2(D)->D.40391._active_vcsD.40305;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_76 = PHI <.MEM_88(31), .MEM_117(13)>
  # prephitmp_133 = PHI <pretmp_132(31), _17(13)>
  if (prephitmp_133 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;
;;    succ:       34 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 369, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_76>
  pretmp_123 = this_2(D)->D.40391._max_held_slotsD.40306;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 369, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_76>
  _9 = this_2(D)->D.40391.D.40349._buf_sizeD.39701;
  _10 = _9 / prephitmp_133;
  # .MEM_11 = VDEF <.MEM_76>
  this_2(D)->D.40391._max_held_slotsD.40306 = _10;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_88(30), .MEM_76(33), .MEM_11(34), .MEM_116(21)>
  # prephitmp_131 = PHI <pretmp_79(30), pretmp_123(33), _10(34), pretmp_130(21)>
  if (prephitmp_131 <= 0)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#342ptD.0 => this_2(D)
  # DEBUG D#343ptD.0 => f_5(D)
  # DEBUG D#344ptD.0 => D#343ptD.0
  # DEBUG fD.66372 => D#344ptD.0
  # DEBUG D#345ptD.0 => D#342ptD.0
  # DEBUG thisD.66373 => D#345ptD.0
  # .MEM_141 = VDEF <.MEM_1>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  __assert_failD.24398 ("_max_held_slots > 0", "buffer_state.cpp", 330, &_ZZN11BufferState32DynamicLimitedSharedBufferPolicy11SendingFlitEPK4FlitE19__PRETTY_FUNCTION__D.42830);
;;    succ:      

;;   basic block 37, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 36, next block 1, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for f_5(D)->vc
analyze_innermost: success.
	base_address: f_5(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *f_5(D)
	Access function 0: 32
Creating dr for MEM[(int * *)this_2(D) + 192B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 192B]
Creating dr for *_24
analyze_innermost: success.
	base_address: _22 + (long unsigned int) vc_6 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_24
Creating dr for *_24
analyze_innermost: success.
	base_address: _22 + (long unsigned int) vc_6 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_24
Creating dr for MEM[(int * *)this_2(D) + 112B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 112B]
Creating dr for *_28
analyze_innermost: success.
	base_address: _27 + (long unsigned int) vc_6 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_28
Creating dr for MEM[(int * *)this_2(D) + 160B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 160B]
Creating dr for *_33
analyze_innermost: success.
	base_address: _31 + (long unsigned int) i_29 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_33
Creating dr for *_33
analyze_innermost: success.
	base_address: _31 + (long unsigned int) i_29 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_33
Creating dr for MEM[(int * *)this_2(D) + 136B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 136B]
Creating dr for *_37
analyze_innermost: success.
	base_address: _36 + (long unsigned int) i_29 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_37
Creating dr for MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_2(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_2(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_size
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_2(D)]
	Access function 0: 1472
Creating dr for MEM[(struct _Alloc_hider *)&D.66280]._M_p
analyze_innermost: success.
	base_address: &D.66280
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.66280]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.66280]
analyze_innermost: success.
	base_address: &D.66280
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66280]
Creating dr for MEM[(char * *)&D.66280]
analyze_innermost: success.
	base_address: &D.66280
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66280]
Creating dr for f_5(D)->tail
analyze_innermost: success.
	base_address: f_5(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_5(D)
	Access function 0: 104
Creating dr for MEM[(int * *)this_2(D) + 192B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 192B]
Creating dr for *_57
analyze_innermost: success.
	base_address: _56 + (long unsigned int) vc_6 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_57
Creating dr for *_74
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_74
Creating dr for *_74
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_74
Creating dr for *_74
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_74
Creating dr for *_74
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_74
Creating dr for *_74
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_74
Creating dr for *_74
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_74
Creating dr for *_74
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_74
Creating dr for *_74
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_74
Creating dr for f_5(D)->tail
analyze_innermost: success.
	base_address: f_5(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_5(D)
	Access function 0: 104
Creating dr for this_2(D)->D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 1792
	Access function 1: 0
Creating dr for MEM[(struct LimitedSharedBufferPolicy *)this_2(D)]._active_vcs
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: MEM[(struct LimitedSharedBufferPolicy *)this_2(D)]
	Access function 0: 1760
Creating dr for MEM[(struct LimitedSharedBufferPolicy *)this_2(D)]._active_vcs
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: MEM[(struct LimitedSharedBufferPolicy *)this_2(D)]
	Access function 0: 1760
Creating dr for MEM[(struct _Alloc_hider *)&D.66231]._M_p
analyze_innermost: success.
	base_address: &D.66231
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.66231]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.66231]
analyze_innermost: success.
	base_address: &D.66231
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66231]
Creating dr for MEM[(char * *)&D.66231]
analyze_innermost: success.
	base_address: &D.66231
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66231]
Creating dr for this_2(D)->D.40391.D.40349._buf_size
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 104
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 832
	Access function 1: 0
	Access function 2: 0
Creating dr for this_2(D)->D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 1792
	Access function 1: 0
Creating dr for this_2(D)->D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 1792
	Access function 1: 0
Creating dr for this_2(D)->D.40391._active_vcs
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 1760
	Access function 1: 0
Creating dr for this_2(D)->D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 1792
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:4, LOOPS:0, CONDITIONS:1, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:42, LOOPS:1, CONDITIONS:17, STMTS:419)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#885 => &this_2(D)->D.40391
    # DEBUG this => D#885
    # DEBUG f => f_5(D)
    _14 = &MEM[(struct LimitedSharedBufferPolicy *)this_2(D)].D.40349;
    # DEBUG this => _14
    # DEBUG f => f_5(D)
    # VUSE <.MEM_4(D)>
    vc_6 = f_5(D)->vc;
    # DEBUG vc => vc_6
    _21 = (long unsigned int) vc_6;
    # DEBUG D#334 => &_14->_reserved_slots
    # VUSE <.MEM_4(D)>
    _22 = MEM[(int * *)this_2(D) + 192B];
    # DEBUG D#43 => D#334
    # DEBUG __n => _21
    # DEBUG this => D#43
    _23 = _21 * 4;
    _24 = _22 + _23;
    # VUSE <.MEM_4(D)>
    _25 = *_24;
    if (_25 > 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_11 })
  {
    <bb 3>:
    # DEBUG D#335 => &_14->_reserved_slots
    # DEBUG D#43 => D#335
    # DEBUG __n => _21
    # DEBUG this => D#43
    _26 = _25 + -1;
    # .MEM_89 = VDEF <.MEM_4(D)>
    *_24 = _26;
    goto <bb 11>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_6 bb_5 })
  {
    <bb 4>:
    # DEBUG D#336 => &_14->_private_buf_vc_map
    # VUSE <.MEM_4(D)>
    _27 = MEM[(int * *)this_2(D) + 112B];
    # DEBUG D#43 => D#336
    # DEBUG __n => _21
    # DEBUG this => D#43
    _28 = _27 + _23;
    # VUSE <.MEM_4(D)>
    i_29 = *_28;
    # DEBUG i => i_29
    _30 = (long unsigned int) i_29;
    # DEBUG D#337 => &_14->_private_buf_occupancy
    # VUSE <.MEM_4(D)>
    _31 = MEM[(int * *)this_2(D) + 160B];
    # DEBUG D#43 => D#337
    # DEBUG __n => _30
    # DEBUG this => D#43
    _32 = _30 * 4;
    _33 = _31 + _32;
    # VUSE <.MEM_4(D)>
    _34 = *_33;
    _35 = _34 + 1;
    # .MEM_90 = VDEF <.MEM_4(D)>
    *_33 = _35;
    # DEBUG D#338 => &_14->_private_buf_occupancy
    # DEBUG D#43 => D#338
    # DEBUG __n => _30
    # DEBUG this => D#43
    # DEBUG D#339 => &_14->_private_buf_size
    # VUSE <.MEM_90>
    _36 = MEM[(int * *)this_2(D) + 136B];
    # DEBUG D#43 => D#339
    # DEBUG __n => _30
    # DEBUG this => D#43
    _37 = _36 + _32;
    # VUSE <.MEM_90>
    _38 = *_37;
    if (_35 > _38)
      goto <bb 6>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 bb_6 }, succs = {bb_39 })
  {
    <bb 5>:
    # .MEM_136 = PHI <.MEM_90(4), .MEM_91(6)>

  }
  bb_39 (preds = {bb_5 }, succs = {bb_11 })
  {
    <bb 39>:
    goto <bb 11>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_5 })
  {
    <bb 6>:
    # VUSE <.MEM_90>
    _39 = MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy;
    _40 = _39 + 1;
    # .MEM_91 = VDEF <.MEM_90>
    MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy = _40;
    # VUSE <.MEM_91>
    _41 = MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_size;
    if (_40 > _41)
      goto <bb 7>;
    else
      goto <bb 5>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 bb_17 })
  {
    <bb 7>:
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG this => &D.66280
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.66280
    # DEBUG D#296 => &D.66280._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.66280.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_92 = VDEF <.MEM_91>
    MEM[(struct _Alloc_hider *)&D.66280]._M_p = &D.66280.D.11539._M_local_buf;
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG this => &D.66280
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.66280
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.66280
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __ptr => "Shared buffer overflow."
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # .MEM_93 = VDEF <.MEM_92>
    __dnew = 23;
    # .MEM_94 = VDEF <.MEM_93>
    _60 = std::__cxx11::basic_string<char>::_M_create (&D.66280, &__dnew, 0);
    # DEBUG D#7 => &D.66280
    # DEBUG __p => _60
    # DEBUG this => D#7
    # .MEM_95 = VDEF <.MEM_94>
    MEM[(char * *)&D.66280] = _60;
    # VUSE <.MEM_95>
    __dnew.49_61 = __dnew;
    # DEBUG D#8 => &D.66280
    # DEBUG __capacity => __dnew.49_61
    # DEBUG this => D#8
    # .MEM_96 = VDEF <.MEM_95>
    MEM[(size_type *)&D.66280 + 16B] = __dnew.49_61;
    # DEBUG D#1 => &D.66280
    # DEBUG this => D#1
    # DEBUG __p => _60
    # DEBUG __k1 => "Shared buffer overflow."
    # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __d => _60
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __n => 23
    # DEBUG __s1 => _60
    # DEBUG __s2 => "Shared buffer overflow."
    # DEBUG __n => 23
    # .MEM_98 = VDEF <.MEM_96>
    __builtin_memcpy (_60, "Shared buffer overflow.", 23);
    # VUSE <.MEM_98>
    __dnew.49_64 = __dnew;
    # DEBUG this => &D.66280
    # DEBUG __n => __dnew.49_64
    # DEBUG D#9 => &D.66280
    # DEBUG __length => __dnew.49_64
    # DEBUG this => D#9
    # .MEM_99 = VDEF <.MEM_98>
    MEM[(size_type *)&D.66280 + 8B] = __dnew.49_64;
    # VUSE <.MEM_99>
    _65 = MEM[(char * *)&D.66280];
    # DEBUG D#1 => &D.66280
    # DEBUG this => D#1
    _66 = _65 + __dnew.49_64;
    # DEBUG __c1 => _66
    # DEBUG __c2 => D#10
    # .MEM_100 = VDEF <.MEM_99>
    MEM[(char_type &)_66] = 0;
    # .MEM_101 = VDEF <.MEM_100>
    __dnew ={v} {CLOBBER};
    # .MEM_102 = VDEF <.MEM_101>
    Module::Error (_14, &D.66280);

  }
  bb_8 (preds = {bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # DEBUG this => &D.66280
    # DEBUG this => &D.66280
    # DEBUG this => &D.66280
    # VUSE <.MEM_102>
    _43 = MEM[(char * *)&D.66280];
    # DEBUG D#1 => &D.66280
    # DEBUG this => D#1
    # DEBUG this => &D.66280
    if (&D.66280.D.11539._M_local_buf != _43)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    # DEBUG D#188 => D.66280.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66280
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66280
    # DEBUG this => D#1
    # DEBUG this => &D.66280
    # DEBUG D#185 => &D.66280._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _43
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _43
    # DEBUG this => D#179
    # DEBUG D.66265 => D#180
    # .MEM_103 = VDEF <.MEM_102>
    operator delete (_43);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_55 = PHI <.MEM_102(8), .MEM_103(9)>
    # DEBUG D#189 => &D.66280._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_108 = VDEF <.MEM_55>
    D.66280 ={v} {CLOBBER};
    # DEBUG this => NULL
    # DEBUG this => NULL

  }
  bb_11 (preds = {bb_3 bb_39 bb_10 }, succs = {bb_12 bb_29 })
  {
    <bb 11>:
    # .MEM_54 = PHI <.MEM_89(3), .MEM_136(39), .MEM_108(10)>
    # VUSE <.MEM_54>
    _44 = f_5(D)->tail;
    if (_44 != 0)
      goto <bb 12>;
    else
      goto <bb 29>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_14 bb_13 })
  {
    <bb 12>:
    # DEBUG D#341 => &_14->_reserved_slots
    # VUSE <.MEM_54>
    _56 = MEM[(int * *)this_2(D) + 192B];
    # DEBUG D#43 => D#341
    # DEBUG __n => _21
    # DEBUG this => D#43
    _57 = _56 + _23;
    # VUSE <.MEM_54>
    _73 = *_57;
    if (_73 != 0)
      goto <bb 14>;
    else
      goto <bb 13>;

  }
  bb_13 (preds = {bb_12 bb_38 }, succs = {bb_22 bb_32 })
  {
    <bb 13>:
    # .MEM_97 = PHI <.MEM_54(12), .MEM_116(38)>
    # VUSE <.MEM_97>
    _16 = MEM[(struct LimitedSharedBufferPolicy *)this_2(D)]._active_vcs;
    _17 = _16 + -1;
    # .MEM_117 = VDEF <.MEM_97>
    MEM[(struct LimitedSharedBufferPolicy *)this_2(D)]._active_vcs = _17;
    if (_17 < 0)
      goto <bb 22>;
    else
      goto <bb 32>;

  }
  bb_14 (preds = {bb_12 }, succs = {bb_15 })
  {
    <bb 14>:

  }
  bb_17 (preds = {bb_7 }, succs = {bb_18 bb_19 })
  {
  <L8>:
    # DEBUG this => &D.66280
    # DEBUG this => &D.66280
    # DEBUG this => &D.66280
    # VUSE <.MEM_102>
    _49 = MEM[(char * *)&D.66280];
    # DEBUG D#1 => &D.66280
    # DEBUG this => D#1
    # DEBUG this => &D.66280
    if (&D.66280.D.11539._M_local_buf != _49)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#188 => D.66280.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66280
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66280
    # DEBUG this => D#1
    # DEBUG this => &D.66280
    # DEBUG D#185 => &D.66280._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _49
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _49
    # DEBUG this => D#179
    # DEBUG D.66250 => D#180
    # .MEM_109 = VDEF <.MEM_102>
    operator delete (_49);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {})
  {
    <bb 19>:
    # .MEM_53 = PHI <.MEM_102(17), .MEM_109(18)>
    # DEBUG D#189 => &D.66280._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_114 = VDEF <.MEM_53>
    D.66280 ={v} {CLOBBER};
    resx 2

  }
  bb_20 (preds = {bb_15 }, succs = {bb_38 })
  {
    <bb 20>:

  }
  bb_38 (preds = {bb_20 }, succs = {bb_13 bb_21 })
  {
    <bb 38>:
    # VUSE <.MEM_116>
    _15 = f_5(D)->tail;
    if (_15 != 0)
      goto <bb 13>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_38 }, succs = {bb_41 })
  {
    <bb 21>:
    # VUSE <.MEM_116>
    pretmp_130 = this_2(D)->D.40391._max_held_slots;
    goto <bb 41>;

  }
  bb_22 (preds = {bb_13 }, succs = {bb_23 bb_26 })
  {
    <bb 22>:
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG this => &D.66231
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.66231
    # DEBUG D#296 => &D.66231._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.66231.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_118 = VDEF <.MEM_117>
    MEM[(struct _Alloc_hider *)&D.66231]._M_p = &D.66231.D.11539._M_local_buf;
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG this => &D.66231
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG this => &D.66231
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG this => &D.66231
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG __ptr => "Number of active VCs fell below zero."
    # DEBUG __first => "Number of active VCs fell below zero."
    # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Number of active VCs fell below zero."
    # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # .MEM_119 = VDEF <.MEM_118>
    __dnew = 37;
    # .MEM_120 = VDEF <.MEM_119>
    _77 = std::__cxx11::basic_string<char>::_M_create (&D.66231, &__dnew, 0);
    # DEBUG D#7 => &D.66231
    # DEBUG __p => _77
    # DEBUG this => D#7
    # .MEM_121 = VDEF <.MEM_120>
    MEM[(char * *)&D.66231] = _77;
    # VUSE <.MEM_121>
    __dnew.49_78 = __dnew;
    # DEBUG D#8 => &D.66231
    # DEBUG __capacity => __dnew.49_78
    # DEBUG this => D#8
    # .MEM_122 = VDEF <.MEM_121>
    MEM[(size_type *)&D.66231 + 16B] = __dnew.49_78;
    # DEBUG D#1 => &D.66231
    # DEBUG this => D#1
    # DEBUG __p => _77
    # DEBUG __k1 => "Number of active VCs fell below zero."
    # DEBUG __k2 => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG __d => _77
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG __n => 37
    # DEBUG __s1 => _77
    # DEBUG __s2 => "Number of active VCs fell below zero."
    # DEBUG __n => 37
    # .MEM_124 = VDEF <.MEM_122>
    __builtin_memcpy (_77, "Number of active VCs fell below zero.", 37);
    # VUSE <.MEM_124>
    __dnew.49_81 = __dnew;
    # DEBUG this => &D.66231
    # DEBUG __n => __dnew.49_81
    # DEBUG D#9 => &D.66231
    # DEBUG __length => __dnew.49_81
    # DEBUG this => D#9
    # .MEM_125 = VDEF <.MEM_124>
    MEM[(size_type *)&D.66231 + 8B] = __dnew.49_81;
    # VUSE <.MEM_125>
    _82 = MEM[(char * *)&D.66231];
    # DEBUG D#1 => &D.66231
    # DEBUG this => D#1
    _83 = _82 + __dnew.49_81;
    # DEBUG __c1 => _83
    # DEBUG __c2 => D#10
    # .MEM_126 = VDEF <.MEM_125>
    MEM[(char_type &)_83] = 0;
    # .MEM_127 = VDEF <.MEM_126>
    __dnew ={v} {CLOBBER};
    # .MEM_128 = VDEF <.MEM_127>
    Module::Error (_14, &D.66231);

  }
  bb_23 (preds = {bb_22 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # DEBUG this => &D.66231
    # DEBUG this => &D.66231
    # DEBUG this => &D.66231
    # VUSE <.MEM_128>
    _19 = MEM[(char * *)&D.66231];
    # DEBUG D#1 => &D.66231
    # DEBUG this => D#1
    # DEBUG this => &D.66231
    if (&D.66231.D.11539._M_local_buf != _19)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#188 => D.66231.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66231
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66231
    # DEBUG this => D#1
    # DEBUG this => &D.66231
    # DEBUG D#185 => &D.66231._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _19
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _19
    # DEBUG this => D#179
    # DEBUG D.66222 => D#180
    # .MEM_129 = VDEF <.MEM_128>
    operator delete (_19);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_29 })
  {
    <bb 25>:
    # .MEM_86 = PHI <.MEM_128(23), .MEM_129(24)>
    # DEBUG D#189 => &D.66231._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_134 = VDEF <.MEM_86>
    D.66231 ={v} {CLOBBER};
    # DEBUG this => NULL
    # DEBUG this => NULL
    # VUSE <.MEM_134>
    pretmp_137 = f_5(D)->tail;
    goto <bb 29>;

  }
  bb_26 (preds = {bb_22 }, succs = {bb_27 bb_28 })
  {
  <L7>:
    # DEBUG this => &D.66231
    # DEBUG this => &D.66231
    # DEBUG this => &D.66231
    # VUSE <.MEM_128>
    _20 = MEM[(char * *)&D.66231];
    # DEBUG D#1 => &D.66231
    # DEBUG this => D#1
    # DEBUG this => &D.66231
    if (&D.66231.D.11539._M_local_buf != _20)
      goto <bb 27>;
    else
      goto <bb 28>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_28 })
  {
    <bb 27>:
    # DEBUG D#188 => D.66231.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66231
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66231
    # DEBUG this => D#1
    # DEBUG this => &D.66231
    # DEBUG D#185 => &D.66231._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _20
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _20
    # DEBUG this => D#179
    # DEBUG D.66207 => D#180
    # .MEM_135 = VDEF <.MEM_128>
    operator delete (_20);

  }
  bb_28 (preds = {bb_26 bb_27 }, succs = {})
  {
    <bb 28>:
    # .MEM_87 = PHI <.MEM_128(26), .MEM_135(27)>
    # DEBUG D#189 => &D.66231._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_140 = VDEF <.MEM_87>
    D.66231 ={v} {CLOBBER};
    resx 1

  }
  bb_29 (preds = {bb_25 bb_11 }, succs = {bb_31 bb_30 })
  {
    <bb 29>:
    # .MEM_88 = PHI <.MEM_134(25), .MEM_54(11)>
    # prephitmp_138 = PHI <pretmp_137(25), _44(11)>
    if (prephitmp_138 != 0)
      goto <bb 31>;
    else
      goto <bb 30>;

  }
  bb_30 (preds = {bb_29 }, succs = {bb_41 })
  {
    <bb 30>:
    # VUSE <.MEM_88>
    pretmp_79 = this_2(D)->D.40391._max_held_slots;
    goto <bb 41>;

  }
  bb_31 (preds = {bb_29 }, succs = {bb_32 })
  {
    <bb 31>:
    # VUSE <.MEM_88>
    pretmp_132 = this_2(D)->D.40391._active_vcs;

  }
  bb_32 (preds = {bb_31 bb_13 }, succs = {bb_40 })
  {
    <bb 32>:
    # .MEM_76 = PHI <.MEM_88(31), .MEM_117(13)>
    # prephitmp_133 = PHI <pretmp_132(31), _17(13)>

  }
  bb_40 (preds = {bb_32 }, succs = {bb_34 bb_33 })
  {
    <bb 40>:
    if (prephitmp_133 != 0)
      goto <bb 34>;
    else
      goto <bb 33>;

  }
  bb_33 (preds = {bb_40 }, succs = {bb_35 })
  {
    <bb 33>:
    # VUSE <.MEM_76>
    pretmp_123 = this_2(D)->D.40391._max_held_slots;
    goto <bb 35>;

  }
  bb_34 (preds = {bb_40 }, succs = {bb_35 })
  {
    <bb 34>:
    # VUSE <.MEM_76>
    _9 = this_2(D)->D.40391.D.40349._buf_size;
    _10 = _9 / prephitmp_133;
    # .MEM_11 = VDEF <.MEM_76>
    this_2(D)->D.40391._max_held_slots = _10;

  }
  bb_35 (preds = {bb_34 bb_33 }, succs = {bb_41 })
  {
    <bb 35>:
    # .MEM_52 = PHI <.MEM_11(34), .MEM_76(33)>
    # prephitmp_18 = PHI <_10(34), pretmp_123(33)>

  }
  bb_41 (preds = {bb_35 bb_30 bb_21 }, succs = {bb_36 bb_37 })
  {
    <bb 41>:
    # .MEM_1 = PHI <.MEM_52(35), .MEM_88(30), .MEM_116(21)>
    # prephitmp_131 = PHI <prephitmp_18(35), pretmp_79(30), pretmp_130(21)>
    if (prephitmp_131 <= 0)
      goto <bb 36>;
    else
      goto <bb 37>;

  }
  bb_36 (preds = {bb_41 }, succs = {})
  {
    <bb 36>:
    # DEBUG D#342 => this_2(D)
    # DEBUG D#343 => f_5(D)
    # DEBUG D#344 => D#343
    # DEBUG f => D#344
    # DEBUG D#345 => D#342
    # DEBUG this => D#345
    # .MEM_141 = VDEF <.MEM_1>
    __assert_fail ("_max_held_slots > 0", "buffer_state.cpp", 330, &__PRETTY_FUNCTION__);

  }
  bb_37 (preds = {bb_41 }, succs = {bb_1 })
  {
    <bb 37>:
    # VUSE <.MEM_1>
    return;

  }
  loop_1 (header = 15, latch = 16, niter = )
  {
    bb_15 (preds = {bb_14 bb_16 }, succs = {bb_16 bb_20 })
    {
      <bb 15>:
      # _74 = PHI <_57(14), _46(16)>
      # _59 = PHI <_73(14), _47(16)>
      # .MEM_75 = PHI <.MEM_54(14), .MEM_116(16)>
      # DEBUG D#341 => &_14->_reserved_slots
      # DEBUG __n => _21
      # DEBUG this => D#43
      # DEBUG D#340 => &_14->_reserved_slots
      # DEBUG D#43 => D#340
      # DEBUG __n => _21
      # DEBUG this => D#43
      _48 = _59 + -1;
      # .MEM_115 = VDEF <.MEM_75>
      *_74 = _48;
      # .MEM_116 = VDEF <.MEM_115>
      BufferState::SharedBufferPolicy::ProcessFreeSlot (_14, vc_6);
      # DEBUG D#341 => &_14->_reserved_slots
      # VUSE <.MEM_116>
      _45 = MEM[(int * *)this_2(D) + 192B];
      # DEBUG D#43 => D#341
      # DEBUG __n => _21
      # DEBUG this => D#43
      _46 = _45 + _23;
      # VUSE <.MEM_116>
      _47 = *_46;
      if (_47 != 0)
        goto <bb 16>;
      else
        goto <bb 20>;

    }
    bb_16 (preds = {bb_15 }, succs = {bb_15 })
    {
      <bb 16>:
      goto <bb 15>;

    }
  }
}

Pass statistics:
----------------

virtual void BufferState::DynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct DynamicLimitedSharedBufferPolicyD.40356 * const thisD.42828, const struct FlitD.33590 * const fD.42826)
Eh tree:
   2 cleanup land:{2,<L8>}
   1 cleanup land:{1,<L7>}
{
  size_typeD.11502 __dnewD.66346;
  size_typeD.11502 __dnewD.66301;
  intD.9 iD.66240;
  const intD.9 vcD.66235;
  const struct stringD.2845 D.66280;
  const struct stringD.2845 D.66231;
  intD.9 _9;
  intD.9 _10;
  struct SharedBufferPolicyD.39699 * _14;
  boolD.2757 _15;
  intD.9 _16;
  intD.9 _17;
  intD.9 prephitmp_18;
  charD.10 * const _19;
  charD.10 * const _20;
  long unsigned intD.14 _21;
  intD.9 * _22;
  long unsigned intD.14 _23;
  intD.9 & _24;
  intD.9 _25;
  intD.9 _26;
  intD.9 * _27;
  intD.9 & _28;
  long unsigned intD.14 _30;
  intD.9 * _31;
  long unsigned intD.14 _32;
  intD.9 & _33;
  intD.9 _34;
  intD.9 _35;
  intD.9 * _36;
  intD.9 & _37;
  intD.9 _38;
  intD.9 _39;
  intD.9 _40;
  intD.9 _41;
  charD.10 * const _43;
  boolD.2757 _44;
  intD.9 * _45;
  intD.9 & _46;
  intD.9 _47;
  intD.9 _48;
  charD.10 * const _49;
  intD.9 * _56;
  intD.9 & _57;
  intD.9 _59;
  charD.10 * _60;
  long unsigned intD.14 __dnew.49_61;
  long unsigned intD.14 __dnew.49_64;
  charD.10 * const _65;
  charD.10 * _66;
  intD.9 _73;
  intD.9 & _74;
  charD.10 * _77;
  long unsigned intD.14 __dnew.49_78;
  intD.9 pretmp_79;
  long unsigned intD.14 __dnew.49_81;
  charD.10 * const _82;
  charD.10 * _83;
  intD.9 pretmp_123;
  intD.9 pretmp_130;
  intD.9 prephitmp_131;
  intD.9 pretmp_132;
  intD.9 prephitmp_133;
  const boolD.2757 pretmp_137;
  const boolD.2757 prephitmp_138;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#885ptD.0 => &this_2(D)->D.40391
  # DEBUG thisD.66196 => D#885ptD.0
  # DEBUG fD.66197 => f_5(D)
  # PT = nonlocal 
  _14 = &MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_2(D)].D.40349;
  # DEBUG thisD.66233 => _14
  # DEBUG fD.66234 => f_5(D)
  # VUSE <.MEM_4(D)>
  vc_6 = f_5(D)->vcD.33600;
  # DEBUG vcD.66235 => vc_6
  # RANGE ~[2147483648, 18446744071562067967]
  _21 = (long unsigned intD.14) vc_6;
  # DEBUG D#334ptD.0 => &_14->_reserved_slotsD.40245
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _22 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.66239 => _21
  # DEBUG thisD.66238 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _23 = _21 * 4;
  # PT = nonlocal escaped 
  _24 = _22 + _23;
  # VUSE <.MEM_4(D)>
  _25 = *_24;
  if (_25 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_14->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _21
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _26 = _25 + -1;
  # .MEM_89 = VDEF <.MEM_4(D)>
  *_24 = _26;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_14->_private_buf_vc_mapD.40240
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _27 = MEM[(intD.9 * *)this_2(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.66275 => _21
  # DEBUG thisD.66274 => D#43ptD.0
  # PT = nonlocal escaped 
  _28 = _27 + _23;
  # VUSE <.MEM_4(D)>
  i_29 = *_28;
  # DEBUG iD.66240 => i_29
  # RANGE ~[2147483648, 18446744071562067967]
  _30 = (long unsigned intD.14) i_29;
  # DEBUG D#337ptD.0 => &_14->_private_buf_occupancyD.40242
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _31 = MEM[(intD.9 * *)this_2(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.66277 => _30
  # DEBUG thisD.66276 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _32 = _30 * 4;
  # PT = nonlocal escaped 
  _33 = _31 + _32;
  # VUSE <.MEM_4(D)>
  _34 = *_33;
  _35 = _34 + 1;
  # .MEM_90 = VDEF <.MEM_4(D)>
  *_33 = _35;
  # DEBUG D#338ptD.0 => &_14->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _30
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_14->_private_buf_sizeD.40241
  # VUSE <.MEM_90>
  # PT = nonlocal escaped 
  _36 = MEM[(intD.9 * *)this_2(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.66279 => _30
  # DEBUG thisD.66278 => D#43ptD.0
  # PT = nonlocal escaped 
  _37 = _36 + _32;
  # VUSE <.MEM_90>
  _38 = *_37;
  if (_35 > _38)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 39, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_136 = PHI <.MEM_90(4), .MEM_91(6)>
;;    succ:       39 [100.0%]  (FALLTHRU)

;;   basic block 39, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 39, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_90>
  _39 = MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_occupancyD.40244;
  _40 = _39 + 1;
  # .MEM_91 = VDEF <.MEM_90>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_occupancyD.40244 = _40;
  # VUSE <.MEM_91>
  _41 = MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_sizeD.40243;
  if (_40 > _41)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66273 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66282 => &D.66280
  # DEBUG __sD.66283 => "Shared buffer overflow."
  # DEBUG __aD.66284 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66294 => &D.66280
  # DEBUG D#296ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66297 => D#296ptD.0
  # DEBUG __datD.66296 => &D.66280.D.11539._M_local_bufD.11541
  # DEBUG __aD.66295 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66280]._M_pD.11525 = &D.66280.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66293 => "Shared buffer overflow."
  # DEBUG thisD.66287 => &D.66280
  # DEBUG __begD.66286 => "Shared buffer overflow."
  # DEBUG __endD.66285 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66291 => &D.66280
  # DEBUG __begD.66290 => "Shared buffer overflow."
  # DEBUG __endD.66289 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66298 => &D.66280
  # DEBUG __begD.66299 => "Shared buffer overflow."
  # DEBUG __endD.66300 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.66324 => "Shared buffer overflow."
  # DEBUG __lastD.66323 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.66324
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66326 => "Shared buffer overflow."
  # DEBUG __lastD.66325 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_93 = VDEF <.MEM_92>
  __dnewD.66301 = 23;
  # .MEM_94 = VDEF <.MEM_93>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _60 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66280, &__dnewD.66301, 0);
  # DEBUG D#7ptD.0 => &D.66280
  # DEBUG __pD.66320 => _60
  # DEBUG thisD.66319 => D#7ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  MEM[(charD.10 * *)&D.66280] = _60;
  # VUSE <.MEM_95>
  __dnew.49_61 = __dnewD.66301;
  # DEBUG D#8ptD.0 => &D.66280
  # DEBUG __capacityD.66322 => __dnew.49_61
  # DEBUG thisD.66321 => D#8ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  MEM[(size_typeD.11502 *)&D.66280 + 16B] = __dnew.49_61;
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66304 => _60
  # DEBUG __k1D.66303 => "Shared buffer overflow."
  # DEBUG __k2D.66302 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.66307 => _60
  # DEBUG __sD.66306 => "Shared buffer overflow."
  # DEBUG __nD.66305 => 23
  # DEBUG __s1D.66310 => _60
  # DEBUG __s2D.66309 => "Shared buffer overflow."
  # DEBUG __nD.66308 => 23
  # .MEM_98 = VDEF <.MEM_96>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  memcpyD.992 (_60, "Shared buffer overflow.", 23);
  # VUSE <.MEM_98>
  __dnew.49_64 = __dnewD.66301;
  # DEBUG thisD.66314 => &D.66280
  # DEBUG __nD.66313 => __dnew.49_64
  # DEBUG D#9ptD.0 => &D.66280
  # DEBUG __lengthD.66316 => __dnew.49_64
  # DEBUG thisD.66315 => D#9ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  MEM[(size_typeD.11502 *)&D.66280 + 8B] = __dnew.49_64;
  # VUSE <.MEM_99>
  # PT = nonlocal escaped null { D.66280 } (escaped)
  _65 = MEM[(charD.10 * *)&D.66280];
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66280 } (escaped)
  _66 = _65 + __dnew.49_64;
  # DEBUG __c1D.66318 => _66
  # DEBUG __c2D.66317 => D#10ptD.0
  # .MEM_100 = VDEF <.MEM_99>
  MEM[(char_typeD.6629 &)_66] = 0;
  # .MEM_101 = VDEF <.MEM_100>
  __dnewD.66301 ={v} {CLOBBER};
  [LP 2] # .MEM_102 = VDEF <.MEM_101>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_14, &D.66280);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66257 => &D.66280
  # DEBUG thisD.66258 => &D.66280
  # DEBUG thisD.66267 => &D.66280
  # VUSE <.MEM_102>
  # PT = nonlocal escaped null { D.66280 } (escaped)
  _43 = MEM[(charD.10 * *)&D.66280];
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66268 => &D.66280
  if (&D.66280.D.11539._M_local_bufD.11541 != _43)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66280.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66260 => &D.66280
  # DEBUG __sizeD.66259 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66280
  # DEBUG D#185ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66263 => _43
  # DEBUG __aD.66261 => D#183ptD.0
  # DEBUG __nD.66262 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66266 => _43
  # DEBUG thisD.66264 => D#179ptD.0
  # DEBUG D.66265 => D#180ptD.0
  # .MEM_103 = VDEF <.MEM_102>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZdlPvD.2766 (_43);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_102(8), .MEM_103(9)>
  # DEBUG D#189ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG thisD.66269 => D#189ptD.0
  # DEBUG thisD.66270 => D#189ptD.0
  # DEBUG thisD.66271 => D#189ptD.0
  # .MEM_108 = VDEF <.MEM_55>
  D.66280 ={v} {CLOBBER};
  # DEBUG thisD.66272 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_54 = PHI <.MEM_89(3), .MEM_136(39), .MEM_108(10)>
  # VUSE <.MEM_54>
  _44 = f_5(D)->tailD.33603;
  if (_44 != 0)
    goto <bb 12>;
  else
    goto <bb 29>;
;;    succ:       12 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_14->_reserved_slotsD.40245
  # VUSE <.MEM_54>
  # PT = nonlocal escaped 
  _56 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66237 => _21
  # DEBUG thisD.66236 => D#43ptD.0
  # PT = nonlocal escaped 
  _57 = _56 + _23;
  # VUSE <.MEM_54>
  _73 = *_57;
  if (_73 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_54(12), .MEM_116(38)>
  # VUSE <.MEM_97>
  _16 = MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_2(D)]._active_vcsD.40305;
  _17 = _16 + -1;
  # .MEM_117 = VDEF <.MEM_97>
  MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_2(D)]._active_vcsD.40305 = _17;
  if (_17 < 0)
    goto <bb 22>;
  else
    goto <bb 32>;
;;    succ:       22 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _74 = PHI <_57(14), _46(16)>
  # _59 = PHI <_73(14), _47(16)>
  # .MEM_75 = PHI <.MEM_54(14), .MEM_116(16)>
  # DEBUG D#341ptD.0 => &_14->_reserved_slotsD.40245
  # DEBUG __nD.66237 => _21
  # DEBUG thisD.66236 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_14->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _21
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _48 = _59 + -1;
  # .MEM_115 = VDEF <.MEM_75>
  *_74 = _48;
  # .MEM_116 = VDEF <.MEM_115>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_14, vc_6);
  # DEBUG D#341ptD.0 => &_14->_reserved_slotsD.40245
  # VUSE <.MEM_116>
  # PT = nonlocal escaped 
  _45 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66237 => _21
  # DEBUG thisD.66236 => D#43ptD.0
  # PT = nonlocal escaped 
  _46 = _45 + _23;
  # VUSE <.MEM_116>
  _47 = *_46;
  if (_47 != 0)
    goto <bb 16>;
  else
    goto <bb 20>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L8>: [LP 2]
  # DEBUG thisD.66242 => &D.66280
  # DEBUG thisD.66243 => &D.66280
  # DEBUG thisD.66252 => &D.66280
  # VUSE <.MEM_102>
  # PT = nonlocal escaped null { D.66280 } (escaped)
  _49 = MEM[(charD.10 * *)&D.66280];
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66253 => &D.66280
  if (&D.66280.D.11539._M_local_bufD.11541 != _49)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66280.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66245 => &D.66280
  # DEBUG __sizeD.66244 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66280
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66280
  # DEBUG D#185ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66248 => _49
  # DEBUG __aD.66246 => D#183ptD.0
  # DEBUG __nD.66247 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66251 => _49
  # DEBUG thisD.66249 => D#179ptD.0
  # DEBUG D.66250 => D#180ptD.0
  # .MEM_109 = VDEF <.MEM_102>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZdlPvD.2766 (_49);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_102(17), .MEM_109(18)>
  # DEBUG D#189ptD.0 => &D.66280._M_dataplusD.11519
  # DEBUG thisD.66254 => D#189ptD.0
  # DEBUG thisD.66255 => D#189ptD.0
  # DEBUG thisD.66256 => D#189ptD.0
  # .MEM_114 = VDEF <.MEM_53>
  D.66280 ={v} {CLOBBER};
  resx 2
;;    succ:      

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 19, next block 38, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       38 [100.0%]  (FALLTHRU)

;;   basic block 38, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 20, next block 21, flags: (NEW)
;;    pred:       20 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_116>
  _15 = f_5(D)->tailD.33603;
  if (_15 != 0)
    goto <bb 13>;
  else
    goto <bb 21>;
;;    succ:       13 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0
;;    prev block 38, next block 22, flags: (NEW)
;;    pred:       38 (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_116>
  pretmp_130 = this_2(D)->D.40391._max_held_slotsD.40306;
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       13 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66230 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66327 => &D.66231
  # DEBUG __sD.66328 => "Number of active VCs fell below zero."
  # DEBUG __aD.66329 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66339 => &D.66231
  # DEBUG D#296ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66342 => D#296ptD.0
  # DEBUG __datD.66341 => &D.66231.D.11539._M_local_bufD.11541
  # DEBUG __aD.66340 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_118 = VDEF <.MEM_117>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66231]._M_pD.11525 = &D.66231.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66338 => "Number of active VCs fell below zero."
  # DEBUG thisD.66332 => &D.66231
  # DEBUG __begD.66331 => "Number of active VCs fell below zero."
  # DEBUG __endD.66330 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66336 => &D.66231
  # DEBUG __begD.66335 => "Number of active VCs fell below zero."
  # DEBUG __endD.66334 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66343 => &D.66231
  # DEBUG __begD.66344 => "Number of active VCs fell below zero."
  # DEBUG __endD.66345 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptrD.55982 => "Number of active VCs fell below zero."
  # DEBUG __firstD.66369 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66368 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316ptD.0 => &__firstD.66369
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66371 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66370 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # .MEM_119 = VDEF <.MEM_118>
  __dnewD.66346 = 37;
  # .MEM_120 = VDEF <.MEM_119>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _77 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66231, &__dnewD.66346, 0);
  # DEBUG D#7ptD.0 => &D.66231
  # DEBUG __pD.66365 => _77
  # DEBUG thisD.66364 => D#7ptD.0
  # .MEM_121 = VDEF <.MEM_120>
  MEM[(charD.10 * *)&D.66231] = _77;
  # VUSE <.MEM_121>
  __dnew.49_78 = __dnewD.66346;
  # DEBUG D#8ptD.0 => &D.66231
  # DEBUG __capacityD.66367 => __dnew.49_78
  # DEBUG thisD.66366 => D#8ptD.0
  # .MEM_122 = VDEF <.MEM_121>
  MEM[(size_typeD.11502 *)&D.66231 + 16B] = __dnew.49_78;
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66349 => _77
  # DEBUG __k1D.66348 => "Number of active VCs fell below zero."
  # DEBUG __k2D.66347 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __dD.66352 => _77
  # DEBUG __sD.66351 => "Number of active VCs fell below zero."
  # DEBUG __nD.66350 => 37
  # DEBUG __s1D.66355 => _77
  # DEBUG __s2D.66354 => "Number of active VCs fell below zero."
  # DEBUG __nD.66353 => 37
  # .MEM_124 = VDEF <.MEM_122>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  memcpyD.992 (_77, "Number of active VCs fell below zero.", 37);
  # VUSE <.MEM_124>
  __dnew.49_81 = __dnewD.66346;
  # DEBUG thisD.66359 => &D.66231
  # DEBUG __nD.66358 => __dnew.49_81
  # DEBUG D#9ptD.0 => &D.66231
  # DEBUG __lengthD.66361 => __dnew.49_81
  # DEBUG thisD.66360 => D#9ptD.0
  # .MEM_125 = VDEF <.MEM_124>
  MEM[(size_typeD.11502 *)&D.66231 + 8B] = __dnew.49_81;
  # VUSE <.MEM_125>
  # PT = nonlocal escaped null { D.66231 } (escaped)
  _82 = MEM[(charD.10 * *)&D.66231];
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66231 } (escaped)
  _83 = _82 + __dnew.49_81;
  # DEBUG __c1D.66363 => _83
  # DEBUG __c2D.66362 => D#10ptD.0
  # .MEM_126 = VDEF <.MEM_125>
  MEM[(char_typeD.6629 &)_83] = 0;
  # .MEM_127 = VDEF <.MEM_126>
  __dnewD.66346 ={v} {CLOBBER};
  [LP 1] # .MEM_128 = VDEF <.MEM_127>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_14, &D.66231);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66214 => &D.66231
  # DEBUG thisD.66215 => &D.66231
  # DEBUG thisD.66224 => &D.66231
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null { D.66231 } (escaped)
  _19 = MEM[(charD.10 * *)&D.66231];
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66225 => &D.66231
  if (&D.66231.D.11539._M_local_bufD.11541 != _19)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 120, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66231.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66217 => &D.66231
  # DEBUG __sizeD.66216 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66231
  # DEBUG D#185ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66220 => _19
  # DEBUG __aD.66218 => D#183ptD.0
  # DEBUG __nD.66219 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66223 => _19
  # DEBUG thisD.66221 => D#179ptD.0
  # DEBUG D.66222 => D#180ptD.0
  # .MEM_129 = VDEF <.MEM_128>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZdlPvD.2766 (_19);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_86 = PHI <.MEM_128(23), .MEM_129(24)>
  # DEBUG D#189ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG thisD.66226 => D#189ptD.0
  # DEBUG thisD.66227 => D#189ptD.0
  # DEBUG thisD.66228 => D#189ptD.0
  # .MEM_134 = VDEF <.MEM_86>
  D.66231 ={v} {CLOBBER};
  # DEBUG thisD.66229 => NULL
  # DEBUG thisD.56392 => NULL
  # VUSE <.MEM_134>
  pretmp_137 = f_5(D)->tailD.33603;
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       22 (EH,EXECUTABLE)
<L7>: [LP 1]
  # DEBUG thisD.66199 => &D.66231
  # DEBUG thisD.66200 => &D.66231
  # DEBUG thisD.66209 => &D.66231
  # VUSE <.MEM_128>
  # PT = nonlocal escaped null { D.66231 } (escaped)
  _20 = MEM[(charD.10 * *)&D.66231];
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66210 => &D.66231
  if (&D.66231.D.11539._M_local_bufD.11541 != _20)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66231.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66202 => &D.66231
  # DEBUG __sizeD.66201 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66231
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66231
  # DEBUG D#185ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66205 => _20
  # DEBUG __aD.66203 => D#183ptD.0
  # DEBUG __nD.66204 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66208 => _20
  # DEBUG thisD.66206 => D#179ptD.0
  # DEBUG D.66207 => D#180ptD.0
  # .MEM_135 = VDEF <.MEM_128>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  _ZdlPvD.2766 (_20);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_128(26), .MEM_135(27)>
  # DEBUG D#189ptD.0 => &D.66231._M_dataplusD.11519
  # DEBUG thisD.66211 => D#189ptD.0
  # DEBUG thisD.66212 => D#189ptD.0
  # DEBUG thisD.66213 => D#189ptD.0
  # .MEM_140 = VDEF <.MEM_87>
  D.66231 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 29, loop depth 0, count 0, freq 747, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_88 = PHI <.MEM_134(25), .MEM_54(11)>
  # prephitmp_138 = PHI <pretmp_137(25), _44(11)>
  if (prephitmp_138 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;
;;    succ:       31 [1.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [98.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [98.7%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_88>
  pretmp_79 = this_2(D)->D.40391._max_held_slotsD.40306;
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       29 [1.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_88>
  pretmp_132 = this_2(D)->D.40391._active_vcsD.40305;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 31, next block 40, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_76 = PHI <.MEM_88(31), .MEM_117(13)>
  # prephitmp_133 = PHI <pretmp_132(31), _17(13)>
;;    succ:       40 [100.0%]  (FALLTHRU)

;;   basic block 40, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 32, next block 33, flags: (NEW)
;;    pred:       32 [100.0%]  (FALLTHRU)
  if (prephitmp_133 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;
;;    succ:       34 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 369, maybe hot
;;    prev block 40, next block 34, flags: (NEW)
;;    pred:       40 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_76>
  pretmp_123 = this_2(D)->D.40391._max_held_slotsD.40306;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 369, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       40 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_76>
  _9 = this_2(D)->D.40391.D.40349._buf_sizeD.39701;
  _10 = _9 / prephitmp_133;
  # .MEM_11 = VDEF <.MEM_76>
  this_2(D)->D.40391._max_held_slotsD.40306 = _10;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 34, next block 41, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_52 = PHI <.MEM_11(34), .MEM_76(33)>
  # prephitmp_18 = PHI <_10(34), pretmp_123(33)>
;;    succ:       41 [100.0%]  (FALLTHRU)

;;   basic block 41, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 35, next block 36, flags: (NEW)
;;    pred:       35 [100.0%]  (FALLTHRU)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_52(35), .MEM_88(30), .MEM_116(21)>
  # prephitmp_131 = PHI <prephitmp_18(35), pretmp_79(30), pretmp_130(21)>
  if (prephitmp_131 <= 0)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 41, next block 37, flags: (NEW, REACHABLE)
;;    pred:       41 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#342ptD.0 => this_2(D)
  # DEBUG D#343ptD.0 => f_5(D)
  # DEBUG D#344ptD.0 => D#343ptD.0
  # DEBUG fD.66372 => D#344ptD.0
  # DEBUG D#345ptD.0 => D#342ptD.0
  # DEBUG thisD.66373 => D#345ptD.0
  # .MEM_141 = VDEF <.MEM_1>
  # USE = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42830 D.66231 D.66280 D.66301 D.66346 } (nonlocal, escaped)
  __assert_failD.24398 ("_max_held_slots > 0", "buffer_state.cpp", 330, &_ZZN11BufferState32DynamicLimitedSharedBufferPolicy11SendingFlitEPK4FlitE19__PRETTY_FUNCTION__D.42830);
;;    succ:      

;;   basic block 37, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 36, next block 1, flags: (NEW, REACHABLE)
;;    pred:       41 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2175, decl_uid=40406, cgraph_uid=642, symbol_order=643)


Pass statistics:
----------------

virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct ShiftingDynamicLimitedSharedBufferPolicyD.40395 * const thisD.42858, const struct FlitD.33590 * const fD.42856)
Eh tree:
   2 cleanup land:{2,<L11>}
   1 cleanup land:{1,<L10>}
{
  boolD.2757 this__F_F__max_held_slots_lsm.1458D.66571;
  intD.9 this__F_F__max_held_slots_lsm.1457D.66570;
  size_typeD.11502 __dnewD.66539;
  size_typeD.11502 __dnewD.66494;
  intD.9 iD.66433;
  const intD.9 vcD.66428;
  const struct stringD.2845 D.66473;
  const struct stringD.2845 D.66424;
  intD.9 iD.42860;
  intD.9 _12;
  intD.9 _15;
  struct SharedBufferPolicyD.39699 * _20;
  boolD.2757 _21;
  intD.9 _22;
  intD.9 _23;
  charD.10 * const _25;
  charD.10 * const _26;
  long unsigned intD.14 _27;
  intD.9 * _28;
  long unsigned intD.14 _29;
  intD.9 & _30;
  intD.9 _31;
  intD.9 _32;
  intD.9 * _33;
  intD.9 & _34;
  long unsigned intD.14 _36;
  intD.9 * _37;
  long unsigned intD.14 _38;
  intD.9 & _39;
  intD.9 _40;
  intD.9 _41;
  intD.9 * _42;
  intD.9 & _43;
  intD.9 _44;
  intD.9 _45;
  intD.9 _46;
  intD.9 _47;
  charD.10 * const _49;
  boolD.2757 _50;
  intD.9 * _51;
  intD.9 & _52;
  intD.9 _53;
  intD.9 _54;
  charD.10 * const _55;
  intD.9 _58;
  charD.10 * _66;
  long unsigned intD.14 __dnew.49_67;
  long unsigned intD.14 __dnew.49_70;
  charD.10 * const _71;
  charD.10 * _72;
  intD.9 _78;
  intD.9 * _79;
  intD.9 & _80;
  intD.9 & _81;
  charD.10 * _83;
  long unsigned intD.14 __dnew.49_84;
  intD.9 pretmp_85;
  long unsigned intD.14 __dnew.49_87;
  charD.10 * const _88;
  charD.10 * _89;
  intD.9 _90;
  const boolD.2757 pretmp_117;
  const boolD.2757 prephitmp_118;
  intD.9 pretmp_129;
  intD.9 pretmp_136;
  intD.9 prephitmp_137;
  intD.9 pretmp_138;
  intD.9 prephitmp_139;
  intD.9 prephitmp_144;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#892ptD.0 => &this_4(D)->D.40430.D.40391
  # DEBUG thisD.66389 => D#892ptD.0
  # DEBUG fD.66390 => f_7(D)
  # PT = nonlocal 
  _20 = &MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_4(D)].D.40349;
  # DEBUG thisD.66426 => _20
  # DEBUG fD.66427 => f_7(D)
  # VUSE <.MEM_6(D)>
  vc_8 = f_7(D)->vcD.33600;
  # DEBUG vcD.66428 => vc_8
  # RANGE ~[2147483648, 18446744071562067967]
  _27 = (long unsigned intD.14) vc_8;
  # DEBUG D#334ptD.0 => &_20->_reserved_slotsD.40245
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _28 = MEM[(intD.9 * *)this_4(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.66432 => _27
  # DEBUG thisD.66431 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _29 = _27 * 4;
  # PT = nonlocal escaped 
  _30 = _28 + _29;
  # VUSE <.MEM_6(D)>
  _31 = *_30;
  if (_31 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_20->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _27
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _32 = _31 + -1;
  # .MEM_95 = VDEF <.MEM_6(D)>
  *_30 = _32;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_20->_private_buf_vc_mapD.40240
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _33 = MEM[(intD.9 * *)this_4(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.66468 => _27
  # DEBUG thisD.66467 => D#43ptD.0
  # PT = nonlocal escaped 
  _34 = _33 + _29;
  # VUSE <.MEM_6(D)>
  i_35 = *_34;
  # DEBUG iD.66433 => i_35
  # RANGE ~[2147483648, 18446744071562067967]
  _36 = (long unsigned intD.14) i_35;
  # DEBUG D#337ptD.0 => &_20->_private_buf_occupancyD.40242
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)this_4(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.66470 => _36
  # DEBUG thisD.66469 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _38 = _36 * 4;
  # PT = nonlocal escaped 
  _39 = _37 + _38;
  # VUSE <.MEM_6(D)>
  _40 = *_39;
  _41 = _40 + 1;
  # .MEM_96 = VDEF <.MEM_6(D)>
  *_39 = _41;
  # DEBUG D#338ptD.0 => &_20->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _36
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_20->_private_buf_sizeD.40241
  # VUSE <.MEM_96>
  # PT = nonlocal escaped 
  _42 = MEM[(intD.9 * *)this_4(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.66472 => _36
  # DEBUG thisD.66471 => D#43ptD.0
  # PT = nonlocal escaped 
  _43 = _42 + _38;
  # VUSE <.MEM_96>
  _44 = *_43;
  if (_41 > _44)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_145 = PHI <.MEM_96(4), .MEM_97(6)>
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_96>
  _45 = MEM[(struct SharedBufferPolicyD.39699 *)this_4(D)]._shared_buf_occupancyD.40244;
  _46 = _45 + 1;
  # .MEM_97 = VDEF <.MEM_96>
  MEM[(struct SharedBufferPolicyD.39699 *)this_4(D)]._shared_buf_occupancyD.40244 = _46;
  # VUSE <.MEM_97>
  _47 = MEM[(struct SharedBufferPolicyD.39699 *)this_4(D)]._shared_buf_sizeD.40243;
  if (_46 > _47)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66466 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66475 => &D.66473
  # DEBUG __sD.66476 => "Shared buffer overflow."
  # DEBUG __aD.66477 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66487 => &D.66473
  # DEBUG D#296ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66490 => D#296ptD.0
  # DEBUG __datD.66489 => &D.66473.D.11539._M_local_bufD.11541
  # DEBUG __aD.66488 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_98 = VDEF <.MEM_97>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66473]._M_pD.11525 = &D.66473.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66486 => "Shared buffer overflow."
  # DEBUG thisD.66480 => &D.66473
  # DEBUG __begD.66479 => "Shared buffer overflow."
  # DEBUG __endD.66478 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66484 => &D.66473
  # DEBUG __begD.66483 => "Shared buffer overflow."
  # DEBUG __endD.66482 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66491 => &D.66473
  # DEBUG __begD.66492 => "Shared buffer overflow."
  # DEBUG __endD.66493 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.66517 => "Shared buffer overflow."
  # DEBUG __lastD.66516 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.66517
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66519 => "Shared buffer overflow."
  # DEBUG __lastD.66518 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_99 = VDEF <.MEM_98>
  __dnewD.66494 = 23;
  # .MEM_100 = VDEF <.MEM_99>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _66 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66473, &__dnewD.66494, 0);
  # DEBUG D#7ptD.0 => &D.66473
  # DEBUG __pD.66513 => _66
  # DEBUG thisD.66512 => D#7ptD.0
  # .MEM_101 = VDEF <.MEM_100>
  MEM[(charD.10 * *)&D.66473] = _66;
  # VUSE <.MEM_101>
  __dnew.49_67 = __dnewD.66494;
  # DEBUG D#8ptD.0 => &D.66473
  # DEBUG __capacityD.66515 => __dnew.49_67
  # DEBUG thisD.66514 => D#8ptD.0
  # .MEM_102 = VDEF <.MEM_101>
  MEM[(size_typeD.11502 *)&D.66473 + 16B] = __dnew.49_67;
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66497 => _66
  # DEBUG __k1D.66496 => "Shared buffer overflow."
  # DEBUG __k2D.66495 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.66500 => _66
  # DEBUG __sD.66499 => "Shared buffer overflow."
  # DEBUG __nD.66498 => 23
  # DEBUG __s1D.66503 => _66
  # DEBUG __s2D.66502 => "Shared buffer overflow."
  # DEBUG __nD.66501 => 23
  # .MEM_104 = VDEF <.MEM_102>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  memcpyD.992 (_66, "Shared buffer overflow.", 23);
  # VUSE <.MEM_104>
  __dnew.49_70 = __dnewD.66494;
  # DEBUG thisD.66507 => &D.66473
  # DEBUG __nD.66506 => __dnew.49_70
  # DEBUG D#9ptD.0 => &D.66473
  # DEBUG __lengthD.66509 => __dnew.49_70
  # DEBUG thisD.66508 => D#9ptD.0
  # .MEM_105 = VDEF <.MEM_104>
  MEM[(size_typeD.11502 *)&D.66473 + 8B] = __dnew.49_70;
  # VUSE <.MEM_105>
  # PT = nonlocal escaped null { D.66473 } (escaped)
  _71 = MEM[(charD.10 * *)&D.66473];
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66473 } (escaped)
  _72 = _71 + __dnew.49_70;
  # DEBUG __c1D.66511 => _72
  # DEBUG __c2D.66510 => D#10ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  MEM[(char_typeD.6629 &)_72] = 0;
  # .MEM_107 = VDEF <.MEM_106>
  __dnewD.66494 ={v} {CLOBBER};
  [LP 2] # .MEM_108 = VDEF <.MEM_107>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_20, &D.66473);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66450 => &D.66473
  # DEBUG thisD.66451 => &D.66473
  # DEBUG thisD.66460 => &D.66473
  # VUSE <.MEM_108>
  # PT = nonlocal escaped null { D.66473 } (escaped)
  _49 = MEM[(charD.10 * *)&D.66473];
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66461 => &D.66473
  if (&D.66473.D.11539._M_local_bufD.11541 != _49)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66473.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66453 => &D.66473
  # DEBUG __sizeD.66452 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66473
  # DEBUG D#185ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66456 => _49
  # DEBUG __aD.66454 => D#183ptD.0
  # DEBUG __nD.66455 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66459 => _49
  # DEBUG thisD.66457 => D#179ptD.0
  # DEBUG D.66458 => D#180ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZdlPvD.2766 (_49);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_108(8), .MEM_109(9)>
  # DEBUG D#189ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG thisD.66462 => D#189ptD.0
  # DEBUG thisD.66463 => D#189ptD.0
  # DEBUG thisD.66464 => D#189ptD.0
  # .MEM_114 = VDEF <.MEM_61>
  D.66473 ={v} {CLOBBER};
  # DEBUG thisD.66465 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_95(3), .MEM_145(5), .MEM_114(10)>
  # VUSE <.MEM_60>
  _50 = f_7(D)->tailD.33603;
  if (_50 != 0)
    goto <bb 12>;
  else
    goto <bb 29>;
;;    succ:       12 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_20->_reserved_slotsD.40245
  # VUSE <.MEM_60>
  # PT = nonlocal escaped 
  _79 = MEM[(intD.9 * *)this_4(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66430 => _27
  # DEBUG thisD.66429 => D#43ptD.0
  # PT = nonlocal escaped 
  _80 = _79 + _29;
  # VUSE <.MEM_60>
  _90 = *_80;
  if (_90 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                20 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_143 = PHI <.MEM_60(12), .MEM_122(20)>
  # VUSE <.MEM_143>
  _22 = MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_4(D)]._active_vcsD.40305;
  _23 = _22 + -1;
  # .MEM_123 = VDEF <.MEM_143>
  MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_4(D)]._active_vcsD.40305 = _23;
  if (_23 < 0)
    goto <bb 22>;
  else
    goto <bb 32>;
;;    succ:       22 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _81 = PHI <_80(14), _52(16)>
  # _78 = PHI <_90(14), _53(16)>
  # .MEM_69 = PHI <.MEM_60(14), .MEM_122(16)>
  # DEBUG D#341ptD.0 => &_20->_reserved_slotsD.40245
  # DEBUG __nD.66430 => _27
  # DEBUG thisD.66429 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_20->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _27
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _54 = _78 + -1;
  # .MEM_121 = VDEF <.MEM_69>
  *_81 = _54;
  # .MEM_122 = VDEF <.MEM_121>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_20, vc_8);
  # DEBUG D#341ptD.0 => &_20->_reserved_slotsD.40245
  # VUSE <.MEM_122>
  # PT = nonlocal escaped 
  _51 = MEM[(intD.9 * *)this_4(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66430 => _27
  # DEBUG thisD.66429 => D#43ptD.0
  # PT = nonlocal escaped 
  _52 = _51 + _29;
  # VUSE <.MEM_122>
  _53 = *_52;
  if (_53 != 0)
    goto <bb 16>;
  else
    goto <bb 20>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L11>: [LP 2]
  # DEBUG thisD.66435 => &D.66473
  # DEBUG thisD.66436 => &D.66473
  # DEBUG thisD.66445 => &D.66473
  # VUSE <.MEM_108>
  # PT = nonlocal escaped null { D.66473 } (escaped)
  _55 = MEM[(charD.10 * *)&D.66473];
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66446 => &D.66473
  if (&D.66473.D.11539._M_local_bufD.11541 != _55)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66473.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66438 => &D.66473
  # DEBUG __sizeD.66437 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66473
  # DEBUG D#185ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66441 => _55
  # DEBUG __aD.66439 => D#183ptD.0
  # DEBUG __nD.66440 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66444 => _55
  # DEBUG thisD.66442 => D#179ptD.0
  # DEBUG D.66443 => D#180ptD.0
  # .MEM_115 = VDEF <.MEM_108>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZdlPvD.2766 (_55);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_108(17), .MEM_115(18)>
  # DEBUG D#189ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG thisD.66447 => D#189ptD.0
  # DEBUG thisD.66448 => D#189ptD.0
  # DEBUG thisD.66449 => D#189ptD.0
  # .MEM_120 = VDEF <.MEM_59>
  D.66473 ={v} {CLOBBER};
  resx 2
;;    succ:      

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_122>
  _21 = f_7(D)->tailD.33603;
  if (_21 != 0)
    goto <bb 13>;
  else
    goto <bb 21>;
;;    succ:       13 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_122>
  pretmp_136 = this_4(D)->D.40430.D.40391._max_held_slotsD.40306;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       13 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66423 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66520 => &D.66424
  # DEBUG __sD.66521 => "Number of active VCs fell below zero."
  # DEBUG __aD.66522 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66532 => &D.66424
  # DEBUG D#296ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66535 => D#296ptD.0
  # DEBUG __datD.66534 => &D.66424.D.11539._M_local_bufD.11541
  # DEBUG __aD.66533 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_124 = VDEF <.MEM_123>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66424]._M_pD.11525 = &D.66424.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66531 => "Number of active VCs fell below zero."
  # DEBUG thisD.66525 => &D.66424
  # DEBUG __begD.66524 => "Number of active VCs fell below zero."
  # DEBUG __endD.66523 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66529 => &D.66424
  # DEBUG __begD.66528 => "Number of active VCs fell below zero."
  # DEBUG __endD.66527 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66536 => &D.66424
  # DEBUG __begD.66537 => "Number of active VCs fell below zero."
  # DEBUG __endD.66538 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptrD.55982 => "Number of active VCs fell below zero."
  # DEBUG __firstD.66562 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66561 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316ptD.0 => &__firstD.66562
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66564 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66563 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # .MEM_125 = VDEF <.MEM_124>
  __dnewD.66539 = 37;
  # .MEM_126 = VDEF <.MEM_125>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _83 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66424, &__dnewD.66539, 0);
  # DEBUG D#7ptD.0 => &D.66424
  # DEBUG __pD.66558 => _83
  # DEBUG thisD.66557 => D#7ptD.0
  # .MEM_127 = VDEF <.MEM_126>
  MEM[(charD.10 * *)&D.66424] = _83;
  # VUSE <.MEM_127>
  __dnew.49_84 = __dnewD.66539;
  # DEBUG D#8ptD.0 => &D.66424
  # DEBUG __capacityD.66560 => __dnew.49_84
  # DEBUG thisD.66559 => D#8ptD.0
  # .MEM_128 = VDEF <.MEM_127>
  MEM[(size_typeD.11502 *)&D.66424 + 16B] = __dnew.49_84;
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66542 => _83
  # DEBUG __k1D.66541 => "Number of active VCs fell below zero."
  # DEBUG __k2D.66540 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __dD.66545 => _83
  # DEBUG __sD.66544 => "Number of active VCs fell below zero."
  # DEBUG __nD.66543 => 37
  # DEBUG __s1D.66548 => _83
  # DEBUG __s2D.66547 => "Number of active VCs fell below zero."
  # DEBUG __nD.66546 => 37
  # .MEM_130 = VDEF <.MEM_128>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  memcpyD.992 (_83, "Number of active VCs fell below zero.", 37);
  # VUSE <.MEM_130>
  __dnew.49_87 = __dnewD.66539;
  # DEBUG thisD.66552 => &D.66424
  # DEBUG __nD.66551 => __dnew.49_87
  # DEBUG D#9ptD.0 => &D.66424
  # DEBUG __lengthD.66554 => __dnew.49_87
  # DEBUG thisD.66553 => D#9ptD.0
  # .MEM_131 = VDEF <.MEM_130>
  MEM[(size_typeD.11502 *)&D.66424 + 8B] = __dnew.49_87;
  # VUSE <.MEM_131>
  # PT = nonlocal escaped null { D.66424 } (escaped)
  _88 = MEM[(charD.10 * *)&D.66424];
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66424 } (escaped)
  _89 = _88 + __dnew.49_87;
  # DEBUG __c1D.66556 => _89
  # DEBUG __c2D.66555 => D#10ptD.0
  # .MEM_132 = VDEF <.MEM_131>
  MEM[(char_typeD.6629 &)_89] = 0;
  # .MEM_133 = VDEF <.MEM_132>
  __dnewD.66539 ={v} {CLOBBER};
  [LP 1] # .MEM_134 = VDEF <.MEM_133>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_20, &D.66424);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66407 => &D.66424
  # DEBUG thisD.66408 => &D.66424
  # DEBUG thisD.66417 => &D.66424
  # VUSE <.MEM_134>
  # PT = nonlocal escaped null { D.66424 } (escaped)
  _25 = MEM[(charD.10 * *)&D.66424];
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66418 => &D.66424
  if (&D.66424.D.11539._M_local_bufD.11541 != _25)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 120, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66424.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66410 => &D.66424
  # DEBUG __sizeD.66409 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66424
  # DEBUG D#185ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66413 => _25
  # DEBUG __aD.66411 => D#183ptD.0
  # DEBUG __nD.66412 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66416 => _25
  # DEBUG thisD.66414 => D#179ptD.0
  # DEBUG D.66415 => D#180ptD.0
  # .MEM_135 = VDEF <.MEM_134>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_134(23), .MEM_135(24)>
  # DEBUG D#189ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG thisD.66419 => D#189ptD.0
  # DEBUG thisD.66420 => D#189ptD.0
  # DEBUG thisD.66421 => D#189ptD.0
  # .MEM_140 = VDEF <.MEM_92>
  D.66424 ={v} {CLOBBER};
  # DEBUG thisD.66422 => NULL
  # DEBUG thisD.56392 => NULL
  # VUSE <.MEM_140>
  pretmp_117 = f_7(D)->tailD.33603;
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       22 (EH,EXECUTABLE)
<L10>: [LP 1]
  # DEBUG thisD.66392 => &D.66424
  # DEBUG thisD.66393 => &D.66424
  # DEBUG thisD.66402 => &D.66424
  # VUSE <.MEM_134>
  # PT = nonlocal escaped null { D.66424 } (escaped)
  _26 = MEM[(charD.10 * *)&D.66424];
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66403 => &D.66424
  if (&D.66424.D.11539._M_local_bufD.11541 != _26)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66424.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66395 => &D.66424
  # DEBUG __sizeD.66394 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66424
  # DEBUG D#185ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66398 => _26
  # DEBUG __aD.66396 => D#183ptD.0
  # DEBUG __nD.66397 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66401 => _26
  # DEBUG thisD.66399 => D#179ptD.0
  # DEBUG D.66400 => D#180ptD.0
  # .MEM_141 = VDEF <.MEM_134>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_93 = PHI <.MEM_134(26), .MEM_141(27)>
  # DEBUG D#189ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG thisD.66404 => D#189ptD.0
  # DEBUG thisD.66405 => D#189ptD.0
  # DEBUG thisD.66406 => D#189ptD.0
  # .MEM_146 = VDEF <.MEM_93>
  D.66424 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 29, loop depth 0, count 0, freq 747, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_94 = PHI <.MEM_140(25), .MEM_60(11)>
  # prephitmp_118 = PHI <pretmp_117(25), _50(11)>
  if (prephitmp_118 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;
;;    succ:       31 [1.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [98.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [98.7%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_94>
  pretmp_85 = this_4(D)->D.40430.D.40391._max_held_slotsD.40306;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       29 [1.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_94>
  pretmp_138 = this_4(D)->D.40430.D.40391._active_vcsD.40305;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_94(31), .MEM_123(13)>
  # prephitmp_139 = PHI <pretmp_138(31), _23(13)>
  if (prephitmp_139 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;
;;    succ:       34 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 369, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_77>
  pretmp_129 = this_4(D)->D.40430.D.40391._max_held_slotsD.40306;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 369, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483646]
  i_11 = prephitmp_139 + -1;
  # DEBUG iD.42860 => i_11
  # VUSE <.MEM_77>
  _12 = this_4(D)->D.40430.D.40391.D.40349._buf_sizeD.39701;
  # .MEM_13 = VDEF <.MEM_77>
  this_4(D)->D.40430.D.40391._max_held_slotsD.40306 = _12;
  # DEBUG iD.42860 => i_11
  if (i_11 == 0)
    goto <bb 39>;
  else
    goto <bb 35>;
;;    succ:       39 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 336, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 3730, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_48 = PHI <i_11(35), i_17(38)>
  # .MEM_82 = PHI <.MEM_13(35), .MEM_82(38)>
  # prephitmp_144 = PHI <_12(35), _15(38)>
  # DEBUG iD.42860 => i_48
  # RANGE [-1073741824, 1073741823]
  _15 = prephitmp_144 >> 1;
  i_17 = i_48 >> 1;
  # DEBUG iD.42860 => i_17
  # DEBUG iD.42860 => i_17
  if (i_17 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 336, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-1073741824, 1073741823]
  # _58 = PHI <_15(36)>
  # this__F_F__max_held_slots_lsm.1457_110 = PHI <_15(36)>
  # .MEM_119 = VDEF <.MEM_82>
  this_4(D)->D.40430.D.40391._max_held_slotsD.40306 = this__F_F__max_held_slots_lsm.1457_110;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 3394, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       36 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_94(30), .MEM_77(33), .MEM_119(37), .MEM_13(34), .MEM_122(21)>
  # prephitmp_137 = PHI <pretmp_85(30), pretmp_129(33), _58(37), _12(34), pretmp_136(21)>
  if (prephitmp_137 <= 0)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#346ptD.0 => this_4(D)
  # DEBUG D#347ptD.0 => f_7(D)
  # DEBUG D#348ptD.0 => D#347ptD.0
  # DEBUG fD.66565 => D#348ptD.0
  # DEBUG D#349ptD.0 => D#346ptD.0
  # DEBUG thisD.66566 => D#349ptD.0
  # .MEM_147 = VDEF <.MEM_3>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  __assert_failD.24398 ("_max_held_slots > 0", "buffer_state.cpp", 363, &_ZZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy11SendingFlitEPK4FlitE19__PRETTY_FUNCTION__D.42861);
;;    succ:      

;;   basic block 41, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 40, next block 1, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for f_7(D)->vc
analyze_innermost: success.
	base_address: f_7(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *f_7(D)
	Access function 0: 32
Creating dr for MEM[(int * *)this_4(D) + 192B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D) + 192B]
Creating dr for *_30
analyze_innermost: success.
	base_address: _28 + (long unsigned int) vc_8 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_30
Creating dr for *_30
analyze_innermost: success.
	base_address: _28 + (long unsigned int) vc_8 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_30
Creating dr for MEM[(int * *)this_4(D) + 112B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D) + 112B]
Creating dr for *_34
analyze_innermost: success.
	base_address: _33 + (long unsigned int) vc_8 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_34
Creating dr for MEM[(int * *)this_4(D) + 160B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D) + 160B]
Creating dr for *_39
analyze_innermost: success.
	base_address: _37 + (long unsigned int) i_35 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_39
Creating dr for *_39
analyze_innermost: success.
	base_address: _37 + (long unsigned int) i_35 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_39
Creating dr for MEM[(int * *)this_4(D) + 136B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D) + 136B]
Creating dr for *_43
analyze_innermost: success.
	base_address: _42 + (long unsigned int) i_35 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_43
Creating dr for MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_4(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_4(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_size
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_4(D)]
	Access function 0: 1472
Creating dr for MEM[(struct _Alloc_hider *)&D.66473]._M_p
analyze_innermost: success.
	base_address: &D.66473
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.66473]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.66473]
analyze_innermost: success.
	base_address: &D.66473
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66473]
Creating dr for MEM[(char * *)&D.66473]
analyze_innermost: success.
	base_address: &D.66473
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66473]
Creating dr for f_7(D)->tail
analyze_innermost: success.
	base_address: f_7(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_7(D)
	Access function 0: 104
Creating dr for MEM[(int * *)this_4(D) + 192B]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D) + 192B]
Creating dr for *_80
analyze_innermost: success.
	base_address: _79 + (long unsigned int) vc_8 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_80
Creating dr for *_81
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_81
Creating dr for *_81
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_81
Creating dr for *_81
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_81
Creating dr for *_81
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_81
Creating dr for *_81
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_81
Creating dr for *_81
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_81
Creating dr for *_81
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_81
Creating dr for *_81
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_81
Creating dr for f_7(D)->tail
analyze_innermost: success.
	base_address: f_7(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_7(D)
	Access function 0: 104
Creating dr for this_4(D)->D.40430.D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1792
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct LimitedSharedBufferPolicy *)this_4(D)]._active_vcs
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: MEM[(struct LimitedSharedBufferPolicy *)this_4(D)]
	Access function 0: 1760
Creating dr for MEM[(struct LimitedSharedBufferPolicy *)this_4(D)]._active_vcs
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: MEM[(struct LimitedSharedBufferPolicy *)this_4(D)]
	Access function 0: 1760
Creating dr for MEM[(struct _Alloc_hider *)&D.66424]._M_p
analyze_innermost: success.
	base_address: &D.66424
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.66424]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.66424]
analyze_innermost: success.
	base_address: &D.66424
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66424]
Creating dr for MEM[(char * *)&D.66424]
analyze_innermost: success.
	base_address: &D.66424
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66424]
Creating dr for this_4(D)->D.40430.D.40391.D.40349._buf_size
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 104
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 832
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for this_4(D)->D.40430.D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1792
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.40430.D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1792
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.40430.D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1792
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.40430.D.40391._active_vcs
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1760
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.40430.D.40391._max_held_slots
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 1792
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:45, LOOPS:2, CONDITIONS:19, STMTS:429)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#892 => &this_4(D)->D.40430.D.40391
    # DEBUG this => D#892
    # DEBUG f => f_7(D)
    _20 = &MEM[(struct LimitedSharedBufferPolicy *)this_4(D)].D.40349;
    # DEBUG this => _20
    # DEBUG f => f_7(D)
    # VUSE <.MEM_6(D)>
    vc_8 = f_7(D)->vc;
    # DEBUG vc => vc_8
    _27 = (long unsigned int) vc_8;
    # DEBUG D#334 => &_20->_reserved_slots
    # VUSE <.MEM_6(D)>
    _28 = MEM[(int * *)this_4(D) + 192B];
    # DEBUG D#43 => D#334
    # DEBUG __n => _27
    # DEBUG this => D#43
    _29 = _27 * 4;
    _30 = _28 + _29;
    # VUSE <.MEM_6(D)>
    _31 = *_30;
    if (_31 > 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_11 })
  {
    <bb 3>:
    # DEBUG D#335 => &_20->_reserved_slots
    # DEBUG D#43 => D#335
    # DEBUG __n => _27
    # DEBUG this => D#43
    _32 = _31 + -1;
    # .MEM_95 = VDEF <.MEM_6(D)>
    *_30 = _32;
    goto <bb 11>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_6 bb_5 })
  {
    <bb 4>:
    # DEBUG D#336 => &_20->_private_buf_vc_map
    # VUSE <.MEM_6(D)>
    _33 = MEM[(int * *)this_4(D) + 112B];
    # DEBUG D#43 => D#336
    # DEBUG __n => _27
    # DEBUG this => D#43
    _34 = _33 + _29;
    # VUSE <.MEM_6(D)>
    i_35 = *_34;
    # DEBUG i => i_35
    _36 = (long unsigned int) i_35;
    # DEBUG D#337 => &_20->_private_buf_occupancy
    # VUSE <.MEM_6(D)>
    _37 = MEM[(int * *)this_4(D) + 160B];
    # DEBUG D#43 => D#337
    # DEBUG __n => _36
    # DEBUG this => D#43
    _38 = _36 * 4;
    _39 = _37 + _38;
    # VUSE <.MEM_6(D)>
    _40 = *_39;
    _41 = _40 + 1;
    # .MEM_96 = VDEF <.MEM_6(D)>
    *_39 = _41;
    # DEBUG D#338 => &_20->_private_buf_occupancy
    # DEBUG D#43 => D#338
    # DEBUG __n => _36
    # DEBUG this => D#43
    # DEBUG D#339 => &_20->_private_buf_size
    # VUSE <.MEM_96>
    _42 = MEM[(int * *)this_4(D) + 136B];
    # DEBUG D#43 => D#339
    # DEBUG __n => _36
    # DEBUG this => D#43
    _43 = _42 + _38;
    # VUSE <.MEM_96>
    _44 = *_43;
    if (_41 > _44)
      goto <bb 6>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 bb_6 }, succs = {bb_44 })
  {
    <bb 5>:
    # .MEM_145 = PHI <.MEM_96(4), .MEM_97(6)>

  }
  bb_44 (preds = {bb_5 }, succs = {bb_11 })
  {
    <bb 44>:
    goto <bb 11>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_5 })
  {
    <bb 6>:
    # VUSE <.MEM_96>
    _45 = MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_occupancy;
    _46 = _45 + 1;
    # .MEM_97 = VDEF <.MEM_96>
    MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_occupancy = _46;
    # VUSE <.MEM_97>
    _47 = MEM[(struct SharedBufferPolicy *)this_4(D)]._shared_buf_size;
    if (_46 > _47)
      goto <bb 7>;
    else
      goto <bb 5>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 bb_17 })
  {
    <bb 7>:
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG this => &D.66473
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.66473
    # DEBUG D#296 => &D.66473._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.66473.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_98 = VDEF <.MEM_97>
    MEM[(struct _Alloc_hider *)&D.66473]._M_p = &D.66473.D.11539._M_local_buf;
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG this => &D.66473
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.66473
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.66473
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __ptr => "Shared buffer overflow."
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # .MEM_99 = VDEF <.MEM_98>
    __dnew = 23;
    # .MEM_100 = VDEF <.MEM_99>
    _66 = std::__cxx11::basic_string<char>::_M_create (&D.66473, &__dnew, 0);
    # DEBUG D#7 => &D.66473
    # DEBUG __p => _66
    # DEBUG this => D#7
    # .MEM_101 = VDEF <.MEM_100>
    MEM[(char * *)&D.66473] = _66;
    # VUSE <.MEM_101>
    __dnew.49_67 = __dnew;
    # DEBUG D#8 => &D.66473
    # DEBUG __capacity => __dnew.49_67
    # DEBUG this => D#8
    # .MEM_102 = VDEF <.MEM_101>
    MEM[(size_type *)&D.66473 + 16B] = __dnew.49_67;
    # DEBUG D#1 => &D.66473
    # DEBUG this => D#1
    # DEBUG __p => _66
    # DEBUG __k1 => "Shared buffer overflow."
    # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __d => _66
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __n => 23
    # DEBUG __s1 => _66
    # DEBUG __s2 => "Shared buffer overflow."
    # DEBUG __n => 23
    # .MEM_104 = VDEF <.MEM_102>
    __builtin_memcpy (_66, "Shared buffer overflow.", 23);
    # VUSE <.MEM_104>
    __dnew.49_70 = __dnew;
    # DEBUG this => &D.66473
    # DEBUG __n => __dnew.49_70
    # DEBUG D#9 => &D.66473
    # DEBUG __length => __dnew.49_70
    # DEBUG this => D#9
    # .MEM_105 = VDEF <.MEM_104>
    MEM[(size_type *)&D.66473 + 8B] = __dnew.49_70;
    # VUSE <.MEM_105>
    _71 = MEM[(char * *)&D.66473];
    # DEBUG D#1 => &D.66473
    # DEBUG this => D#1
    _72 = _71 + __dnew.49_70;
    # DEBUG __c1 => _72
    # DEBUG __c2 => D#10
    # .MEM_106 = VDEF <.MEM_105>
    MEM[(char_type &)_72] = 0;
    # .MEM_107 = VDEF <.MEM_106>
    __dnew ={v} {CLOBBER};
    # .MEM_108 = VDEF <.MEM_107>
    Module::Error (_20, &D.66473);

  }
  bb_8 (preds = {bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # DEBUG this => &D.66473
    # DEBUG this => &D.66473
    # DEBUG this => &D.66473
    # VUSE <.MEM_108>
    _49 = MEM[(char * *)&D.66473];
    # DEBUG D#1 => &D.66473
    # DEBUG this => D#1
    # DEBUG this => &D.66473
    if (&D.66473.D.11539._M_local_buf != _49)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    # DEBUG D#188 => D.66473.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66473
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66473
    # DEBUG this => D#1
    # DEBUG this => &D.66473
    # DEBUG D#185 => &D.66473._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _49
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _49
    # DEBUG this => D#179
    # DEBUG D.66458 => D#180
    # .MEM_109 = VDEF <.MEM_108>
    operator delete (_49);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_61 = PHI <.MEM_108(8), .MEM_109(9)>
    # DEBUG D#189 => &D.66473._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_114 = VDEF <.MEM_61>
    D.66473 ={v} {CLOBBER};
    # DEBUG this => NULL
    # DEBUG this => NULL

  }
  bb_11 (preds = {bb_3 bb_44 bb_10 }, succs = {bb_12 bb_29 })
  {
    <bb 11>:
    # .MEM_60 = PHI <.MEM_95(3), .MEM_145(44), .MEM_114(10)>
    # VUSE <.MEM_60>
    _50 = f_7(D)->tail;
    if (_50 != 0)
      goto <bb 12>;
    else
      goto <bb 29>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_14 bb_13 })
  {
    <bb 12>:
    # DEBUG D#341 => &_20->_reserved_slots
    # VUSE <.MEM_60>
    _79 = MEM[(int * *)this_4(D) + 192B];
    # DEBUG D#43 => D#341
    # DEBUG __n => _27
    # DEBUG this => D#43
    _80 = _79 + _29;
    # VUSE <.MEM_60>
    _90 = *_80;
    if (_90 != 0)
      goto <bb 14>;
    else
      goto <bb 13>;

  }
  bb_13 (preds = {bb_12 bb_43 }, succs = {bb_22 bb_32 })
  {
    <bb 13>:
    # .MEM_143 = PHI <.MEM_60(12), .MEM_122(43)>
    # VUSE <.MEM_143>
    _22 = MEM[(struct LimitedSharedBufferPolicy *)this_4(D)]._active_vcs;
    _23 = _22 + -1;
    # .MEM_123 = VDEF <.MEM_143>
    MEM[(struct LimitedSharedBufferPolicy *)this_4(D)]._active_vcs = _23;
    if (_23 < 0)
      goto <bb 22>;
    else
      goto <bb 32>;

  }
  bb_14 (preds = {bb_12 }, succs = {bb_15 })
  {
    <bb 14>:

  }
  bb_17 (preds = {bb_7 }, succs = {bb_18 bb_19 })
  {
  <L11>:
    # DEBUG this => &D.66473
    # DEBUG this => &D.66473
    # DEBUG this => &D.66473
    # VUSE <.MEM_108>
    _55 = MEM[(char * *)&D.66473];
    # DEBUG D#1 => &D.66473
    # DEBUG this => D#1
    # DEBUG this => &D.66473
    if (&D.66473.D.11539._M_local_buf != _55)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_18 (preds = {bb_17 }, succs = {bb_19 })
  {
    <bb 18>:
    # DEBUG D#188 => D.66473.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66473
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66473
    # DEBUG this => D#1
    # DEBUG this => &D.66473
    # DEBUG D#185 => &D.66473._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _55
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _55
    # DEBUG this => D#179
    # DEBUG D.66443 => D#180
    # .MEM_115 = VDEF <.MEM_108>
    operator delete (_55);

  }
  bb_19 (preds = {bb_17 bb_18 }, succs = {})
  {
    <bb 19>:
    # .MEM_59 = PHI <.MEM_108(17), .MEM_115(18)>
    # DEBUG D#189 => &D.66473._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_120 = VDEF <.MEM_59>
    D.66473 ={v} {CLOBBER};
    resx 2

  }
  bb_20 (preds = {bb_15 }, succs = {bb_43 })
  {
    <bb 20>:

  }
  bb_43 (preds = {bb_20 }, succs = {bb_13 bb_21 })
  {
    <bb 43>:
    # VUSE <.MEM_122>
    _21 = f_7(D)->tail;
    if (_21 != 0)
      goto <bb 13>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_43 }, succs = {bb_39 })
  {
    <bb 21>:
    # VUSE <.MEM_122>
    pretmp_136 = this_4(D)->D.40430.D.40391._max_held_slots;
    goto <bb 39>;

  }
  bb_22 (preds = {bb_13 }, succs = {bb_23 bb_26 })
  {
    <bb 22>:
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG this => &D.66424
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.66424
    # DEBUG D#296 => &D.66424._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.66424.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_124 = VDEF <.MEM_123>
    MEM[(struct _Alloc_hider *)&D.66424]._M_p = &D.66424.D.11539._M_local_buf;
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG this => &D.66424
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG this => &D.66424
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG this => &D.66424
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG __ptr => "Number of active VCs fell below zero."
    # DEBUG __first => "Number of active VCs fell below zero."
    # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Number of active VCs fell below zero."
    # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # .MEM_125 = VDEF <.MEM_124>
    __dnew = 37;
    # .MEM_126 = VDEF <.MEM_125>
    _83 = std::__cxx11::basic_string<char>::_M_create (&D.66424, &__dnew, 0);
    # DEBUG D#7 => &D.66424
    # DEBUG __p => _83
    # DEBUG this => D#7
    # .MEM_127 = VDEF <.MEM_126>
    MEM[(char * *)&D.66424] = _83;
    # VUSE <.MEM_127>
    __dnew.49_84 = __dnew;
    # DEBUG D#8 => &D.66424
    # DEBUG __capacity => __dnew.49_84
    # DEBUG this => D#8
    # .MEM_128 = VDEF <.MEM_127>
    MEM[(size_type *)&D.66424 + 16B] = __dnew.49_84;
    # DEBUG D#1 => &D.66424
    # DEBUG this => D#1
    # DEBUG __p => _83
    # DEBUG __k1 => "Number of active VCs fell below zero."
    # DEBUG __k2 => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG __d => _83
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG __n => 37
    # DEBUG __s1 => _83
    # DEBUG __s2 => "Number of active VCs fell below zero."
    # DEBUG __n => 37
    # .MEM_130 = VDEF <.MEM_128>
    __builtin_memcpy (_83, "Number of active VCs fell below zero.", 37);
    # VUSE <.MEM_130>
    __dnew.49_87 = __dnew;
    # DEBUG this => &D.66424
    # DEBUG __n => __dnew.49_87
    # DEBUG D#9 => &D.66424
    # DEBUG __length => __dnew.49_87
    # DEBUG this => D#9
    # .MEM_131 = VDEF <.MEM_130>
    MEM[(size_type *)&D.66424 + 8B] = __dnew.49_87;
    # VUSE <.MEM_131>
    _88 = MEM[(char * *)&D.66424];
    # DEBUG D#1 => &D.66424
    # DEBUG this => D#1
    _89 = _88 + __dnew.49_87;
    # DEBUG __c1 => _89
    # DEBUG __c2 => D#10
    # .MEM_132 = VDEF <.MEM_131>
    MEM[(char_type &)_89] = 0;
    # .MEM_133 = VDEF <.MEM_132>
    __dnew ={v} {CLOBBER};
    # .MEM_134 = VDEF <.MEM_133>
    Module::Error (_20, &D.66424);

  }
  bb_23 (preds = {bb_22 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # DEBUG this => &D.66424
    # DEBUG this => &D.66424
    # DEBUG this => &D.66424
    # VUSE <.MEM_134>
    _25 = MEM[(char * *)&D.66424];
    # DEBUG D#1 => &D.66424
    # DEBUG this => D#1
    # DEBUG this => &D.66424
    if (&D.66424.D.11539._M_local_buf != _25)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#188 => D.66424.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66424
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66424
    # DEBUG this => D#1
    # DEBUG this => &D.66424
    # DEBUG D#185 => &D.66424._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _25
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _25
    # DEBUG this => D#179
    # DEBUG D.66415 => D#180
    # .MEM_135 = VDEF <.MEM_134>
    operator delete (_25);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_29 })
  {
    <bb 25>:
    # .MEM_92 = PHI <.MEM_134(23), .MEM_135(24)>
    # DEBUG D#189 => &D.66424._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_140 = VDEF <.MEM_92>
    D.66424 ={v} {CLOBBER};
    # DEBUG this => NULL
    # DEBUG this => NULL
    # VUSE <.MEM_140>
    pretmp_117 = f_7(D)->tail;
    goto <bb 29>;

  }
  bb_26 (preds = {bb_22 }, succs = {bb_27 bb_28 })
  {
  <L10>:
    # DEBUG this => &D.66424
    # DEBUG this => &D.66424
    # DEBUG this => &D.66424
    # VUSE <.MEM_134>
    _26 = MEM[(char * *)&D.66424];
    # DEBUG D#1 => &D.66424
    # DEBUG this => D#1
    # DEBUG this => &D.66424
    if (&D.66424.D.11539._M_local_buf != _26)
      goto <bb 27>;
    else
      goto <bb 28>;

  }
  bb_27 (preds = {bb_26 }, succs = {bb_28 })
  {
    <bb 27>:
    # DEBUG D#188 => D.66424.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66424
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66424
    # DEBUG this => D#1
    # DEBUG this => &D.66424
    # DEBUG D#185 => &D.66424._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _26
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _26
    # DEBUG this => D#179
    # DEBUG D.66400 => D#180
    # .MEM_141 = VDEF <.MEM_134>
    operator delete (_26);

  }
  bb_28 (preds = {bb_26 bb_27 }, succs = {})
  {
    <bb 28>:
    # .MEM_93 = PHI <.MEM_134(26), .MEM_141(27)>
    # DEBUG D#189 => &D.66424._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_146 = VDEF <.MEM_93>
    D.66424 ={v} {CLOBBER};
    resx 1

  }
  bb_29 (preds = {bb_25 bb_11 }, succs = {bb_31 bb_30 })
  {
    <bb 29>:
    # .MEM_94 = PHI <.MEM_140(25), .MEM_60(11)>
    # prephitmp_118 = PHI <pretmp_117(25), _50(11)>
    if (prephitmp_118 != 0)
      goto <bb 31>;
    else
      goto <bb 30>;

  }
  bb_30 (preds = {bb_29 }, succs = {bb_39 })
  {
    <bb 30>:
    # VUSE <.MEM_94>
    pretmp_85 = this_4(D)->D.40430.D.40391._max_held_slots;
    goto <bb 39>;

  }
  bb_31 (preds = {bb_29 }, succs = {bb_32 })
  {
    <bb 31>:
    # VUSE <.MEM_94>
    pretmp_138 = this_4(D)->D.40430.D.40391._active_vcs;

  }
  bb_32 (preds = {bb_31 bb_13 }, succs = {bb_34 bb_33 })
  {
    <bb 32>:
    # .MEM_77 = PHI <.MEM_94(31), .MEM_123(13)>
    # prephitmp_139 = PHI <pretmp_138(31), _23(13)>
    if (prephitmp_139 != 0)
      goto <bb 34>;
    else
      goto <bb 33>;

  }
  bb_33 (preds = {bb_32 }, succs = {bb_39 })
  {
    <bb 33>:
    # VUSE <.MEM_77>
    pretmp_129 = this_4(D)->D.40430.D.40391._max_held_slots;
    goto <bb 39>;

  }
  bb_34 (preds = {bb_32 }, succs = {bb_39 bb_35 })
  {
    <bb 34>:
    i_11 = prephitmp_139 + -1;
    # DEBUG i => i_11
    # VUSE <.MEM_77>
    _12 = this_4(D)->D.40430.D.40391.D.40349._buf_size;
    # .MEM_13 = VDEF <.MEM_77>
    this_4(D)->D.40430.D.40391._max_held_slots = _12;
    # DEBUG i => i_11
    if (i_11 == 0)
      goto <bb 39>;
    else
      goto <bb 35>;

  }
  bb_35 (preds = {bb_34 }, succs = {bb_36 })
  {
    <bb 35>:

  }
  bb_37 (preds = {bb_36 }, succs = {bb_42 })
  {
    <bb 37>:
    # _58 = PHI <_15(36)>

  }
  bb_42 (preds = {bb_37 }, succs = {bb_39 })
  {
    <bb 42>:
    # .MEM_119 = VDEF <.MEM_82>
    this_4(D)->D.40430.D.40391._max_held_slots = _58;
    goto <bb 39>;

  }
  bb_39 (preds = {bb_30 bb_33 bb_42 bb_34 bb_21 }, succs = {bb_40 bb_41 })
  {
    <bb 39>:
    # .MEM_3 = PHI <.MEM_94(30), .MEM_77(33), .MEM_119(42), .MEM_13(34), .MEM_122(21)>
    # prephitmp_137 = PHI <pretmp_85(30), pretmp_129(33), _58(42), _12(34), pretmp_136(21)>
    if (prephitmp_137 <= 0)
      goto <bb 40>;
    else
      goto <bb 41>;

  }
  bb_40 (preds = {bb_39 }, succs = {})
  {
    <bb 40>:
    # DEBUG D#346 => this_4(D)
    # DEBUG D#347 => f_7(D)
    # DEBUG D#348 => D#347
    # DEBUG f => D#348
    # DEBUG D#349 => D#346
    # DEBUG this => D#349
    # .MEM_147 = VDEF <.MEM_3>
    __assert_fail ("_max_held_slots > 0", "buffer_state.cpp", 363, &__PRETTY_FUNCTION__);

  }
  bb_41 (preds = {bb_39 }, succs = {bb_1 })
  {
    <bb 41>:
    # VUSE <.MEM_3>
    return;

  }
  loop_1 (header = 36, latch = 38, niter = )
  {
    bb_36 (preds = {bb_35 bb_38 }, succs = {bb_37 bb_38 })
    {
      <bb 36>:
      # i_48 = PHI <i_11(35), i_17(38)>
      # .MEM_82 = PHI <.MEM_13(35), .MEM_82(38)>
      # prephitmp_144 = PHI <_12(35), _15(38)>
      # DEBUG i => i_48
      _15 = prephitmp_144 >> 1;
      i_17 = i_48 >> 1;
      # DEBUG i => i_17
      # DEBUG i => i_17
      if (i_17 == 0)
        goto <bb 37>;
      else
        goto <bb 38>;

    }
    bb_38 (preds = {bb_36 }, succs = {bb_36 })
    {
      <bb 38>:
      goto <bb 36>;

    }
  }
  loop_2 (header = 15, latch = 16, niter = )
  {
    bb_15 (preds = {bb_14 bb_16 }, succs = {bb_16 bb_20 })
    {
      <bb 15>:
      # _81 = PHI <_80(14), _52(16)>
      # _78 = PHI <_90(14), _53(16)>
      # .MEM_69 = PHI <.MEM_60(14), .MEM_122(16)>
      # DEBUG D#341 => &_20->_reserved_slots
      # DEBUG __n => _27
      # DEBUG this => D#43
      # DEBUG D#340 => &_20->_reserved_slots
      # DEBUG D#43 => D#340
      # DEBUG __n => _27
      # DEBUG this => D#43
      _54 = _78 + -1;
      # .MEM_121 = VDEF <.MEM_69>
      *_81 = _54;
      # .MEM_122 = VDEF <.MEM_121>
      BufferState::SharedBufferPolicy::ProcessFreeSlot (_20, vc_8);
      # DEBUG D#341 => &_20->_reserved_slots
      # VUSE <.MEM_122>
      _51 = MEM[(int * *)this_4(D) + 192B];
      # DEBUG D#43 => D#341
      # DEBUG __n => _27
      # DEBUG this => D#43
      _52 = _51 + _29;
      # VUSE <.MEM_122>
      _53 = *_52;
      if (_53 != 0)
        goto <bb 16>;
      else
        goto <bb 20>;

    }
    bb_16 (preds = {bb_15 }, succs = {bb_15 })
    {
      <bb 16>:
      goto <bb 15>;

    }
  }
}

Pass statistics:
----------------

virtual void BufferState::ShiftingDynamicLimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct ShiftingDynamicLimitedSharedBufferPolicyD.40395 * const thisD.42858, const struct FlitD.33590 * const fD.42856)
Eh tree:
   2 cleanup land:{2,<L11>}
   1 cleanup land:{1,<L10>}
{
  boolD.2757 this__F_F__max_held_slots_lsm.1458D.66571;
  intD.9 this__F_F__max_held_slots_lsm.1457D.66570;
  size_typeD.11502 __dnewD.66539;
  size_typeD.11502 __dnewD.66494;
  intD.9 iD.66433;
  const intD.9 vcD.66428;
  const struct stringD.2845 D.66473;
  const struct stringD.2845 D.66424;
  intD.9 iD.42860;
  intD.9 _12;
  intD.9 _15;
  struct SharedBufferPolicyD.39699 * _20;
  boolD.2757 _21;
  intD.9 _22;
  intD.9 _23;
  charD.10 * const _25;
  charD.10 * const _26;
  long unsigned intD.14 _27;
  intD.9 * _28;
  long unsigned intD.14 _29;
  intD.9 & _30;
  intD.9 _31;
  intD.9 _32;
  intD.9 * _33;
  intD.9 & _34;
  long unsigned intD.14 _36;
  intD.9 * _37;
  long unsigned intD.14 _38;
  intD.9 & _39;
  intD.9 _40;
  intD.9 _41;
  intD.9 * _42;
  intD.9 & _43;
  intD.9 _44;
  intD.9 _45;
  intD.9 _46;
  intD.9 _47;
  charD.10 * const _49;
  boolD.2757 _50;
  intD.9 * _51;
  intD.9 & _52;
  intD.9 _53;
  intD.9 _54;
  charD.10 * const _55;
  intD.9 _58;
  charD.10 * _66;
  long unsigned intD.14 __dnew.49_67;
  long unsigned intD.14 __dnew.49_70;
  charD.10 * const _71;
  charD.10 * _72;
  intD.9 _78;
  intD.9 * _79;
  intD.9 & _80;
  intD.9 & _81;
  charD.10 * _83;
  long unsigned intD.14 __dnew.49_84;
  intD.9 pretmp_85;
  long unsigned intD.14 __dnew.49_87;
  charD.10 * const _88;
  charD.10 * _89;
  intD.9 _90;
  const boolD.2757 pretmp_117;
  const boolD.2757 prephitmp_118;
  intD.9 pretmp_129;
  intD.9 pretmp_136;
  intD.9 prephitmp_137;
  intD.9 pretmp_138;
  intD.9 prephitmp_139;
  intD.9 prephitmp_144;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#892ptD.0 => &this_4(D)->D.40430.D.40391
  # DEBUG thisD.66389 => D#892ptD.0
  # DEBUG fD.66390 => f_7(D)
  # PT = nonlocal 
  _20 = &MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_4(D)].D.40349;
  # DEBUG thisD.66426 => _20
  # DEBUG fD.66427 => f_7(D)
  # VUSE <.MEM_6(D)>
  vc_8 = f_7(D)->vcD.33600;
  # DEBUG vcD.66428 => vc_8
  # RANGE ~[2147483648, 18446744071562067967]
  _27 = (long unsigned intD.14) vc_8;
  # DEBUG D#334ptD.0 => &_20->_reserved_slotsD.40245
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _28 = MEM[(intD.9 * *)this_4(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.66432 => _27
  # DEBUG thisD.66431 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _29 = _27 * 4;
  # PT = nonlocal escaped 
  _30 = _28 + _29;
  # VUSE <.MEM_6(D)>
  _31 = *_30;
  if (_31 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_20->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _27
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _32 = _31 + -1;
  # .MEM_95 = VDEF <.MEM_6(D)>
  *_30 = _32;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_20->_private_buf_vc_mapD.40240
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _33 = MEM[(intD.9 * *)this_4(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.66468 => _27
  # DEBUG thisD.66467 => D#43ptD.0
  # PT = nonlocal escaped 
  _34 = _33 + _29;
  # VUSE <.MEM_6(D)>
  i_35 = *_34;
  # DEBUG iD.66433 => i_35
  # RANGE ~[2147483648, 18446744071562067967]
  _36 = (long unsigned intD.14) i_35;
  # DEBUG D#337ptD.0 => &_20->_private_buf_occupancyD.40242
  # VUSE <.MEM_6(D)>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)this_4(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.66470 => _36
  # DEBUG thisD.66469 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _38 = _36 * 4;
  # PT = nonlocal escaped 
  _39 = _37 + _38;
  # VUSE <.MEM_6(D)>
  _40 = *_39;
  _41 = _40 + 1;
  # .MEM_96 = VDEF <.MEM_6(D)>
  *_39 = _41;
  # DEBUG D#338ptD.0 => &_20->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _36
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_20->_private_buf_sizeD.40241
  # VUSE <.MEM_96>
  # PT = nonlocal escaped 
  _42 = MEM[(intD.9 * *)this_4(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.66472 => _36
  # DEBUG thisD.66471 => D#43ptD.0
  # PT = nonlocal escaped 
  _43 = _42 + _38;
  # VUSE <.MEM_96>
  _44 = *_43;
  if (_41 > _44)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 44, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_145 = PHI <.MEM_96(4), .MEM_97(6)>
;;    succ:       44 [100.0%]  (FALLTHRU)

;;   basic block 44, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 44, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_96>
  _45 = MEM[(struct SharedBufferPolicyD.39699 *)this_4(D)]._shared_buf_occupancyD.40244;
  _46 = _45 + 1;
  # .MEM_97 = VDEF <.MEM_96>
  MEM[(struct SharedBufferPolicyD.39699 *)this_4(D)]._shared_buf_occupancyD.40244 = _46;
  # VUSE <.MEM_97>
  _47 = MEM[(struct SharedBufferPolicyD.39699 *)this_4(D)]._shared_buf_sizeD.40243;
  if (_46 > _47)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66466 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66475 => &D.66473
  # DEBUG __sD.66476 => "Shared buffer overflow."
  # DEBUG __aD.66477 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66487 => &D.66473
  # DEBUG D#296ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66490 => D#296ptD.0
  # DEBUG __datD.66489 => &D.66473.D.11539._M_local_bufD.11541
  # DEBUG __aD.66488 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_98 = VDEF <.MEM_97>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66473]._M_pD.11525 = &D.66473.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66486 => "Shared buffer overflow."
  # DEBUG thisD.66480 => &D.66473
  # DEBUG __begD.66479 => "Shared buffer overflow."
  # DEBUG __endD.66478 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66484 => &D.66473
  # DEBUG __begD.66483 => "Shared buffer overflow."
  # DEBUG __endD.66482 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66491 => &D.66473
  # DEBUG __begD.66492 => "Shared buffer overflow."
  # DEBUG __endD.66493 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.66517 => "Shared buffer overflow."
  # DEBUG __lastD.66516 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.66517
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66519 => "Shared buffer overflow."
  # DEBUG __lastD.66518 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_99 = VDEF <.MEM_98>
  __dnewD.66494 = 23;
  # .MEM_100 = VDEF <.MEM_99>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _66 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66473, &__dnewD.66494, 0);
  # DEBUG D#7ptD.0 => &D.66473
  # DEBUG __pD.66513 => _66
  # DEBUG thisD.66512 => D#7ptD.0
  # .MEM_101 = VDEF <.MEM_100>
  MEM[(charD.10 * *)&D.66473] = _66;
  # VUSE <.MEM_101>
  __dnew.49_67 = __dnewD.66494;
  # DEBUG D#8ptD.0 => &D.66473
  # DEBUG __capacityD.66515 => __dnew.49_67
  # DEBUG thisD.66514 => D#8ptD.0
  # .MEM_102 = VDEF <.MEM_101>
  MEM[(size_typeD.11502 *)&D.66473 + 16B] = __dnew.49_67;
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66497 => _66
  # DEBUG __k1D.66496 => "Shared buffer overflow."
  # DEBUG __k2D.66495 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.66500 => _66
  # DEBUG __sD.66499 => "Shared buffer overflow."
  # DEBUG __nD.66498 => 23
  # DEBUG __s1D.66503 => _66
  # DEBUG __s2D.66502 => "Shared buffer overflow."
  # DEBUG __nD.66501 => 23
  # .MEM_104 = VDEF <.MEM_102>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  memcpyD.992 (_66, "Shared buffer overflow.", 23);
  # VUSE <.MEM_104>
  __dnew.49_70 = __dnewD.66494;
  # DEBUG thisD.66507 => &D.66473
  # DEBUG __nD.66506 => __dnew.49_70
  # DEBUG D#9ptD.0 => &D.66473
  # DEBUG __lengthD.66509 => __dnew.49_70
  # DEBUG thisD.66508 => D#9ptD.0
  # .MEM_105 = VDEF <.MEM_104>
  MEM[(size_typeD.11502 *)&D.66473 + 8B] = __dnew.49_70;
  # VUSE <.MEM_105>
  # PT = nonlocal escaped null { D.66473 } (escaped)
  _71 = MEM[(charD.10 * *)&D.66473];
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66473 } (escaped)
  _72 = _71 + __dnew.49_70;
  # DEBUG __c1D.66511 => _72
  # DEBUG __c2D.66510 => D#10ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  MEM[(char_typeD.6629 &)_72] = 0;
  # .MEM_107 = VDEF <.MEM_106>
  __dnewD.66494 ={v} {CLOBBER};
  [LP 2] # .MEM_108 = VDEF <.MEM_107>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_20, &D.66473);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66450 => &D.66473
  # DEBUG thisD.66451 => &D.66473
  # DEBUG thisD.66460 => &D.66473
  # VUSE <.MEM_108>
  # PT = nonlocal escaped null { D.66473 } (escaped)
  _49 = MEM[(charD.10 * *)&D.66473];
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66461 => &D.66473
  if (&D.66473.D.11539._M_local_bufD.11541 != _49)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66473.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66453 => &D.66473
  # DEBUG __sizeD.66452 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66473
  # DEBUG D#185ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66456 => _49
  # DEBUG __aD.66454 => D#183ptD.0
  # DEBUG __nD.66455 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66459 => _49
  # DEBUG thisD.66457 => D#179ptD.0
  # DEBUG D.66458 => D#180ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZdlPvD.2766 (_49);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_108(8), .MEM_109(9)>
  # DEBUG D#189ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG thisD.66462 => D#189ptD.0
  # DEBUG thisD.66463 => D#189ptD.0
  # DEBUG thisD.66464 => D#189ptD.0
  # .MEM_114 = VDEF <.MEM_61>
  D.66473 ={v} {CLOBBER};
  # DEBUG thisD.66465 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_95(3), .MEM_145(44), .MEM_114(10)>
  # VUSE <.MEM_60>
  _50 = f_7(D)->tailD.33603;
  if (_50 != 0)
    goto <bb 12>;
  else
    goto <bb 29>;
;;    succ:       12 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_20->_reserved_slotsD.40245
  # VUSE <.MEM_60>
  # PT = nonlocal escaped 
  _79 = MEM[(intD.9 * *)this_4(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66430 => _27
  # DEBUG thisD.66429 => D#43ptD.0
  # PT = nonlocal escaped 
  _80 = _79 + _29;
  # VUSE <.MEM_60>
  _90 = *_80;
  if (_90 != 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_143 = PHI <.MEM_60(12), .MEM_122(43)>
  # VUSE <.MEM_143>
  _22 = MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_4(D)]._active_vcsD.40305;
  _23 = _22 + -1;
  # .MEM_123 = VDEF <.MEM_143>
  MEM[(struct LimitedSharedBufferPolicyD.40302 *)this_4(D)]._active_vcsD.40305 = _23;
  if (_23 < 0)
    goto <bb 22>;
  else
    goto <bb 32>;
;;    succ:       22 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _81 = PHI <_80(14), _52(16)>
  # _78 = PHI <_90(14), _53(16)>
  # .MEM_69 = PHI <.MEM_60(14), .MEM_122(16)>
  # DEBUG D#341ptD.0 => &_20->_reserved_slotsD.40245
  # DEBUG __nD.66430 => _27
  # DEBUG thisD.66429 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_20->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _27
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _54 = _78 + -1;
  # .MEM_121 = VDEF <.MEM_69>
  *_81 = _54;
  # .MEM_122 = VDEF <.MEM_121>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_20, vc_8);
  # DEBUG D#341ptD.0 => &_20->_reserved_slotsD.40245
  # VUSE <.MEM_122>
  # PT = nonlocal escaped 
  _51 = MEM[(intD.9 * *)this_4(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66430 => _27
  # DEBUG thisD.66429 => D#43ptD.0
  # PT = nonlocal escaped 
  _52 = _51 + _29;
  # VUSE <.MEM_122>
  _53 = *_52;
  if (_53 != 0)
    goto <bb 16>;
  else
    goto <bb 20>;
;;    succ:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L11>: [LP 2]
  # DEBUG thisD.66435 => &D.66473
  # DEBUG thisD.66436 => &D.66473
  # DEBUG thisD.66445 => &D.66473
  # VUSE <.MEM_108>
  # PT = nonlocal escaped null { D.66473 } (escaped)
  _55 = MEM[(charD.10 * *)&D.66473];
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66446 => &D.66473
  if (&D.66473.D.11539._M_local_bufD.11541 != _55)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66473.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66438 => &D.66473
  # DEBUG __sizeD.66437 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66473
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66473
  # DEBUG D#185ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66441 => _55
  # DEBUG __aD.66439 => D#183ptD.0
  # DEBUG __nD.66440 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66444 => _55
  # DEBUG thisD.66442 => D#179ptD.0
  # DEBUG D.66443 => D#180ptD.0
  # .MEM_115 = VDEF <.MEM_108>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZdlPvD.2766 (_55);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       17 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_59 = PHI <.MEM_108(17), .MEM_115(18)>
  # DEBUG D#189ptD.0 => &D.66473._M_dataplusD.11519
  # DEBUG thisD.66447 => D#189ptD.0
  # DEBUG thisD.66448 => D#189ptD.0
  # DEBUG thisD.66449 => D#189ptD.0
  # .MEM_120 = VDEF <.MEM_59>
  D.66473 ={v} {CLOBBER};
  resx 2
;;    succ:      

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 19, next block 43, flags: (NEW, REACHABLE)
;;    pred:       15 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       43 [100.0%]  (FALLTHRU)

;;   basic block 43, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 20, next block 21, flags: (NEW)
;;    pred:       20 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_122>
  _21 = f_7(D)->tailD.33603;
  if (_21 != 0)
    goto <bb 13>;
  else
    goto <bb 21>;
;;    succ:       13 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 0
;;    prev block 43, next block 22, flags: (NEW)
;;    pred:       43 (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_122>
  pretmp_136 = this_4(D)->D.40430.D.40391._max_held_slotsD.40306;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       13 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66423 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66520 => &D.66424
  # DEBUG __sD.66521 => "Number of active VCs fell below zero."
  # DEBUG __aD.66522 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66532 => &D.66424
  # DEBUG D#296ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66535 => D#296ptD.0
  # DEBUG __datD.66534 => &D.66424.D.11539._M_local_bufD.11541
  # DEBUG __aD.66533 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_124 = VDEF <.MEM_123>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66424]._M_pD.11525 = &D.66424.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66531 => "Number of active VCs fell below zero."
  # DEBUG thisD.66525 => &D.66424
  # DEBUG __begD.66524 => "Number of active VCs fell below zero."
  # DEBUG __endD.66523 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66529 => &D.66424
  # DEBUG __begD.66528 => "Number of active VCs fell below zero."
  # DEBUG __endD.66527 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66536 => &D.66424
  # DEBUG __begD.66537 => "Number of active VCs fell below zero."
  # DEBUG __endD.66538 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptrD.55982 => "Number of active VCs fell below zero."
  # DEBUG __firstD.66562 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66561 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316ptD.0 => &__firstD.66562
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66564 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66563 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # .MEM_125 = VDEF <.MEM_124>
  __dnewD.66539 = 37;
  # .MEM_126 = VDEF <.MEM_125>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _83 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66424, &__dnewD.66539, 0);
  # DEBUG D#7ptD.0 => &D.66424
  # DEBUG __pD.66558 => _83
  # DEBUG thisD.66557 => D#7ptD.0
  # .MEM_127 = VDEF <.MEM_126>
  MEM[(charD.10 * *)&D.66424] = _83;
  # VUSE <.MEM_127>
  __dnew.49_84 = __dnewD.66539;
  # DEBUG D#8ptD.0 => &D.66424
  # DEBUG __capacityD.66560 => __dnew.49_84
  # DEBUG thisD.66559 => D#8ptD.0
  # .MEM_128 = VDEF <.MEM_127>
  MEM[(size_typeD.11502 *)&D.66424 + 16B] = __dnew.49_84;
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66542 => _83
  # DEBUG __k1D.66541 => "Number of active VCs fell below zero."
  # DEBUG __k2D.66540 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __dD.66545 => _83
  # DEBUG __sD.66544 => "Number of active VCs fell below zero."
  # DEBUG __nD.66543 => 37
  # DEBUG __s1D.66548 => _83
  # DEBUG __s2D.66547 => "Number of active VCs fell below zero."
  # DEBUG __nD.66546 => 37
  # .MEM_130 = VDEF <.MEM_128>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  memcpyD.992 (_83, "Number of active VCs fell below zero.", 37);
  # VUSE <.MEM_130>
  __dnew.49_87 = __dnewD.66539;
  # DEBUG thisD.66552 => &D.66424
  # DEBUG __nD.66551 => __dnew.49_87
  # DEBUG D#9ptD.0 => &D.66424
  # DEBUG __lengthD.66554 => __dnew.49_87
  # DEBUG thisD.66553 => D#9ptD.0
  # .MEM_131 = VDEF <.MEM_130>
  MEM[(size_typeD.11502 *)&D.66424 + 8B] = __dnew.49_87;
  # VUSE <.MEM_131>
  # PT = nonlocal escaped null { D.66424 } (escaped)
  _88 = MEM[(charD.10 * *)&D.66424];
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66424 } (escaped)
  _89 = _88 + __dnew.49_87;
  # DEBUG __c1D.66556 => _89
  # DEBUG __c2D.66555 => D#10ptD.0
  # .MEM_132 = VDEF <.MEM_131>
  MEM[(char_typeD.6629 &)_89] = 0;
  # .MEM_133 = VDEF <.MEM_132>
  __dnewD.66539 ={v} {CLOBBER};
  [LP 1] # .MEM_134 = VDEF <.MEM_133>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_20, &D.66424);
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 (EH,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66407 => &D.66424
  # DEBUG thisD.66408 => &D.66424
  # DEBUG thisD.66417 => &D.66424
  # VUSE <.MEM_134>
  # PT = nonlocal escaped null { D.66424 } (escaped)
  _25 = MEM[(charD.10 * *)&D.66424];
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66418 => &D.66424
  if (&D.66424.D.11539._M_local_bufD.11541 != _25)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 120, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66424.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66410 => &D.66424
  # DEBUG __sizeD.66409 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66424
  # DEBUG D#185ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66413 => _25
  # DEBUG __aD.66411 => D#183ptD.0
  # DEBUG __nD.66412 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66416 => _25
  # DEBUG thisD.66414 => D#179ptD.0
  # DEBUG D.66415 => D#180ptD.0
  # .MEM_135 = VDEF <.MEM_134>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_134(23), .MEM_135(24)>
  # DEBUG D#189ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG thisD.66419 => D#189ptD.0
  # DEBUG thisD.66420 => D#189ptD.0
  # DEBUG thisD.66421 => D#189ptD.0
  # .MEM_140 = VDEF <.MEM_92>
  D.66424 ={v} {CLOBBER};
  # DEBUG thisD.66422 => NULL
  # DEBUG thisD.56392 => NULL
  # VUSE <.MEM_140>
  pretmp_117 = f_7(D)->tailD.33603;
  goto <bb 29>;
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       22 (EH,EXECUTABLE)
<L10>: [LP 1]
  # DEBUG thisD.66392 => &D.66424
  # DEBUG thisD.66393 => &D.66424
  # DEBUG thisD.66402 => &D.66424
  # VUSE <.MEM_134>
  # PT = nonlocal escaped null { D.66424 } (escaped)
  _26 = MEM[(charD.10 * *)&D.66424];
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66403 => &D.66424
  if (&D.66424.D.11539._M_local_bufD.11541 != _26)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 0
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66424.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66395 => &D.66424
  # DEBUG __sizeD.66394 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66424
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66424
  # DEBUG D#185ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66398 => _26
  # DEBUG __aD.66396 => D#183ptD.0
  # DEBUG __nD.66397 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66401 => _26
  # DEBUG thisD.66399 => D#179ptD.0
  # DEBUG D.66400 => D#180ptD.0
  # .MEM_141 = VDEF <.MEM_134>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  _ZdlPvD.2766 (_26);
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_93 = PHI <.MEM_134(26), .MEM_141(27)>
  # DEBUG D#189ptD.0 => &D.66424._M_dataplusD.11519
  # DEBUG thisD.66404 => D#189ptD.0
  # DEBUG thisD.66405 => D#189ptD.0
  # DEBUG thisD.66406 => D#189ptD.0
  # .MEM_146 = VDEF <.MEM_93>
  D.66424 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 29, loop depth 0, count 0, freq 747, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_94 = PHI <.MEM_140(25), .MEM_60(11)>
  # prephitmp_118 = PHI <pretmp_117(25), _50(11)>
  if (prephitmp_118 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;
;;    succ:       31 [1.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [98.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [98.7%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_94>
  pretmp_85 = this_4(D)->D.40430.D.40391._max_held_slotsD.40306;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       29 [1.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_94>
  pretmp_138 = this_4(D)->D.40430.D.40391._active_vcsD.40305;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 738, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_94(31), .MEM_123(13)>
  # prephitmp_139 = PHI <pretmp_138(31), _23(13)>
  if (prephitmp_139 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;
;;    succ:       34 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 369, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_77>
  pretmp_129 = this_4(D)->D.40430.D.40391._max_held_slotsD.40306;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 369, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-2147483648, 2147483646]
  i_11 = prephitmp_139 + -1;
  # DEBUG iD.42860 => i_11
  # VUSE <.MEM_77>
  _12 = this_4(D)->D.40430.D.40391.D.40349._buf_sizeD.39701;
  # .MEM_13 = VDEF <.MEM_77>
  this_4(D)->D.40430.D.40391._max_held_slotsD.40306 = _12;
  # DEBUG iD.42860 => i_11
  if (i_11 == 0)
    goto <bb 39>;
  else
    goto <bb 35>;
;;    succ:       39 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 336, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 3730, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # i_48 = PHI <i_11(35), i_17(38)>
  # .MEM_82 = PHI <.MEM_13(35), .MEM_82(38)>
  # prephitmp_144 = PHI <_12(35), _15(38)>
  # DEBUG iD.42860 => i_48
  # RANGE [-1073741824, 1073741823]
  _15 = prephitmp_144 >> 1;
  i_17 = i_48 >> 1;
  # DEBUG iD.42860 => i_17
  # DEBUG iD.42860 => i_17
  if (i_17 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 336, maybe hot
;;    prev block 36, next block 42, flags: (NEW)
;;    pred:       36 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [-1073741824, 1073741823]
  # _58 = PHI <_15(36)>
;;    succ:       42 [100.0%]  (FALLTHRU)

;;   basic block 42, loop depth 0, count 0, freq 336, maybe hot
;;    prev block 37, next block 38, flags: (NEW)
;;    pred:       37 [100.0%]  (FALLTHRU)
  # .MEM_119 = VDEF <.MEM_82>
  this_4(D)->D.40430.D.40391._max_held_slotsD.40306 = _58;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 3394, maybe hot
;;    prev block 42, next block 39, flags: (NEW)
;;    pred:       36 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_94(30), .MEM_77(33), .MEM_119(42), .MEM_13(34), .MEM_122(21)>
  # prephitmp_137 = PHI <pretmp_85(30), pretmp_129(33), _58(42), _12(34), pretmp_136(21)>
  if (prephitmp_137 <= 0)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#346ptD.0 => this_4(D)
  # DEBUG D#347ptD.0 => f_7(D)
  # DEBUG D#348ptD.0 => D#347ptD.0
  # DEBUG fD.66565 => D#348ptD.0
  # DEBUG D#349ptD.0 => D#346ptD.0
  # DEBUG thisD.66566 => D#349ptD.0
  # .MEM_147 = VDEF <.MEM_3>
  # USE = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42861 D.66424 D.66473 D.66494 D.66539 } (nonlocal, escaped)
  __assert_failD.24398 ("_max_held_slots > 0", "buffer_state.cpp", 363, &_ZZN11BufferState40ShiftingDynamicLimitedSharedBufferPolicy11SendingFlitEPK4FlitE19__PRETTY_FUNCTION__D.42861);
;;    succ:      

;;   basic block 41, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 40, next block 1, flags: (NEW, REACHABLE)
;;    pred:       39 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual void BufferState::LimitedSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState25LimitedSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2154, decl_uid=40316, cgraph_uid=621, symbol_order=622)


Pass statistics:
----------------

virtual void BufferState::LimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct LimitedSharedBufferPolicyD.40302 * const thisD.42781, const struct FlitD.33590 * const fD.42779)
Eh tree:
   5 cleanup land:{3,<L8>}
   2 cleanup land:{2,<L6>}
{
  size_typeD.11502 __dnewD.66698;
  size_typeD.11502 __dnewD.66653;
  intD.9 iD.66592;
  const intD.9 vcD.66587;
  const struct stringD.2845 D.66632;
  const struct stringD.2845 D.42785;
  struct SharedBufferPolicyD.39699 * _3;
  boolD.2757 _7;
  intD.9 _8;
  intD.9 _9;
  charD.10 * const _14;
  charD.10 * const _16;
  long unsigned intD.14 _31;
  intD.9 * _32;
  long unsigned intD.14 _33;
  intD.9 & _34;
  intD.9 _35;
  intD.9 _36;
  intD.9 * _37;
  intD.9 & _38;
  long unsigned intD.14 _40;
  intD.9 * _41;
  long unsigned intD.14 _42;
  intD.9 & _43;
  intD.9 _44;
  intD.9 _45;
  intD.9 * _46;
  intD.9 & _47;
  intD.9 _48;
  intD.9 _49;
  intD.9 _50;
  intD.9 _51;
  charD.10 * const _53;
  boolD.2757 _54;
  intD.9 * _55;
  intD.9 & _56;
  intD.9 _57;
  intD.9 _58;
  charD.10 * const _59;
  intD.9 * _66;
  intD.9 & _67;
  intD.9 _68;
  charD.10 * _69;
  long unsigned intD.14 __dnew.49_70;
  long unsigned intD.14 __dnew.49_73;
  charD.10 * const _74;
  charD.10 * _75;
  intD.9 & _81;
  intD.9 _82;
  charD.10 * _85;
  long unsigned intD.14 __dnew.49_86;
  long unsigned intD.14 __dnew.49_89;
  charD.10 * const _90;
  charD.10 * _91;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _3 = &this_2(D)->D.40349;
  # DEBUG thisD.66585 => _3
  # DEBUG fD.66586 => f_5(D)
  # VUSE <.MEM_4(D)>
  vc_30 = f_5(D)->vcD.33600;
  # DEBUG vcD.66587 => vc_30
  # RANGE ~[2147483648, 18446744071562067967]
  _31 = (long unsigned intD.14) vc_30;
  # DEBUG D#334ptD.0 => &_3->_reserved_slotsD.40245
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _32 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.66591 => _31
  # DEBUG thisD.66590 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _33 = _31 * 4;
  # PT = nonlocal escaped 
  _34 = _32 + _33;
  # VUSE <.MEM_4(D)>
  _35 = *_34;
  if (_35 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_3->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _31
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _36 = _35 + -1;
  # .MEM_95 = VDEF <.MEM_4(D)>
  *_34 = _36;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_3->_private_buf_vc_mapD.40240
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)this_2(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.66627 => _31
  # DEBUG thisD.66626 => D#43ptD.0
  # PT = nonlocal escaped 
  _38 = _37 + _33;
  # VUSE <.MEM_4(D)>
  i_39 = *_38;
  # DEBUG iD.66592 => i_39
  # RANGE ~[2147483648, 18446744071562067967]
  _40 = (long unsigned intD.14) i_39;
  # DEBUG D#337ptD.0 => &_3->_private_buf_occupancyD.40242
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _41 = MEM[(intD.9 * *)this_2(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.66629 => _40
  # DEBUG thisD.66628 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _42 = _40 * 4;
  # PT = nonlocal escaped 
  _43 = _41 + _42;
  # VUSE <.MEM_4(D)>
  _44 = *_43;
  _45 = _44 + 1;
  # .MEM_96 = VDEF <.MEM_4(D)>
  *_43 = _45;
  # DEBUG D#338ptD.0 => &_3->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _40
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_3->_private_buf_sizeD.40241
  # VUSE <.MEM_96>
  # PT = nonlocal escaped 
  _46 = MEM[(intD.9 * *)this_2(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.66631 => _40
  # DEBUG thisD.66630 => D#43ptD.0
  # PT = nonlocal escaped 
  _47 = _46 + _42;
  # VUSE <.MEM_96>
  _48 = *_47;
  if (_45 > _48)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_118 = PHI <.MEM_96(4), .MEM_97(6)>
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_96>
  _49 = MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_occupancyD.40244;
  _50 = _49 + 1;
  # .MEM_97 = VDEF <.MEM_96>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_occupancyD.40244 = _50;
  # VUSE <.MEM_97>
  _51 = MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_sizeD.40243;
  if (_50 > _51)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66625 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66634 => &D.66632
  # DEBUG __sD.66635 => "Shared buffer overflow."
  # DEBUG __aD.66636 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66646 => &D.66632
  # DEBUG D#296ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66649 => D#296ptD.0
  # DEBUG __datD.66648 => &D.66632.D.11539._M_local_bufD.11541
  # DEBUG __aD.66647 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_98 = VDEF <.MEM_97>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66632]._M_pD.11525 = &D.66632.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66645 => "Shared buffer overflow."
  # DEBUG thisD.66639 => &D.66632
  # DEBUG __begD.66638 => "Shared buffer overflow."
  # DEBUG __endD.66637 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66643 => &D.66632
  # DEBUG __begD.66642 => "Shared buffer overflow."
  # DEBUG __endD.66641 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66650 => &D.66632
  # DEBUG __begD.66651 => "Shared buffer overflow."
  # DEBUG __endD.66652 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.66676 => "Shared buffer overflow."
  # DEBUG __lastD.66675 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.66676
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66678 => "Shared buffer overflow."
  # DEBUG __lastD.66677 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_99 = VDEF <.MEM_98>
  __dnewD.66653 = 23;
  # .MEM_100 = VDEF <.MEM_99>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _69 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66632, &__dnewD.66653, 0);
  # DEBUG D#7ptD.0 => &D.66632
  # DEBUG __pD.66672 => _69
  # DEBUG thisD.66671 => D#7ptD.0
  # .MEM_101 = VDEF <.MEM_100>
  MEM[(charD.10 * *)&D.66632] = _69;
  # VUSE <.MEM_101>
  __dnew.49_70 = __dnewD.66653;
  # DEBUG D#8ptD.0 => &D.66632
  # DEBUG __capacityD.66674 => __dnew.49_70
  # DEBUG thisD.66673 => D#8ptD.0
  # .MEM_102 = VDEF <.MEM_101>
  MEM[(size_typeD.11502 *)&D.66632 + 16B] = __dnew.49_70;
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66656 => _69
  # DEBUG __k1D.66655 => "Shared buffer overflow."
  # DEBUG __k2D.66654 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.66659 => _69
  # DEBUG __sD.66658 => "Shared buffer overflow."
  # DEBUG __nD.66657 => 23
  # DEBUG __s1D.66662 => _69
  # DEBUG __s2D.66661 => "Shared buffer overflow."
  # DEBUG __nD.66660 => 23
  # .MEM_104 = VDEF <.MEM_102>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  memcpyD.992 (_69, "Shared buffer overflow.", 23);
  # VUSE <.MEM_104>
  __dnew.49_73 = __dnewD.66653;
  # DEBUG thisD.66666 => &D.66632
  # DEBUG __nD.66665 => __dnew.49_73
  # DEBUG D#9ptD.0 => &D.66632
  # DEBUG __lengthD.66668 => __dnew.49_73
  # DEBUG thisD.66667 => D#9ptD.0
  # .MEM_105 = VDEF <.MEM_104>
  MEM[(size_typeD.11502 *)&D.66632 + 8B] = __dnew.49_73;
  # VUSE <.MEM_105>
  # PT = nonlocal escaped null { D.66632 } (escaped)
  _74 = MEM[(charD.10 * *)&D.66632];
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66632 } (escaped)
  _75 = _74 + __dnew.49_73;
  # DEBUG __c1D.66670 => _75
  # DEBUG __c2D.66669 => D#10ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  MEM[(char_typeD.6629 &)_75] = 0;
  # .MEM_107 = VDEF <.MEM_106>
  __dnewD.66653 ={v} {CLOBBER};
  [LP 3] # .MEM_108 = VDEF <.MEM_107>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_3, &D.66632);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66609 => &D.66632
  # DEBUG thisD.66610 => &D.66632
  # DEBUG thisD.66619 => &D.66632
  # VUSE <.MEM_108>
  # PT = nonlocal escaped null { D.66632 } (escaped)
  _53 = MEM[(charD.10 * *)&D.66632];
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66620 => &D.66632
  if (&D.66632.D.11539._M_local_bufD.11541 != _53)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66632.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66612 => &D.66632
  # DEBUG __sizeD.66611 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66632
  # DEBUG D#185ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66615 => _53
  # DEBUG __aD.66613 => D#183ptD.0
  # DEBUG __nD.66614 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66618 => _53
  # DEBUG thisD.66616 => D#179ptD.0
  # DEBUG D.66617 => D#180ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZdlPvD.2766 (_53);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_64 = PHI <.MEM_108(8), .MEM_109(9)>
  # DEBUG D#189ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG thisD.66621 => D#189ptD.0
  # DEBUG thisD.66622 => D#189ptD.0
  # DEBUG thisD.66623 => D#189ptD.0
  # .MEM_114 = VDEF <.MEM_64>
  D.66632 ={v} {CLOBBER};
  # DEBUG thisD.66624 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_63 = PHI <.MEM_95(3), .MEM_118(5), .MEM_114(10)>
  # VUSE <.MEM_63>
  _54 = f_5(D)->tailD.33603;
  if (_54 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 1303, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_117 = PHI <.MEM_63(11), .MEM_122(21), .MEM_10(14)>
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_3->_reserved_slotsD.40245
  # VUSE <.MEM_63>
  # PT = nonlocal escaped 
  _66 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66589 => _31
  # DEBUG thisD.66588 => D#43ptD.0
  # PT = nonlocal escaped 
  _81 = _66 + _33;
  # VUSE <.MEM_63>
  _82 = *_81;
  if (_82 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_116 = PHI <.MEM_63(13), .MEM_122(21)>
  # VUSE <.MEM_116>
  _8 = this_2(D)->_active_vcsD.40305;
  _9 = _8 + -1;
  # .MEM_10 = VDEF <.MEM_116>
  this_2(D)->_active_vcsD.40305 = _9;
  if (_9 < 0)
    goto <bb 22>;
  else
    goto <bb 12>;
;;    succ:       22 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # _67 = PHI <_81(15), _56(17)>
  # _68 = PHI <_82(15), _57(17)>
  # .MEM_6 = PHI <.MEM_63(15), .MEM_122(17)>
  # DEBUG D#341ptD.0 => &_3->_reserved_slotsD.40245
  # DEBUG __nD.66589 => _31
  # DEBUG thisD.66588 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_3->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _31
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _58 = _68 + -1;
  # .MEM_121 = VDEF <.MEM_6>
  *_67 = _58;
  # .MEM_122 = VDEF <.MEM_121>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_3, vc_30);
  # DEBUG D#341ptD.0 => &_3->_reserved_slotsD.40245
  # VUSE <.MEM_122>
  # PT = nonlocal escaped 
  _55 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66589 => _31
  # DEBUG thisD.66588 => D#43ptD.0
  # PT = nonlocal escaped 
  _56 = _55 + _33;
  # VUSE <.MEM_122>
  _57 = *_56;
  if (_57 != 0)
    goto <bb 17>;
  else
    goto <bb 21>;
;;    succ:       17 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L8>: [LP 3]
  # DEBUG thisD.66594 => &D.66632
  # DEBUG thisD.66595 => &D.66632
  # DEBUG thisD.66604 => &D.66632
  # VUSE <.MEM_108>
  # PT = nonlocal escaped null { D.66632 } (escaped)
  _59 = MEM[(charD.10 * *)&D.66632];
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66605 => &D.66632
  if (&D.66632.D.11539._M_local_bufD.11541 != _59)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66632.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66597 => &D.66632
  # DEBUG __sizeD.66596 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66632
  # DEBUG D#185ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66600 => _59
  # DEBUG __aD.66598 => D#183ptD.0
  # DEBUG __nD.66599 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66603 => _59
  # DEBUG thisD.66601 => D#179ptD.0
  # DEBUG D.66602 => D#180ptD.0
  # .MEM_115 = VDEF <.MEM_108>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZdlPvD.2766 (_59);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_108(18), .MEM_115(19)>
  # DEBUG D#189ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG thisD.66606 => D#189ptD.0
  # DEBUG thisD.66607 => D#189ptD.0
  # DEBUG thisD.66608 => D#189ptD.0
  # .MEM_120 = VDEF <.MEM_62>
  D.66632 ={v} {CLOBBER};
  resx 5
;;    succ:      

;;   basic block 21, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       16 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_122>
  _7 = f_5(D)->tailD.33603;
  if (_7 != 0)
    goto <bb 14>;
  else
    goto <bb 12>;
;;    succ:       14 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       14 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.42784
  # DEBUG thisD.56390 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42784
  # DEBUG thisD.66679 => &D.42785
  # DEBUG __sD.66680 => "Number of active VCs fell below zero."
  # DEBUG __aD.66681 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66691 => &D.42785
  # DEBUG D#296ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66694 => D#296ptD.0
  # DEBUG __datD.66693 => &D.42785.D.11539._M_local_bufD.11541
  # DEBUG __aD.66692 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_123 = VDEF <.MEM_10>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42785]._M_pD.11525 = &D.42785.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66690 => "Number of active VCs fell below zero."
  # DEBUG thisD.66684 => &D.42785
  # DEBUG __begD.66683 => "Number of active VCs fell below zero."
  # DEBUG __endD.66682 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66688 => &D.42785
  # DEBUG __begD.66687 => "Number of active VCs fell below zero."
  # DEBUG __endD.66686 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66695 => &D.42785
  # DEBUG __begD.66696 => "Number of active VCs fell below zero."
  # DEBUG __endD.66697 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptrD.55982 => "Number of active VCs fell below zero."
  # DEBUG __firstD.66721 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66720 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316ptD.0 => &__firstD.66721
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66723 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66722 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # .MEM_124 = VDEF <.MEM_123>
  __dnewD.66698 = 37;
  # .MEM_125 = VDEF <.MEM_124>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _85 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42785, &__dnewD.66698, 0);
  # DEBUG D#7ptD.0 => &D.42785
  # DEBUG __pD.66717 => _85
  # DEBUG thisD.66716 => D#7ptD.0
  # .MEM_126 = VDEF <.MEM_125>
  MEM[(charD.10 * *)&D.42785] = _85;
  # VUSE <.MEM_126>
  __dnew.49_86 = __dnewD.66698;
  # DEBUG D#8ptD.0 => &D.42785
  # DEBUG __capacityD.66719 => __dnew.49_86
  # DEBUG thisD.66718 => D#8ptD.0
  # .MEM_127 = VDEF <.MEM_126>
  MEM[(size_typeD.11502 *)&D.42785 + 16B] = __dnew.49_86;
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66701 => _85
  # DEBUG __k1D.66700 => "Number of active VCs fell below zero."
  # DEBUG __k2D.66699 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __dD.66704 => _85
  # DEBUG __sD.66703 => "Number of active VCs fell below zero."
  # DEBUG __nD.66702 => 37
  # DEBUG __s1D.66707 => _85
  # DEBUG __s2D.66706 => "Number of active VCs fell below zero."
  # DEBUG __nD.66705 => 37
  # .MEM_129 = VDEF <.MEM_127>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  memcpyD.992 (_85, "Number of active VCs fell below zero.", 37);
  # VUSE <.MEM_129>
  __dnew.49_89 = __dnewD.66698;
  # DEBUG thisD.66711 => &D.42785
  # DEBUG __nD.66710 => __dnew.49_89
  # DEBUG D#9ptD.0 => &D.42785
  # DEBUG __lengthD.66713 => __dnew.49_89
  # DEBUG thisD.66712 => D#9ptD.0
  # .MEM_130 = VDEF <.MEM_129>
  MEM[(size_typeD.11502 *)&D.42785 + 8B] = __dnew.49_89;
  # VUSE <.MEM_130>
  # PT = nonlocal escaped null { D.42785 } (escaped)
  _90 = MEM[(charD.10 * *)&D.42785];
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42785 } (escaped)
  _91 = _90 + __dnew.49_89;
  # DEBUG __c1D.66715 => _91
  # DEBUG __c2D.66714 => D#10ptD.0
  # .MEM_131 = VDEF <.MEM_130>
  MEM[(char_typeD.6629 &)_91] = 0;
  # .MEM_132 = VDEF <.MEM_131>
  __dnewD.66698 ={v} {CLOBBER};
  [LP 2] # .MEM_13 = VDEF <.MEM_132>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_3, &D.42785);
;;    succ:       27 (EH,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56393 => &D.42785
  # DEBUG thisD.56394 => &D.42785
  # DEBUG thisD.56403 => &D.42785
  # VUSE <.MEM_13>
  # PT = nonlocal escaped null { D.42785 } (escaped)
  _16 = MEM[(charD.10 * *)&D.42785];
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56404 => &D.42785
  if (&D.42785.D.11539._M_local_bufD.11541 != _16)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 120, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42785.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56396 => &D.42785
  # DEBUG __sizeD.56395 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42785
  # DEBUG D#185ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56399 => _16
  # DEBUG __aD.56397 => D#183ptD.0
  # DEBUG __nD.56398 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56402 => _16
  # DEBUG thisD.56400 => D#179ptD.0
  # DEBUG D.56401 => D#180ptD.0
  # .MEM_20 = VDEF <.MEM_13>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_19 = PHI <.MEM_13(23), .MEM_20(24)>
  # DEBUG D#189ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG thisD.56405 => D#189ptD.0
  # DEBUG thisD.56406 => D#189ptD.0
  # DEBUG thisD.56407 => D#189ptD.0
  # .MEM_15 = VDEF <.MEM_19>
  D.42785 ={v} {CLOBBER};
  # DEBUG thisD.56391 => &D.42784
  # DEBUG thisD.56392 => &D.42784
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_117(12), .MEM_15(25)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 27, loop depth 0, count 0, freq 0
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       22 (EH,EXECUTABLE)
<L6>: [LP 2]
  # DEBUG thisD.56408 => &D.42785
  # DEBUG thisD.56409 => &D.42785
  # DEBUG thisD.56418 => &D.42785
  # VUSE <.MEM_13>
  # PT = nonlocal escaped null { D.42785 } (escaped)
  _14 = MEM[(charD.10 * *)&D.42785];
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56419 => &D.42785
  if (&D.42785.D.11539._M_local_bufD.11541 != _14)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42785.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56411 => &D.42785
  # DEBUG __sizeD.56410 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42785
  # DEBUG D#185ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56414 => _14
  # DEBUG __aD.56412 => D#183ptD.0
  # DEBUG __nD.56413 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56417 => _14
  # DEBUG thisD.56415 => D#179ptD.0
  # DEBUG D.56416 => D#180ptD.0
  # .MEM_25 = VDEF <.MEM_13>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZdlPvD.2766 (_14);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 1, flags: (NEW, REACHABLE)
;;    pred:       27 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_17 = PHI <.MEM_13(27), .MEM_25(28)>
  # DEBUG D#189ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG thisD.56420 => D#189ptD.0
  # DEBUG thisD.56421 => D#189ptD.0
  # DEBUG thisD.56422 => D#189ptD.0
  # .MEM_18 = VDEF <.MEM_17>
  D.42785 ={v} {CLOBBER};
  resx 2
;;    succ:      

}


Creating dr for f_5(D)->vc
analyze_innermost: success.
	base_address: f_5(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *f_5(D)
	Access function 0: 32
Creating dr for MEM[(int * *)this_2(D) + 192B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 192B]
Creating dr for *_34
analyze_innermost: success.
	base_address: _32 + (long unsigned int) vc_30 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_34
Creating dr for *_34
analyze_innermost: success.
	base_address: _32 + (long unsigned int) vc_30 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_34
Creating dr for MEM[(int * *)this_2(D) + 112B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 112B]
Creating dr for *_38
analyze_innermost: success.
	base_address: _37 + (long unsigned int) vc_30 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_38
Creating dr for MEM[(int * *)this_2(D) + 160B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 160B]
Creating dr for *_43
analyze_innermost: success.
	base_address: _41 + (long unsigned int) i_39 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_43
Creating dr for *_43
analyze_innermost: success.
	base_address: _41 + (long unsigned int) i_39 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_43
Creating dr for MEM[(int * *)this_2(D) + 136B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 136B]
Creating dr for *_47
analyze_innermost: success.
	base_address: _46 + (long unsigned int) i_39 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_47
Creating dr for MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_2(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_2(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_size
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_2(D)]
	Access function 0: 1472
Creating dr for MEM[(struct _Alloc_hider *)&D.66632]._M_p
analyze_innermost: success.
	base_address: &D.66632
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.66632]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.66632]
analyze_innermost: success.
	base_address: &D.66632
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66632]
Creating dr for MEM[(char * *)&D.66632]
analyze_innermost: success.
	base_address: &D.66632
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.66632]
Creating dr for f_5(D)->tail
analyze_innermost: success.
	base_address: f_5(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_5(D)
	Access function 0: 104
Creating dr for MEM[(int * *)this_2(D) + 192B]
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_2(D) + 192B]
Creating dr for *_81
analyze_innermost: success.
	base_address: _66 + (long unsigned int) vc_30 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_81
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for *_67
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_67
Creating dr for f_5(D)->tail
analyze_innermost: success.
	base_address: f_5(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_5(D)
	Access function 0: 104
Creating dr for this_2(D)->_active_vcs
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 1760
Creating dr for this_2(D)->_active_vcs
analyze_innermost: success.
	base_address: this_2(D)
	offset from base address: 0
	constant offset from base address: 220
	step: 0
	aligned to: 256
	base_object: *this_2(D)
	Access function 0: 1760
Creating dr for MEM[(struct _Alloc_hider *)&D.42785]._M_p
analyze_innermost: success.
	base_address: &D.42785
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.42785]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.42785]
analyze_innermost: success.
	base_address: &D.42785
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.42785]
Creating dr for MEM[(char * *)&D.42785]
analyze_innermost: success.
	base_address: &D.42785
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.42785]

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:34, LOOPS:1, CONDITIONS:14, STMTS:400)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    _3 = &this_2(D)->D.40349;
    # DEBUG this => _3
    # DEBUG f => f_5(D)
    # VUSE <.MEM_4(D)>
    vc_30 = f_5(D)->vc;
    # DEBUG vc => vc_30
    _31 = (long unsigned int) vc_30;
    # DEBUG D#334 => &_3->_reserved_slots
    # VUSE <.MEM_4(D)>
    _32 = MEM[(int * *)this_2(D) + 192B];
    # DEBUG D#43 => D#334
    # DEBUG __n => _31
    # DEBUG this => D#43
    _33 = _31 * 4;
    _34 = _32 + _33;
    # VUSE <.MEM_4(D)>
    _35 = *_34;
    if (_35 > 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_11 })
  {
    <bb 3>:
    # DEBUG D#335 => &_3->_reserved_slots
    # DEBUG D#43 => D#335
    # DEBUG __n => _31
    # DEBUG this => D#43
    _36 = _35 + -1;
    # .MEM_95 = VDEF <.MEM_4(D)>
    *_34 = _36;
    goto <bb 11>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_6 bb_5 })
  {
    <bb 4>:
    # DEBUG D#336 => &_3->_private_buf_vc_map
    # VUSE <.MEM_4(D)>
    _37 = MEM[(int * *)this_2(D) + 112B];
    # DEBUG D#43 => D#336
    # DEBUG __n => _31
    # DEBUG this => D#43
    _38 = _37 + _33;
    # VUSE <.MEM_4(D)>
    i_39 = *_38;
    # DEBUG i => i_39
    _40 = (long unsigned int) i_39;
    # DEBUG D#337 => &_3->_private_buf_occupancy
    # VUSE <.MEM_4(D)>
    _41 = MEM[(int * *)this_2(D) + 160B];
    # DEBUG D#43 => D#337
    # DEBUG __n => _40
    # DEBUG this => D#43
    _42 = _40 * 4;
    _43 = _41 + _42;
    # VUSE <.MEM_4(D)>
    _44 = *_43;
    _45 = _44 + 1;
    # .MEM_96 = VDEF <.MEM_4(D)>
    *_43 = _45;
    # DEBUG D#338 => &_3->_private_buf_occupancy
    # DEBUG D#43 => D#338
    # DEBUG __n => _40
    # DEBUG this => D#43
    # DEBUG D#339 => &_3->_private_buf_size
    # VUSE <.MEM_96>
    _46 = MEM[(int * *)this_2(D) + 136B];
    # DEBUG D#43 => D#339
    # DEBUG __n => _40
    # DEBUG this => D#43
    _47 = _46 + _42;
    # VUSE <.MEM_96>
    _48 = *_47;
    if (_45 > _48)
      goto <bb 6>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 bb_6 }, succs = {bb_31 })
  {
    <bb 5>:
    # .MEM_118 = PHI <.MEM_96(4), .MEM_97(6)>

  }
  bb_31 (preds = {bb_5 }, succs = {bb_11 })
  {
    <bb 31>:
    goto <bb 11>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_5 })
  {
    <bb 6>:
    # VUSE <.MEM_96>
    _49 = MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy;
    _50 = _49 + 1;
    # .MEM_97 = VDEF <.MEM_96>
    MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_occupancy = _50;
    # VUSE <.MEM_97>
    _51 = MEM[(struct SharedBufferPolicy *)this_2(D)]._shared_buf_size;
    if (_50 > _51)
      goto <bb 7>;
    else
      goto <bb 5>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 bb_18 })
  {
    <bb 7>:
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG this => &D.66632
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.66632
    # DEBUG D#296 => &D.66632._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.66632.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_98 = VDEF <.MEM_97>
    MEM[(struct _Alloc_hider *)&D.66632]._M_p = &D.66632.D.11539._M_local_buf;
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG this => &D.66632
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.66632
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.66632
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __ptr => "Shared buffer overflow."
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # .MEM_99 = VDEF <.MEM_98>
    __dnew = 23;
    # .MEM_100 = VDEF <.MEM_99>
    _69 = std::__cxx11::basic_string<char>::_M_create (&D.66632, &__dnew, 0);
    # DEBUG D#7 => &D.66632
    # DEBUG __p => _69
    # DEBUG this => D#7
    # .MEM_101 = VDEF <.MEM_100>
    MEM[(char * *)&D.66632] = _69;
    # VUSE <.MEM_101>
    __dnew.49_70 = __dnew;
    # DEBUG D#8 => &D.66632
    # DEBUG __capacity => __dnew.49_70
    # DEBUG this => D#8
    # .MEM_102 = VDEF <.MEM_101>
    MEM[(size_type *)&D.66632 + 16B] = __dnew.49_70;
    # DEBUG D#1 => &D.66632
    # DEBUG this => D#1
    # DEBUG __p => _69
    # DEBUG __k1 => "Shared buffer overflow."
    # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __d => _69
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __n => 23
    # DEBUG __s1 => _69
    # DEBUG __s2 => "Shared buffer overflow."
    # DEBUG __n => 23
    # .MEM_104 = VDEF <.MEM_102>
    __builtin_memcpy (_69, "Shared buffer overflow.", 23);
    # VUSE <.MEM_104>
    __dnew.49_73 = __dnew;
    # DEBUG this => &D.66632
    # DEBUG __n => __dnew.49_73
    # DEBUG D#9 => &D.66632
    # DEBUG __length => __dnew.49_73
    # DEBUG this => D#9
    # .MEM_105 = VDEF <.MEM_104>
    MEM[(size_type *)&D.66632 + 8B] = __dnew.49_73;
    # VUSE <.MEM_105>
    _74 = MEM[(char * *)&D.66632];
    # DEBUG D#1 => &D.66632
    # DEBUG this => D#1
    _75 = _74 + __dnew.49_73;
    # DEBUG __c1 => _75
    # DEBUG __c2 => D#10
    # .MEM_106 = VDEF <.MEM_105>
    MEM[(char_type &)_75] = 0;
    # .MEM_107 = VDEF <.MEM_106>
    __dnew ={v} {CLOBBER};
    # .MEM_108 = VDEF <.MEM_107>
    Module::Error (_3, &D.66632);

  }
  bb_8 (preds = {bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # DEBUG this => &D.66632
    # DEBUG this => &D.66632
    # DEBUG this => &D.66632
    # VUSE <.MEM_108>
    _53 = MEM[(char * *)&D.66632];
    # DEBUG D#1 => &D.66632
    # DEBUG this => D#1
    # DEBUG this => &D.66632
    if (&D.66632.D.11539._M_local_buf != _53)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    # DEBUG D#188 => D.66632.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66632
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66632
    # DEBUG this => D#1
    # DEBUG this => &D.66632
    # DEBUG D#185 => &D.66632._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _53
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _53
    # DEBUG this => D#179
    # DEBUG D.66617 => D#180
    # .MEM_109 = VDEF <.MEM_108>
    operator delete (_53);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_64 = PHI <.MEM_108(8), .MEM_109(9)>
    # DEBUG D#189 => &D.66632._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_114 = VDEF <.MEM_64>
    D.66632 ={v} {CLOBBER};
    # DEBUG this => NULL
    # DEBUG this => NULL

  }
  bb_11 (preds = {bb_3 bb_31 bb_10 }, succs = {bb_13 bb_12 })
  {
    <bb 11>:
    # .MEM_63 = PHI <.MEM_95(3), .MEM_118(31), .MEM_114(10)>
    # VUSE <.MEM_63>
    _54 = f_5(D)->tail;
    if (_54 != 0)
      goto <bb 13>;
    else
      goto <bb 12>;

  }
  bb_12 (preds = {bb_11 bb_30 bb_14 }, succs = {bb_33 })
  {
    <bb 12>:
    # .MEM_117 = PHI <.MEM_63(11), .MEM_122(30), .MEM_10(14)>

  }
  bb_33 (preds = {bb_12 }, succs = {bb_26 })
  {
    <bb 33>:
    goto <bb 26>;

  }
  bb_13 (preds = {bb_11 }, succs = {bb_15 bb_14 })
  {
    <bb 13>:
    # DEBUG D#341 => &_3->_reserved_slots
    # VUSE <.MEM_63>
    _66 = MEM[(int * *)this_2(D) + 192B];
    # DEBUG D#43 => D#341
    # DEBUG __n => _31
    # DEBUG this => D#43
    _81 = _66 + _33;
    # VUSE <.MEM_63>
    _82 = *_81;
    if (_82 != 0)
      goto <bb 15>;
    else
      goto <bb 14>;

  }
  bb_14 (preds = {bb_13 bb_30 }, succs = {bb_22 bb_12 })
  {
    <bb 14>:
    # .MEM_116 = PHI <.MEM_63(13), .MEM_122(30)>
    # VUSE <.MEM_116>
    _8 = this_2(D)->_active_vcs;
    _9 = _8 + -1;
    # .MEM_10 = VDEF <.MEM_116>
    this_2(D)->_active_vcs = _9;
    if (_9 < 0)
      goto <bb 22>;
    else
      goto <bb 12>;

  }
  bb_15 (preds = {bb_13 }, succs = {bb_16 })
  {
    <bb 15>:

  }
  bb_18 (preds = {bb_7 }, succs = {bb_19 bb_20 })
  {
  <L8>:
    # DEBUG this => &D.66632
    # DEBUG this => &D.66632
    # DEBUG this => &D.66632
    # VUSE <.MEM_108>
    _59 = MEM[(char * *)&D.66632];
    # DEBUG D#1 => &D.66632
    # DEBUG this => D#1
    # DEBUG this => &D.66632
    if (&D.66632.D.11539._M_local_buf != _59)
      goto <bb 19>;
    else
      goto <bb 20>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 19>:
    # DEBUG D#188 => D.66632.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.66632
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.66632
    # DEBUG this => D#1
    # DEBUG this => &D.66632
    # DEBUG D#185 => &D.66632._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _59
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _59
    # DEBUG this => D#179
    # DEBUG D.66602 => D#180
    # .MEM_115 = VDEF <.MEM_108>
    operator delete (_59);

  }
  bb_20 (preds = {bb_18 bb_19 }, succs = {})
  {
    <bb 20>:
    # .MEM_62 = PHI <.MEM_108(18), .MEM_115(19)>
    # DEBUG D#189 => &D.66632._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_120 = VDEF <.MEM_62>
    D.66632 ={v} {CLOBBER};
    resx 5

  }
  bb_21 (preds = {bb_16 }, succs = {bb_30 })
  {
    <bb 21>:

  }
  bb_30 (preds = {bb_21 }, succs = {bb_14 bb_12 })
  {
    <bb 30>:
    # VUSE <.MEM_122>
    _7 = f_5(D)->tail;
    if (_7 != 0)
      goto <bb 14>;
    else
      goto <bb 12>;

  }
  bb_22 (preds = {bb_14 }, succs = {bb_27 bb_23 })
  {
    <bb 22>:
    # DEBUG D#63 => &D.42784
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG D#299 => &D.42784
    # DEBUG this => &D.42785
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.42785
    # DEBUG D#296 => &D.42785._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.42785.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_123 = VDEF <.MEM_10>
    MEM[(struct _Alloc_hider *)&D.42785]._M_p = &D.42785.D.11539._M_local_buf;
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG this => &D.42785
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG this => &D.42785
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG this => &D.42785
    # DEBUG __beg => "Number of active VCs fell below zero."
    # DEBUG __end => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG __ptr => "Number of active VCs fell below zero."
    # DEBUG __first => "Number of active VCs fell below zero."
    # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Number of active VCs fell below zero."
    # DEBUG __last => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # .MEM_124 = VDEF <.MEM_123>
    __dnew = 37;
    # .MEM_125 = VDEF <.MEM_124>
    _85 = std::__cxx11::basic_string<char>::_M_create (&D.42785, &__dnew, 0);
    # DEBUG D#7 => &D.42785
    # DEBUG __p => _85
    # DEBUG this => D#7
    # .MEM_126 = VDEF <.MEM_125>
    MEM[(char * *)&D.42785] = _85;
    # VUSE <.MEM_126>
    __dnew.49_86 = __dnew;
    # DEBUG D#8 => &D.42785
    # DEBUG __capacity => __dnew.49_86
    # DEBUG this => D#8
    # .MEM_127 = VDEF <.MEM_126>
    MEM[(size_type *)&D.42785 + 16B] = __dnew.49_86;
    # DEBUG D#1 => &D.42785
    # DEBUG this => D#1
    # DEBUG __p => _85
    # DEBUG __k1 => "Number of active VCs fell below zero."
    # DEBUG __k2 => &MEM[(void *)"Number of active VCs fell below zero." + 37B]
    # DEBUG __d => _85
    # DEBUG __s => "Number of active VCs fell below zero."
    # DEBUG __n => 37
    # DEBUG __s1 => _85
    # DEBUG __s2 => "Number of active VCs fell below zero."
    # DEBUG __n => 37
    # .MEM_129 = VDEF <.MEM_127>
    __builtin_memcpy (_85, "Number of active VCs fell below zero.", 37);
    # VUSE <.MEM_129>
    __dnew.49_89 = __dnew;
    # DEBUG this => &D.42785
    # DEBUG __n => __dnew.49_89
    # DEBUG D#9 => &D.42785
    # DEBUG __length => __dnew.49_89
    # DEBUG this => D#9
    # .MEM_130 = VDEF <.MEM_129>
    MEM[(size_type *)&D.42785 + 8B] = __dnew.49_89;
    # VUSE <.MEM_130>
    _90 = MEM[(char * *)&D.42785];
    # DEBUG D#1 => &D.42785
    # DEBUG this => D#1
    _91 = _90 + __dnew.49_89;
    # DEBUG __c1 => _91
    # DEBUG __c2 => D#10
    # .MEM_131 = VDEF <.MEM_130>
    MEM[(char_type &)_91] = 0;
    # .MEM_132 = VDEF <.MEM_131>
    __dnew ={v} {CLOBBER};
    # .MEM_13 = VDEF <.MEM_132>
    Module::Error (_3, &D.42785);

  }
  bb_23 (preds = {bb_22 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # DEBUG this => &D.42785
    # DEBUG this => &D.42785
    # DEBUG this => &D.42785
    # VUSE <.MEM_13>
    _16 = MEM[(char * *)&D.42785];
    # DEBUG D#1 => &D.42785
    # DEBUG this => D#1
    # DEBUG this => &D.42785
    if (&D.42785.D.11539._M_local_buf != _16)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#188 => D.42785.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.42785
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.42785
    # DEBUG this => D#1
    # DEBUG this => &D.42785
    # DEBUG D#185 => &D.42785._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _16
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _16
    # DEBUG this => D#179
    # DEBUG D.56401 => D#180
    # .MEM_20 = VDEF <.MEM_13>
    operator delete (_16);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {bb_26 })
  {
    <bb 25>:
    # .MEM_19 = PHI <.MEM_13(23), .MEM_20(24)>
    # DEBUG D#189 => &D.42785._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_15 = VDEF <.MEM_19>
    D.42785 ={v} {CLOBBER};
    # DEBUG this => &D.42784
    # DEBUG this => &D.42784

  }
  bb_26 (preds = {bb_33 bb_25 }, succs = {bb_32 })
  {
    <bb 26>:
    # .MEM_1 = PHI <.MEM_117(33), .MEM_15(25)>

  }
  bb_32 (preds = {bb_26 }, succs = {bb_1 })
  {
    <bb 32>:
    # VUSE <.MEM_1>
    return;

  }
  bb_27 (preds = {bb_22 }, succs = {bb_28 bb_29 })
  {
  <L6>:
    # DEBUG this => &D.42785
    # DEBUG this => &D.42785
    # DEBUG this => &D.42785
    # VUSE <.MEM_13>
    _14 = MEM[(char * *)&D.42785];
    # DEBUG D#1 => &D.42785
    # DEBUG this => D#1
    # DEBUG this => &D.42785
    if (&D.42785.D.11539._M_local_buf != _14)
      goto <bb 28>;
    else
      goto <bb 29>;

  }
  bb_28 (preds = {bb_27 }, succs = {bb_29 })
  {
    <bb 28>:
    # DEBUG D#188 => D.42785.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.42785
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.42785
    # DEBUG this => D#1
    # DEBUG this => &D.42785
    # DEBUG D#185 => &D.42785._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _14
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _14
    # DEBUG this => D#179
    # DEBUG D.56416 => D#180
    # .MEM_25 = VDEF <.MEM_13>
    operator delete (_14);

  }
  bb_29 (preds = {bb_27 bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_17 = PHI <.MEM_13(27), .MEM_25(28)>
    # DEBUG D#189 => &D.42785._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_18 = VDEF <.MEM_17>
    D.42785 ={v} {CLOBBER};
    resx 2

  }
  loop_1 (header = 16, latch = 17, niter = )
  {
    bb_16 (preds = {bb_15 bb_17 }, succs = {bb_17 bb_21 })
    {
      <bb 16>:
      # _67 = PHI <_81(15), _56(17)>
      # _68 = PHI <_82(15), _57(17)>
      # .MEM_6 = PHI <.MEM_63(15), .MEM_122(17)>
      # DEBUG D#341 => &_3->_reserved_slots
      # DEBUG __n => _31
      # DEBUG this => D#43
      # DEBUG D#340 => &_3->_reserved_slots
      # DEBUG D#43 => D#340
      # DEBUG __n => _31
      # DEBUG this => D#43
      _58 = _68 + -1;
      # .MEM_121 = VDEF <.MEM_6>
      *_67 = _58;
      # .MEM_122 = VDEF <.MEM_121>
      BufferState::SharedBufferPolicy::ProcessFreeSlot (_3, vc_30);
      # DEBUG D#341 => &_3->_reserved_slots
      # VUSE <.MEM_122>
      _55 = MEM[(int * *)this_2(D) + 192B];
      # DEBUG D#43 => D#341
      # DEBUG __n => _31
      # DEBUG this => D#43
      _56 = _55 + _33;
      # VUSE <.MEM_122>
      _57 = *_56;
      if (_57 != 0)
        goto <bb 17>;
      else
        goto <bb 21>;

    }
    bb_17 (preds = {bb_16 }, succs = {bb_16 })
    {
      <bb 17>:
      goto <bb 16>;

    }
  }
}

Pass statistics:
----------------

virtual void BufferState::LimitedSharedBufferPolicy::SendingFlit(const Flit*) (struct LimitedSharedBufferPolicyD.40302 * const thisD.42781, const struct FlitD.33590 * const fD.42779)
Eh tree:
   5 cleanup land:{3,<L8>}
   2 cleanup land:{2,<L6>}
{
  size_typeD.11502 __dnewD.66698;
  size_typeD.11502 __dnewD.66653;
  intD.9 iD.66592;
  const intD.9 vcD.66587;
  const struct stringD.2845 D.66632;
  const struct stringD.2845 D.42785;
  struct SharedBufferPolicyD.39699 * _3;
  boolD.2757 _7;
  intD.9 _8;
  intD.9 _9;
  charD.10 * const _14;
  charD.10 * const _16;
  long unsigned intD.14 _31;
  intD.9 * _32;
  long unsigned intD.14 _33;
  intD.9 & _34;
  intD.9 _35;
  intD.9 _36;
  intD.9 * _37;
  intD.9 & _38;
  long unsigned intD.14 _40;
  intD.9 * _41;
  long unsigned intD.14 _42;
  intD.9 & _43;
  intD.9 _44;
  intD.9 _45;
  intD.9 * _46;
  intD.9 & _47;
  intD.9 _48;
  intD.9 _49;
  intD.9 _50;
  intD.9 _51;
  charD.10 * const _53;
  boolD.2757 _54;
  intD.9 * _55;
  intD.9 & _56;
  intD.9 _57;
  intD.9 _58;
  charD.10 * const _59;
  intD.9 * _66;
  intD.9 & _67;
  intD.9 _68;
  charD.10 * _69;
  long unsigned intD.14 __dnew.49_70;
  long unsigned intD.14 __dnew.49_73;
  charD.10 * const _74;
  charD.10 * _75;
  intD.9 & _81;
  intD.9 _82;
  charD.10 * _85;
  long unsigned intD.14 __dnew.49_86;
  long unsigned intD.14 __dnew.49_89;
  charD.10 * const _90;
  charD.10 * _91;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _3 = &this_2(D)->D.40349;
  # DEBUG thisD.66585 => _3
  # DEBUG fD.66586 => f_5(D)
  # VUSE <.MEM_4(D)>
  vc_30 = f_5(D)->vcD.33600;
  # DEBUG vcD.66587 => vc_30
  # RANGE ~[2147483648, 18446744071562067967]
  _31 = (long unsigned intD.14) vc_30;
  # DEBUG D#334ptD.0 => &_3->_reserved_slotsD.40245
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _32 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.66591 => _31
  # DEBUG thisD.66590 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _33 = _31 * 4;
  # PT = nonlocal escaped 
  _34 = _32 + _33;
  # VUSE <.MEM_4(D)>
  _35 = *_34;
  if (_35 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_3->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _31
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _36 = _35 + -1;
  # .MEM_95 = VDEF <.MEM_4(D)>
  *_34 = _36;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_3->_private_buf_vc_mapD.40240
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)this_2(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.66627 => _31
  # DEBUG thisD.66626 => D#43ptD.0
  # PT = nonlocal escaped 
  _38 = _37 + _33;
  # VUSE <.MEM_4(D)>
  i_39 = *_38;
  # DEBUG iD.66592 => i_39
  # RANGE ~[2147483648, 18446744071562067967]
  _40 = (long unsigned intD.14) i_39;
  # DEBUG D#337ptD.0 => &_3->_private_buf_occupancyD.40242
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _41 = MEM[(intD.9 * *)this_2(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.66629 => _40
  # DEBUG thisD.66628 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _42 = _40 * 4;
  # PT = nonlocal escaped 
  _43 = _41 + _42;
  # VUSE <.MEM_4(D)>
  _44 = *_43;
  _45 = _44 + 1;
  # .MEM_96 = VDEF <.MEM_4(D)>
  *_43 = _45;
  # DEBUG D#338ptD.0 => &_3->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _40
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_3->_private_buf_sizeD.40241
  # VUSE <.MEM_96>
  # PT = nonlocal escaped 
  _46 = MEM[(intD.9 * *)this_2(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.66631 => _40
  # DEBUG thisD.66630 => D#43ptD.0
  # PT = nonlocal escaped 
  _47 = _46 + _42;
  # VUSE <.MEM_96>
  _48 = *_47;
  if (_45 > _48)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 31, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_118 = PHI <.MEM_96(4), .MEM_97(6)>
;;    succ:       31 [100.0%]  (FALLTHRU)

;;   basic block 31, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 31, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_96>
  _49 = MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_occupancyD.40244;
  _50 = _49 + 1;
  # .MEM_97 = VDEF <.MEM_96>
  MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_occupancyD.40244 = _50;
  # VUSE <.MEM_97>
  _51 = MEM[(struct SharedBufferPolicyD.39699 *)this_2(D)]._shared_buf_sizeD.40243;
  if (_50 > _51)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66625 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66634 => &D.66632
  # DEBUG __sD.66635 => "Shared buffer overflow."
  # DEBUG __aD.66636 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66646 => &D.66632
  # DEBUG D#296ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66649 => D#296ptD.0
  # DEBUG __datD.66648 => &D.66632.D.11539._M_local_bufD.11541
  # DEBUG __aD.66647 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_98 = VDEF <.MEM_97>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66632]._M_pD.11525 = &D.66632.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66645 => "Shared buffer overflow."
  # DEBUG thisD.66639 => &D.66632
  # DEBUG __begD.66638 => "Shared buffer overflow."
  # DEBUG __endD.66637 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66643 => &D.66632
  # DEBUG __begD.66642 => "Shared buffer overflow."
  # DEBUG __endD.66641 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.66650 => &D.66632
  # DEBUG __begD.66651 => "Shared buffer overflow."
  # DEBUG __endD.66652 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.66676 => "Shared buffer overflow."
  # DEBUG __lastD.66675 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.66676
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66678 => "Shared buffer overflow."
  # DEBUG __lastD.66677 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_99 = VDEF <.MEM_98>
  __dnewD.66653 = 23;
  # .MEM_100 = VDEF <.MEM_99>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _69 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66632, &__dnewD.66653, 0);
  # DEBUG D#7ptD.0 => &D.66632
  # DEBUG __pD.66672 => _69
  # DEBUG thisD.66671 => D#7ptD.0
  # .MEM_101 = VDEF <.MEM_100>
  MEM[(charD.10 * *)&D.66632] = _69;
  # VUSE <.MEM_101>
  __dnew.49_70 = __dnewD.66653;
  # DEBUG D#8ptD.0 => &D.66632
  # DEBUG __capacityD.66674 => __dnew.49_70
  # DEBUG thisD.66673 => D#8ptD.0
  # .MEM_102 = VDEF <.MEM_101>
  MEM[(size_typeD.11502 *)&D.66632 + 16B] = __dnew.49_70;
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66656 => _69
  # DEBUG __k1D.66655 => "Shared buffer overflow."
  # DEBUG __k2D.66654 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.66659 => _69
  # DEBUG __sD.66658 => "Shared buffer overflow."
  # DEBUG __nD.66657 => 23
  # DEBUG __s1D.66662 => _69
  # DEBUG __s2D.66661 => "Shared buffer overflow."
  # DEBUG __nD.66660 => 23
  # .MEM_104 = VDEF <.MEM_102>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  memcpyD.992 (_69, "Shared buffer overflow.", 23);
  # VUSE <.MEM_104>
  __dnew.49_73 = __dnewD.66653;
  # DEBUG thisD.66666 => &D.66632
  # DEBUG __nD.66665 => __dnew.49_73
  # DEBUG D#9ptD.0 => &D.66632
  # DEBUG __lengthD.66668 => __dnew.49_73
  # DEBUG thisD.66667 => D#9ptD.0
  # .MEM_105 = VDEF <.MEM_104>
  MEM[(size_typeD.11502 *)&D.66632 + 8B] = __dnew.49_73;
  # VUSE <.MEM_105>
  # PT = nonlocal escaped null { D.66632 } (escaped)
  _74 = MEM[(charD.10 * *)&D.66632];
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.66632 } (escaped)
  _75 = _74 + __dnew.49_73;
  # DEBUG __c1D.66670 => _75
  # DEBUG __c2D.66669 => D#10ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  MEM[(char_typeD.6629 &)_75] = 0;
  # .MEM_107 = VDEF <.MEM_106>
  __dnewD.66653 ={v} {CLOBBER};
  [LP 3] # .MEM_108 = VDEF <.MEM_107>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_3, &D.66632);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66609 => &D.66632
  # DEBUG thisD.66610 => &D.66632
  # DEBUG thisD.66619 => &D.66632
  # VUSE <.MEM_108>
  # PT = nonlocal escaped null { D.66632 } (escaped)
  _53 = MEM[(charD.10 * *)&D.66632];
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66620 => &D.66632
  if (&D.66632.D.11539._M_local_bufD.11541 != _53)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66632.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66612 => &D.66632
  # DEBUG __sizeD.66611 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66632
  # DEBUG D#185ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66615 => _53
  # DEBUG __aD.66613 => D#183ptD.0
  # DEBUG __nD.66614 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66618 => _53
  # DEBUG thisD.66616 => D#179ptD.0
  # DEBUG D.66617 => D#180ptD.0
  # .MEM_109 = VDEF <.MEM_108>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZdlPvD.2766 (_53);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_64 = PHI <.MEM_108(8), .MEM_109(9)>
  # DEBUG D#189ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG thisD.66621 => D#189ptD.0
  # DEBUG thisD.66622 => D#189ptD.0
  # DEBUG thisD.66623 => D#189ptD.0
  # .MEM_114 = VDEF <.MEM_64>
  D.66632 ={v} {CLOBBER};
  # DEBUG thisD.66624 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_63 = PHI <.MEM_95(3), .MEM_118(31), .MEM_114(10)>
  # VUSE <.MEM_63>
  _54 = f_5(D)->tailD.33603;
  if (_54 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 1303, maybe hot
;;    prev block 11, next block 33, flags: (NEW)
;;    pred:       11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [80.9%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_117 = PHI <.MEM_63(11), .MEM_122(30), .MEM_10(14)>
;;    succ:       33 [100.0%]  (FALLTHRU)

;;   basic block 33, loop depth 0, count 0, freq 1303, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 33, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_3->_reserved_slotsD.40245
  # VUSE <.MEM_63>
  # PT = nonlocal escaped 
  _66 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66589 => _31
  # DEBUG thisD.66588 => D#43ptD.0
  # PT = nonlocal escaped 
  _81 = _66 + _33;
  # VUSE <.MEM_63>
  _82 = *_81;
  if (_82 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;
;;    succ:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_116 = PHI <.MEM_63(13), .MEM_122(30)>
  # VUSE <.MEM_116>
  _8 = this_2(D)->_active_vcsD.40305;
  _9 = _8 + -1;
  # .MEM_10 = VDEF <.MEM_116>
  this_2(D)->_active_vcsD.40305 = _9;
  if (_9 < 0)
    goto <bb 22>;
  else
    goto <bb 12>;
;;    succ:       22 [19.1%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [80.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # _67 = PHI <_81(15), _56(17)>
  # _68 = PHI <_82(15), _57(17)>
  # .MEM_6 = PHI <.MEM_63(15), .MEM_122(17)>
  # DEBUG D#341ptD.0 => &_3->_reserved_slotsD.40245
  # DEBUG __nD.66589 => _31
  # DEBUG thisD.66588 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_3->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _31
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _58 = _68 + -1;
  # .MEM_121 = VDEF <.MEM_6>
  *_67 = _58;
  # .MEM_122 = VDEF <.MEM_121>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_3, vc_30);
  # DEBUG D#341ptD.0 => &_3->_reserved_slotsD.40245
  # VUSE <.MEM_122>
  # PT = nonlocal escaped 
  _55 = MEM[(intD.9 * *)this_2(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.66589 => _31
  # DEBUG thisD.66588 => D#43ptD.0
  # PT = nonlocal escaped 
  _56 = _55 + _33;
  # VUSE <.MEM_122>
  _57 = *_56;
  if (_57 != 0)
    goto <bb 17>;
  else
    goto <bb 21>;
;;    succ:       17 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L8>: [LP 3]
  # DEBUG thisD.66594 => &D.66632
  # DEBUG thisD.66595 => &D.66632
  # DEBUG thisD.66604 => &D.66632
  # VUSE <.MEM_108>
  # PT = nonlocal escaped null { D.66632 } (escaped)
  _59 = MEM[(charD.10 * *)&D.66632];
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66605 => &D.66632
  if (&D.66632.D.11539._M_local_bufD.11541 != _59)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66632.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66597 => &D.66632
  # DEBUG __sizeD.66596 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66632
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66632
  # DEBUG D#185ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66600 => _59
  # DEBUG __aD.66598 => D#183ptD.0
  # DEBUG __nD.66599 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66603 => _59
  # DEBUG thisD.66601 => D#179ptD.0
  # DEBUG D.66602 => D#180ptD.0
  # .MEM_115 = VDEF <.MEM_108>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZdlPvD.2766 (_59);
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_108(18), .MEM_115(19)>
  # DEBUG D#189ptD.0 => &D.66632._M_dataplusD.11519
  # DEBUG thisD.66606 => D#189ptD.0
  # DEBUG thisD.66607 => D#189ptD.0
  # DEBUG thisD.66608 => D#189ptD.0
  # .MEM_120 = VDEF <.MEM_62>
  D.66632 ={v} {CLOBBER};
  resx 5
;;    succ:      

;;   basic block 21, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 20, next block 30, flags: (NEW, REACHABLE)
;;    pred:       16 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 21, next block 22, flags: (NEW)
;;    pred:       21 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_122>
  _7 = f_5(D)->tailD.33603;
  if (_7 != 0)
    goto <bb 14>;
  else
    goto <bb 12>;
;;    succ:       14 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 30, next block 23, flags: (NEW, REACHABLE)
;;    pred:       14 [19.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.42784
  # DEBUG thisD.56390 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42784
  # DEBUG thisD.66679 => &D.42785
  # DEBUG __sD.66680 => "Number of active VCs fell below zero."
  # DEBUG __aD.66681 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66691 => &D.42785
  # DEBUG D#296ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66694 => D#296ptD.0
  # DEBUG __datD.66693 => &D.42785.D.11539._M_local_bufD.11541
  # DEBUG __aD.66692 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_123 = VDEF <.MEM_10>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42785]._M_pD.11525 = &D.42785.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66690 => "Number of active VCs fell below zero."
  # DEBUG thisD.66684 => &D.42785
  # DEBUG __begD.66683 => "Number of active VCs fell below zero."
  # DEBUG __endD.66682 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66688 => &D.42785
  # DEBUG __begD.66687 => "Number of active VCs fell below zero."
  # DEBUG __endD.66686 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG thisD.66695 => &D.42785
  # DEBUG __begD.66696 => "Number of active VCs fell below zero."
  # DEBUG __endD.66697 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __ptrD.55982 => "Number of active VCs fell below zero."
  # DEBUG __firstD.66721 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66720 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG D#316ptD.0 => &__firstD.66721
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66723 => "Number of active VCs fell below zero."
  # DEBUG __lastD.66722 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # .MEM_124 = VDEF <.MEM_123>
  __dnewD.66698 = 37;
  # .MEM_125 = VDEF <.MEM_124>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _85 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42785, &__dnewD.66698, 0);
  # DEBUG D#7ptD.0 => &D.42785
  # DEBUG __pD.66717 => _85
  # DEBUG thisD.66716 => D#7ptD.0
  # .MEM_126 = VDEF <.MEM_125>
  MEM[(charD.10 * *)&D.42785] = _85;
  # VUSE <.MEM_126>
  __dnew.49_86 = __dnewD.66698;
  # DEBUG D#8ptD.0 => &D.42785
  # DEBUG __capacityD.66719 => __dnew.49_86
  # DEBUG thisD.66718 => D#8ptD.0
  # .MEM_127 = VDEF <.MEM_126>
  MEM[(size_typeD.11502 *)&D.42785 + 16B] = __dnew.49_86;
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66701 => _85
  # DEBUG __k1D.66700 => "Number of active VCs fell below zero."
  # DEBUG __k2D.66699 => &MEM[(voidD.45 *)"Number of active VCs fell below zero." + 37B]
  # DEBUG __dD.66704 => _85
  # DEBUG __sD.66703 => "Number of active VCs fell below zero."
  # DEBUG __nD.66702 => 37
  # DEBUG __s1D.66707 => _85
  # DEBUG __s2D.66706 => "Number of active VCs fell below zero."
  # DEBUG __nD.66705 => 37
  # .MEM_129 = VDEF <.MEM_127>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  memcpyD.992 (_85, "Number of active VCs fell below zero.", 37);
  # VUSE <.MEM_129>
  __dnew.49_89 = __dnewD.66698;
  # DEBUG thisD.66711 => &D.42785
  # DEBUG __nD.66710 => __dnew.49_89
  # DEBUG D#9ptD.0 => &D.42785
  # DEBUG __lengthD.66713 => __dnew.49_89
  # DEBUG thisD.66712 => D#9ptD.0
  # .MEM_130 = VDEF <.MEM_129>
  MEM[(size_typeD.11502 *)&D.42785 + 8B] = __dnew.49_89;
  # VUSE <.MEM_130>
  # PT = nonlocal escaped null { D.42785 } (escaped)
  _90 = MEM[(charD.10 * *)&D.42785];
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42785 } (escaped)
  _91 = _90 + __dnew.49_89;
  # DEBUG __c1D.66715 => _91
  # DEBUG __c2D.66714 => D#10ptD.0
  # .MEM_131 = VDEF <.MEM_130>
  MEM[(char_typeD.6629 &)_91] = 0;
  # .MEM_132 = VDEF <.MEM_131>
  __dnewD.66698 ={v} {CLOBBER};
  [LP 2] # .MEM_13 = VDEF <.MEM_132>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_3, &D.42785);
;;    succ:       27 (EH,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56393 => &D.42785
  # DEBUG thisD.56394 => &D.42785
  # DEBUG thisD.56403 => &D.42785
  # VUSE <.MEM_13>
  # PT = nonlocal escaped null { D.42785 } (escaped)
  _16 = MEM[(charD.10 * *)&D.42785];
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56404 => &D.42785
  if (&D.42785.D.11539._M_local_bufD.11541 != _16)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 120, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42785.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56396 => &D.42785
  # DEBUG __sizeD.56395 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42785
  # DEBUG D#185ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56399 => _16
  # DEBUG __aD.56397 => D#183ptD.0
  # DEBUG __nD.56398 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56402 => _16
  # DEBUG thisD.56400 => D#179ptD.0
  # DEBUG D.56401 => D#180ptD.0
  # .MEM_20 = VDEF <.MEM_13>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZdlPvD.2766 (_16);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_19 = PHI <.MEM_13(23), .MEM_20(24)>
  # DEBUG D#189ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG thisD.56405 => D#189ptD.0
  # DEBUG thisD.56406 => D#189ptD.0
  # DEBUG thisD.56407 => D#189ptD.0
  # .MEM_15 = VDEF <.MEM_19>
  D.42785 ={v} {CLOBBER};
  # DEBUG thisD.56391 => &D.42784
  # DEBUG thisD.56392 => &D.42784
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 25, next block 32, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_117(33), .MEM_15(25)>
;;    succ:       32 [100.0%]  (FALLTHRU)

;;   basic block 32, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 27, loop depth 0, count 0, freq 0
;;    prev block 32, next block 28, flags: (NEW, REACHABLE)
;;    pred:       22 (EH,EXECUTABLE)
<L6>: [LP 2]
  # DEBUG thisD.56408 => &D.42785
  # DEBUG thisD.56409 => &D.42785
  # DEBUG thisD.56418 => &D.42785
  # VUSE <.MEM_13>
  # PT = nonlocal escaped null { D.42785 } (escaped)
  _14 = MEM[(charD.10 * *)&D.42785];
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56419 => &D.42785
  if (&D.42785.D.11539._M_local_bufD.11541 != _14)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 0
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42785.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56411 => &D.42785
  # DEBUG __sizeD.56410 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42785
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42785
  # DEBUG D#185ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56414 => _14
  # DEBUG __aD.56412 => D#183ptD.0
  # DEBUG __nD.56413 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56417 => _14
  # DEBUG thisD.56415 => D#179ptD.0
  # DEBUG D.56416 => D#180ptD.0
  # .MEM_25 = VDEF <.MEM_13>
  # USE = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  # CLB = nonlocal null { D.42785 D.66632 D.66653 D.66698 } (escaped)
  _ZdlPvD.2766 (_14);
;;    succ:       29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 1, flags: (NEW, REACHABLE)
;;    pred:       27 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_17 = PHI <.MEM_13(27), .MEM_25(28)>
  # DEBUG D#189ptD.0 => &D.42785._M_dataplusD.11519
  # DEBUG thisD.56420 => D#189ptD.0
  # DEBUG thisD.56421 => D#189ptD.0
  # DEBUG thisD.56422 => D#189ptD.0
  # .MEM_18 = VDEF <.MEM_17>
  D.42785 ={v} {CLOBBER};
  resx 2
;;    succ:      

}



;; Function void BufferState::ProcessCredit(const Credit*) (_ZN11BufferState13ProcessCreditEPK6Credit, funcdef_no=2210, decl_uid=42222, cgraph_uid=677, symbol_order=678)


Pass statistics:
----------------


Global statistics (BBS:163, LOOPS:1, CONDITIONS:70, STMTS:1762)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

void BufferState::ProcessCredit(const Credit*) (struct BufferStateD.39590 * const thisD.43843, const struct CreditD.33709 * const cD.43841)
Eh tree:
   31 must_not_throw
   28 cleanup land:{31,<L63>},{16,<L64>}
     29 cleanup land:{17,<L49>}
       30 cleanup land:{18,<L48>}
   24 must_not_throw
   21 cleanup land:{22,<L54>},{10,<L75>}
     22 cleanup land:{11,<L43>}
       23 cleanup land:{12,<L42>}
   17 must_not_throw
   14 cleanup land:{39,<L72>},{33,<L66>},{32,<L65>},{8,<L74>}
     32 cleanup land:{41,<L78>},{38,<L71>},{37,<L70>},{36,<L69>},{35,<L68>},{34,<L67>},{19,<L79>}
       34 cleanup land:{21,<L51>}
       33 cleanup land:{20,<L52>}
     15 cleanup land:{9,<L38>}
   10 cleanup land:{6,<L36>}
   7 must_not_throw
   4 cleanup land:{30,<L62>},{24,<L56>},{23,<L55>},{3,<L73>}
     25 cleanup land:{40,<L76>},{29,<L61>},{28,<L60>},{27,<L59>},{26,<L58>},{25,<L57>},{13,<L77>}
       27 cleanup land:{15,<L45>}
       26 cleanup land:{14,<L46>}
     5 cleanup land:{4,<L33>}
{
  size_typeD.11502 __dnewD.67226;
  size_typeD.11502 __dnewD.67197;
  struct __string_typeD.23016 D.67190;
  struct __string_typeD.23016 D.67189;
  size_typeD.11502 __dnewD.67002;
  size_typeD.11502 __dnewD.66936;
  size_typeD.11502 __dnewD.66907;
  struct __string_typeD.23016 D.66900;
  struct __string_typeD.23016 D.66899;
  const struct _Rb_tree_node_baseD.30545 * const iter$_M_nodeD.56711;
  struct ostringstreamD.3842 errD.43977;
  struct ostringstreamD.3842 errD.43972;
  const intD.9 vcD.43971;
  static const charD.10 _ZZN11BufferState13ProcessCreditEPK6CreditE19__PRETTY_FUNCTION__D.43845[47] = "void BufferState::ProcessCredit(const Credit*)";
  struct __string_typeD.23186 D.43978;
  const struct stringD.2845 D.43976;
  struct __string_typeD.23186 D.43973;
  intD.9 _14;
  boolD.2757 _15;
  long unsigned intD.14 _16;
  intD.9 & _17;
  intD.9 _18;
  charD.10 * const _21;
  struct ModuleD.29620 * _22;
  charD.10 * const _25;
  charD.10 * const _27;
  intD.9 _30;
  intD.9 _31;
  long unsigned intD.14 _33;
  struct ModuleD.29620 * _35;
  charD.10 * const _38;
  charD.10 * const _40;
  long unsigned intD.14 _41;
  intD.9 _42;
  intD.9 _43;
  charD.10 * const _47;
  struct ModuleD.29620 * _48;
  charD.10 * const _51;
  boolD.2757 _56;
  intD.9 _58;
  intD.9 _59;
  struct BufferPolicyD.39592 * _63;
  intD.9 (*__vtbl_ptr_typeD.2760) () * _64;
  intD.9 (*__vtbl_ptr_typeD.2760) () _66;
  charD.10 * const _68;
  intD.9 * _72;
  intD.9 * _73;
  intD.9 * _74;
  intD.9 * _75;
  _Bit_typeD.26520 * _76;
  long unsigned intD.14 _77;
  intD.9 & _78;
  intD.9 & _79;
  long unsigned intD.14 _80;
  long unsigned intD.14 _81;
  unsigned intD.13 _82;
  unsigned intD.13 _83;
  long unsigned intD.14 _84;
  long unsigned intD.14 _85;
  _Bit_typeD.26520 * _86;
  long unsigned intD.14 _87;
  intD.9 & _88;
  charD.10 * const prephitmp_120;
  size_typeD.11502 pretmp_121;
  size_typeD.11502 prephitmp_122;
  charD.10 * const pretmp_123;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.35_131;
  long intD.12 _132;
  sizetype iftmp.36_133;
  struct basic_iosD.3827 * _134;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.37_135;
  const struct _Rb_tree_node_baseD.30545 * _141;
  intD.9 _142;
  long intD.12 _144;
  sizetype iftmp.42_145;
  struct basic_iosD.3827 * _146;
  char_typeD.15410 * const _147;
  char_typeD.15410 * const _148;
  char_typeD.15410 * const _149;
  charD.10 * const _150;
  char_typeD.15410 * const _151;
  charD.10 * const _152;
  charD.10 * const _154;
  charD.10 * const _155;
  charD.10 * const _156;
  long intD.12 __last.51_157;
  long intD.12 __first.52_158;
  difference_typeD.45640 _159;
  long unsigned intD.14 __dnew.48_160;
  charD.10 * _161;
  long unsigned intD.14 __dnew.49_162;
  const char_typeD.6629 _164;
  charD.10 * _167;
  long intD.12 __last.51_169;
  long intD.12 __first.52_170;
  difference_typeD.45640 _171;
  long unsigned intD.14 __dnew.48_172;
  charD.10 * _173;
  long unsigned intD.14 __dnew.49_174;
  const char_typeD.6629 _176;
  charD.10 * _179;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.41_182;
  long intD.12 _183;
  sizetype iftmp.42_184;
  struct basic_iosD.3827 * _185;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.43_186;
  boolD.2757 _197;
  charD.10 * _199;
  long unsigned intD.14 __dnew.49_200;
  long unsigned intD.14 __dnew.49_203;
  charD.10 * const _204;
  charD.10 * _205;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.35_208;
  long intD.12 _209;
  sizetype iftmp.36_210;
  struct basic_iosD.3827 * _211;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.37_212;
  long intD.12 _221;
  sizetype iftmp.42_222;
  struct basic_iosD.3827 * _223;
  char_typeD.15410 * const _224;
  char_typeD.15410 * const _225;
  char_typeD.15410 * const _226;
  charD.10 * const _227;
  char_typeD.15410 * const _228;
  charD.10 * const _229;
  charD.10 * const _231;
  charD.10 * const _232;
  charD.10 * const _233;
  long intD.12 __last.51_234;
  long intD.12 __first.52_235;
  difference_typeD.45640 _236;
  long unsigned intD.14 __dnew.48_237;
  charD.10 * _238;
  long unsigned intD.14 __dnew.49_239;
  const char_typeD.6629 _241;
  charD.10 * _244;
  long intD.12 __last.51_246;
  long intD.12 __first.52_247;
  difference_typeD.45640 _248;
  long unsigned intD.14 __dnew.48_249;
  charD.10 * _250;
  long unsigned intD.14 __dnew.49_251;
  const char_typeD.6629 _253;
  charD.10 * _256;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.41_259;
  long intD.12 _260;
  sizetype iftmp.42_261;
  struct basic_iosD.3827 * _262;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.43_263;
  size_typeD.11502 pretmp_342;
  size_typeD.11502 prephitmp_343;
  charD.10 * const pretmp_344;
  charD.10 * const prephitmp_365;
  size_typeD.11502 pretmp_366;
  size_typeD.11502 prephitmp_367;
  charD.10 * const pretmp_368;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.37_485;
  charD.10 * const prephitmp_493;
  size_typeD.11502 pretmp_494;
  size_typeD.11502 prephitmp_495;
  charD.10 * const pretmp_499;
  charD.10 * const prephitmp_501;
  boolD.2757 _530;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.35_531;
  charD.10 * const _532;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.37_538;
  intD.9 (*__vtbl_ptr_typeD.2760) () * iftmp.35_539;
  boolD.2757 _540;
  charD.10 * const _541;
  boolD.2757 _542;
  boolD.2757 _543;
  charD.10 * const _546;
  charD.10 * const _547;
  boolD.2757 _549;

;;   basic block 2, loop depth 0, count 0, freq 212, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (c_10(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_71 = VDEF <.MEM_11(D)>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  __assert_failD.24398 ("c", "buffer_state.cpp", 574, &_ZZN11BufferState13ProcessCreditEPK6CreditE19__PRETTY_FUNCTION__D.43845);
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 212, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#366ptD.0 => &c_10(D)->vcD.34757
  # DEBUG thisD.56558 => D#366ptD.0
  # DEBUG D#108ptD.0 => &D#366ptD.0->_M_tD.33931
  # VUSE <.MEM_11(D)>
  # PT = nonlocal escaped 
  iter$_M_node_60 = MEM[(struct _Rb_tree_node_baseD.30545 * *)c_10(D) + 24B];
  # DEBUG D#107ptD.0 => D#108ptD.0
  # DEBUG thisD.53989 => D#107ptD.0
  # DEBUG thisD.53981 => NULL
  # DEBUG __xD.53980 => iter$_M_node_60
  # DEBUG iter$_M_nodeD.56711 => iter$_M_node_60
  # DEBUG iter$_M_nodeD.56711 => iter$_M_node_60
  # DEBUG D#375ptD.0 => &c_10(D)->vcD.34757
  # DEBUG thisD.56564 => D#375ptD.0
  # DEBUG D#109ptD.0 => &D#375ptD.0->_M_tD.33931
  # DEBUG thisD.56565 => D#109ptD.0
  # PT = nonlocal 
  _141 = &MEM[(const struct _Rb_treeD.33930 *)c_10(D)]._M_implD.34008._M_headerD.34174;
  # DEBUG thisD.53999 => NULL
  # DEBUG __xD.53998 => _141
  # DEBUG thisD.56561 => &iterD.43846
  # DEBUG __xD.56562 => &D.43970
  if (iter$_M_node_60 != _141)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [98.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [2.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 200, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [2.0%]  (FALSE_VALUE,EXECUTABLE)
;;                132 [2.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_551 = PHI <.MEM_11(D)(4), .MEM_67(132)>
  # DEBUG D#377ptD.0 => {CLOBBER}
  # DEBUG iter$_M_nodeD.56711 => D#377ptD.0
  # VUSE <.MEM_551>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 6, loop depth 0, count 0, freq 206, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [98.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.56568 => &iterD.43846
  # DEBUG thisD.56569 => iter$_M_node_60
  # DEBUG D#367ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33934 *)iter$_M_node_60]._M_value_fieldD.45031
  # DEBUG __rD.54004 => D#367ptD.0
  # VUSE <.MEM_11(D)>
  vc_187 = MEM[(const intD.9 &)iter$_M_node_60 + 32];
  # DEBUG vcD.43971 => vc_187
  if (vc_187 < 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_550 = PHI <.MEM_11(D)(6), .MEM_11(D)(8), .MEM_67(9), .MEM_67(10)>
  # .MEM_70 = VDEF <.MEM_550>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  __assert_failD.24398 ("( vc >= 0 ) && ( vc < _vcs )", "buffer_state.cpp", 581, &_ZZN11BufferState13ProcessCreditEPK6CreditE19__PRETTY_FUNCTION__D.43845);
;;    succ:      

;;   basic block 8, loop depth 0, count 0, freq 206, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_11(D)>
  _142 = this_13(D)->_vcsD.41304;
  if (_142 <= vc_187)
    goto <bb 7>;
  else
    goto <bb 12>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 9594, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       132 [98.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.56568 => &iterD.43846
  # DEBUG thisD.56569 => iter$_M_node_89
  # DEBUG D#367ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33934 *)iter$_M_node_89]._M_value_fieldD.45031
  # DEBUG __rD.54004 => D#367ptD.0
  # VUSE <.MEM_67>
  vc_12 = MEM[(const intD.9 &)iter$_M_node_89 + 32];
  # DEBUG vcD.43971 => vc_12
  if (vc_12 < 0)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9590, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_67>
  _14 = this_13(D)->_vcsD.41304;
  if (vc_12 >= _14)
    goto <bb 7>;
  else
    goto <bb 11>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 9586, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 206, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       8 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 9792, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_137 = PHI <.MEM_11(D)(12), .MEM_67(11)>
  # vc_283 = PHI <vc_187(12), vc_12(11)>
  # PT = nonlocal escaped 
  # iter$_M_node_280 = PHI <iter$_M_node_60(12), iter$_M_node_89(11)>
  # DEBUG iter$_M_nodeD.56711 => iter$_M_node_280
  # DEBUG D#375ptD.0 => &c_10(D)->vcD.34757
  # DEBUG thisD.56564 => D#375ptD.0
  # DEBUG D#109ptD.0 => &D#375ptD.0->_M_tD.33931
  # DEBUG thisD.56565 => D#109ptD.0
  # DEBUG thisD.53999 => NULL
  # DEBUG __xD.53998 => _141
  # DEBUG thisD.56561 => &iterD.43846
  # DEBUG __xD.56562 => &D.43970
  # DEBUG thisD.56568 => &iterD.43846
  # DEBUG thisD.56569 => iter$_M_node_280
  # DEBUG D#367ptD.0 => &MEM[(const struct _Rb_tree_nodeD.33934 *)iter$_M_node_280]._M_value_fieldD.45031
  # DEBUG __rD.54004 => D#367ptD.0
  # DEBUG vcD.43971 => vc_283
  # VUSE <.MEM_137>
  _15 = this_13(D)->_wait_for_tail_creditD.41300;
  if (_15 != 0)
    goto <bb 14>;
  else
    goto <bb 67>;
;;    succ:       14 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 4896, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _16 = (long unsigned intD.14) vc_283;
  # DEBUG D#368ptD.0 => &this_13(D)->_in_use_byD.41306
  # VUSE <.MEM_137>
  # PT = nonlocal escaped 
  _72 = MEM[(intD.9 * *)this_13(D) + 152B];
  # DEBUG D#43ptD.0 => D#368ptD.0
  # DEBUG __nD.56572 => _16
  # DEBUG thisD.56573 => D#43ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _33 = _16 * 4;
  # PT = nonlocal escaped 
  _17 = _72 + _33;
  # VUSE <.MEM_137>
  _18 = *_17;
  if (_18 < 0)
    goto <bb 148>;
  else
    goto <bb 67>;
;;    succ:       148 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 2840, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       148 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_304 = VDEF <.MEM_303>
  errD.43972.D.23246._vptr.basic_ostreamD.20605 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23250 + 24B];
  # .MEM_305 = VDEF <.MEM_304>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23250 + 64B];
  # DEBUG __aD.66744 => 16
  # DEBUG __bD.66743 => 16
  # DEBUG D#192ptD.0 => &errD.43972._M_stringbufD.23189
  # DEBUG thisD.66746 => D#192ptD.0
  # DEBUG __modeD.66745 => NULL
  # DEBUG D#129ptD.0 => &MEM[(struct basic_stringbufD.3837 *)D#192ptD.0].D.23096
  # DEBUG thisD.66747 => D#129ptD.0
  # .MEM_306 = VDEF <.MEM_305>
  MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._vptr.basic_streambufD.15693 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.15702 + 16B];
  # .MEM_307 = VDEF <.MEM_306>
  MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._M_in_begD.15539 = 0B;
  # .MEM_308 = VDEF <.MEM_307>
  MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._M_in_curD.15540 = 0B;
  # .MEM_309 = VDEF <.MEM_308>
  MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._M_in_endD.15541 = 0B;
  # .MEM_310 = VDEF <.MEM_309>
  MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._M_out_begD.15542 = 0B;
  # .MEM_311 = VDEF <.MEM_310>
  MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._M_out_curD.15543 = 0B;
  # .MEM_312 = VDEF <.MEM_311>
  MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._M_out_endD.15544 = 0B;
  # .MEM_313 = VDEF <.MEM_312>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt6localeC1EvD.13428 (&MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._M_buf_localeD.15545);
  # .MEM_314 = VDEF <.MEM_313>
  MEM[(struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096._vptr.basic_streambufD.15693 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEED.23100 + 16B];
  # .MEM_315 = VDEF <.MEM_314>
  MEM[(struct basic_stringbufD.3837 *)&errD.43972 + 8B]._M_modeD.23018 = 16;
  # DEBUG D#128ptD.0 => &MEM[(struct basic_stringbufD.3837 *)D#192ptD.0]._M_stringD.23019
  # DEBUG thisD.66748 => D#128ptD.0
  # DEBUG thisD.54087 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66749 => D#128ptD.0
  # DEBUG D#127ptD.0 => &MEM[(struct basic_stringD.2844 *)D#128ptD.0]._M_dataplusD.11519
  # DEBUG thisD.66752 => D#127ptD.0
  # DEBUG __datD.66751 => &MEM[(struct basic_stringD.2844 *)&errD.43972 + 80B].D.11539._M_local_bufD.11541
  # DEBUG __aD.66750 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_316 = VDEF <.MEM_315>
  MEM[(struct _Alloc_hiderD.11518 *)&errD.43972 + 80B]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&errD.43972 + 80B].D.11539._M_local_bufD.11541;
  # DEBUG thisD.54092 => NULL
  # DEBUG thisD.54078 => NULL
  # DEBUG thisD.66754 => D#128ptD.0
  # DEBUG __nD.66753 => 0
  # DEBUG D#9ptD.0 => D#128ptD.0
  # DEBUG __lengthD.66756 => 0
  # DEBUG thisD.66755 => D#9ptD.0
  # .MEM_317 = VDEF <.MEM_316>
  MEM[(size_typeD.11502 *)&errD.43972 + 88B] = 0;
  # DEBUG D#1ptD.0 => D#128ptD.0
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.66758 => &MEM[(struct basic_stringD.2844 *)&errD.43972 + 80B].D.11539._M_local_bufD.11541
  # DEBUG __c2D.66757 => D#10ptD.0
  # .MEM_318 = VDEF <.MEM_317>
  MEM[(char_typeD.6629 &)&errD.43972 + 96] = 0;
  [LP 12] # .MEM_319 = VDEF <.MEM_318>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.19896 (&MEM[(voidD.45 *)&errD.43972 + 112B], &errD.43972._M_stringbufD.23189.D.23096);
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 (EH,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.35_539 = PHI <iftmp.35_131(15)>
  # PT = nonlocal escaped 
  # iftmp.37_538 = PHI <iftmp.37_135(15)>
<L42>: [LP 12]
  # .MEM_392 = VDEF <.MEM_319>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1EvD.23076 (&errD.43972._M_stringbufD.23189);
  [LP 11] resx 23
;;    succ:       17 (EH,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 (EH,EXECUTABLE)
<L43>: [LP 11]
  # DEBUG thisD.66742 => &errD.43972.D.23246
  # DEBUG __vtt_parmD.66741 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B]
  # VUSE <.MEM_392>
  _144 = MEM[(long intD.12 *)iftmp.35_539 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.42_145 = (sizetype) _144;
  # PT = { D.43972 } (escaped)
  _146 = &errD.43972.D.23246 + iftmp.42_145;
  # .MEM_394 = VDEF <.MEM_392>
  _146->D.19921._vptr.ios_baseD.14897 = iftmp.37_538;
  # .MEM_395 = VDEF <.MEM_394>
  MEM[(struct  &)&errD.43972] ={v} {CLOBBER};
  [LP 22] resx 22
;;    succ:       18 (EH,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 (EH,EXECUTABLE)
<L54>: [LP 22]
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       149 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_34 = PHI <.MEM_303(149), .MEM_395(18)>
<L44>:
  # DEBUG D#193ptD.0 => &errD.43972.D.23249
  # DEBUG thisD.66740 => D#193ptD.0
  # .MEM_396 = VDEF <.MEM_34>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.19930 + 16B];
  [MNT 24] # .MEM_397 = VDEF <.MEM_396>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.14894 (&MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B].D.19921);
  resx 21
;;    succ:      

;;   basic block 20, loop depth 1, count 0, freq 2840, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.56575 => &errD.43972.D.23246
  # DEBUG __sD.56576 => "Received credit for idle VC "
  # DEBUG __sD.56577 => "Received credit for idle VC "
  [LP 23] # .MEM_95 = VDEF <.MEM_319>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&errD.43972.D.23246, "Received credit for idle VC ", 28);
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                137 (EH,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 2840, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 24] # .MEM_20 = VDEF <.MEM_95>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSolsEiD.20513 (&errD.43972.D.23246, vc_283);
  goto <bb 23>;
;;    succ:       22 (EH,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       21 (EH,EXECUTABLE)
<L56>: [LP 24]
  goto <bb 138> (<L34>);
;;    succ:       138 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 2840, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56579 => &errD.43972
  # DEBUG thisD.66765 => &errD.43972._M_stringbufD.23189
  # DEBUG thisD.66888 => &D.43973
  # DEBUG thisD.56029 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.66889 => &D.43973
  # DEBUG D#127ptD.0 => &D.43973._M_dataplusD.11519
  # DEBUG thisD.66892 => D#127ptD.0
  # DEBUG __datD.66891 => &D.43973.D.11539._M_local_bufD.11541
  # DEBUG __aD.66890 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_320 = VDEF <.MEM_20>
  MEM[(struct _Alloc_hiderD.11518 *)&D.43973]._M_pD.11525 = &D.43973.D.11539._M_local_bufD.11541;
  # DEBUG thisD.56034 => NULL
  # DEBUG thisD.54078 => NULL
  # DEBUG thisD.66894 => &D.43973
  # DEBUG __nD.66893 => 0
  # DEBUG D#9ptD.0 => &D.43973
  # DEBUG __lengthD.66896 => 0
  # DEBUG thisD.66895 => D#9ptD.0
  # .MEM_321 = VDEF <.MEM_320>
  MEM[(size_typeD.11502 *)&D.43973 + 8B] = 0;
  # DEBUG D#1ptD.0 => &D.43973
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.66898 => &D.43973.D.11539._M_local_bufD.11541
  # DEBUG __c2D.66897 => D#10ptD.0
  # .MEM_322 = VDEF <.MEM_321>
  MEM[(char_typeD.6629 &)&D.43973 + 16] = 0;
  # DEBUG D#322ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096
  # VUSE <.MEM_322>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _147 = MEM[(char_typeD.15410 * *)&errD.43972 + 48B];
  # DEBUG D#4ptD.0 => D#322ptD.0
  # DEBUG thisD.56026 => D#4ptD.0
  if (_147 != 0B)
    goto <bb 24>;
  else
    goto <bb 46>;
;;    succ:       24 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 2649, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#323ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096
  # DEBUG D#4ptD.0 => D#323ptD.0
  # DEBUG thisD.56045 => D#4ptD.0
  # DEBUG D#324ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096
  # VUSE <.MEM_322>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _148 = MEM[(char_typeD.15410 * *)&errD.43972 + 32B];
  # DEBUG D#5ptD.0 => D#324ptD.0
  # DEBUG thisD.56042 => D#5ptD.0
  if (_147 > _148)
    goto <bb 25>;
  else
    goto <bb 35>;
;;    succ:       25 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 1324, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66871 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#327ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096
  # DEBUG D#4ptD.0 => D#327ptD.0
  # DEBUG thisD.56068 => D#4ptD.0
  # DEBUG D#328ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096
  # VUSE <.MEM_322>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _149 = MEM[(char_typeD.15410 * *)&errD.43972 + 40B];
  # DEBUG D#6ptD.0 => D#328ptD.0
  # DEBUG thisD.56065 => D#6ptD.0
  # DEBUG thisD.66875 => &D.66900
  # DEBUG __begD.66874 => _149
  # DEBUG __endD.66873 => _147
  # DEBUG __aD.66872 => NULL
  # DEBUG thisD.66876 => &D.66900
  # DEBUG D#320ptD.0 => &D.66900._M_dataplusD.11519
  # DEBUG thisD.66879 => D#320ptD.0
  # DEBUG __datD.66878 => &D.66900.D.11539._M_local_bufD.11541
  # DEBUG __aD.66877 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#320ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_347 = VDEF <.MEM_322>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66900]._M_pD.11525 = &D.66900.D.11539._M_local_bufD.11541;
  # DEBUG thisD.66882 => &D.66900
  # DEBUG __begD.66881 => _149
  # DEBUG __endD.66880 => _147
  # DEBUG thisD.66886 => &D.66900
  # DEBUG __begD.66885 => _149
  # DEBUG __endD.66884 => _147
  # DEBUG thisD.66904 => &D.66900
  # DEBUG __begD.66905 => _149
  # DEBUG __endD.66906 => _147
  # DEBUG __ptrD.55982 => _149
  if (_149 == 0B)
    goto <bb 150>;
  else
    goto <bb 152>;
;;    succ:       150 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                152 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 384, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       152 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 25] # .MEM_349 = VDEF <.MEM_348>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _161 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66900, &__dnewD.66907, 0);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 (EH,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 384, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.66900
  # DEBUG __pD.66926 => _161
  # DEBUG thisD.66925 => D#7ptD.0
  # .MEM_350 = VDEF <.MEM_349>
  MEM[(charD.10 * *)&D.66900] = _161;
  # VUSE <.MEM_350>
  __dnew.49_162 = __dnewD.66907;
  # DEBUG D#8ptD.0 => &D.66900
  # DEBUG __capacityD.66928 => __dnew.49_162
  # DEBUG thisD.66927 => D#8ptD.0
  # .MEM_351 = VDEF <.MEM_350>
  MEM[(size_typeD.11502 *)&D.66900 + 16B] = __dnew.49_162;
  # DEBUG D#1ptD.0 => &D.66900
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66910 => _161
  # DEBUG __k1D.66909 => _149
  # DEBUG __k2D.66908 => _147
  # DEBUG __dD.66913 => _161
  # DEBUG __sD.66912 => _149
  # DEBUG __nD.66911 => __dnew.48_160
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 940, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       152 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#1ptD.0 => &D.66900
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66910 => &D.66900.D.11539._M_local_bufD.11541
  # DEBUG __k1D.66909 => _149
  # DEBUG __k2D.66908 => _147
  # DEBUG __dD.66913 => &D.66900.D.11539._M_local_bufD.11541
  # DEBUG __sD.66912 => _149
  # DEBUG __nD.66911 => __dnew.48_160
  if (__dnew.48_160 == 1)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 501, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_348>
  _164 = MEM[(const char_typeD.6629 &)_149];
  # DEBUG D#10ptD.0 => _149
  # DEBUG __c1D.66918 => &D.66900.D.11539._M_local_bufD.11541
  # DEBUG __c2D.66917 => D#10ptD.0
  # .MEM_352 = VDEF <.MEM_348>
  MEM[(char_typeD.6629 &)&D.66900 + 16] = _164;
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 823, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66900 } (nonlocal, escaped)
  # _541 = PHI <&D.66900.D.11539._M_local_bufD.11541(28), _161(27)>
  # .MEM_537 = PHI <.MEM_348(28), .MEM_351(27)>
  # DEBUG D#1ptD.0 => &D.66900
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66910 => _541
  # DEBUG __k1D.66909 => _149
  # DEBUG __k2D.66908 => _147
  # DEBUG __dD.66913 => _541
  # DEBUG __sD.66912 => _149
  # DEBUG __nD.66911 => __dnew.48_160
  # DEBUG __s1D.66916 => _541
  # DEBUG __s2D.66915 => _149
  # DEBUG __nD.66914 => __dnew.48_160
  # .MEM_353 = VDEF <.MEM_537>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  memcpyD.992 (_541, _149, __dnew.48_160);
  # VUSE <.MEM_353>
  pretmp_494 = __dnewD.66907;
  # VUSE <.MEM_353>
  pretmp_499 = MEM[(charD.10 * *)&D.66900];
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 1324, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_193 = PHI <.MEM_352(29), .MEM_353(30)>
  # prephitmp_495 = PHI <__dnew.48_160(29), pretmp_494(30)>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66900 } (nonlocal, escaped)
  # prephitmp_501 = PHI <&D.66900.D.11539._M_local_bufD.11541(29), pretmp_499(30)>
  # DEBUG D#905ptD.0 => __dnewD.66907
  # DEBUG thisD.66920 => &D.66900
  # DEBUG __nD.66919 => D#905ptD.0
  # DEBUG D#9ptD.0 => &D.66900
  # DEBUG __lengthD.66922 => D#905ptD.0
  # DEBUG thisD.66921 => D#9ptD.0
  # .MEM_354 = VDEF <.MEM_193>
  MEM[(size_typeD.11502 *)&D.66900 + 8B] = prephitmp_495;
  # DEBUG D#1ptD.0 => &D.66900
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66900 } (nonlocal, escaped)
  _167 = prephitmp_501 + prephitmp_495;
  # DEBUG __c1D.66924 => _167
  # DEBUG __c2D.66923 => D#10ptD.0
  # .MEM_355 = VDEF <.MEM_354>
  MEM[(char_typeD.6629 &)_167] = 0;
  # .MEM_356 = VDEF <.MEM_355>
  __dnewD.66907 ={v} {CLOBBER};
  # DEBUG thisD.66868 => &D.43973
  # DEBUG __strD.66867 => &D.66900
  # DEBUG thisD.66870 => &D.43973
  # DEBUG __strD.66869 => &D.66900
  [LP 15] # .MEM_357 = VDEF <.MEM_356>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&D.43973, &D.66900);
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                48 (EH,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 1324, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66851 => &D.66900
  # DEBUG thisD.66852 => &D.66900
  # DEBUG thisD.66861 => &D.66900
  # VUSE <.MEM_357>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66900 } (nonlocal, escaped)
  _150 = MEM[(charD.10 * *)&D.66900];
  # DEBUG D#1ptD.0 => &D.66900
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66862 => &D.66900
  if (&D.66900.D.11539._M_local_bufD.11541 != _150)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 1037, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66900.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66854 => &D.66900
  # DEBUG __sizeD.66853 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66900
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66900
  # DEBUG D#185ptD.0 => &D.66900._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66857 => _150
  # DEBUG __aD.66855 => D#183ptD.0
  # DEBUG __nD.66856 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66860 => _150
  # DEBUG thisD.66858 => D#179ptD.0
  # DEBUG D.66859 => D#180ptD.0
  # .MEM_358 = VDEF <.MEM_357>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_150);
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 1324, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_267 = PHI <.MEM_357(32), .MEM_358(33)>
  # DEBUG D#189ptD.0 => &D.66900._M_dataplusD.11519
  # DEBUG thisD.66863 => D#189ptD.0
  # DEBUG thisD.66864 => D#189ptD.0
  # DEBUG thisD.66865 => D#189ptD.0
  # .MEM_363 = VDEF <.MEM_267>
  D.66900 ={v} {CLOBBER};
  # DEBUG thisD.66866 => NULL
  # DEBUG thisD.56077 => NULL
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 1324, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       24 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.66834 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#325ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096
  # DEBUG D#5ptD.0 => D#325ptD.0
  # DEBUG thisD.56114 => D#5ptD.0
  # DEBUG D#326ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096
  # VUSE <.MEM_322>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _151 = MEM[(char_typeD.15410 * *)&errD.43972 + 40B];
  # DEBUG D#6ptD.0 => D#326ptD.0
  # DEBUG thisD.56111 => D#6ptD.0
  # DEBUG thisD.66838 => &D.66899
  # DEBUG __begD.66837 => _151
  # DEBUG __endD.66836 => _148
  # DEBUG __aD.66835 => NULL
  # DEBUG thisD.66839 => &D.66899
  # DEBUG D#320ptD.0 => &D.66899._M_dataplusD.11519
  # DEBUG thisD.66842 => D#320ptD.0
  # DEBUG __datD.66841 => &D.66899.D.11539._M_local_bufD.11541
  # DEBUG __aD.66840 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#320ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_323 = VDEF <.MEM_322>
  MEM[(struct _Alloc_hiderD.11518 *)&D.66899]._M_pD.11525 = &D.66899.D.11539._M_local_bufD.11541;
  # DEBUG thisD.66845 => &D.66899
  # DEBUG __begD.66844 => _151
  # DEBUG __endD.66843 => _148
  # DEBUG thisD.66849 => &D.66899
  # DEBUG __begD.66848 => _151
  # DEBUG __endD.66847 => _148
  # DEBUG thisD.66933 => &D.66899
  # DEBUG __begD.66934 => _151
  # DEBUG __endD.66935 => _148
  # DEBUG __ptrD.55982 => _151
  # RANGE [0, 1]
  _197 = _148 != 0B;
  # RANGE [0, 1]
  _540 = _151 == 0B;
  # RANGE [0, 1]
  _530 = _197 & _540;
  if (_530 != 0)
    goto <bb 154>;
  else
    goto <bb 153>;
;;    succ:       154 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                153 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 384, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       153 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 26] # .MEM_325 = VDEF <.MEM_324>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _173 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.66899, &__dnewD.66936, 0);
  goto <bb 38>;
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                37 (EH,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 (EH,EXECUTABLE)
<L58>: [LP 26]
  goto <bb 57> (<L47>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 384, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.66899
  # DEBUG __pD.66955 => _173
  # DEBUG thisD.66954 => D#7ptD.0
  # .MEM_326 = VDEF <.MEM_325>
  MEM[(charD.10 * *)&D.66899] = _173;
  # VUSE <.MEM_326>
  __dnew.49_174 = __dnewD.66936;
  # DEBUG D#8ptD.0 => &D.66899
  # DEBUG __capacityD.66957 => __dnew.49_174
  # DEBUG thisD.66956 => D#8ptD.0
  # .MEM_327 = VDEF <.MEM_326>
  MEM[(size_typeD.11502 *)&D.66899 + 16B] = __dnew.49_174;
  # DEBUG D#1ptD.0 => &D.66899
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66939 => _173
  # DEBUG __k1D.66938 => _151
  # DEBUG __k2D.66937 => _148
  # DEBUG __dD.66942 => _173
  # DEBUG __sD.66941 => _151
  # DEBUG __nD.66940 => __dnew.48_172
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 940, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       153 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#1ptD.0 => &D.66899
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66939 => &D.66899.D.11539._M_local_bufD.11541
  # DEBUG __k1D.66938 => _151
  # DEBUG __k2D.66937 => _148
  # DEBUG __dD.66942 => &D.66899.D.11539._M_local_bufD.11541
  # DEBUG __sD.66941 => _151
  # DEBUG __nD.66940 => __dnew.48_172
  if (__dnew.48_172 == 1)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                41 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 501, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_324>
  _176 = MEM[(const char_typeD.6629 &)_151];
  # DEBUG D#10ptD.0 => _151
  # DEBUG __c1D.66947 => &D.66899.D.11539._M_local_bufD.11541
  # DEBUG __c2D.66946 => D#10ptD.0
  # .MEM_328 = VDEF <.MEM_324>
  MEM[(char_typeD.6629 &)&D.66899 + 16] = _176;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 823, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66899 } (nonlocal, escaped)
  # _532 = PHI <&D.66899.D.11539._M_local_bufD.11541(39), _173(38)>
  # .MEM_548 = PHI <.MEM_324(39), .MEM_327(38)>
  # DEBUG D#1ptD.0 => &D.66899
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.66939 => _532
  # DEBUG __k1D.66938 => _151
  # DEBUG __k2D.66937 => _148
  # DEBUG __dD.66942 => _532
  # DEBUG __sD.66941 => _151
  # DEBUG __nD.66940 => __dnew.48_172
  # DEBUG __s1D.66945 => _532
  # DEBUG __s2D.66944 => _151
  # DEBUG __nD.66943 => __dnew.48_172
  # .MEM_329 = VDEF <.MEM_548>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  memcpyD.992 (_532, _151, __dnew.48_172);
  # VUSE <.MEM_329>
  pretmp_121 = __dnewD.66936;
  # VUSE <.MEM_329>
  pretmp_123 = MEM[(charD.10 * *)&D.66899];
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 1324, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_269 = PHI <.MEM_328(40), .MEM_329(41)>
  # prephitmp_122 = PHI <__dnew.48_172(40), pretmp_121(41)>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66899 } (nonlocal, escaped)
  # prephitmp_493 = PHI <&D.66899.D.11539._M_local_bufD.11541(40), pretmp_123(41)>
  # DEBUG D#906ptD.0 => __dnewD.66936
  # DEBUG thisD.66949 => &D.66899
  # DEBUG __nD.66948 => D#906ptD.0
  # DEBUG D#9ptD.0 => &D.66899
  # DEBUG __lengthD.66951 => D#906ptD.0
  # DEBUG thisD.66950 => D#9ptD.0
  # .MEM_330 = VDEF <.MEM_269>
  MEM[(size_typeD.11502 *)&D.66899 + 8B] = prephitmp_122;
  # DEBUG D#1ptD.0 => &D.66899
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66899 } (nonlocal, escaped)
  _179 = prephitmp_493 + prephitmp_122;
  # DEBUG __c1D.66953 => _179
  # DEBUG __c2D.66952 => D#10ptD.0
  # .MEM_331 = VDEF <.MEM_330>
  MEM[(char_typeD.6629 &)_179] = 0;
  # .MEM_332 = VDEF <.MEM_331>
  __dnewD.66936 ={v} {CLOBBER};
  # DEBUG thisD.66831 => &D.43973
  # DEBUG __strD.66830 => &D.66899
  # DEBUG thisD.66833 => &D.43973
  # DEBUG __strD.66832 => &D.66899
  [LP 14] # .MEM_333 = VDEF <.MEM_332>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&D.43973, &D.66899);
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 (EH,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 1324, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.66814 => &D.66899
  # DEBUG thisD.66815 => &D.66899
  # DEBUG thisD.66824 => &D.66899
  # VUSE <.MEM_333>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66899 } (nonlocal, escaped)
  _152 = MEM[(charD.10 * *)&D.66899];
  # DEBUG D#1ptD.0 => &D.66899
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66825 => &D.66899
  if (&D.66899.D.11539._M_local_bufD.11541 != _152)
    goto <bb 44>;
  else
    goto <bb 45>;
;;    succ:       44 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 1037, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66899.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66817 => &D.66899
  # DEBUG __sizeD.66816 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66899
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66899
  # DEBUG D#185ptD.0 => &D.66899._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66820 => _152
  # DEBUG __aD.66818 => D#183ptD.0
  # DEBUG __nD.66819 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66823 => _152
  # DEBUG thisD.66821 => D#179ptD.0
  # DEBUG D.66822 => D#180ptD.0
  # .MEM_334 = VDEF <.MEM_333>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_152);
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 1324, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       43 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_270 = PHI <.MEM_333(43), .MEM_334(44)>
  # DEBUG D#189ptD.0 => &D.66899._M_dataplusD.11519
  # DEBUG thisD.66826 => D#189ptD.0
  # DEBUG thisD.66827 => D#189ptD.0
  # DEBUG thisD.66828 => D#189ptD.0
  # .MEM_339 = VDEF <.MEM_270>
  D.66899 ={v} {CLOBBER};
  # DEBUG thisD.66829 => NULL
  # DEBUG thisD.56123 => NULL
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 191, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       23 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.66811 => &D.43973
  # DEBUG __strD.66810 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B]._M_stringD.23019
  # DEBUG thisD.66813 => &D.43973
  # DEBUG __strD.66812 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B]._M_stringD.23019
  [LP 27] # .MEM_371 = VDEF <.MEM_322>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&D.43973, &MEM[(const struct basic_stringbufD.3837 *)&errD.43972 + 8B]._M_stringD.23019);
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 (EH,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       46 (EH,EXECUTABLE)
<L59>: [LP 27]
  goto <bb 57> (<L47>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       31 (EH,EXECUTABLE)
<L45>: [LP 15]
  # DEBUG thisD.66795 => &D.66900
  # DEBUG thisD.66796 => &D.66900
  # DEBUG thisD.66805 => &D.66900
  # VUSE <.MEM_357>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66900 } (nonlocal, escaped)
  _154 = MEM[(charD.10 * *)&D.66900];
  # DEBUG D#1ptD.0 => &D.66900
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66806 => &D.66900
  if (&D.66900.D.11539._M_local_bufD.11541 != _154)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66900.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66798 => &D.66900
  # DEBUG __sizeD.66797 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66900
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66900
  # DEBUG D#185ptD.0 => &D.66900._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66801 => _154
  # DEBUG __aD.66799 => D#183ptD.0
  # DEBUG __nD.66800 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66804 => _154
  # DEBUG thisD.66802 => D#179ptD.0
  # DEBUG D.66803 => D#180ptD.0
  # .MEM_364 = VDEF <.MEM_357>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_154);
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_271 = PHI <.MEM_357(48), .MEM_364(49)>
  # DEBUG D#189ptD.0 => &D.66900._M_dataplusD.11519
  # DEBUG thisD.66807 => D#189ptD.0
  # DEBUG thisD.66808 => D#189ptD.0
  # DEBUG thisD.66809 => D#189ptD.0
  # .MEM_369 = VDEF <.MEM_271>
  D.66900 ={v} {CLOBBER};
  [LP 28] resx 27
;;    succ:       51 (EH,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 (EH,EXECUTABLE)
<L60>: [LP 28]
  goto <bb 57> (<L47>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       42 (EH,EXECUTABLE)
<L46>: [LP 14]
  # DEBUG thisD.66779 => &D.66899
  # DEBUG thisD.66780 => &D.66899
  # DEBUG thisD.66789 => &D.66899
  # VUSE <.MEM_333>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.66899 } (nonlocal, escaped)
  _155 = MEM[(charD.10 * *)&D.66899];
  # DEBUG D#1ptD.0 => &D.66899
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66790 => &D.66899
  if (&D.66899.D.11539._M_local_bufD.11541 != _155)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.66899.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66782 => &D.66899
  # DEBUG __sizeD.66781 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.66899
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.66899
  # DEBUG D#185ptD.0 => &D.66899._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66785 => _155
  # DEBUG __aD.66783 => D#183ptD.0
  # DEBUG __nD.66784 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66788 => _155
  # DEBUG thisD.66786 => D#179ptD.0
  # DEBUG D.66787 => D#180ptD.0
  # .MEM_340 = VDEF <.MEM_333>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_155);
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       52 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_272 = PHI <.MEM_333(52), .MEM_340(53)>
  # DEBUG D#189ptD.0 => &D.66899._M_dataplusD.11519
  # DEBUG thisD.66791 => D#189ptD.0
  # DEBUG thisD.66792 => D#189ptD.0
  # DEBUG thisD.66793 => D#189ptD.0
  # .MEM_345 = VDEF <.MEM_272>
  D.66899 ={v} {CLOBBER};
  [LP 29] resx 26
;;    succ:       55 (EH,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 54, next block 56, flags: (NEW)
;;    pred:       54 (EH,EXECUTABLE)
<L61>: [LP 29]
  goto <bb 57> (<L47>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       26 (EH,EXECUTABLE)
<L57>: [LP 25]
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                151 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                155 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_273 = PHI <.MEM_349(56), .MEM_325(37), .MEM_371(47), .MEM_369(51), .MEM_345(55), .MEM_370(151), .MEM_346(155)>
<L47>:
  # DEBUG thisD.66768 => &D.43973
  # DEBUG thisD.66769 => &D.43973
  # DEBUG thisD.56188 => &D.43973
  # VUSE <.MEM_273>
  # PT = nonlocal escaped { D.43973 } (escaped)
  _156 = MEM[(charD.10 * *)&D.43973];
  # DEBUG D#1ptD.0 => &D.43973
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56189 => &D.43973
  if (&D.43973.D.11539._M_local_bufD.11541 != _156)
    goto <bb 58>;
  else
    goto <bb 59>;
;;    succ:       58 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43973.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66771 => &D.43973
  # DEBUG __sizeD.66770 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43973
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43973
  # DEBUG D#185ptD.0 => &D.43973._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66774 => _156
  # DEBUG __aD.66772 => D#183ptD.0
  # DEBUG __nD.66773 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66777 => _156
  # DEBUG thisD.66775 => D#179ptD.0
  # DEBUG D.66776 => D#180ptD.0
  # .MEM_391 = VDEF <.MEM_273>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_156);
;;    succ:       59 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       57 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_274 = PHI <.MEM_273(57), .MEM_391(58)>
  # DEBUG D#189ptD.0 => &D.43973._M_dataplusD.11519
  # DEBUG thisD.56190 => D#189ptD.0
  # DEBUG thisD.56191 => D#189ptD.0
  # DEBUG thisD.56192 => D#189ptD.0
  [LP 30] resx 25
;;    succ:       60 (EH,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 59, next block 61, flags: (NEW)
;;    pred:       59 (EH,EXECUTABLE)
<L62>: [LP 30]
  goto <bb 138> (<L34>);
;;    succ:       138 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 1, count 0, freq 2839, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_275 = PHI <.MEM_339(45), .MEM_363(34), .MEM_371(46)>
  # PT = nonlocal 
  _22 = &this_13(D)->D.42278;
  [LP 4] # .MEM_23 = VDEF <.MEM_275>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_22, &D.43973);
;;    succ:       133 (EH,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 1, count 0, freq 2839, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56580 => &D.43973
  # DEBUG thisD.56581 => &D.43973
  # DEBUG thisD.56590 => &D.43973
  # VUSE <.MEM_23>
  # PT = nonlocal escaped { D.43973 } (escaped)
  _21 = MEM[(charD.10 * *)&D.43973];
  # DEBUG D#1ptD.0 => &D.43973
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56591 => &D.43973
  if (&D.43973.D.11539._M_local_bufD.11541 != _21)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                64 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 1, count 0, freq 1982, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       62 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43973.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56583 => &D.43973
  # DEBUG __sizeD.56582 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43973
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43973
  # DEBUG D#185ptD.0 => &D.43973._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56586 => _21
  # DEBUG __aD.56584 => D#183ptD.0
  # DEBUG __nD.56585 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56589 => _21
  # DEBUG thisD.56587 => D#179ptD.0
  # DEBUG D.56588 => D#180ptD.0
  # .MEM_97 = VDEF <.MEM_23>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_21);
;;    succ:       64 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 1, count 0, freq 2839, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       62 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_23(62), .MEM_97(63)>
  # DEBUG D#189ptD.0 => &D.43973._M_dataplusD.11519
  # DEBUG thisD.56592 => D#189ptD.0
  # DEBUG thisD.56593 => D#189ptD.0
  # DEBUG thisD.56594 => D#189ptD.0
  # .MEM_24 = VDEF <.MEM_53>
  D.43973 ={v} {CLOBBER};
  # DEBUG thisD.66962 => &errD.43972
  # .MEM_372 = VDEF <.MEM_24>
  errD.43972.D.23246._vptr.basic_ostreamD.20605 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23250 + 24B];
  # .MEM_373 = VDEF <.MEM_372>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23250 + 64B];
  # DEBUG thisD.66966 => &errD.43972._M_stringbufD.23189
  # .MEM_374 = VDEF <.MEM_373>
  MEM[(struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096._vptr.basic_streambufD.15693 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEED.23100 + 16B];
  # DEBUG D#191ptD.0 => &MEM[(struct basic_stringbufD.3837 *)&errD.43972 + 8B]._M_stringD.23019
  # DEBUG thisD.66967 => D#191ptD.0
  # DEBUG thisD.66968 => D#191ptD.0
  # DEBUG thisD.66977 => D#191ptD.0
  # VUSE <.MEM_374>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _25 = MEM[(charD.10 * *)&errD.43972 + 80B];
  # DEBUG D#1ptD.0 => D#191ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.66978 => D#191ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&errD.43972 + 80B].D.11539._M_local_bufD.11541 != _25)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 65, loop depth 1, count 0, freq 2224, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#191ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.66970 => D#191ptD.0
  # DEBUG __sizeD.66969 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#191ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#191ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.66973 => _25
  # DEBUG __aD.66971 => D#183ptD.0
  # DEBUG __nD.66972 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.66976 => _25
  # DEBUG thisD.66974 => D#179ptD.0
  # DEBUG D.66975 => D#180ptD.0
  # .MEM_375 = VDEF <.MEM_374>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 1, count 0, freq 2839, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       64 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_276 = PHI <.MEM_374(64), .MEM_375(65)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG thisD.66979 => D#189ptD.0
  # DEBUG thisD.66980 => D#189ptD.0
  # DEBUG thisD.66981 => D#189ptD.0
  # .MEM_379 = VDEF <.MEM_276>
  MEM[(struct  &)&errD.43972 + 80] ={v} {CLOBBER};
  # DEBUG D#190ptD.0 => &MEM[(struct basic_stringbufD.3837 *)&errD.43972 + 8B].D.23096
  # DEBUG thisD.66982 => D#190ptD.0
  # .MEM_380 = VDEF <.MEM_379>
  MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._vptr.basic_streambufD.15693 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.15702 + 16B];
  # .MEM_381 = VDEF <.MEM_380>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt6localeD1EvD.13432 (&MEM[(struct basic_streambufD.3829 *)&errD.43972 + 8B]._M_buf_localeD.15545);
  # .MEM_383 = VDEF <.MEM_381>
  MEM[(struct  &)&errD.43972 + 8] ={v} {CLOBBER};
  # DEBUG thisD.66965 => &errD.43972.D.23246
  # DEBUG __vtt_parmD.66964 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B]
  # VUSE <.MEM_383>
  # PT = nonlocal escaped 
  iftmp.41_182 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B];
  # VUSE <.MEM_383>
  _183 = MEM[(long intD.12 *)iftmp.41_182 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.42_184 = (sizetype) _183;
  # PT = { D.43972 } (escaped)
  _185 = &errD.43972.D.23246 + iftmp.42_184;
  # VUSE <.MEM_383>
  # PT = nonlocal escaped 
  iftmp.43_186 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 16B];
  # .MEM_385 = VDEF <.MEM_383>
  _185->D.19921._vptr.ios_baseD.14897 = iftmp.43_186;
  # .MEM_386 = VDEF <.MEM_385>
  MEM[(struct  &)&errD.43972] ={v} {CLOBBER};
  # DEBUG D#195ptD.0 => &errD.43972.D.23249
  # DEBUG thisD.66963 => D#195ptD.0
  # .MEM_387 = VDEF <.MEM_386>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.19930 + 16B];
  # .MEM_388 = VDEF <.MEM_387>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.14894 (&MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B].D.19921);
  # .MEM_26 = VDEF <.MEM_388>
  errD.43972 ={v} {CLOBBER};
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 1, count 0, freq 9791, maybe hot
;;   Invalid sum of incoming frequencies 11309, should be 9791
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       14 [73.0%]  (FALSE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_137(14), .MEM_26(66), .MEM_137(13)>
  # VUSE <.MEM_4>
  _30 = this_13(D)->_occupancyD.41302;
  _31 = _30 + -1;
  # .MEM_32 = VDEF <.MEM_4>
  this_13(D)->_occupancyD.41302 = _31;
  if (_31 < 0)
    goto <bb 68>;
  else
    goto <bb 72>;
;;    succ:       68 [13.1%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [86.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 68, loop depth 1, count 0, freq 1285, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       67 [13.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.43975
  # DEBUG thisD.56595 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.43975
  # DEBUG thisD.66983 => &D.43976
  # DEBUG __sD.66984 => "Buffer occupancy fell below zero."
  # DEBUG __aD.66985 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.66995 => &D.43976
  # DEBUG D#296ptD.0 => &D.43976._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.66998 => D#296ptD.0
  # DEBUG __datD.66997 => &D.43976.D.11539._M_local_bufD.11541
  # DEBUG __aD.66996 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_399 = VDEF <.MEM_32>
  MEM[(struct _Alloc_hiderD.11518 *)&D.43976]._M_pD.11525 = &D.43976.D.11539._M_local_bufD.11541;
  # DEBUG __sD.66994 => "Buffer occupancy fell below zero."
  # DEBUG thisD.66988 => &D.43976
  # DEBUG __begD.66987 => "Buffer occupancy fell below zero."
  # DEBUG __endD.66986 => &MEM[(voidD.45 *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG thisD.66992 => &D.43976
  # DEBUG __begD.66991 => "Buffer occupancy fell below zero."
  # DEBUG __endD.66990 => &MEM[(voidD.45 *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG thisD.66999 => &D.43976
  # DEBUG __begD.67000 => "Buffer occupancy fell below zero."
  # DEBUG __endD.67001 => &MEM[(voidD.45 *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG __ptrD.55982 => "Buffer occupancy fell below zero."
  # DEBUG __firstD.67025 => "Buffer occupancy fell below zero."
  # DEBUG __lastD.67024 => &MEM[(voidD.45 *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG D#316ptD.0 => &__firstD.67025
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.67027 => "Buffer occupancy fell below zero."
  # DEBUG __lastD.67026 => &MEM[(voidD.45 *)"Buffer occupancy fell below zero." + 33B]
  # .MEM_400 = VDEF <.MEM_399>
  __dnewD.67002 = 33;
  # .MEM_401 = VDEF <.MEM_400>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _199 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.43976, &__dnewD.67002, 0);
  # DEBUG D#7ptD.0 => &D.43976
  # DEBUG __pD.67021 => _199
  # DEBUG thisD.67020 => D#7ptD.0
  # .MEM_402 = VDEF <.MEM_401>
  MEM[(charD.10 * *)&D.43976] = _199;
  # VUSE <.MEM_402>
  __dnew.49_200 = __dnewD.67002;
  # DEBUG D#8ptD.0 => &D.43976
  # DEBUG __capacityD.67023 => __dnew.49_200
  # DEBUG thisD.67022 => D#8ptD.0
  # .MEM_403 = VDEF <.MEM_402>
  MEM[(size_typeD.11502 *)&D.43976 + 16B] = __dnew.49_200;
  # DEBUG D#1ptD.0 => &D.43976
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.67005 => _199
  # DEBUG __k1D.67004 => "Buffer occupancy fell below zero."
  # DEBUG __k2D.67003 => &MEM[(voidD.45 *)"Buffer occupancy fell below zero." + 33B]
  # DEBUG __dD.67008 => _199
  # DEBUG __sD.67007 => "Buffer occupancy fell below zero."
  # DEBUG __nD.67006 => 33
  # DEBUG __s1D.67011 => _199
  # DEBUG __s2D.67010 => "Buffer occupancy fell below zero."
  # DEBUG __nD.67009 => 33
  # .MEM_405 = VDEF <.MEM_403>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  memcpyD.992 (_199, "Buffer occupancy fell below zero.", 33);
  # VUSE <.MEM_405>
  __dnew.49_203 = __dnewD.67002;
  # DEBUG thisD.67015 => &D.43976
  # DEBUG __nD.67014 => __dnew.49_203
  # DEBUG D#9ptD.0 => &D.43976
  # DEBUG __lengthD.67017 => __dnew.49_203
  # DEBUG thisD.67016 => D#9ptD.0
  # .MEM_406 = VDEF <.MEM_405>
  MEM[(size_typeD.11502 *)&D.43976 + 8B] = __dnew.49_203;
  # VUSE <.MEM_406>
  # PT = nonlocal escaped null { D.43976 } (escaped)
  _204 = MEM[(charD.10 * *)&D.43976];
  # DEBUG D#1ptD.0 => &D.43976
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.43976 } (escaped)
  _205 = _204 + __dnew.49_203;
  # DEBUG __c1D.67019 => _205
  # DEBUG __c2D.67018 => D#10ptD.0
  # .MEM_407 = VDEF <.MEM_406>
  MEM[(char_typeD.6629 &)_205] = 0;
  # .MEM_408 = VDEF <.MEM_407>
  __dnewD.67002 ={v} {CLOBBER};
  # PT = nonlocal 
  _35 = &this_13(D)->D.42278;
  [LP 6] # .MEM_36 = VDEF <.MEM_408>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_35, &D.43976);
;;    succ:       139 (EH,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 1, count 0, freq 1285, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56598 => &D.43976
  # DEBUG thisD.56599 => &D.43976
  # DEBUG thisD.56608 => &D.43976
  # VUSE <.MEM_36>
  # PT = nonlocal escaped null { D.43976 } (escaped)
  _38 = MEM[(charD.10 * *)&D.43976];
  # DEBUG D#1ptD.0 => &D.43976
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56609 => &D.43976
  if (&D.43976.D.11539._M_local_bufD.11541 != _38)
    goto <bb 70>;
  else
    goto <bb 71>;
;;    succ:       70 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 70, loop depth 1, count 0, freq 897, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       69 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43976.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56601 => &D.43976
  # DEBUG __sizeD.56600 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43976
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43976
  # DEBUG D#185ptD.0 => &D.43976._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56604 => _38
  # DEBUG __aD.56602 => D#183ptD.0
  # DEBUG __nD.56603 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56607 => _38
  # DEBUG thisD.56605 => D#179ptD.0
  # DEBUG D.56606 => D#180ptD.0
  # .MEM_107 = VDEF <.MEM_36>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_38);
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 1, count 0, freq 1285, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       69 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_36(69), .MEM_107(70)>
  # DEBUG D#189ptD.0 => &D.43976._M_dataplusD.11519
  # DEBUG thisD.56610 => D#189ptD.0
  # DEBUG thisD.56611 => D#189ptD.0
  # DEBUG thisD.56612 => D#189ptD.0
  # .MEM_37 = VDEF <.MEM_90>
  D.43976 ={v} {CLOBBER};
  # DEBUG thisD.56596 => &D.43975
  # DEBUG thisD.56597 => &D.43975
;;    succ:       72 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 1, count 0, freq 9791, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       67 [86.9%]  (FALSE_VALUE,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_5 = PHI <.MEM_32(67), .MEM_37(71)>
  # RANGE [0, 18446744073709551615]
  _41 = (long unsigned intD.14) vc_283;
  # DEBUG D#369ptD.0 => &this_13(D)->_vc_occupancyD.41303
  # VUSE <.MEM_5>
  # PT = nonlocal escaped 
  _73 = MEM[(intD.9 * *)this_13(D) + 112B];
  # DEBUG D#43ptD.0 => D#369ptD.0
  # DEBUG __nD.56618 => _41
  # DEBUG thisD.56619 => D#43ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _77 = _41 * 4;
  # PT = nonlocal escaped 
  _78 = _73 + _77;
  # VUSE <.MEM_5>
  _42 = *_78;
  _43 = _42 + -1;
  # .MEM_44 = VDEF <.MEM_5>
  *_78 = _43;
  # DEBUG D#370ptD.0 => &this_13(D)->_vc_occupancyD.41303
  # DEBUG D#43ptD.0 => D#370ptD.0
  # DEBUG __nD.56614 => _41
  # DEBUG thisD.56615 => D#43ptD.0
  if (_43 < 0)
    goto <bb 73>;
  else
    goto <bb 127>;
;;    succ:       73 [13.1%]  (TRUE_VALUE,EXECUTABLE)
;;                127 [86.9%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 1, count 0, freq 1285, maybe hot
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       72 [13.1%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.67028 => &errD.43977
  # DEBUG __modeD.67029 => 16
  # DEBUG D#194ptD.0 => &errD.43977.D.23249
  # DEBUG thisD.67049 => D#194ptD.0
  # .MEM_409 = VDEF <.MEM_44>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt8ios_baseC2EvD.14886 (&MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B].D.19921);
  # .MEM_410 = VDEF <.MEM_409>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.19930 + 16B];
  # .MEM_411 = VDEF <.MEM_410>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B]._M_tieD.19825 = 0B;
  # .MEM_412 = VDEF <.MEM_411>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B]._M_fillD.19826 = 0;
  # .MEM_413 = VDEF <.MEM_412>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B]._M_fill_initD.19827 = 0;
  # .MEM_414 = VDEF <.MEM_413>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B]._M_streambufD.19828 = 0B;
  # .MEM_415 = VDEF <.MEM_414>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B]._M_ctypeD.19829 = 0B;
  # .MEM_416 = VDEF <.MEM_415>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B]._M_num_putD.19830 = 0B;
  # .MEM_417 = VDEF <.MEM_416>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B]._M_num_getD.19831 = 0B;
  # DEBUG thisD.67051 => &errD.43977.D.23246
  # DEBUG __vtt_parmD.67050 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B]
  # VUSE <.MEM_417>
  # PT = nonlocal escaped 
  iftmp.35_208 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B];
  # .MEM_418 = VDEF <.MEM_417>
  MEM[(struct basic_ostreamD.3833 *)&errD.43977]._vptr.basic_ostreamD.20605 = iftmp.35_208;
  # VUSE <.MEM_418>
  _209 = MEM[(long intD.12 *)iftmp.35_208 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.36_210 = (sizetype) _209;
  # PT = { D.43977 } (escaped)
  _211 = &errD.43977.D.23246 + iftmp.36_210;
  # VUSE <.MEM_418>
  # PT = nonlocal escaped 
  iftmp.37_212 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 16B];
  # .MEM_419 = VDEF <.MEM_418>
  _211->D.19921._vptr.ios_baseD.14897 = iftmp.37_212;
  [LP 31] # .MEM_420 = VDEF <.MEM_419>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.19896 (_211, 0B);
;;    succ:       74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                78 (EH,EXECUTABLE)

;;   basic block 74, loop depth 1, count 0, freq 1285, maybe hot
;;    prev block 73, next block 75, flags: (NEW, REACHABLE)
;;    pred:       73 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_421 = VDEF <.MEM_420>
  errD.43977.D.23246._vptr.basic_ostreamD.20605 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23250 + 24B];
  # .MEM_422 = VDEF <.MEM_421>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23250 + 64B];
  # DEBUG __aD.67034 => 16
  # DEBUG __bD.67033 => 16
  # DEBUG D#192ptD.0 => &errD.43977._M_stringbufD.23189
  # DEBUG thisD.67036 => D#192ptD.0
  # DEBUG __modeD.67035 => NULL
  # DEBUG D#129ptD.0 => &MEM[(struct basic_stringbufD.3837 *)D#192ptD.0].D.23096
  # DEBUG thisD.67037 => D#129ptD.0
  # .MEM_423 = VDEF <.MEM_422>
  MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._vptr.basic_streambufD.15693 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.15702 + 16B];
  # .MEM_424 = VDEF <.MEM_423>
  MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._M_in_begD.15539 = 0B;
  # .MEM_425 = VDEF <.MEM_424>
  MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._M_in_curD.15540 = 0B;
  # .MEM_426 = VDEF <.MEM_425>
  MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._M_in_endD.15541 = 0B;
  # .MEM_427 = VDEF <.MEM_426>
  MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._M_out_begD.15542 = 0B;
  # .MEM_428 = VDEF <.MEM_427>
  MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._M_out_curD.15543 = 0B;
  # .MEM_429 = VDEF <.MEM_428>
  MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._M_out_endD.15544 = 0B;
  # .MEM_430 = VDEF <.MEM_429>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt6localeC1EvD.13428 (&MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._M_buf_localeD.15545);
  # .MEM_431 = VDEF <.MEM_430>
  MEM[(struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096._vptr.basic_streambufD.15693 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEED.23100 + 16B];
  # .MEM_432 = VDEF <.MEM_431>
  MEM[(struct basic_stringbufD.3837 *)&errD.43977 + 8B]._M_modeD.23018 = 16;
  # DEBUG D#128ptD.0 => &MEM[(struct basic_stringbufD.3837 *)D#192ptD.0]._M_stringD.23019
  # DEBUG thisD.67038 => D#128ptD.0
  # DEBUG thisD.54087 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.67039 => D#128ptD.0
  # DEBUG D#127ptD.0 => &MEM[(struct basic_stringD.2844 *)D#128ptD.0]._M_dataplusD.11519
  # DEBUG thisD.67042 => D#127ptD.0
  # DEBUG __datD.67041 => &MEM[(struct basic_stringD.2844 *)&errD.43977 + 80B].D.11539._M_local_bufD.11541
  # DEBUG __aD.67040 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_433 = VDEF <.MEM_432>
  MEM[(struct _Alloc_hiderD.11518 *)&errD.43977 + 80B]._M_pD.11525 = &MEM[(struct basic_stringD.2844 *)&errD.43977 + 80B].D.11539._M_local_bufD.11541;
  # DEBUG thisD.54092 => NULL
  # DEBUG thisD.54078 => NULL
  # DEBUG thisD.67044 => D#128ptD.0
  # DEBUG __nD.67043 => 0
  # DEBUG D#9ptD.0 => D#128ptD.0
  # DEBUG __lengthD.67046 => 0
  # DEBUG thisD.67045 => D#9ptD.0
  # .MEM_434 = VDEF <.MEM_433>
  MEM[(size_typeD.11502 *)&errD.43977 + 88B] = 0;
  # DEBUG D#1ptD.0 => D#128ptD.0
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.67048 => &MEM[(struct basic_stringD.2844 *)&errD.43977 + 80B].D.11539._M_local_bufD.11541
  # DEBUG __c2D.67047 => D#10ptD.0
  # .MEM_435 = VDEF <.MEM_434>
  MEM[(char_typeD.6629 &)&errD.43977 + 96] = 0;
  [LP 18] # .MEM_436 = VDEF <.MEM_435>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.19896 (&MEM[(voidD.45 *)&errD.43977 + 112B], &errD.43977._M_stringbufD.23189.D.23096);
  goto <bb 80>;
;;    succ:       80 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 (EH,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       74 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # iftmp.35_531 = PHI <iftmp.35_208(74)>
  # PT = nonlocal escaped 
  # iftmp.37_485 = PHI <iftmp.37_212(74)>
<L48>: [LP 18]
  # .MEM_509 = VDEF <.MEM_436>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1EvD.23076 (&errD.43977._M_stringbufD.23189);
  [LP 17] resx 30
;;    succ:       76 (EH,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       75 (EH,EXECUTABLE)
<L49>: [LP 17]
  # DEBUG thisD.67032 => &errD.43977.D.23246
  # DEBUG __vtt_parmD.67031 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B]
  # VUSE <.MEM_509>
  _221 = MEM[(long intD.12 *)iftmp.35_531 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.42_222 = (sizetype) _221;
  # PT = { D.43977 } (escaped)
  _223 = &errD.43977.D.23246 + iftmp.42_222;
  # .MEM_511 = VDEF <.MEM_509>
  _223->D.19921._vptr.ios_baseD.14897 = iftmp.37_485;
  # .MEM_512 = VDEF <.MEM_511>
  MEM[(struct  &)&errD.43977] ={v} {CLOBBER};
  [LP 16] resx 29
;;    succ:       77 (EH,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 76, next block 78, flags: (NEW)
;;    pred:       76 (EH,EXECUTABLE)
<L64>: [LP 16]
  goto <bb 79> (<L50>);
;;    succ:       79 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 77, next block 79, flags: (NEW)
;;    pred:       73 (EH,EXECUTABLE)
<L63>: [LP 31]
;;    succ:       79 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       78 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                77 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_279 = PHI <.MEM_420(78), .MEM_512(77)>
<L50>:
  # DEBUG D#193ptD.0 => &errD.43977.D.23249
  # DEBUG thisD.67030 => D#193ptD.0
  # .MEM_513 = VDEF <.MEM_279>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.19930 + 16B];
  [MNT 31] # .MEM_514 = VDEF <.MEM_513>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.14894 (&MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B].D.19921);
  resx 28
;;    succ:      

;;   basic block 80, loop depth 1, count 0, freq 1285, maybe hot
;;    prev block 79, next block 81, flags: (NEW, REACHABLE)
;;    pred:       74 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __outD.56621 => &errD.43977.D.23246
  # DEBUG __sD.56622 => "Buffer occupancy fell below zero for VC "
  # DEBUG __sD.56623 => "Buffer occupancy fell below zero for VC "
  [LP 32] # .MEM_117 = VDEF <.MEM_436>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_lD.8800 (&errD.43977.D.23246, "Buffer occupancy fell below zero for VC ", 40);
;;    succ:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                146 (EH,EXECUTABLE)

;;   basic block 81, loop depth 1, count 0, freq 1285, maybe hot
;;    prev block 80, next block 82, flags: (NEW, REACHABLE)
;;    pred:       80 [100.0%]  (FALLTHRU,EXECUTABLE)
  [LP 33] # .MEM_46 = VDEF <.MEM_117>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSolsEiD.20513 (&errD.43977.D.23246, vc_283);
  goto <bb 83>;
;;    succ:       82 (EH,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 81, next block 83, flags: (NEW)
;;    pred:       81 (EH,EXECUTABLE)
<L66>: [LP 33]
  goto <bb 147> (<L39>);
;;    succ:       147 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 83, loop depth 1, count 0, freq 1285, maybe hot
;;    prev block 82, next block 84, flags: (NEW, REACHABLE)
;;    pred:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56625 => &errD.43977
  # DEBUG thisD.67055 => &errD.43977._M_stringbufD.23189
  # DEBUG thisD.67178 => &D.43978
  # DEBUG thisD.56029 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.67179 => &D.43978
  # DEBUG D#127ptD.0 => &D.43978._M_dataplusD.11519
  # DEBUG thisD.67182 => D#127ptD.0
  # DEBUG __datD.67181 => &D.43978.D.11539._M_local_bufD.11541
  # DEBUG __aD.67180 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#127ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_437 = VDEF <.MEM_46>
  MEM[(struct _Alloc_hiderD.11518 *)&D.43978]._M_pD.11525 = &D.43978.D.11539._M_local_bufD.11541;
  # DEBUG thisD.56034 => NULL
  # DEBUG thisD.54078 => NULL
  # DEBUG thisD.67184 => &D.43978
  # DEBUG __nD.67183 => 0
  # DEBUG D#9ptD.0 => &D.43978
  # DEBUG __lengthD.67186 => 0
  # DEBUG thisD.67185 => D#9ptD.0
  # .MEM_438 = VDEF <.MEM_437>
  MEM[(size_typeD.11502 *)&D.43978 + 8B] = 0;
  # DEBUG D#1ptD.0 => &D.43978
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.67188 => &D.43978.D.11539._M_local_bufD.11541
  # DEBUG __c2D.67187 => D#10ptD.0
  # .MEM_439 = VDEF <.MEM_438>
  MEM[(char_typeD.6629 &)&D.43978 + 16] = 0;
  # DEBUG D#322ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096
  # VUSE <.MEM_439>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _224 = MEM[(char_typeD.15410 * *)&errD.43977 + 48B];
  # DEBUG D#4ptD.0 => D#322ptD.0
  # DEBUG thisD.56026 => D#4ptD.0
  if (_224 != 0B)
    goto <bb 84>;
  else
    goto <bb 106>;
;;    succ:       84 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                106 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 84, loop depth 1, count 0, freq 1198, maybe hot
;;    prev block 83, next block 85, flags: (NEW, REACHABLE)
;;    pred:       83 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#323ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096
  # DEBUG D#4ptD.0 => D#323ptD.0
  # DEBUG thisD.56045 => D#4ptD.0
  # DEBUG D#324ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096
  # VUSE <.MEM_439>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _225 = MEM[(char_typeD.15410 * *)&errD.43977 + 32B];
  # DEBUG D#5ptD.0 => D#324ptD.0
  # DEBUG thisD.56042 => D#5ptD.0
  if (_224 > _225)
    goto <bb 85>;
  else
    goto <bb 95>;
;;    succ:       85 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                95 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 85, loop depth 1, count 0, freq 599, maybe hot
;;    prev block 84, next block 86, flags: (NEW, REACHABLE)
;;    pred:       84 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.67161 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#327ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096
  # DEBUG D#4ptD.0 => D#327ptD.0
  # DEBUG thisD.56068 => D#4ptD.0
  # DEBUG D#328ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096
  # VUSE <.MEM_439>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _226 = MEM[(char_typeD.15410 * *)&errD.43977 + 40B];
  # DEBUG D#6ptD.0 => D#328ptD.0
  # DEBUG thisD.56065 => D#6ptD.0
  # DEBUG thisD.67165 => &D.67190
  # DEBUG __begD.67164 => _226
  # DEBUG __endD.67163 => _224
  # DEBUG __aD.67162 => NULL
  # DEBUG thisD.67166 => &D.67190
  # DEBUG D#320ptD.0 => &D.67190._M_dataplusD.11519
  # DEBUG thisD.67169 => D#320ptD.0
  # DEBUG __datD.67168 => &D.67190.D.11539._M_local_bufD.11541
  # DEBUG __aD.67167 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#320ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_464 = VDEF <.MEM_439>
  MEM[(struct _Alloc_hiderD.11518 *)&D.67190]._M_pD.11525 = &D.67190.D.11539._M_local_bufD.11541;
  # DEBUG thisD.67172 => &D.67190
  # DEBUG __begD.67171 => _226
  # DEBUG __endD.67170 => _224
  # DEBUG thisD.67176 => &D.67190
  # DEBUG __begD.67175 => _226
  # DEBUG __endD.67174 => _224
  # DEBUG thisD.67194 => &D.67190
  # DEBUG __begD.67195 => _226
  # DEBUG __endD.67196 => _224
  # DEBUG __ptrD.55982 => _226
  if (_226 == 0B)
    goto <bb 156>;
  else
    goto <bb 158>;
;;    succ:       156 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                158 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 86, loop depth 1, count 0, freq 174, maybe hot
;;    prev block 85, next block 87, flags: (NEW, REACHABLE)
;;    pred:       158 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 34] # .MEM_466 = VDEF <.MEM_465>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _238 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.67190, &__dnewD.67197, 0);
;;    succ:       87 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                116 (EH,EXECUTABLE)

;;   basic block 87, loop depth 1, count 0, freq 174, maybe hot
;;    prev block 86, next block 88, flags: (NEW, REACHABLE)
;;    pred:       86 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.67190
  # DEBUG __pD.67216 => _238
  # DEBUG thisD.67215 => D#7ptD.0
  # .MEM_467 = VDEF <.MEM_466>
  MEM[(charD.10 * *)&D.67190] = _238;
  # VUSE <.MEM_467>
  __dnew.49_239 = __dnewD.67197;
  # DEBUG D#8ptD.0 => &D.67190
  # DEBUG __capacityD.67218 => __dnew.49_239
  # DEBUG thisD.67217 => D#8ptD.0
  # .MEM_468 = VDEF <.MEM_467>
  MEM[(size_typeD.11502 *)&D.67190 + 16B] = __dnew.49_239;
  # DEBUG D#1ptD.0 => &D.67190
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.67200 => _238
  # DEBUG __k1D.67199 => _226
  # DEBUG __k2D.67198 => _224
  # DEBUG __dD.67203 => _238
  # DEBUG __sD.67202 => _226
  # DEBUG __nD.67201 => __dnew.48_237
  goto <bb 90>;
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 88, loop depth 1, count 0, freq 425, maybe hot
;;    prev block 87, next block 89, flags: (NEW, REACHABLE)
;;    pred:       158 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#1ptD.0 => &D.67190
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.67200 => &D.67190.D.11539._M_local_bufD.11541
  # DEBUG __k1D.67199 => _226
  # DEBUG __k2D.67198 => _224
  # DEBUG __dD.67203 => &D.67190.D.11539._M_local_bufD.11541
  # DEBUG __sD.67202 => _226
  # DEBUG __nD.67201 => __dnew.48_237
  if (__dnew.48_237 == 1)
    goto <bb 89>;
  else
    goto <bb 90>;
;;    succ:       89 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                90 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 89, loop depth 1, count 0, freq 227, maybe hot
;;    prev block 88, next block 90, flags: (NEW, REACHABLE)
;;    pred:       88 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_465>
  _241 = MEM[(const char_typeD.6629 &)_226];
  # DEBUG D#10ptD.0 => _226
  # DEBUG __c1D.67208 => &D.67190.D.11539._M_local_bufD.11541
  # DEBUG __c2D.67207 => D#10ptD.0
  # .MEM_469 = VDEF <.MEM_465>
  MEM[(char_typeD.6629 &)&D.67190 + 16] = _241;
  goto <bb 91>;
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 90, loop depth 1, count 0, freq 372, maybe hot
;;    prev block 89, next block 91, flags: (NEW, REACHABLE)
;;    pred:       88 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                87 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67190 } (nonlocal, escaped)
  # _546 = PHI <&D.67190.D.11539._M_local_bufD.11541(88), _238(87)>
  # .MEM_534 = PHI <.MEM_465(88), .MEM_468(87)>
  # DEBUG D#1ptD.0 => &D.67190
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.67200 => _546
  # DEBUG __k1D.67199 => _226
  # DEBUG __k2D.67198 => _224
  # DEBUG __dD.67203 => _546
  # DEBUG __sD.67202 => _226
  # DEBUG __nD.67201 => __dnew.48_237
  # DEBUG __s1D.67206 => _546
  # DEBUG __s2D.67205 => _226
  # DEBUG __nD.67204 => __dnew.48_237
  # .MEM_470 = VDEF <.MEM_534>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  memcpyD.992 (_546, _226, __dnew.48_237);
  # VUSE <.MEM_470>
  pretmp_366 = __dnewD.67197;
  # VUSE <.MEM_470>
  pretmp_368 = MEM[(charD.10 * *)&D.67190];
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 91, loop depth 1, count 0, freq 599, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       89 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_281 = PHI <.MEM_469(89), .MEM_470(90)>
  # prephitmp_367 = PHI <__dnew.48_237(89), pretmp_366(90)>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67190 } (nonlocal, escaped)
  # prephitmp_120 = PHI <&D.67190.D.11539._M_local_bufD.11541(89), pretmp_368(90)>
  # DEBUG D#903ptD.0 => __dnewD.67197
  # DEBUG thisD.67210 => &D.67190
  # DEBUG __nD.67209 => D#903ptD.0
  # DEBUG D#9ptD.0 => &D.67190
  # DEBUG __lengthD.67212 => D#903ptD.0
  # DEBUG thisD.67211 => D#9ptD.0
  # .MEM_471 = VDEF <.MEM_281>
  MEM[(size_typeD.11502 *)&D.67190 + 8B] = prephitmp_367;
  # DEBUG D#1ptD.0 => &D.67190
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67190 } (nonlocal, escaped)
  _244 = prephitmp_120 + prephitmp_367;
  # DEBUG __c1D.67214 => _244
  # DEBUG __c2D.67213 => D#10ptD.0
  # .MEM_472 = VDEF <.MEM_471>
  MEM[(char_typeD.6629 &)_244] = 0;
  # .MEM_473 = VDEF <.MEM_472>
  __dnewD.67197 ={v} {CLOBBER};
  # DEBUG thisD.67158 => &D.43978
  # DEBUG __strD.67157 => &D.67190
  # DEBUG thisD.67160 => &D.43978
  # DEBUG __strD.67159 => &D.67190
  [LP 21] # .MEM_474 = VDEF <.MEM_473>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&D.43978, &D.67190);
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                108 (EH,EXECUTABLE)

;;   basic block 92, loop depth 1, count 0, freq 599, maybe hot
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       91 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.67141 => &D.67190
  # DEBUG thisD.67142 => &D.67190
  # DEBUG thisD.67151 => &D.67190
  # VUSE <.MEM_474>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67190 } (nonlocal, escaped)
  _227 = MEM[(charD.10 * *)&D.67190];
  # DEBUG D#1ptD.0 => &D.67190
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.67152 => &D.67190
  if (&D.67190.D.11539._M_local_bufD.11541 != _227)
    goto <bb 93>;
  else
    goto <bb 94>;
;;    succ:       93 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                94 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 93, loop depth 1, count 0, freq 469, maybe hot
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       92 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.67190.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.67144 => &D.67190
  # DEBUG __sizeD.67143 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.67190
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.67190
  # DEBUG D#185ptD.0 => &D.67190._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.67147 => _227
  # DEBUG __aD.67145 => D#183ptD.0
  # DEBUG __nD.67146 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.67150 => _227
  # DEBUG thisD.67148 => D#179ptD.0
  # DEBUG D.67149 => D#180ptD.0
  # .MEM_475 = VDEF <.MEM_474>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_227);
;;    succ:       94 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 94, loop depth 1, count 0, freq 599, maybe hot
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       92 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                93 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_282 = PHI <.MEM_474(92), .MEM_475(93)>
  # DEBUG D#189ptD.0 => &D.67190._M_dataplusD.11519
  # DEBUG thisD.67153 => D#189ptD.0
  # DEBUG thisD.67154 => D#189ptD.0
  # DEBUG thisD.67155 => D#189ptD.0
  # .MEM_480 = VDEF <.MEM_282>
  D.67190 ={v} {CLOBBER};
  # DEBUG thisD.67156 => NULL
  # DEBUG thisD.56077 => NULL
  goto <bb 121>;
;;    succ:       121 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 95, loop depth 1, count 0, freq 599, maybe hot
;;    prev block 94, next block 96, flags: (NEW, REACHABLE)
;;    pred:       84 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.67124 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#325ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096
  # DEBUG D#5ptD.0 => D#325ptD.0
  # DEBUG thisD.56114 => D#5ptD.0
  # DEBUG D#326ptD.0 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096
  # VUSE <.MEM_439>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _228 = MEM[(char_typeD.15410 * *)&errD.43977 + 40B];
  # DEBUG D#6ptD.0 => D#326ptD.0
  # DEBUG thisD.56111 => D#6ptD.0
  # DEBUG thisD.67128 => &D.67189
  # DEBUG __begD.67127 => _228
  # DEBUG __endD.67126 => _225
  # DEBUG __aD.67125 => NULL
  # DEBUG thisD.67129 => &D.67189
  # DEBUG D#320ptD.0 => &D.67189._M_dataplusD.11519
  # DEBUG thisD.67132 => D#320ptD.0
  # DEBUG __datD.67131 => &D.67189.D.11539._M_local_bufD.11541
  # DEBUG __aD.67130 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#320ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_440 = VDEF <.MEM_439>
  MEM[(struct _Alloc_hiderD.11518 *)&D.67189]._M_pD.11525 = &D.67189.D.11539._M_local_bufD.11541;
  # DEBUG thisD.67135 => &D.67189
  # DEBUG __begD.67134 => _228
  # DEBUG __endD.67133 => _225
  # DEBUG thisD.67139 => &D.67189
  # DEBUG __begD.67138 => _228
  # DEBUG __endD.67137 => _225
  # DEBUG thisD.67223 => &D.67189
  # DEBUG __begD.67224 => _228
  # DEBUG __endD.67225 => _225
  # DEBUG __ptrD.55982 => _228
  # RANGE [0, 1]
  _549 = _225 != 0B;
  # RANGE [0, 1]
  _542 = _228 == 0B;
  # RANGE [0, 1]
  _543 = _542 & _549;
  if (_543 != 0)
    goto <bb 159>;
  else
    goto <bb 161>;
;;    succ:       159 [85.0%]  (TRUE_VALUE,EXECUTABLE)
;;                161 [15.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 96, loop depth 1, count 0, freq 174, maybe hot
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       161 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 35] # .MEM_442 = VDEF <.MEM_441>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _250 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.67189, &__dnewD.67226, 0);
  goto <bb 98>;
;;    succ:       98 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                97 (EH,EXECUTABLE)

;;   basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 96, next block 98, flags: (NEW)
;;    pred:       96 (EH,EXECUTABLE)
<L68>: [LP 35]
  goto <bb 117> (<L53>);
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 98, loop depth 1, count 0, freq 174, maybe hot
;;    prev block 97, next block 99, flags: (NEW, REACHABLE)
;;    pred:       96 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.67189
  # DEBUG __pD.67245 => _250
  # DEBUG thisD.67244 => D#7ptD.0
  # .MEM_443 = VDEF <.MEM_442>
  MEM[(charD.10 * *)&D.67189] = _250;
  # VUSE <.MEM_443>
  __dnew.49_251 = __dnewD.67226;
  # DEBUG D#8ptD.0 => &D.67189
  # DEBUG __capacityD.67247 => __dnew.49_251
  # DEBUG thisD.67246 => D#8ptD.0
  # .MEM_444 = VDEF <.MEM_443>
  MEM[(size_typeD.11502 *)&D.67189 + 16B] = __dnew.49_251;
  # DEBUG D#1ptD.0 => &D.67189
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.67229 => _250
  # DEBUG __k1D.67228 => _228
  # DEBUG __k2D.67227 => _225
  # DEBUG __dD.67232 => _250
  # DEBUG __sD.67231 => _228
  # DEBUG __nD.67230 => __dnew.48_249
  goto <bb 101>;
;;    succ:       101 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 99, loop depth 1, count 0, freq 425, maybe hot
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       161 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#1ptD.0 => &D.67189
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.67229 => &D.67189.D.11539._M_local_bufD.11541
  # DEBUG __k1D.67228 => _228
  # DEBUG __k2D.67227 => _225
  # DEBUG __dD.67232 => &D.67189.D.11539._M_local_bufD.11541
  # DEBUG __sD.67231 => _228
  # DEBUG __nD.67230 => __dnew.48_249
  if (__dnew.48_249 == 1)
    goto <bb 100>;
  else
    goto <bb 101>;
;;    succ:       100 [53.3%]  (TRUE_VALUE,EXECUTABLE)
;;                101 [46.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 100, loop depth 1, count 0, freq 227, maybe hot
;;    prev block 99, next block 101, flags: (NEW, REACHABLE)
;;    pred:       99 [53.3%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_441>
  _253 = MEM[(const char_typeD.6629 &)_228];
  # DEBUG D#10ptD.0 => _228
  # DEBUG __c1D.67237 => &D.67189.D.11539._M_local_bufD.11541
  # DEBUG __c2D.67236 => D#10ptD.0
  # .MEM_445 = VDEF <.MEM_441>
  MEM[(char_typeD.6629 &)&D.67189 + 16] = _253;
  goto <bb 102>;
;;    succ:       102 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 101, loop depth 1, count 0, freq 372, maybe hot
;;    prev block 100, next block 102, flags: (NEW, REACHABLE)
;;    pred:       99 [46.7%]  (FALSE_VALUE,EXECUTABLE)
;;                98 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67189 } (nonlocal, escaped)
  # _547 = PHI <&D.67189.D.11539._M_local_bufD.11541(99), _250(98)>
  # .MEM_527 = PHI <.MEM_441(99), .MEM_444(98)>
  # DEBUG D#1ptD.0 => &D.67189
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.67229 => _547
  # DEBUG __k1D.67228 => _228
  # DEBUG __k2D.67227 => _225
  # DEBUG __dD.67232 => _547
  # DEBUG __sD.67231 => _228
  # DEBUG __nD.67230 => __dnew.48_249
  # DEBUG __s1D.67235 => _547
  # DEBUG __s2D.67234 => _228
  # DEBUG __nD.67233 => __dnew.48_249
  # .MEM_446 = VDEF <.MEM_527>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  memcpyD.992 (_547, _228, __dnew.48_249);
  # VUSE <.MEM_446>
  pretmp_342 = __dnewD.67226;
  # VUSE <.MEM_446>
  pretmp_344 = MEM[(charD.10 * *)&D.67189];
;;    succ:       102 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 1, count 0, freq 599, maybe hot
;;    prev block 101, next block 103, flags: (NEW, REACHABLE)
;;    pred:       100 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                101 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_284 = PHI <.MEM_445(100), .MEM_446(101)>
  # prephitmp_343 = PHI <__dnew.48_249(100), pretmp_342(101)>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67189 } (nonlocal, escaped)
  # prephitmp_365 = PHI <&D.67189.D.11539._M_local_bufD.11541(100), pretmp_344(101)>
  # DEBUG D#904ptD.0 => __dnewD.67226
  # DEBUG thisD.67239 => &D.67189
  # DEBUG __nD.67238 => D#904ptD.0
  # DEBUG D#9ptD.0 => &D.67189
  # DEBUG __lengthD.67241 => D#904ptD.0
  # DEBUG thisD.67240 => D#9ptD.0
  # .MEM_447 = VDEF <.MEM_284>
  MEM[(size_typeD.11502 *)&D.67189 + 8B] = prephitmp_343;
  # DEBUG D#1ptD.0 => &D.67189
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67189 } (nonlocal, escaped)
  _256 = prephitmp_365 + prephitmp_343;
  # DEBUG __c1D.67243 => _256
  # DEBUG __c2D.67242 => D#10ptD.0
  # .MEM_448 = VDEF <.MEM_447>
  MEM[(char_typeD.6629 &)_256] = 0;
  # .MEM_449 = VDEF <.MEM_448>
  __dnewD.67226 ={v} {CLOBBER};
  # DEBUG thisD.67121 => &D.43978
  # DEBUG __strD.67120 => &D.67189
  # DEBUG thisD.67123 => &D.43978
  # DEBUG __strD.67122 => &D.67189
  [LP 20] # .MEM_450 = VDEF <.MEM_449>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&D.43978, &D.67189);
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                112 (EH,EXECUTABLE)

;;   basic block 103, loop depth 1, count 0, freq 599, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       102 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.67104 => &D.67189
  # DEBUG thisD.67105 => &D.67189
  # DEBUG thisD.67114 => &D.67189
  # VUSE <.MEM_450>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67189 } (nonlocal, escaped)
  _229 = MEM[(charD.10 * *)&D.67189];
  # DEBUG D#1ptD.0 => &D.67189
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.67115 => &D.67189
  if (&D.67189.D.11539._M_local_bufD.11541 != _229)
    goto <bb 104>;
  else
    goto <bb 105>;
;;    succ:       104 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                105 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 104, loop depth 1, count 0, freq 469, maybe hot
;;    prev block 103, next block 105, flags: (NEW, REACHABLE)
;;    pred:       103 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.67189.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.67107 => &D.67189
  # DEBUG __sizeD.67106 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.67189
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.67189
  # DEBUG D#185ptD.0 => &D.67189._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.67110 => _229
  # DEBUG __aD.67108 => D#183ptD.0
  # DEBUG __nD.67109 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.67113 => _229
  # DEBUG thisD.67111 => D#179ptD.0
  # DEBUG D.67112 => D#180ptD.0
  # .MEM_451 = VDEF <.MEM_450>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_229);
;;    succ:       105 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 105, loop depth 1, count 0, freq 599, maybe hot
;;    prev block 104, next block 106, flags: (NEW, REACHABLE)
;;    pred:       103 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                104 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_285 = PHI <.MEM_450(103), .MEM_451(104)>
  # DEBUG D#189ptD.0 => &D.67189._M_dataplusD.11519
  # DEBUG thisD.67116 => D#189ptD.0
  # DEBUG thisD.67117 => D#189ptD.0
  # DEBUG thisD.67118 => D#189ptD.0
  # .MEM_456 = VDEF <.MEM_285>
  D.67189 ={v} {CLOBBER};
  # DEBUG thisD.67119 => NULL
  # DEBUG thisD.56123 => NULL
  goto <bb 121>;
;;    succ:       121 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 1, count 0, freq 86, maybe hot
;;    prev block 105, next block 107, flags: (NEW, REACHABLE)
;;    pred:       83 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.67101 => &D.43978
  # DEBUG __strD.67100 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B]._M_stringD.23019
  # DEBUG thisD.67103 => &D.43978
  # DEBUG __strD.67102 => &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B]._M_stringD.23019
  [LP 36] # .MEM_488 = VDEF <.MEM_439>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_D.11707 (&D.43978, &MEM[(const struct basic_stringbufD.3837 *)&errD.43977 + 8B]._M_stringD.23019);
  goto <bb 121>;
;;    succ:       121 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                107 (EH,EXECUTABLE)

;;   basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 106, next block 108, flags: (NEW)
;;    pred:       106 (EH,EXECUTABLE)
<L69>: [LP 36]
  goto <bb 117> (<L53>);
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       91 (EH,EXECUTABLE)
<L51>: [LP 21]
  # DEBUG thisD.67085 => &D.67190
  # DEBUG thisD.67086 => &D.67190
  # DEBUG thisD.67095 => &D.67190
  # VUSE <.MEM_474>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67190 } (nonlocal, escaped)
  _231 = MEM[(charD.10 * *)&D.67190];
  # DEBUG D#1ptD.0 => &D.67190
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.67096 => &D.67190
  if (&D.67190.D.11539._M_local_bufD.11541 != _231)
    goto <bb 109>;
  else
    goto <bb 110>;
;;    succ:       109 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                110 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       108 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.67190.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.67088 => &D.67190
  # DEBUG __sizeD.67087 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.67190
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.67190
  # DEBUG D#185ptD.0 => &D.67190._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.67091 => _231
  # DEBUG __aD.67089 => D#183ptD.0
  # DEBUG __nD.67090 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.67094 => _231
  # DEBUG thisD.67092 => D#179ptD.0
  # DEBUG D.67093 => D#180ptD.0
  # .MEM_481 = VDEF <.MEM_474>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_231);
;;    succ:       110 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 109, next block 111, flags: (NEW, REACHABLE)
;;    pred:       108 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                109 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_286 = PHI <.MEM_474(108), .MEM_481(109)>
  # DEBUG D#189ptD.0 => &D.67190._M_dataplusD.11519
  # DEBUG thisD.67097 => D#189ptD.0
  # DEBUG thisD.67098 => D#189ptD.0
  # DEBUG thisD.67099 => D#189ptD.0
  # .MEM_486 = VDEF <.MEM_286>
  D.67190 ={v} {CLOBBER};
  [LP 37] resx 34
;;    succ:       111 (EH,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 110, next block 112, flags: (NEW)
;;    pred:       110 (EH,EXECUTABLE)
<L70>: [LP 37]
  goto <bb 117> (<L53>);
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 111, next block 113, flags: (NEW, REACHABLE)
;;    pred:       102 (EH,EXECUTABLE)
<L52>: [LP 20]
  # DEBUG thisD.67069 => &D.67189
  # DEBUG thisD.67070 => &D.67189
  # DEBUG thisD.67079 => &D.67189
  # VUSE <.MEM_450>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 D.67189 } (nonlocal, escaped)
  _232 = MEM[(charD.10 * *)&D.67189];
  # DEBUG D#1ptD.0 => &D.67189
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.67080 => &D.67189
  if (&D.67189.D.11539._M_local_bufD.11541 != _232)
    goto <bb 113>;
  else
    goto <bb 114>;
;;    succ:       113 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                114 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       112 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.67189.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.67072 => &D.67189
  # DEBUG __sizeD.67071 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.67189
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.67189
  # DEBUG D#185ptD.0 => &D.67189._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.67075 => _232
  # DEBUG __aD.67073 => D#183ptD.0
  # DEBUG __nD.67074 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.67078 => _232
  # DEBUG thisD.67076 => D#179ptD.0
  # DEBUG D.67077 => D#180ptD.0
  # .MEM_457 = VDEF <.MEM_450>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_232);
;;    succ:       114 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 113, next block 115, flags: (NEW, REACHABLE)
;;    pred:       112 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                113 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_287 = PHI <.MEM_450(112), .MEM_457(113)>
  # DEBUG D#189ptD.0 => &D.67189._M_dataplusD.11519
  # DEBUG thisD.67081 => D#189ptD.0
  # DEBUG thisD.67082 => D#189ptD.0
  # DEBUG thisD.67083 => D#189ptD.0
  # .MEM_462 = VDEF <.MEM_287>
  D.67189 ={v} {CLOBBER};
  [LP 38] resx 33
;;    succ:       115 (EH,EXECUTABLE)

;;   basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 114, next block 116, flags: (NEW)
;;    pred:       114 (EH,EXECUTABLE)
<L71>: [LP 38]
  goto <bb 117> (<L53>);
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 115, next block 117, flags: (NEW)
;;    pred:       86 (EH,EXECUTABLE)
<L67>: [LP 34]
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 116, next block 118, flags: (NEW, REACHABLE)
;;    pred:       116 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                97 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                107 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                111 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                115 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                157 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                160 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_288 = PHI <.MEM_466(116), .MEM_442(97), .MEM_488(107), .MEM_486(111), .MEM_462(115), .MEM_487(157), .MEM_463(160)>
<L53>:
  # DEBUG thisD.67058 => &D.43978
  # DEBUG thisD.67059 => &D.43978
  # DEBUG thisD.56188 => &D.43978
  # VUSE <.MEM_288>
  # PT = nonlocal escaped { D.43978 } (escaped)
  _233 = MEM[(charD.10 * *)&D.43978];
  # DEBUG D#1ptD.0 => &D.43978
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56189 => &D.43978
  if (&D.43978.D.11539._M_local_bufD.11541 != _233)
    goto <bb 118>;
  else
    goto <bb 119>;
;;    succ:       118 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                119 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       117 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43978.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.67061 => &D.43978
  # DEBUG __sizeD.67060 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43978
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43978
  # DEBUG D#185ptD.0 => &D.43978._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.67064 => _233
  # DEBUG __aD.67062 => D#183ptD.0
  # DEBUG __nD.67063 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.67067 => _233
  # DEBUG thisD.67065 => D#179ptD.0
  # DEBUG D.67066 => D#180ptD.0
  # .MEM_508 = VDEF <.MEM_288>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_233);
;;    succ:       119 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 118, next block 120, flags: (NEW, REACHABLE)
;;    pred:       117 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                118 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_289 = PHI <.MEM_288(117), .MEM_508(118)>
  # DEBUG D#189ptD.0 => &D.43978._M_dataplusD.11519
  # DEBUG thisD.56190 => D#189ptD.0
  # DEBUG thisD.56191 => D#189ptD.0
  # DEBUG thisD.56192 => D#189ptD.0
  [LP 39] resx 32
;;    succ:       120 (EH,EXECUTABLE)

;;   basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 119, next block 121, flags: (NEW)
;;    pred:       119 (EH,EXECUTABLE)
<L72>: [LP 39]
  goto <bb 147> (<L39>);
;;    succ:       147 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 121, loop depth 1, count 0, freq 1284, maybe hot
;;    prev block 120, next block 122, flags: (NEW, REACHABLE)
;;    pred:       105 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                94 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                106 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_290 = PHI <.MEM_456(105), .MEM_480(94), .MEM_488(106)>
  # PT = nonlocal 
  _48 = &this_13(D)->D.42278;
  [LP 9] # .MEM_49 = VDEF <.MEM_290>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_48, &D.43978);
;;    succ:       142 (EH,EXECUTABLE)
;;                122 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 122, loop depth 1, count 0, freq 1284, maybe hot
;;    prev block 121, next block 123, flags: (NEW, REACHABLE)
;;    pred:       121 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.56626 => &D.43978
  # DEBUG thisD.56627 => &D.43978
  # DEBUG thisD.56636 => &D.43978
  # VUSE <.MEM_49>
  # PT = nonlocal escaped { D.43978 } (escaped)
  _47 = MEM[(charD.10 * *)&D.43978];
  # DEBUG D#1ptD.0 => &D.43978
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56637 => &D.43978
  if (&D.43978.D.11539._M_local_bufD.11541 != _47)
    goto <bb 123>;
  else
    goto <bb 124>;
;;    succ:       123 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                124 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 123, loop depth 1, count 0, freq 897, maybe hot
;;    prev block 122, next block 124, flags: (NEW, REACHABLE)
;;    pred:       122 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43978.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56629 => &D.43978
  # DEBUG __sizeD.56628 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43978
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43978
  # DEBUG D#185ptD.0 => &D.43978._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56632 => _47
  # DEBUG __aD.56630 => D#183ptD.0
  # DEBUG __nD.56631 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56635 => _47
  # DEBUG thisD.56633 => D#179ptD.0
  # DEBUG D.56634 => D#180ptD.0
  # .MEM_119 = VDEF <.MEM_49>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_47);
;;    succ:       124 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 124, loop depth 1, count 0, freq 1284, maybe hot
;;    prev block 123, next block 125, flags: (NEW, REACHABLE)
;;    pred:       122 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                123 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_49(122), .MEM_119(123)>
  # DEBUG D#189ptD.0 => &D.43978._M_dataplusD.11519
  # DEBUG thisD.56638 => D#189ptD.0
  # DEBUG thisD.56639 => D#189ptD.0
  # DEBUG thisD.56640 => D#189ptD.0
  # .MEM_50 = VDEF <.MEM_91>
  D.43978 ={v} {CLOBBER};
  # DEBUG thisD.67252 => &errD.43977
  # .MEM_489 = VDEF <.MEM_50>
  errD.43977.D.23246._vptr.basic_ostreamD.20605 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23250 + 24B];
  # .MEM_490 = VDEF <.MEM_489>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23250 + 64B];
  # DEBUG thisD.67256 => &errD.43977._M_stringbufD.23189
  # .MEM_491 = VDEF <.MEM_490>
  MEM[(struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096._vptr.basic_streambufD.15693 = &MEM[(voidD.45 *)&_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEED.23100 + 16B];
  # DEBUG D#191ptD.0 => &MEM[(struct basic_stringbufD.3837 *)&errD.43977 + 8B]._M_stringD.23019
  # DEBUG thisD.67257 => D#191ptD.0
  # DEBUG thisD.67258 => D#191ptD.0
  # DEBUG thisD.67267 => D#191ptD.0
  # VUSE <.MEM_491>
  # PT = nonlocal escaped null { D.15702 D.19930 D.23100 D.23250 D.43972 D.43977 } (nonlocal, escaped)
  _51 = MEM[(charD.10 * *)&errD.43977 + 80B];
  # DEBUG D#1ptD.0 => D#191ptD.0
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.67268 => D#191ptD.0
  if (&MEM[(const struct basic_stringD.2844 *)&errD.43977 + 80B].D.11539._M_local_bufD.11541 != _51)
    goto <bb 125>;
  else
    goto <bb 126>;
;;    succ:       125 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                126 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 125, loop depth 1, count 0, freq 1006, maybe hot
;;    prev block 124, next block 126, flags: (NEW, REACHABLE)
;;    pred:       124 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => MEM[(struct basic_stringD.2844 *)D#191ptD.0].D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.67260 => D#191ptD.0
  # DEBUG __sizeD.67259 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => D#191ptD.0
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => D#191ptD.0
  # DEBUG D#185ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.67263 => _51
  # DEBUG __aD.67261 => D#183ptD.0
  # DEBUG __nD.67262 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.67266 => _51
  # DEBUG thisD.67264 => D#179ptD.0
  # DEBUG D.67265 => D#180ptD.0
  # .MEM_492 = VDEF <.MEM_491>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_51);
;;    succ:       126 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 126, loop depth 1, count 0, freq 1284, maybe hot
;;    prev block 125, next block 127, flags: (NEW, REACHABLE)
;;    pred:       124 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                125 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_291 = PHI <.MEM_491(124), .MEM_492(125)>
  # DEBUG D#189ptD.0 => &MEM[(struct basic_stringD.2844 *)D#191ptD.0]._M_dataplusD.11519
  # DEBUG thisD.67269 => D#189ptD.0
  # DEBUG thisD.67270 => D#189ptD.0
  # DEBUG thisD.67271 => D#189ptD.0
  # .MEM_496 = VDEF <.MEM_291>
  MEM[(struct  &)&errD.43977 + 80] ={v} {CLOBBER};
  # DEBUG D#190ptD.0 => &MEM[(struct basic_stringbufD.3837 *)&errD.43977 + 8B].D.23096
  # DEBUG thisD.67272 => D#190ptD.0
  # .MEM_497 = VDEF <.MEM_496>
  MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._vptr.basic_streambufD.15693 = &MEM[(voidD.45 *)&_ZTVSt15basic_streambufIcSt11char_traitsIcEED.15702 + 16B];
  # .MEM_498 = VDEF <.MEM_497>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt6localeD1EvD.13432 (&MEM[(struct basic_streambufD.3829 *)&errD.43977 + 8B]._M_buf_localeD.15545);
  # .MEM_500 = VDEF <.MEM_498>
  MEM[(struct  &)&errD.43977 + 8] ={v} {CLOBBER};
  # DEBUG thisD.67255 => &errD.43977.D.23246
  # DEBUG __vtt_parmD.67254 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B]
  # VUSE <.MEM_500>
  # PT = nonlocal escaped 
  iftmp.41_259 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B];
  # VUSE <.MEM_500>
  _260 = MEM[(long intD.12 *)iftmp.41_259 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.42_261 = (sizetype) _260;
  # PT = { D.43977 } (escaped)
  _262 = &errD.43977.D.23246 + iftmp.42_261;
  # VUSE <.MEM_500>
  # PT = nonlocal escaped 
  iftmp.43_263 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 16B];
  # .MEM_502 = VDEF <.MEM_500>
  _262->D.19921._vptr.ios_baseD.14897 = iftmp.43_263;
  # .MEM_503 = VDEF <.MEM_502>
  MEM[(struct  &)&errD.43977] ={v} {CLOBBER};
  # DEBUG D#195ptD.0 => &errD.43977.D.23249
  # DEBUG thisD.67253 => D#195ptD.0
  # .MEM_504 = VDEF <.MEM_503>
  MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.19930 + 16B];
  # .MEM_505 = VDEF <.MEM_504>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt8ios_baseD2EvD.14894 (&MEM[(struct basic_iosD.3827 *)&errD.43977 + 112B].D.19921);
  # .MEM_52 = VDEF <.MEM_505>
  errD.43977 ={v} {CLOBBER};
;;    succ:       127 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 127, loop depth 1, count 0, freq 9791, maybe hot
;;    prev block 126, next block 128, flags: (NEW, REACHABLE)
;;    pred:       72 [86.9%]  (FALSE_VALUE,EXECUTABLE)
;;                126 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_6 = PHI <.MEM_44(72), .MEM_52(126)>
  # VUSE <.MEM_6>
  _56 = this_13(D)->_wait_for_tail_creditD.41300;
  if (_56 != 0)
    goto <bb 128>;
  else
    goto <bb 132>;
;;    succ:       128 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                132 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 128, loop depth 1, count 0, freq 4895, maybe hot
;;    prev block 127, next block 129, flags: (NEW, REACHABLE)
;;    pred:       127 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#371ptD.0 => &this_13(D)->_vc_occupancyD.41303
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _74 = MEM[(intD.9 * *)this_13(D) + 112B];
  # DEBUG D#43ptD.0 => D#371ptD.0
  # DEBUG __nD.56642 => _41
  # DEBUG thisD.56643 => D#43ptD.0
  # PT = nonlocal escaped 
  _79 = _74 + _77;
  # VUSE <.MEM_6>
  _58 = *_79;
  if (_58 == 0)
    goto <bb 129>;
  else
    goto <bb 132>;
;;    succ:       129 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                132 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 129, loop depth 1, count 0, freq 2448, maybe hot
;;    prev block 128, next block 130, flags: (NEW, REACHABLE)
;;    pred:       128 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#372ptD.0 => &this_13(D)->_tail_sentD.42207
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _76 = MEM[(_Bit_typeD.26520 * *)this_13(D) + 176B];
  # DEBUG D#55ptD.0 => D#372ptD.0
  # DEBUG __nD.56648 => _41
  # DEBUG thisD.56649 => D#55ptD.0
  # RANGE [0, 4294967295]
  _82 = (unsigned intD.13) _41;
  # RANGE [0, 63] NONZERO 63
  _83 = _82 & 63;
  # RANGE [0, 288230376151711743] NONZERO 288230376151711743
  _84 = _41 >> 6;
  # RANGE [0, 2305843009213693944] NONZERO 2305843009213693944
  _85 = _84 * 8;
  # PT = nonlocal escaped 
  _86 = _76 + _85;
  # DEBUG thisD.53403 => NULL
  # DEBUG __xD.53402 => _86
  # DEBUG __yD.53401 => _83
  # DEBUG thisD.53406 => D#19ptD.0
  # DEBUG __xD.53405 => _86
  # DEBUG __yD.53404 => _83
  # DEBUG thisD.53090 => D#19ptD.0
  # DEBUG thisD.56650 => D#20ptD.0
  # DEBUG thisD.56651 => D#20ptD.0
  # RANGE [1, 9223372036854775808]
  _87 = 1 << _83;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => _86
  # DEBUG __yD.53131 => _87
  # DEBUG thisD.56645 => &D.43979
  # VUSE <.MEM_6>
  _80 = *_86;
  # RANGE [0, 9223372036854775808]
  _81 = _80 & _87;
  if (_81 != 0)
    goto <bb 162>;
  else
    goto <bb 132>;
;;    succ:       162 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                132 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 130, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 129, next block 131, flags: (NEW, REACHABLE)
;;    pred:       162 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_62 = VDEF <.MEM_6>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  __assert_failD.24398 ("_in_use_by[vc] >= 0", "buffer_state.cpp", 600, &_ZZN11BufferState13ProcessCreditEPK6CreditE19__PRETTY_FUNCTION__D.43845);
;;    succ:      

;;   basic block 131, loop depth 1, count 0, freq 6949, maybe hot
;;    prev block 130, next block 132, flags: (NEW, REACHABLE)
;;    pred:       162 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#374ptD.0 => &this_13(D)->_in_use_byD.41306
  # DEBUG D#43ptD.0 => D#374ptD.0
  # DEBUG __nD.56659 => _41
  # DEBUG thisD.56660 => D#43ptD.0
  # .MEM_61 = VDEF <.MEM_6>
  *_88 = -1;
;;    succ:       132 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 132, loop depth 1, count 0, freq 9790, maybe hot
;;   Invalid sum of incoming frequencies 15517, should be 9790
;;    prev block 131, next block 133, flags: (NEW, REACHABLE)
;;    pred:       128 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                131 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                127 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                129 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_6(128), .MEM_61(131), .MEM_6(127), .MEM_6(129)>
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  _63 = this_13(D)->_buffer_policyD.41305;
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  _64 = _63->D.39647._vptr.ModuleD.30415;
  # VUSE <.MEM_7>
  # PT = nonlocal escaped 
  _66 = MEM[(intD.9 (*__vtbl_ptr_typeD.2760) () *)_64 + 48B];
  # .MEM_67 = VDEF <.MEM_7>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  OBJ_TYPE_REF(_66;(struct BufferPolicyD.39592)_63->6) (_63, vc_283);
  # DEBUG thisD.56662 => &iterD.43846
  # VUSE <.MEM_67>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  iter$_M_node_89 = _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_baseD.30592 (iter$_M_node_280);
  # DEBUG iter$_M_nodeD.56711 => iter$_M_node_89
  # DEBUG iter$_M_nodeD.56711 => iter$_M_node_89
  # DEBUG D#375ptD.0 => &c_10(D)->vcD.34757
  # DEBUG thisD.56564 => D#375ptD.0
  # DEBUG D#109ptD.0 => &D#375ptD.0->_M_tD.33931
  # DEBUG thisD.56565 => D#109ptD.0
  # DEBUG thisD.53999 => NULL
  # DEBUG __xD.53998 => _141
  # DEBUG thisD.56561 => &iterD.43846
  # DEBUG __xD.56562 => &D.43970
  if (iter$_M_node_89 != _141)
    goto <bb 9>;
  else
    goto <bb 5>;
;;    succ:       9 [98.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [2.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 132, next block 134, flags: (NEW, REACHABLE)
;;    pred:       61 (EH,EXECUTABLE)
<L33>: [LP 4]
  # DEBUG thisD.56664 => &D.43973
  # DEBUG thisD.56665 => &D.43973
  # DEBUG thisD.56674 => &D.43973
  # VUSE <.MEM_23>
  # PT = nonlocal escaped { D.43973 } (escaped)
  _68 = MEM[(charD.10 * *)&D.43973];
  # DEBUG D#1ptD.0 => &D.43973
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56675 => &D.43973
  if (&D.43973.D.11539._M_local_bufD.11541 != _68)
    goto <bb 134>;
  else
    goto <bb 135>;
;;    succ:       134 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                135 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 133, next block 135, flags: (NEW, REACHABLE)
;;    pred:       133 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43973.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56667 => &D.43973
  # DEBUG __sizeD.56666 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43973
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43973
  # DEBUG D#185ptD.0 => &D.43973._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56670 => _68
  # DEBUG __aD.56668 => D#183ptD.0
  # DEBUG __nD.56669 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56673 => _68
  # DEBUG thisD.56671 => D#179ptD.0
  # DEBUG D.56672 => D#180ptD.0
  # .MEM_102 = VDEF <.MEM_23>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_68);
;;    succ:       135 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 135, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 134, next block 136, flags: (NEW, REACHABLE)
;;    pred:       133 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                134 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_23(133), .MEM_102(134)>
  # DEBUG D#189ptD.0 => &D.43973._M_dataplusD.11519
  # DEBUG thisD.56676 => D#189ptD.0
  # DEBUG thisD.56677 => D#189ptD.0
  # DEBUG thisD.56678 => D#189ptD.0
  # .MEM_28 = VDEF <.MEM_92>
  D.43973 ={v} {CLOBBER};
  [LP 3] resx 5
;;    succ:       136 (EH,EXECUTABLE)

;;   basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 135, next block 137, flags: (NEW)
;;    pred:       135 (EH,EXECUTABLE)
<L73>: [LP 3]
  goto <bb 138> (<L34>);
;;    succ:       138 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 137, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 136, next block 138, flags: (NEW)
;;    pred:       20 (EH,EXECUTABLE)
<L55>: [LP 23]
;;    succ:       138 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 138, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 137, next block 139, flags: (NEW, REACHABLE)
;;    pred:       137 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                136 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_95(137), .MEM_20(22), .MEM_274(60), .MEM_28(136)>
<L34>:
  [MNT 7] # .MEM_29 = VDEF <.MEM_8>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1EvD.23238 (&errD.43972);
  resx 4
;;    succ:      

;;   basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 138, next block 140, flags: (NEW, REACHABLE)
;;    pred:       68 (EH,EXECUTABLE)
<L36>: [LP 6]
  # DEBUG thisD.56679 => &D.43976
  # DEBUG thisD.56680 => &D.43976
  # DEBUG thisD.56689 => &D.43976
  # VUSE <.MEM_36>
  # PT = nonlocal escaped null { D.43976 } (escaped)
  _27 = MEM[(charD.10 * *)&D.43976];
  # DEBUG D#1ptD.0 => &D.43976
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56690 => &D.43976
  if (&D.43976.D.11539._M_local_bufD.11541 != _27)
    goto <bb 140>;
  else
    goto <bb 141>;
;;    succ:       140 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                141 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 139, next block 141, flags: (NEW, REACHABLE)
;;    pred:       139 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43976.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56682 => &D.43976
  # DEBUG __sizeD.56681 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43976
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43976
  # DEBUG D#185ptD.0 => &D.43976._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56685 => _27
  # DEBUG __aD.56683 => D#183ptD.0
  # DEBUG __nD.56684 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56688 => _27
  # DEBUG thisD.56686 => D#179ptD.0
  # DEBUG D.56687 => D#180ptD.0
  # .MEM_112 = VDEF <.MEM_36>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_27);
;;    succ:       141 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 141, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 140, next block 142, flags: (NEW, REACHABLE)
;;    pred:       139 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                140 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_93 = PHI <.MEM_36(139), .MEM_112(140)>
  # DEBUG D#189ptD.0 => &D.43976._M_dataplusD.11519
  # DEBUG thisD.56691 => D#189ptD.0
  # DEBUG thisD.56692 => D#189ptD.0
  # DEBUG thisD.56693 => D#189ptD.0
  # .MEM_39 = VDEF <.MEM_93>
  D.43976 ={v} {CLOBBER};
  resx 10
;;    succ:      

;;   basic block 142, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 141, next block 143, flags: (NEW, REACHABLE)
;;    pred:       121 (EH,EXECUTABLE)
<L38>: [LP 9]
  # DEBUG thisD.56696 => &D.43978
  # DEBUG thisD.56697 => &D.43978
  # DEBUG thisD.56706 => &D.43978
  # VUSE <.MEM_49>
  # PT = nonlocal escaped { D.43978 } (escaped)
  _40 = MEM[(charD.10 * *)&D.43978];
  # DEBUG D#1ptD.0 => &D.43978
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.56707 => &D.43978
  if (&D.43978.D.11539._M_local_bufD.11541 != _40)
    goto <bb 143>;
  else
    goto <bb 144>;
;;    succ:       143 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                144 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 142, next block 144, flags: (NEW, REACHABLE)
;;    pred:       142 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43978.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.56699 => &D.43978
  # DEBUG __sizeD.56698 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43978
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43978
  # DEBUG D#185ptD.0 => &D.43978._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.56702 => _40
  # DEBUG __aD.56700 => D#183ptD.0
  # DEBUG __nD.56701 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.56705 => _40
  # DEBUG thisD.56703 => D#179ptD.0
  # DEBUG D.56704 => D#180ptD.0
  # .MEM_124 = VDEF <.MEM_49>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZdlPvD.2766 (_40);
;;    succ:       144 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 144, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 143, next block 145, flags: (NEW, REACHABLE)
;;    pred:       142 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                143 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_94 = PHI <.MEM_49(142), .MEM_124(143)>
  # DEBUG D#189ptD.0 => &D.43978._M_dataplusD.11519
  # DEBUG thisD.56708 => D#189ptD.0
  # DEBUG thisD.56709 => D#189ptD.0
  # DEBUG thisD.56710 => D#189ptD.0
  # .MEM_54 = VDEF <.MEM_94>
  D.43978 ={v} {CLOBBER};
  [LP 8] resx 15
;;    succ:       145 (EH,EXECUTABLE)

;;   basic block 145, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 144, next block 146, flags: (NEW)
;;    pred:       144 (EH,EXECUTABLE)
<L74>: [LP 8]
  goto <bb 147> (<L39>);
;;    succ:       147 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 146, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 145, next block 147, flags: (NEW)
;;    pred:       80 (EH,EXECUTABLE)
<L65>: [LP 32]
;;    succ:       147 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 146, next block 148, flags: (NEW, REACHABLE)
;;    pred:       146 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                82 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                120 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                145 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_9 = PHI <.MEM_117(146), .MEM_46(82), .MEM_289(120), .MEM_54(145)>
<L39>:
  [MNT 17] # .MEM_55 = VDEF <.MEM_9>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1EvD.23238 (&errD.43977);
  resx 14
;;    succ:      

;;   basic block 148, loop depth 1, count 0, freq 2840, maybe hot
;;   Invalid sum of incoming frequencies 1322, should be 2840
;;    prev block 147, next block 149, flags: (NEW, REACHABLE)
;;    pred:       14 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.66738 => &errD.43972
  # DEBUG __modeD.66739 => 16
  # DEBUG D#194ptD.0 => &errD.43972.D.23249
  # DEBUG thisD.66759 => D#194ptD.0
  # .MEM_292 = VDEF <.MEM_137>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt8ios_baseC2EvD.14886 (&MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B].D.19921);
  # .MEM_293 = VDEF <.MEM_292>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B].D.19921._vptr.ios_baseD.14897 = &MEM[(voidD.45 *)&_ZTVSt9basic_iosIcSt11char_traitsIcEED.19930 + 16B];
  # .MEM_294 = VDEF <.MEM_293>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B]._M_tieD.19825 = 0B;
  # .MEM_295 = VDEF <.MEM_294>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B]._M_fillD.19826 = 0;
  # .MEM_296 = VDEF <.MEM_295>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B]._M_fill_initD.19827 = 0;
  # .MEM_297 = VDEF <.MEM_296>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B]._M_streambufD.19828 = 0B;
  # .MEM_298 = VDEF <.MEM_297>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B]._M_ctypeD.19829 = 0B;
  # .MEM_299 = VDEF <.MEM_298>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B]._M_num_putD.19830 = 0B;
  # .MEM_300 = VDEF <.MEM_299>
  MEM[(struct basic_iosD.3827 *)&errD.43972 + 112B]._M_num_getD.19831 = 0B;
  # DEBUG thisD.66761 => &errD.43972.D.23246
  # DEBUG __vtt_parmD.66760 => &MEM[(voidD.45 *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B]
  # VUSE <.MEM_300>
  # PT = nonlocal escaped 
  iftmp.35_131 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 8B];
  # .MEM_301 = VDEF <.MEM_300>
  MEM[(struct basic_ostreamD.3833 *)&errD.43972]._vptr.basic_ostreamD.20605 = iftmp.35_131;
  # VUSE <.MEM_301>
  _132 = MEM[(long intD.12 *)iftmp.35_131 + -24B];
  # RANGE [0, 18446744073709551615]
  iftmp.36_133 = (sizetype) _132;
  # PT = { D.43972 } (escaped)
  _134 = &errD.43972.D.23246 + iftmp.36_133;
  # VUSE <.MEM_301>
  # PT = nonlocal escaped 
  iftmp.37_135 = MEM[(const voidD.45 * *)&_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEED.23255 + 16B];
  # .MEM_302 = VDEF <.MEM_301>
  _134->D.19921._vptr.ios_baseD.14897 = iftmp.37_135;
  [LP 10] # .MEM_303 = VDEF <.MEM_302>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_ED.19896 (_134, 0B);
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                149 (EH,EXECUTABLE)

;;   basic block 149, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 148, next block 150, flags: (NEW)
;;    pred:       148 (EH,EXECUTABLE)
<L75>: [LP 10]
  goto <bb 19> (<L44>);
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 150, loop depth 0, count 0, freq 169, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 1125, should be 169
;;    prev block 149, next block 151, flags: (NEW, REACHABLE)
;;    pred:       25 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 40] # .MEM_370 = VDEF <.MEM_347>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       151 (EH,EXECUTABLE)

;;   basic block 151, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 150, next block 152, flags: (NEW)
;;    pred:       150 (EH,EXECUTABLE)
<L76>: [LP 40]
  goto <bb 57> (<L47>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 152, loop depth 1, count 0, freq 1324, maybe hot
;;   Invalid sum of incoming frequencies 199, should be 1324
;;    prev block 151, next block 153, flags: (NEW, REACHABLE)
;;    pred:       25 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.66930 => _149
  # DEBUG __lastD.66929 => _147
  # DEBUG D#316ptD.0 => &__firstD.66930
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66932 => _149
  # DEBUG __lastD.66931 => _147
  __last.51_157 = (long intD.12) _147;
  __first.52_158 = (long intD.12) _149;
  _159 = __last.51_157 - __first.52_158;
  # RANGE [0, 18446744073709551615]
  __dnew.48_160 = (long unsigned intD.14) _159;
  # .MEM_348 = VDEF <.MEM_347>
  __dnewD.66907 = __dnew.48_160;
  if (__dnew.48_160 > 15)
    goto <bb 26>;
  else
    goto <bb 28>;
;;    succ:       26 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 153, loop depth 1, count 0, freq 1324, maybe hot
;;   Invalid sum of incoming frequencies 199, should be 1324
;;    prev block 152, next block 154, flags: (NEW, REACHABLE)
;;    pred:       35 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.66959 => _151
  # DEBUG __lastD.66958 => _148
  # DEBUG D#316ptD.0 => &__firstD.66959
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.66961 => _151
  # DEBUG __lastD.66960 => _148
  __last.51_169 = (long intD.12) _148;
  __first.52_170 = (long intD.12) _151;
  _171 = __last.51_169 - __first.52_170;
  # RANGE [0, 18446744073709551615]
  __dnew.48_172 = (long unsigned intD.14) _171;
  # .MEM_324 = VDEF <.MEM_323>
  __dnewD.66936 = __dnew.48_172;
  if (__dnew.48_172 > 15)
    goto <bb 36>;
  else
    goto <bb 39>;
;;    succ:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 154, loop depth 0, count 0, freq 169, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 1125, should be 169
;;    prev block 153, next block 155, flags: (NEW, REACHABLE)
;;    pred:       35 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 13] # .MEM_346 = VDEF <.MEM_323>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       155 (EH,EXECUTABLE)

;;   basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 154, next block 156, flags: (NEW)
;;    pred:       154 (EH,EXECUTABLE)
<L77>: [LP 13]
  goto <bb 57> (<L47>);
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 156, loop depth 0, count 0, freq 77, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 509, should be 77
;;    prev block 155, next block 157, flags: (NEW, REACHABLE)
;;    pred:       85 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 41] # .MEM_487 = VDEF <.MEM_464>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       157 (EH,EXECUTABLE)

;;   basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 156, next block 158, flags: (NEW)
;;    pred:       156 (EH,EXECUTABLE)
<L78>: [LP 41]
  goto <bb 117> (<L53>);
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 158, loop depth 1, count 0, freq 599, maybe hot
;;   Invalid sum of incoming frequencies 90, should be 599
;;    prev block 157, next block 159, flags: (NEW, REACHABLE)
;;    pred:       85 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.67220 => _226
  # DEBUG __lastD.67219 => _224
  # DEBUG D#316ptD.0 => &__firstD.67220
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.67222 => _226
  # DEBUG __lastD.67221 => _224
  __last.51_234 = (long intD.12) _224;
  __first.52_235 = (long intD.12) _226;
  _236 = __last.51_234 - __first.52_235;
  # RANGE [0, 18446744073709551615]
  __dnew.48_237 = (long unsigned intD.14) _236;
  # .MEM_465 = VDEF <.MEM_464>
  __dnewD.67197 = __dnew.48_237;
  if (__dnew.48_237 > 15)
    goto <bb 86>;
  else
    goto <bb 88>;
;;    succ:       86 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                88 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 159, loop depth 0, count 0, freq 77, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;   Invalid sum of incoming frequencies 509, should be 77
;;    prev block 158, next block 160, flags: (NEW, REACHABLE)
;;    pred:       95 [85.0%]  (TRUE_VALUE,EXECUTABLE)
  [LP 19] # .MEM_463 = VDEF <.MEM_440>
  # USE = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  # CLB = nonlocal null { D.15702 D.19930 D.23100 D.23250 D.43845 D.43972 D.43973 D.43976 D.43977 D.43978 D.66899 D.66900 D.66907 D.66936 D.67002 D.67189 D.67190 D.67197 D.67226 } (nonlocal, escaped)
  _ZSt19__throw_logic_errorPKcD.3961 ("basic_string::_M_construct null not valid");
;;    succ:       160 (EH,EXECUTABLE)

;;   basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 159, next block 161, flags: (NEW)
;;    pred:       159 (EH,EXECUTABLE)
<L79>: [LP 19]
  goto <bb 117> (<L53>);
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 161, loop depth 1, count 0, freq 599, maybe hot
;;   Invalid sum of incoming frequencies 90, should be 599
;;    prev block 160, next block 162, flags: (NEW, REACHABLE)
;;    pred:       95 [15.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.67249 => _228
  # DEBUG __lastD.67248 => _225
  # DEBUG D#316ptD.0 => &__firstD.67249
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.67251 => _228
  # DEBUG __lastD.67250 => _225
  __last.51_246 = (long intD.12) _225;
  __first.52_247 = (long intD.12) _228;
  _248 = __last.51_246 - __first.52_247;
  # RANGE [0, 18446744073709551615]
  __dnew.48_249 = (long unsigned intD.14) _248;
  # .MEM_441 = VDEF <.MEM_440>
  __dnewD.67226 = __dnew.48_249;
  if (__dnew.48_249 > 15)
    goto <bb 96>;
  else
    goto <bb 99>;
;;    succ:       96 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                99 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 162, loop depth 1, count 0, freq 6951, maybe hot
;;   Invalid sum of incoming frequencies 1224, should be 6951
;;    prev block 161, next block 1, flags: (NEW, REACHABLE)
;;    pred:       129 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#373ptD.0 => &this_13(D)->_in_use_byD.41306
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _75 = MEM[(intD.9 * *)this_13(D) + 152B];
  # DEBUG D#43ptD.0 => D#373ptD.0
  # DEBUG __nD.56655 => _41
  # DEBUG thisD.56656 => D#43ptD.0
  # PT = nonlocal escaped 
  _88 = _75 + _77;
  # VUSE <.MEM_6>
  _59 = *_88;
  if (_59 < 0)
    goto <bb 130>;
  else
    goto <bb 131>;
;;    succ:       130 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                131 [100.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = int; _Alloc = std::allocator<int>] (_ZNSt11_Deque_baseIiSaIiEED2Ev, funcdef_no=2441, decl_uid=43096, cgraph_uid=908, symbol_order=909)


Pass statistics:
----------------

std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = int; _Alloc = std::allocator<int>] (struct _Deque_baseD.42881 * const thisD.43097)
{
  intD.9 * * __nstartD.57628;
  intD.9 * * _4;
  intD.9 * * _5;
  intD.9 * * _6;
  intD.9 * _13;
  intD.9 * * pretmp_16;
  intD.9 * * prephitmp_17;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _4 = this_3(D)->_M_implD.43041._M_mapD.43043;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _5 = this_3(D)->_M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _6 = _5 + 8;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __nstart_7 = this_3(D)->_M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.57627 => this_3(D)
  # DEBUG __nstartD.57628 => __nstart_7
  # DEBUG __nfinishD.57629 => _6
  # DEBUG __nD.57630 => __nstart_7
  # DEBUG __nD.57630 => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # .MEM_19 = PHI <.MEM_2(D)(4), .MEM_8(6)>
  # DEBUG __nD.57630 => __nstart_20
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _13 = *__nstart_20;
  # DEBUG thisD.57632 => this_3(D)
  # DEBUG __pD.57631 => _13
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &this_3(D)->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.57636 => _13
  # DEBUG __aD.57634 => D#144ptD.0
  # DEBUG __nD.57635 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.57639 => _13
  # DEBUG thisD.57637 => D#140ptD.0
  # DEBUG D.57638 => D#141ptD.0
  # .MEM_8 = VDEF <.MEM_19>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (_13);
  # PT = nonlocal escaped 
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __nD.57630 => __nstart_14
  # DEBUG __nD.57630 => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8>
  pretmp_16 = this_3(D)->_M_implD.43041._M_mapD.43043;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_8(7), .MEM_2(D)(3)>
  # PT = nonlocal escaped 
  # prephitmp_17 = PHI <pretmp_16(7), _4(3)>
  # DEBUG D#447ptD.0 => this_3(D)->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#939ptD.0 => this_3(D)->_M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => this_3(D)
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.57617 => D#939ptD.0
  # DEBUG thisD.57619 => D#445ptD.0
  # DEBUG __nD.57618 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.57620
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.57623 => D#939ptD.0
  # DEBUG __aD.57621 => D#265ptD.0
  # DEBUG __nD.57622 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.57626 => D#939ptD.0
  # DEBUG thisD.57624 => D#261ptD.0
  # DEBUG D.57625 => D#262ptD.0
  # .MEM_15 = VDEF <.MEM_23>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (prephitmp_17);
  # DEBUG thisD.57611 => &__map_allocD.57620
  # DEBUG thisD.57590 => &__map_allocD.57620
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 8, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_15(8)>
  # DEBUG D#448ptD.0 => &this_3(D)->_M_implD.43041
  # DEBUG thisD.57640 => D#448ptD.0
  # DEBUG thisD.57641 => D#448ptD.0
  # DEBUG thisD.57642 => D#448ptD.0
  # .MEM_12 = VDEF <.MEM_1>
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

}


Creating dr for this_3(D)->_M_impl._M_map
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0
Creating dr for this_3(D)->_M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
Creating dr for this_3(D)->_M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_7 + 8, + , 8](no_overflow) < _5 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _5 - (unsigned long) __nstart_7) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 1
  exit condition [__nstart_7 + 8, + , 8](no_overflow) < _5 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _5 - (unsigned long) __nstart_7) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_20
analyze_innermost: success.
	base_address: __nstart_7
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *__nstart_7
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_7 + 8, + , 8](no_overflow) < _5 + 8
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _5 - (unsigned long) __nstart_7) + 7) / 8, bounded by 2305843009213693951
Creating dr for this_3(D)->_M_impl._M_map
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 0
	Access function 1: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:11, LOOPS:1, CONDITIONS:3, STMTS:71)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_9 })
  {
    <bb 2>:
    # VUSE <.MEM_2(D)>
    _4 = this_3(D)->_M_impl._M_map;
    if (_4 != 0B)
      goto <bb 3>;
    else
      goto <bb 9>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_8 bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_2(D)>
    _5 = this_3(D)->_M_impl._M_finish._M_node;
    _6 = _5 + 8;
    # VUSE <.MEM_2(D)>
    __nstart_7 = this_3(D)->_M_impl._M_start._M_node;
    # DEBUG this => this_3(D)
    # DEBUG __nstart => __nstart_7
    # DEBUG __nfinish => _6
    # DEBUG __n => __nstart_7
    # DEBUG __n => __nstart_7
    if (_6 <= __nstart_7)
      goto <bb 8>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 })
  {
    <bb 4>:

  }
  bb_7 (preds = {bb_5 }, succs = {bb_10 })
  {
    <bb 7>:

  }
  bb_10 (preds = {bb_7 }, succs = {bb_8 })
  {
    <bb 10>:
    # VUSE <.MEM_8>
    pretmp_16 = this_3(D)->_M_impl._M_map;

  }
  bb_8 (preds = {bb_10 bb_3 }, succs = {bb_9 })
  {
    <bb 8>:
    # .MEM_23 = PHI <.MEM_8(10), .MEM_2(D)(3)>
    # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
    # DEBUG D#447 => this_3(D)->_M_impl._M_map_size
    # DEBUG D#939 => this_3(D)->_M_impl._M_map
    # DEBUG D#445 => this_3(D)
    # DEBUG D#446 => D#447
    # DEBUG __p => D#939
    # DEBUG this => D#445
    # DEBUG __n => D#446
    # DEBUG D#444 => D#446
    # DEBUG D#443 => D#445
    # DEBUG D#442 => D#443
    # DEBUG this => D#442
    # DEBUG D#441 => D#442
    # DEBUG this => D#441
    # DEBUG this => NULL
    # DEBUG D.57578 => NULL
    # DEBUG this => NULL
    # DEBUG D#265 => &__map_alloc
    # DEBUG D#266 => D#444
    # DEBUG __p => D#939
    # DEBUG __a => D#265
    # DEBUG __n => D#266
    # DEBUG D#264 => D#266
    # DEBUG D#263 => D#265
    # DEBUG D#261 => D#263
    # DEBUG D#262 => D#264
    # DEBUG __p => D#939
    # DEBUG this => D#261
    # DEBUG D.57625 => D#262
    # .MEM_15 = VDEF <.MEM_23>
    operator delete (prephitmp_17);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc

  }
  bb_9 (preds = {bb_2 bb_8 }, succs = {bb_1 })
  {
    <bb 9>:
    # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_15(8)>
    # DEBUG D#448 => &this_3(D)->_M_impl
    # DEBUG this => D#448
    # DEBUG this => D#448
    # DEBUG this => D#448
    # .MEM_12 = VDEF <.MEM_1>
    MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
    # VUSE <.MEM_12>
    return;

  }
  loop_1 (header = 5, latch = 6, niter = (((unsigned long) _5 - (unsigned long) __nstart_7) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_5 (preds = {bb_4 bb_6 }, succs = {bb_7 bb_6 })
    {
      <bb 5>:
      # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
      # .MEM_19 = PHI <.MEM_2(D)(4), .MEM_8(6)>
      # DEBUG __n => __nstart_20
      # VUSE <.MEM_19>
      _13 = *__nstart_20;
      # DEBUG this => this_3(D)
      # DEBUG __p => _13
      # DEBUG __size => 4
      # DEBUG D#167 => &this_3(D)->_M_impl
      # DEBUG D#144 => D#167
      # DEBUG __p => _13
      # DEBUG __a => D#144
      # DEBUG __n => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG D#140 => D#142
      # DEBUG D#141 => D#143
      # DEBUG __p => _13
      # DEBUG this => D#140
      # DEBUG D.57638 => D#141
      # .MEM_8 = VDEF <.MEM_19>
      operator delete (_13);
      __nstart_14 = __nstart_20 + 8;
      # DEBUG __n => __nstart_14
      # DEBUG __n => __nstart_14
      if (_6 <= __nstart_14)
        goto <bb 7>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_5 })
    {
      <bb 6>:
      goto <bb 5>;

    }
  }
}

Pass statistics:
----------------

std::_Deque_base<_Tp, _Alloc>::~_Deque_base() [with _Tp = int; _Alloc = std::allocator<int>] (struct _Deque_baseD.42881 * const thisD.43097)
{
  intD.9 * * __nstartD.57628;
  intD.9 * * _4;
  intD.9 * * _5;
  intD.9 * * _6;
  intD.9 * _13;
  intD.9 * * pretmp_16;
  intD.9 * * prephitmp_17;

;;   basic block 2, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _4 = this_3(D)->_M_implD.43041._M_mapD.43043;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  _5 = this_3(D)->_M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _6 = _5 + 8;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal escaped 
  __nstart_7 = this_3(D)->_M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.57627 => this_3(D)
  # DEBUG __nstartD.57628 => __nstart_7
  # DEBUG __nfinishD.57629 => _6
  # DEBUG __nD.57630 => __nstart_7
  # DEBUG __nD.57630 => __nstart_7
  if (_6 <= __nstart_7)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_20 = PHI <__nstart_7(4), __nstart_14(6)>
  # .MEM_19 = PHI <.MEM_2(D)(4), .MEM_8(6)>
  # DEBUG __nD.57630 => __nstart_20
  # VUSE <.MEM_19>
  # PT = nonlocal escaped 
  _13 = *__nstart_20;
  # DEBUG thisD.57632 => this_3(D)
  # DEBUG __pD.57631 => _13
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &this_3(D)->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.57636 => _13
  # DEBUG __aD.57634 => D#144ptD.0
  # DEBUG __nD.57635 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.57639 => _13
  # DEBUG thisD.57637 => D#140ptD.0
  # DEBUG D.57638 => D#141ptD.0
  # .MEM_8 = VDEF <.MEM_19>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (_13);
  # PT = nonlocal escaped 
  __nstart_14 = __nstart_20 + 8;
  # DEBUG __nD.57630 => __nstart_14
  # DEBUG __nD.57630 => __nstart_14
  if (_6 <= __nstart_14)
    goto <bb 7>;
  else
    goto <bb 6>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 6, next block 10, flags: (NEW)
;;    pred:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU)

;;   basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 8, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_8>
  pretmp_16 = this_3(D)->_M_implD.43041._M_mapD.43043;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 10, next block 9, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_23 = PHI <.MEM_8(10), .MEM_2(D)(3)>
  # PT = nonlocal escaped 
  # prephitmp_17 = PHI <pretmp_16(10), _4(3)>
  # DEBUG D#447ptD.0 => this_3(D)->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#939ptD.0 => this_3(D)->_M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => this_3(D)
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.57617 => D#939ptD.0
  # DEBUG thisD.57619 => D#445ptD.0
  # DEBUG __nD.57618 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.57620
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.57623 => D#939ptD.0
  # DEBUG __aD.57621 => D#265ptD.0
  # DEBUG __nD.57622 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.57626 => D#939ptD.0
  # DEBUG thisD.57624 => D#261ptD.0
  # DEBUG D.57625 => D#262ptD.0
  # .MEM_15 = VDEF <.MEM_23>
  # USE = nonlocal 
  # CLB = nonlocal 
  _ZdlPvD.2766 (prephitmp_17);
  # DEBUG thisD.57611 => &__map_allocD.57620
  # DEBUG thisD.57590 => &__map_allocD.57620
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1002, maybe hot
;;    prev block 8, next block 1, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_2(D)(2), .MEM_15(8)>
  # DEBUG D#448ptD.0 => &this_3(D)->_M_implD.43041
  # DEBUG thisD.57640 => D#448ptD.0
  # DEBUG thisD.57641 => D#448ptD.0
  # DEBUG thisD.57642 => D#448ptD.0
  # .MEM_12 = VDEF <.MEM_1>
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  # VUSE <.MEM_12>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKi, funcdef_no=2534, decl_uid=40161, cgraph_uid=1001, symbol_order=1002)


Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.39532 * const thisD.40162, struct iteratorD.39806 __positionD.40163, size_typeD.39814 __nD.40164, const value_typeD.39801 & __xD.40165)
{
  const long unsigned intD.14 D.68134;
  const size_typeD.39814 __lenD.68128;
  size_typeD.39814 D.68133;
  size_typeD.39814 __nD.68126;
  intD.9 * D.68124;
  const ptrdiff_tD.2819 _NumD.68114;
  intD.9 * D.68115;
  intD.9 * const __positionD.59114;
  intD.9 * __firstD.59082;
  const ptrdiff_tD.2819 _NumD.59076;
  const ptrdiff_tD.2819 _NumD.59037;
  intD.9 * __firstD.58965;
  long unsigned intD.14 __nD.58966;
  intD.9 * __firstD.58916;
  const ptrdiff_tD.2819 _NumD.58912;
  intD.9 * __firstD.58865;
  intD.9 * __new_finishD.45722;
  const size_typeD.39814 __elems_afterD.45696;
  value_typeD.39801 __x_copyD.45695;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.44317 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.74_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.71_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#946ptD.0 => MEM[(struct __normal_iteratorD.39807 *)&__positionD.40163]
  # DEBUG __positionD.59114 => D#946ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(13), .MEM_54(23), .MEM_154(26)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.39807 *)&__positionD.40163];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.40238._M_implD.39729._M_end_of_storageD.39733;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.40238._M_implD.39729._M_finishD.39732;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.45695 => __x_copy_35
  # DEBUG thisD.58860 => this_4(D)
  # DEBUG D#76ptD.0 => &this_4(D)->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.58862 => NULL
  # DEBUG __iD.58861 => D#76ptD.0
  # DEBUG __lhsD.58857 => &D.45697
  # DEBUG __rhsD.58858 => &__positionD.40163
  # DEBUG thisD.53784 => &D.45697
  # DEBUG thisD.53782 => &__positionD.40163
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.39814) _22;
  # DEBUG __elems_afterD.45696 => __elems_after_37
  # DEBUG __old_finishD.45698 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#550ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.58914 => D#550ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.58879 => _41
  # DEBUG __lastD.58880 => __first_7
  # DEBUG __resultD.58881 => __first_7
  # DEBUG __allocD.58882 => D#239ptD.0
  # DEBUG D#238ptD.0 => D#239ptD.0
  # DEBUG D#235ptD.0 => D#238ptD.0
  # DEBUG __firstD.58886 => _41
  # DEBUG __lastD.58885 => __first_7
  # DEBUG __resultD.58884 => __first_7
  # DEBUG D.58883 => D#235ptD.0
  # DEBUG __firstD.58889 => _41
  # DEBUG __lastD.58888 => __first_7
  # DEBUG __resultD.58887 => __first_7
  # DEBUG __assignableD.58892 => 1
  # DEBUG __firstD.58895 => _41
  # DEBUG __lastD.58894 => __first_7
  # DEBUG __resultD.58893 => __first_7
  # DEBUG __firstD.58898 => _41
  # DEBUG __lastD.58897 => __first_7
  # DEBUG __resultD.58896 => __first_7
  # DEBUG __itD.54938 => __first_7
  # DEBUG __itD.54242 => __first_7
  # DEBUG __itD.54936 => _41
  # DEBUG __itD.54242 => _41
  # DEBUG __firstD.58901 => _41
  # DEBUG __lastD.58900 => __first_7
  # DEBUG __resultD.58899 => __first_7
  # DEBUG __itD.54918 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.54916 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.54914 => _41
  # DEBUG __itD.54245 => _41
  # DEBUG __firstD.58904 => NULL
  # DEBUG __lastD.58903 => NULL
  # DEBUG __resultD.58902 => NULL
  # DEBUG __simpleD.58908 => 1
  # DEBUG __firstD.58911 => NULL
  # DEBUG __lastD.58910 => NULL
  # DEBUG __resultD.58909 => NULL
  __first.74_49 = (long intD.12) _41;
  _47 = _8 - __first.74_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.58912 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.40238._M_implD.39729._M_finishD.39732;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.40238._M_implD.39729._M_finishD.39732 = _43;
  # DEBUG thisD.58877 => &__positionD.40163
  # DEBUG __firstD.68098 => D#946ptD.0
  # DEBUG __lastD.68099 => _41
  # DEBUG __resultD.68100 => __first_7
  # DEBUG __itD.57014 => _41
  # DEBUG __itD.54242 => _41
  # DEBUG __itD.57012 => D#946ptD.0
  # DEBUG __itD.54242 => D#946ptD.0
  # DEBUG __firstD.68103 => D#946ptD.0
  # DEBUG __lastD.68102 => _41
  # DEBUG __resultD.68101 => __first_7
  # DEBUG __itD.56994 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.56992 => _41
  # DEBUG __itD.54245 => _41
  # DEBUG __itD.56990 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG __firstD.68106 => NULL
  # DEBUG __lastD.68105 => NULL
  # DEBUG __resultD.68104 => NULL
  # DEBUG __simpleD.68110 => 1
  # DEBUG __firstD.68113 => NULL
  # DEBUG __lastD.68112 => NULL
  # DEBUG __resultD.68111 => NULL
  _104 = __first.74_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.68114 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.58875 => &__positionD.40163
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.58873 => &__positionD.40163
  # DEBUG D#234ptD.0 => &__x_copyD.45695
  # DEBUG __firstD.58865 => D#946ptD.0
  # DEBUG __lastD.58866 => _48
  # DEBUG D#233ptD.0 => D#234ptD.0
  # DEBUG __valueD.58868 => D#233ptD.0
  # DEBUG __itD.54785 => _48
  # DEBUG __itD.54245 => _48
  # DEBUG __itD.54783 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG __firstD.58871 => NULL
  # DEBUG __lastD.58870 => NULL
  # DEBUG __valueD.58869 => D#232ptD.0
  # DEBUG __tmpD.58872 => __x_copy_35
  # DEBUG __firstD.58871 => D#946ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.58871 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.58871 => __position_55
  # DEBUG __firstD.58871 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#551ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.58987 => D#551ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#543ptD.0 => &__x_copyD.45695
  # DEBUG __firstD.58965 => __first_7
  # DEBUG __nD.58966 => __n_50
  # DEBUG D#542ptD.0 => D#543ptD.0
  # DEBUG __xD.58969 => D#542ptD.0
  # DEBUG D.58968 => D#544ptD.0
  # DEBUG D#541ptD.0 => D#542ptD.0
  # DEBUG __firstD.58972 => __first_7
  # DEBUG __nD.58971 => __n_50
  # DEBUG D#540ptD.0 => D#541ptD.0
  # DEBUG __xD.58970 => D#540ptD.0
  # DEBUG __assignableD.58974 => 1
  # DEBUG D#539ptD.0 => D#540ptD.0
  # DEBUG __firstD.58977 => __first_7
  # DEBUG __nD.58976 => __n_50
  # DEBUG D#538ptD.0 => D#539ptD.0
  # DEBUG __xD.58975 => D#538ptD.0
  # DEBUG D#537ptD.0 => D#538ptD.0
  # DEBUG __firstD.58980 => __first_7
  # DEBUG __nD.58979 => __n_50
  # DEBUG D#536ptD.0 => D#537ptD.0
  # DEBUG __valueD.58978 => D#536ptD.0
  # DEBUG __itD.58729 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG D#535ptD.0 => D#536ptD.0
  # DEBUG __firstD.58983 => NULL
  # DEBUG __nD.58982 => __n_50
  # DEBUG __valueD.58981 => D#535ptD.0
  # DEBUG __tmpD.58984 => __x_copy_35
  # DEBUG __niterD.58985 => __n_50
  # DEBUG __niterD.58985 => __n_50
  # DEBUG __firstD.58983 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.58985 => __n_111
  # DEBUG __firstD.58983 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.58985 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.58983 => __first_64
  # DEBUG __niterD.58985 => __n_63
  # DEBUG __firstD.58983 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(18), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(18), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.40238._M_implD.39729._M_finishD.39732 = __first_125;
  # DEBUG D#552ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.58963 => D#552ptD.0
  # DEBUG thisD.58961 => &__positionD.40163
  # DEBUG __firstD.58926 => D#946ptD.0
  # DEBUG __lastD.58927 => __first_7
  # DEBUG __resultD.58928 => __first_125
  # DEBUG __allocD.58929 => D#239ptD.0
  # DEBUG D#238ptD.0 => D#239ptD.0
  # DEBUG D#235ptD.0 => D#238ptD.0
  # DEBUG __firstD.58933 => D#946ptD.0
  # DEBUG __lastD.58932 => __first_7
  # DEBUG __resultD.58931 => __first_125
  # DEBUG D.58930 => D#235ptD.0
  # DEBUG __firstD.58936 => D#946ptD.0
  # DEBUG __lastD.58935 => __first_7
  # DEBUG __resultD.58934 => __first_125
  # DEBUG __assignableD.58939 => 1
  # DEBUG __firstD.58942 => D#946ptD.0
  # DEBUG __lastD.58941 => __first_7
  # DEBUG __resultD.58940 => __first_125
  # DEBUG __firstD.58945 => D#946ptD.0
  # DEBUG __lastD.58944 => __first_7
  # DEBUG __resultD.58943 => __first_125
  # DEBUG __itD.54938 => __first_7
  # DEBUG __itD.54242 => __first_7
  # DEBUG __itD.54936 => D#946ptD.0
  # DEBUG __itD.54242 => D#946ptD.0
  # DEBUG __firstD.58948 => D#946ptD.0
  # DEBUG __lastD.58947 => __first_7
  # DEBUG __resultD.58946 => __first_125
  # DEBUG __itD.54918 => __first_125
  # DEBUG __itD.54245 => __first_125
  # DEBUG __itD.54916 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.54914 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG __firstD.58951 => NULL
  # DEBUG __lastD.58950 => NULL
  # DEBUG __resultD.58949 => NULL
  # DEBUG __simpleD.58955 => 1
  # DEBUG __firstD.58958 => NULL
  # DEBUG __lastD.58957 => NULL
  # DEBUG __resultD.58956 => NULL
  # DEBUG _NumD.58959 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.40238._M_implD.39729._M_finishD.39732;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.40238._M_implD.39729._M_finishD.39732 = _53;
  # DEBUG thisD.58924 => &__positionD.40163
  # DEBUG D#234ptD.0 => &__x_copyD.45695
  # DEBUG __firstD.58916 => D#946ptD.0
  # DEBUG __lastD.58917 => __first_7
  # DEBUG D#233ptD.0 => D#234ptD.0
  # DEBUG __valueD.58919 => D#233ptD.0
  # DEBUG __itD.54785 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.54783 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG __firstD.58922 => NULL
  # DEBUG __lastD.58921 => NULL
  # DEBUG __valueD.58920 => D#232ptD.0
  # DEBUG __tmpD.58923 => __x_copy_35
  # DEBUG __firstD.58922 => D#946ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.58922 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.58922 => __position_58
  # DEBUG __firstD.58922 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.68125 => this_4(D)
  # DEBUG __nD.68126 => __n_2(D)
  # DEBUG __nD.68126 => __n_2(D)
  # DEBUG __sD.68127 => "vector::_M_fill_insert"
  # DEBUG D#402ptD.0 => this_4(D)
  # DEBUG thisD.56946 => D#402ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => &D#401ptD.0->D.40238
  # DEBUG thisD.56936 => D#400ptD.0
  # DEBUG __aD.56928 => D#399ptD.0
  # DEBUG D#398ptD.0 => D#399ptD.0
  # DEBUG D#381ptD.0 => D#398ptD.0
  # DEBUG thisD.56919 => D#381ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG thisD.68131 => D#64ptD.0
  # DEBUG thisD.68132 => D#64ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG thisD.56964 => D#64ptD.0
  # DEBUG thisD.56963 => D#64ptD.0
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG thisD.56959 => D#64ptD.0
  # DEBUG thisD.56958 => D#64ptD.0
  # DEBUG __aD.68130 => &D.68134
  # DEBUG __bD.68129 => &__nD.68126
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.68128 => __len_124
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG thisD.56951 => D#64ptD.0
  # DEBUG thisD.56950 => D#64ptD.0
  # DEBUG D#402ptD.0 => this_4(D)
  # DEBUG thisD.56966 => D#402ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => &D#401ptD.0->D.40238
  # DEBUG thisD.56936 => D#400ptD.0
  # DEBUG __aD.56928 => D#399ptD.0
  # DEBUG D#398ptD.0 => D#399ptD.0
  # DEBUG D#381ptD.0 => D#398ptD.0
  # DEBUG thisD.56919 => D#381ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.45718 => NULL
  # DEBUG thisD.59109 => this_4(D)
  # DEBUG D#77ptD.0 => &this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG thisD.59111 => NULL
  # DEBUG __iD.59110 => D#77ptD.0
  # DEBUG __lhsD.59106 => &__positionD.40163
  # DEBUG __rhsD.59107 => &D.45720
  # DEBUG thisD.53784 => &__positionD.40163
  # DEBUG thisD.53782 => &D.45720
  # DEBUG D#563ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.45719 => (const size_typeD.39814) D#563ptD.0
  # DEBUG D#562ptD.0 => &this_4(D)->D.40238
  # DEBUG D#389ptD.0 => D#562ptD.0
  # DEBUG __nD.68116 => NULL
  # DEBUG thisD.68117 => D#389ptD.0
  # DEBUG D#388ptD.0 => D#389ptD.0
  # DEBUG D#387ptD.0 => &D#388ptD.0->_M_implD.39729
  # DEBUG D#386ptD.0 => D#387ptD.0
  # DEBUG __nD.68120 => NULL
  # DEBUG __aD.68119 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.68123 => NULL
  # DEBUG thisD.68121 => D#383ptD.0
  # DEBUG D.68122 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.68137 } (escaped heap)
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.40238._M_implD.39729._M_startD.39731;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.40238._M_implD.39729._M_finishD.39732;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.68137 } (escaped heap)
  # iftmp.71_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.68137 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
  # DEBUG __new_startD.45721 => NULL
  # DEBUG __new_finishD.45722 => NULL
  # DEBUG D#546ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.59104 => D#546ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.68137 } (escaped heap)
  __first_20 = iftmp.71_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#543ptD.0 => __x_21(D)
  # DEBUG __firstD.59082 => __first_20
  # DEBUG __nD.59083 => __n_2(D)
  # DEBUG D#542ptD.0 => D#543ptD.0
  # DEBUG __xD.59086 => D#542ptD.0
  # DEBUG D.59085 => D#544ptD.0
  # DEBUG D#541ptD.0 => D#542ptD.0
  # DEBUG __firstD.59089 => __first_20
  # DEBUG __nD.59088 => __n_2(D)
  # DEBUG D#540ptD.0 => D#541ptD.0
  # DEBUG __xD.59087 => D#540ptD.0
  # DEBUG __assignableD.59091 => 1
  # DEBUG D#539ptD.0 => D#540ptD.0
  # DEBUG __firstD.59094 => __first_20
  # DEBUG __nD.59093 => __n_2(D)
  # DEBUG D#538ptD.0 => D#539ptD.0
  # DEBUG __xD.59092 => D#538ptD.0
  # DEBUG D#537ptD.0 => D#538ptD.0
  # DEBUG __firstD.59097 => __first_20
  # DEBUG __nD.59096 => __n_2(D)
  # DEBUG D#536ptD.0 => D#537ptD.0
  # DEBUG __valueD.59095 => D#536ptD.0
  # DEBUG __itD.58729 => __first_20
  # DEBUG __itD.54245 => __first_20
  # DEBUG D#535ptD.0 => D#536ptD.0
  # DEBUG __firstD.59100 => NULL
  # DEBUG __nD.59099 => __n_2(D)
  # DEBUG __valueD.59098 => D#535ptD.0
  # DEBUG __tmpD.59101 => _56
  # DEBUG __niterD.59102 => __n_2(D)
  # DEBUG __niterD.59102 => __n_2(D)
  # DEBUG __firstD.59100 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(33)>
  # PT = null { D.68137 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(33)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(33)>
  # DEBUG __niterD.59102 => __n_132
  # DEBUG __firstD.59100 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.59102 => __n_79
  # PT = null { D.68137 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.59100 => __first_80
  # DEBUG __niterD.59102 => __n_79
  # DEBUG __firstD.59100 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.45722 => 0B
  # DEBUG D#547ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.59080 => D#547ptD.0
  # DEBUG thisD.59078 => &__positionD.40163
  # DEBUG D#945ptD.0 => this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.59043 => D#945ptD.0
  # DEBUG __lastD.59044 => D#946ptD.0
  # DEBUG __resultD.59045 => NULL
  # DEBUG __allocD.59046 => D#237ptD.0
  # DEBUG D#236ptD.0 => D#237ptD.0
  # DEBUG D#235ptD.0 => D#236ptD.0
  # DEBUG __firstD.59050 => D#945ptD.0
  # DEBUG __lastD.59049 => D#946ptD.0
  # DEBUG __resultD.59048 => NULL
  # DEBUG D.59047 => D#235ptD.0
  # DEBUG __firstD.59053 => D#945ptD.0
  # DEBUG __lastD.59052 => D#946ptD.0
  # DEBUG __resultD.59051 => NULL
  # DEBUG __assignableD.59056 => 1
  # DEBUG __firstD.59059 => D#945ptD.0
  # DEBUG __lastD.59058 => D#946ptD.0
  # DEBUG __resultD.59057 => NULL
  # DEBUG __firstD.59062 => D#945ptD.0
  # DEBUG __lastD.59061 => D#946ptD.0
  # DEBUG __resultD.59060 => NULL
  # DEBUG __itD.54938 => D#946ptD.0
  # DEBUG __itD.54242 => D#946ptD.0
  # DEBUG __itD.54936 => D#945ptD.0
  # DEBUG __itD.54242 => D#945ptD.0
  # DEBUG __firstD.59065 => D#945ptD.0
  # DEBUG __lastD.59064 => D#946ptD.0
  # DEBUG __resultD.59063 => NULL
  # DEBUG __itD.54918 => NULL
  # DEBUG __itD.54245 => NULL
  # DEBUG __itD.54916 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG __itD.54914 => D#945ptD.0
  # DEBUG __itD.54245 => D#945ptD.0
  # DEBUG __firstD.59068 => NULL
  # DEBUG __lastD.59067 => NULL
  # DEBUG __resultD.59066 => NULL
  # DEBUG __simpleD.59072 => 1
  # DEBUG __firstD.59075 => NULL
  # DEBUG __lastD.59074 => NULL
  # DEBUG __resultD.59073 => NULL
  # DEBUG D#944ptD.0 => (long intD.12) D#945ptD.0
  # DEBUG D#943ptD.0 => _158 - D#944ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.59076 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       36 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memmoveD.995 (iftmp.71_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#942ptD.0 => (long unsigned intD.14) D#943ptD.0
  # DEBUG __new_finishD.45722 => iftmp.71_113 + D#942ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.68137 } (escaped heap)
  __new_finish_26 = iftmp.71_113 + _133;
  # DEBUG __new_finishD.45722 => __new_finish_26
  # DEBUG D#548ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.59041 => D#548ptD.0
  # DEBUG D#941ptD.0 => this_4(D)->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59039 => &__positionD.40163
  # DEBUG __firstD.59004 => D#946ptD.0
  # DEBUG __lastD.59005 => D#941ptD.0
  # DEBUG __resultD.59006 => __new_finish_26
  # DEBUG __allocD.59007 => D#237ptD.0
  # DEBUG D#236ptD.0 => D#237ptD.0
  # DEBUG D#235ptD.0 => D#236ptD.0
  # DEBUG __firstD.59011 => D#946ptD.0
  # DEBUG __lastD.59010 => D#941ptD.0
  # DEBUG __resultD.59009 => __new_finish_26
  # DEBUG D.59008 => D#235ptD.0
  # DEBUG __firstD.59014 => D#946ptD.0
  # DEBUG __lastD.59013 => D#941ptD.0
  # DEBUG __resultD.59012 => __new_finish_26
  # DEBUG __assignableD.59017 => 1
  # DEBUG __firstD.59020 => D#946ptD.0
  # DEBUG __lastD.59019 => D#941ptD.0
  # DEBUG __resultD.59018 => __new_finish_26
  # DEBUG __firstD.59023 => D#946ptD.0
  # DEBUG __lastD.59022 => D#941ptD.0
  # DEBUG __resultD.59021 => __new_finish_26
  # DEBUG __itD.54938 => D#941ptD.0
  # DEBUG __itD.54242 => D#941ptD.0
  # DEBUG __itD.54936 => D#946ptD.0
  # DEBUG __itD.54242 => D#946ptD.0
  # DEBUG __firstD.59026 => D#946ptD.0
  # DEBUG __lastD.59025 => D#941ptD.0
  # DEBUG __resultD.59024 => __new_finish_26
  # DEBUG __itD.54918 => __new_finish_26
  # DEBUG __itD.54245 => __new_finish_26
  # DEBUG __itD.54916 => D#941ptD.0
  # DEBUG __itD.54245 => D#941ptD.0
  # DEBUG __itD.54914 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG __firstD.59029 => NULL
  # DEBUG __lastD.59028 => NULL
  # DEBUG __resultD.59027 => NULL
  # DEBUG __simpleD.59033 => 1
  # DEBUG __firstD.59036 => NULL
  # DEBUG __lastD.59035 => NULL
  # DEBUG __resultD.59034 => NULL
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.59037 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.68137 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.45722 => _70
  # DEBUG D#549ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.59002 => D#549ptD.0
  # DEBUG D#561ptD.0 => this_4(D)->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#560ptD.0 => this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.58999 => D#560ptD.0
  # DEBUG __lastD.59000 => D#561ptD.0
  # DEBUG D.59001 => NULL
  # DEBUG D#134ptD.0 => D#560ptD.0
  # DEBUG D#135ptD.0 => D#561ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#559ptD.0 => this_4(D)->D.40238._M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#558ptD.0 => (long intD.12) D#559ptD.0
  # DEBUG D#557ptD.0 => (long intD.12) D#945ptD.0
  # DEBUG D#556ptD.0 => D#558ptD.0 - D#557ptD.0
  # DEBUG D#555ptD.0 => D#556ptD.0 /[ex] 4
  # DEBUG D#554ptD.0 => (long unsigned intD.14) D#555ptD.0
  # DEBUG D#553ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.58989 => D#553ptD.0
  # DEBUG __pD.58990 => D#945ptD.0
  # DEBUG __nD.58991 => D#554ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#553ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#554ptD.0
  # DEBUG __pD.58995 => D#945ptD.0
  # DEBUG __aD.58993 => D#144ptD.0
  # DEBUG __nD.58994 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.58998 => D#945ptD.0
  # DEBUG thisD.58996 => D#140ptD.0
  # DEBUG D.58997 => D#141ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.40238._M_implD.39729._M_startD.39731 = iftmp.71_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.40238._M_implD.39729._M_finishD.39732 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.40238._M_implD.39729._M_end_of_storageD.39733 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(3), .MEM_34(44)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.45718 => NULL
  # DEBUG thisD.59109 => this_4(D)
  # DEBUG D#77ptD.0 => &this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG thisD.59111 => NULL
  # DEBUG __iD.59110 => D#77ptD.0
  # DEBUG __lhsD.59106 => &__positionD.40163
  # DEBUG __rhsD.59107 => &D.45720
  # DEBUG thisD.53784 => &__positionD.40163
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.53782 => &D.45720
  _143 = _144 - _116;
  # DEBUG D#563ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.45719 => (const size_typeD.39814) D#563ptD.0
  # DEBUG D#562ptD.0 => &this_4(D)->D.40238
  # DEBUG D#389ptD.0 => D#562ptD.0
  # DEBUG __nD.68116 => NULL
  # DEBUG thisD.68117 => D#389ptD.0
  # DEBUG D#388ptD.0 => D#389ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.45718 => NULL
  # DEBUG thisD.59109 => this_4(D)
  # DEBUG D#77ptD.0 => &this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG thisD.59111 => NULL
  # DEBUG __iD.59110 => D#77ptD.0
  # DEBUG __lhsD.59106 => &__positionD.40163
  # DEBUG __rhsD.59107 => &D.45720
  # DEBUG thisD.53784 => &__positionD.40163
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.53782 => &D.45720
  _150 = _151 - _116;
  # DEBUG D#563ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.45719 => (const size_typeD.39814) D#563ptD.0
  # DEBUG D#562ptD.0 => &this_4(D)->D.40238
  # DEBUG D#389ptD.0 => D#562ptD.0
  # DEBUG __nD.68116 => NULL
  # DEBUG thisD.68117 => D#389ptD.0
  # DEBUG D#388ptD.0 => D#389ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct __normal_iterator *)&__position]
analyze_innermost: success.
	base_address: &__position
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct __normal_iterator *)&__position]
Creating dr for this_4(D)->D.40238._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.40238._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__x_21(D)
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__x_21(D)
Creating dr for this_4(D)->D.40238._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Creating dr for *__position_109
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_1
Analyzing # of iterations of loop 1
  exit condition [__position_16 + 4, + , 4](no_overflow) != _48
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Creating dr for *__first_76
analyze_innermost: success.
	base_address: __first_7
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__first_7
	Access function 0: {0B, +, 4}_3
Analyzing # of iterations of loop 3
  exit condition [__n_50 + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_50 + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.40238._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.40238._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Creating dr for *__position_110
analyze_innermost: success.
	base_address: __position_16
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *__position_16
	Access function 0: {0B, +, 4}_2
Analyzing # of iterations of loop 2
  exit condition [__position_16 + 4, + , 4](no_overflow) != __first_7
  bounds on difference of bases: -18446744073709551615 ... 18446744073709551611
Applying pattern match.pd:114, generic-match.c:6953
  result:
    # of iterations ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, bounded by 4611686018427387902
Creating dr for MEM[(int * *)this_4(D)]
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_4(D)]
Applying pattern match.pd:725, generic-match.c:1428
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for MEM[(const int &)__x_21(D)]
analyze_innermost: success.
	base_address: __x_21(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const int &)__x_21(D)]
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.71_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.71_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.71_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.71_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.71_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.71_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.71_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.71_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.71_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.71_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.71_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.71_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.71_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.71_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Creating dr for *__first_155
analyze_innermost: success.
	base_address: iftmp.71_113 + (long unsigned int) _153
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 256
	base_object: *iftmp.71_113 + (long unsigned int) _153
	Access function 0: {0B, +, 4}_4
Analyzing # of iterations of loop 4
  exit condition [__n_2(D) + 18446744073709551615, + , 18446744073709551615] != 0
  bounds on difference of bases: -18446744073709551615 ... 0
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations __n_2(D) + 18446744073709551615, bounded by 0x0ffffffffffffffff
Creating dr for this_4(D)->D.40238._M_impl._M_start
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.40238._M_impl._M_finish
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_4(D)->D.40238._M_impl._M_end_of_storage
analyze_innermost: success.
	base_address: this_4(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_4(D)
	Access function 0: 128
	Access function 1: 0
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:18)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:39)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:56, LOOPS:4, CONDITIONS:19, STMTS:600)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_4 bb_3 })
  {
    <bb 2>:
    # DEBUG D#946 => MEM[(struct __normal_iterator *)&__position]
    # DEBUG __position => D#946
    if (__n_2(D) != 0)
      goto <bb 4>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 bb_10 bb_48 bb_23 bb_49 }, succs = {bb_55 })
  {
    <bb 3>:
    # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>

  }
  bb_55 (preds = {bb_3 }, succs = {bb_45 })
  {
    <bb 55>:
    goto <bb 45>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_28 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    __position_16 = MEM[(struct __normal_iterator *)&__position];
    # VUSE <.MEM_3(D)>
    _5 = this_4(D)->D.40238._M_impl._M_end_of_storage;
    _6 = (long int) _5;
    # VUSE <.MEM_3(D)>
    __first_7 = this_4(D)->D.40238._M_impl._M_finish;
    _8 = (long int) __first_7;
    _9 = _6 - _8;
    _10 = _9 /[ex] 4;
    _11 = (long unsigned int) _10;
    if (__n_2(D) <= _11)
      goto <bb 5>;
    else
      goto <bb 28>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 bb_15 })
  {
    <bb 5>:
    # VUSE <.MEM_3(D)>
    __x_copy_35 = *__x_21(D);
    # DEBUG __x_copy => __x_copy_35
    # DEBUG this => this_4(D)
    # DEBUG D#76 => &this_4(D)->D.40238._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __i => D#76
    # DEBUG __lhs => &D.45697
    # DEBUG __rhs => &__position
    # DEBUG this => &D.45697
    # DEBUG this => &__position
    _27 = (long int) __position_16;
    _23 = _8 - _27;
    _22 = _23 /[ex] 4;
    __elems_after_37 = (const size_type) _22;
    # DEBUG __elems_after => __elems_after_37
    # DEBUG __old_finish => __first_7
    if (__n_2(D) < __elems_after_37)
      goto <bb 6>;
    else
      goto <bb 15>;

  }
  bb_6 (preds = {bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#550 => &this_4(D)->D.40238
    # DEBUG this => D#550
    _39 = __n_2(D) * 4;
    _40 = -_39;
    _41 = __first_7 + _40;
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __alloc => D#239
    # DEBUG D#238 => D#239
    # DEBUG D#235 => D#238
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG D.58883 => D#235
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __assignable => 1
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => _41
    # DEBUG __last => __first_7
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    __first.74_49 = (long int) _41;
    _47 = _8 - __first.74_49;
    _Num_45 = _47 /[ex] 4;
    # DEBUG _Num => _Num_45
    if (_Num_45 != 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 })
  {
    <bb 7>:
    _38 = (long unsigned int) _47;
    # .MEM_97 = VDEF <.MEM_3(D)>
    __builtin_memmove (__first_7, _41, _38);
    # VUSE <.MEM_97>
    pretmp_173 = this_4(D)->D.40238._M_impl._M_finish;

  }
  bb_8 (preds = {bb_6 bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
    # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
    _43 = prephitmp_174 + _39;
    # .MEM_44 = VDEF <.MEM_14>
    this_4(D)->D.40238._M_impl._M_finish = _43;
    # DEBUG this => &__position
    # DEBUG __first => D#946
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG __first => D#946
    # DEBUG __last => _41
    # DEBUG __result => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => _41
    # DEBUG __it => _41
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    _104 = __first.74_49 - _27;
    _Num_105 = _104 /[ex] 4;
    # DEBUG _Num => _Num_105
    if (_Num_105 != 0)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    _106 = (long unsigned int) _104;
    _107 = -_106;
    _108 = __first_7 + _107;
    # .MEM_135 = VDEF <.MEM_44>
    __builtin_memmove (_108, __position_16, _106);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_3 bb_11 })
  {
    <bb 10>:
    # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
    # DEBUG this => &__position
    _48 = __position_16 + _39;
    # DEBUG this => &__position
    # DEBUG D#234 => &__x_copy
    # DEBUG __first => D#946
    # DEBUG __last => _48
    # DEBUG D#233 => D#234
    # DEBUG __value => D#233
    # DEBUG __it => _48
    # DEBUG __it => _48
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG D#232 => D#233
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __value => D#232
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#946
    if (__position_16 == _48)
      goto <bb 3>;
    else
      goto <bb 11>;

  }
  bb_11 (preds = {bb_10 }, succs = {bb_12 })
  {
    <bb 11>:

  }
  bb_13 (preds = {bb_12 }, succs = {bb_48 })
  {
    <bb 13>:
    # .MEM_13 = PHI <.MEM_98(12)>

  }
  bb_48 (preds = {bb_13 }, succs = {bb_3 })
  {
    <bb 48>:
    goto <bb 3>;

  }
  bb_15 (preds = {bb_5 }, succs = {bb_20 bb_16 })
  {
    <bb 15>:
    # DEBUG D#551 => &this_4(D)->D.40238
    # DEBUG this => D#551
    __n_50 = __n_2(D) - __elems_after_37;
    # DEBUG D#543 => &__x_copy
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#542 => D#543
    # DEBUG __x => D#542
    # DEBUG D.58968 => D#544
    # DEBUG D#541 => D#542
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#540 => D#541
    # DEBUG __x => D#540
    # DEBUG __assignable => 1
    # DEBUG D#539 => D#540
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#538 => D#539
    # DEBUG __x => D#538
    # DEBUG D#537 => D#538
    # DEBUG __first => __first_7
    # DEBUG __n => __n_50
    # DEBUG D#536 => D#537
    # DEBUG __value => D#536
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG D#535 => D#536
    # DEBUG __first => NULL
    # DEBUG __n => __n_50
    # DEBUG __value => D#535
    # DEBUG __tmp => __x_copy_35
    # DEBUG __niter => __n_50
    # DEBUG __niter => __n_50
    # DEBUG __first => __first_7
    if (__n_50 == 0)
      goto <bb 20>;
    else
      goto <bb 16>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:

  }
  bb_18 (preds = {bb_17 }, succs = {bb_50 })
  {
    <bb 18>:

  }
  bb_50 (preds = {bb_18 }, succs = {bb_20 })
  {
    <bb 50>:
    _160 = __n_50 * 4;
    __first_123 = __first_7 + _160;
    goto <bb 20>;

  }
  bb_20 (preds = {bb_50 bb_15 }, succs = {bb_22 bb_21 })
  {
    <bb 20>:
    # __first_125 = PHI <__first_123(50), __first_7(15)>
    # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
    # .MEM_51 = VDEF <.MEM_84>
    this_4(D)->D.40238._M_impl._M_finish = __first_125;
    # DEBUG D#552 => &this_4(D)->D.40238
    # DEBUG this => D#552
    # DEBUG this => &__position
    # DEBUG __first => D#946
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __alloc => D#239
    # DEBUG D#238 => D#239
    # DEBUG D#235 => D#238
    # DEBUG __first => D#946
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG D.58930 => D#235
    # DEBUG __first => D#946
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __assignable => 1
    # DEBUG __first => D#946
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __first => D#946
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG __first => D#946
    # DEBUG __last => __first_7
    # DEBUG __result => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_125
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG _Num => _22
    if (_22 != 0)
      goto <bb 22>;
    else
      goto <bb 21>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 21>:
    pretmp_168 = (long unsigned int) _23;
    goto <bb 23>;

  }
  bb_22 (preds = {bb_20 }, succs = {bb_23 })
  {
    <bb 22>:
    _59 = (long unsigned int) _23;
    # .MEM_100 = VDEF <.MEM_51>
    __builtin_memmove (__first_125, __position_16, _59);
    # VUSE <.MEM_100>
    pretmp_166 = this_4(D)->D.40238._M_impl._M_finish;

  }
  bb_23 (preds = {bb_21 bb_22 }, succs = {bb_3 bb_24 })
  {
    <bb 23>:
    # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
    # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
    # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
    _53 = prephitmp_167 + prephitmp_169;
    # .MEM_54 = VDEF <.MEM_87>
    this_4(D)->D.40238._M_impl._M_finish = _53;
    # DEBUG this => &__position
    # DEBUG D#234 => &__x_copy
    # DEBUG __first => D#946
    # DEBUG __last => __first_7
    # DEBUG D#233 => D#234
    # DEBUG __value => D#233
    # DEBUG __it => __first_7
    # DEBUG __it => __first_7
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG D#232 => D#233
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __value => D#232
    # DEBUG __tmp => __x_copy_35
    # DEBUG __first => D#946
    if (__first_7 == __position_16)
      goto <bb 3>;
    else
      goto <bb 24>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:

  }
  bb_26 (preds = {bb_25 }, succs = {bb_49 })
  {
    <bb 26>:
    # .MEM_154 = PHI <.MEM_101(25)>

  }
  bb_49 (preds = {bb_26 }, succs = {bb_3 })
  {
    <bb 49>:
    goto <bb 3>;

  }
  bb_28 (preds = {bb_4 }, succs = {bb_29 bb_30 })
  {
    <bb 28>:
    # DEBUG this => this_4(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __n => __n_2(D)
    # DEBUG __s => "vector::_M_fill_insert"
    # DEBUG D#402 => this_4(D)
    # DEBUG this => D#402
    # DEBUG D#401 => D#402
    # DEBUG D#400 => &D#401->D.40238
    # DEBUG this => D#400
    # DEBUG __a => D#399
    # DEBUG D#398 => D#399
    # DEBUG D#381 => D#398
    # DEBUG this => D#381
    # VUSE <.MEM_3(D)>
    _17 = MEM[(int * *)this_4(D)];
    # DEBUG D#64 => this_4(D)
    # DEBUG D#64 => this_4(D)
    # DEBUG this => D#64
    # DEBUG this => D#64
    _116 = (long int) _17;
    _117 = _8 - _116;
    _118 = _117 /[ex] 4;
    _119 = (const long unsigned int) _118;
    _120 = 4611686018427387903 - _119;
    if (__n_2(D) > _120)
      goto <bb 29>;
    else
      goto <bb 30>;

  }
  bb_29 (preds = {bb_28 }, succs = {})
  {
    <bb 29>:
    # .MEM_134 = VDEF <.MEM_3(D)>
    std::__throw_length_error ("vector::_M_fill_insert");

  }
  bb_30 (preds = {bb_28 }, succs = {bb_46 bb_47 })
  {
    <bb 30>:
    # DEBUG D#64 => this_4(D)
    # DEBUG D#64 => this_4(D)
    # DEBUG this => D#64
    # DEBUG this => D#64
    # DEBUG D#64 => this_4(D)
    # DEBUG D#64 => this_4(D)
    # DEBUG this => D#64
    # DEBUG this => D#64
    # DEBUG __a => &D.68134
    # DEBUG __b => &__n
    _77 = MAX_EXPR <__n_2(D), _119>;
    __len_124 = _77 + _119;
    # DEBUG __len => __len_124
    # DEBUG D#64 => this_4(D)
    # DEBUG D#64 => this_4(D)
    # DEBUG this => D#64
    # DEBUG this => D#64
    # DEBUG D#402 => this_4(D)
    # DEBUG this => D#402
    # DEBUG D#401 => D#402
    # DEBUG D#400 => &D#401->D.40238
    # DEBUG this => D#400
    # DEBUG __a => D#399
    # DEBUG D#398 => D#399
    # DEBUG D#381 => D#398
    # DEBUG this => D#381
    _152 = __len_124 > 4611686018427387903;
    _142 = _119 > __len_124;
    _114 = _142 | _152;
    if (_114 != 0)
      goto <bb 46>;
    else
      goto <bb 47>;

  }
  bb_31 (preds = {bb_47 }, succs = {bb_32 })
  {
    <bb 31>:
    pretmp_164 = __len_124 * 4;

  }
  bb_32 (preds = {bb_46 bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    # _156 = PHI <_144(46), _151(31)>
    # _157 = PHI <_143(46), _150(31)>
    # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#77 => &this_4(D)->D.40238._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#77
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.45720
    # DEBUG this => &__position
    # DEBUG this => &D.45720
    # DEBUG D#563 => _157 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#563
    # DEBUG D#562 => &this_4(D)->D.40238
    # DEBUG D#389 => D#562
    # DEBUG __n => NULL
    # DEBUG this => D#389
    # DEBUG D#388 => D#389
    # DEBUG D#387 => &D#388->_M_impl
    # DEBUG D#386 => D#387
    # DEBUG __n => NULL
    # DEBUG __a => D#386
    # DEBUG D#385 => D#386
    # DEBUG D#383 => D#385
    # DEBUG D#384 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#383
    # DEBUG D.68122 => D#384
    # DEBUG D#382 => D#383
    # DEBUG D#381 => D#382
    # DEBUG this => D#381
    # .MEM_131 = VDEF <.MEM_3(D)>
    _112 = operator new (prephitmp_165);
    # VUSE <.MEM_131>
    pretmp_29 = this_4(D)->D.40238._M_impl._M_start;
    # VUSE <.MEM_131>
    pretmp_147 = this_4(D)->D.40238._M_impl._M_finish;
    pretmp_149 = _112 + prephitmp_165;
    pretmp_145 = (long int) pretmp_147;
    pretmp_138 = (long int) pretmp_29;
    pretmp_140 = _156 - pretmp_138;

  }
  bb_33 (preds = {bb_47 bb_32 }, succs = {bb_52 })
  {
    <bb 33>:
    # iftmp.71_113 = PHI <0B(47), _112(32)>
    # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
    # _158 = PHI <_151(47), _156(32)>
    # _153 = PHI <_150(47), _157(32)>
    # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
    # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
    # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
    # prephitmp_137 = PHI <_150(47), pretmp_140(32)>

  }
  bb_52 (preds = {bb_33 }, succs = {bb_34 })
  {
    <bb 52>:
    # DEBUG __new_start => NULL
    # DEBUG __new_finish => NULL
    # DEBUG D#546 => &this_4(D)->D.40238
    # DEBUG this => D#546
    _19 = (long unsigned int) _153;
    __first_20 = iftmp.71_113 + _19;
    # VUSE <.MEM_126>
    _56 = MEM[(const int &)__x_21(D)];
    # DEBUG D#543 => __x_21(D)
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#542 => D#543
    # DEBUG __x => D#542
    # DEBUG D.59085 => D#544
    # DEBUG D#541 => D#542
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#540 => D#541
    # DEBUG __x => D#540
    # DEBUG __assignable => 1
    # DEBUG D#539 => D#540
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#538 => D#539
    # DEBUG __x => D#538
    # DEBUG D#537 => D#538
    # DEBUG __first => __first_20
    # DEBUG __n => __n_2(D)
    # DEBUG D#536 => D#537
    # DEBUG __value => D#536
    # DEBUG __it => __first_20
    # DEBUG __it => __first_20
    # DEBUG D#535 => D#536
    # DEBUG __first => NULL
    # DEBUG __n => __n_2(D)
    # DEBUG __value => D#535
    # DEBUG __tmp => _56
    # DEBUG __niter => __n_2(D)
    # DEBUG __niter => __n_2(D)
    # DEBUG __first => __first_20

  }
  bb_36 (preds = {bb_34 }, succs = {bb_51 })
  {
    <bb 36>:

  }
  bb_51 (preds = {bb_36 }, succs = {bb_38 bb_37 })
  {
    <bb 51>:
    # DEBUG __new_finish => 0B
    # DEBUG D#547 => &this_4(D)->D.40238
    # DEBUG this => D#547
    # DEBUG this => &__position
    # DEBUG D#945 => this_4(D)->D.40238._M_impl._M_start
    # DEBUG __first => D#945
    # DEBUG __last => D#946
    # DEBUG __result => NULL
    # DEBUG __alloc => D#237
    # DEBUG D#236 => D#237
    # DEBUG D#235 => D#236
    # DEBUG __first => D#945
    # DEBUG __last => D#946
    # DEBUG __result => NULL
    # DEBUG D.59047 => D#235
    # DEBUG __first => D#945
    # DEBUG __last => D#946
    # DEBUG __result => NULL
    # DEBUG __assignable => 1
    # DEBUG __first => D#945
    # DEBUG __last => D#946
    # DEBUG __result => NULL
    # DEBUG __first => D#945
    # DEBUG __last => D#946
    # DEBUG __result => NULL
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG __it => D#945
    # DEBUG __it => D#945
    # DEBUG __first => D#945
    # DEBUG __last => D#946
    # DEBUG __result => NULL
    # DEBUG __it => NULL
    # DEBUG __it => NULL
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG __it => D#945
    # DEBUG __it => D#945
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG D#944 => (long int) D#945
    # DEBUG D#943 => _158 - D#944
    _Num_73 = prephitmp_137 /[ex] 4;
    # DEBUG _Num => _Num_73
    if (_Num_73 != 0)
      goto <bb 38>;
    else
      goto <bb 37>;

  }
  bb_37 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 37>:
    pretmp_103 = (long unsigned int) prephitmp_137;
    goto <bb 39>;

  }
  bb_38 (preds = {bb_51 }, succs = {bb_39 })
  {
    <bb 38>:
    _74 = (long unsigned int) prephitmp_137;
    # .MEM_94 = VDEF <.MEM_93>
    __builtin_memmove (iftmp.71_113, prephitmp_146, _74);

  }
  bb_39 (preds = {bb_37 bb_38 }, succs = {bb_41 bb_40 })
  {
    <bb 39>:
    # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
    # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
    # DEBUG D#942 => (long unsigned int) D#943
    # DEBUG __new_finish => iftmp.71_113 + D#942
    _25 = __n_2(D) * 4;
    _133 = _25 + prephitmp_102;
    __new_finish_26 = iftmp.71_113 + _133;
    # DEBUG __new_finish => __new_finish_26
    # DEBUG D#548 => &this_4(D)->D.40238
    # DEBUG this => D#548
    # DEBUG D#941 => this_4(D)->D.40238._M_impl._M_finish
    # DEBUG this => &__position
    # DEBUG __first => D#946
    # DEBUG __last => D#941
    # DEBUG __result => __new_finish_26
    # DEBUG __alloc => D#237
    # DEBUG D#236 => D#237
    # DEBUG D#235 => D#236
    # DEBUG __first => D#946
    # DEBUG __last => D#941
    # DEBUG __result => __new_finish_26
    # DEBUG D.59008 => D#235
    # DEBUG __first => D#946
    # DEBUG __last => D#941
    # DEBUG __result => __new_finish_26
    # DEBUG __assignable => 1
    # DEBUG __first => D#946
    # DEBUG __last => D#941
    # DEBUG __result => __new_finish_26
    # DEBUG __first => D#946
    # DEBUG __last => D#941
    # DEBUG __result => __new_finish_26
    # DEBUG __it => D#941
    # DEBUG __it => D#941
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG __first => D#946
    # DEBUG __last => D#941
    # DEBUG __result => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => __new_finish_26
    # DEBUG __it => D#941
    # DEBUG __it => D#941
    # DEBUG __it => D#946
    # DEBUG __it => D#946
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    # DEBUG __simple => 1
    # DEBUG __first => NULL
    # DEBUG __last => NULL
    # DEBUG __result => NULL
    _66 = prephitmp_121 - _158;
    _Num_67 = _66 /[ex] 4;
    # DEBUG _Num => _Num_67
    if (_Num_67 != 0)
      goto <bb 41>;
    else
      goto <bb 40>;

  }
  bb_40 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 40>:
    pretmp_162 = (long unsigned int) _66;
    goto <bb 42>;

  }
  bb_41 (preds = {bb_39 }, succs = {bb_42 })
  {
    <bb 41>:
    _68 = (long unsigned int) _66;
    # .MEM_95 = VDEF <.MEM_90>
    __builtin_memcpy (__new_finish_26, __position_16, _68);

  }
  bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
  {
    <bb 42>:
    # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
    # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
    _70 = __new_finish_26 + prephitmp_163;
    # DEBUG __new_finish => _70
    # DEBUG D#549 => &this_4(D)->D.40238
    # DEBUG this => D#549
    # DEBUG D#561 => this_4(D)->D.40238._M_impl._M_finish
    # DEBUG D#560 => this_4(D)->D.40238._M_impl._M_start
    # DEBUG __first => D#560
    # DEBUG __last => D#561
    # DEBUG D.59001 => NULL
    # DEBUG D#134 => D#560
    # DEBUG D#135 => D#561
    # DEBUG __first => D#134
    # DEBUG __last => D#135
    # DEBUG D#133 => D#135
    # DEBUG D#132 => D#134
    # DEBUG D#130 => D#132
    # DEBUG D#131 => D#133
    # DEBUG D.54119 => D#130
    # DEBUG D.54118 => D#131
    # DEBUG D#559 => this_4(D)->D.40238._M_impl._M_end_of_storage
    # DEBUG D#558 => (long int) D#559
    # DEBUG D#557 => (long int) D#945
    # DEBUG D#556 => D#558 - D#557
    # DEBUG D#555 => D#556 /[ex] 4
    # DEBUG D#554 => (long unsigned int) D#555
    # DEBUG D#553 => &this_4(D)->D.40238
    # DEBUG this => D#553
    # DEBUG __p => D#945
    # DEBUG __n => D#554
    if (prephitmp_146 != 0B)
      goto <bb 43>;
    else
      goto <bb 44>;

  }
  bb_43 (preds = {bb_42 }, succs = {bb_44 })
  {
    <bb 43>:
    # DEBUG D#146 => &D#553->_M_impl
    # DEBUG D#144 => D#146
    # DEBUG D#145 => D#554
    # DEBUG __p => D#945
    # DEBUG __a => D#144
    # DEBUG __n => D#145
    # DEBUG D#143 => D#145
    # DEBUG D#142 => D#144
    # DEBUG D#140 => D#142
    # DEBUG D#141 => D#143
    # DEBUG __p => D#945
    # DEBUG this => D#140
    # DEBUG D.58997 => D#141
    # .MEM_96 = VDEF <.MEM_91>
    operator delete (prephitmp_146);

  }
  bb_44 (preds = {bb_43 bb_42 }, succs = {bb_53 })
  {
    <bb 44>:
    # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>

  }
  bb_53 (preds = {bb_44 }, succs = {bb_45 })
  {
    <bb 53>:
    # .MEM_30 = VDEF <.MEM_92>
    this_4(D)->D.40238._M_impl._M_start = iftmp.71_113;
    # .MEM_31 = VDEF <.MEM_30>
    this_4(D)->D.40238._M_impl._M_finish = _70;
    # .MEM_34 = VDEF <.MEM_31>
    this_4(D)->D.40238._M_impl._M_end_of_storage = prephitmp_148;

  }
  bb_45 (preds = {bb_55 bb_53 }, succs = {bb_54 })
  {
    <bb 45>:
    # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>

  }
  bb_54 (preds = {bb_45 }, succs = {bb_1 })
  {
    <bb 54>:
    # VUSE <.MEM_1>
    return;

  }
  bb_46 (preds = {bb_30 }, succs = {bb_32 })
  {
    <bb 46>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#77 => &this_4(D)->D.40238._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#77
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.45720
    # DEBUG this => &__position
    _144 = (long int) __position_16;
    # DEBUG this => &D.45720
    _143 = _144 - _116;
    # DEBUG D#563 => _143 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#563
    # DEBUG D#562 => &this_4(D)->D.40238
    # DEBUG D#389 => D#562
    # DEBUG __n => NULL
    # DEBUG this => D#389
    # DEBUG D#388 => D#389
    goto <bb 32>;

  }
  bb_47 (preds = {bb_30 }, succs = {bb_31 bb_33 })
  {
    <bb 47>:
    # DEBUG __len => NULL
    # DEBUG this => this_4(D)
    # DEBUG D#77 => &this_4(D)->D.40238._M_impl._M_start
    # DEBUG this => NULL
    # DEBUG __i => D#77
    # DEBUG __lhs => &__position
    # DEBUG __rhs => &D.45720
    # DEBUG this => &__position
    _151 = (long int) __position_16;
    # DEBUG this => &D.45720
    _150 = _151 - _116;
    # DEBUG D#563 => _150 /[ex] 4
    # DEBUG __elems_before => (const size_type) D#563
    # DEBUG D#562 => &this_4(D)->D.40238
    # DEBUG D#389 => D#562
    # DEBUG __n => NULL
    # DEBUG this => D#389
    # DEBUG D#388 => D#389
    if (__len_124 != 0)
      goto <bb 31>;
    else
      goto <bb 33>;

  }
  loop_1 (header = 12, latch = 14, niter = ((unsigned long) _48 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_12 (preds = {bb_11 bb_14 }, succs = {bb_13 bb_14 })
    {
      <bb 12>:
      # __position_109 = PHI <__position_16(11), __position_55(14)>
      # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
      # DEBUG __first => __position_109
      # .MEM_98 = VDEF <.MEM_83>
      *__position_109 = __x_copy_35;
      __position_55 = __position_109 + 4;
      # DEBUG __first => __position_55
      # DEBUG __first => __position_55
      if (_48 == __position_55)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
    bb_14 (preds = {bb_12 }, succs = {bb_12 })
    {
      <bb 14>:
      goto <bb 12>;

    }
  }
  loop_2 (header = 25, latch = 27, niter = ((unsigned long) __first_7 - (unsigned long) (__position_16 + 4)) /[ex] 4 & 4611686018427387903, upper_bound = 4611686018427387902)
  {
    bb_25 (preds = {bb_24 bb_27 }, succs = {bb_26 bb_27 })
    {
      <bb 25>:
      # __position_110 = PHI <__position_16(24), __position_58(27)>
      # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
      # DEBUG __first => __position_110
      # .MEM_101 = VDEF <.MEM_136>
      *__position_110 = __x_copy_35;
      __position_58 = __position_110 + 4;
      # DEBUG __first => __position_58
      # DEBUG __first => __position_58
      if (__first_7 == __position_58)
        goto <bb 26>;
      else
        goto <bb 27>;

    }
    bb_27 (preds = {bb_25 }, succs = {bb_25 })
    {
      <bb 27>:
      goto <bb 25>;

    }
  }
  loop_3 (header = 17, latch = 19, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_17 (preds = {bb_16 bb_19 }, succs = {bb_18 bb_19 })
    {
      <bb 17>:
      # __n_111 = PHI <__n_50(16), __n_63(19)>
      # __first_76 = PHI <__first_7(16), __first_64(19)>
      # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
      # DEBUG __niter => __n_111
      # DEBUG __first => __first_76
      # .MEM_99 = VDEF <.MEM_81>
      *__first_76 = __x_copy_35;
      __n_63 = __n_111 + 18446744073709551615;
      # DEBUG __niter => __n_63
      __first_64 = __first_76 + 4;
      # DEBUG __first => __first_64
      # DEBUG __niter => __n_63
      # DEBUG __first => __first_64
      if (__n_63 == 0)
        goto <bb 18>;
      else
        goto <bb 19>;

    }
    bb_19 (preds = {bb_17 }, succs = {bb_17 })
    {
      <bb 19>:
      goto <bb 17>;

    }
  }
  loop_4 (header = 34, latch = 35, niter = , upper_bound = 0x0ffffffffffffffff)
  {
    bb_34 (preds = {bb_35 bb_52 }, succs = {bb_36 bb_35 })
    {
      <bb 34>:
      # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
      # __first_155 = PHI <__first_80(35), __first_20(52)>
      # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
      # DEBUG __niter => __n_132
      # DEBUG __first => __first_155
      # .MEM_93 = VDEF <.MEM_130>
      *__first_155 = _56;
      __n_79 = __n_132 + 18446744073709551615;
      # DEBUG __niter => __n_79
      __first_80 = __first_155 + 4;
      # DEBUG __first => __first_80
      # DEBUG __niter => __n_79
      # DEBUG __first => __first_80
      if (__n_79 == 0)
        goto <bb 36>;
      else
        goto <bb 35>;

    }
    bb_35 (preds = {bb_34 }, succs = {bb_34 })
    {
      <bb 35>:
      goto <bb 34>;

    }
  }
}

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; typename std::_Vector_base<_Tp, _Alloc>::pointer = int*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = int] (struct vectorD.39532 * const thisD.40162, struct iteratorD.39806 __positionD.40163, size_typeD.39814 __nD.40164, const value_typeD.39801 & __xD.40165)
{
  const long unsigned intD.14 D.68134;
  const size_typeD.39814 __lenD.68128;
  size_typeD.39814 D.68133;
  size_typeD.39814 __nD.68126;
  intD.9 * D.68124;
  const ptrdiff_tD.2819 _NumD.68114;
  intD.9 * D.68115;
  intD.9 * const __positionD.59114;
  intD.9 * __firstD.59082;
  const ptrdiff_tD.2819 _NumD.59076;
  const ptrdiff_tD.2819 _NumD.59037;
  intD.9 * __firstD.58965;
  long unsigned intD.14 __nD.58966;
  intD.9 * __firstD.58916;
  const ptrdiff_tD.2819 _NumD.58912;
  intD.9 * __firstD.58865;
  intD.9 * __new_finishD.45722;
  const size_typeD.39814 __elems_afterD.45696;
  value_typeD.39801 __x_copyD.45695;
  intD.9 * _5;
  long intD.12 _6;
  long intD.12 _8;
  long intD.12 _9;
  long intD.12 _10;
  long unsigned intD.14 _11;
  intD.9 * const _17;
  long unsigned intD.14 _19;
  difference_typeD.44317 _22;
  long intD.12 _23;
  long unsigned intD.14 _25;
  long intD.12 _27;
  intD.9 * pretmp_29;
  long unsigned intD.14 _38;
  long unsigned intD.14 _39;
  sizetype _40;
  intD.9 * _41;
  intD.9 * _43;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 __first.74_49;
  intD.9 * _53;
  const intD.9 _56;
  long unsigned intD.14 _59;
  long intD.12 _66;
  long unsigned intD.14 _68;
  intD.9 * _70;
  long unsigned intD.14 _74;
  long unsigned intD.14 _77;
  long unsigned intD.14 prephitmp_102;
  long unsigned intD.14 pretmp_103;
  long intD.12 _104;
  long unsigned intD.14 _106;
  sizetype _107;
  intD.9 * _108;
  intD.9 * _112;
  intD.9 * iftmp.71_113;
  boolD.2757 _114;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  long unsigned intD.14 _120;
  long intD.12 prephitmp_121;
  long unsigned intD.14 _133;
  long intD.12 prephitmp_137;
  long intD.12 pretmp_138;
  long intD.12 pretmp_140;
  boolD.2757 _142;
  long intD.12 _143;
  long intD.12 _144;
  long intD.12 pretmp_145;
  intD.9 * prephitmp_146;
  intD.9 * pretmp_147;
  intD.9 * prephitmp_148;
  intD.9 * pretmp_149;
  long intD.12 _150;
  long intD.12 _151;
  boolD.2757 _152;
  long intD.12 _153;
  long intD.12 _156;
  long intD.12 _157;
  long intD.12 _158;
  long unsigned intD.14 _160;
  long unsigned intD.14 pretmp_162;
  long unsigned intD.14 prephitmp_163;
  long unsigned intD.14 pretmp_164;
  long unsigned intD.14 prephitmp_165;
  intD.9 * pretmp_166;
  intD.9 * prephitmp_167;
  long unsigned intD.14 pretmp_168;
  long unsigned intD.14 prephitmp_169;
  intD.9 * pretmp_173;
  intD.9 * prephitmp_174;

;;   basic block 2, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#946ptD.0 => MEM[(struct __normal_iteratorD.39807 *)&__positionD.40163]
  # DEBUG __positionD.59114 => D#946ptD.0
  if (__n_2(D) != 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 2, next block 55, flags: (NEW)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_172 = PHI <.MEM_3(D)(2), .MEM_12(10), .MEM_13(48), .MEM_54(23), .MEM_154(49)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 3421, maybe hot
;;    prev block 3, next block 4, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU)
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 2535, maybe hot
;;    prev block 55, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __position_16 = MEM[(struct __normal_iteratorD.39807 *)&__positionD.40163];
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _5 = this_4(D)->D.40238._M_implD.39729._M_end_of_storageD.39733;
  _6 = (long intD.12) _5;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __first_7 = this_4(D)->D.40238._M_implD.39729._M_finishD.39732;
  _8 = (long intD.12) __first_7;
  _9 = _6 - _8;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _10 = _9 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _11 = (long unsigned intD.14) _10;
  if (__n_2(D) <= _11)
    goto <bb 5>;
  else
    goto <bb 28>;
;;    succ:       5 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  __x_copy_35 = *__x_21(D);
  # DEBUG __x_copyD.45695 => __x_copy_35
  # DEBUG thisD.58860 => this_4(D)
  # DEBUG D#76ptD.0 => &this_4(D)->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.58862 => NULL
  # DEBUG __iD.58861 => D#76ptD.0
  # DEBUG __lhsD.58857 => &D.45697
  # DEBUG __rhsD.58858 => &__positionD.40163
  # DEBUG thisD.53784 => &D.45697
  # DEBUG thisD.53782 => &__positionD.40163
  _27 = (long intD.12) __position_16;
  _23 = _8 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _22 = _23 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __elems_after_37 = (const size_typeD.39814) _22;
  # DEBUG __elems_afterD.45696 => __elems_after_37
  # DEBUG __old_finishD.45698 => __first_7
  if (__n_2(D) < __elems_after_37)
    goto <bb 6>;
  else
    goto <bb 15>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#550ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.58914 => D#550ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _39 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _40 = -_39;
  # PT = nonlocal escaped 
  _41 = __first_7 + _40;
  # DEBUG __firstD.58879 => _41
  # DEBUG __lastD.58880 => __first_7
  # DEBUG __resultD.58881 => __first_7
  # DEBUG __allocD.58882 => D#239ptD.0
  # DEBUG D#238ptD.0 => D#239ptD.0
  # DEBUG D#235ptD.0 => D#238ptD.0
  # DEBUG __firstD.58886 => _41
  # DEBUG __lastD.58885 => __first_7
  # DEBUG __resultD.58884 => __first_7
  # DEBUG D.58883 => D#235ptD.0
  # DEBUG __firstD.58889 => _41
  # DEBUG __lastD.58888 => __first_7
  # DEBUG __resultD.58887 => __first_7
  # DEBUG __assignableD.58892 => 1
  # DEBUG __firstD.58895 => _41
  # DEBUG __lastD.58894 => __first_7
  # DEBUG __resultD.58893 => __first_7
  # DEBUG __firstD.58898 => _41
  # DEBUG __lastD.58897 => __first_7
  # DEBUG __resultD.58896 => __first_7
  # DEBUG __itD.54938 => __first_7
  # DEBUG __itD.54242 => __first_7
  # DEBUG __itD.54936 => _41
  # DEBUG __itD.54242 => _41
  # DEBUG __firstD.58901 => _41
  # DEBUG __lastD.58900 => __first_7
  # DEBUG __resultD.58899 => __first_7
  # DEBUG __itD.54918 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.54916 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.54914 => _41
  # DEBUG __itD.54245 => _41
  # DEBUG __firstD.58904 => NULL
  # DEBUG __lastD.58903 => NULL
  # DEBUG __resultD.58902 => NULL
  # DEBUG __simpleD.58908 => 1
  # DEBUG __firstD.58911 => NULL
  # DEBUG __lastD.58910 => NULL
  # DEBUG __resultD.58909 => NULL
  __first.74_49 = (long intD.12) _41;
  _47 = _8 - __first.74_49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_45 = _47 /[ex] 4;
  # DEBUG _NumD.58912 => _Num_45
  if (_Num_45 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _38 = (long unsigned intD.14) _47;
  # .MEM_97 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memmoveD.995 (__first_7, _41, _38);
  # VUSE <.MEM_97>
  pretmp_173 = this_4(D)->D.40238._M_implD.39729._M_finishD.39732;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_3(D)(6), .MEM_97(7)>
  # PT = nonlocal escaped 
  # prephitmp_174 = PHI <__first_7(6), pretmp_173(7)>
  # PT = nonlocal escaped 
  _43 = prephitmp_174 + _39;
  # .MEM_44 = VDEF <.MEM_14>
  this_4(D)->D.40238._M_implD.39729._M_finishD.39732 = _43;
  # DEBUG thisD.58877 => &__positionD.40163
  # DEBUG __firstD.68098 => D#946ptD.0
  # DEBUG __lastD.68099 => _41
  # DEBUG __resultD.68100 => __first_7
  # DEBUG __itD.57014 => _41
  # DEBUG __itD.54242 => _41
  # DEBUG __itD.57012 => D#946ptD.0
  # DEBUG __itD.54242 => D#946ptD.0
  # DEBUG __firstD.68103 => D#946ptD.0
  # DEBUG __lastD.68102 => _41
  # DEBUG __resultD.68101 => __first_7
  # DEBUG __itD.56994 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.56992 => _41
  # DEBUG __itD.54245 => _41
  # DEBUG __itD.56990 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG __firstD.68106 => NULL
  # DEBUG __lastD.68105 => NULL
  # DEBUG __resultD.68104 => NULL
  # DEBUG __simpleD.68110 => 1
  # DEBUG __firstD.68113 => NULL
  # DEBUG __lastD.68112 => NULL
  # DEBUG __resultD.68111 => NULL
  _104 = __first.74_49 - _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_105 = _104 /[ex] 4;
  # DEBUG _NumD.68114 => _Num_105
  if (_Num_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _106 = (long unsigned intD.14) _104;
  # RANGE [0, 18446744073709551615]
  _107 = -_106;
  # PT = nonlocal escaped 
  _108 = __first_7 + _107;
  # .MEM_135 = VDEF <.MEM_44>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memmoveD.995 (_108, __position_16, _106);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_44(8), .MEM_135(9)>
  # DEBUG thisD.58875 => &__positionD.40163
  # PT = nonlocal 
  _48 = __position_16 + _39;
  # DEBUG thisD.58873 => &__positionD.40163
  # DEBUG D#234ptD.0 => &__x_copyD.45695
  # DEBUG __firstD.58865 => D#946ptD.0
  # DEBUG __lastD.58866 => _48
  # DEBUG D#233ptD.0 => D#234ptD.0
  # DEBUG __valueD.58868 => D#233ptD.0
  # DEBUG __itD.54785 => _48
  # DEBUG __itD.54245 => _48
  # DEBUG __itD.54783 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG __firstD.58871 => NULL
  # DEBUG __lastD.58870 => NULL
  # DEBUG __valueD.58869 => D#232ptD.0
  # DEBUG __tmpD.58872 => __x_copy_35
  # DEBUG __firstD.58871 => D#946ptD.0
  if (__position_16 == _48)
    goto <bb 3>;
  else
    goto <bb 11>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_109 = PHI <__position_16(11), __position_55(14)>
  # .MEM_83 = PHI <.MEM_12(11), .MEM_98(14)>
  # DEBUG __firstD.58871 => __position_109
  # .MEM_98 = VDEF <.MEM_83>
  *__position_109 = __x_copy_35;
  # PT = nonlocal 
  __position_55 = __position_109 + 4;
  # DEBUG __firstD.58871 => __position_55
  # DEBUG __firstD.58871 => __position_55
  if (_48 == __position_55)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 48, flags: (NEW)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_98(12)>
;;    succ:       48 [100.0%]  (FALLTHRU)

;;   basic block 48, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 13, next block 14, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 48, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#551ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.58987 => D#551ptD.0
  # RANGE [0, 18446744073709551615]
  __n_50 = __n_2(D) - __elems_after_37;
  # DEBUG D#543ptD.0 => &__x_copyD.45695
  # DEBUG __firstD.58965 => __first_7
  # DEBUG __nD.58966 => __n_50
  # DEBUG D#542ptD.0 => D#543ptD.0
  # DEBUG __xD.58969 => D#542ptD.0
  # DEBUG D.58968 => D#544ptD.0
  # DEBUG D#541ptD.0 => D#542ptD.0
  # DEBUG __firstD.58972 => __first_7
  # DEBUG __nD.58971 => __n_50
  # DEBUG D#540ptD.0 => D#541ptD.0
  # DEBUG __xD.58970 => D#540ptD.0
  # DEBUG __assignableD.58974 => 1
  # DEBUG D#539ptD.0 => D#540ptD.0
  # DEBUG __firstD.58977 => __first_7
  # DEBUG __nD.58976 => __n_50
  # DEBUG D#538ptD.0 => D#539ptD.0
  # DEBUG __xD.58975 => D#538ptD.0
  # DEBUG D#537ptD.0 => D#538ptD.0
  # DEBUG __firstD.58980 => __first_7
  # DEBUG __nD.58979 => __n_50
  # DEBUG D#536ptD.0 => D#537ptD.0
  # DEBUG __valueD.58978 => D#536ptD.0
  # DEBUG __itD.58729 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG D#535ptD.0 => D#536ptD.0
  # DEBUG __firstD.58983 => NULL
  # DEBUG __nD.58982 => __n_50
  # DEBUG __valueD.58981 => D#535ptD.0
  # DEBUG __tmpD.58984 => __x_copy_35
  # DEBUG __niterD.58985 => __n_50
  # DEBUG __niterD.58985 => __n_50
  # DEBUG __firstD.58983 => __first_7
  if (__n_50 == 0)
    goto <bb 20>;
  else
    goto <bb 16>;
;;    succ:       20 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_111 = PHI <__n_50(16), __n_63(19)>
  # PT = nonlocal escaped 
  # __first_76 = PHI <__first_7(16), __first_64(19)>
  # .MEM_81 = PHI <.MEM_3(D)(16), .MEM_99(19)>
  # DEBUG __niterD.58985 => __n_111
  # DEBUG __firstD.58983 => __first_76
  # .MEM_99 = VDEF <.MEM_81>
  *__first_76 = __x_copy_35;
  # RANGE [0, 18446744073709551614]
  __n_63 = __n_111 + 18446744073709551615;
  # DEBUG __niterD.58985 => __n_63
  # PT = nonlocal escaped 
  __first_64 = __first_76 + 4;
  # DEBUG __firstD.58983 => __first_64
  # DEBUG __niterD.58985 => __n_63
  # DEBUG __firstD.58983 => __first_64
  if (__n_63 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 50, flags: (NEW)
;;    pred:       17 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       50 [100.0%]  (FALLTHRU)

;;   basic block 50, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
  _160 = __n_50 * 4;
  # PT = nonlocal escaped 
  __first_123 = __first_7 + _160;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 50, next block 20, flags: (NEW)
;;    pred:       17 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       50 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_125 = PHI <__first_123(50), __first_7(15)>
  # .MEM_84 = PHI <.MEM_99(50), .MEM_3(D)(15)>
  # .MEM_51 = VDEF <.MEM_84>
  this_4(D)->D.40238._M_implD.39729._M_finishD.39732 = __first_125;
  # DEBUG D#552ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.58963 => D#552ptD.0
  # DEBUG thisD.58961 => &__positionD.40163
  # DEBUG __firstD.58926 => D#946ptD.0
  # DEBUG __lastD.58927 => __first_7
  # DEBUG __resultD.58928 => __first_125
  # DEBUG __allocD.58929 => D#239ptD.0
  # DEBUG D#238ptD.0 => D#239ptD.0
  # DEBUG D#235ptD.0 => D#238ptD.0
  # DEBUG __firstD.58933 => D#946ptD.0
  # DEBUG __lastD.58932 => __first_7
  # DEBUG __resultD.58931 => __first_125
  # DEBUG D.58930 => D#235ptD.0
  # DEBUG __firstD.58936 => D#946ptD.0
  # DEBUG __lastD.58935 => __first_7
  # DEBUG __resultD.58934 => __first_125
  # DEBUG __assignableD.58939 => 1
  # DEBUG __firstD.58942 => D#946ptD.0
  # DEBUG __lastD.58941 => __first_7
  # DEBUG __resultD.58940 => __first_125
  # DEBUG __firstD.58945 => D#946ptD.0
  # DEBUG __lastD.58944 => __first_7
  # DEBUG __resultD.58943 => __first_125
  # DEBUG __itD.54938 => __first_7
  # DEBUG __itD.54242 => __first_7
  # DEBUG __itD.54936 => D#946ptD.0
  # DEBUG __itD.54242 => D#946ptD.0
  # DEBUG __firstD.58948 => D#946ptD.0
  # DEBUG __lastD.58947 => __first_7
  # DEBUG __resultD.58946 => __first_125
  # DEBUG __itD.54918 => __first_125
  # DEBUG __itD.54245 => __first_125
  # DEBUG __itD.54916 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.54914 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG __firstD.58951 => NULL
  # DEBUG __lastD.58950 => NULL
  # DEBUG __resultD.58949 => NULL
  # DEBUG __simpleD.58955 => 1
  # DEBUG __firstD.58958 => NULL
  # DEBUG __lastD.58957 => NULL
  # DEBUG __resultD.58956 => NULL
  # DEBUG _NumD.58959 => _22
  if (_22 != 0)
    goto <bb 22>;
  else
    goto <bb 21>;
;;    succ:       22 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 639, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_168 = (long unsigned intD.14) _23;
  goto <bb 23>;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 261, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _23;
  # .MEM_100 = VDEF <.MEM_51>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memmoveD.995 (__first_125, __position_16, _59);
  # VUSE <.MEM_100>
  pretmp_166 = this_4(D)->D.40238._M_implD.39729._M_finishD.39732;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_51(21), .MEM_100(22)>
  # PT = nonlocal escaped 
  # prephitmp_167 = PHI <__first_125(21), pretmp_166(22)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_169 = PHI <pretmp_168(21), _59(22)>
  # PT = nonlocal escaped 
  _53 = prephitmp_167 + prephitmp_169;
  # .MEM_54 = VDEF <.MEM_87>
  this_4(D)->D.40238._M_implD.39729._M_finishD.39732 = _53;
  # DEBUG thisD.58924 => &__positionD.40163
  # DEBUG D#234ptD.0 => &__x_copyD.45695
  # DEBUG __firstD.58916 => D#946ptD.0
  # DEBUG __lastD.58917 => __first_7
  # DEBUG D#233ptD.0 => D#234ptD.0
  # DEBUG __valueD.58919 => D#233ptD.0
  # DEBUG __itD.54785 => __first_7
  # DEBUG __itD.54245 => __first_7
  # DEBUG __itD.54783 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG D#232ptD.0 => D#233ptD.0
  # DEBUG __firstD.58922 => NULL
  # DEBUG __lastD.58921 => NULL
  # DEBUG __valueD.58920 => D#232ptD.0
  # DEBUG __tmpD.58923 => __x_copy_35
  # DEBUG __firstD.58922 => D#946ptD.0
  if (__first_7 == __position_16)
    goto <bb 3>;
  else
    goto <bb 24>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_110 = PHI <__position_16(24), __position_58(27)>
  # .MEM_136 = PHI <.MEM_54(24), .MEM_101(27)>
  # DEBUG __firstD.58922 => __position_110
  # .MEM_101 = VDEF <.MEM_136>
  *__position_110 = __x_copy_35;
  # PT = nonlocal 
  __position_58 = __position_110 + 4;
  # DEBUG __firstD.58922 => __position_58
  # DEBUG __firstD.58922 => __position_58
  if (__first_7 == __position_58)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 49, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_154 = PHI <.MEM_101(25)>
;;    succ:       49 [100.0%]  (FALLTHRU)

;;   basic block 49, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
  goto <bb 3>;
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 49, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 25>;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.68125 => this_4(D)
  # DEBUG __nD.68126 => __n_2(D)
  # DEBUG __nD.68126 => __n_2(D)
  # DEBUG __sD.68127 => "vector::_M_fill_insert"
  # DEBUG D#402ptD.0 => this_4(D)
  # DEBUG thisD.56946 => D#402ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => &D#401ptD.0->D.40238
  # DEBUG thisD.56936 => D#400ptD.0
  # DEBUG __aD.56928 => D#399ptD.0
  # DEBUG D#398ptD.0 => D#399ptD.0
  # DEBUG D#381ptD.0 => D#398ptD.0
  # DEBUG thisD.56919 => D#381ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _17 = MEM[(intD.9 * *)this_4(D)];
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG thisD.68131 => D#64ptD.0
  # DEBUG thisD.68132 => D#64ptD.0
  _116 = (long intD.12) _17;
  _117 = _8 - _116;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _118 = _117 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _119 = (const long unsigned intD.14) _118;
  # RANGE [2305843009213693952, 6917529027641081855] NONZERO 9223372036854775807
  _120 = 4611686018427387903 - _119;
  if (__n_2(D) > _120)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 0
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_134 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 30, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG thisD.56964 => D#64ptD.0
  # DEBUG thisD.56963 => D#64ptD.0
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG thisD.56959 => D#64ptD.0
  # DEBUG thisD.56958 => D#64ptD.0
  # DEBUG __aD.68130 => &D.68134
  # DEBUG __bD.68129 => &__nD.68126
  _77 = MAX_EXPR <__n_2(D), _119>;
  # RANGE [0, 18446744073709551615]
  __len_124 = _77 + _119;
  # DEBUG __lenD.68128 => __len_124
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG D#64ptD.0 => this_4(D)
  # DEBUG thisD.56951 => D#64ptD.0
  # DEBUG thisD.56950 => D#64ptD.0
  # DEBUG D#402ptD.0 => this_4(D)
  # DEBUG thisD.56966 => D#402ptD.0
  # DEBUG D#401ptD.0 => D#402ptD.0
  # DEBUG D#400ptD.0 => &D#401ptD.0->D.40238
  # DEBUG thisD.56936 => D#400ptD.0
  # DEBUG __aD.56928 => D#399ptD.0
  # DEBUG D#398ptD.0 => D#399ptD.0
  # DEBUG D#381ptD.0 => D#398ptD.0
  # DEBUG thisD.56919 => D#381ptD.0
  _152 = __len_124 > 4611686018427387903;
  _142 = _119 > __len_124;
  _114 = _142 | _152;
  if (_114 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 8, maybe hot
;;    prev block 30, next block 32, flags: (NEW)
;;    pred:       47 [9.4%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_164 = __len_124 * 4;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 661, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # _156 = PHI <_144(46), _151(31)>
  # _157 = PHI <_143(46), _150(31)>
  # RANGE [4, 18446744073709551612] NONZERO 18446744073709551612
  # prephitmp_165 = PHI <18446744073709551612(46), pretmp_164(31)>
  # DEBUG __lenD.45718 => NULL
  # DEBUG thisD.59109 => this_4(D)
  # DEBUG D#77ptD.0 => &this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG thisD.59111 => NULL
  # DEBUG __iD.59110 => D#77ptD.0
  # DEBUG __lhsD.59106 => &__positionD.40163
  # DEBUG __rhsD.59107 => &D.45720
  # DEBUG thisD.53784 => &__positionD.40163
  # DEBUG thisD.53782 => &D.45720
  # DEBUG D#563ptD.0 => _157 /[ex] 4
  # DEBUG __elems_beforeD.45719 => (const size_typeD.39814) D#563ptD.0
  # DEBUG D#562ptD.0 => &this_4(D)->D.40238
  # DEBUG D#389ptD.0 => D#562ptD.0
  # DEBUG __nD.68116 => NULL
  # DEBUG thisD.68117 => D#389ptD.0
  # DEBUG D#388ptD.0 => D#389ptD.0
  # DEBUG D#387ptD.0 => &D#388ptD.0->_M_implD.39729
  # DEBUG D#386ptD.0 => D#387ptD.0
  # DEBUG __nD.68120 => NULL
  # DEBUG __aD.68119 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.68123 => NULL
  # DEBUG thisD.68121 => D#383ptD.0
  # DEBUG D.68122 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  # .MEM_131 = VDEF <.MEM_3(D)>
  # PT = { D.68137 } (escaped heap)
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  _112 = _ZnwmD.2764 (prephitmp_165);
  # VUSE <.MEM_131>
  pretmp_29 = this_4(D)->D.40238._M_implD.39729._M_startD.39731;
  # VUSE <.MEM_131>
  pretmp_147 = this_4(D)->D.40238._M_implD.39729._M_finishD.39732;
  pretmp_149 = _112 + prephitmp_165;
  pretmp_145 = (long intD.12) pretmp_147;
  pretmp_138 = (long intD.12) pretmp_29;
  pretmp_140 = _156 - pretmp_138;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 32, next block 52, flags: (NEW, REACHABLE)
;;    pred:       47 [90.6%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.68137 } (escaped heap)
  # iftmp.71_113 = PHI <0B(47), _112(32)>
  # .MEM_126 = PHI <.MEM_3(D)(47), .MEM_131(32)>
  # _158 = PHI <_151(47), _156(32)>
  # _153 = PHI <_150(47), _157(32)>
  # PT = nonlocal escaped 
  # prephitmp_146 = PHI <_17(47), pretmp_29(32)>
  # PT = null { D.68137 } (escaped heap)
  # prephitmp_148 = PHI <0B(47), pretmp_149(32)>
  # prephitmp_121 = PHI <_8(47), pretmp_145(32)>
  # prephitmp_137 = PHI <_150(47), pretmp_140(32)>
;;    succ:       52 [100.0%]  (FALLTHRU)

;;   basic block 52, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG __new_startD.45721 => NULL
  # DEBUG __new_finishD.45722 => NULL
  # DEBUG D#546ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.59104 => D#546ptD.0
  # RANGE [0, 18446744073709551615]
  _19 = (long unsigned intD.14) _153;
  # PT = null { D.68137 } (escaped heap)
  __first_20 = iftmp.71_113 + _19;
  # VUSE <.MEM_126>
  _56 = MEM[(const intD.9 &)__x_21(D)];
  # DEBUG D#543ptD.0 => __x_21(D)
  # DEBUG __firstD.59082 => __first_20
  # DEBUG __nD.59083 => __n_2(D)
  # DEBUG D#542ptD.0 => D#543ptD.0
  # DEBUG __xD.59086 => D#542ptD.0
  # DEBUG D.59085 => D#544ptD.0
  # DEBUG D#541ptD.0 => D#542ptD.0
  # DEBUG __firstD.59089 => __first_20
  # DEBUG __nD.59088 => __n_2(D)
  # DEBUG D#540ptD.0 => D#541ptD.0
  # DEBUG __xD.59087 => D#540ptD.0
  # DEBUG __assignableD.59091 => 1
  # DEBUG D#539ptD.0 => D#540ptD.0
  # DEBUG __firstD.59094 => __first_20
  # DEBUG __nD.59093 => __n_2(D)
  # DEBUG D#538ptD.0 => D#539ptD.0
  # DEBUG __xD.59092 => D#538ptD.0
  # DEBUG D#537ptD.0 => D#538ptD.0
  # DEBUG __firstD.59097 => __first_20
  # DEBUG __nD.59096 => __n_2(D)
  # DEBUG D#536ptD.0 => D#537ptD.0
  # DEBUG __valueD.59095 => D#536ptD.0
  # DEBUG __itD.58729 => __first_20
  # DEBUG __itD.54245 => __first_20
  # DEBUG D#535ptD.0 => D#536ptD.0
  # DEBUG __firstD.59100 => NULL
  # DEBUG __nD.59099 => __n_2(D)
  # DEBUG __valueD.59098 => D#535ptD.0
  # DEBUG __tmpD.59101 => _56
  # DEBUG __niterD.59102 => __n_2(D)
  # DEBUG __niterD.59102 => __n_2(D)
  # DEBUG __firstD.59100 => __first_20
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 7428, maybe hot
;;    prev block 52, next block 35, flags: (NEW, REACHABLE)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 6917529027641081855] NONZERO 9223372036854775807
  # __n_132 = PHI <__n_79(35), __n_2(D)(52)>
  # PT = null { D.68137 } (escaped heap)
  # __first_155 = PHI <__first_80(35), __first_20(52)>
  # .MEM_130 = PHI <.MEM_93(35), .MEM_126(52)>
  # DEBUG __niterD.59102 => __n_132
  # DEBUG __firstD.59100 => __first_155
  # .MEM_93 = VDEF <.MEM_130>
  *__first_155 = _56;
  # RANGE [0, 6917529027641081854] NONZERO 9223372036854775807
  __n_79 = __n_132 + 18446744073709551615;
  # DEBUG __niterD.59102 => __n_79
  # PT = null { D.68137 } (escaped heap)
  __first_80 = __first_155 + 4;
  # DEBUG __firstD.59100 => __first_80
  # DEBUG __niterD.59102 => __n_79
  # DEBUG __firstD.59100 => __first_80
  if (__n_79 == 0)
    goto <bb 36>;
  else
    goto <bb 35>;
;;    succ:       36 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [90.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 6693, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [90.1%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 34>;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 35, next block 51, flags: (NEW, REACHABLE)
;;    pred:       34 [9.9%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       51 [100.0%]  (FALLTHRU)

;;   basic block 51, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 36, next block 37, flags: (NEW)
;;    pred:       36 [100.0%]  (FALLTHRU)
  # DEBUG __new_finishD.45722 => 0B
  # DEBUG D#547ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.59080 => D#547ptD.0
  # DEBUG thisD.59078 => &__positionD.40163
  # DEBUG D#945ptD.0 => this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.59043 => D#945ptD.0
  # DEBUG __lastD.59044 => D#946ptD.0
  # DEBUG __resultD.59045 => NULL
  # DEBUG __allocD.59046 => D#237ptD.0
  # DEBUG D#236ptD.0 => D#237ptD.0
  # DEBUG D#235ptD.0 => D#236ptD.0
  # DEBUG __firstD.59050 => D#945ptD.0
  # DEBUG __lastD.59049 => D#946ptD.0
  # DEBUG __resultD.59048 => NULL
  # DEBUG D.59047 => D#235ptD.0
  # DEBUG __firstD.59053 => D#945ptD.0
  # DEBUG __lastD.59052 => D#946ptD.0
  # DEBUG __resultD.59051 => NULL
  # DEBUG __assignableD.59056 => 1
  # DEBUG __firstD.59059 => D#945ptD.0
  # DEBUG __lastD.59058 => D#946ptD.0
  # DEBUG __resultD.59057 => NULL
  # DEBUG __firstD.59062 => D#945ptD.0
  # DEBUG __lastD.59061 => D#946ptD.0
  # DEBUG __resultD.59060 => NULL
  # DEBUG __itD.54938 => D#946ptD.0
  # DEBUG __itD.54242 => D#946ptD.0
  # DEBUG __itD.54936 => D#945ptD.0
  # DEBUG __itD.54242 => D#945ptD.0
  # DEBUG __firstD.59065 => D#945ptD.0
  # DEBUG __lastD.59064 => D#946ptD.0
  # DEBUG __resultD.59063 => NULL
  # DEBUG __itD.54918 => NULL
  # DEBUG __itD.54245 => NULL
  # DEBUG __itD.54916 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG __itD.54914 => D#945ptD.0
  # DEBUG __itD.54245 => D#945ptD.0
  # DEBUG __firstD.59068 => NULL
  # DEBUG __lastD.59067 => NULL
  # DEBUG __resultD.59066 => NULL
  # DEBUG __simpleD.59072 => 1
  # DEBUG __firstD.59075 => NULL
  # DEBUG __lastD.59074 => NULL
  # DEBUG __resultD.59073 => NULL
  # DEBUG D#944ptD.0 => (long intD.12) D#945ptD.0
  # DEBUG D#943ptD.0 => _158 - D#944ptD.0
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_73 = prephitmp_137 /[ex] 4;
  # DEBUG _NumD.59076 => _Num_73
  if (_Num_73 != 0)
    goto <bb 38>;
  else
    goto <bb 37>;
;;    succ:       38 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 51, next block 38, flags: (NEW)
;;    pred:       51 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_103 = (long unsigned intD.14) prephitmp_137;
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       51 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _74 = (long unsigned intD.14) prephitmp_137;
  # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memmoveD.995 (iftmp.71_113, prephitmp_146, _74);
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_93(37), .MEM_94(38)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_102 = PHI <pretmp_103(37), _74(38)>
  # DEBUG D#942ptD.0 => (long unsigned intD.14) D#943ptD.0
  # DEBUG __new_finishD.45722 => iftmp.71_113 + D#942ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _25 = __n_2(D) * 4;
  # RANGE [0, 18446744073709551615]
  _133 = _25 + prephitmp_102;
  # PT = null { D.68137 } (escaped heap)
  __new_finish_26 = iftmp.71_113 + _133;
  # DEBUG __new_finishD.45722 => __new_finish_26
  # DEBUG D#548ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.59041 => D#548ptD.0
  # DEBUG D#941ptD.0 => this_4(D)->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59039 => &__positionD.40163
  # DEBUG __firstD.59004 => D#946ptD.0
  # DEBUG __lastD.59005 => D#941ptD.0
  # DEBUG __resultD.59006 => __new_finish_26
  # DEBUG __allocD.59007 => D#237ptD.0
  # DEBUG D#236ptD.0 => D#237ptD.0
  # DEBUG D#235ptD.0 => D#236ptD.0
  # DEBUG __firstD.59011 => D#946ptD.0
  # DEBUG __lastD.59010 => D#941ptD.0
  # DEBUG __resultD.59009 => __new_finish_26
  # DEBUG D.59008 => D#235ptD.0
  # DEBUG __firstD.59014 => D#946ptD.0
  # DEBUG __lastD.59013 => D#941ptD.0
  # DEBUG __resultD.59012 => __new_finish_26
  # DEBUG __assignableD.59017 => 1
  # DEBUG __firstD.59020 => D#946ptD.0
  # DEBUG __lastD.59019 => D#941ptD.0
  # DEBUG __resultD.59018 => __new_finish_26
  # DEBUG __firstD.59023 => D#946ptD.0
  # DEBUG __lastD.59022 => D#941ptD.0
  # DEBUG __resultD.59021 => __new_finish_26
  # DEBUG __itD.54938 => D#941ptD.0
  # DEBUG __itD.54242 => D#941ptD.0
  # DEBUG __itD.54936 => D#946ptD.0
  # DEBUG __itD.54242 => D#946ptD.0
  # DEBUG __firstD.59026 => D#946ptD.0
  # DEBUG __lastD.59025 => D#941ptD.0
  # DEBUG __resultD.59024 => __new_finish_26
  # DEBUG __itD.54918 => __new_finish_26
  # DEBUG __itD.54245 => __new_finish_26
  # DEBUG __itD.54916 => D#941ptD.0
  # DEBUG __itD.54245 => D#941ptD.0
  # DEBUG __itD.54914 => D#946ptD.0
  # DEBUG __itD.54245 => D#946ptD.0
  # DEBUG __firstD.59029 => NULL
  # DEBUG __lastD.59028 => NULL
  # DEBUG __resultD.59027 => NULL
  # DEBUG __simpleD.59033 => 1
  # DEBUG __firstD.59036 => NULL
  # DEBUG __lastD.59035 => NULL
  # DEBUG __resultD.59034 => NULL
  _66 = prephitmp_121 - _158;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_67 = _66 /[ex] 4;
  # DEBUG _NumD.59037 => _Num_67
  if (_Num_67 != 0)
    goto <bb 41>;
  else
    goto <bb 40>;
;;    succ:       41 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 522, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_162 = (long unsigned intD.14) _66;
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 213, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       39 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _68 = (long unsigned intD.14) _66;
  # .MEM_95 = VDEF <.MEM_90>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  memcpyD.992 (__new_finish_26, __position_16, _68);
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_90(40), .MEM_95(41)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_163 = PHI <pretmp_162(40), _68(41)>
  # PT = null { D.68137 } (escaped heap)
  _70 = __new_finish_26 + prephitmp_163;
  # DEBUG __new_finishD.45722 => _70
  # DEBUG D#549ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.59002 => D#549ptD.0
  # DEBUG D#561ptD.0 => this_4(D)->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#560ptD.0 => this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.58999 => D#560ptD.0
  # DEBUG __lastD.59000 => D#561ptD.0
  # DEBUG D.59001 => NULL
  # DEBUG D#134ptD.0 => D#560ptD.0
  # DEBUG D#135ptD.0 => D#561ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#559ptD.0 => this_4(D)->D.40238._M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#558ptD.0 => (long intD.12) D#559ptD.0
  # DEBUG D#557ptD.0 => (long intD.12) D#945ptD.0
  # DEBUG D#556ptD.0 => D#558ptD.0 - D#557ptD.0
  # DEBUG D#555ptD.0 => D#556ptD.0 /[ex] 4
  # DEBUG D#554ptD.0 => (long unsigned intD.14) D#555ptD.0
  # DEBUG D#553ptD.0 => &this_4(D)->D.40238
  # DEBUG thisD.58989 => D#553ptD.0
  # DEBUG __pD.58990 => D#945ptD.0
  # DEBUG __nD.58991 => D#554ptD.0
  if (prephitmp_146 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 513, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#553ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#554ptD.0
  # DEBUG __pD.58995 => D#945ptD.0
  # DEBUG __aD.58993 => D#144ptD.0
  # DEBUG __nD.58994 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.58998 => D#945ptD.0
  # DEBUG thisD.58996 => D#140ptD.0
  # DEBUG D.58997 => D#141ptD.0
  # .MEM_96 = VDEF <.MEM_91>
  # USE = nonlocal null { D.68137 } (escaped heap)
  # CLB = nonlocal null { D.68137 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_146);
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 43, next block 53, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                42 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_96(43), .MEM_91(42)>
;;    succ:       53 [100.0%]  (FALLTHRU)

;;   basic block 53, loop depth 0, count 0, freq 735, maybe hot
;;    prev block 44, next block 45, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU)
  # .MEM_30 = VDEF <.MEM_92>
  this_4(D)->D.40238._M_implD.39729._M_startD.39731 = iftmp.71_113;
  # .MEM_31 = VDEF <.MEM_30>
  this_4(D)->D.40238._M_implD.39729._M_finishD.39732 = _70;
  # .MEM_34 = VDEF <.MEM_31>
  this_4(D)->D.40238._M_implD.39729._M_end_of_storageD.39733 = prephitmp_148;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 53, next block 54, flags: (NEW, REACHABLE)
;;    pred:       55 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_172(55), .MEM_34(53)>
;;    succ:       54 [100.0%]  (FALLTHRU)

;;   basic block 54, loop depth 0, count 0, freq 4156, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 46, loop depth 0, count 0, freq 654, maybe hot
;;   Invalid sum of incoming frequencies 492, should be 654
;;    prev block 54, next block 47, flags: (NEW, REACHABLE)
;;    pred:       30 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.45718 => NULL
  # DEBUG thisD.59109 => this_4(D)
  # DEBUG D#77ptD.0 => &this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG thisD.59111 => NULL
  # DEBUG __iD.59110 => D#77ptD.0
  # DEBUG __lhsD.59106 => &__positionD.40163
  # DEBUG __rhsD.59107 => &D.45720
  # DEBUG thisD.53784 => &__positionD.40163
  _144 = (long intD.12) __position_16;
  # DEBUG thisD.53782 => &D.45720
  _143 = _144 - _116;
  # DEBUG D#563ptD.0 => _143 /[ex] 4
  # DEBUG __elems_beforeD.45719 => (const size_typeD.39814) D#563ptD.0
  # DEBUG D#562ptD.0 => &this_4(D)->D.40238
  # DEBUG D#389ptD.0 => D#562ptD.0
  # DEBUG __nD.68116 => NULL
  # DEBUG thisD.68117 => D#389ptD.0
  # DEBUG D#388ptD.0 => D#389ptD.0
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 80, maybe hot
;;   Invalid sum of incoming frequencies 243, should be 80
;;    prev block 46, next block 1, flags: (NEW, REACHABLE)
;;    pred:       30 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.45718 => NULL
  # DEBUG thisD.59109 => this_4(D)
  # DEBUG D#77ptD.0 => &this_4(D)->D.40238._M_implD.39729._M_startD.39731
  # DEBUG thisD.59111 => NULL
  # DEBUG __iD.59110 => D#77ptD.0
  # DEBUG __lhsD.59106 => &__positionD.40163
  # DEBUG __rhsD.59107 => &D.45720
  # DEBUG thisD.53784 => &__positionD.40163
  _151 = (long intD.12) __position_16;
  # DEBUG thisD.53782 => &D.45720
  _150 = _151 - _116;
  # DEBUG D#563ptD.0 => _150 /[ex] 4
  # DEBUG __elems_beforeD.45719 => (const size_typeD.39814) D#563ptD.0
  # DEBUG D#562ptD.0 => &this_4(D)->D.40238
  # DEBUG D#389ptD.0 => D#562ptD.0
  # DEBUG __nD.68116 => NULL
  # DEBUG thisD.68117 => D#389ptD.0
  # DEBUG D#388ptD.0 => D#389ptD.0
  if (__len_124 != 0)
    goto <bb 31>;
  else
    goto <bb 33>;
;;    succ:       31 [9.4%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [90.6%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function BufferState::SharedBufferPolicy::SharedBufferPolicy(const Configuration&, BufferState*, const string&) (_ZN11BufferState18SharedBufferPolicyC2ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2138, decl_uid=40286, cgraph_uid=605, symbol_order=606)


Pass statistics:
----------------


Global statistics (BBS:226, LOOPS:4, CONDITIONS:99, STMTS:2832)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

BufferState::SharedBufferPolicy::SharedBufferPolicy(const Configuration&, BufferState*, const string&) (struct SharedBufferPolicyD.39699 * const thisD.40287, const struct ConfigurationD.36282 & configD.40288, struct BufferStateD.39590 * parentD.40289, const struct stringD.2845 & nameD.40290)
Eh tree:
   1 cleanup land:{1,<L79>}
     2 cleanup land:{2,<L78>}
       3 cleanup land:{3,<L77>}
         4 cleanup land:{4,<L76>}
           5 cleanup land:{59,<L104>},{58,<L103>},{57,<L102>},{56,<L100>},{55,<L99>},{54,<L98>},{53,<L97>},{43,<L87>},{42,<L86>},{41,<L85>},{40,<L84>},{39,<L83>},{37,<L81>},{36,<L80>},{7,<L109>},{35,}
             44 cleanup land:{61,<L106>},{60,<L105>},{47,<L91>},{46,<L90>},{45,<L89>},{44,<L88>},{24,<L108>}
               58 cleanup land:{52,<L96>},{51,<L95>},{50,<L94>},{49,<L93>},{48,<L92>},{31,<L107>}
                 61 cleanup land:{33,<L69>}
               52 cleanup land:{29,<L66>}
               47 cleanup land:{26,<L63>}
             38 cleanup land:{22,<L60>}
             31 cleanup land:{18,<L56>}
             24 cleanup land:{38,<L82>},{15,<L101>}
               25 cleanup land:{16,<L53>}
             20 cleanup land:{13,<L51>}
             16 cleanup land:{11,<L49>}
             12 cleanup land:{9,<L47>}
             8 cleanup land:{6,<L45>}
{
  struct iteratorD.39806 __positionD.68775;
  value_typeD.39801 __xD.68770;
  struct iteratorD.39806 __positionD.68764;
  value_typeD.39801 __xD.68759;
  struct __normal_iteratorD.39807 D.68756;
  struct iteratorD.39806 __positionD.68744;
  value_typeD.39801 __xD.68739;
  size_typeD.11502 __dnewD.68711;
  size_typeD.11502 __dnewD.68666;
  struct __normal_iteratorD.39807 D.68646;
  struct iteratorD.39806 __positionD.68634;
  value_typeD.39801 __xD.68629;
  size_typeD.11502 __dnewD.68601;
  size_typeD.11502 __dnewD.68556;
  struct iteratorD.39806 __positionD.68533;
  value_typeD.39801 __xD.68528;
  struct __normal_iteratorD.39807 D.68525;
  struct __normal_iteratorD.39807 D.68516;
  size_typeD.11502 __dnewD.68482;
  size_typeD.11502 __dnewD.68437;
  size_typeD.11502 __dnewD.68392;
  size_typeD.11502 __dnewD.68347;
  struct iteratorD.39806 __positionD.68324;
  value_typeD.39801 __xD.68319;
  size_typeD.11502 __dnewD.68291;
  size_typeD.11502 __dnewD.68246;
  intD.9 vD.42697;
  intD.9 iD.42694;
  intD.9 iD.42692;
  const intD.9 evD.42689;
  intD.9 iD.42684;
  const intD.9 svD.42681;
  const intD.9 bsD.42674;
  struct vectorD.39532 end_vcD.42662;
  struct vectorD.39532 start_vcD.42661;
  intD.9 num_private_bufsD.42660;
  const struct stringD.2845 D.42690;
  const struct stringD.2845 D.42687;
  const struct stringD.2845 D.42682;
  const struct stringD.2845 D.42679;
  const value_typeD.39801 D.42677;
  const struct stringD.2845 D.42675;
  const struct stringD.2845 D.42672;
  struct vectorD.39532 D.42671;
  const struct stringD.2845 D.42669;
  const struct stringD.2845 D.42667;
  const struct stringD.2845 D.42665;
  const struct stringD.2845 D.42663;
  static const charD.10 _ZZN11BufferState18SharedBufferPolicyC4ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.42648[103] = "BufferState::SharedBufferPolicy::SharedBufferPolicy(const Configuration&, BufferState*, const string&)";
  static const charD.10 _ZZN11BufferState18SharedBufferPolicyC4ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.42648[103] = "BufferState::SharedBufferPolicy::SharedBufferPolicy(const Configuration&, BufferState*, const string&)";
  const intD.9 pretmp_4;
  const intD.9 prephitmp_15;
  struct ModuleD.29620 * _29;
  intD.9 * const _30;
  charD.10 * const _37;
  intD.9 & _38;
  charD.10 * const _43;
  struct vectorD.39532 * _46;
  intD.9 * const pretmp_47;
  long unsigned intD.14 _48;
  intD.9 _51;
  charD.10 * const _54;
  intD.9 _58;
  intD.9 _59;
  intD.9 * const _61;
  charD.10 * const _63;
  intD.9 * _65;
  intD.9 & _66;
  struct vectorD.39532 * _69;
  intD.9 * _72;
  charD.10 * const _74;
  intD.9 * pretmp_75;
  intD.9 _77;
  charD.10 * const _81;
  intD.9 _83;
  intD.9 _84;
  intD.9 * _86;
  charD.10 * const _92;
  intD.9 & _94;
  intD.9 _95;
  charD.10 * const _100;
  intD.9 & _101;
  intD.9 _104;
  charD.10 * const _107;
  intD.9 * _109;
  long unsigned intD.14 _110;
  long unsigned intD.14 _111;
  intD.9 _112;
  intD.9 _113;
  charD.10 * const _119;
  charD.10 * const _124;
  intD.9 * const _125;
  intD.9 _128;
  charD.10 * const _131;
  intD.9 * _133;
  long unsigned intD.14 _134;
  intD.9 * const _135;
  intD.9 _137;
  intD.9 _138;
  intD.9 _139;
  intD.9 * const _141;
  intD.9 * _145;
  long unsigned intD.14 _147;
  struct vectorD.39532 * _148;
  intD.9 * const _149;
  intD.9 _150;
  long unsigned intD.14 _152;
  intD.9 & _153;
  intD.9 _154;
  intD.9 _156;
  long unsigned intD.14 _158;
  intD.9 _160;
  intD.9 * const _161;
  intD.9 _162;
  long unsigned intD.14 _163;
  intD.9 * const _164;
  intD.9 _165;
  struct vectorD.39532 * _172;
  charD.10 * const _174;
  intD.9 * _175;
  intD.9 * _179;
  charD.10 * const _181;
  intD.9 * _182;
  charD.10 * const _184;
  charD.10 * const _185;
  charD.10 * const _188;
  charD.10 * const _190;
  charD.10 * const _192;
  charD.10 * const _194;
  intD.9 * _197;
  intD.9 * _198;
  intD.9 * _199;
  long unsigned intD.14 _207;
  intD.9 & _208;
  intD.9 * _209;
  const intD.9 pretmp_264;
  const intD.9 prephitmp_265;
  intD.9 prephitmp_281;
  intD.9 prephitmp_287;
  intD.9 * const prephitmp_300;
  intD.9 * const prephitmp_307;
  intD.9 * const pretmp_308;
  long unsigned intD.14 prephitmp_320;
  intD.9 pretmp_321;
  intD.9 prephitmp_322;
  long unsigned intD.14 pretmp_339;
  long unsigned intD.14 pretmp_340;
  intD.9 * _422;
  intD.9 pretmp_444;
  intD.9 * const _448;
  intD.9 * const _449;
  long intD.12 _450;
  long intD.12 _451;
  long intD.12 _452;
  long intD.12 _453;
  size_typeD.39814 _454;
  long unsigned intD.14 _455;
  long unsigned intD.14 _456;
  intD.9 * _457;
  const intD.9 pretmp_459;
  intD.9 _462;
  intD.9 _464;
  intD.9 & _469;
  intD.9 * _478;
  intD.9 prephitmp_482;
  long unsigned intD.14 _484;
  intD.9 _494;
  intD.9 prephitmp_497;
  charD.10 * _498;
  long unsigned intD.14 __dnew.49_499;
  long unsigned intD.14 __dnew.49_502;
  charD.10 * const _503;
  charD.10 * _504;
  intD.9 * const prephitmp_509;
  const intD.9 prephitmp_511;
  charD.10 * _514;
  long unsigned intD.14 __dnew.49_515;
  long unsigned intD.14 __dnew.49_518;
  charD.10 * const _519;
  charD.10 * _520;
  intD.9 * _521;
  intD.9 * _522;
  intD.9 * _524;
  intD.9 * _525;
  intD.9 * _526;
  intD.9 * _527;
  intD.9 & _528;
  long intD.12 _529;
  long intD.12 _530;
  long intD.12 _531;
  long intD.12 _532;
  size_typeD.39814 _533;
  long unsigned intD.14 _534;
  long unsigned intD.14 _535;
  intD.9 * _536;
  intD.9 * _542;
  long unsigned intD.14 _543;
  charD.10 * _545;
  long unsigned intD.14 __dnew.49_546;
  long unsigned intD.14 __dnew.49_549;
  charD.10 * const _550;
  charD.10 * _551;
  charD.10 * _561;
  long unsigned intD.14 __dnew.49_562;
  long unsigned intD.14 __dnew.49_565;
  charD.10 * const _566;
  charD.10 * _567;
  intD.9 * const _568;
  intD.9 * const _569;
  long intD.12 _570;
  long intD.12 _571;
  long intD.12 _572;
  long intD.12 _573;
  size_typeD.39814 _574;
  long unsigned intD.14 _575;
  long unsigned intD.14 _576;
  intD.9 * _577;
  intD.9 * _578;
  intD.9 * _580;
  intD.9 _586;
  intD.9 _587;
  charD.10 * _589;
  long unsigned intD.14 __dnew.49_590;
  long unsigned intD.14 __dnew.49_593;
  charD.10 * const _594;
  charD.10 * _595;
  intD.9 & _602;
  charD.10 * _605;
  long unsigned intD.14 __dnew.49_606;
  long unsigned intD.14 __dnew.49_609;
  charD.10 * const _610;
  charD.10 * _611;
  intD.9 * const _612;
  intD.9 * const _613;
  long intD.12 _614;
  long intD.12 _615;
  long intD.12 _616;
  long intD.12 _617;
  size_typeD.39814 _618;
  long unsigned intD.14 _619;
  long unsigned intD.14 _620;
  intD.9 * _621;
  intD.9 * _622;
  intD.9 * _624;
  intD.9 * const _625;
  long intD.12 _626;
  long intD.12 _627;
  long intD.12 _628;
  long intD.12 _629;
  size_typeD.39814 _630;
  long unsigned intD.14 _631;
  long unsigned intD.14 _632;
  intD.9 * _633;
  intD.9 * const _634;
  long intD.12 _635;
  long intD.12 _636;
  long intD.12 _637;
  long intD.12 _638;
  size_typeD.39814 _639;
  long unsigned intD.14 _640;
  long unsigned intD.14 _641;
  intD.9 * _642;
  intD.9 * const prephitmp_679;
  intD.9 * const pretmp_752;
  intD.9 * pretmp_762;

;;   basic block 2, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#578ptD.0 => &this_23(D)->D.40291
  # DEBUG thisD.59165 => D#578ptD.0
  # DEBUG configD.59166 => config_25(D)
  # DEBUG parentD.59167 => parent_26(D)
  # DEBUG nameD.59168 => name_27(D)
  # PT = nonlocal 
  _29 = &MEM[(struct BufferPolicyD.39592 *)this_23(D)].D.39647;
  # .MEM_238 = VDEF <.MEM_24(D)>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZN6ModuleC2EPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30402 (_29, parent_26(D), name_27(D));
  # .MEM_240 = VDEF <.MEM_238>
  MEM[(struct BufferPolicyD.39592 *)this_23(D)]._buffer_stateD.39594 = parent_26(D);
  # .MEM_28 = VDEF <.MEM_240>
  this_23(D)->D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState18SharedBufferPolicyED.40300 + 16B];
  # DEBUG D#577ptD.0 => &this_23(D)->_private_buf_vc_mapD.40240
  # DEBUG thisD.59162 => D#577ptD.0
  # DEBUG D#229ptD.0 => &D#577ptD.0->D.40238
  # DEBUG thisD.59163 => D#229ptD.0
  # DEBUG D#228ptD.0 => &D#229ptD.0->_M_implD.39729
  # DEBUG thisD.59164 => D#228ptD.0
  # DEBUG thisD.54757 => D#228ptD.0
  # DEBUG thisD.54755 => D#228ptD.0
  # .MEM_241 = VDEF <.MEM_28>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 112B]._M_startD.39731 = 0B;
  # .MEM_242 = VDEF <.MEM_241>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 112B]._M_finishD.39732 = 0B;
  # .MEM_243 = VDEF <.MEM_242>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 112B]._M_end_of_storageD.39733 = 0B;
  # DEBUG D#576ptD.0 => &this_23(D)->_private_buf_sizeD.40241
  # DEBUG thisD.59159 => D#576ptD.0
  # DEBUG D#229ptD.0 => &D#576ptD.0->D.40238
  # DEBUG thisD.59160 => D#229ptD.0
  # DEBUG D#228ptD.0 => &D#229ptD.0->_M_implD.39729
  # DEBUG thisD.59161 => D#228ptD.0
  # DEBUG thisD.54757 => D#228ptD.0
  # DEBUG thisD.54755 => D#228ptD.0
  # .MEM_244 = VDEF <.MEM_243>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 136B]._M_startD.39731 = 0B;
  # .MEM_245 = VDEF <.MEM_244>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 136B]._M_finishD.39732 = 0B;
  # .MEM_246 = VDEF <.MEM_245>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 136B]._M_end_of_storageD.39733 = 0B;
  # DEBUG D#575ptD.0 => &this_23(D)->_private_buf_occupancyD.40242
  # DEBUG thisD.59156 => D#575ptD.0
  # DEBUG D#229ptD.0 => &D#575ptD.0->D.40238
  # DEBUG thisD.59157 => D#229ptD.0
  # DEBUG D#228ptD.0 => &D#229ptD.0->_M_implD.39729
  # DEBUG thisD.59158 => D#228ptD.0
  # DEBUG thisD.54757 => D#228ptD.0
  # DEBUG thisD.54755 => D#228ptD.0
  # .MEM_247 = VDEF <.MEM_246>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 160B]._M_startD.39731 = 0B;
  # .MEM_248 = VDEF <.MEM_247>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 160B]._M_finishD.39732 = 0B;
  # .MEM_249 = VDEF <.MEM_248>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 160B]._M_end_of_storageD.39733 = 0B;
  # .MEM_31 = VDEF <.MEM_249>
  this_23(D)->_shared_buf_occupancyD.40244 = 0;
  # DEBUG D#574ptD.0 => &this_23(D)->_reserved_slotsD.40245
  # DEBUG thisD.59153 => D#574ptD.0
  # DEBUG D#229ptD.0 => &D#574ptD.0->D.40238
  # DEBUG thisD.59154 => D#229ptD.0
  # DEBUG D#228ptD.0 => &D#229ptD.0->_M_implD.39729
  # DEBUG thisD.59155 => D#228ptD.0
  # DEBUG thisD.54757 => D#228ptD.0
  # DEBUG thisD.54755 => D#228ptD.0
  # .MEM_250 = VDEF <.MEM_31>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 192B]._M_startD.39731 = 0B;
  # .MEM_251 = VDEF <.MEM_250>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 192B]._M_finishD.39732 = 0B;
  # .MEM_252 = VDEF <.MEM_251>
  MEM[(struct _Vector_implD.39706 *)this_23(D) + 192B]._M_end_of_storageD.39733 = 0B;
  # DEBUG D#63ptD.0 => &D.42664
  # DEBUG thisD.59152 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42664
  # DEBUG thisD.68227 => &D.42663
  # DEBUG __sD.68228 => "num_vcs"
  # DEBUG __aD.68229 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68239 => &D.42663
  # DEBUG D#296ptD.0 => &D.42663._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68242 => D#296ptD.0
  # DEBUG __datD.68241 => &D.42663.D.11539._M_local_bufD.11541
  # DEBUG __aD.68240 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_643 = VDEF <.MEM_252>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42663]._M_pD.11525 = &D.42663.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68238 => "num_vcs"
  # DEBUG thisD.68232 => &D.42663
  # DEBUG __begD.68231 => "num_vcs"
  # DEBUG __endD.68230 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG thisD.68236 => &D.42663
  # DEBUG __begD.68235 => "num_vcs"
  # DEBUG __endD.68234 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG thisD.68243 => &D.42663
  # DEBUG __begD.68244 => "num_vcs"
  # DEBUG __endD.68245 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG __ptrD.55982 => "num_vcs"
  # DEBUG __firstD.68269 => "num_vcs"
  # DEBUG __lastD.68268 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG D#316ptD.0 => &__firstD.68269
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68271 => "num_vcs"
  # DEBUG __lastD.68270 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG __dnewD.68246 => 7
  # DEBUG D#1ptD.0 => &D.42663
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68249 => &D.42663.D.11539._M_local_bufD.11541
  # DEBUG __k1D.68248 => "num_vcs"
  # DEBUG __k2D.68247 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG __dD.68252 => &D.42663.D.11539._M_local_bufD.11541
  # DEBUG __sD.68251 => "num_vcs"
  # DEBUG __nD.68250 => 7
  # DEBUG __s1D.68255 => &D.42663.D.11539._M_local_bufD.11541
  # DEBUG __s2D.68254 => "num_vcs"
  # DEBUG __nD.68253 => 7
  # .MEM_649 = VDEF <.MEM_643>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (&D.42663.D.11539._M_local_bufD.11541, "num_vcs", 7);
  # DEBUG thisD.68259 => &D.42663
  # DEBUG __nD.68258 => 7
  # DEBUG D#9ptD.0 => &D.42663
  # DEBUG __lengthD.68261 => 7
  # DEBUG thisD.68260 => D#9ptD.0
  # .MEM_650 = VDEF <.MEM_649>
  MEM[(size_typeD.11502 *)&D.42663 + 8B] = 7;
  # DEBUG D#1ptD.0 => &D.42663
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.68263 => &MEM[(voidD.45 *)&D.42663 + 23B]
  # DEBUG __c2D.68262 => D#10ptD.0
  # .MEM_651 = VDEF <.MEM_650>
  MEM[(char_typeD.6629 &)&D.42663 + 23] = 0;
  # DEBUG D#1009ptD.0 => {CLOBBER}
  # DEBUG __dnewD.68246 => D#1009ptD.0
  [LP 6] # .MEM_33 = VDEF <.MEM_651>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  num_private_bufs_34 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_25(D), &D.42663);
;;    succ:       157 (EH,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG vcsD.42659 => num_private_bufs_34
  # DEBUG thisD.59172 => &D.42663
  # DEBUG thisD.59173 => &D.42663
  # DEBUG thisD.59182 => &D.42663
  # VUSE <.MEM_33>
  # PT = nonlocal escaped { D.42663 } (escaped)
  _37 = MEM[(charD.10 * *)&D.42663];
  # DEBUG D#1ptD.0 => &D.42663
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59183 => &D.42663
  if (&D.42663.D.11539._M_local_bufD.11541 != _37)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42663.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59175 => &D.42663
  # DEBUG __sizeD.59174 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42663
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42663
  # DEBUG D#185ptD.0 => &D.42663._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59178 => _37
  # DEBUG __aD.59176 => D#183ptD.0
  # DEBUG __nD.59177 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59181 => _37
  # DEBUG thisD.59179 => D#179ptD.0
  # DEBUG D.59180 => D#180ptD.0
  # .MEM_253 = VDEF <.MEM_33>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_37);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_200 = PHI <.MEM_33(3), .MEM_253(4)>
  # DEBUG D#189ptD.0 => &D.42663._M_dataplusD.11519
  # DEBUG thisD.59184 => D#189ptD.0
  # DEBUG thisD.59185 => D#189ptD.0
  # DEBUG thisD.59186 => D#189ptD.0
  # .MEM_36 = VDEF <.MEM_200>
  D.42663 ={v} {CLOBBER};
  # DEBUG thisD.59170 => &D.42664
  # DEBUG thisD.59171 => &D.42664
  # DEBUG D#63ptD.0 => &D.42666
  # DEBUG thisD.59169 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42666
  # DEBUG thisD.68272 => &D.42665
  # DEBUG __sD.68273 => "private_bufs"
  # DEBUG __aD.68274 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68284 => &D.42665
  # DEBUG D#296ptD.0 => &D.42665._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68287 => D#296ptD.0
  # DEBUG __datD.68286 => &D.42665.D.11539._M_local_bufD.11541
  # DEBUG __aD.68285 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_653 = VDEF <.MEM_36>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42665]._M_pD.11525 = &D.42665.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68283 => "private_bufs"
  # DEBUG thisD.68277 => &D.42665
  # DEBUG __begD.68276 => "private_bufs"
  # DEBUG __endD.68275 => &MEM[(voidD.45 *)"private_bufs" + 12B]
  # DEBUG thisD.68281 => &D.42665
  # DEBUG __begD.68280 => "private_bufs"
  # DEBUG __endD.68279 => &MEM[(voidD.45 *)"private_bufs" + 12B]
  # DEBUG thisD.68288 => &D.42665
  # DEBUG __begD.68289 => "private_bufs"
  # DEBUG __endD.68290 => &MEM[(voidD.45 *)"private_bufs" + 12B]
  # DEBUG __ptrD.55982 => "private_bufs"
  # DEBUG __firstD.68314 => "private_bufs"
  # DEBUG __lastD.68313 => &MEM[(voidD.45 *)"private_bufs" + 12B]
  # DEBUG D#316ptD.0 => &__firstD.68314
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68316 => "private_bufs"
  # DEBUG __lastD.68315 => &MEM[(voidD.45 *)"private_bufs" + 12B]
  # DEBUG __dnewD.68291 => 12
  # DEBUG D#1ptD.0 => &D.42665
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68294 => &D.42665.D.11539._M_local_bufD.11541
  # DEBUG __k1D.68293 => "private_bufs"
  # DEBUG __k2D.68292 => &MEM[(voidD.45 *)"private_bufs" + 12B]
  # DEBUG __dD.68297 => &D.42665.D.11539._M_local_bufD.11541
  # DEBUG __sD.68296 => "private_bufs"
  # DEBUG __nD.68295 => 12
  # DEBUG __s1D.68300 => &D.42665.D.11539._M_local_bufD.11541
  # DEBUG __s2D.68299 => "private_bufs"
  # DEBUG __nD.68298 => 12
  # .MEM_659 = VDEF <.MEM_653>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (&D.42665.D.11539._M_local_bufD.11541, "private_bufs", 12);
  # DEBUG thisD.68304 => &D.42665
  # DEBUG __nD.68303 => 12
  # DEBUG D#9ptD.0 => &D.42665
  # DEBUG __lengthD.68306 => 12
  # DEBUG thisD.68305 => D#9ptD.0
  # .MEM_660 = VDEF <.MEM_659>
  MEM[(size_typeD.11502 *)&D.42665 + 8B] = 12;
  # DEBUG D#1ptD.0 => &D.42665
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.68308 => &MEM[(voidD.45 *)&D.42665 + 28B]
  # DEBUG __c2D.68307 => D#10ptD.0
  # .MEM_661 = VDEF <.MEM_660>
  MEM[(char_typeD.6629 &)&D.42665 + 28] = 0;
  # DEBUG D#1010ptD.0 => {CLOBBER}
  # DEBUG __dnewD.68291 => D#1010ptD.0
  [LP 9] # .MEM_40 = VDEF <.MEM_661>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  num_private_bufs_41 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_25(D), &D.42665);
;;    succ:       161 (EH,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG num_private_bufsD.42660 => num_private_bufs_41
  # DEBUG thisD.59189 => &D.42665
  # DEBUG thisD.59190 => &D.42665
  # DEBUG thisD.59199 => &D.42665
  # VUSE <.MEM_40>
  # PT = nonlocal escaped { D.42665 } (escaped)
  _43 = MEM[(charD.10 * *)&D.42665];
  # DEBUG D#1ptD.0 => &D.42665
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59200 => &D.42665
  if (&D.42665.D.11539._M_local_bufD.11541 != _43)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42665.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59192 => &D.42665
  # DEBUG __sizeD.59191 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42665
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42665
  # DEBUG D#185ptD.0 => &D.42665._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59195 => _43
  # DEBUG __aD.59193 => D#183ptD.0
  # DEBUG __nD.59194 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59198 => _43
  # DEBUG thisD.59196 => D#179ptD.0
  # DEBUG D.59197 => D#180ptD.0
  # .MEM_258 = VDEF <.MEM_40>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_43);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_143 = PHI <.MEM_40(6), .MEM_258(7)>
  # DEBUG D#189ptD.0 => &D.42665._M_dataplusD.11519
  # DEBUG thisD.59201 => D#189ptD.0
  # DEBUG thisD.59202 => D#189ptD.0
  # DEBUG thisD.59203 => D#189ptD.0
  # .MEM_42 = VDEF <.MEM_143>
  D.42665 ={v} {CLOBBER};
  # DEBUG thisD.59187 => &D.42666
  # DEBUG thisD.59188 => &D.42666
  if (num_private_bufs_41 < 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_339 = (long unsigned intD.14) num_private_bufs_34;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  if (num_private_bufs_41 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
;;    succ:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_340 = (long unsigned intD.14) num_private_bufs_41;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # num_private_bufs_1 = PHI <num_private_bufs_34(9), num_private_bufs_41(11), 1(10)>
  # RANGE ~[2147483648, 18446744071562067967]
  # prephitmp_320 = PHI <pretmp_339(9), pretmp_340(11), 1(10)>
  # DEBUG num_private_bufsD.42660 => num_private_bufs_1
  # DEBUG D#1013ptD.0 => (long unsigned intD.14) num_private_bufs_1
  # DEBUG D#1016ptD.0 => &this_23(D)->_private_buf_occupancyD.40242
  # DEBUG thisD.68317 => D#1016ptD.0
  # DEBUG __new_sizeD.68318 => D#1013ptD.0
  # .MEM_663 = VDEF <.MEM_42>
  __xD.68319 = 0;
  # DEBUG __xD.68319 => __xD.68319
  # VUSE <.MEM_663>
  # PT = nonlocal escaped 
  _448 = MEM[(intD.9 * *)this_23(D) + 160B];
  # DEBUG D#64ptD.0 => D#1016ptD.0
  # VUSE <.MEM_663>
  # PT = nonlocal escaped 
  _449 = MEM[(intD.9 * *)this_23(D) + 168B];
  # DEBUG D#64ptD.0 => D#1016ptD.0
  # DEBUG thisD.68326 => D#64ptD.0
  # DEBUG thisD.68327 => D#64ptD.0
  _450 = (long intD.12) _449;
  _451 = (long intD.12) _448;
  _452 = _450 - _451;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _453 = _452 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _454 = (size_typeD.39814) _453;
  if (prephitmp_320 > _454)
    goto <bb 13>;
  else
    goto <bb 15>;
;;    succ:       13 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1016ptD.0
  # DEBUG D#64ptD.0 => D#1016ptD.0
  # DEBUG thisD.59139 => D#64ptD.0
  # DEBUG thisD.59138 => D#64ptD.0
  # RANGE [1, 18446744073709551615]
  _455 = prephitmp_320 - _454;
  # DEBUG thisD.59132 => D#1016ptD.0
  # DEBUG D#76ptD.0 => &D#1016ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59134 => NULL
  # DEBUG __iD.59133 => D#76ptD.0
  # DEBUG thisD.68325 => D#1016ptD.0
  # .MEM_665 = VDEF <.MEM_663>
  MEM[(struct __normal_iteratorD.39807 *)&__positionD.68324] = _449;
  # DEBUG __nD.68323 => _455
  # DEBUG __xD.68322 => &__xD.68319
  # PT = nonlocal 
  _46 = &this_23(D)->_private_buf_occupancyD.40242;
  [LP 36] # .MEM_666 = VDEF <.MEM_665>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.40161 (_46, __positionD.68324, _455, &__xD.68319);
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                212 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_686 = PHI <.MEM_666(13), .MEM_663(15)>
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       12 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1016ptD.0
  # DEBUG D#64ptD.0 => D#1016ptD.0
  # DEBUG thisD.59144 => D#64ptD.0
  # DEBUG thisD.59143 => D#64ptD.0
  if (prephitmp_320 < _454)
    goto <bb 16>;
  else
    goto <bb 14>;
;;    succ:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _456 = prephitmp_320 * 4;
  # PT = nonlocal escaped 
  _457 = _448 + _456;
  # DEBUG D#139ptD.0 => D#1016ptD.0
  # DEBUG __posD.68321 => _457
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG thisD.68320 => D#138ptD.0
  # DEBUG D#136ptD.0 => &D#138ptD.0->D.40238
  # DEBUG thisD.54143 => D#136ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG __firstD.54133 => _457
  # DEBUG __lastD.54134 => D#137ptD.0
  # DEBUG D.54135 => NULL
  # DEBUG D#134ptD.0 => _457
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # .MEM_664 = VDEF <.MEM_663>
  MEM[(intD.9 * *)this_23(D) + 168B] = _457;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_97 = PHI <.MEM_664(16), .MEM_686(14)>
  # DEBUG D#63ptD.0 => &D.42668
  # DEBUG thisD.59204 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42668
  # DEBUG thisD.68328 => &D.42667
  # DEBUG __sD.68329 => "buf_size"
  # DEBUG __aD.68330 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68340 => &D.42667
  # DEBUG D#296ptD.0 => &D.42667._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68343 => D#296ptD.0
  # DEBUG __datD.68342 => &D.42667.D.11539._M_local_bufD.11541
  # DEBUG __aD.68341 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_667 = VDEF <.MEM_97>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42667]._M_pD.11525 = &D.42667.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68339 => "buf_size"
  # DEBUG thisD.68333 => &D.42667
  # DEBUG __begD.68332 => "buf_size"
  # DEBUG __endD.68331 => &MEM[(voidD.45 *)"buf_size" + 8B]
  # DEBUG thisD.68337 => &D.42667
  # DEBUG __begD.68336 => "buf_size"
  # DEBUG __endD.68335 => &MEM[(voidD.45 *)"buf_size" + 8B]
  # DEBUG thisD.68344 => &D.42667
  # DEBUG __begD.68345 => "buf_size"
  # DEBUG __endD.68346 => &MEM[(voidD.45 *)"buf_size" + 8B]
  # DEBUG __ptrD.55982 => "buf_size"
  # DEBUG __firstD.68370 => "buf_size"
  # DEBUG __lastD.68369 => &MEM[(voidD.45 *)"buf_size" + 8B]
  # DEBUG D#316ptD.0 => &__firstD.68370
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68372 => "buf_size"
  # DEBUG __lastD.68371 => &MEM[(voidD.45 *)"buf_size" + 8B]
  # DEBUG __dnewD.68347 => 8
  # DEBUG D#1ptD.0 => &D.42667
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68350 => &D.42667.D.11539._M_local_bufD.11541
  # DEBUG __k1D.68349 => "buf_size"
  # DEBUG __k2D.68348 => &MEM[(voidD.45 *)"buf_size" + 8B]
  # DEBUG __dD.68353 => &D.42667.D.11539._M_local_bufD.11541
  # DEBUG __sD.68352 => "buf_size"
  # DEBUG __nD.68351 => 8
  # DEBUG __s1D.68356 => &D.42667.D.11539._M_local_bufD.11541
  # DEBUG __s2D.68355 => "buf_size"
  # DEBUG __nD.68354 => 8
  # .MEM_673 = VDEF <.MEM_667>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (&D.42667.D.11539._M_local_bufD.11541, "buf_size", 8);
  # DEBUG thisD.68360 => &D.42667
  # DEBUG __nD.68359 => 8
  # DEBUG D#9ptD.0 => &D.42667
  # DEBUG __lengthD.68362 => 8
  # DEBUG thisD.68361 => D#9ptD.0
  # .MEM_674 = VDEF <.MEM_673>
  MEM[(size_typeD.11502 *)&D.42667 + 8B] = 8;
  # DEBUG D#1ptD.0 => &D.42667
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.68364 => &MEM[(voidD.45 *)&D.42667 + 24B]
  # DEBUG __c2D.68363 => D#10ptD.0
  # .MEM_675 = VDEF <.MEM_674>
  MEM[(char_typeD.6629 &)&D.42667 + 24] = 0;
  # DEBUG D#1011ptD.0 => {CLOBBER}
  # DEBUG __dnewD.68347 => D#1011ptD.0
  [LP 11] # .MEM_50 = VDEF <.MEM_675>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _51 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_25(D), &D.42667);
;;    succ:       165 (EH,EXECUTABLE)
;;                18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_52 = VDEF <.MEM_50>
  this_23(D)->_buf_sizeD.39701 = _51;
  # DEBUG thisD.59207 => &D.42667
  # DEBUG thisD.59208 => &D.42667
  # DEBUG thisD.59217 => &D.42667
  # VUSE <.MEM_52>
  # PT = nonlocal escaped { D.42667 } (escaped)
  _54 = MEM[(charD.10 * *)&D.42667];
  # DEBUG D#1ptD.0 => &D.42667
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59218 => &D.42667
  if (&D.42667.D.11539._M_local_bufD.11541 != _54)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42667.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59210 => &D.42667
  # DEBUG __sizeD.59209 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42667
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42667
  # DEBUG D#185ptD.0 => &D.42667._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59213 => _54
  # DEBUG __aD.59211 => D#183ptD.0
  # DEBUG __nD.59212 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59216 => _54
  # DEBUG thisD.59214 => D#179ptD.0
  # DEBUG D.59215 => D#180ptD.0
  # .MEM_263 = VDEF <.MEM_52>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_54);
  # VUSE <.MEM_263>
  pretmp_321 = this_23(D)->_buf_sizeD.39701;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_210 = PHI <.MEM_52(18), .MEM_263(19)>
  # prephitmp_322 = PHI <_51(18), pretmp_321(19)>
  # DEBUG D#189ptD.0 => &D.42667._M_dataplusD.11519
  # DEBUG thisD.59219 => D#189ptD.0
  # DEBUG thisD.59220 => D#189ptD.0
  # DEBUG thisD.59221 => D#189ptD.0
  # .MEM_53 = VDEF <.MEM_210>
  D.42667 ={v} {CLOBBER};
  # DEBUG thisD.59205 => &D.42668
  # DEBUG thisD.59206 => &D.42668
  if (prephitmp_322 < 0)
    goto <bb 21>;
  else
    goto <bb 25>;
;;    succ:       21 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.42670
  # DEBUG thisD.59222 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42670
  # DEBUG thisD.68373 => &D.42669
  # DEBUG __sD.68374 => "vc_buf_size"
  # DEBUG __aD.68375 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68385 => &D.42669
  # DEBUG D#296ptD.0 => &D.42669._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68388 => D#296ptD.0
  # DEBUG __datD.68387 => &D.42669.D.11539._M_local_bufD.11541
  # DEBUG __aD.68386 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_677 = VDEF <.MEM_53>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42669]._M_pD.11525 = &D.42669.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68384 => "vc_buf_size"
  # DEBUG thisD.68378 => &D.42669
  # DEBUG __begD.68377 => "vc_buf_size"
  # DEBUG __endD.68376 => &MEM[(voidD.45 *)"vc_buf_size" + 11B]
  # DEBUG thisD.68382 => &D.42669
  # DEBUG __begD.68381 => "vc_buf_size"
  # DEBUG __endD.68380 => &MEM[(voidD.45 *)"vc_buf_size" + 11B]
  # DEBUG thisD.68389 => &D.42669
  # DEBUG __begD.68390 => "vc_buf_size"
  # DEBUG __endD.68391 => &MEM[(voidD.45 *)"vc_buf_size" + 11B]
  # DEBUG __ptrD.55982 => "vc_buf_size"
  # DEBUG __firstD.68415 => "vc_buf_size"
  # DEBUG __lastD.68414 => &MEM[(voidD.45 *)"vc_buf_size" + 11B]
  # DEBUG D#316ptD.0 => &__firstD.68415
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68417 => "vc_buf_size"
  # DEBUG __lastD.68416 => &MEM[(voidD.45 *)"vc_buf_size" + 11B]
  # DEBUG __dnewD.68392 => 11
  # DEBUG D#1ptD.0 => &D.42669
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68395 => &D.42669.D.11539._M_local_bufD.11541
  # DEBUG __k1D.68394 => "vc_buf_size"
  # DEBUG __k2D.68393 => &MEM[(voidD.45 *)"vc_buf_size" + 11B]
  # DEBUG __dD.68398 => &D.42669.D.11539._M_local_bufD.11541
  # DEBUG __sD.68397 => "vc_buf_size"
  # DEBUG __nD.68396 => 11
  # DEBUG __s1D.68401 => &D.42669.D.11539._M_local_bufD.11541
  # DEBUG __s2D.68400 => "vc_buf_size"
  # DEBUG __nD.68399 => 11
  # .MEM_683 = VDEF <.MEM_677>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (&D.42669.D.11539._M_local_bufD.11541, "vc_buf_size", 11);
  # DEBUG thisD.68405 => &D.42669
  # DEBUG __nD.68404 => 11
  # DEBUG D#9ptD.0 => &D.42669
  # DEBUG __lengthD.68407 => 11
  # DEBUG thisD.68406 => D#9ptD.0
  # .MEM_684 = VDEF <.MEM_683>
  MEM[(size_typeD.11502 *)&D.42669 + 8B] = 11;
  # DEBUG D#1ptD.0 => &D.42669
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.68409 => &MEM[(voidD.45 *)&D.42669 + 27B]
  # DEBUG __c2D.68408 => D#10ptD.0
  # .MEM_685 = VDEF <.MEM_684>
  MEM[(char_typeD.6629 &)&D.42669 + 27] = 0;
  # DEBUG D#1012ptD.0 => {CLOBBER}
  # DEBUG __dnewD.68392 => D#1012ptD.0
  [LP 13] # .MEM_57 = VDEF <.MEM_685>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _58 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_25(D), &D.42669);
;;    succ:       169 (EH,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
  _59 = num_private_bufs_34 * _58;
  # .MEM_60 = VDEF <.MEM_57>
  this_23(D)->_buf_sizeD.39701 = _59;
  # DEBUG thisD.59225 => &D.42669
  # DEBUG thisD.59226 => &D.42669
  # DEBUG thisD.59235 => &D.42669
  # VUSE <.MEM_60>
  # PT = nonlocal escaped { D.42669 } (escaped)
  _63 = MEM[(charD.10 * *)&D.42669];
  # DEBUG D#1ptD.0 => &D.42669
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59236 => &D.42669
  if (&D.42669.D.11539._M_local_bufD.11541 != _63)
    goto <bb 23>;
  else
    goto <bb 24>;
;;    succ:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                24 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42669.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59228 => &D.42669
  # DEBUG __sizeD.59227 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42669
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42669
  # DEBUG D#185ptD.0 => &D.42669._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59231 => _63
  # DEBUG __aD.59229 => D#183ptD.0
  # DEBUG __nD.59230 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59234 => _63
  # DEBUG thisD.59232 => D#179ptD.0
  # DEBUG D.59233 => D#180ptD.0
  # .MEM_268 = VDEF <.MEM_60>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_63);
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       22 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                23 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_211 = PHI <.MEM_60(22), .MEM_268(23)>
  # DEBUG D#189ptD.0 => &D.42669._M_dataplusD.11519
  # DEBUG thisD.59237 => D#189ptD.0
  # DEBUG thisD.59238 => D#189ptD.0
  # DEBUG thisD.59239 => D#189ptD.0
  # .MEM_62 = VDEF <.MEM_211>
  D.42669 ={v} {CLOBBER};
  # DEBUG thisD.59223 => &D.42670
  # DEBUG thisD.59224 => &D.42670
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       20 [73.0%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_6 = PHI <.MEM_53(20), .MEM_62(24)>
  # DEBUG D#63ptD.0 => &D.42673
  # DEBUG thisD.59240 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42673
  # DEBUG thisD.68418 => &D.42672
  # DEBUG __sD.68419 => "private_buf_size"
  # DEBUG __aD.68420 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68430 => &D.42672
  # DEBUG D#296ptD.0 => &D.42672._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68433 => D#296ptD.0
  # DEBUG __datD.68432 => &D.42672.D.11539._M_local_bufD.11541
  # DEBUG __aD.68431 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_687 = VDEF <.MEM_6>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42672]._M_pD.11525 = &D.42672.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68429 => "private_buf_size"
  # DEBUG thisD.68423 => &D.42672
  # DEBUG __begD.68422 => "private_buf_size"
  # DEBUG __endD.68421 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG thisD.68427 => &D.42672
  # DEBUG __begD.68426 => "private_buf_size"
  # DEBUG __endD.68425 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG thisD.68434 => &D.42672
  # DEBUG __begD.68435 => "private_buf_size"
  # DEBUG __endD.68436 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG __ptrD.55982 => "private_buf_size"
  # DEBUG __firstD.68460 => "private_buf_size"
  # DEBUG __lastD.68459 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG D#316ptD.0 => &__firstD.68460
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68462 => "private_buf_size"
  # DEBUG __lastD.68461 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # .MEM_688 = VDEF <.MEM_687>
  __dnewD.68437 = 16;
  [LP 37] # .MEM_689 = VDEF <.MEM_688>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _498 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42672, &__dnewD.68437, 0);
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 (EH,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 (EH,EXECUTABLE)
<L81>: [LP 37]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.42672
  # DEBUG __pD.68456 => _498
  # DEBUG thisD.68455 => D#7ptD.0
  # .MEM_690 = VDEF <.MEM_689>
  MEM[(charD.10 * *)&D.42672] = _498;
  # VUSE <.MEM_690>
  __dnew.49_499 = __dnewD.68437;
  # DEBUG D#8ptD.0 => &D.42672
  # DEBUG __capacityD.68458 => __dnew.49_499
  # DEBUG thisD.68457 => D#8ptD.0
  # .MEM_691 = VDEF <.MEM_690>
  MEM[(size_typeD.11502 *)&D.42672 + 16B] = __dnew.49_499;
  # DEBUG D#1ptD.0 => &D.42672
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68440 => _498
  # DEBUG __k1D.68439 => "private_buf_size"
  # DEBUG __k2D.68438 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG __dD.68443 => _498
  # DEBUG __sD.68442 => "private_buf_size"
  # DEBUG __nD.68441 => 16
  # DEBUG __s1D.68446 => _498
  # DEBUG __s2D.68445 => "private_buf_size"
  # DEBUG __nD.68444 => 16
  # .MEM_693 = VDEF <.MEM_691>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (_498, "private_buf_size", 16);
  # VUSE <.MEM_693>
  __dnew.49_502 = __dnewD.68437;
  # DEBUG thisD.68450 => &D.42672
  # DEBUG __nD.68449 => __dnew.49_502
  # DEBUG D#9ptD.0 => &D.42672
  # DEBUG __lengthD.68452 => __dnew.49_502
  # DEBUG thisD.68451 => D#9ptD.0
  # .MEM_694 = VDEF <.MEM_693>
  MEM[(size_typeD.11502 *)&D.42672 + 8B] = __dnew.49_502;
  # VUSE <.MEM_694>
  # PT = nonlocal escaped null { D.42672 } (escaped)
  _503 = MEM[(charD.10 * *)&D.42672];
  # DEBUG D#1ptD.0 => &D.42672
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42672 } (escaped)
  _504 = _503 + __dnew.49_502;
  # DEBUG __c1D.68454 => _504
  # DEBUG __c2D.68453 => D#10ptD.0
  # .MEM_695 = VDEF <.MEM_694>
  MEM[(char_typeD.6629 &)_504] = 0;
  # .MEM_696 = VDEF <.MEM_695>
  __dnewD.68437 ={v} {CLOBBER};
  [LP 38] # .MEM_68 = VDEF <.MEM_696>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  D.42671 = _ZNK13Configuration11GetIntArrayERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39534 (config_25(D), &D.42672); [return slot optimization]
;;    succ:       177 (EH,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _69 = &this_23(D)->_private_buf_sizeD.40241;
  [LP 16] # .MEM_70 = VDEF <.MEM_68>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEEaSERKS1_D.39860 (_69, &D.42671);
;;    succ:       173 (EH,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.59262 => &D.42671
  # DEBUG D#154ptD.0 => &D.42671.D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D.42671.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D.42671.D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D.42671.D.40238
  # DEBUG thisD.59263 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_70>
  # PT = nonlocal escaped 
  _72 = MEM[(struct _Vector_baseD.39702 *)&D.42671]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _72
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59266 => D#155ptD.0
  # DEBUG __pD.59265 => _72
  # DEBUG __nD.59264 => D#148ptD.0
  if (_72 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
;;    succ:       30 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       29 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59270 => _72
  # DEBUG __aD.59268 => D#144ptD.0
  # DEBUG __nD.59269 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59273 => _72
  # DEBUG thisD.59271 => D#140ptD.0
  # DEBUG D.59272 => D#141ptD.0
  # .MEM_278 = VDEF <.MEM_70>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_72);
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       29 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_212 = PHI <.MEM_70(29), .MEM_278(30)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59274 => D#147ptD.0
  # DEBUG thisD.59275 => D#147ptD.0
  # DEBUG thisD.59276 => D#147ptD.0
  # .MEM_71 = VDEF <.MEM_212>
  D.42671 ={v} {CLOBBER};
  # DEBUG thisD.59247 => &D.42672
  # DEBUG thisD.59248 => &D.42672
  # DEBUG thisD.59257 => &D.42672
  # VUSE <.MEM_71>
  # PT = nonlocal escaped null { D.42672 } (escaped)
  _74 = MEM[(charD.10 * *)&D.42672];
  # DEBUG D#1ptD.0 => &D.42672
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59258 => &D.42672
  if (&D.42672.D.11539._M_local_bufD.11541 != _74)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42672.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59250 => &D.42672
  # DEBUG __sizeD.59249 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42672
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42672
  # DEBUG D#185ptD.0 => &D.42672._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59253 => _74
  # DEBUG __aD.59251 => D#183ptD.0
  # DEBUG __nD.59252 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59256 => _74
  # DEBUG thisD.59254 => D#179ptD.0
  # DEBUG D.59255 => D#180ptD.0
  # .MEM_284 = VDEF <.MEM_71>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_74);
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       31 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_213 = PHI <.MEM_71(31), .MEM_284(32)>
  # DEBUG D#189ptD.0 => &D.42672._M_dataplusD.11519
  # DEBUG thisD.59259 => D#189ptD.0
  # DEBUG thisD.59260 => D#189ptD.0
  # DEBUG thisD.59261 => D#189ptD.0
  # .MEM_73 = VDEF <.MEM_213>
  D.42672 ={v} {CLOBBER};
  # DEBUG thisD.59245 => &D.42673
  # DEBUG thisD.59246 => &D.42673
  # DEBUG D#564ptD.0 => &this_23(D)->_private_buf_sizeD.40241
  # DEBUG thisD.59241 => D#564ptD.0
  # VUSE <.MEM_73>
  # PT = nonlocal escaped 
  _61 = MEM[(intD.9 * *)this_23(D) + 144B];
  # DEBUG D#78ptD.0 => D#564ptD.0
  # DEBUG thisD.53745 => D#78ptD.0
  # DEBUG thisD.53707 => NULL
  # DEBUG __iD.53706 => NULL
  # VUSE <.MEM_73>
  # PT = nonlocal escaped 
  _30 = MEM[(intD.9 * *)this_23(D) + 136B];
  # DEBUG D#79ptD.0 => D#564ptD.0
  # DEBUG thisD.53741 => D#79ptD.0
  # DEBUG thisD.53723 => NULL
  # DEBUG __iD.53722 => NULL
  # DEBUG __lhsD.59243 => NULL
  # DEBUG __rhsD.59242 => NULL
  # DEBUG thisD.53734 => NULL
  # DEBUG thisD.53732 => NULL
  if (_30 == _61)
    goto <bb 34>;
  else
    goto <bb 56>;
;;    succ:       34 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.42676
  # DEBUG thisD.59277 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42676
  # DEBUG thisD.68463 => &D.42675
  # DEBUG __sD.68464 => "private_buf_size"
  # DEBUG __aD.68465 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68475 => &D.42675
  # DEBUG D#296ptD.0 => &D.42675._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68478 => D#296ptD.0
  # DEBUG __datD.68477 => &D.42675.D.11539._M_local_bufD.11541
  # DEBUG __aD.68476 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_697 = VDEF <.MEM_73>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42675]._M_pD.11525 = &D.42675.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68474 => "private_buf_size"
  # DEBUG thisD.68468 => &D.42675
  # DEBUG __begD.68467 => "private_buf_size"
  # DEBUG __endD.68466 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG thisD.68472 => &D.42675
  # DEBUG __begD.68471 => "private_buf_size"
  # DEBUG __endD.68470 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG thisD.68479 => &D.42675
  # DEBUG __begD.68480 => "private_buf_size"
  # DEBUG __endD.68481 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG __ptrD.55982 => "private_buf_size"
  # DEBUG __firstD.68505 => "private_buf_size"
  # DEBUG __lastD.68504 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG D#316ptD.0 => &__firstD.68505
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68507 => "private_buf_size"
  # DEBUG __lastD.68506 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # .MEM_698 = VDEF <.MEM_697>
  __dnewD.68482 = 16;
  [LP 39] # .MEM_699 = VDEF <.MEM_698>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _514 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42675, &__dnewD.68482, 0);
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 (EH,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 (EH,EXECUTABLE)
<L83>: [LP 39]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.42675
  # DEBUG __pD.68501 => _514
  # DEBUG thisD.68500 => D#7ptD.0
  # .MEM_700 = VDEF <.MEM_699>
  MEM[(charD.10 * *)&D.42675] = _514;
  # VUSE <.MEM_700>
  __dnew.49_515 = __dnewD.68482;
  # DEBUG D#8ptD.0 => &D.42675
  # DEBUG __capacityD.68503 => __dnew.49_515
  # DEBUG thisD.68502 => D#8ptD.0
  # .MEM_701 = VDEF <.MEM_700>
  MEM[(size_typeD.11502 *)&D.42675 + 16B] = __dnew.49_515;
  # DEBUG D#1ptD.0 => &D.42675
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68485 => _514
  # DEBUG __k1D.68484 => "private_buf_size"
  # DEBUG __k2D.68483 => &MEM[(voidD.45 *)"private_buf_size" + 16B]
  # DEBUG __dD.68488 => _514
  # DEBUG __sD.68487 => "private_buf_size"
  # DEBUG __nD.68486 => 16
  # DEBUG __s1D.68491 => _514
  # DEBUG __s2D.68490 => "private_buf_size"
  # DEBUG __nD.68489 => 16
  # .MEM_703 = VDEF <.MEM_701>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (_514, "private_buf_size", 16);
  # VUSE <.MEM_703>
  __dnew.49_518 = __dnewD.68482;
  # DEBUG thisD.68495 => &D.42675
  # DEBUG __nD.68494 => __dnew.49_518
  # DEBUG D#9ptD.0 => &D.42675
  # DEBUG __lengthD.68497 => __dnew.49_518
  # DEBUG thisD.68496 => D#9ptD.0
  # .MEM_704 = VDEF <.MEM_703>
  MEM[(size_typeD.11502 *)&D.42675 + 8B] = __dnew.49_518;
  # VUSE <.MEM_704>
  # PT = nonlocal escaped null { D.42675 } (escaped)
  _519 = MEM[(charD.10 * *)&D.42675];
  # DEBUG D#1ptD.0 => &D.42675
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42675 } (escaped)
  _520 = _519 + __dnew.49_518;
  # DEBUG __c1D.68499 => _520
  # DEBUG __c2D.68498 => D#10ptD.0
  # .MEM_705 = VDEF <.MEM_704>
  MEM[(char_typeD.6629 &)_520] = 0;
  # .MEM_706 = VDEF <.MEM_705>
  __dnewD.68482 ={v} {CLOBBER};
  [LP 18] # .MEM_76 = VDEF <.MEM_706>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _77 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_25(D), &D.42675);
;;    succ:       182 (EH,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_78 = VDEF <.MEM_76>
  bsD.42674 = _77;
  # DEBUG thisD.59280 => &D.42675
  # DEBUG thisD.59281 => &D.42675
  # DEBUG thisD.59290 => &D.42675
  # VUSE <.MEM_78>
  # PT = nonlocal escaped null { D.42675 } (escaped)
  _81 = MEM[(charD.10 * *)&D.42675];
  # DEBUG D#1ptD.0 => &D.42675
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59291 => &D.42675
  if (&D.42675.D.11539._M_local_bufD.11541 != _81)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42675.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59283 => &D.42675
  # DEBUG __sizeD.59282 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42675
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42675
  # DEBUG D#185ptD.0 => &D.42675._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59286 => _81
  # DEBUG __aD.59284 => D#183ptD.0
  # DEBUG __nD.59285 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59289 => _81
  # DEBUG thisD.59287 => D#179ptD.0
  # DEBUG D.59288 => D#180ptD.0
  # .MEM_289 = VDEF <.MEM_78>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_81);
  # VUSE <.MEM_289>
  pretmp_459 = bsD.42674;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_214 = PHI <.MEM_78(37), .MEM_289(38)>
  # prephitmp_511 = PHI <_77(37), pretmp_459(38)>
  # DEBUG D#189ptD.0 => &D.42675._M_dataplusD.11519
  # DEBUG thisD.59292 => D#189ptD.0
  # DEBUG thisD.59293 => D#189ptD.0
  # DEBUG thisD.59294 => D#189ptD.0
  # .MEM_80 = VDEF <.MEM_214>
  D.42675 ={v} {CLOBBER};
  # DEBUG thisD.59278 => &D.42676
  # DEBUG thisD.59279 => &D.42676
  if (prephitmp_511 < 0)
    goto <bb 40>;
  else
    goto <bb 48>;
;;    succ:       40 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_80>
  _83 = this_23(D)->_buf_sizeD.39701;
  _84 = _83 / num_private_bufs_1;
  # .MEM_85 = VDEF <.MEM_80>
  D.42677 = _84;
  # DEBUG thisD.68508 => _69
  # DEBUG __xD.68509 => &D.42677
  # VUSE <.MEM_85>
  # PT = nonlocal escaped 
  _521 = MEM[(struct vectorD.39532 *)this_23(D) + 136B].D.40238._M_implD.39729._M_finishD.39732;
  # VUSE <.MEM_85>
  # PT = nonlocal escaped 
  _522 = MEM[(struct vectorD.39532 *)this_23(D) + 136B].D.40238._M_implD.39729._M_end_of_storageD.39733;
  if (_521 != _522)
    goto <bb 41>;
  else
    goto <bb 44>;
;;    succ:       41 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#420ptD.0 => &_69->D.40238._M_implD.39729
  # DEBUG D#82ptD.0 => D#420ptD.0
  # DEBUG __pD.68512 => _521
  # DEBUG __argD.68511 => &D.42677
  # DEBUG __aD.68510 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#82ptD.0
  # DEBUG D#80ptD.0 => D#81ptD.0
  # DEBUG __pD.68515 => _521
  # DEBUG __valD.68514 => &D.42677
  # DEBUG thisD.68513 => D#80ptD.0
  # DEBUG D#11ptD.0 => 4
  # DEBUG __pD.53755 => _521
  # DEBUG D.53756 => D#11ptD.0
  if (_521 != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;
;;    succ:       42 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       41 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_709 = VDEF <.MEM_85>
  *_521 = _84;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       41 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_584 = PHI <.MEM_85(41), .MEM_709(42)>
  # PT = nonlocal escaped 
  _524 = _521 + 4;
  # .MEM_710 = VDEF <.MEM_584>
  MEM[(struct vectorD.39532 *)this_23(D) + 136B].D.40238._M_implD.39729._M_finishD.39732 = _524;
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       40 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.57145 => _69
  # DEBUG D#76ptD.0 => &_69->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.57147 => NULL
  # DEBUG __iD.57146 => D#76ptD.0
  # .MEM_707 = VDEF <.MEM_85>
  MEM[(struct __normal_iteratorD.39807 *)&D.68516] = _521;
  [LP 40] # .MEM_708 = VDEF <.MEM_707>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKiD.40166 (_69, D.68516, &D.42677);
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 (EH,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 (EH,EXECUTABLE)
<L84>: [LP 40]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_708>
  pretmp_47 = MEM[(intD.9 * const &)this_23(D) + 144];
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_583 = PHI <.MEM_708(46), .MEM_710(43)>
  # prephitmp_679 = PHI <pretmp_47(46), _524(43)>
  # .MEM_87 = VDEF <.MEM_583>
  D.42677 ={v} {CLOBBER};
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       39 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.68517 => _69
  # DEBUG __xD.68518 => &bsD.42674
  # VUSE <.MEM_80>
  # PT = nonlocal escaped 
  _86 = MEM[(struct vectorD.39532 *)this_23(D) + 136B].D.40238._M_implD.39729._M_finishD.39732;
  # VUSE <.MEM_80>
  # PT = nonlocal escaped 
  _525 = MEM[(struct vectorD.39532 *)this_23(D) + 136B].D.40238._M_implD.39729._M_end_of_storageD.39733;
  if (_86 != _525)
    goto <bb 49>;
  else
    goto <bb 52>;
;;    succ:       49 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#420ptD.0 => &_69->D.40238._M_implD.39729
  # DEBUG D#82ptD.0 => D#420ptD.0
  # DEBUG __pD.68521 => _86
  # DEBUG __argD.68520 => &bsD.42674
  # DEBUG __aD.68519 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#82ptD.0
  # DEBUG D#80ptD.0 => D#81ptD.0
  # DEBUG __pD.68524 => _86
  # DEBUG __valD.68523 => &bsD.42674
  # DEBUG thisD.68522 => D#80ptD.0
  # DEBUG D#11ptD.0 => 4
  # DEBUG __pD.53755 => _86
  # DEBUG D.53756 => D#11ptD.0
  if (_86 != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       49 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_713 = VDEF <.MEM_80>
  *_86 = prephitmp_511;
;;    succ:       51 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       49 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                50 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_80(49), .MEM_713(50)>
  # PT = nonlocal escaped 
  _527 = _86 + 4;
  # .MEM_714 = VDEF <.MEM_67>
  MEM[(struct vectorD.39532 *)this_23(D) + 136B].D.40238._M_implD.39729._M_finishD.39732 = _527;
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       48 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.57145 => _69
  # DEBUG D#76ptD.0 => &_69->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.57147 => NULL
  # DEBUG __iD.57146 => D#76ptD.0
  # .MEM_711 = VDEF <.MEM_80>
  MEM[(struct __normal_iteratorD.39807 *)&D.68525] = _86;
  [LP 41] # .MEM_712 = VDEF <.MEM_711>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKiD.40166 (_69, D.68525, &bsD.42674);
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 (EH,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       52 (EH,EXECUTABLE)
<L85>: [LP 41]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_712>
  pretmp_752 = MEM[(intD.9 * const &)this_23(D) + 144];
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_7 = PHI <.MEM_87(47), .MEM_712(54), .MEM_714(51)>
  # prephitmp_509 = PHI <prephitmp_679(47), pretmp_752(54), _527(51)>
  # .MEM_90 = VDEF <.MEM_7>
  bsD.42674 ={v} {CLOBBER};
  # VUSE <.MEM_90>
  pretmp_308 = MEM[(intD.9 * *)this_23(D) + 136B];
;;    succ:       56 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       33 [85.0%]  (FALSE_VALUE,EXECUTABLE)
;;                55 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_8 = PHI <.MEM_73(33), .MEM_90(55)>
  # PT = nonlocal escaped 
  # prephitmp_307 = PHI <_61(33), prephitmp_509(55)>
  # PT = nonlocal escaped 
  # prephitmp_300 = PHI <_30(33), pretmp_308(55)>
  # DEBUG D#565ptD.0 => &this_23(D)->_private_buf_sizeD.40241
  # DEBUG thisD.59295 => D#565ptD.0
  # DEBUG thisD.59296 => D#565ptD.0
  # DEBUG D#76ptD.0 => &D#565ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59298 => NULL
  # DEBUG __iD.59297 => D#76ptD.0
  # DEBUG thisD.59300 => NULL
  # DEBUG __nD.59299 => 1
  # DEBUG thisD.53682 => NULL
  # DEBUG __iD.53681 => NULL
  # DEBUG thisD.53677 => NULL
  # VUSE <.MEM_8>
  _95 = MEM[(intD.9 &)prephitmp_307 + 18446744073709551612];
  # DEBUG thisD.68526 => _69
  # DEBUG __new_sizeD.68527 => D#1013ptD.0
  # .MEM_715 = VDEF <.MEM_8>
  __xD.68528 = _95;
  # DEBUG __xD.68528 => __xD.68528
  # DEBUG D#64ptD.0 => _69
  # DEBUG D#64ptD.0 => _69
  # DEBUG thisD.68535 => D#64ptD.0
  # DEBUG thisD.68536 => D#64ptD.0
  # RANGE ~[0, 0]
  _529 = (long intD.12) prephitmp_307;
  _530 = (long intD.12) prephitmp_300;
  _531 = _529 - _530;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _532 = _531 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _533 = (size_typeD.39814) _532;
  if (prephitmp_320 > _533)
    goto <bb 57>;
  else
    goto <bb 60>;
;;    succ:       57 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => _69
  # DEBUG D#64ptD.0 => _69
  # DEBUG thisD.59139 => D#64ptD.0
  # DEBUG thisD.59138 => D#64ptD.0
  # RANGE [1, 18446744073709551615]
  _534 = prephitmp_320 - _533;
  # DEBUG thisD.59132 => _69
  # DEBUG D#76ptD.0 => &_69->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59134 => NULL
  # DEBUG __iD.59133 => D#76ptD.0
  # DEBUG thisD.68534 => _69
  # .MEM_717 = VDEF <.MEM_715>
  MEM[(struct __normal_iteratorD.39807 *)&__positionD.68533] = prephitmp_307;
  # DEBUG __nD.68532 => _534
  # DEBUG __xD.68531 => &__xD.68528
  [LP 42] # .MEM_718 = VDEF <.MEM_717>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.40161 (_69, __positionD.68533, _534, &__xD.68528);
  goto <bb 59>;
;;    succ:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 (EH,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 57, next block 59, flags: (NEW)
;;    pred:       57 (EH,EXECUTABLE)
<L86>: [LP 42]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 58, next block 60, flags: (NEW)
;;    pred:       57 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_676 = PHI <.MEM_718(57), .MEM_715(60)>
  goto <bb 62>;
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       56 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => _69
  # DEBUG D#64ptD.0 => _69
  # DEBUG thisD.59144 => D#64ptD.0
  # DEBUG thisD.59143 => D#64ptD.0
  if (prephitmp_320 < _533)
    goto <bb 61>;
  else
    goto <bb 59>;
;;    succ:       61 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       60 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _535 = prephitmp_320 * 4;
  # PT = nonlocal escaped 
  _536 = prephitmp_300 + _535;
  # DEBUG D#139ptD.0 => _69
  # DEBUG __posD.68530 => _536
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG thisD.68529 => D#138ptD.0
  # DEBUG D#136ptD.0 => &D#138ptD.0->D.40238
  # DEBUG thisD.54143 => D#136ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG __firstD.54133 => _536
  # DEBUG __lastD.54134 => D#137ptD.0
  # DEBUG D.54135 => NULL
  # DEBUG D#134ptD.0 => _536
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # .MEM_716 = VDEF <.MEM_715>
  MEM[(intD.9 * *)this_23(D) + 144B] = _536;
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_493 = PHI <.MEM_716(61), .MEM_676(59)>
  # DEBUG D#63ptD.0 => &D.42680
  # DEBUG thisD.59302 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42680
  # DEBUG thisD.68537 => &D.42679
  # DEBUG __sD.68538 => "private_buf_start_vc"
  # DEBUG __aD.68539 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68549 => &D.42679
  # DEBUG D#296ptD.0 => &D.42679._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68552 => D#296ptD.0
  # DEBUG __datD.68551 => &D.42679.D.11539._M_local_bufD.11541
  # DEBUG __aD.68550 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_719 = VDEF <.MEM_493>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42679]._M_pD.11525 = &D.42679.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68548 => "private_buf_start_vc"
  # DEBUG thisD.68542 => &D.42679
  # DEBUG __begD.68541 => "private_buf_start_vc"
  # DEBUG __endD.68540 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG thisD.68546 => &D.42679
  # DEBUG __begD.68545 => "private_buf_start_vc"
  # DEBUG __endD.68544 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG thisD.68553 => &D.42679
  # DEBUG __begD.68554 => "private_buf_start_vc"
  # DEBUG __endD.68555 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG __ptrD.55982 => "private_buf_start_vc"
  # DEBUG __firstD.68579 => "private_buf_start_vc"
  # DEBUG __lastD.68578 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG D#316ptD.0 => &__firstD.68579
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68581 => "private_buf_start_vc"
  # DEBUG __lastD.68580 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # .MEM_720 = VDEF <.MEM_719>
  __dnewD.68556 = 20;
  [LP 43] # .MEM_721 = VDEF <.MEM_720>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _545 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42679, &__dnewD.68556, 0);
  goto <bb 64>;
;;    succ:       64 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 (EH,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 62, next block 64, flags: (NEW)
;;    pred:       62 (EH,EXECUTABLE)
<L87>: [LP 43]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       62 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.42679
  # DEBUG __pD.68575 => _545
  # DEBUG thisD.68574 => D#7ptD.0
  # .MEM_722 = VDEF <.MEM_721>
  MEM[(charD.10 * *)&D.42679] = _545;
  # VUSE <.MEM_722>
  __dnew.49_546 = __dnewD.68556;
  # DEBUG D#8ptD.0 => &D.42679
  # DEBUG __capacityD.68577 => __dnew.49_546
  # DEBUG thisD.68576 => D#8ptD.0
  # .MEM_723 = VDEF <.MEM_722>
  MEM[(size_typeD.11502 *)&D.42679 + 16B] = __dnew.49_546;
  # DEBUG D#1ptD.0 => &D.42679
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68559 => _545
  # DEBUG __k1D.68558 => "private_buf_start_vc"
  # DEBUG __k2D.68557 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG __dD.68562 => _545
  # DEBUG __sD.68561 => "private_buf_start_vc"
  # DEBUG __nD.68560 => 20
  # DEBUG __s1D.68565 => _545
  # DEBUG __s2D.68564 => "private_buf_start_vc"
  # DEBUG __nD.68563 => 20
  # .MEM_725 = VDEF <.MEM_723>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (_545, "private_buf_start_vc", 20);
  # VUSE <.MEM_725>
  __dnew.49_549 = __dnewD.68556;
  # DEBUG thisD.68569 => &D.42679
  # DEBUG __nD.68568 => __dnew.49_549
  # DEBUG D#9ptD.0 => &D.42679
  # DEBUG __lengthD.68571 => __dnew.49_549
  # DEBUG thisD.68570 => D#9ptD.0
  # .MEM_726 = VDEF <.MEM_725>
  MEM[(size_typeD.11502 *)&D.42679 + 8B] = __dnew.49_549;
  # VUSE <.MEM_726>
  # PT = nonlocal escaped null { D.42679 } (escaped)
  _550 = MEM[(charD.10 * *)&D.42679];
  # DEBUG D#1ptD.0 => &D.42679
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42679 } (escaped)
  _551 = _550 + __dnew.49_549;
  # DEBUG __c1D.68573 => _551
  # DEBUG __c2D.68572 => D#10ptD.0
  # .MEM_727 = VDEF <.MEM_726>
  MEM[(char_typeD.6629 &)_551] = 0;
  # .MEM_728 = VDEF <.MEM_727>
  __dnewD.68556 ={v} {CLOBBER};
  [LP 22] # .MEM_98 = VDEF <.MEM_728>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  start_vcD.42661 = _ZNK13Configuration11GetIntArrayERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39534 (config_25(D), &D.42679); [return slot optimization]
;;    succ:       186 (EH,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.59309 => &D.42679
  # DEBUG thisD.59310 => &D.42679
  # DEBUG thisD.59319 => &D.42679
  # VUSE <.MEM_98>
  # PT = nonlocal escaped null { D.42679 } (escaped)
  _100 = MEM[(charD.10 * *)&D.42679];
  # DEBUG D#1ptD.0 => &D.42679
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59320 => &D.42679
  if (&D.42679.D.11539._M_local_bufD.11541 != _100)
    goto <bb 66>;
  else
    goto <bb 67>;
;;    succ:       66 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                67 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       65 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42679.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59312 => &D.42679
  # DEBUG __sizeD.59311 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42679
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42679
  # DEBUG D#185ptD.0 => &D.42679._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59315 => _100
  # DEBUG __aD.59313 => D#183ptD.0
  # DEBUG __nD.59314 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59318 => _100
  # DEBUG thisD.59316 => D#179ptD.0
  # DEBUG D.59317 => D#180ptD.0
  # .MEM_299 = VDEF <.MEM_98>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_100);
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_215 = PHI <.MEM_98(65), .MEM_299(66)>
  # DEBUG D#189ptD.0 => &D.42679._M_dataplusD.11519
  # DEBUG thisD.59321 => D#189ptD.0
  # DEBUG thisD.59322 => D#189ptD.0
  # DEBUG thisD.59323 => D#189ptD.0
  # .MEM_99 = VDEF <.MEM_215>
  D.42679 ={v} {CLOBBER};
  # DEBUG thisD.59307 => &D.42680
  # DEBUG thisD.59308 => &D.42680
  # DEBUG thisD.59303 => &start_vcD.42661
  # VUSE <.MEM_99>
  # PT = nonlocal escaped 
  _164 = MEM[(intD.9 * *)&start_vcD.42661 + 8B];
  # DEBUG D#78ptD.0 => &start_vcD.42661
  # DEBUG thisD.53745 => D#78ptD.0
  # DEBUG thisD.53707 => NULL
  # DEBUG __iD.53706 => NULL
  # VUSE <.MEM_99>
  # PT = nonlocal escaped 
  _161 = MEM[(intD.9 * *)&start_vcD.42661];
  # DEBUG D#79ptD.0 => &start_vcD.42661
  # DEBUG thisD.53741 => D#79ptD.0
  # DEBUG thisD.53723 => NULL
  # DEBUG __iD.53722 => NULL
  # DEBUG __lhsD.59305 => NULL
  # DEBUG __rhsD.59304 => NULL
  # DEBUG thisD.53734 => NULL
  # DEBUG thisD.53732 => NULL
  if (_161 == _164)
    goto <bb 68>;
  else
    goto <bb 92>;
;;    succ:       68 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                92 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       67 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.42683
  # DEBUG thisD.59324 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42683
  # DEBUG thisD.68582 => &D.42682
  # DEBUG __sD.68583 => "private_buf_start_vc"
  # DEBUG __aD.68584 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68594 => &D.42682
  # DEBUG D#296ptD.0 => &D.42682._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68597 => D#296ptD.0
  # DEBUG __datD.68596 => &D.42682.D.11539._M_local_bufD.11541
  # DEBUG __aD.68595 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_729 = VDEF <.MEM_99>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42682]._M_pD.11525 = &D.42682.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68593 => "private_buf_start_vc"
  # DEBUG thisD.68587 => &D.42682
  # DEBUG __begD.68586 => "private_buf_start_vc"
  # DEBUG __endD.68585 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG thisD.68591 => &D.42682
  # DEBUG __begD.68590 => "private_buf_start_vc"
  # DEBUG __endD.68589 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG thisD.68598 => &D.42682
  # DEBUG __begD.68599 => "private_buf_start_vc"
  # DEBUG __endD.68600 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG __ptrD.55982 => "private_buf_start_vc"
  # DEBUG __firstD.68624 => "private_buf_start_vc"
  # DEBUG __lastD.68623 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG D#316ptD.0 => &__firstD.68624
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68626 => "private_buf_start_vc"
  # DEBUG __lastD.68625 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # .MEM_730 = VDEF <.MEM_729>
  __dnewD.68601 = 20;
  [LP 44] # .MEM_731 = VDEF <.MEM_730>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _561 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42682, &__dnewD.68601, 0);
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                207 (EH,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.42682
  # DEBUG __pD.68620 => _561
  # DEBUG thisD.68619 => D#7ptD.0
  # .MEM_732 = VDEF <.MEM_731>
  MEM[(charD.10 * *)&D.42682] = _561;
  # VUSE <.MEM_732>
  __dnew.49_562 = __dnewD.68601;
  # DEBUG D#8ptD.0 => &D.42682
  # DEBUG __capacityD.68622 => __dnew.49_562
  # DEBUG thisD.68621 => D#8ptD.0
  # .MEM_733 = VDEF <.MEM_732>
  MEM[(size_typeD.11502 *)&D.42682 + 16B] = __dnew.49_562;
  # DEBUG D#1ptD.0 => &D.42682
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68604 => _561
  # DEBUG __k1D.68603 => "private_buf_start_vc"
  # DEBUG __k2D.68602 => &MEM[(voidD.45 *)"private_buf_start_vc" + 20B]
  # DEBUG __dD.68607 => _561
  # DEBUG __sD.68606 => "private_buf_start_vc"
  # DEBUG __nD.68605 => 20
  # DEBUG __s1D.68610 => _561
  # DEBUG __s2D.68609 => "private_buf_start_vc"
  # DEBUG __nD.68608 => 20
  # .MEM_735 = VDEF <.MEM_733>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (_561, "private_buf_start_vc", 20);
  # VUSE <.MEM_735>
  __dnew.49_565 = __dnewD.68601;
  # DEBUG thisD.68614 => &D.42682
  # DEBUG __nD.68613 => __dnew.49_565
  # DEBUG D#9ptD.0 => &D.42682
  # DEBUG __lengthD.68616 => __dnew.49_565
  # DEBUG thisD.68615 => D#9ptD.0
  # .MEM_736 = VDEF <.MEM_735>
  MEM[(size_typeD.11502 *)&D.42682 + 8B] = __dnew.49_565;
  # VUSE <.MEM_736>
  # PT = nonlocal escaped null { D.42682 } (escaped)
  _566 = MEM[(charD.10 * *)&D.42682];
  # DEBUG D#1ptD.0 => &D.42682
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42682 } (escaped)
  _567 = _566 + __dnew.49_565;
  # DEBUG __c1D.68618 => _567
  # DEBUG __c2D.68617 => D#10ptD.0
  # .MEM_737 = VDEF <.MEM_736>
  MEM[(char_typeD.6629 &)_567] = 0;
  # .MEM_738 = VDEF <.MEM_737>
  __dnewD.68601 ={v} {CLOBBER};
  [LP 26] # .MEM_103 = VDEF <.MEM_738>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _104 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_25(D), &D.42682);
;;    succ:       190 (EH,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_105 = VDEF <.MEM_103>
  svD.42681 = _104;
  # DEBUG thisD.59327 => &D.42682
  # DEBUG thisD.59328 => &D.42682
  # DEBUG thisD.59337 => &D.42682
  # VUSE <.MEM_105>
  # PT = nonlocal escaped null { D.42682 } (escaped)
  _107 = MEM[(charD.10 * *)&D.42682];
  # DEBUG D#1ptD.0 => &D.42682
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59338 => &D.42682
  if (&D.42682.D.11539._M_local_bufD.11541 != _107)
    goto <bb 71>;
  else
    goto <bb 72>;
;;    succ:       71 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 71, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       70 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42682.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59330 => &D.42682
  # DEBUG __sizeD.59329 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42682
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42682
  # DEBUG D#185ptD.0 => &D.42682._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59333 => _107
  # DEBUG __aD.59331 => D#183ptD.0
  # DEBUG __nD.59332 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59336 => _107
  # DEBUG thisD.59334 => D#179ptD.0
  # DEBUG D.59335 => D#180ptD.0
  # .MEM_304 = VDEF <.MEM_105>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_107);
  # VUSE <.MEM_304>
  pretmp_4 = svD.42681;
;;    succ:       72 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       70 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                71 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_216 = PHI <.MEM_105(70), .MEM_304(71)>
  # prephitmp_15 = PHI <_104(70), pretmp_4(71)>
  # DEBUG D#189ptD.0 => &D.42682._M_dataplusD.11519
  # DEBUG thisD.59339 => D#189ptD.0
  # DEBUG thisD.59340 => D#189ptD.0
  # DEBUG thisD.59341 => D#189ptD.0
  # .MEM_106 = VDEF <.MEM_216>
  D.42682 ={v} {CLOBBER};
  # DEBUG thisD.59325 => &D.42683
  # DEBUG thisD.59326 => &D.42683
  if (prephitmp_15 < 0)
    goto <bb 73>;
  else
    goto <bb 85>;
;;    succ:       73 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                85 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       72 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.68627 => &start_vcD.42661
  # DEBUG __new_sizeD.68628 => D#1013ptD.0
  # .MEM_739 = VDEF <.MEM_106>
  __xD.68629 = 0;
  # DEBUG __xD.68629 => __xD.68629
  # VUSE <.MEM_739>
  # PT = nonlocal escaped 
  _568 = MEM[(intD.9 * *)&start_vcD.42661];
  # DEBUG D#64ptD.0 => &start_vcD.42661
  # VUSE <.MEM_739>
  # PT = nonlocal escaped 
  _569 = MEM[(intD.9 * *)&start_vcD.42661 + 8B];
  # DEBUG D#64ptD.0 => &start_vcD.42661
  # DEBUG thisD.68636 => D#64ptD.0
  # DEBUG thisD.68637 => D#64ptD.0
  _570 = (long intD.12) _569;
  _571 = (long intD.12) _568;
  _572 = _570 - _571;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _573 = _572 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _574 = (size_typeD.39814) _573;
  if (prephitmp_320 > _574)
    goto <bb 74>;
  else
    goto <bb 77>;
;;    succ:       74 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 73, next block 75, flags: (NEW, REACHABLE)
;;    pred:       73 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => &start_vcD.42661
  # DEBUG D#64ptD.0 => &start_vcD.42661
  # DEBUG thisD.59139 => D#64ptD.0
  # DEBUG thisD.59138 => D#64ptD.0
  # RANGE [1, 18446744073709551615]
  _575 = prephitmp_320 - _574;
  # DEBUG thisD.59132 => &start_vcD.42661
  # DEBUG D#76ptD.0 => &start_vcD.42661.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59134 => NULL
  # DEBUG __iD.59133 => D#76ptD.0
  # DEBUG thisD.68635 => &start_vcD.42661
  # .MEM_741 = VDEF <.MEM_739>
  MEM[(struct __normal_iteratorD.39807 *)&__positionD.68634] = _569;
  # DEBUG __nD.68633 => _575
  # DEBUG __xD.68632 => &__xD.68629
  [LP 45] # .MEM_742 = VDEF <.MEM_741>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.40161 (&start_vcD.42661, __positionD.68634, _575, &__xD.68629);
  goto <bb 76>;
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 (EH,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW)
;;    pred:       74 (EH,EXECUTABLE)
<L89>: [LP 45]
  goto <bb 208> (<L73>);
;;    succ:       208 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 75, next block 77, flags: (NEW)
;;    pred:       74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                77 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_662 = PHI <.MEM_742(74), .MEM_739(77)>
  goto <bb 79>;
;;    succ:       79 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       73 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => &start_vcD.42661
  # DEBUG D#64ptD.0 => &start_vcD.42661
  # DEBUG thisD.59144 => D#64ptD.0
  # DEBUG thisD.59143 => D#64ptD.0
  if (prephitmp_320 < _574)
    goto <bb 78>;
  else
    goto <bb 76>;
;;    succ:       78 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                76 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 77, next block 79, flags: (NEW, REACHABLE)
;;    pred:       77 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _576 = prephitmp_320 * 4;
  # PT = nonlocal escaped 
  _577 = _568 + _576;
  # DEBUG D#139ptD.0 => &start_vcD.42661
  # DEBUG __posD.68631 => _577
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG thisD.68630 => D#138ptD.0
  # DEBUG D#136ptD.0 => &D#138ptD.0->D.40238
  # DEBUG thisD.54143 => D#136ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG __firstD.54133 => _577
  # DEBUG __lastD.54134 => D#137ptD.0
  # DEBUG D.54135 => NULL
  # DEBUG D#134ptD.0 => _577
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # .MEM_740 = VDEF <.MEM_739>
  MEM[(intD.9 * *)&start_vcD.42661 + 8B] = _577;
;;    succ:       79 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       76 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                78 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_599 = PHI <.MEM_662(76), .MEM_740(78)>
  # DEBUG iD.42684 => 0
  if (num_private_bufs_1 <= 0)
    goto <bb 80>;
  else
    goto <bb 81>;
;;    succ:       80 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                81 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 80, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 79, next block 81, flags: (NEW)
;;    pred:       79 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                89 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_652 = PHI <.MEM_599(79), .MEM_487(83), .MEM_744(89)>
  goto <bb 91>;
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 80, next block 82, flags: (NEW)
;;    pred:       79 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_599>
  # PT = nonlocal escaped 
  pretmp_75 = MEM[(intD.9 * *)&start_vcD.42661];
;;    succ:       82 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 82, loop depth 1, count 0, freq 8, maybe hot
;;    prev block 81, next block 83, flags: (NEW, REACHABLE)
;;    pred:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                84 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # i_657 = PHI <0(81), i_115(84)>
  # .MEM_513 = PHI <.MEM_599(81), .MEM_114(84)>
  # DEBUG iD.42684 => i_657
  # RANGE [0, 2147483646] NONZERO 2147483647
  _110 = (long unsigned intD.14) i_657;
  # DEBUG D#43ptD.0 => &start_vcD.42661
  # DEBUG __nD.59343 => _110
  # DEBUG thisD.59344 => D#43ptD.0
  # RANGE [0, 8589934584] NONZERO 8589934588
  _158 = _110 * 4;
  # PT = nonlocal escaped 
  _153 = pretmp_75 + _158;
  _112 = num_private_bufs_34 * i_657;
  _113 = _112 / num_private_bufs_1;
  # .MEM_114 = VDEF <.MEM_513>
  *_153 = _113;
  # RANGE [1, 2147483647] NONZERO 2147483647
  i_115 = i_657 + 1;
  # DEBUG iD.42684 => i_115
  # DEBUG iD.42684 => i_115
  if (num_private_bufs_1 <= i_115)
    goto <bb 83>;
  else
    goto <bb 84>;
;;    succ:       83 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                84 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 83, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 82, next block 84, flags: (NEW)
;;    pred:       82 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_487 = PHI <.MEM_114(82)>
  goto <bb 80>;
;;    succ:       80 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 84, loop depth 1, count 0, freq 7, maybe hot
;;    prev block 83, next block 85, flags: (NEW)
;;    pred:       82 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 82>;
;;    succ:       82 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 85, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 84, next block 86, flags: (NEW, REACHABLE)
;;    pred:       72 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.68638 => &start_vcD.42661
  # DEBUG __xD.68639 => &svD.42681
  # VUSE <.MEM_106>
  # PT = nonlocal escaped 
  _109 = start_vcD.42661.D.40238._M_implD.39729._M_finishD.39732;
  # VUSE <.MEM_106>
  # PT = nonlocal escaped 
  _578 = start_vcD.42661.D.40238._M_implD.39729._M_end_of_storageD.39733;
  if (_109 != _578)
    goto <bb 86>;
  else
    goto <bb 89>;
;;    succ:       86 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                89 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 86, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 85, next block 87, flags: (NEW, REACHABLE)
;;    pred:       85 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#420ptD.0 => &start_vcD.42661.D.40238._M_implD.39729
  # DEBUG D#82ptD.0 => D#420ptD.0
  # DEBUG __pD.68642 => _109
  # DEBUG __argD.68641 => &svD.42681
  # DEBUG __aD.68640 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#82ptD.0
  # DEBUG D#80ptD.0 => D#81ptD.0
  # DEBUG __pD.68645 => _109
  # DEBUG __valD.68644 => &svD.42681
  # DEBUG thisD.68643 => D#80ptD.0
  # DEBUG D#11ptD.0 => 4
  # DEBUG __pD.53755 => _109
  # DEBUG D.53756 => D#11ptD.0
  if (_109 != 0B)
    goto <bb 87>;
  else
    goto <bb 88>;
;;    succ:       87 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                88 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 87, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 86, next block 88, flags: (NEW, REACHABLE)
;;    pred:       86 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_745 = VDEF <.MEM_106>
  *_109 = prephitmp_15;
;;    succ:       88 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 88, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 87, next block 89, flags: (NEW, REACHABLE)
;;    pred:       86 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                87 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_420 = PHI <.MEM_106(86), .MEM_745(87)>
  # PT = nonlocal escaped 
  _580 = _109 + 4;
  # .MEM_746 = VDEF <.MEM_420>
  start_vcD.42661.D.40238._M_implD.39729._M_finishD.39732 = _580;
  goto <bb 91>;
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 88, next block 90, flags: (NEW, REACHABLE)
;;    pred:       85 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.57145 => &start_vcD.42661
  # DEBUG D#76ptD.0 => &start_vcD.42661.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.57147 => NULL
  # DEBUG __iD.57146 => D#76ptD.0
  # .MEM_743 = VDEF <.MEM_106>
  MEM[(struct __normal_iteratorD.39807 *)&D.68646] = _109;
  [LP 46] # .MEM_744 = VDEF <.MEM_743>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKiD.40166 (&start_vcD.42661, D.68646, &svD.42681);
  goto <bb 80>;
;;    succ:       80 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 (EH,EXECUTABLE)

;;   basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 89, next block 91, flags: (NEW)
;;    pred:       89 (EH,EXECUTABLE)
<L90>: [LP 46]
  goto <bb 208> (<L73>);
;;    succ:       208 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 91, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       80 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_10 = PHI <.MEM_652(80), .MEM_746(88)>
  # .MEM_117 = VDEF <.MEM_10>
  svD.42681 ={v} {CLOBBER};
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 92, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       67 [85.0%]  (FALSE_VALUE,EXECUTABLE)
;;                91 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_99(67), .MEM_117(91)>
  # DEBUG D#63ptD.0 => &D.42688
  # DEBUG thisD.59346 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42688
  # DEBUG thisD.68647 => &D.42687
  # DEBUG __sD.68648 => "private_buf_end_vc"
  # DEBUG __aD.68649 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68659 => &D.42687
  # DEBUG D#296ptD.0 => &D.42687._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68662 => D#296ptD.0
  # DEBUG __datD.68661 => &D.42687.D.11539._M_local_bufD.11541
  # DEBUG __aD.68660 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_747 = VDEF <.MEM_11>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42687]._M_pD.11525 = &D.42687.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68658 => "private_buf_end_vc"
  # DEBUG thisD.68652 => &D.42687
  # DEBUG __begD.68651 => "private_buf_end_vc"
  # DEBUG __endD.68650 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG thisD.68656 => &D.42687
  # DEBUG __begD.68655 => "private_buf_end_vc"
  # DEBUG __endD.68654 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG thisD.68663 => &D.42687
  # DEBUG __begD.68664 => "private_buf_end_vc"
  # DEBUG __endD.68665 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG __ptrD.55982 => "private_buf_end_vc"
  # DEBUG __firstD.68689 => "private_buf_end_vc"
  # DEBUG __lastD.68688 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG D#316ptD.0 => &__firstD.68689
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68691 => "private_buf_end_vc"
  # DEBUG __lastD.68690 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # .MEM_748 = VDEF <.MEM_747>
  __dnewD.68666 = 18;
  [LP 47] # .MEM_749 = VDEF <.MEM_748>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _589 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42687, &__dnewD.68666, 0);
  goto <bb 94>;
;;    succ:       94 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                93 (EH,EXECUTABLE)

;;   basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 92, next block 94, flags: (NEW)
;;    pred:       92 (EH,EXECUTABLE)
<L91>: [LP 47]
  goto <bb 208> (<L73>);
;;    succ:       208 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 94, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       92 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.42687
  # DEBUG __pD.68685 => _589
  # DEBUG thisD.68684 => D#7ptD.0
  # .MEM_750 = VDEF <.MEM_749>
  MEM[(charD.10 * *)&D.42687] = _589;
  # VUSE <.MEM_750>
  __dnew.49_590 = __dnewD.68666;
  # DEBUG D#8ptD.0 => &D.42687
  # DEBUG __capacityD.68687 => __dnew.49_590
  # DEBUG thisD.68686 => D#8ptD.0
  # .MEM_751 = VDEF <.MEM_750>
  MEM[(size_typeD.11502 *)&D.42687 + 16B] = __dnew.49_590;
  # DEBUG D#1ptD.0 => &D.42687
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68669 => _589
  # DEBUG __k1D.68668 => "private_buf_end_vc"
  # DEBUG __k2D.68667 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG __dD.68672 => _589
  # DEBUG __sD.68671 => "private_buf_end_vc"
  # DEBUG __nD.68670 => 18
  # DEBUG __s1D.68675 => _589
  # DEBUG __s2D.68674 => "private_buf_end_vc"
  # DEBUG __nD.68673 => 18
  # .MEM_753 = VDEF <.MEM_751>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (_589, "private_buf_end_vc", 18);
  # VUSE <.MEM_753>
  __dnew.49_593 = __dnewD.68666;
  # DEBUG thisD.68679 => &D.42687
  # DEBUG __nD.68678 => __dnew.49_593
  # DEBUG D#9ptD.0 => &D.42687
  # DEBUG __lengthD.68681 => __dnew.49_593
  # DEBUG thisD.68680 => D#9ptD.0
  # .MEM_754 = VDEF <.MEM_753>
  MEM[(size_typeD.11502 *)&D.42687 + 8B] = __dnew.49_593;
  # VUSE <.MEM_754>
  # PT = nonlocal escaped null { D.42687 } (escaped)
  _594 = MEM[(charD.10 * *)&D.42687];
  # DEBUG D#1ptD.0 => &D.42687
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42687 } (escaped)
  _595 = _594 + __dnew.49_593;
  # DEBUG __c1D.68683 => _595
  # DEBUG __c2D.68682 => D#10ptD.0
  # .MEM_755 = VDEF <.MEM_754>
  MEM[(char_typeD.6629 &)_595] = 0;
  # .MEM_756 = VDEF <.MEM_755>
  __dnewD.68666 ={v} {CLOBBER};
  [LP 29] # .MEM_122 = VDEF <.MEM_756>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  end_vcD.42662 = _ZNK13Configuration11GetIntArrayERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39534 (config_25(D), &D.42687); [return slot optimization]
;;    succ:       194 (EH,EXECUTABLE)
;;                95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 95, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 94, next block 96, flags: (NEW, REACHABLE)
;;    pred:       94 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.59353 => &D.42687
  # DEBUG thisD.59354 => &D.42687
  # DEBUG thisD.59363 => &D.42687
  # VUSE <.MEM_122>
  # PT = nonlocal escaped null { D.42687 } (escaped)
  _124 = MEM[(charD.10 * *)&D.42687];
  # DEBUG D#1ptD.0 => &D.42687
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59364 => &D.42687
  if (&D.42687.D.11539._M_local_bufD.11541 != _124)
    goto <bb 96>;
  else
    goto <bb 97>;
;;    succ:       96 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                97 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       95 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42687.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59356 => &D.42687
  # DEBUG __sizeD.59355 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42687
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42687
  # DEBUG D#185ptD.0 => &D.42687._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59359 => _124
  # DEBUG __aD.59357 => D#183ptD.0
  # DEBUG __nD.59358 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59362 => _124
  # DEBUG thisD.59360 => D#179ptD.0
  # DEBUG D.59361 => D#180ptD.0
  # .MEM_314 = VDEF <.MEM_122>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_124);
;;    succ:       97 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 97, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       95 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                96 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_217 = PHI <.MEM_122(95), .MEM_314(96)>
  # DEBUG D#189ptD.0 => &D.42687._M_dataplusD.11519
  # DEBUG thisD.59365 => D#189ptD.0
  # DEBUG thisD.59366 => D#189ptD.0
  # DEBUG thisD.59367 => D#189ptD.0
  # .MEM_123 = VDEF <.MEM_217>
  D.42687 ={v} {CLOBBER};
  # DEBUG thisD.59351 => &D.42688
  # DEBUG thisD.59352 => &D.42688
  # DEBUG thisD.59347 => &end_vcD.42662
  # VUSE <.MEM_123>
  # PT = nonlocal escaped 
  _135 = MEM[(intD.9 * *)&end_vcD.42662 + 8B];
  # DEBUG D#78ptD.0 => &end_vcD.42662
  # DEBUG thisD.53745 => D#78ptD.0
  # DEBUG thisD.53707 => NULL
  # DEBUG __iD.53706 => NULL
  # VUSE <.MEM_123>
  # PT = nonlocal escaped 
  _125 = MEM[(intD.9 * *)&end_vcD.42662];
  # DEBUG D#79ptD.0 => &end_vcD.42662
  # DEBUG thisD.53741 => D#79ptD.0
  # DEBUG thisD.53723 => NULL
  # DEBUG __iD.53722 => NULL
  # DEBUG __lhsD.59349 => NULL
  # DEBUG __rhsD.59348 => NULL
  # DEBUG thisD.53734 => NULL
  # DEBUG thisD.53732 => NULL
  if (_125 == _135)
    goto <bb 98>;
  else
    goto <bb 122>;
;;    succ:       98 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                122 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 98, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 97, next block 99, flags: (NEW, REACHABLE)
;;    pred:       97 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#63ptD.0 => &D.42691
  # DEBUG thisD.59368 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.42691
  # DEBUG thisD.68692 => &D.42690
  # DEBUG __sD.68693 => "private_buf_end_vc"
  # DEBUG __aD.68694 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.68704 => &D.42690
  # DEBUG D#296ptD.0 => &D.42690._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.68707 => D#296ptD.0
  # DEBUG __datD.68706 => &D.42690.D.11539._M_local_bufD.11541
  # DEBUG __aD.68705 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_757 = VDEF <.MEM_123>
  MEM[(struct _Alloc_hiderD.11518 *)&D.42690]._M_pD.11525 = &D.42690.D.11539._M_local_bufD.11541;
  # DEBUG __sD.68703 => "private_buf_end_vc"
  # DEBUG thisD.68697 => &D.42690
  # DEBUG __begD.68696 => "private_buf_end_vc"
  # DEBUG __endD.68695 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG thisD.68701 => &D.42690
  # DEBUG __begD.68700 => "private_buf_end_vc"
  # DEBUG __endD.68699 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG thisD.68708 => &D.42690
  # DEBUG __begD.68709 => "private_buf_end_vc"
  # DEBUG __endD.68710 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG __ptrD.55982 => "private_buf_end_vc"
  # DEBUG __firstD.68734 => "private_buf_end_vc"
  # DEBUG __lastD.68733 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG D#316ptD.0 => &__firstD.68734
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.68736 => "private_buf_end_vc"
  # DEBUG __lastD.68735 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # .MEM_758 = VDEF <.MEM_757>
  __dnewD.68711 = 18;
  [LP 48] # .MEM_759 = VDEF <.MEM_758>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _605 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.42690, &__dnewD.68711, 0);
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                202 (EH,EXECUTABLE)

;;   basic block 99, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       98 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.42690
  # DEBUG __pD.68730 => _605
  # DEBUG thisD.68729 => D#7ptD.0
  # .MEM_760 = VDEF <.MEM_759>
  MEM[(charD.10 * *)&D.42690] = _605;
  # VUSE <.MEM_760>
  __dnew.49_606 = __dnewD.68711;
  # DEBUG D#8ptD.0 => &D.42690
  # DEBUG __capacityD.68732 => __dnew.49_606
  # DEBUG thisD.68731 => D#8ptD.0
  # .MEM_761 = VDEF <.MEM_760>
  MEM[(size_typeD.11502 *)&D.42690 + 16B] = __dnew.49_606;
  # DEBUG D#1ptD.0 => &D.42690
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.68714 => _605
  # DEBUG __k1D.68713 => "private_buf_end_vc"
  # DEBUG __k2D.68712 => &MEM[(voidD.45 *)"private_buf_end_vc" + 18B]
  # DEBUG __dD.68717 => _605
  # DEBUG __sD.68716 => "private_buf_end_vc"
  # DEBUG __nD.68715 => 18
  # DEBUG __s1D.68720 => _605
  # DEBUG __s2D.68719 => "private_buf_end_vc"
  # DEBUG __nD.68718 => 18
  # .MEM_763 = VDEF <.MEM_761>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  memcpyD.992 (_605, "private_buf_end_vc", 18);
  # VUSE <.MEM_763>
  __dnew.49_609 = __dnewD.68711;
  # DEBUG thisD.68724 => &D.42690
  # DEBUG __nD.68723 => __dnew.49_609
  # DEBUG D#9ptD.0 => &D.42690
  # DEBUG __lengthD.68726 => __dnew.49_609
  # DEBUG thisD.68725 => D#9ptD.0
  # .MEM_764 = VDEF <.MEM_763>
  MEM[(size_typeD.11502 *)&D.42690 + 8B] = __dnew.49_609;
  # VUSE <.MEM_764>
  # PT = nonlocal escaped null { D.42690 } (escaped)
  _610 = MEM[(charD.10 * *)&D.42690];
  # DEBUG D#1ptD.0 => &D.42690
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.42690 } (escaped)
  _611 = _610 + __dnew.49_609;
  # DEBUG __c1D.68728 => _611
  # DEBUG __c2D.68727 => D#10ptD.0
  # .MEM_765 = VDEF <.MEM_764>
  MEM[(char_typeD.6629 &)_611] = 0;
  # .MEM_766 = VDEF <.MEM_765>
  __dnewD.68711 ={v} {CLOBBER};
  [LP 33] # .MEM_127 = VDEF <.MEM_766>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _128 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_25(D), &D.42690);
;;    succ:       198 (EH,EXECUTABLE)
;;                100 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 99, next block 101, flags: (NEW, REACHABLE)
;;    pred:       99 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_129 = VDEF <.MEM_127>
  evD.42689 = _128;
  # DEBUG thisD.59371 => &D.42690
  # DEBUG thisD.59372 => &D.42690
  # DEBUG thisD.59381 => &D.42690
  # VUSE <.MEM_129>
  # PT = nonlocal escaped null { D.42690 } (escaped)
  _131 = MEM[(charD.10 * *)&D.42690];
  # DEBUG D#1ptD.0 => &D.42690
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59382 => &D.42690
  if (&D.42690.D.11539._M_local_bufD.11541 != _131)
    goto <bb 101>;
  else
    goto <bb 102>;
;;    succ:       101 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                102 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 101, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 100, next block 102, flags: (NEW, REACHABLE)
;;    pred:       100 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42690.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59374 => &D.42690
  # DEBUG __sizeD.59373 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42690
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42690
  # DEBUG D#185ptD.0 => &D.42690._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59377 => _131
  # DEBUG __aD.59375 => D#183ptD.0
  # DEBUG __nD.59376 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59380 => _131
  # DEBUG thisD.59378 => D#179ptD.0
  # DEBUG D.59379 => D#180ptD.0
  # .MEM_319 = VDEF <.MEM_129>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_131);
  # VUSE <.MEM_319>
  pretmp_264 = evD.42689;
;;    succ:       102 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 101, next block 103, flags: (NEW, REACHABLE)
;;    pred:       100 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                101 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_218 = PHI <.MEM_129(100), .MEM_319(101)>
  # prephitmp_265 = PHI <_128(100), pretmp_264(101)>
  # DEBUG D#189ptD.0 => &D.42690._M_dataplusD.11519
  # DEBUG thisD.59383 => D#189ptD.0
  # DEBUG thisD.59384 => D#189ptD.0
  # DEBUG thisD.59385 => D#189ptD.0
  # .MEM_130 = VDEF <.MEM_218>
  D.42690 ={v} {CLOBBER};
  # DEBUG thisD.59369 => &D.42691
  # DEBUG thisD.59370 => &D.42691
  if (prephitmp_265 < 0)
    goto <bb 103>;
  else
    goto <bb 115>;
;;    succ:       103 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                115 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 103, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       102 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.68737 => &end_vcD.42662
  # DEBUG __new_sizeD.68738 => D#1013ptD.0
  # .MEM_767 = VDEF <.MEM_130>
  __xD.68739 = 0;
  # DEBUG __xD.68739 => __xD.68739
  # VUSE <.MEM_767>
  # PT = nonlocal escaped 
  _612 = MEM[(intD.9 * *)&end_vcD.42662];
  # DEBUG D#64ptD.0 => &end_vcD.42662
  # VUSE <.MEM_767>
  # PT = nonlocal escaped 
  _613 = MEM[(intD.9 * *)&end_vcD.42662 + 8B];
  # DEBUG D#64ptD.0 => &end_vcD.42662
  # DEBUG thisD.68746 => D#64ptD.0
  # DEBUG thisD.68747 => D#64ptD.0
  _614 = (long intD.12) _613;
  _615 = (long intD.12) _612;
  _616 = _614 - _615;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _617 = _616 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _618 = (size_typeD.39814) _617;
  if (prephitmp_320 > _618)
    goto <bb 104>;
  else
    goto <bb 107>;
;;    succ:       104 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                107 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 103, next block 105, flags: (NEW, REACHABLE)
;;    pred:       103 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => &end_vcD.42662
  # DEBUG D#64ptD.0 => &end_vcD.42662
  # DEBUG thisD.59139 => D#64ptD.0
  # DEBUG thisD.59138 => D#64ptD.0
  # RANGE [1, 18446744073709551615]
  _619 = prephitmp_320 - _618;
  # DEBUG thisD.59132 => &end_vcD.42662
  # DEBUG D#76ptD.0 => &end_vcD.42662.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59134 => NULL
  # DEBUG __iD.59133 => D#76ptD.0
  # DEBUG thisD.68745 => &end_vcD.42662
  # .MEM_769 = VDEF <.MEM_767>
  MEM[(struct __normal_iteratorD.39807 *)&__positionD.68744] = _613;
  # DEBUG __nD.68743 => _619
  # DEBUG __xD.68742 => &__xD.68739
  [LP 49] # .MEM_770 = VDEF <.MEM_769>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.40161 (&end_vcD.42662, __positionD.68744, _619, &__xD.68739);
  goto <bb 106>;
;;    succ:       106 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                105 (EH,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 104, next block 106, flags: (NEW)
;;    pred:       104 (EH,EXECUTABLE)
<L93>: [LP 49]
  goto <bb 203> (<L72>);
;;    succ:       203 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 105, next block 107, flags: (NEW)
;;    pred:       104 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                107 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_607 = PHI <.MEM_770(104), .MEM_767(107)>
  goto <bb 109>;
;;    succ:       109 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 107, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 106, next block 108, flags: (NEW, REACHABLE)
;;    pred:       103 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => &end_vcD.42662
  # DEBUG D#64ptD.0 => &end_vcD.42662
  # DEBUG thisD.59144 => D#64ptD.0
  # DEBUG thisD.59143 => D#64ptD.0
  if (prephitmp_320 < _618)
    goto <bb 108>;
  else
    goto <bb 106>;
;;    succ:       108 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                106 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       107 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _620 = prephitmp_320 * 4;
  # PT = nonlocal escaped 
  _621 = _612 + _620;
  # DEBUG D#139ptD.0 => &end_vcD.42662
  # DEBUG __posD.68741 => _621
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG thisD.68740 => D#138ptD.0
  # DEBUG D#136ptD.0 => &D#138ptD.0->D.40238
  # DEBUG thisD.54143 => D#136ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG __firstD.54133 => _621
  # DEBUG __lastD.54134 => D#137ptD.0
  # DEBUG D.54135 => NULL
  # DEBUG D#134ptD.0 => _621
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # .MEM_768 = VDEF <.MEM_767>
  MEM[(intD.9 * *)&end_vcD.42662 + 8B] = _621;
;;    succ:       109 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       106 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                108 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_539 = PHI <.MEM_607(106), .MEM_768(108)>
  # DEBUG iD.42692 => 0
  if (num_private_bufs_1 <= 0)
    goto <bb 110>;
  else
    goto <bb 111>;
;;    succ:       110 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                111 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 110, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 109, next block 111, flags: (NEW)
;;    pred:       109 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                113 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                119 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_591 = PHI <.MEM_539(109), .MEM_510(113), .MEM_772(119)>
  goto <bb 121>;
;;    succ:       121 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 110, next block 112, flags: (NEW)
;;    pred:       109 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_539>
  # PT = nonlocal escaped 
  pretmp_762 = MEM[(intD.9 * *)&end_vcD.42662];
;;    succ:       112 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 112, loop depth 1, count 0, freq 8, maybe hot
;;    prev block 111, next block 113, flags: (NEW, REACHABLE)
;;    pred:       111 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                114 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 2147483647] NONZERO 2147483647
  # i_559 = PHI <0(111), i_136(114)>
  # .MEM_603 = PHI <.MEM_539(111), .MEM_140(114)>
  # DEBUG iD.42692 => i_559
  # RANGE [0, 2147483646] NONZERO 2147483647
  _134 = (long unsigned intD.14) i_559;
  # DEBUG D#43ptD.0 => &end_vcD.42662
  # DEBUG __nD.59387 => _134
  # DEBUG thisD.59388 => D#43ptD.0
  # RANGE [0, 8589934584] NONZERO 8589934588
  _111 = _134 * 4;
  # PT = nonlocal escaped 
  _101 = pretmp_762 + _111;
  # RANGE [1, 2147483647] NONZERO 2147483647
  i_136 = i_559 + 1;
  _137 = num_private_bufs_34 * i_136;
  _138 = _137 / num_private_bufs_1;
  _139 = _138 + -1;
  # .MEM_140 = VDEF <.MEM_603>
  *_101 = _139;
  # DEBUG iD.42692 => i_136
  # DEBUG iD.42692 => i_136
  if (num_private_bufs_1 <= i_136)
    goto <bb 113>;
  else
    goto <bb 114>;
;;    succ:       113 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                114 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 113, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 112, next block 114, flags: (NEW)
;;    pred:       112 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_510 = PHI <.MEM_140(112)>
  goto <bb 110>;
;;    succ:       110 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 114, loop depth 1, count 0, freq 7, maybe hot
;;    prev block 113, next block 115, flags: (NEW)
;;    pred:       112 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 112>;
;;    succ:       112 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 115, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 114, next block 116, flags: (NEW, REACHABLE)
;;    pred:       102 [73.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.68748 => &end_vcD.42662
  # DEBUG __xD.68749 => &evD.42689
  # VUSE <.MEM_130>
  # PT = nonlocal escaped 
  _133 = end_vcD.42662.D.40238._M_implD.39729._M_finishD.39732;
  # VUSE <.MEM_130>
  # PT = nonlocal escaped 
  _622 = end_vcD.42662.D.40238._M_implD.39729._M_end_of_storageD.39733;
  if (_133 != _622)
    goto <bb 116>;
  else
    goto <bb 119>;
;;    succ:       116 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                119 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 116, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 115, next block 117, flags: (NEW, REACHABLE)
;;    pred:       115 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#420ptD.0 => &end_vcD.42662.D.40238._M_implD.39729
  # DEBUG D#82ptD.0 => D#420ptD.0
  # DEBUG __pD.68752 => _133
  # DEBUG __argD.68751 => &evD.42689
  # DEBUG __aD.68750 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#82ptD.0
  # DEBUG D#80ptD.0 => D#81ptD.0
  # DEBUG __pD.68755 => _133
  # DEBUG __valD.68754 => &evD.42689
  # DEBUG thisD.68753 => D#80ptD.0
  # DEBUG D#11ptD.0 => 4
  # DEBUG __pD.53755 => _133
  # DEBUG D.53756 => D#11ptD.0
  if (_133 != 0B)
    goto <bb 117>;
  else
    goto <bb 118>;
;;    succ:       117 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                118 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 117, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 116, next block 118, flags: (NEW, REACHABLE)
;;    pred:       116 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_773 = VDEF <.MEM_130>
  *_133 = prephitmp_265;
;;    succ:       118 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 118, loop depth 0, count 0, freq 2, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       116 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                117 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_476 = PHI <.MEM_130(116), .MEM_773(117)>
  # PT = nonlocal escaped 
  _624 = _133 + 4;
  # .MEM_774 = VDEF <.MEM_476>
  end_vcD.42662.D.40238._M_implD.39729._M_finishD.39732 = _624;
  goto <bb 121>;
;;    succ:       121 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 118, next block 120, flags: (NEW, REACHABLE)
;;    pred:       115 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.57145 => &end_vcD.42662
  # DEBUG D#76ptD.0 => &end_vcD.42662.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.57147 => NULL
  # DEBUG __iD.57146 => D#76ptD.0
  # .MEM_771 = VDEF <.MEM_130>
  MEM[(struct __normal_iteratorD.39807 *)&D.68756] = _133;
  [LP 50] # .MEM_772 = VDEF <.MEM_771>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKiD.40166 (&end_vcD.42662, D.68756, &evD.42689);
  goto <bb 110>;
;;    succ:       110 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                120 (EH,EXECUTABLE)

;;   basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 119, next block 121, flags: (NEW)
;;    pred:       119 (EH,EXECUTABLE)
<L94>: [LP 50]
  goto <bb 203> (<L72>);
;;    succ:       203 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 121, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 120, next block 122, flags: (NEW, REACHABLE)
;;    pred:       110 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                118 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_591(110), .MEM_774(118)>
  # .MEM_142 = VDEF <.MEM_13>
  evD.42689 ={v} {CLOBBER};
;;    succ:       122 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 122, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 121, next block 123, flags: (NEW, REACHABLE)
;;    pred:       97 [85.0%]  (FALSE_VALUE,EXECUTABLE)
;;                121 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_14 = PHI <.MEM_123(97), .MEM_142(121)>
  # RANGE ~[2147483648, 18446744071562067967]
  _147 = (long unsigned intD.14) num_private_bufs_34;
  # DEBUG D#1015ptD.0 => &this_23(D)->_private_buf_vc_mapD.40240
  # DEBUG thisD.68757 => D#1015ptD.0
  # DEBUG __new_sizeD.68758 => _147
  # .MEM_775 = VDEF <.MEM_14>
  __xD.68759 = -1;
  # DEBUG __xD.68759 => __xD.68759
  # VUSE <.MEM_775>
  # PT = nonlocal escaped 
  _141 = MEM[(intD.9 * *)this_23(D) + 112B];
  # DEBUG D#64ptD.0 => D#1015ptD.0
  # VUSE <.MEM_775>
  # PT = nonlocal escaped 
  _625 = MEM[(intD.9 * *)this_23(D) + 120B];
  # DEBUG D#64ptD.0 => D#1015ptD.0
  # DEBUG thisD.68766 => D#64ptD.0
  # DEBUG thisD.68767 => D#64ptD.0
  _626 = (long intD.12) _625;
  _627 = (long intD.12) _141;
  _628 = _626 - _627;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _629 = _628 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _630 = (size_typeD.39814) _629;
  if (_147 > _630)
    goto <bb 123>;
  else
    goto <bb 126>;
;;    succ:       123 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                126 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 123, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 122, next block 124, flags: (NEW, REACHABLE)
;;    pred:       122 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1015ptD.0
  # DEBUG D#64ptD.0 => D#1015ptD.0
  # DEBUG thisD.59139 => D#64ptD.0
  # DEBUG thisD.59138 => D#64ptD.0
  # RANGE [1, 18446744073709551615]
  _631 = _147 - _630;
  # DEBUG thisD.59132 => D#1015ptD.0
  # DEBUG D#76ptD.0 => &D#1015ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59134 => NULL
  # DEBUG __iD.59133 => D#76ptD.0
  # DEBUG thisD.68765 => D#1015ptD.0
  # .MEM_777 = VDEF <.MEM_775>
  MEM[(struct __normal_iteratorD.39807 *)&__positionD.68764] = _625;
  # DEBUG __nD.68763 => _631
  # DEBUG __xD.68762 => &__xD.68759
  # PT = nonlocal 
  _148 = &this_23(D)->_private_buf_vc_mapD.40240;
  [LP 51] # .MEM_778 = VDEF <.MEM_777>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.40161 (_148, __positionD.68764, _631, &__xD.68759);
  goto <bb 125>;
;;    succ:       125 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                124 (EH,EXECUTABLE)

;;   basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 123, next block 125, flags: (NEW)
;;    pred:       123 (EH,EXECUTABLE)
<L95>: [LP 51]
  goto <bb 203> (<L72>);
;;    succ:       203 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 125, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 124, next block 126, flags: (NEW)
;;    pred:       123 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                126 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_588 = PHI <.MEM_778(123), .MEM_775(126)>
  goto <bb 128>;
;;    succ:       128 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 126, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 125, next block 127, flags: (NEW, REACHABLE)
;;    pred:       122 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1015ptD.0
  # DEBUG D#64ptD.0 => D#1015ptD.0
  # DEBUG thisD.59144 => D#64ptD.0
  # DEBUG thisD.59143 => D#64ptD.0
  if (_147 < _630)
    goto <bb 127>;
  else
    goto <bb 125>;
;;    succ:       127 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                125 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 127, loop depth 0, count 0, freq 9, maybe hot
;;    prev block 126, next block 128, flags: (NEW, REACHABLE)
;;    pred:       126 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _632 = _147 * 4;
  # PT = nonlocal escaped 
  _633 = _141 + _632;
  # DEBUG D#139ptD.0 => D#1015ptD.0
  # DEBUG __posD.68761 => _633
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG thisD.68760 => D#138ptD.0
  # DEBUG D#136ptD.0 => &D#138ptD.0->D.40238
  # DEBUG thisD.54143 => D#136ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG __firstD.54133 => _633
  # DEBUG __lastD.54134 => D#137ptD.0
  # DEBUG D.54135 => NULL
  # DEBUG D#134ptD.0 => _633
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # .MEM_776 = VDEF <.MEM_775>
  MEM[(intD.9 * *)this_23(D) + 120B] = _633;
;;    succ:       128 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 128, loop depth 0, count 0, freq 18, maybe hot
;;    prev block 127, next block 129, flags: (NEW, REACHABLE)
;;    pred:       127 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                125 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_460 = PHI <.MEM_776(127), .MEM_588(125)>
  # VUSE <.MEM_460>
  _150 = this_23(D)->_buf_sizeD.39701;
  # .MEM_151 = VDEF <.MEM_460>
  this_23(D)->_shared_buf_sizeD.40243 = _150;
  # DEBUG iD.42694 => 0
  # DEBUG iD.42694 => 0
  if (num_private_bufs_1 <= 0)
    goto <bb 144>;
  else
    goto <bb 129>;
;;    succ:       144 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                129 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 129, loop depth 0, count 0, freq 17, maybe hot
;;    prev block 128, next block 130, flags: (NEW, REACHABLE)
;;    pred:       128 [97.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#566ptD.0 => &this_23(D)->_private_buf_sizeD.40241
  # VUSE <.MEM_151>
  # PT = nonlocal escaped 
  _422 = MEM[(intD.9 * *)this_23(D) + 136B];
  # DEBUG D#43ptD.0 => D#566ptD.0
  # DEBUG __nD.59399 => 0
  # DEBUG thisD.59400 => D#43ptD.0
  # VUSE <.MEM_151>
  _462 = *_422;
  _494 = _150 - _462;
  # .MEM_495 = VDEF <.MEM_151>
  this_23(D)->_shared_buf_sizeD.40243 = _494;
  # VUSE <.MEM_495>
  # PT = nonlocal escaped 
  _478 = MEM[(intD.9 * *)&start_vcD.42661];
  # DEBUG D#43ptD.0 => &start_vcD.42661
  # DEBUG __nD.59395 => 0
  # DEBUG thisD.59396 => D#43ptD.0
  # VUSE <.MEM_495>
  v_541 = *_478;
  # VUSE <.MEM_495>
  # PT = nonlocal escaped 
  _542 = MEM[(intD.9 * *)&end_vcD.42662];
  # DEBUG D#43ptD.0 => &end_vcD.42662
  # DEBUG __nD.59391 => 0
  # DEBUG thisD.59392 => D#43ptD.0
  # VUSE <.MEM_495>
  _586 = *_542;
  if (v_541 > _586)
    goto <bb 134>;
  else
    goto <bb 132>;
;;    succ:       134 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                132 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 130, loop depth 1, count 0, freq 437, maybe hot
;;    prev block 129, next block 131, flags: (NEW, REACHABLE)
;;    pred:       142 [97.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _152 = (long unsigned intD.14) i_169;
  # DEBUG D#566ptD.0 => &this_23(D)->_private_buf_sizeD.40241
  # DEBUG D#43ptD.0 => D#566ptD.0
  # DEBUG __nD.59399 => _152
  # DEBUG thisD.59400 => D#43ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _48 = _152 * 4;
  # PT = nonlocal escaped 
  _38 = _422 + _48;
  # VUSE <.MEM_488>
  _154 = *_38;
  _156 = prephitmp_482 - _154;
  # .MEM_157 = VDEF <.MEM_488>
  this_23(D)->_shared_buf_sizeD.40243 = _156;
  # DEBUG D#43ptD.0 => &start_vcD.42661
  # DEBUG __nD.59395 => _152
  # DEBUG thisD.59396 => D#43ptD.0
  # PT = nonlocal escaped 
  _66 = _478 + _48;
  # VUSE <.MEM_157>
  v_159 = *_66;
  # DEBUG D#43ptD.0 => &end_vcD.42662
  # DEBUG __nD.59391 => _152
  # DEBUG thisD.59392 => D#43ptD.0
  # PT = nonlocal escaped 
  _94 = _542 + _48;
  # VUSE <.MEM_157>
  _160 = *_94;
  if (v_159 > _160)
    goto <bb 134>;
  else
    goto <bb 131>;
;;    succ:       134 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                131 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 131, loop depth 1, count 0, freq 437, maybe hot
;;    prev block 130, next block 132, flags: (NEW)
;;    pred:       130 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 133>;
;;    succ:       133 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 132, loop depth 0, count 0, freq 17, maybe hot
;;    prev block 131, next block 133, flags: (NEW, REACHABLE)
;;    pred:       129 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       133 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 133, loop depth 1, count 0, freq 454, maybe hot
;;    prev block 132, next block 134, flags: (NEW)
;;    pred:       132 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                131 [100.0%]  (FALLTHRU,EXECUTABLE)
  # v_32 = PHI <v_541(132), v_159(131)>
  # .MEM_508 = PHI <.MEM_495(132), .MEM_157(131)>
  # i_560 = PHI <0(132), i_169(131)>
  # PT = nonlocal escaped 
  # _469 = PHI <_542(132), _94(131)>
  # prephitmp_287 = PHI <_494(132), _156(131)>
  # DEBUG iD.42694 => i_560
  # DEBUG D#566ptD.0 => &this_23(D)->_private_buf_sizeD.40241
  # DEBUG __nD.59399 => 0
  # DEBUG thisD.59400 => D#43ptD.0
  # DEBUG __nD.59395 => 0
  # DEBUG thisD.59396 => D#43ptD.0
  # DEBUG D#43ptD.0 => &end_vcD.42662
  # DEBUG __nD.59391 => 0
  # DEBUG thisD.59392 => D#43ptD.0
  # DEBUG vD.42697 => v_32
  # DEBUG D#43ptD.0 => &end_vcD.42662
  # DEBUG __nD.59407 => 0
  # DEBUG thisD.59408 => D#43ptD.0
  # VUSE <.MEM_508>
  _587 = *_469;
  if (v_32 <= _587)
    goto <bb 135>;
  else
    goto <bb 142>;
;;    succ:       135 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                142 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 133, next block 135, flags: (NEW, REACHABLE)
;;    pred:       129 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                130 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_585 = PHI <.MEM_495(129), .MEM_157(130)>
  # .MEM_170 = VDEF <.MEM_585>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  __assert_failD.24398 ("start_vc[i] <= end_vc[i]", "buffer_state.cpp", 183, &_ZZN11BufferState18SharedBufferPolicyC4ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.42648);
;;    succ:      

;;   basic block 135, loop depth 1, count 0, freq 430, maybe hot
;;    prev block 134, next block 136, flags: (NEW, REACHABLE)
;;    pred:       133 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG iD.42694 => i_560
  # DEBUG D#566ptD.0 => &this_23(D)->_private_buf_sizeD.40241
  # DEBUG __nD.59399 => 0
  # DEBUG thisD.59400 => D#43ptD.0
  # DEBUG __nD.59395 => 0
  # DEBUG thisD.59396 => D#43ptD.0
  # DEBUG __nD.59391 => 0
  # DEBUG thisD.59392 => D#43ptD.0
  # DEBUG vD.42697 => v_32
  # DEBUG D#43ptD.0 => &end_vcD.42662
  # DEBUG __nD.59407 => 0
  # DEBUG thisD.59408 => D#43ptD.0
  # RANGE [0, 18446744073709551615]
  _543 = (long unsigned intD.14) v_32;
  # DEBUG D#567ptD.0 => &this_23(D)->_private_buf_vc_mapD.40240
  # VUSE <.MEM_508>
  # PT = nonlocal escaped 
  _526 = MEM[(intD.9 * *)this_23(D) + 112B];
  # DEBUG D#43ptD.0 => D#567ptD.0
  # DEBUG __nD.59411 => _543
  # DEBUG thisD.59412 => D#43ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _484 = _543 * 4;
  # PT = nonlocal escaped 
  _528 = _526 + _484;
  # VUSE <.MEM_508>
  _464 = *_528;
  if (_464 >= 0)
    goto <bb 136>;
  else
    goto <bb 139>;
;;    succ:       136 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                139 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 136, loop depth 0, count 0, freq 4, maybe hot
;;    prev block 135, next block 137, flags: (NEW, REACHABLE)
;;    pred:       135 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                137 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_563 = PHI <.MEM_508(135), .MEM_166(137)>
  # .MEM_168 = VDEF <.MEM_563>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  __assert_failD.24398 ("_private_buf_vc_map[v] < 0", "buffer_state.cpp", 185, &_ZZN11BufferState18SharedBufferPolicyC4ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.42648);
;;    succ:      

;;   basic block 137, loop depth 2, count 0, freq 9120, maybe hot
;;    prev block 136, next block 138, flags: (NEW, REACHABLE)
;;    pred:       140 [95.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _163 = (long unsigned intD.14) v_167;
  # DEBUG D#567ptD.0 => &this_23(D)->_private_buf_vc_mapD.40240
  # DEBUG D#43ptD.0 => D#567ptD.0
  # DEBUG __nD.59411 => _163
  # DEBUG thisD.59412 => D#43ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _207 = _163 * 4;
  # PT = nonlocal escaped 
  _208 = _526 + _207;
  # VUSE <.MEM_166>
  _165 = *_208;
  if (_165 >= 0)
    goto <bb 136>;
  else
    goto <bb 138>;
;;    succ:       136 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                138 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 138, loop depth 2, count 0, freq 9116, maybe hot
;;    prev block 137, next block 139, flags: (NEW)
;;    pred:       137 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 140>;
;;    succ:       140 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 139, loop depth 1, count 0, freq 430, maybe hot
;;    prev block 138, next block 140, flags: (NEW, REACHABLE)
;;    pred:       135 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       140 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 140, loop depth 2, count 0, freq 9550, maybe hot
;;    prev block 139, next block 141, flags: (NEW)
;;    pred:       139 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                138 [100.0%]  (FALLTHRU,EXECUTABLE)
  # v_579 = PHI <v_32(139), v_167(138)>
  # .MEM_473 = PHI <.MEM_508(139), .MEM_166(138)>
  # PT = nonlocal escaped 
  # _602 = PHI <_528(139), _208(138)>
  # DEBUG vD.42697 => v_579
  # DEBUG __nD.59407 => 0
  # DEBUG thisD.59408 => D#43ptD.0
  # DEBUG D#567ptD.0 => &this_23(D)->_private_buf_vc_mapD.40240
  # DEBUG __nD.59411 => _543
  # DEBUG thisD.59412 => D#43ptD.0
  # DEBUG D#568ptD.0 => &this_23(D)->_private_buf_vc_mapD.40240
  # DEBUG D#43ptD.0 => D#568ptD.0
  # DEBUG __nD.59415 => _543
  # DEBUG thisD.59416 => D#43ptD.0
  # .MEM_166 = VDEF <.MEM_473>
  *_602 = i_560;
  v_167 = v_579 + 1;
  # DEBUG vD.42697 => v_167
  # DEBUG vD.42697 => v_167
  # DEBUG D#43ptD.0 => &end_vcD.42662
  # DEBUG __nD.59407 => 0
  # DEBUG thisD.59408 => D#43ptD.0
  # VUSE <.MEM_166>
  _162 = *_469;
  if (_162 >= v_167)
    goto <bb 137>;
  else
    goto <bb 141>;
;;    succ:       137 [95.5%]  (TRUE_VALUE,EXECUTABLE)
;;                141 [4.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 141, loop depth 1, count 0, freq 430, maybe hot
;;    prev block 140, next block 142, flags: (NEW)
;;    pred:       140 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_166>
  pretmp_444 = this_23(D)->_shared_buf_sizeD.40243;
;;    succ:       142 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 142, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 141, next block 143, flags: (NEW, REACHABLE)
;;    pred:       141 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                133 [4.5%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_488 = PHI <.MEM_166(141), .MEM_508(133)>
  # prephitmp_482 = PHI <pretmp_444(141), prephitmp_287(133)>
  i_169 = i_560 + 1;
  # DEBUG iD.42694 => i_169
  # DEBUG iD.42694 => i_169
  if (num_private_bufs_1 <= i_169)
    goto <bb 143>;
  else
    goto <bb 130>;
;;    succ:       143 [3.0%]  (TRUE_VALUE,EXECUTABLE)
;;                130 [97.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 143, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 142, next block 144, flags: (NEW)
;;    pred:       142 [3.0%]  (TRUE_VALUE,EXECUTABLE)
  # prephitmp_497 = PHI <prephitmp_482(142)>
;;    succ:       144 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 144, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 143, next block 145, flags: (NEW, REACHABLE)
;;    pred:       143 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                128 [3.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_523 = PHI <.MEM_488(143), .MEM_151(128)>
  # prephitmp_281 = PHI <prephitmp_497(143), _150(128)>
  if (prephitmp_281 < 0)
    goto <bb 145>;
  else
    goto <bb 146>;
;;    succ:       145 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                146 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 145, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 144, next block 146, flags: (NEW, REACHABLE)
;;    pred:       144 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_178 = VDEF <.MEM_523>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  __assert_failD.24398 ("_shared_buf_size >= 0", "buffer_state.cpp", 189, &_ZZN11BufferState18SharedBufferPolicyC4ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE19__PRETTY_FUNCTION__D.42648);
;;    succ:      

;;   basic block 146, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 145, next block 147, flags: (NEW, REACHABLE)
;;    pred:       144 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#1014ptD.0 => &this_23(D)->_reserved_slotsD.40245
  # DEBUG thisD.68768 => D#1014ptD.0
  # DEBUG __new_sizeD.68769 => _147
  # .MEM_779 = VDEF <.MEM_523>
  __xD.68770 = 0;
  # DEBUG __xD.68770 => __xD.68770
  # VUSE <.MEM_779>
  # PT = nonlocal escaped 
  _149 = MEM[(intD.9 * *)this_23(D) + 192B];
  # DEBUG D#64ptD.0 => D#1014ptD.0
  # VUSE <.MEM_779>
  # PT = nonlocal escaped 
  _634 = MEM[(intD.9 * *)this_23(D) + 200B];
  # DEBUG D#64ptD.0 => D#1014ptD.0
  # DEBUG thisD.68777 => D#64ptD.0
  # DEBUG thisD.68778 => D#64ptD.0
  _635 = (long intD.12) _634;
  _636 = (long intD.12) _149;
  _637 = _635 - _636;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _638 = _637 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _639 = (size_typeD.39814) _638;
  if (_147 > _639)
    goto <bb 147>;
  else
    goto <bb 150>;
;;    succ:       147 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                150 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 147, loop depth 0, count 0, freq 3, maybe hot
;;    prev block 146, next block 148, flags: (NEW, REACHABLE)
;;    pred:       146 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1014ptD.0
  # DEBUG D#64ptD.0 => D#1014ptD.0
  # DEBUG thisD.59139 => D#64ptD.0
  # DEBUG thisD.59138 => D#64ptD.0
  # RANGE [1, 18446744073709551615]
  _640 = _147 - _639;
  # DEBUG thisD.59132 => D#1014ptD.0
  # DEBUG D#76ptD.0 => &D#1014ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59134 => NULL
  # DEBUG __iD.59133 => D#76ptD.0
  # DEBUG thisD.68776 => D#1014ptD.0
  # .MEM_781 = VDEF <.MEM_779>
  MEM[(struct __normal_iteratorD.39807 *)&__positionD.68775] = _634;
  # DEBUG __nD.68774 => _640
  # DEBUG __xD.68773 => &__xD.68770
  # PT = nonlocal 
  _172 = &this_23(D)->_reserved_slotsD.40245;
  [LP 52] # .MEM_782 = VDEF <.MEM_781>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.40161 (_172, __positionD.68775, _640, &__xD.68770);
  goto <bb 149>;
;;    succ:       149 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                148 (EH,EXECUTABLE)

;;   basic block 148, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 147, next block 149, flags: (NEW)
;;    pred:       147 (EH,EXECUTABLE)
<L96>: [LP 52]
  goto <bb 203> (<L72>);
;;    succ:       203 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 149, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 148, next block 150, flags: (NEW)
;;    pred:       147 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                150 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_558 = PHI <.MEM_782(147), .MEM_779(150)>
  goto <bb 152>;
;;    succ:       152 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 150, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 149, next block 151, flags: (NEW, REACHABLE)
;;    pred:       146 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1014ptD.0
  # DEBUG D#64ptD.0 => D#1014ptD.0
  # DEBUG thisD.59144 => D#64ptD.0
  # DEBUG thisD.59143 => D#64ptD.0
  if (_147 < _639)
    goto <bb 151>;
  else
    goto <bb 149>;
;;    succ:       151 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                149 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 151, loop depth 0, count 0, freq 7, maybe hot
;;    prev block 150, next block 152, flags: (NEW, REACHABLE)
;;    pred:       150 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _641 = _147 * 4;
  # PT = nonlocal escaped 
  _642 = _149 + _641;
  # DEBUG D#139ptD.0 => D#1014ptD.0
  # DEBUG __posD.68772 => _642
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG thisD.68771 => D#138ptD.0
  # DEBUG D#136ptD.0 => &D#138ptD.0->D.40238
  # DEBUG thisD.54143 => D#136ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG __firstD.54133 => _642
  # DEBUG __lastD.54134 => D#137ptD.0
  # DEBUG D.54135 => NULL
  # DEBUG D#134ptD.0 => _642
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # .MEM_780 = VDEF <.MEM_779>
  MEM[(intD.9 * *)this_23(D) + 200B] = _642;
;;    succ:       152 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 152, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 151, next block 153, flags: (NEW, REACHABLE)
;;    pred:       151 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                149 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_173 = PHI <.MEM_780(151), .MEM_558(149)>
  # DEBUG thisD.59433 => &end_vcD.42662
  # DEBUG D#154ptD.0 => &end_vcD.42662.D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => end_vcD.42662.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => end_vcD.42662.D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &end_vcD.42662.D.40238
  # DEBUG thisD.59434 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_173>
  # PT = nonlocal escaped 
  _175 = MEM[(struct _Vector_baseD.39702 *)&end_vcD.42662]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _175
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59437 => D#155ptD.0
  # DEBUG __pD.59436 => _175
  # DEBUG __nD.59435 => D#148ptD.0
  if (_175 != 0B)
    goto <bb 153>;
  else
    goto <bb 154>;
;;    succ:       153 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                154 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 153, loop depth 0, count 0, freq 10, maybe hot
;;    prev block 152, next block 154, flags: (NEW, REACHABLE)
;;    pred:       152 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59441 => _175
  # DEBUG __aD.59439 => D#144ptD.0
  # DEBUG __nD.59440 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59444 => _175
  # DEBUG thisD.59442 => D#140ptD.0
  # DEBUG D.59443 => D#141ptD.0
  # .MEM_329 = VDEF <.MEM_173>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_175);
;;    succ:       154 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 154, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 153, next block 155, flags: (NEW, REACHABLE)
;;    pred:       152 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                153 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_219 = PHI <.MEM_173(152), .MEM_329(153)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59445 => D#147ptD.0
  # DEBUG thisD.59446 => D#147ptD.0
  # DEBUG thisD.59447 => D#147ptD.0
  # .MEM_334 = VDEF <.MEM_219>
  MEM[(struct  &)&end_vcD.42662] ={v} {CLOBBER};
  # DEBUG thisD.59418 => &start_vcD.42661
  # DEBUG D#154ptD.0 => &start_vcD.42661.D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => start_vcD.42661.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => start_vcD.42661.D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &start_vcD.42661.D.40238
  # DEBUG thisD.59419 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_334>
  # PT = nonlocal escaped 
  _209 = MEM[(struct _Vector_baseD.39702 *)&start_vcD.42661]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _209
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59422 => D#155ptD.0
  # DEBUG __pD.59421 => _209
  # DEBUG __nD.59420 => D#148ptD.0
  if (_209 != 0B)
    goto <bb 155>;
  else
    goto <bb 156>;
;;    succ:       155 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                156 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 155, loop depth 0, count 0, freq 11, maybe hot
;;    prev block 154, next block 156, flags: (NEW, REACHABLE)
;;    pred:       154 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59426 => _209
  # DEBUG __aD.59424 => D#144ptD.0
  # DEBUG __nD.59425 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59429 => _209
  # DEBUG thisD.59427 => D#140ptD.0
  # DEBUG D.59428 => D#141ptD.0
  # .MEM_335 = VDEF <.MEM_334>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_209);
;;    succ:       156 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 156, loop depth 0, count 0, freq 14, maybe hot
;;    prev block 155, next block 157, flags: (NEW, REACHABLE)
;;    pred:       154 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                155 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_220 = PHI <.MEM_334(154), .MEM_335(155)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59430 => D#147ptD.0
  # DEBUG thisD.59431 => D#147ptD.0
  # DEBUG thisD.59432 => D#147ptD.0
  # .MEM_176 = VDEF <.MEM_220>
  start_vcD.42661 ={v} {CLOBBER};
  # .MEM_177 = VDEF <.MEM_176>
  end_vcD.42662 ={v} {CLOBBER};
  # VUSE <.MEM_177>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 156, next block 158, flags: (NEW, REACHABLE)
;;    pred:       2 (EH,EXECUTABLE)
<L45>: [LP 6]
  # DEBUG thisD.59448 => &D.42663
  # DEBUG thisD.59449 => &D.42663
  # DEBUG thisD.59458 => &D.42663
  # VUSE <.MEM_33>
  # PT = nonlocal escaped { D.42663 } (escaped)
  _174 = MEM[(charD.10 * *)&D.42663];
  # DEBUG D#1ptD.0 => &D.42663
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59459 => &D.42663
  if (&D.42663.D.11539._M_local_bufD.11541 != _174)
    goto <bb 158>;
  else
    goto <bb 159>;
;;    succ:       158 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                159 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 157, next block 159, flags: (NEW, REACHABLE)
;;    pred:       157 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42663.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59451 => &D.42663
  # DEBUG __sizeD.59450 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42663
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42663
  # DEBUG D#185ptD.0 => &D.42663._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59454 => _174
  # DEBUG __aD.59452 => D#183ptD.0
  # DEBUG __nD.59453 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59457 => _174
  # DEBUG thisD.59455 => D#179ptD.0
  # DEBUG D.59456 => D#180ptD.0
  # .MEM_384 = VDEF <.MEM_33>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_174);
;;    succ:       159 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 158, next block 160, flags: (NEW, REACHABLE)
;;    pred:       157 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                158 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_221 = PHI <.MEM_33(157), .MEM_384(158)>
  # DEBUG D#189ptD.0 => &D.42663._M_dataplusD.11519
  # DEBUG thisD.59460 => D#189ptD.0
  # DEBUG thisD.59461 => D#189ptD.0
  # DEBUG thisD.59462 => D#189ptD.0
  # .MEM_193 = VDEF <.MEM_221>
  D.42663 ={v} {CLOBBER};
  [LP 53] resx 8
;;    succ:       160 (EH,EXECUTABLE)

;;   basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 159, next block 161, flags: (NEW)
;;    pred:       159 (EH,EXECUTABLE)
<L97>: [LP 53]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 160, next block 162, flags: (NEW, REACHABLE)
;;    pred:       5 (EH,EXECUTABLE)
<L47>: [LP 9]
  # DEBUG thisD.59465 => &D.42665
  # DEBUG thisD.59466 => &D.42665
  # DEBUG thisD.59475 => &D.42665
  # VUSE <.MEM_40>
  # PT = nonlocal escaped { D.42665 } (escaped)
  _194 = MEM[(charD.10 * *)&D.42665];
  # DEBUG D#1ptD.0 => &D.42665
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59476 => &D.42665
  if (&D.42665.D.11539._M_local_bufD.11541 != _194)
    goto <bb 162>;
  else
    goto <bb 163>;
;;    succ:       162 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                163 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 161, next block 163, flags: (NEW, REACHABLE)
;;    pred:       161 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42665.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59468 => &D.42665
  # DEBUG __sizeD.59467 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42665
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42665
  # DEBUG D#185ptD.0 => &D.42665._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59471 => _194
  # DEBUG __aD.59469 => D#183ptD.0
  # DEBUG __nD.59470 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59474 => _194
  # DEBUG thisD.59472 => D#179ptD.0
  # DEBUG D.59473 => D#180ptD.0
  # .MEM_379 = VDEF <.MEM_40>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_194);
;;    succ:       163 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 162, next block 164, flags: (NEW, REACHABLE)
;;    pred:       161 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                162 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_222 = PHI <.MEM_40(161), .MEM_379(162)>
  # DEBUG D#189ptD.0 => &D.42665._M_dataplusD.11519
  # DEBUG thisD.59477 => D#189ptD.0
  # DEBUG thisD.59478 => D#189ptD.0
  # DEBUG thisD.59479 => D#189ptD.0
  # .MEM_191 = VDEF <.MEM_222>
  D.42665 ={v} {CLOBBER};
  [LP 54] resx 12
;;    succ:       164 (EH,EXECUTABLE)

;;   basic block 164, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 163, next block 165, flags: (NEW)
;;    pred:       163 (EH,EXECUTABLE)
<L98>: [LP 54]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 164, next block 166, flags: (NEW, REACHABLE)
;;    pred:       17 (EH,EXECUTABLE)
<L49>: [LP 11]
  # DEBUG thisD.59482 => &D.42667
  # DEBUG thisD.59483 => &D.42667
  # DEBUG thisD.59492 => &D.42667
  # VUSE <.MEM_50>
  # PT = nonlocal escaped { D.42667 } (escaped)
  _192 = MEM[(charD.10 * *)&D.42667];
  # DEBUG D#1ptD.0 => &D.42667
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59493 => &D.42667
  if (&D.42667.D.11539._M_local_bufD.11541 != _192)
    goto <bb 166>;
  else
    goto <bb 167>;
;;    succ:       166 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                167 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 166, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 165, next block 167, flags: (NEW, REACHABLE)
;;    pred:       165 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42667.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59485 => &D.42667
  # DEBUG __sizeD.59484 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42667
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42667
  # DEBUG D#185ptD.0 => &D.42667._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59488 => _192
  # DEBUG __aD.59486 => D#183ptD.0
  # DEBUG __nD.59487 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59491 => _192
  # DEBUG thisD.59489 => D#179ptD.0
  # DEBUG D.59490 => D#180ptD.0
  # .MEM_374 = VDEF <.MEM_50>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_192);
;;    succ:       167 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 166, next block 168, flags: (NEW, REACHABLE)
;;    pred:       165 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                166 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_223 = PHI <.MEM_50(165), .MEM_374(166)>
  # DEBUG D#189ptD.0 => &D.42667._M_dataplusD.11519
  # DEBUG thisD.59494 => D#189ptD.0
  # DEBUG thisD.59495 => D#189ptD.0
  # DEBUG thisD.59496 => D#189ptD.0
  # .MEM_189 = VDEF <.MEM_223>
  D.42667 ={v} {CLOBBER};
  [LP 55] resx 16
;;    succ:       168 (EH,EXECUTABLE)

;;   basic block 168, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 167, next block 169, flags: (NEW)
;;    pred:       167 (EH,EXECUTABLE)
<L99>: [LP 55]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 169, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 168, next block 170, flags: (NEW, REACHABLE)
;;    pred:       21 (EH,EXECUTABLE)
<L51>: [LP 13]
  # DEBUG thisD.59499 => &D.42669
  # DEBUG thisD.59500 => &D.42669
  # DEBUG thisD.59509 => &D.42669
  # VUSE <.MEM_57>
  # PT = nonlocal escaped { D.42669 } (escaped)
  _190 = MEM[(charD.10 * *)&D.42669];
  # DEBUG D#1ptD.0 => &D.42669
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59510 => &D.42669
  if (&D.42669.D.11539._M_local_bufD.11541 != _190)
    goto <bb 170>;
  else
    goto <bb 171>;
;;    succ:       170 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                171 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 170, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 169, next block 171, flags: (NEW, REACHABLE)
;;    pred:       169 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42669.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59502 => &D.42669
  # DEBUG __sizeD.59501 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42669
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42669
  # DEBUG D#185ptD.0 => &D.42669._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59505 => _190
  # DEBUG __aD.59503 => D#183ptD.0
  # DEBUG __nD.59504 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59508 => _190
  # DEBUG thisD.59506 => D#179ptD.0
  # DEBUG D.59507 => D#180ptD.0
  # .MEM_273 = VDEF <.MEM_57>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_190);
;;    succ:       171 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 171, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 170, next block 172, flags: (NEW, REACHABLE)
;;    pred:       169 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                170 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_224 = PHI <.MEM_57(169), .MEM_273(170)>
  # DEBUG D#189ptD.0 => &D.42669._M_dataplusD.11519
  # DEBUG thisD.59511 => D#189ptD.0
  # DEBUG thisD.59512 => D#189ptD.0
  # DEBUG thisD.59513 => D#189ptD.0
  # .MEM_64 = VDEF <.MEM_224>
  D.42669 ={v} {CLOBBER};
  [LP 56] resx 20
;;    succ:       172 (EH,EXECUTABLE)

;;   basic block 172, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 171, next block 173, flags: (NEW)
;;    pred:       171 (EH,EXECUTABLE)
<L100>: [LP 56]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 173, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 172, next block 174, flags: (NEW, REACHABLE)
;;    pred:       28 (EH,EXECUTABLE)
<L53>: [LP 16]
  # DEBUG thisD.59516 => &D.42671
  # DEBUG D#154ptD.0 => &D.42671.D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D.42671.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D.42671.D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D.42671.D.40238
  # DEBUG thisD.59517 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_70>
  # PT = nonlocal escaped 
  _65 = MEM[(struct _Vector_baseD.39702 *)&D.42671]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _65
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59520 => D#155ptD.0
  # DEBUG __pD.59519 => _65
  # DEBUG __nD.59518 => D#148ptD.0
  if (_65 != 0B)
    goto <bb 174>;
  else
    goto <bb 175>;
;;    succ:       174 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                175 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 174, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 173, next block 175, flags: (NEW, REACHABLE)
;;    pred:       173 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59524 => _65
  # DEBUG __aD.59522 => D#144ptD.0
  # DEBUG __nD.59523 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59527 => _65
  # DEBUG thisD.59525 => D#140ptD.0
  # DEBUG D.59526 => D#141ptD.0
  # .MEM_363 = VDEF <.MEM_70>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_65);
;;    succ:       175 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 175, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 174, next block 176, flags: (NEW, REACHABLE)
;;    pred:       173 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                174 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_225 = PHI <.MEM_70(173), .MEM_363(174)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59528 => D#147ptD.0
  # DEBUG thisD.59529 => D#147ptD.0
  # DEBUG thisD.59530 => D#147ptD.0
  # .MEM_186 = VDEF <.MEM_225>
  D.42671 ={v} {CLOBBER};
  [LP 15] resx 25
;;    succ:       176 (EH,EXECUTABLE)

;;   basic block 176, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 175, next block 177, flags: (NEW)
;;    pred:       175 (EH,EXECUTABLE)
<L101>: [LP 15]
  goto <bb 178> (<L54>);
;;    succ:       178 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 177, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 176, next block 178, flags: (NEW)
;;    pred:       27 (EH,EXECUTABLE)
<L82>: [LP 38]
;;    succ:       178 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 178, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 177, next block 179, flags: (NEW, REACHABLE)
;;    pred:       177 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                176 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_19 = PHI <.MEM_68(177), .MEM_186(176)>
<L54>:
  # DEBUG thisD.59531 => &D.42672
  # DEBUG thisD.59532 => &D.42672
  # DEBUG thisD.59541 => &D.42672
  # VUSE <.MEM_19>
  # PT = nonlocal escaped null { D.42672 } (escaped)
  _185 = MEM[(charD.10 * *)&D.42672];
  # DEBUG D#1ptD.0 => &D.42672
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59542 => &D.42672
  if (&D.42672.D.11539._M_local_bufD.11541 != _185)
    goto <bb 179>;
  else
    goto <bb 180>;
;;    succ:       179 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                180 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 179, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 178, next block 180, flags: (NEW, REACHABLE)
;;    pred:       178 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42672.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59534 => &D.42672
  # DEBUG __sizeD.59533 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42672
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42672
  # DEBUG D#185ptD.0 => &D.42672._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59537 => _185
  # DEBUG __aD.59535 => D#183ptD.0
  # DEBUG __nD.59536 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59540 => _185
  # DEBUG thisD.59538 => D#179ptD.0
  # DEBUG D.59539 => D#180ptD.0
  # .MEM_369 = VDEF <.MEM_19>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_185);
;;    succ:       180 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 180, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 179, next block 181, flags: (NEW, REACHABLE)
;;    pred:       178 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                179 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_226 = PHI <.MEM_19(178), .MEM_369(179)>
  # DEBUG D#189ptD.0 => &D.42672._M_dataplusD.11519
  # DEBUG thisD.59543 => D#189ptD.0
  # DEBUG thisD.59544 => D#189ptD.0
  # DEBUG thisD.59545 => D#189ptD.0
  # .MEM_187 = VDEF <.MEM_226>
  D.42672 ={v} {CLOBBER};
  [LP 57] resx 24
;;    succ:       181 (EH,EXECUTABLE)

;;   basic block 181, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 180, next block 182, flags: (NEW)
;;    pred:       180 (EH,EXECUTABLE)
<L102>: [LP 57]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 182, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 181, next block 183, flags: (NEW, REACHABLE)
;;    pred:       36 (EH,EXECUTABLE)
<L56>: [LP 18]
  # DEBUG thisD.59548 => &D.42675
  # DEBUG thisD.59549 => &D.42675
  # DEBUG thisD.59558 => &D.42675
  # VUSE <.MEM_76>
  # PT = nonlocal escaped null { D.42675 } (escaped)
  _188 = MEM[(charD.10 * *)&D.42675];
  # DEBUG D#1ptD.0 => &D.42675
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59559 => &D.42675
  if (&D.42675.D.11539._M_local_bufD.11541 != _188)
    goto <bb 183>;
  else
    goto <bb 184>;
;;    succ:       183 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                184 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 183, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 182, next block 184, flags: (NEW, REACHABLE)
;;    pred:       182 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42675.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59551 => &D.42675
  # DEBUG __sizeD.59550 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42675
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42675
  # DEBUG D#185ptD.0 => &D.42675._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59554 => _188
  # DEBUG __aD.59552 => D#183ptD.0
  # DEBUG __nD.59553 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59557 => _188
  # DEBUG thisD.59555 => D#179ptD.0
  # DEBUG D.59556 => D#180ptD.0
  # .MEM_294 = VDEF <.MEM_76>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_188);
;;    succ:       184 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 184, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 183, next block 185, flags: (NEW, REACHABLE)
;;    pred:       182 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                183 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_227 = PHI <.MEM_76(182), .MEM_294(183)>
  # DEBUG D#189ptD.0 => &D.42675._M_dataplusD.11519
  # DEBUG thisD.59560 => D#189ptD.0
  # DEBUG thisD.59561 => D#189ptD.0
  # DEBUG thisD.59562 => D#189ptD.0
  # .MEM_91 = VDEF <.MEM_227>
  D.42675 ={v} {CLOBBER};
  [LP 58] resx 31
;;    succ:       185 (EH,EXECUTABLE)

;;   basic block 185, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 184, next block 186, flags: (NEW)
;;    pred:       184 (EH,EXECUTABLE)
<L103>: [LP 58]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 186, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 185, next block 187, flags: (NEW, REACHABLE)
;;    pred:       64 (EH,EXECUTABLE)
<L60>: [LP 22]
  # DEBUG thisD.59565 => &D.42679
  # DEBUG thisD.59566 => &D.42679
  # DEBUG thisD.59575 => &D.42679
  # VUSE <.MEM_98>
  # PT = nonlocal escaped null { D.42679 } (escaped)
  _92 = MEM[(charD.10 * *)&D.42679];
  # DEBUG D#1ptD.0 => &D.42679
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59576 => &D.42679
  if (&D.42679.D.11539._M_local_bufD.11541 != _92)
    goto <bb 187>;
  else
    goto <bb 188>;
;;    succ:       187 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                188 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 187, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 186, next block 188, flags: (NEW, REACHABLE)
;;    pred:       186 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42679.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59568 => &D.42679
  # DEBUG __sizeD.59567 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42679
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42679
  # DEBUG D#185ptD.0 => &D.42679._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59571 => _92
  # DEBUG __aD.59569 => D#183ptD.0
  # DEBUG __nD.59570 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59574 => _92
  # DEBUG thisD.59572 => D#179ptD.0
  # DEBUG D.59573 => D#180ptD.0
  # .MEM_358 = VDEF <.MEM_98>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_92);
;;    succ:       188 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 188, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 187, next block 189, flags: (NEW, REACHABLE)
;;    pred:       186 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                187 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_228 = PHI <.MEM_98(186), .MEM_358(187)>
  # DEBUG D#189ptD.0 => &D.42679._M_dataplusD.11519
  # DEBUG thisD.59577 => D#189ptD.0
  # DEBUG thisD.59578 => D#189ptD.0
  # DEBUG thisD.59579 => D#189ptD.0
  # .MEM_183 = VDEF <.MEM_228>
  D.42679 ={v} {CLOBBER};
  [LP 59] resx 38
;;    succ:       189 (EH,EXECUTABLE)

;;   basic block 189, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 188, next block 190, flags: (NEW)
;;    pred:       188 (EH,EXECUTABLE)
<L104>: [LP 59]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 190, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 189, next block 191, flags: (NEW, REACHABLE)
;;    pred:       69 (EH,EXECUTABLE)
<L63>: [LP 26]
  # DEBUG thisD.59582 => &D.42682
  # DEBUG thisD.59583 => &D.42682
  # DEBUG thisD.59592 => &D.42682
  # VUSE <.MEM_103>
  # PT = nonlocal escaped null { D.42682 } (escaped)
  _184 = MEM[(charD.10 * *)&D.42682];
  # DEBUG D#1ptD.0 => &D.42682
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59593 => &D.42682
  if (&D.42682.D.11539._M_local_bufD.11541 != _184)
    goto <bb 191>;
  else
    goto <bb 192>;
;;    succ:       191 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                192 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 191, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 190, next block 192, flags: (NEW, REACHABLE)
;;    pred:       190 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42682.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59585 => &D.42682
  # DEBUG __sizeD.59584 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42682
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42682
  # DEBUG D#185ptD.0 => &D.42682._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59588 => _184
  # DEBUG __aD.59586 => D#183ptD.0
  # DEBUG __nD.59587 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59591 => _184
  # DEBUG thisD.59589 => D#179ptD.0
  # DEBUG D.59590 => D#180ptD.0
  # .MEM_309 = VDEF <.MEM_103>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_184);
;;    succ:       192 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 192, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 191, next block 193, flags: (NEW, REACHABLE)
;;    pred:       190 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                191 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_229 = PHI <.MEM_103(190), .MEM_309(191)>
  # DEBUG D#189ptD.0 => &D.42682._M_dataplusD.11519
  # DEBUG thisD.59594 => D#189ptD.0
  # DEBUG thisD.59595 => D#189ptD.0
  # DEBUG thisD.59596 => D#189ptD.0
  # .MEM_118 = VDEF <.MEM_229>
  D.42682 ={v} {CLOBBER};
  [LP 60] resx 47
;;    succ:       193 (EH,EXECUTABLE)

;;   basic block 193, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 192, next block 194, flags: (NEW)
;;    pred:       192 (EH,EXECUTABLE)
<L105>: [LP 60]
  goto <bb 208> (<L73>);
;;    succ:       208 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 194, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 193, next block 195, flags: (NEW, REACHABLE)
;;    pred:       94 (EH,EXECUTABLE)
<L66>: [LP 29]
  # DEBUG thisD.59599 => &D.42687
  # DEBUG thisD.59600 => &D.42687
  # DEBUG thisD.59609 => &D.42687
  # VUSE <.MEM_122>
  # PT = nonlocal escaped null { D.42687 } (escaped)
  _119 = MEM[(charD.10 * *)&D.42687];
  # DEBUG D#1ptD.0 => &D.42687
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59610 => &D.42687
  if (&D.42687.D.11539._M_local_bufD.11541 != _119)
    goto <bb 195>;
  else
    goto <bb 196>;
;;    succ:       195 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                196 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 195, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 194, next block 196, flags: (NEW, REACHABLE)
;;    pred:       194 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42687.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59602 => &D.42687
  # DEBUG __sizeD.59601 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42687
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42687
  # DEBUG D#185ptD.0 => &D.42687._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59605 => _119
  # DEBUG __aD.59603 => D#183ptD.0
  # DEBUG __nD.59604 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59608 => _119
  # DEBUG thisD.59606 => D#179ptD.0
  # DEBUG D.59607 => D#180ptD.0
  # .MEM_347 = VDEF <.MEM_122>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_119);
;;    succ:       196 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 196, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 195, next block 197, flags: (NEW, REACHABLE)
;;    pred:       194 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                195 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_230 = PHI <.MEM_122(194), .MEM_347(195)>
  # DEBUG D#189ptD.0 => &D.42687._M_dataplusD.11519
  # DEBUG thisD.59611 => D#189ptD.0
  # DEBUG thisD.59612 => D#189ptD.0
  # DEBUG thisD.59613 => D#189ptD.0
  # .MEM_180 = VDEF <.MEM_230>
  D.42687 ={v} {CLOBBER};
  [LP 61] resx 52
;;    succ:       197 (EH,EXECUTABLE)

;;   basic block 197, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 196, next block 198, flags: (NEW)
;;    pred:       196 (EH,EXECUTABLE)
<L106>: [LP 61]
  goto <bb 208> (<L73>);
;;    succ:       208 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 198, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 197, next block 199, flags: (NEW, REACHABLE)
;;    pred:       99 (EH,EXECUTABLE)
<L69>: [LP 33]
  # DEBUG thisD.59616 => &D.42690
  # DEBUG thisD.59617 => &D.42690
  # DEBUG thisD.59626 => &D.42690
  # VUSE <.MEM_127>
  # PT = nonlocal escaped null { D.42690 } (escaped)
  _181 = MEM[(charD.10 * *)&D.42690];
  # DEBUG D#1ptD.0 => &D.42690
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.59627 => &D.42690
  if (&D.42690.D.11539._M_local_bufD.11541 != _181)
    goto <bb 199>;
  else
    goto <bb 200>;
;;    succ:       199 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                200 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 199, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 198, next block 200, flags: (NEW, REACHABLE)
;;    pred:       198 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.42690.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.59619 => &D.42690
  # DEBUG __sizeD.59618 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.42690
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.42690
  # DEBUG D#185ptD.0 => &D.42690._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.59622 => _181
  # DEBUG __aD.59620 => D#183ptD.0
  # DEBUG __nD.59621 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.59625 => _181
  # DEBUG thisD.59623 => D#179ptD.0
  # DEBUG D.59624 => D#180ptD.0
  # .MEM_324 = VDEF <.MEM_127>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_181);
;;    succ:       200 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 200, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 199, next block 201, flags: (NEW, REACHABLE)
;;    pred:       198 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                199 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_231 = PHI <.MEM_127(198), .MEM_324(199)>
  # DEBUG D#189ptD.0 => &D.42690._M_dataplusD.11519
  # DEBUG thisD.59628 => D#189ptD.0
  # DEBUG thisD.59629 => D#189ptD.0
  # DEBUG thisD.59630 => D#189ptD.0
  # .MEM_144 = VDEF <.MEM_231>
  D.42690 ={v} {CLOBBER};
  [LP 31] resx 61
;;    succ:       201 (EH,EXECUTABLE)

;;   basic block 201, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 200, next block 202, flags: (NEW)
;;    pred:       200 (EH,EXECUTABLE)
<L107>: [LP 31]
  goto <bb 203> (<L72>);
;;    succ:       203 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 202, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 201, next block 203, flags: (NEW)
;;    pred:       98 (EH,EXECUTABLE)
<L92>: [LP 48]
;;    succ:       203 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 203, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 202, next block 204, flags: (NEW, REACHABLE)
;;    pred:       120 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                124 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                148 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                105 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                201 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                202 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_20 = PHI <.MEM_772(120), .MEM_778(124), .MEM_782(148), .MEM_770(105), .MEM_144(201), .MEM_759(202)>
<L72>:
  # .MEM_146 = VDEF <.MEM_20>
  evD.42689 ={v} {CLOBBER};
  # DEBUG thisD.59633 => &end_vcD.42662
  # DEBUG D#154ptD.0 => &end_vcD.42662.D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => end_vcD.42662.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => end_vcD.42662.D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &end_vcD.42662.D.40238
  # DEBUG thisD.59634 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_146>
  # PT = nonlocal escaped 
  _145 = MEM[(struct _Vector_baseD.39702 *)&end_vcD.42662]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _145
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59637 => D#155ptD.0
  # DEBUG __pD.59636 => _145
  # DEBUG __nD.59635 => D#148ptD.0
  if (_145 != 0B)
    goto <bb 204>;
  else
    goto <bb 205>;
;;    succ:       204 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                205 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 204, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 203, next block 205, flags: (NEW, REACHABLE)
;;    pred:       203 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59641 => _145
  # DEBUG __aD.59639 => D#144ptD.0
  # DEBUG __nD.59640 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59644 => _145
  # DEBUG thisD.59642 => D#140ptD.0
  # DEBUG D.59643 => D#141ptD.0
  # .MEM_341 = VDEF <.MEM_146>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_145);
;;    succ:       205 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 205, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 204, next block 206, flags: (NEW, REACHABLE)
;;    pred:       203 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                204 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_232 = PHI <.MEM_146(203), .MEM_341(204)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59645 => D#147ptD.0
  # DEBUG thisD.59646 => D#147ptD.0
  # DEBUG thisD.59647 => D#147ptD.0
  # .MEM_346 = VDEF <.MEM_232>
  MEM[(struct  &)&end_vcD.42662] ={v} {CLOBBER};
  [LP 24] resx 58
;;    succ:       206 (EH,EXECUTABLE)

;;   basic block 206, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 205, next block 207, flags: (NEW)
;;    pred:       205 (EH,EXECUTABLE)
<L108>: [LP 24]
  goto <bb 208> (<L73>);
;;    succ:       208 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 207, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 206, next block 208, flags: (NEW)
;;    pred:       68 (EH,EXECUTABLE)
<L88>: [LP 44]
;;    succ:       208 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 208, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 207, next block 209, flags: (NEW, REACHABLE)
;;    pred:       206 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                197 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                93 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                193 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                207 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_21 = PHI <.MEM_346(206), .MEM_180(197), .MEM_749(93), .MEM_742(75), .MEM_118(193), .MEM_731(207), .MEM_744(90)>
<L73>:
  # .MEM_120 = VDEF <.MEM_21>
  svD.42681 ={v} {CLOBBER};
  # DEBUG thisD.59648 => &start_vcD.42661
  # DEBUG D#154ptD.0 => &start_vcD.42661.D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => start_vcD.42661.D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => start_vcD.42661.D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &start_vcD.42661.D.40238
  # DEBUG thisD.59649 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _179 = MEM[(struct _Vector_baseD.39702 *)&start_vcD.42661]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _179
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59652 => D#155ptD.0
  # DEBUG __pD.59651 => _179
  # DEBUG __nD.59650 => D#148ptD.0
  if (_179 != 0B)
    goto <bb 209>;
  else
    goto <bb 210>;
;;    succ:       209 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                210 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 209, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 208, next block 210, flags: (NEW, REACHABLE)
;;    pred:       208 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59656 => _179
  # DEBUG __aD.59654 => D#144ptD.0
  # DEBUG __nD.59655 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59659 => _179
  # DEBUG thisD.59657 => D#140ptD.0
  # DEBUG D.59658 => D#141ptD.0
  # .MEM_352 = VDEF <.MEM_120>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_179);
;;    succ:       210 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 210, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 209, next block 211, flags: (NEW, REACHABLE)
;;    pred:       208 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                209 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_233 = PHI <.MEM_120(208), .MEM_352(209)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59660 => D#147ptD.0
  # DEBUG thisD.59661 => D#147ptD.0
  # DEBUG thisD.59662 => D#147ptD.0
  [LP 7] resx 44
;;    succ:       211 (EH,EXECUTABLE)

;;   basic block 211, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 210, next block 212, flags: (NEW)
;;    pred:       210 (EH,EXECUTABLE)
<L109>: [LP 7]
  goto <bb 213> (<L74>);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 212, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 211, next block 213, flags: (NEW)
;;    pred:       13 (EH,EXECUTABLE)
<L80>: [LP 36]
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 213, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 212, next block 214, flags: (NEW, REACHABLE)
;;    pred:       212 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                211 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                189 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                181 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                185 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                160 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                172 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                164 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                168 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_22 = PHI <.MEM_666(212), .MEM_233(211), .MEM_183(189), .MEM_718(58), .MEM_721(63), .MEM_187(181), .MEM_712(53), .MEM_91(185), .MEM_699(35), .MEM_708(45), .MEM_689(26), .MEM_193(160), .MEM_64(172), .MEM_191(164), .MEM_189(168)>
<L74>:
  # .MEM_88 = VDEF <.MEM_22>
  D.42677 ={v} {CLOBBER};
  # .MEM_93 = VDEF <.MEM_88>
  bsD.42674 ={v} {CLOBBER};
  # .MEM_195 = VDEF <.MEM_93>
  start_vcD.42661 ={v} {CLOBBER};
  # .MEM_196 = VDEF <.MEM_195>
  end_vcD.42662 ={v} {CLOBBER};
  # DEBUG D#573ptD.0 => &this_23(D)->_reserved_slotsD.40245
  # DEBUG thisD.59663 => D#573ptD.0
  # DEBUG D#154ptD.0 => &D#573ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#573ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#573ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#573ptD.0->D.40238
  # DEBUG thisD.59664 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_196>
  # PT = nonlocal escaped 
  _182 = MEM[(struct _Vector_baseD.39702 *)this_23(D) + 192B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _182
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59667 => D#155ptD.0
  # DEBUG __pD.59666 => _182
  # DEBUG __nD.59665 => D#148ptD.0
  if (_182 != 0B)
    goto <bb 214>;
  else
    goto <bb 215>;
;;    succ:       214 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                215 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 214, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 213, next block 215, flags: (NEW, REACHABLE)
;;    pred:       213 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59671 => _182
  # DEBUG __aD.59669 => D#144ptD.0
  # DEBUG __nD.59670 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59674 => _182
  # DEBUG thisD.59672 => D#140ptD.0
  # DEBUG D.59673 => D#141ptD.0
  # .MEM_389 = VDEF <.MEM_196>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_182);
;;    succ:       215 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 215, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 214, next block 216, flags: (NEW, REACHABLE)
;;    pred:       213 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                214 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_234 = PHI <.MEM_196(213), .MEM_389(214)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59675 => D#147ptD.0
  # DEBUG thisD.59676 => D#147ptD.0
  # DEBUG thisD.59677 => D#147ptD.0
  # .MEM_394 = VDEF <.MEM_234>
  MEM[(struct  &)this_23(D) + 192] ={v} {CLOBBER};
  [LP 4] resx 5
;;    succ:       216 (EH,EXECUTABLE)

;;   basic block 216, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 215, next block 217, flags: (NEW, REACHABLE)
;;    pred:       215 (EH,EXECUTABLE)
<L76>: [LP 4]
  # DEBUG D#572ptD.0 => &this_23(D)->_private_buf_occupancyD.40242
  # DEBUG thisD.59678 => D#572ptD.0
  # DEBUG D#154ptD.0 => &D#572ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#572ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#572ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#572ptD.0->D.40238
  # DEBUG thisD.59679 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_394>
  # PT = nonlocal escaped 
  _197 = MEM[(struct _Vector_baseD.39702 *)this_23(D) + 160B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _197
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59682 => D#155ptD.0
  # DEBUG __pD.59681 => _197
  # DEBUG __nD.59680 => D#148ptD.0
  if (_197 != 0B)
    goto <bb 217>;
  else
    goto <bb 218>;
;;    succ:       217 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                218 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 217, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 216, next block 218, flags: (NEW, REACHABLE)
;;    pred:       216 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59686 => _197
  # DEBUG __aD.59684 => D#144ptD.0
  # DEBUG __nD.59685 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59689 => _197
  # DEBUG thisD.59687 => D#140ptD.0
  # DEBUG D.59688 => D#141ptD.0
  # .MEM_395 = VDEF <.MEM_394>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_197);
;;    succ:       218 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 218, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 217, next block 219, flags: (NEW, REACHABLE)
;;    pred:       216 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                217 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_235 = PHI <.MEM_394(216), .MEM_395(217)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59690 => D#147ptD.0
  # DEBUG thisD.59691 => D#147ptD.0
  # DEBUG thisD.59692 => D#147ptD.0
  # .MEM_400 = VDEF <.MEM_235>
  MEM[(struct  &)this_23(D) + 160] ={v} {CLOBBER};
  [LP 3] resx 4
;;    succ:       219 (EH,EXECUTABLE)

;;   basic block 219, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 218, next block 220, flags: (NEW, REACHABLE)
;;    pred:       218 (EH,EXECUTABLE)
<L77>: [LP 3]
  # DEBUG D#571ptD.0 => &this_23(D)->_private_buf_sizeD.40241
  # DEBUG thisD.59693 => D#571ptD.0
  # DEBUG D#154ptD.0 => &D#571ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#571ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#571ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#571ptD.0->D.40238
  # DEBUG thisD.59694 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_400>
  # PT = nonlocal escaped 
  _198 = MEM[(struct _Vector_baseD.39702 *)this_23(D) + 136B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _198
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59697 => D#155ptD.0
  # DEBUG __pD.59696 => _198
  # DEBUG __nD.59695 => D#148ptD.0
  if (_198 != 0B)
    goto <bb 220>;
  else
    goto <bb 221>;
;;    succ:       220 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                221 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 220, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 219, next block 221, flags: (NEW, REACHABLE)
;;    pred:       219 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59701 => _198
  # DEBUG __aD.59699 => D#144ptD.0
  # DEBUG __nD.59700 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59704 => _198
  # DEBUG thisD.59702 => D#140ptD.0
  # DEBUG D.59703 => D#141ptD.0
  # .MEM_401 = VDEF <.MEM_400>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_198);
;;    succ:       221 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 221, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 220, next block 222, flags: (NEW, REACHABLE)
;;    pred:       219 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                220 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_236 = PHI <.MEM_400(219), .MEM_401(220)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59705 => D#147ptD.0
  # DEBUG thisD.59706 => D#147ptD.0
  # DEBUG thisD.59707 => D#147ptD.0
  # .MEM_406 = VDEF <.MEM_236>
  MEM[(struct  &)this_23(D) + 136] ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       222 (EH,EXECUTABLE)

;;   basic block 222, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 221, next block 223, flags: (NEW, REACHABLE)
;;    pred:       221 (EH,EXECUTABLE)
<L78>: [LP 2]
  # DEBUG D#570ptD.0 => &this_23(D)->_private_buf_vc_mapD.40240
  # DEBUG thisD.59708 => D#570ptD.0
  # DEBUG D#154ptD.0 => &D#570ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#570ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#570ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#570ptD.0->D.40238
  # DEBUG thisD.59709 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_406>
  # PT = nonlocal escaped 
  _199 = MEM[(struct _Vector_baseD.39702 *)this_23(D) + 112B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _199
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.59712 => D#155ptD.0
  # DEBUG __pD.59711 => _199
  # DEBUG __nD.59710 => D#148ptD.0
  if (_199 != 0B)
    goto <bb 223>;
  else
    goto <bb 224>;
;;    succ:       223 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                224 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 223, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 222, next block 224, flags: (NEW, REACHABLE)
;;    pred:       222 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.59716 => _199
  # DEBUG __aD.59714 => D#144ptD.0
  # DEBUG __nD.59715 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.59719 => _199
  # DEBUG thisD.59717 => D#140ptD.0
  # DEBUG D.59718 => D#141ptD.0
  # .MEM_407 = VDEF <.MEM_406>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZdlPvD.2766 (_199);
;;    succ:       224 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 224, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 223, next block 225, flags: (NEW, REACHABLE)
;;    pred:       222 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                223 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_237 = PHI <.MEM_406(222), .MEM_407(223)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.59720 => D#147ptD.0
  # DEBUG thisD.59721 => D#147ptD.0
  # DEBUG thisD.59722 => D#147ptD.0
  # .MEM_412 = VDEF <.MEM_237>
  MEM[(struct  &)this_23(D) + 112] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       225 (EH,EXECUTABLE)

;;   basic block 225, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 224, next block 1, flags: (NEW, REACHABLE)
;;    pred:       224 (EH,EXECUTABLE)
<L79>: [LP 1]
  # DEBUG D#569ptD.0 => &this_23(D)->D.40291
  # DEBUG thisD.59723 => D#569ptD.0
  # .MEM_413 = VDEF <.MEM_412>
  MEM[(struct BufferPolicyD.39592 *)this_23(D)].D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState12BufferPolicyED.39650 + 16B];
  # .MEM_414 = VDEF <.MEM_413>
  # USE = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  # CLB = nonlocal null { D.39650 D.40300 D.42648 D.42661 D.42662 D.42663 D.42665 D.42667 D.42669 D.42671 D.42672 D.42674 D.42675 D.42677 D.42679 D.42681 D.42682 D.42687 D.42689 D.42690 D.68319 D.68437 D.68482 D.68528 D.68556 D.68601 D.68629 D.68666 D.68711 D.68739 D.68759 D.68770 } (nonlocal, escaped)
  _ZN6ModuleD2EvD.30412 (_29);
  # .MEM_415 = VDEF <.MEM_414>
  MEM[(struct  &)this_23(D)] ={v} {CLOBBER};
  resx 1
;;    succ:      

}



;; Function void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int] (_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm, funcdef_no=2570, decl_uid=43028, cgraph_uid=1037, symbol_order=1038)


Pass statistics:
----------------

void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int] (struct _Deque_baseD.42881 * const thisD.43029, size_tD.2818 __num_elementsD.43030)
Eh tree:
   5 must_not_throw
   4 cleanup land:{2,<L2>}
   3 try land:{1,<L0>} catch:{}
     8 must_not_throw
     7 cleanup land:{4,<L5>}
     6 try land:{3,<L3>} catch:{}
{
  intD.9 * * __nstartD.69394;
  intD.9 * * __nfinishD.45909;
  intD.9 * * __nstartD.45908;
  const size_tD.2818 __num_nodesD.45905;
  const long unsigned intD.14 D.45906;
  const long unsigned intD.14 D.45907;
  long unsigned intD.14 _3;
  intD.9 * * _8;
  long unsigned intD.14 _15;
  long unsigned intD.14 _16;
  long unsigned intD.14 _17;
  long unsigned intD.14 _18;
  long unsigned intD.14 _20;
  intD.9 * * _23;
  intD.9 * _24;
  long unsigned intD.14 _26;
  long unsigned intD.14 _27;
  long unsigned intD.14 _28;
  intD.9 * _29;
  voidD.45 * _31;
  intD.9 * * _33;
  intD.9 * _40;
  intD.9 * _41;
  intD.9 * _42;
  intD.9 * _52;
  voidD.45 * _54;
  intD.9 * _56;
  long unsigned intD.14 _65;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __sizeD.57947 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _3 = __num_elements_2(D) >> 7;
  # RANGE [1, 144115188075855872] NONZERO 288230376151711743
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodesD.45905 => __num_nodes_4
  # RANGE [3, 144115188075855874] NONZERO 288230376151711743
  _5 = _3 + 3;
  # DEBUG __aD.57944 => &D.45906
  # DEBUG __bD.57945 => &D.45907
  # RANGE [8, 144115188075855874] NONZERO 288230376151711743
  _65 = MAX_EXPR <_5, 8>;
  # .MEM_11 = VDEF <.MEM_1(D)>
  this_10(D)->_M_implD.43041._M_map_sizeD.43044 = _65;
  # DEBUG D#477ptD.0 => this_10(D)
  # DEBUG __nD.57935 => D#1031ptD.0
  # DEBUG thisD.57936 => D#477ptD.0
  # DEBUG D#476ptD.0 => D#477ptD.0
  # DEBUG D#442ptD.0 => D#476ptD.0
  # DEBUG thisD.57911 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#475ptD.0 => &__map_allocD.57937
  # DEBUG __nD.57939 => D#1031ptD.0
  # DEBUG __aD.57938 => D#475ptD.0
  # DEBUG D#474ptD.0 => D#475ptD.0
  # DEBUG D#472ptD.0 => D#474ptD.0
  # DEBUG D#473ptD.0 => 0B
  # DEBUG __nD.57942 => D#1031ptD.0
  # DEBUG thisD.57940 => D#472ptD.0
  # DEBUG D.57941 => D#473ptD.0
  # DEBUG D#471ptD.0 => D#472ptD.0
  # DEBUG D#470ptD.0 => D#471ptD.0
  # DEBUG thisD.57876 => D#470ptD.0
  # RANGE [64, 1152921504606846992] NONZERO 2305843009213693944
  _26 = _65 * 8;
  # .MEM_34 = VDEF <.MEM_11>
  # PT = { D.69424 } (escaped heap)
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  _8 = _ZnwmD.2764 (_26);
  # DEBUG thisD.57924 => &__map_allocD.57937
  # DEBUG thisD.57913 => &__map_allocD.57937
  # .MEM_14 = VDEF <.MEM_34>
  this_10(D)->_M_implD.43041._M_mapD.43043 = _8;
  # VUSE <.MEM_14>
  _15 = this_10(D)->_M_implD.43041._M_map_sizeD.43044;
  # RANGE [0, 18446744073709551615]
  _16 = _15 - __num_nodes_4;
  # RANGE [0, 9223372036854775807] NONZERO 9223372036854775807
  _17 = _16 >> 1;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _18 = _17 * 8;
  # PT = { D.69424 } (escaped heap)
  __nstart_19 = _8 + _18;
  # DEBUG __nstartD.45908 => __nstart_19
  # RANGE [8, 1152921504606846976] NONZERO 2305843009213693944
  _20 = __num_nodes_4 * 8;
  # PT = { D.69424 } (escaped heap)
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinishD.45909 => __nfinish_21
  # DEBUG D#397ptD.0 => this_10(D)
  # DEBUG __nstartD.69394 => __nstart_19
  # DEBUG __nfinishD.69395 => __nfinish_21
  # DEBUG thisD.69396 => D#397ptD.0
  # DEBUG __curD.69397 => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_14(3), .MEM_60(6)>
  # PT = { D.69424 } (escaped heap)
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __curD.69397 => __nstart_75
  # DEBUG D#392ptD.0 => D#393ptD.0
  # DEBUG thisD.69411 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG __sizeD.56854 => 4
  # DEBUG D#390ptD.0 => &D#391ptD.0->_M_implD.43041
  # DEBUG D#386ptD.0 => D#390ptD.0
  # DEBUG __nD.69414 => NULL
  # DEBUG __aD.69413 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.69417 => NULL
  # DEBUG thisD.69415 => D#383ptD.0
  # DEBUG D.69416 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  [LP 3] # .MEM_59 = VDEF <.MEM_71>
  # PT = { D.69425 } (escaped heap)
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  _52 = _ZnwmD.2764 (512);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = VDEF <.MEM_59>
  *__nstart_75 = _52;
  # PT = { D.69424 } (escaped heap)
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __curD.69397 => __nstart_53
  # DEBUG __curD.69397 => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
  # PT = { D.69424 } (escaped heap)
  # __nstart_13 = PHI <__nstart_75(4)>
<L3>: [LP 3]
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _54 = __builtin_eh_pointerD.2738 (6);
  # .MEM_61 = VDEF <.MEM_59>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_begin_catchD.13514 (_54);
  # DEBUG thisD.69400 => D#394ptD.0
  # DEBUG __nstartD.69399 => __nstart_19
  # DEBUG __nfinishD.69398 => __nstart_13
  # DEBUG __nD.69401 => __nstart_19
  # DEBUG __nD.69401 => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_61(7), .MEM_74(11)>
  [LP 4] # .MEM_63 = VDEF <.MEM_55>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       13 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.69424 } (escaped heap)
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(12)>
  # .MEM_73 = PHI <.MEM_61(9), .MEM_62(12)>
  # DEBUG __nD.69401 => __nstart_72
  # VUSE <.MEM_73>
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _56 = *__nstart_72;
  # DEBUG thisD.69403 => D#395ptD.0
  # DEBUG __pD.69402 => _56
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#396ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.69407 => _56
  # DEBUG __aD.69405 => D#144ptD.0
  # DEBUG __nD.69406 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.69410 => _56
  # DEBUG thisD.69408 => D#140ptD.0
  # DEBUG D.69409 => D#141ptD.0
  # .MEM_62 = VDEF <.MEM_73>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  _ZdlPvD.2766 (_56);
  # PT = { D.69424 } (escaped heap)
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __nD.69401 => __nstart_57
  # DEBUG __nD.69401 => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_74 = PHI <.MEM_62(10)>
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       8 (EH,EXECUTABLE)
<L5>: [LP 4]
  [MNT 8] # .MEM_64 = VDEF <.MEM_63>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_end_catchD.13513 ();
  [LP 1] resx 7
;;    succ:       15 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       2 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_14(2), .MEM_60(5)>
  # DEBUG D#480ptD.0 => &this_10(D)->_M_implD.43041._M_startD.43045
  # DEBUG thisD.57953 => D#480ptD.0
  # DEBUG __new_nodeD.57954 => __nstart_19
  # .MEM_43 = VDEF <.MEM_58>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 16B]._M_nodeD.42943 = __nstart_19;
  # VUSE <.MEM_43>
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _24 = *__nstart_19;
  # .MEM_44 = VDEF <.MEM_43>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 16B]._M_firstD.42941 = _24;
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _42 = _24 + 512;
  # .MEM_45 = VDEF <.MEM_44>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 16B]._M_lastD.42942 = _42;
  # PT = { D.69424 } (escaped heap)
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#479ptD.0 => &this_10(D)->_M_implD.43041._M_finishD.43046
  # DEBUG thisD.57951 => D#479ptD.0
  # DEBUG __new_nodeD.57952 => _23
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 48B]._M_nodeD.42943 = _23;
  # VUSE <.MEM_46>
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _40 = MEM[(intD.9 * *)__nfinish_21 + -8B];
  # .MEM_47 = VDEF <.MEM_46>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 48B]._M_firstD.42941 = _40;
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _41 = _40 + 512;
  # .MEM_48 = VDEF <.MEM_47>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 48B]._M_lastD.42942 = _41;
  # .MEM_25 = VDEF <.MEM_48>
  this_10(D)->_M_implD.43041._M_startD.43045._M_curD.42940 = _24;
  # DEBUG __sizeD.57949 => 4
  # RANGE [0, 127] NONZERO 127
  _27 = __num_elements_2(D) & 127;
  # RANGE [0, 508] NONZERO 508
  _28 = _27 * 4;
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _29 = _40 + _28;
  # .MEM_30 = VDEF <.MEM_25>
  this_10(D)->_M_implD.43041._M_finishD.43046._M_curD.42940 = _29;
  # VUSE <.MEM_30>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L0>: [LP 1]
  # VUSE <.MEM_64>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _31 = __builtin_eh_pointerD.2738 (3);
  # .MEM_32 = VDEF <.MEM_64>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_begin_catchD.13514 (_31);
  # DEBUG D#478ptD.0 => this_10(D)->_M_implD.43041._M_map_sizeD.43044
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _33 = this_10(D)->_M_implD.43041._M_mapD.43043;
  # DEBUG D#445ptD.0 => this_10(D)
  # DEBUG D#446ptD.0 => D#478ptD.0
  # DEBUG __pD.57955 => _33
  # DEBUG thisD.57957 => D#445ptD.0
  # DEBUG __nD.57956 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.57958
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.57961 => _33
  # DEBUG __aD.57959 => D#265ptD.0
  # DEBUG __nD.57960 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.57964 => _33
  # DEBUG thisD.57962 => D#261ptD.0
  # DEBUG D.57963 => D#262ptD.0
  # .MEM_49 = VDEF <.MEM_32>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  _ZdlPvD.2766 (_33);
  # DEBUG thisD.57611 => &__map_allocD.57958
  # DEBUG thisD.57590 => &__map_allocD.57958
  # .MEM_35 = VDEF <.MEM_49>
  this_10(D)->_M_implD.43041._M_mapD.43043 = 0B;
  # .MEM_36 = VDEF <.MEM_35>
  this_10(D)->_M_implD.43041._M_map_sizeD.43044 = 0;
  [LP 2] # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       16 (EH,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 1, flags: (NEW, REACHABLE)
;;    pred:       15 (EH,EXECUTABLE)
<L2>: [LP 2]
  [MNT 5] # .MEM_38 = VDEF <.MEM_37>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_end_catchD.13513 ();
  resx 4
;;    succ:      

}


Creating dr for this_10(D)->_M_impl._M_map_size
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_10(D)
	Access function 0: 64
	Access function 1: 0
Creating dr for *__nstart_75
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_75
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_2
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < __nstart_13
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) __nstart_13 - (unsigned long) (__nstart_19 + 8)) + 7) / 8, bounded by 2305843009213693951
Analyzing # of iterations of loop 1
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < __nstart_13
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) __nstart_13 - (unsigned long) (__nstart_19 + 8)) + 7) / 8, bounded by 2305843009213693951
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Creating dr for *__nstart_72
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 256
	base_object: *_8 + _17 * 8
	Access function 0: {0B, +, 8}_1
Analyzing # of iterations of loop 1
  exit condition [__nstart_19 + 8, + , 8](no_overflow) < __nstart_13
  bounds on difference of bases: -7 ... 18446744073709551607
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) __nstart_13 - (unsigned long) (__nstart_19 + 8)) + 7) / 8, bounded by 2305843009213693951
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 16B]
	Access function 0: 192
Creating dr for *__nstart_19
analyze_innermost: success.
	base_address: _8 + _17 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__nstart_19
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 16B]
	Access function 0: 64
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 16B]
	Access function 0: 128
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 48B]
	Access function 0: 192
Creating dr for MEM[(int * *)__nfinish_21 + -8B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:397, generic-match.c:4039
Applying pattern match.pd:697, generic-match.c:1350
Applying pattern match.pd:625, generic-match.c:1309
success.
Applying pattern match.pd:715, generic-match.c:1389
Applying pattern match.pd:397, generic-match.c:4039
Applying pattern match.pd:715, generic-match.c:1389
	base_address: _8 + (_3 + _17) * 8
	offset from base address: 0
	constant offset from base address: 0(OVF)
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)__nfinish_21 + -8B]
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 48B]
	Access function 0: 64
Creating dr for MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)this_10(D) + 48B]
	Access function 0: 128
Creating dr for this_10(D)->_M_impl._M_start._M_cur
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *this_10(D)
	Access function 0: 0
	Access function 1: 128
	Access function 2: 0
Creating dr for this_10(D)->_M_impl._M_finish._M_cur
analyze_innermost: success.
	base_address: this_10(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: *this_10(D)
	Access function 0: 0
	Access function 1: 384
	Access function 2: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:26)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:19, LOOPS:2, CONDITIONS:5, STMTS:177)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_14 bb_3 })
  {
    <bb 2>:
    # DEBUG __size => 4
    _3 = __num_elements_2(D) >> 7;
    __num_nodes_4 = _3 + 1;
    # DEBUG __num_nodes => __num_nodes_4
    _5 = _3 + 3;
    # DEBUG __a => &D.45906
    # DEBUG __b => &D.45907
    _65 = MAX_EXPR <_5, 8>;
    # .MEM_11 = VDEF <.MEM_1(D)>
    this_10(D)->_M_impl._M_map_size = _65;
    # DEBUG D#477 => this_10(D)
    # DEBUG __n => D#1031
    # DEBUG this => D#477
    # DEBUG D#476 => D#477
    # DEBUG D#442 => D#476
    # DEBUG this => D#442
    # DEBUG D#441 => D#442
    # DEBUG this => D#441
    # DEBUG this => NULL
    # DEBUG D.57578 => NULL
    # DEBUG this => NULL
    # DEBUG D#475 => &__map_alloc
    # DEBUG __n => D#1031
    # DEBUG __a => D#475
    # DEBUG D#474 => D#475
    # DEBUG D#472 => D#474
    # DEBUG D#473 => 0B
    # DEBUG __n => D#1031
    # DEBUG this => D#472
    # DEBUG D.57941 => D#473
    # DEBUG D#471 => D#472
    # DEBUG D#470 => D#471
    # DEBUG this => D#470
    _26 = _65 * 8;
    # .MEM_34 = VDEF <.MEM_11>
    _8 = operator new (_26);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc
    # .MEM_14 = VDEF <.MEM_34>
    this_10(D)->_M_impl._M_map = _8;
    # VUSE <.MEM_14>
    _15 = this_10(D)->_M_impl._M_map_size;
    _16 = _15 - __num_nodes_4;
    _17 = _16 >> 1;
    _18 = _17 * 8;
    __nstart_19 = _8 + _18;
    # DEBUG __nstart => __nstart_19
    _20 = __num_nodes_4 * 8;
    __nfinish_21 = __nstart_19 + _20;
    # DEBUG __nfinish => __nfinish_21
    # DEBUG D#397 => this_10(D)
    # DEBUG __nstart => __nstart_19
    # DEBUG __nfinish => __nfinish_21
    # DEBUG this => D#397
    # DEBUG __cur => __nstart_19
    if (__nstart_19 >= __nfinish_21)
      goto <bb 14>;
    else
      goto <bb 3>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 })
  {
    <bb 3>:

  }
  bb_7 (preds = {bb_4 }, succs = {bb_8 bb_9 })
  {
    # __nstart_13 = PHI <__nstart_75(4)>
  <L3>:
    # VUSE <.MEM_59>
    _54 = __builtin_eh_pointer (6);
    # .MEM_61 = VDEF <.MEM_59>
    __cxa_begin_catch (_54);
    # DEBUG this => D#394
    # DEBUG __nstart => __nstart_19
    # DEBUG __nfinish => __nstart_13
    # DEBUG __n => __nstart_19
    # DEBUG __n => __nstart_19
    if (__nstart_19 >= __nstart_13)
      goto <bb 8>;
    else
      goto <bb 9>;

  }
  bb_8 (preds = {bb_7 bb_17 }, succs = {bb_13 })
  {
    <bb 8>:
    # .MEM_55 = PHI <.MEM_61(7), .MEM_74(17)>
    # .MEM_63 = VDEF <.MEM_55>
    __cxa_rethrow ();

  }
  bb_9 (preds = {bb_7 }, succs = {bb_10 })
  {
    <bb 9>:

  }
  bb_11 (preds = {bb_10 }, succs = {bb_17 })
  {
    <bb 11>:
    # .MEM_74 = PHI <.MEM_62(10)>

  }
  bb_17 (preds = {bb_11 }, succs = {bb_8 })
  {
    <bb 17>:
    goto <bb 8>;

  }
  bb_13 (preds = {bb_8 }, succs = {bb_15 })
  {
  <L5>:
    # .MEM_64 = VDEF <.MEM_63>
    __cxa_end_catch ();
    resx 7

  }
  bb_14 (preds = {bb_2 bb_5 }, succs = {bb_18 })
  {
    <bb 14>:
    # .MEM_58 = PHI <.MEM_14(2), .MEM_60(5)>

  }
  bb_18 (preds = {bb_14 }, succs = {bb_1 })
  {
    <bb 18>:
    # DEBUG D#480 => &this_10(D)->_M_impl._M_start
    # DEBUG this => D#480
    # DEBUG __new_node => __nstart_19
    # .MEM_43 = VDEF <.MEM_58>
    MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_node = __nstart_19;
    # VUSE <.MEM_43>
    _24 = *__nstart_19;
    # .MEM_44 = VDEF <.MEM_43>
    MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_first = _24;
    # DEBUG __size => 4
    _42 = _24 + 512;
    # .MEM_45 = VDEF <.MEM_44>
    MEM[(struct _Deque_iterator *)this_10(D) + 16B]._M_last = _42;
    _23 = __nfinish_21 + 18446744073709551608;
    # DEBUG D#479 => &this_10(D)->_M_impl._M_finish
    # DEBUG this => D#479
    # DEBUG __new_node => _23
    # .MEM_46 = VDEF <.MEM_45>
    MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_node = _23;
    # VUSE <.MEM_46>
    _40 = MEM[(int * *)__nfinish_21 + -8B];
    # .MEM_47 = VDEF <.MEM_46>
    MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_first = _40;
    # DEBUG __size => 4
    _41 = _40 + 512;
    # .MEM_48 = VDEF <.MEM_47>
    MEM[(struct _Deque_iterator *)this_10(D) + 48B]._M_last = _41;
    # .MEM_25 = VDEF <.MEM_48>
    this_10(D)->_M_impl._M_start._M_cur = _24;
    # DEBUG __size => 4
    _27 = __num_elements_2(D) & 127;
    _28 = _27 * 4;
    _29 = _40 + _28;
    # .MEM_30 = VDEF <.MEM_25>
    this_10(D)->_M_impl._M_finish._M_cur = _29;
    # VUSE <.MEM_30>
    return;

  }
  bb_15 (preds = {bb_13 }, succs = {bb_16 })
  {
  <L0>:
    # VUSE <.MEM_64>
    _31 = __builtin_eh_pointer (3);
    # .MEM_32 = VDEF <.MEM_64>
    __cxa_begin_catch (_31);
    # DEBUG D#478 => this_10(D)->_M_impl._M_map_size
    # VUSE <.MEM_32>
    _33 = this_10(D)->_M_impl._M_map;
    # DEBUG D#445 => this_10(D)
    # DEBUG D#446 => D#478
    # DEBUG __p => _33
    # DEBUG this => D#445
    # DEBUG __n => D#446
    # DEBUG D#444 => D#446
    # DEBUG D#443 => D#445
    # DEBUG D#442 => D#443
    # DEBUG this => D#442
    # DEBUG D#441 => D#442
    # DEBUG this => D#441
    # DEBUG this => NULL
    # DEBUG D.57578 => NULL
    # DEBUG this => NULL
    # DEBUG D#265 => &__map_alloc
    # DEBUG D#266 => D#444
    # DEBUG __p => _33
    # DEBUG __a => D#265
    # DEBUG __n => D#266
    # DEBUG D#264 => D#266
    # DEBUG D#263 => D#265
    # DEBUG D#261 => D#263
    # DEBUG D#262 => D#264
    # DEBUG __p => _33
    # DEBUG this => D#261
    # DEBUG D.57963 => D#262
    # .MEM_49 = VDEF <.MEM_32>
    operator delete (_33);
    # DEBUG this => &__map_alloc
    # DEBUG this => &__map_alloc
    # .MEM_35 = VDEF <.MEM_49>
    this_10(D)->_M_impl._M_map = 0B;
    # .MEM_36 = VDEF <.MEM_35>
    this_10(D)->_M_impl._M_map_size = 0;
    # .MEM_37 = VDEF <.MEM_36>
    __cxa_rethrow ();

  }
  bb_16 (preds = {bb_15 }, succs = {})
  {
  <L2>:
    # .MEM_38 = VDEF <.MEM_37>
    __cxa_end_catch ();
    resx 4

  }
  loop_1 (header = 10, latch = 12, niter = (((unsigned long) __nstart_13 - (unsigned long) (__nstart_19 + 8)) + 7) / 8, upper_bound = 2305843009213693951)
  {
    bb_10 (preds = {bb_9 bb_12 }, succs = {bb_11 bb_12 })
    {
      <bb 10>:
      # __nstart_72 = PHI <__nstart_19(9), __nstart_57(12)>
      # .MEM_73 = PHI <.MEM_61(9), .MEM_62(12)>
      # DEBUG __n => __nstart_72
      # VUSE <.MEM_73>
      _56 = *__nstart_72;
      # DEBUG this => D#395
      # DEBUG __p => _56
      # DEBUG __size => 4
      # DEBUG D#167 => &D#396->_M_impl
      # DEBUG D#144 => D#167
      # DEBUG __p => _56
      # DEBUG __a => D#144
      # DEBUG __n => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG D#140 => D#142
      # DEBUG D#141 => D#143
      # DEBUG __p => _56
      # DEBUG this => D#140
      # DEBUG D.69409 => D#141
      # .MEM_62 = VDEF <.MEM_73>
      operator delete (_56);
      __nstart_57 = __nstart_72 + 8;
      # DEBUG __n => __nstart_57
      # DEBUG __n => __nstart_57
      if (__nstart_57 >= __nstart_13)
        goto <bb 11>;
      else
        goto <bb 12>;

    }
    bb_12 (preds = {bb_10 }, succs = {bb_10 })
    {
      <bb 12>:
      goto <bb 10>;

    }
  }
  loop_2 (header = 4, latch = 6, niter = , upper_bound = 2305843009213693951)
  {
    bb_4 (preds = {bb_3 bb_6 }, succs = {bb_5 bb_7 })
    {
      <bb 4>:
      # .MEM_71 = PHI <.MEM_14(3), .MEM_60(6)>
      # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
      # DEBUG __cur => __nstart_75
      # DEBUG D#392 => D#393
      # DEBUG this => D#392
      # DEBUG D#391 => D#392
      # DEBUG __size => 4
      # DEBUG D#390 => &D#391->_M_impl
      # DEBUG D#386 => D#390
      # DEBUG __n => NULL
      # DEBUG __a => D#386
      # DEBUG D#385 => D#386
      # DEBUG D#383 => D#385
      # DEBUG D#384 => 0B
      # DEBUG __n => NULL
      # DEBUG this => D#383
      # DEBUG D.69416 => D#384
      # DEBUG D#382 => D#383
      # DEBUG D#381 => D#382
      # DEBUG this => D#381
      # .MEM_59 = VDEF <.MEM_71>
      _52 = operator new (512);

    }
    bb_5 (preds = {bb_4 }, succs = {bb_14 bb_6 })
    {
      <bb 5>:
      # .MEM_60 = VDEF <.MEM_59>
      *__nstart_75 = _52;
      __nstart_53 = __nstart_75 + 8;
      # DEBUG __cur => __nstart_53
      # DEBUG __cur => __nstart_53
      if (__nfinish_21 <= __nstart_53)
        goto <bb 14>;
      else
        goto <bb 6>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_4 })
    {
      <bb 6>:
      goto <bb 4>;

    }
  }
}

Pass statistics:
----------------

void std::_Deque_base<_Tp, _Alloc>::_M_initialize_map(std::size_t) [with _Tp = int; _Alloc = std::allocator<int>; std::size_t = long unsigned int] (struct _Deque_baseD.42881 * const thisD.43029, size_tD.2818 __num_elementsD.43030)
Eh tree:
   5 must_not_throw
   4 cleanup land:{2,<L2>}
   3 try land:{1,<L0>} catch:{}
     8 must_not_throw
     7 cleanup land:{4,<L5>}
     6 try land:{3,<L3>} catch:{}
{
  intD.9 * * __nstartD.69394;
  intD.9 * * __nfinishD.45909;
  intD.9 * * __nstartD.45908;
  const size_tD.2818 __num_nodesD.45905;
  const long unsigned intD.14 D.45906;
  const long unsigned intD.14 D.45907;
  long unsigned intD.14 _3;
  intD.9 * * _8;
  long unsigned intD.14 _15;
  long unsigned intD.14 _16;
  long unsigned intD.14 _17;
  long unsigned intD.14 _18;
  long unsigned intD.14 _20;
  intD.9 * * _23;
  intD.9 * _24;
  long unsigned intD.14 _26;
  long unsigned intD.14 _27;
  long unsigned intD.14 _28;
  intD.9 * _29;
  voidD.45 * _31;
  intD.9 * * _33;
  intD.9 * _40;
  intD.9 * _41;
  intD.9 * _42;
  intD.9 * _52;
  voidD.45 * _54;
  intD.9 * _56;
  long unsigned intD.14 _65;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG __sizeD.57947 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _3 = __num_elements_2(D) >> 7;
  # RANGE [1, 144115188075855872] NONZERO 288230376151711743
  __num_nodes_4 = _3 + 1;
  # DEBUG __num_nodesD.45905 => __num_nodes_4
  # RANGE [3, 144115188075855874] NONZERO 288230376151711743
  _5 = _3 + 3;
  # DEBUG __aD.57944 => &D.45906
  # DEBUG __bD.57945 => &D.45907
  # RANGE [8, 144115188075855874] NONZERO 288230376151711743
  _65 = MAX_EXPR <_5, 8>;
  # .MEM_11 = VDEF <.MEM_1(D)>
  this_10(D)->_M_implD.43041._M_map_sizeD.43044 = _65;
  # DEBUG D#477ptD.0 => this_10(D)
  # DEBUG __nD.57935 => D#1031ptD.0
  # DEBUG thisD.57936 => D#477ptD.0
  # DEBUG D#476ptD.0 => D#477ptD.0
  # DEBUG D#442ptD.0 => D#476ptD.0
  # DEBUG thisD.57911 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#475ptD.0 => &__map_allocD.57937
  # DEBUG __nD.57939 => D#1031ptD.0
  # DEBUG __aD.57938 => D#475ptD.0
  # DEBUG D#474ptD.0 => D#475ptD.0
  # DEBUG D#472ptD.0 => D#474ptD.0
  # DEBUG D#473ptD.0 => 0B
  # DEBUG __nD.57942 => D#1031ptD.0
  # DEBUG thisD.57940 => D#472ptD.0
  # DEBUG D.57941 => D#473ptD.0
  # DEBUG D#471ptD.0 => D#472ptD.0
  # DEBUG D#470ptD.0 => D#471ptD.0
  # DEBUG thisD.57876 => D#470ptD.0
  # RANGE [64, 1152921504606846992] NONZERO 2305843009213693944
  _26 = _65 * 8;
  # .MEM_34 = VDEF <.MEM_11>
  # PT = { D.69424 } (escaped heap)
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  _8 = _ZnwmD.2764 (_26);
  # DEBUG thisD.57924 => &__map_allocD.57937
  # DEBUG thisD.57913 => &__map_allocD.57937
  # .MEM_14 = VDEF <.MEM_34>
  this_10(D)->_M_implD.43041._M_mapD.43043 = _8;
  # VUSE <.MEM_14>
  _15 = this_10(D)->_M_implD.43041._M_map_sizeD.43044;
  # RANGE [0, 18446744073709551615]
  _16 = _15 - __num_nodes_4;
  # RANGE [0, 9223372036854775807] NONZERO 9223372036854775807
  _17 = _16 >> 1;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _18 = _17 * 8;
  # PT = { D.69424 } (escaped heap)
  __nstart_19 = _8 + _18;
  # DEBUG __nstartD.45908 => __nstart_19
  # RANGE [8, 1152921504606846976] NONZERO 2305843009213693944
  _20 = __num_nodes_4 * 8;
  # PT = { D.69424 } (escaped heap)
  __nfinish_21 = __nstart_19 + _20;
  # DEBUG __nfinishD.45909 => __nfinish_21
  # DEBUG D#397ptD.0 => this_10(D)
  # DEBUG __nstartD.69394 => __nstart_19
  # DEBUG __nfinishD.69395 => __nfinish_21
  # DEBUG thisD.69396 => D#397ptD.0
  # DEBUG __curD.69397 => __nstart_19
  if (__nstart_19 >= __nfinish_21)
    goto <bb 14>;
  else
    goto <bb 3>;
;;    succ:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_14(3), .MEM_60(6)>
  # PT = { D.69424 } (escaped heap)
  # __nstart_75 = PHI <__nstart_19(3), __nstart_53(6)>
  # DEBUG __curD.69397 => __nstart_75
  # DEBUG D#392ptD.0 => D#393ptD.0
  # DEBUG thisD.69411 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG __sizeD.56854 => 4
  # DEBUG D#390ptD.0 => &D#391ptD.0->_M_implD.43041
  # DEBUG D#386ptD.0 => D#390ptD.0
  # DEBUG __nD.69414 => NULL
  # DEBUG __aD.69413 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.69417 => NULL
  # DEBUG thisD.69415 => D#383ptD.0
  # DEBUG D.69416 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  [LP 3] # .MEM_59 = VDEF <.MEM_71>
  # PT = { D.69425 } (escaped heap)
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  _52 = _ZnwmD.2764 (512);
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 (EH,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = VDEF <.MEM_59>
  *__nstart_75 = _52;
  # PT = { D.69424 } (escaped heap)
  __nstart_53 = __nstart_75 + 8;
  # DEBUG __curD.69397 => __nstart_53
  # DEBUG __curD.69397 => __nstart_53
  if (__nfinish_21 <= __nstart_53)
    goto <bb 14>;
  else
    goto <bb 6>;
;;    succ:       14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       5 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 4>;
;;    succ:       4 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       4 (EH,EXECUTABLE)
  # PT = { D.69424 } (escaped heap)
  # __nstart_13 = PHI <__nstart_75(4)>
<L3>: [LP 3]
  # VUSE <.MEM_59>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _54 = __builtin_eh_pointerD.2738 (6);
  # .MEM_61 = VDEF <.MEM_59>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_begin_catchD.13514 (_54);
  # DEBUG thisD.69400 => D#394ptD.0
  # DEBUG __nstartD.69399 => __nstart_19
  # DEBUG __nfinishD.69398 => __nstart_13
  # DEBUG __nD.69401 => __nstart_19
  # DEBUG __nD.69401 => __nstart_19
  if (__nstart_19 >= __nstart_13)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_61(7), .MEM_74(17)>
  [LP 4] # .MEM_63 = VDEF <.MEM_55>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       13 (EH,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.69424 } (escaped heap)
  # __nstart_72 = PHI <__nstart_19(9), __nstart_57(12)>
  # .MEM_73 = PHI <.MEM_61(9), .MEM_62(12)>
  # DEBUG __nD.69401 => __nstart_72
  # VUSE <.MEM_73>
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _56 = *__nstart_72;
  # DEBUG thisD.69403 => D#395ptD.0
  # DEBUG __pD.69402 => _56
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#396ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.69407 => _56
  # DEBUG __aD.69405 => D#144ptD.0
  # DEBUG __nD.69406 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.69410 => _56
  # DEBUG thisD.69408 => D#140ptD.0
  # DEBUG D.69409 => D#141ptD.0
  # .MEM_62 = VDEF <.MEM_73>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  _ZdlPvD.2766 (_56);
  # PT = { D.69424 } (escaped heap)
  __nstart_57 = __nstart_72 + 8;
  # DEBUG __nD.69401 => __nstart_57
  # DEBUG __nD.69401 => __nstart_57
  if (__nstart_57 >= __nstart_13)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 10, next block 17, flags: (NEW)
;;    pred:       10 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_74 = PHI <.MEM_62(10)>
;;    succ:       17 [100.0%]  (FALLTHRU)

;;   basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 12, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU)
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 17, next block 13, flags: (NEW)
;;    pred:       10 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 10>;
;;    succ:       10 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       8 (EH,EXECUTABLE)
<L5>: [LP 4]
  [MNT 8] # .MEM_64 = VDEF <.MEM_63>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_end_catchD.13513 ();
  [LP 1] resx 7
;;    succ:       15 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 13, next block 18, flags: (NEW, REACHABLE)
;;    pred:       2 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_58 = PHI <.MEM_14(2), .MEM_60(5)>
;;    succ:       18 [100.0%]  (FALLTHRU)

;;   basic block 18, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG D#480ptD.0 => &this_10(D)->_M_implD.43041._M_startD.43045
  # DEBUG thisD.57953 => D#480ptD.0
  # DEBUG __new_nodeD.57954 => __nstart_19
  # .MEM_43 = VDEF <.MEM_58>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 16B]._M_nodeD.42943 = __nstart_19;
  # VUSE <.MEM_43>
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _24 = *__nstart_19;
  # .MEM_44 = VDEF <.MEM_43>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 16B]._M_firstD.42941 = _24;
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _42 = _24 + 512;
  # .MEM_45 = VDEF <.MEM_44>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 16B]._M_lastD.42942 = _42;
  # PT = { D.69424 } (escaped heap)
  _23 = __nfinish_21 + 18446744073709551608;
  # DEBUG D#479ptD.0 => &this_10(D)->_M_implD.43041._M_finishD.43046
  # DEBUG thisD.57951 => D#479ptD.0
  # DEBUG __new_nodeD.57952 => _23
  # .MEM_46 = VDEF <.MEM_45>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 48B]._M_nodeD.42943 = _23;
  # VUSE <.MEM_46>
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _40 = MEM[(intD.9 * *)__nfinish_21 + -8B];
  # .MEM_47 = VDEF <.MEM_46>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 48B]._M_firstD.42941 = _40;
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _41 = _40 + 512;
  # .MEM_48 = VDEF <.MEM_47>
  MEM[(struct _Deque_iteratorD.42908 *)this_10(D) + 48B]._M_lastD.42942 = _41;
  # .MEM_25 = VDEF <.MEM_48>
  this_10(D)->_M_implD.43041._M_startD.43045._M_curD.42940 = _24;
  # DEBUG __sizeD.57949 => 4
  # RANGE [0, 127] NONZERO 127
  _27 = __num_elements_2(D) & 127;
  # RANGE [0, 508] NONZERO 508
  _28 = _27 * 4;
  # PT = nonlocal escaped { D.69425 } (escaped heap)
  _29 = _40 + _28;
  # .MEM_30 = VDEF <.MEM_25>
  this_10(D)->_M_implD.43041._M_finishD.43046._M_curD.42940 = _29;
  # VUSE <.MEM_30>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 18, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L0>: [LP 1]
  # VUSE <.MEM_64>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _31 = __builtin_eh_pointerD.2738 (3);
  # .MEM_32 = VDEF <.MEM_64>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_begin_catchD.13514 (_31);
  # DEBUG D#478ptD.0 => this_10(D)->_M_implD.43041._M_map_sizeD.43044
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _33 = this_10(D)->_M_implD.43041._M_mapD.43043;
  # DEBUG D#445ptD.0 => this_10(D)
  # DEBUG D#446ptD.0 => D#478ptD.0
  # DEBUG __pD.57955 => _33
  # DEBUG thisD.57957 => D#445ptD.0
  # DEBUG __nD.57956 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.57958
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.57961 => _33
  # DEBUG __aD.57959 => D#265ptD.0
  # DEBUG __nD.57960 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.57964 => _33
  # DEBUG thisD.57962 => D#261ptD.0
  # DEBUG D.57963 => D#262ptD.0
  # .MEM_49 = VDEF <.MEM_32>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  _ZdlPvD.2766 (_33);
  # DEBUG thisD.57611 => &__map_allocD.57958
  # DEBUG thisD.57590 => &__map_allocD.57958
  # .MEM_35 = VDEF <.MEM_49>
  this_10(D)->_M_implD.43041._M_mapD.43043 = 0B;
  # .MEM_36 = VDEF <.MEM_35>
  this_10(D)->_M_implD.43041._M_map_sizeD.43044 = 0;
  [LP 2] # .MEM_37 = VDEF <.MEM_36>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       16 (EH,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 1, flags: (NEW, REACHABLE)
;;    pred:       15 (EH,EXECUTABLE)
<L2>: [LP 2]
  [MNT 5] # .MEM_38 = VDEF <.MEM_37>
  # USE = nonlocal null { D.69424 D.69425 } (escaped heap)
  # CLB = nonlocal null { D.69424 D.69425 } (escaped heap)
  __cxa_end_catchD.13513 ();
  resx 4
;;    succ:      

}



;; Function void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb, funcdef_no=2600, decl_uid=42110, cgraph_uid=1067, symbol_order=1068)


Pass statistics:
----------------


Global statistics (BBS:165, LOOPS:17, CONDITIONS:66, STMTS:1377)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

void std::vector<bool, _Alloc>::_M_fill_insert(std::vector<bool, _Alloc>::iterator, std::vector<bool, _Alloc>::size_type, bool) [with _Alloc = std::allocator<bool>; std::vector<bool, _Alloc>::iterator = std::_Bit_iterator; std::vector<bool, _Alloc>::size_type = long unsigned int] (struct vectorD.41308 * const thisD.42111, struct iteratorD.41791 __positionD.42112, size_typeD.41785 __nD.42113, boolD.2757 __xD.42114)
{
  const unsigned intD.13 __first$8D.69931;
  _Bit_typeD.26520 * __firstD.69930;
  const unsigned intD.13 __last$_M_offsetD.69929;
  _Bit_typeD.26520 * const __last$_M_pD.69928;
  unsigned intD.13 __last$D26722$_M_offsetD.69927;
  _Bit_typeD.26520 * __last$D26722$_M_pD.69926;
  unsigned intD.13 __first$D26722$_M_offsetD.69925;
  _Bit_typeD.26520 * __first$D26722$_M_pD.69924;
  unsigned intD.13 SR.1640D.69923;
  _Bit_typeD.26520 * SR.1639D.69922;
  const unsigned intD.13 __result$8D.69921;
  _Bit_typeD.26520 * __resultD.69920;
  unsigned intD.13 SR.1636D.69919;
  _Bit_typeD.26520 * SR.1635D.69918;
  unsigned intD.13 SR.1634D.69917;
  _Bit_typeD.26520 * SR.1633D.69916;
  unsigned intD.13 __result$8D.69915;
  _Bit_typeD.26520 * __resultD.69914;
  unsigned intD.13 SR.1630D.69913;
  _Bit_typeD.26520 * SR.1629D.69912;
  unsigned intD.13 SR.1628D.69911;
  _Bit_typeD.26520 * SR.1627D.69910;
  const unsigned intD.13 __first$8D.69909;
  const unsigned intD.13 __first$8D.69907;
  _Bit_typeD.26520 * __firstD.69906;
  const unsigned intD.13 __last$_M_offsetD.69905;
  _Bit_typeD.26520 * const __last$_M_pD.69904;
  unsigned intD.13 __last$D26722$_M_offsetD.69903;
  _Bit_typeD.26520 * __last$D26722$_M_pD.69902;
  unsigned intD.13 __first$D26722$_M_offsetD.69901;
  _Bit_typeD.26520 * __firstD.69900;
  unsigned intD.13 SR.1617D.69899;
  _Bit_typeD.26520 * SR.1616D.69898;
  unsigned intD.13 SR.1615D.69897;
  _Bit_typeD.26520 * SR.1614D.69896;
  unsigned intD.13 __i$D26722$_M_offsetD.69895;
  _Bit_typeD.26520 * __i$D26722$_M_pD.69894;
  unsigned intD.13 __position$8D.69893;
  _Bit_typeD.26520 * __positionD.69892;
  struct _Bit_iteratorD.26670 D.69889;
  _DistanceD.47797 __nD.69867;
  _Bit_typeD.26520 * __first$_M_pD.69888;
  const unsigned intD.13 __first$8D.69887;
  _Bit_typeD.26520 * __result$_M_pD.69886;
  const unsigned intD.13 __result$8D.69885;
  struct _Bit_iteratorD.26670 __firstD.69863;
  struct _Bit_iteratorD.26670 __lastD.69864;
  struct _Bit_iteratorD.26670 __resultD.69865;
  unsigned intD.13 __it$D26722$_M_offsetD.69862;
  _Bit_typeD.26520 * __it$D26722$_M_pD.69860;
  unsigned intD.13 __it$D26722$_M_offsetD.69859;
  _Bit_typeD.26520 * __it$D26722$_M_pD.69857;
  unsigned intD.13 __it$D26722$_M_offsetD.69856;
  _Bit_typeD.26520 * __it$D26722$_M_pD.69854;
  struct _Bit_iteratorD.26670 D.69853;
  struct _Bit_iteratorD.26670 __firstD.69847;
  struct _Bit_iteratorD.26670 __lastD.69846;
  struct _Bit_iteratorD.26670 __resultD.69845;
  struct _Bit_iteratorD.26670 D.69852;
  _Bit_typeD.26520 * __first$_M_pD.69829;
  const unsigned intD.13 __first$_M_offsetD.69828;
  struct _Bit_iteratorD.26670 __firstD.69815;
  struct _Bit_iteratorD.26670 __lastD.69816;
  boolD.2757 __xD.69817;
  _Bit_typeD.26520 * __first$_M_pD.69814;
  const unsigned intD.13 __first$_M_offsetD.69813;
  struct _Bit_iteratorD.26670 __firstD.69800;
  struct _Bit_iteratorD.26670 __lastD.69801;
  boolD.2757 __xD.69802;
  _Bit_typeD.26520 * __first$_M_pD.69799;
  const unsigned intD.13 __first$_M_offsetD.69798;
  struct _Bit_iteratorD.26670 __firstD.69785;
  struct _Bit_iteratorD.26670 __lastD.69786;
  boolD.2757 __xD.69787;
  struct _Bit_iteratorD.26670 D.69783;
  struct _Bit_iteratorD.26670 D.69782;
  long unsigned intD.14 * __firstD.69763;
  _Bit_typeD.26520 * __first$D26722$_M_pD.69781;
  _Bit_typeD.26520 * __last$D26722$_M_pD.69780;
  struct _Bit_iteratorD.26670 __firstD.69758;
  struct _Bit_iteratorD.26670 __lastD.69759;
  struct _Bit_iteratorD.26670 D.69757;
  _DistanceD.47881 __nD.69737;
  _Bit_typeD.26520 * __first$_M_pD.69756;
  const unsigned intD.13 __first$8D.69755;
  _Bit_typeD.26520 * __result$_M_pD.69754;
  const unsigned intD.13 __result$8D.69753;
  struct _Bit_const_iteratorD.26780 __firstD.69733;
  struct _Bit_const_iteratorD.26780 __lastD.69734;
  struct _Bit_iteratorD.26670 __resultD.69735;
  struct _Bit_iteratorD.26670 D.69732;
  struct _Bit_iteratorD.26670 __resultD.69715;
  struct _Bit_const_iteratorD.26780 __lastD.69716;
  struct _Bit_const_iteratorD.26780 __firstD.69717;
  struct _Bit_iteratorD.26670 D.69731;
  _Bit_typeD.26520 * __it$D26842$_M_pD.69730;
  unsigned intD.13 __it$D26842$_M_offsetD.69728;
  _Bit_typeD.26520 * __it$D26842$_M_pD.69727;
  unsigned intD.13 __it$D26842$_M_offsetD.69725;
  _Bit_typeD.26520 * __it$D26722$_M_pD.69724;
  unsigned intD.13 __it$D26722$_M_offsetD.69722;
  const long unsigned intD.14 D.69708;
  const size_typeD.41785 __lenD.69693;
  size_typeD.41785 D.69707;
  size_typeD.41785 __nD.69691;
  _Bit_typeD.26520 * __last$D26842$_M_pD.69688;
  const ptrdiff_tD.2819 _NumD.69683;
  unsigned intD.13 __it$D26842$_M_offsetD.69686;
  struct _Bit_iteratorD.26670 D.69685;
  struct iteratorD.41791 D.69684;
  _Bit_typeD.26520 * __first$_M_pD.69660;
  const unsigned intD.13 __first$_M_offsetD.69659;
  struct _Bit_iteratorD.26670 __firstD.69646;
  struct _Bit_iteratorD.26670 __lastD.69647;
  boolD.2757 __xD.69648;
  _Bit_typeD.26520 * __first$_M_pD.69645;
  const unsigned intD.13 __first$_M_offsetD.69644;
  struct _Bit_iteratorD.26670 __firstD.69631;
  struct _Bit_iteratorD.26670 __lastD.69632;
  boolD.2757 __xD.69633;
  _Bit_typeD.26520 * __first$_M_pD.69630;
  const unsigned intD.13 __first$_M_offsetD.69629;
  struct _Bit_iteratorD.26670 __firstD.69616;
  struct _Bit_iteratorD.26670 __lastD.69617;
  boolD.2757 __xD.69618;
  struct _Bit_iteratorD.26670 D.69614;
  struct _Bit_iteratorD.26670 D.69613;
  long unsigned intD.14 * __firstD.69594;
  _Bit_typeD.26520 * __first$D26722$_M_pD.69612;
  _Bit_typeD.26520 * __last$D26722$_M_pD.69611;
  struct _Bit_iteratorD.26670 __firstD.69589;
  struct _Bit_iteratorD.26670 __lastD.69590;
  struct _Bit_iteratorD.26670 D.69588;
  difference_typeD.27375 __nD.69566;
  _Bit_typeD.26520 * __last$_M_pD.69587;
  const unsigned intD.13 __last$8D.69586;
  _Bit_typeD.26520 * __result$_M_pD.69585;
  unsigned intD.13 __result$_M_offsetD.69584;
  struct _Bit_iteratorD.26670 __firstD.69563;
  struct _Bit_iteratorD.26670 __lastD.69564;
  struct _Bit_iteratorD.26670 __resultD.69565;
  unsigned intD.13 __it$D26722$_M_offsetD.69562;
  _Bit_typeD.26520 * __it$D26722$_M_pD.69560;
  unsigned intD.13 __it$D26722$_M_offsetD.69559;
  _Bit_typeD.26520 * __it$D26722$_M_pD.69557;
  unsigned intD.13 __it$D26722$_M_offsetD.69556;
  _Bit_typeD.26520 * __it$D26722$_M_pD.69554;
  struct _Bit_iteratorD.26670 D.69553;
  struct _Bit_iteratorD.26670 __firstD.69547;
  struct _Bit_iteratorD.26670 __lastD.69546;
  struct _Bit_iteratorD.26670 __resultD.69545;
  struct _Bit_iteratorD.26670 D.69552;
  _Bit_typeD.26520 * SR.1081D.60344;
  unsigned intD.13 SR.1074D.60337;
  _Bit_typeD.26520 * SR.1073D.60336;
  unsigned intD.13 SR.1072D.60335;
  _Bit_typeD.26520 * SR.1071D.60334;
  unsigned intD.13 __i$8D.60311;
  _Bit_typeD.26520 * __iD.60310;
  unsigned intD.13 __position$8D.60307;
  _Bit_typeD.26520 * __positionD.60306;
  difference_typeD.26589 __nD.60281;
  _Bit_typeD.26520 * __tmp$_M_pD.60283;
  difference_typeD.26589 __nD.60270;
  _Bit_typeD.26520 * __tmp$_M_pD.60272;
  struct _Bit_iteratorD.26670 D.60254;
  difference_typeD.26589 __nD.60232;
  _Bit_typeD.26520 * __tmp$_M_pD.60234;
  struct _Bit_iteratorD.26670 D.60216;
  difference_typeD.26589 __nD.60206;
  _Bit_typeD.26520 * __tmp$_M_pD.60208;
  difference_typeD.26589 __nD.60197;
  struct iteratorD.41791 __iD.46251;
  struct _Bit_iteratorD.26670 D.51674;
  struct _Bit_iteratorD.26670 D.51670;
  long unsigned intD.14 _7;
  long intD.12 __n.166_8;
  long unsigned intD.14 prephitmp_13;
  boolD.2757 _15;
  long intD.12 __n.166_16;
  long unsigned intD.14 * _20;
  long intD.12 _25;
  long intD.12 _26;
  long intD.12 _27;
  long intD.12 _28;
  long intD.12 _29;
  ptrdiff_tD.2819 _30;
  unsigned intD.13 _32;
  _Bit_typeD.26520 * _33;
  long unsigned intD.14 * const _34;
  long intD.12 _36;
  long intD.12 _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  ptrdiff_tD.2819 _41;
  size_typeD.41785 _42;
  _Bit_typeD.26520 * _53;
  unsigned intD.13 _55;
  boolD.2757 _56;
  long intD.12 _58;
  long unsigned intD.14 _59;
  long unsigned intD.14 _60;
  unsigned intD.13 _66;
  long intD.12 _69;
  long unsigned intD.14 _70;
  long unsigned intD.14 _71;
  long unsigned intD.14 * _81;
  long intD.12 _89;
  long unsigned intD.14 _90;
  long unsigned intD.14 _91;
  unsigned intD.13 _97;
  long unsigned intD.14 _128;
  intD.9 _131;
  long intD.12 _133;
  long intD.12 _134;
  long intD.12 _135;
  long intD.12 _137;
  long intD.12 _138;
  long unsigned intD.14 pretmp_143;
  long unsigned intD.14 prephitmp_147;
  size_tD.2818 pretmp_149;
  long unsigned intD.14 _154;
  long unsigned intD.14 _155;
  long unsigned intD.14 _157;
  long unsigned intD.14 _158;
  long unsigned intD.14 _159;
  long unsigned intD.14 _160;
  long unsigned intD.14 _161;
  boolD.2757 _164;
  long unsigned intD.14 prephitmp_165;
  long unsigned intD.14 pretmp_172;
  long unsigned intD.14 _180;
  long unsigned intD.14 _184;
  long unsigned intD.14 _185;
  long unsigned intD.14 _186;
  long unsigned intD.14 _193;
  long unsigned intD.14 _195;
  long unsigned intD.14 _196;
  long unsigned intD.14 _203;
  long unsigned intD.14 _204;
  long unsigned intD.14 _205;
  boolD.2757 _213;
  boolD.2757 _214;
  boolD.2757 _215;
  long unsigned intD.14 _222;
  long unsigned intD.14 _223;
  long unsigned intD.14 _224;
  boolD.2757 _230;
  boolD.2757 _232;
  long intD.12 __last.173_235;
  long intD.12 __first.174_236;
  long intD.12 _237;
  long unsigned intD.14 _239;
  boolD.2757 _253;
  long unsigned intD.14 _255;
  intD.9 _257;
  long unsigned intD.14 _260;
  long unsigned intD.14 pretmp_269;
  long unsigned intD.14 _282;
  long unsigned intD.14 _284;
  long unsigned intD.14 _285;
  long unsigned intD.14 _287;
  long unsigned intD.14 _289;
  long unsigned intD.14 _290;
  long unsigned intD.14 _291;
  long unsigned intD.14 _292;
  long unsigned intD.14 _293;
  long unsigned intD.14 _304;
  long unsigned intD.14 _307;
  long unsigned intD.14 _308;
  long unsigned intD.14 _311;
  long unsigned intD.14 _313;
  boolD.2757 _316;
  boolD.2757 _318;
  boolD.2757 _320;
  boolD.2757 _322;
  long unsigned intD.14 _324;
  long unsigned intD.14 _325;
  long unsigned intD.14 _326;
  intD.9 _333;
  long unsigned intD.14 _343;
  long unsigned intD.14 _344;
  long unsigned intD.14 _345;
  long unsigned intD.14 _362;
  long unsigned intD.14 _363;
  long unsigned intD.14 _364;
  intD.9 _370;
  long unsigned intD.14 * const _373;
  long intD.12 _375;
  long intD.12 _376;
  long intD.12 _377;
  long unsigned intD.14 _378;
  sizetype _379;
  long unsigned intD.14 * _380;
  long intD.12 _391;
  long intD.12 _393;
  long intD.12 _394;
  long intD.12 _395;
  long intD.12 _396;
  long unsigned intD.14 _401;
  long unsigned intD.14 _403;
  long unsigned intD.14 _405;
  long unsigned intD.14 _406;
  long unsigned intD.14 _408;
  long unsigned intD.14 _409;
  long unsigned intD.14 _410;
  long unsigned intD.14 _411;
  long unsigned intD.14 _412;
  long unsigned intD.14 pretmp_422;
  long unsigned intD.14 _423;
  long unsigned intD.14 _424;
  long unsigned intD.14 _426;
  long unsigned intD.14 _428;
  long intD.12 pretmp_437;
  long unsigned intD.14 prephitmp_439;
  long intD.12 prephitmp_444;
  long unsigned intD.14 _453;
  _Bit_typeD.26520 cstore_456;
  long unsigned intD.14 _457;
  long unsigned intD.14 _458;
  long unsigned intD.14 _459;
  boolD.2757 _460;
  boolD.2757 _463;
  boolD.2757 _464;
  long unsigned intD.14 pretmp_487;
  _Bit_typeD.26520 cstore_499;
  long unsigned intD.14 _500;
  long unsigned intD.14 _501;
  long unsigned intD.14 _502;
  long unsigned intD.14 _503;
  boolD.2757 _504;
  long unsigned intD.14 pretmp_522;
  long unsigned intD.14 _534;
  _Bit_typeD.26520 cstore_539;
  long unsigned intD.14 _549;
  boolD.2757 _558;
  boolD.2757 _559;
  boolD.2757 _560;
  boolD.2757 _561;
  boolD.2757 _562;
  long unsigned intD.14 pretmp_563;
  boolD.2757 _564;
  boolD.2757 _565;
  boolD.2757 _566;
  boolD.2757 _567;
  boolD.2757 _568;

;;   basic block 2, loop depth 0, count 0, freq 2078, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#1045ptD.0 => MEM[(struct _Bit_iteratorD.26670 *)&__positionD.42112]
  # DEBUG __positionD.69892 => D#1045ptD.0
  # DEBUG D#1044ptD.0 => MEM[(struct _Bit_iteratorD.26670 *)&__positionD.42112 + 8B]
  # DEBUG __position$8D.69893 => D#1044ptD.0
  # DEBUG __positionD.60306 => D#1045ptD.0
  # DEBUG __position$8D.60307 => D#1044ptD.0
  if (__n_2(D) == 0)
    goto <bb 138>;
  else
    goto <bb 3>;
;;    succ:       138 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1268, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal 
  __first_525 = MEM[(struct _Bit_iteratorD.26670 *)&__positionD.42112];
  # VUSE <.MEM_3(D)>
  __first$8_480 = MEM[(struct _Bit_iteratorD.26670 *)&__positionD.42112 + 8B];
  # DEBUG thisD.60180 => this_4(D)
  # DEBUG thisD.60181 => this_4(D)
  # DEBUG D#106ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_startD.41733
  # DEBUG thisD.60183 => NULL
  # DEBUG __xD.60182 => D#106ptD.0
  # VUSE <.MEM_3(D)>
  _32 = MEM[(const struct _Bit_iteratorD.26670 *)this_4(D)].D.26722._M_offsetD.26595;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _33 = MEM[(const struct _Bit_iteratorD.26670 *)this_4(D)].D.26722._M_pD.26594;
  # DEBUG thisD.53936 => D#27ptD.0
  # DEBUG __xD.53935 => _33
  # DEBUG __yD.53934 => _32
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG D#178ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _34 = MEM[(long unsigned intD.14 * *)this_4(D) + 32B];
  # DEBUG D#177ptD.0 => D#178ptD.0
  # DEBUG thisD.60184 => D#177ptD.0
  # DEBUG thisD.60187 => NULL
  # DEBUG __xD.60186 => _34
  # DEBUG __yD.60185 => 0
  # DEBUG thisD.54390 => D#26ptD.0
  # DEBUG __xD.54389 => _34
  # DEBUG __yD.54388 => 0
  # DEBUG thisD.53090 => D#26ptD.0
  # DEBUG __xD.60188 => D#16ptD.0
  # DEBUG __xD.60189 => D#16ptD.0
  # DEBUG __yD.60190 => D#17ptD.0
  # DEBUG __yD.60191 => D#17ptD.0
  _36 = (long intD.12) _34;
  _37 = (long intD.12) _33;
  _38 = _36 - _37;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _39 = _38 * 8;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _40 = (long intD.12) _32;
  _41 = _39 - _40;
  # RANGE [0, 18446744073709551615]
  _42 = (size_typeD.41785) _41;
  # DEBUG thisD.60168 => this_4(D)
  # DEBUG thisD.60169 => this_4(D)
  # DEBUG D#106ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_startD.41733
  # DEBUG thisD.60171 => NULL
  # DEBUG __xD.60170 => D#106ptD.0
  # DEBUG thisD.53936 => D#27ptD.0
  # DEBUG __xD.53935 => _33
  # DEBUG __yD.53934 => _32
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG thisD.60172 => this_4(D)
  # DEBUG D#105ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_finishD.41734
  # DEBUG thisD.60174 => NULL
  # DEBUG __xD.60173 => D#105ptD.0
  # VUSE <.MEM_3(D)>
  __last$8_6 = MEM[(const struct _Bit_iteratorD.26670 *)this_4(D) + 16B].D.26722._M_offsetD.26595;
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  __last$_M_p_5 = MEM[(const struct _Bit_iteratorD.26670 *)this_4(D) + 16B].D.26722._M_pD.26594;
  # DEBUG thisD.53928 => D#27ptD.0
  # DEBUG __xD.53927 => __last$_M_p_5
  # DEBUG __yD.53926 => __last$8_6
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG __xD.60175 => D#16ptD.0
  # DEBUG __xD.60176 => D#16ptD.0
  # DEBUG __yD.60177 => D#17ptD.0
  # DEBUG __yD.60178 => D#17ptD.0
  _25 = (long intD.12) __last$_M_p_5;
  _26 = _25 - _37;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _27 = _26 * 8;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _28 = (long intD.12) __last$8_6;
  _29 = _27 + _28;
  _30 = _29 - _40;
  # RANGE [0, 18446744073709551615]
  _31 = (const long unsigned intD.14) _30;
  # RANGE [0, 18446744073709551615]
  _7 = _42 - _31;
  if (__n_2(D) <= _7)
    goto <bb 4>;
  else
    goto <bb 61>;
;;    succ:       4 [71.0%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [29.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [71.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE ~[0, 0]
  __n.166_8 = (long intD.12) __n_2(D);
  # DEBUG D#590ptD.0 => &this_4(D)->D.42205._M_implD.41731._M_finishD.41734
  # DEBUG thisD.60225 => D#590ptD.0
  # DEBUG __iD.60226 => __n.166_8
  # DEBUG __tmp$_M_pD.60234 => __last$_M_p_5
  # DEBUG __tmp$_M_offsetD.60233 => __last$8_6
  # DEBUG thisD.60229 => &__tmpD.60227
  # DEBUG __iD.60228 => __n.166_8
  # DEBUG D#23ptD.0 => &__tmpD.60227.D.26722
  # DEBUG thisD.60231 => D#23ptD.0
  # DEBUG __iD.60230 => __n.166_8
  # RANGE [-9223372036854775808, 9223372036854775807]
  __n_68 = __n.166_8 + _28;
  # DEBUG __nD.60232 => __n_68
  _69 = __n_68 / 64;
  # RANGE [0, 18446744073709551615]
  _70 = (long unsigned intD.14) _69;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _71 = _70 * 8;
  # PT = nonlocal escaped 
  __result$_M_p_72 = __last$_M_p_5 + _71;
  # DEBUG __tmp$_M_pD.60234 => __result$_M_p_72
  # RANGE [-63, 63]
  __n_73 = __n_68 % 64;
  # DEBUG __nD.60232 => __n_73
  if (__n_73 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 243, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 63] NONZERO 63
  __n_74 = __n_73 + 64;
  # DEBUG __nD.60232 => __n_74
  # PT = nonlocal escaped 
  __result$_M_p_75 = __result$_M_p_72 + 18446744073709551608;
  # DEBUG __tmp$_M_pD.60234 => __result$_M_p_75
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [73.0%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 63] NONZERO 63
  # __n_76 = PHI <__n_73(4), __n_74(5)>
  # PT = nonlocal escaped 
  # __result$_M_p_78 = PHI <__result$_M_p_72(4), __result$_M_p_75(5)>
  # DEBUG __tmp$_M_pD.60234 => __result$_M_p_78
  # DEBUG __nD.60232 => __n_76
  # RANGE [0, 63] NONZERO 63
  __result$_M_offset_77 = (unsigned intD.13) __n_76;
  # DEBUG __tmp$_M_offsetD.60233 => __result$_M_offset_77
  # DEBUG D#24ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_pD.60234 => D#24ptD.0
  # DEBUG D#25ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_offsetD.60233 => D#25ptD.0
  # DEBUG thisD.60223 => this_4(D)
  # DEBUG D#510ptD.0 => __positionD.42112
  # DEBUG D#510ptD.0 => __positionD.42112
  # DEBUG D#511ptD.0 => D.51669
  # DEBUG D#511ptD.0 => D.51669
  # DEBUG D#512ptD.0 => D.51668
  # DEBUG D#512ptD.0 => D.51668
  # DEBUG __it$D26722$_M_pD.60220 => __last$_M_p_5
  # DEBUG __it$D26722$_M_offsetD.60222 => __last$8_6
  # DEBUG __it$D26722$_M_pD.60217 => D#1045ptD.0
  # DEBUG __it$D26722$_M_offsetD.60219 => D#1044ptD.0
  # DEBUG __it$D26722$_M_pD.69560 => __result$_M_p_78
  # DEBUG __it$D26722$_M_offsetD.69562 => __result$_M_offset_77
  # DEBUG __it$D26722$_M_pD.69557 => __last$_M_p_5
  # DEBUG __it$D26722$_M_offsetD.69559 => __last$8_6
  # DEBUG __it$D26722$_M_pD.69554 => D#1045ptD.0
  # DEBUG __it$D26722$_M_offsetD.69556 => D#1044ptD.0
  # DEBUG __simpleD.69551 => 0
  # DEBUG __last$_M_pD.69587 => __last$_M_p_5
  # DEBUG __last$8D.69586 => __last$8_6
  # DEBUG __result$_M_pD.69585 => __result$_M_p_78
  # DEBUG __result$_M_offsetD.69584 => __result$_M_offset_77
  # DEBUG D#16ptD.0 => &__lastD.69564.D.26722
  # DEBUG D#16ptD.0 => &__lastD.69564.D.26722
  # DEBUG D#17ptD.0 => &__firstD.69563.D.26722
  # DEBUG D#17ptD.0 => &__firstD.69563.D.26722
  # DEBUG __xD.69580 => D#16ptD.0
  # DEBUG __xD.69581 => D#16ptD.0
  # DEBUG __yD.69582 => D#17ptD.0
  # DEBUG __yD.69583 => D#17ptD.0
  _133 = (long intD.12) __first_525;
  _134 = _25 - _133;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _135 = _134 * 8;
  _137 = _28 + _135;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _138 = (long intD.12) __first$8_480;
  __n_139 = _137 - _138;
  # DEBUG __nD.69566 => NULL
  # DEBUG __result$_M_offsetD.69584 => __result$_M_offset_77
  # DEBUG __result$_M_pD.69585 => __result$_M_p_78
  # DEBUG __last$8D.69586 => __last$8_6
  # DEBUG __last$_M_pD.69587 => __last$_M_p_5
  # DEBUG __nD.69566 => __n_139
  if (__n_139 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_572 = PHI <.MEM_3(D)(6), .MEM_281(19)>
  # DEBUG thisD.60199 => &__positionD.42112
  # DEBUG __iD.60200 => __n.166_8
  # DEBUG __tmp$_M_pD.60208 => D#1045ptD.0
  # DEBUG __tmp$_M_offsetD.60207 => D#1044ptD.0
  # DEBUG thisD.60203 => &__tmpD.60201
  # DEBUG __iD.60202 => __n.166_8
  # DEBUG D#23ptD.0 => &__tmpD.60201.D.26722
  # DEBUG thisD.60205 => D#23ptD.0
  # DEBUG __iD.60204 => __n.166_8
  # RANGE [-9223372036854775808, 9223372036854775807]
  __n_57 = __n.166_8 + _138;
  # DEBUG __nD.60206 => __n_57
  _58 = __n_57 / 64;
  # RANGE [0, 18446744073709551615]
  _59 = (long unsigned intD.14) _58;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _60 = _59 * 8;
  # PT = nonlocal 
  __last$_M_p_61 = __first_525 + _60;
  # DEBUG __tmp$_M_pD.60208 => __last$_M_p_61
  # RANGE [-63, 63]
  __n_62 = __n_57 % 64;
  # DEBUG __nD.60206 => __n_62
  if (__n_62 < 0)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_461 = PHI <__n_139(8), __n_162(20)>
  # __last$8_462 = PHI <__last$8_6(8), __last$8_145(20)>
  # PT = nonlocal escaped 
  # __last$_M_p_489 = PHI <__last$_M_p_5(8), __last$_M_p_153(20)>
  # RANGE [0, 63] NONZERO 63
  # __result$_M_offset_490 = PHI <__result$_M_offset_77(8), __result$_M_offset_151(20)>
  # PT = nonlocal escaped 
  # __result$_M_p_491 = PHI <__result$_M_p_78(8), __result$_M_p_156(20)>
  # .MEM_533 = PHI <.MEM_3(D)(8), .MEM_455(20)>
  # DEBUG __result$_M_offsetD.69584 => __result$_M_offset_490
  # DEBUG __result$_M_pD.69585 => __result$_M_p_491
  # DEBUG __last$8D.69586 => __last$8_462
  # DEBUG __last$_M_pD.69587 => __last$_M_p_489
  # DEBUG __nD.69566 => __n_461
  # DEBUG thisD.69567 => &__lastD.69564
  # DEBUG D#22ptD.0 => &__lastD.69564.D.26722
  # DEBUG thisD.69568 => D#22ptD.0
  # DEBUG __last$8D.69586 => __last$8_462 + 4294967295
  if (__last$8_462 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;
;;    succ:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 9, next block 11, flags: (NEW)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __last$8_142 = __last$8_462 + 4294967295;
  pretmp_487 = 1 << __last$8_142;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __last$8D.69586 => 63
  # PT = nonlocal escaped 
  __last$_M_p_144 = __last$_M_p_489 + 18446744073709551608;
  # DEBUG __last$_M_pD.69587 => __last$_M_p_144
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __last$_M_p_153 = PHI <__last$_M_p_489(10), __last$_M_p_144(11)>
  # RANGE [0, 4294967294]
  # __last$8_145 = PHI <__last$8_142(10), 63(11)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_13 = PHI <pretmp_487(10), 9223372036854775808(11)>
  # DEBUG __last$8D.69586 => __last$8_145
  # DEBUG __last$_M_pD.69587 => __last$_M_p_153
  # DEBUG thisD.69569 => D#20ptD.0
  # DEBUG thisD.69570 => D#20ptD.0
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __last$_M_p_153
  # DEBUG __yD.53131 => 1 << __last$8_145
  # DEBUG thisD.69571 => &__resultD.69565
  # DEBUG D#22ptD.0 => &__resultD.69565.D.26722
  # DEBUG thisD.69572 => D#22ptD.0
  # DEBUG __result$_M_offsetD.69584 => __result$_M_offset_490 + 4294967295
  if (__result$_M_offset_490 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;
;;    succ:       14 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[63, 4294967294]
  __result$_M_offset_148 = __result$_M_offset_490 + 4294967295;
  pretmp_172 = 1 << __result$_M_offset_148;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$_M_offsetD.69584 => 63
  # PT = nonlocal escaped 
  __result$_M_p_150 = __result$_M_p_491 + 18446744073709551608;
  # DEBUG __result$_M_pD.69585 => __result$_M_p_150
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __result$_M_p_156 = PHI <__result$_M_p_491(13), __result$_M_p_150(14)>
  # RANGE [0, 63] NONZERO 63
  # __result$_M_offset_151 = PHI <__result$_M_offset_148(13), 63(14)>
  # RANGE [1, 9223372036854775808]
  # prephitmp_165 = PHI <pretmp_172(13), 9223372036854775808(14)>
  # DEBUG __result$_M_offsetD.69584 => __result$_M_offset_151
  # DEBUG __result$_M_pD.69585 => __result$_M_p_156
  # DEBUG thisD.69573 => D#20ptD.0
  # DEBUG thisD.69574 => D#20ptD.0
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __result$_M_p_156
  # DEBUG __yD.53131 => 1 << __result$_M_offset_151
  # DEBUG thisD.69576 => NULL
  # DEBUG __xD.69575 => NULL
  # DEBUG thisD.69577 => NULL
  # VUSE <.MEM_533>
  _154 = *__last$_M_p_153;
  # RANGE [0, 18446744073709551615]
  _155 = prephitmp_13 & _154;
  # DEBUG thisD.69579 => NULL
  # DEBUG __xD.69578 => _155 != 0
  if (_155 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_533>
  _157 = *__result$_M_p_156;
  # RANGE [0, 18446744073709551615]
  _158 = _157 | prephitmp_165;
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_533>
  _159 = *__result$_M_p_156;
  # RANGE [9223372036854775807, 18446744073709551614]
  _160 = ~prephitmp_165;
  # RANGE [0, 18446744073709551614]
  _161 = _159 & _160;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_456 = PHI <_158(16), _161(17)>
  # .MEM_455 = VDEF <.MEM_533>
  *__result$_M_p_156 = cstore_456;
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_162 = __n_461 + -1;
  # DEBUG __nD.69566 => __n_162
  # DEBUG __result$_M_offsetD.69584 => __result$_M_offset_151
  # DEBUG __result$_M_pD.69585 => __result$_M_p_156
  # DEBUG __last$8D.69586 => __last$8_145
  # DEBUG __last$_M_pD.69587 => __last$_M_p_153
  # DEBUG __nD.69566 => __n_162
  if (__n_162 <= 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_281 = PHI <.MEM_455(18)>
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       18 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 243, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       7 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 63] NONZERO 63
  __n_63 = __n_62 + 64;
  # DEBUG __nD.60206 => __n_63
  # PT = nonlocal 
  __last$_M_p_64 = __last$_M_p_61 + 18446744073709551608;
  # DEBUG __tmp$_M_pD.60208 => __last$_M_p_64
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       7 [73.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 63] NONZERO 63
  # __n_65 = PHI <__n_62(7), __n_63(21)>
  # PT = nonlocal 
  # __last$_M_p_67 = PHI <__last$_M_p_61(7), __last$_M_p_64(21)>
  # DEBUG __tmp$_M_pD.60208 => __last$_M_p_67
  # DEBUG __nD.60206 => __n_65
  # RANGE [0, 63] NONZERO 63
  _66 = (unsigned intD.13) __n_65;
  # DEBUG __tmp$_M_offsetD.60207 => _66
  # DEBUG D#24ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_pD.60208 => D#24ptD.0
  # DEBUG D#25ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_offsetD.60207 => D#25ptD.0
  # DEBUG __firstD.69900 => D#1045ptD.0
  # DEBUG __first$D26722$_M_offsetD.69901 => D#1044ptD.0
  # DEBUG __last$D26722$_M_pD.69902 => __last$_M_p_67
  # DEBUG __last$D26722$_M_offsetD.69903 => _66
  # DEBUG __xD.69591 => &__xD.42114
  # DEBUG __first$D26722$_M_pD.69612 => D#1045ptD.0
  # DEBUG __last$D26722$_M_pD.69611 => __last$_M_p_67
  if (__last$_M_p_67 != __first_525)
    goto <bb 31>;
  else
    goto <bb 23>;
;;    succ:       31 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 60, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       22 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  if (__x_548(D) != 0)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       25 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [50.0%]  (TRUE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 30, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 30, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       23 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 336, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal 
  # __first_478 = PHI <__first_525(25), __first_446(30)>
  # __first$8_472 = PHI <__first$8_480(25), __first$8_443(30)>
  # .MEM_465 = PHI <.MEM_572(25), .MEM_449(30)>
  # DEBUG __first$_M_offsetD.69659 => __first$8_472
  # DEBUG __first$_M_pD.69660 => __first_478
  # DEBUG thisD.69656 => &__firstD.69646.D.26722
  # DEBUG __iD.69655 => &__lastD.69647.D.26722
  # DEBUG thisD.69658 => &__firstD.69646.D.26722
  # DEBUG __iD.69657 => &__lastD.69647.D.26722
  # DEBUG __first$_M_offsetD.69659 => __first$8_472
  # DEBUG __first$_M_pD.69660 => __first_478
  # DEBUG thisD.69656 => &__firstD.69646.D.26722
  # DEBUG __iD.69655 => &__lastD.69647.D.26722
  # DEBUG thisD.69658 => &__firstD.69646.D.26722
  # DEBUG __iD.69657 => &__lastD.69647.D.26722
  # RANGE [0, 1]
  _464 = _66 == __first$8_472;
  # RANGE [0, 1]
  _463 = __last$_M_p_67 == __first_478;
  # RANGE [0, 1]
  _460 = _463 & _464;
  if (_460 != 0)
    goto <bb 57>;
  else
    goto <bb 27>;
;;    succ:       57 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 322, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69646
  # DEBUG D#20ptD.0 => &__firstD.69646
  # DEBUG thisD.69649 => D#20ptD.0
  # DEBUG thisD.69650 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _459 = 1 << __first$8_472;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __first_478
  # DEBUG __yD.53131 => _459
  # DEBUG thisD.69652 => NULL
  # DEBUG __xD.69651 => __x_548(D)
  # VUSE <.MEM_465>
  _458 = *__first_478;
  # RANGE [0, 18446744073709551615]
  _457 = ~_459;
  # RANGE [0, 18446744073709551615]
  _453 = _458 & _457;
  # .MEM_449 = VDEF <.MEM_465>
  *__first_478 = _453;
  # DEBUG thisD.69653 => &__firstD.69646
  # DEBUG D#21ptD.0 => &__firstD.69646.D.26722
  # DEBUG thisD.69654 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69659 => __first$8_472 + 1
  if (__first$8_472 == 63)
    goto <bb 29>;
  else
    goto <bb 28>;
;;    succ:       29 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 221, maybe hot
;;    prev block 27, next block 29, flags: (NEW)
;;    pred:       27 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$8_448 = __first$8_472 + 1;
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 86, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       27 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69659 => 0
  # PT = nonlocal 
  __first_447 = __first_478 + 8;
  # DEBUG __first$_M_pD.69660 => __first_447
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 306, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __first_446 = PHI <__first_478(28), __first_447(29)>
  # RANGE ~[64, 64]
  # __first$8_443 = PHI <__first$8_448(28), 0(29)>
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 840, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       22 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  _257 = (intD.9) __x_548(D);
  _333 = -_257;
  # PT = nonlocal 
  __first_166 = __first_525 + 8;
  # DEBUG D#75ptD.0 => &D.69615
  # DEBUG __firstD.69594 => __first_166
  # DEBUG __lastD.69593 => __last$_M_p_67
  # DEBUG D#74ptD.0 => D#75ptD.0
  # DEBUG __valueD.69592 => D#74ptD.0
  # DEBUG __itD.53614 => __last$_M_p_67
  # DEBUG __itD.53604 => __last$_M_p_67
  # DEBUG __itD.53612 => __first_166
  # DEBUG __itD.53604 => __first_166
  # DEBUG D#61ptD.0 => D#74ptD.0
  # DEBUG __firstD.69597 => __first_166
  # DEBUG __lastD.69596 => __last$_M_p_67
  # DEBUG __valueD.69595 => D#61ptD.0
  # DEBUG __tmpD.69598 => _333
  # DEBUG __firstD.69597 => __first_166
  if (__last$_M_p_67 == __first_166)
    goto <bb 32>;
  else
    goto <bb 40>;
;;    succ:       32 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 840, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_571 = PHI <.MEM_572(31), .MEM_168(42)>
  # DEBUG thisD.69601 => &D.69614
  # DEBUG __xD.69600 => __first_166
  # DEBUG __yD.69599 => 0
  # DEBUG D#19ptD.0 => &D.69614.D.26722
  # DEBUG thisD.69604 => D#19ptD.0
  # DEBUG __xD.69603 => __first_166
  # DEBUG __yD.69602 => 0
  # DEBUG thisD.53090 => D#19ptD.0
  # DEBUG __firstD.69906 => D#1045ptD.0
  # DEBUG __first$8D.69907 => D#1044ptD.0
  # DEBUG __xD.69633 => __x_548(D)
  # DEBUG __first$_M_pD.69645 => D#1045ptD.0
  # DEBUG __first$_M_offsetD.69644 => D#1044ptD.0
  if (__x_548(D) != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       34 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [50.0%]  (TRUE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 420, maybe hot
;;    prev block 32, next block 34, flags: (NEW)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 420, maybe hot
;;    prev block 33, next block 35, flags: (NEW)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 1, count 0, freq 4664, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal 
  # __first_550 = PHI <__first_525(34), __first_515(39)>
  # __first$8_542 = PHI <__first$8_480(34), __first$8_509(39)>
  # .MEM_536 = PHI <.MEM_571(34), .MEM_545(39)>
  # DEBUG __first$_M_offsetD.69644 => __first$8_542
  # DEBUG __first$_M_pD.69645 => __first_550
  # DEBUG thisD.69641 => &__firstD.69631.D.26722
  # DEBUG __iD.69640 => &__lastD.69632.D.26722
  # DEBUG thisD.69643 => &__firstD.69631.D.26722
  # DEBUG __iD.69642 => &__lastD.69632.D.26722
  # RANGE [0, 1]
  _316 = __first$8_542 == 0;
  # RANGE [0, 1]
  _253 = __first_166 == __first_550;
  # RANGE [0, 1]
  _504 = _316 & _253;
  if (_504 != 0)
    goto <bb 139>;
  else
    goto <bb 36>;
;;    succ:       139 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 4468, maybe hot
;;   Invalid sum of incoming frequencies 3358, should be 4468
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       35 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69631
  # DEBUG D#20ptD.0 => &__firstD.69631
  # DEBUG thisD.69634 => D#20ptD.0
  # DEBUG thisD.69635 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _503 = 1 << __first$8_542;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __first_550
  # DEBUG __yD.53131 => _503
  # DEBUG thisD.69637 => NULL
  # DEBUG __xD.69636 => __x_548(D)
  # VUSE <.MEM_536>
  _502 = *__first_550;
  # RANGE [0, 18446744073709551615]
  _501 = ~_503;
  # RANGE [0, 18446744073709551615]
  _500 = _502 & _501;
  # .MEM_545 = VDEF <.MEM_536>
  *__first_550 = _500;
  # DEBUG thisD.69638 => &__firstD.69631
  # DEBUG D#21ptD.0 => &__firstD.69631.D.26722
  # DEBUG thisD.69639 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69644 => __first$8_542 + 1
  if (__first$8_542 == 63)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 1189, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       36 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69644 => 0
  # PT = nonlocal 
  __first_523 = __first_550 + 8;
  # DEBUG __first$_M_pD.69645 => __first_523
  goto <bb 39>;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 3056, maybe hot
;;   Invalid sum of incoming frequencies 3217, should be 3056
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       36 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$8_517 = __first$8_542 + 1;
;;    succ:       39 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 4244, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                38 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __first_515 = PHI <__first_523(37), __first_550(38)>
  # RANGE ~[64, 64]
  # __first$8_509 = PHI <0(37), __first$8_517(38)>
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 764, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       31 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_269 = (long unsigned intD.14) _333;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 8488, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __first_492 = PHI <__first_166(40), __first_170(43)>
  # .MEM_535 = PHI <.MEM_572(40), .MEM_469(43)>
  # DEBUG __firstD.69597 => __first_492
  # .MEM_469 = VDEF <.MEM_535>
  *__first_492 = pretmp_269;
  # PT = nonlocal 
  __first_170 = __first_492 + 8;
  # DEBUG __firstD.69597 => __first_170
  # DEBUG __firstD.69597 => __first_170
  if (__last$_M_p_67 == __first_170)
    goto <bb 42>;
  else
    goto <bb 43>;
;;    succ:       42 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 764, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       41 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_168 = PHI <.MEM_469(41)>
  goto <bb 32>;
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 7724, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       41 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 41>;
;;    succ:       41 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 3056, maybe hot
;;   Invalid sum of incoming frequencies 3217, should be 3056
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       148 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$8_209 = __first$8_200 + 1;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 4244, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       44 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __first_192 = PHI <__first_198(44), __first_210(47)>
  # RANGE ~[64, 64]
  # __first$8_231 = PHI <__first$8_209(44), 0(47)>
;;    succ:       46 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 4664, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __first_198 = PHI <__first_192(45), __first_525(33)>
  # __first$8_200 = PHI <__first$8_231(45), __first$8_480(33)>
  # .MEM_425 = PHI <.MEM_481(45), .MEM_571(33)>
  # DEBUG __first$_M_offsetD.69644 => __first$8_200
  # DEBUG __first$_M_pD.69645 => __first_198
  # DEBUG thisD.69641 => &__firstD.69631.D.26722
  # DEBUG __iD.69640 => &__lastD.69632.D.26722
  # DEBUG thisD.69643 => &__firstD.69631.D.26722
  # DEBUG __iD.69642 => &__lastD.69632.D.26722
  # RANGE [0, 1]
  _56 = __first$8_200 == 0;
  # RANGE [0, 1]
  _164 = __first_166 == __first_198;
  # RANGE [0, 1]
  _561 = _56 & _164;
  if (_561 != 0)
    goto <bb 139>;
  else
    goto <bb 148>;
;;    succ:       139 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                148 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 1, count 0, freq 1189, maybe hot
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       148 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69644 => 0
  # PT = nonlocal 
  __first_210 = __first_198 + 8;
  # DEBUG __first$_M_pD.69645 => __first_210
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 3056, maybe hot
;;   Invalid sum of incoming frequencies 3217, should be 3056
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       149 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$_M_offset_190 = __first$_M_offset_181 + 1;
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 1, count 0, freq 4244, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                52 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __last$_M_p_212 = PHI <__last$_M_p_179(48), __last$_M_p_191(52)>
  # RANGE [0, 4294967295]
  # __first$_M_offset_211 = PHI <__first$_M_offset_190(48), 0(52)>
;;    succ:       50 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 4664, maybe hot
;;   Invalid sum of incoming frequencies 4440, should be 4664
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       49 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
;;                140 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __last$_M_p_179 = PHI <__last$_M_p_212(49), __last$_M_p_67(140)>
  # RANGE [0, 4294967295]
  # __first$_M_offset_181 = PHI <__first$_M_offset_211(49), 0(140)>
  # .MEM_427 = PHI <.MEM_467(49), .MEM_476(140)>
  # DEBUG __first$_M_offsetD.69629 => __first$_M_offset_181
  # DEBUG __first$_M_pD.69630 => __last$_M_p_179
  # DEBUG thisD.69626 => &__firstD.69616.D.26722
  # DEBUG __iD.69625 => &__lastD.69617.D.26722
  # DEBUG thisD.69628 => &__firstD.69616.D.26722
  # DEBUG __iD.69627 => &__lastD.69617.D.26722
  if (__last$_M_p_67 == __last$_M_p_179)
    goto <bb 51>;
  else
    goto <bb 149>;
;;    succ:       51 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                149 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 700, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69629 => __first$_M_offset_181
  # DEBUG __first$_M_pD.69630 => __last$_M_p_179
  # DEBUG thisD.69626 => &__firstD.69616.D.26722
  # DEBUG __iD.69625 => &__lastD.69617.D.26722
  # DEBUG thisD.69628 => &__firstD.69616.D.26722
  # DEBUG __iD.69627 => &__lastD.69617.D.26722
  if (_66 == __first$_M_offset_181)
    goto <bb 150>;
  else
    goto <bb 149>;
;;    succ:       150 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                149 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 1189, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       149 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69629 => 0
  # PT = nonlocal 
  __last$_M_p_191 = __last$_M_p_179 + 8;
  # DEBUG __first$_M_pD.69630 => __last$_M_p_191
  goto <bb 49>;
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 221, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       151 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$8_228 = __first$8_219 + 1;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 306, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __first_352 = PHI <__first_217(53), __first_229(56)>
  # RANGE ~[64, 64]
  # __first$8_351 = PHI <__first$8_228(53), 0(56)>
;;    succ:       55 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 336, maybe hot
;;    prev block 54, next block 56, flags: (NEW)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal 
  # __first_217 = PHI <__first_525(24), __first_352(54)>
  # __first$8_219 = PHI <__first$8_480(24), __first$8_351(54)>
  # .MEM_429 = PHI <.MEM_572(24), .MEM_474(54)>
  # DEBUG __first$_M_offsetD.69659 => __first$8_219
  # DEBUG __first$_M_pD.69660 => __first_217
  # DEBUG thisD.69656 => &__firstD.69646.D.26722
  # DEBUG __iD.69655 => &__lastD.69647.D.26722
  # DEBUG thisD.69658 => &__firstD.69646.D.26722
  # DEBUG __iD.69657 => &__lastD.69647.D.26722
  # DEBUG __first$_M_offsetD.69659 => __first$8_219
  # DEBUG __first$_M_pD.69660 => __first_217
  # DEBUG thisD.69656 => &__firstD.69646.D.26722
  # DEBUG __iD.69655 => &__lastD.69647.D.26722
  # DEBUG thisD.69658 => &__firstD.69646.D.26722
  # DEBUG __iD.69657 => &__lastD.69647.D.26722
  # RANGE [0, 1]
  _562 = _66 == __first$8_219;
  # RANGE [0, 1]
  _213 = __last$_M_p_67 == __first_217;
  # RANGE [0, 1]
  _214 = _213 & _562;
  if (_214 != 0)
    goto <bb 57>;
  else
    goto <bb 151>;
;;    succ:       57 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                151 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 1, count 0, freq 86, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       151 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69659 => 0
  # PT = nonlocal 
  __first_229 = __first_217 + 8;
  # DEBUG __first$_M_pD.69660 => __first_229
  goto <bb 54>;
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 900, maybe hot
;;   Invalid sum of incoming frequencies 580, should be 900
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       55 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                150 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_431 = PHI <.MEM_429(55), .MEM_483(150), .MEM_465(26)>
  # DEBUG D#599ptD.0 => &this_4(D)->D.42205._M_implD.41731._M_finishD.41734
  # DEBUG thisD.60193 => D#599ptD.0
  # DEBUG __iD.60194 => __n.166_8
  # DEBUG D#23ptD.0 => &D#599ptD.0->D.26722
  # DEBUG thisD.60196 => D#23ptD.0
  # DEBUG __iD.60195 => __n.166_8
  # DEBUG D#1043ptD.0 => MEM[(struct _Bit_iterator_baseD.26584 *)this_4(D) + 16B]._M_offsetD.26595
  # DEBUG D#1042ptD.0 => (long intD.12) D#1043ptD.0
  # DEBUG D#1041ptD.0 => __n.166_8 + D#1042ptD.0
  # DEBUG __nD.60197 => D#1041ptD.0
  # DEBUG __nD.60197 => D#1041ptD.0 % 64
  if (__n_73 < 0)
    goto <bb 59>;
  else
    goto <bb 58>;
;;    succ:       59 [36.6%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [63.4%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 570, maybe hot
;;    prev block 57, next block 59, flags: (NEW)
;;    pred:       57 [63.4%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_101 = VDEF <.MEM_431>
  MEM[(struct _Bit_iterator_baseD.26584 *)this_4(D) + 16B]._M_pD.26594 = __result$_M_p_72;
  goto <bb 60>;
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 330, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       57 [36.6%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 63] NONZERO 63
  __n_52 = __n_73 + 64;
  # DEBUG __nD.60197 => __n_52
  # PT = nonlocal escaped 
  _53 = __result$_M_p_72 + 18446744073709551608;
  # .MEM_102 = VDEF <.MEM_431>
  MEM[(struct _Bit_iterator_baseD.26584 *)this_4(D) + 16B]._M_pD.26594 = _53;
;;    succ:       60 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       58 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                59 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 63] NONZERO 63
  # __n_54 = PHI <__n_73(58), __n_52(59)>
  # .MEM_14 = PHI <.MEM_101(58), .MEM_102(59)>
  # DEBUG __nD.60197 => __n_54
  # RANGE [0, 63] NONZERO 63
  _55 = (unsigned intD.13) __n_54;
  # .MEM_103 = VDEF <.MEM_14>
  MEM[(struct _Bit_iterator_baseD.26584 *)this_4(D) + 16B]._M_offsetD.26595 = _55;
  goto <bb 138>;
;;    succ:       138 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 368, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       3 [29.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.69690 => this_4(D)
  # DEBUG __nD.69691 => __n_2(D)
  # DEBUG __nD.69691 => __n_2(D)
  # DEBUG __sD.69692 => "vector<bool>::_M_fill_insert"
  # DEBUG D#518ptD.0 => this_4(D)
  # DEBUG thisD.58375 => D#518ptD.0
  # DEBUG D#517ptD.0 => D#518ptD.0
  # DEBUG __isizeD.58376 => 9223372036854775744
  # DEBUG D#516ptD.0 => &D#517ptD.0->D.42205
  # DEBUG thisD.58358 => D#516ptD.0
  # DEBUG __aD.58348 => D#515ptD.0
  # DEBUG D#514ptD.0 => D#515ptD.0
  # DEBUG D#513ptD.0 => D#514ptD.0
  # DEBUG thisD.58339 => D#513ptD.0
  # DEBUG __asizeD.58377 => NULL
  # DEBUG thisD.69696 => this_4(D)
  # DEBUG thisD.69697 => this_4(D)
  # DEBUG D#106ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_startD.41733
  # DEBUG thisD.69699 => NULL
  # DEBUG __xD.69698 => D#106ptD.0
  # DEBUG thisD.53936 => D#27ptD.0
  # DEBUG __xD.53935 => _33
  # DEBUG __yD.53934 => _32
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG thisD.69700 => this_4(D)
  # DEBUG D#105ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_finishD.41734
  # DEBUG thisD.69702 => NULL
  # DEBUG __xD.69701 => D#105ptD.0
  # DEBUG thisD.53928 => D#27ptD.0
  # DEBUG __xD.53927 => __last$_M_p_5
  # DEBUG __yD.53926 => __last$8_6
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG __xD.69703 => D#16ptD.0
  # DEBUG __xD.69704 => D#16ptD.0
  # DEBUG __yD.69705 => D#17ptD.0
  # DEBUG __yD.69706 => D#17ptD.0
  # RANGE [0, 18446744073709551615]
  _255 = 9223372036854775744 - _31;
  if (__n_2(D) > _255)
    goto <bb 62>;
  else
    goto <bb 63>;
;;    succ:       62 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 0
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       61 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_547 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.69932 } (escaped heap)
  # CLB = nonlocal null { D.69932 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("vector<bool>::_M_fill_insert");
;;    succ:      

;;   basic block 63, loop depth 0, count 0, freq 367, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       61 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.58406 => this_4(D)
  # DEBUG thisD.58407 => this_4(D)
  # DEBUG D#106ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_startD.41733
  # DEBUG thisD.58409 => NULL
  # DEBUG __xD.58408 => D#106ptD.0
  # DEBUG thisD.53936 => D#27ptD.0
  # DEBUG __xD.53935 => _33
  # DEBUG __yD.53934 => _32
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG thisD.58410 => this_4(D)
  # DEBUG D#105ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_finishD.41734
  # DEBUG thisD.58412 => NULL
  # DEBUG __xD.58411 => D#105ptD.0
  # DEBUG thisD.53928 => D#27ptD.0
  # DEBUG __xD.53927 => __last$_M_p_5
  # DEBUG __yD.53926 => __last$8_6
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG __xD.58413 => D#16ptD.0
  # DEBUG __xD.58414 => D#16ptD.0
  # DEBUG __yD.58415 => D#17ptD.0
  # DEBUG __yD.58416 => D#17ptD.0
  # DEBUG thisD.58394 => this_4(D)
  # DEBUG thisD.58395 => this_4(D)
  # DEBUG D#106ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_startD.41733
  # DEBUG thisD.58397 => NULL
  # DEBUG __xD.58396 => D#106ptD.0
  # DEBUG thisD.53936 => D#27ptD.0
  # DEBUG __xD.53935 => _33
  # DEBUG __yD.53934 => _32
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG thisD.58398 => this_4(D)
  # DEBUG D#105ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_finishD.41734
  # DEBUG thisD.58400 => NULL
  # DEBUG __xD.58399 => D#105ptD.0
  # DEBUG thisD.53928 => D#27ptD.0
  # DEBUG __xD.53927 => __last$_M_p_5
  # DEBUG __yD.53926 => __last$8_6
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG __xD.58401 => D#16ptD.0
  # DEBUG __xD.58402 => D#16ptD.0
  # DEBUG __yD.58403 => D#17ptD.0
  # DEBUG __yD.58404 => D#17ptD.0
  # DEBUG __aD.69695 => &D.69708
  # DEBUG __bD.69694 => &__nD.69691
  # RANGE [1, 18446744073709551615]
  _128 = MAX_EXPR <__n_2(D), _31>;
  # RANGE [0, 18446744073709551615]
  __len_259 = _31 + _128;
  # DEBUG __lenD.69693 => __len_259
  # DEBUG thisD.58379 => this_4(D)
  # DEBUG thisD.58380 => this_4(D)
  # DEBUG D#106ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_startD.41733
  # DEBUG thisD.58382 => NULL
  # DEBUG __xD.58381 => D#106ptD.0
  # DEBUG thisD.53936 => D#27ptD.0
  # DEBUG __xD.53935 => _33
  # DEBUG __yD.53934 => _32
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG thisD.58383 => this_4(D)
  # DEBUG D#105ptD.0 => &MEM[(const struct vectorD.41308 *)this_4(D)].D.42205._M_implD.41731._M_finishD.41734
  # DEBUG thisD.58385 => NULL
  # DEBUG __xD.58384 => D#105ptD.0
  # DEBUG thisD.53928 => D#27ptD.0
  # DEBUG __xD.53927 => __last$_M_p_5
  # DEBUG __yD.53926 => __last$8_6
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG __xD.58386 => D#16ptD.0
  # DEBUG __xD.58387 => D#16ptD.0
  # DEBUG __yD.58388 => D#17ptD.0
  # DEBUG __yD.58389 => D#17ptD.0
  # DEBUG D#518ptD.0 => this_4(D)
  # DEBUG thisD.58418 => D#518ptD.0
  # DEBUG D#517ptD.0 => D#518ptD.0
  # DEBUG __isizeD.58419 => 9223372036854775744
  # DEBUG D#516ptD.0 => &D#517ptD.0->D.42205
  # DEBUG thisD.58358 => D#516ptD.0
  # DEBUG __aD.58348 => D#515ptD.0
  # DEBUG D#514ptD.0 => D#515ptD.0
  # DEBUG D#513ptD.0 => D#514ptD.0
  # DEBUG thisD.58339 => D#513ptD.0
  # DEBUG __asizeD.58420 => NULL
  _564 = __len_259 > 9223372036854775744;
  _566 = _31 > __len_259;
  _565 = _564 | _566;
  if (_565 != 0)
    goto <bb 65>;
  else
    goto <bb 64>;
;;    succ:       65 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                64 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       63 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_143 = __len_259 + 63;
  pretmp_149 = pretmp_143 >> 6;
  pretmp_563 = pretmp_149 * 8;
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 367, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       63 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 1152921504606846968] NONZERO 1152921504606846968
  # prephitmp_147 = PHI <1152921504606846968(63), pretmp_563(64)>
  # DEBUG __lenD.46246 => NULL
  # DEBUG D#601ptD.0 => &this_4(D)->D.42205
  # DEBUG D#526ptD.0 => D#601ptD.0
  # DEBUG __nD.60236 => NULL
  # DEBUG thisD.60237 => D#526ptD.0
  # DEBUG D#525ptD.0 => D#526ptD.0
  # DEBUG __nD.60238 => NULL
  # DEBUG D#524ptD.0 => &D#525ptD.0->_M_implD.41731
  # DEBUG D#523ptD.0 => D#524ptD.0
  # DEBUG __nD.60240 => NULL
  # DEBUG __aD.60239 => D#523ptD.0
  # DEBUG D#522ptD.0 => D#523ptD.0
  # DEBUG D#520ptD.0 => D#522ptD.0
  # DEBUG D#521ptD.0 => 0B
  # DEBUG __nD.60243 => NULL
  # DEBUG thisD.60241 => D#520ptD.0
  # DEBUG D.60242 => D#521ptD.0
  # DEBUG D#519ptD.0 => D#520ptD.0
  # DEBUG D#513ptD.0 => D#519ptD.0
  # DEBUG thisD.58427 => D#513ptD.0
  # .MEM_105 = VDEF <.MEM_3(D)>
  # PT = { D.69932 } (escaped heap)
  # USE = nonlocal null { D.69932 } (escaped heap)
  # CLB = nonlocal null { D.69932 } (escaped heap)
  _81 = _ZnwmD.2764 (prephitmp_147);
  # DEBUG __qD.46247 => _81
  # DEBUG __rD.60304 => _81
  # DEBUG thisD.60298 => &__startD.46248
  # DEBUG __xD.60299 => NULL
  # DEBUG __yD.60300 => 0
  # DEBUG D#19ptD.0 => &__startD.46248.D.26722
  # DEBUG thisD.60303 => D#19ptD.0
  # DEBUG __xD.60302 => NULL
  # DEBUG __yD.60301 => 0
  # DEBUG thisD.53090 => D#19ptD.0
  # DEBUG __start$_M_pD.60308 => _81
  # DEBUG __start$_M_offsetD.60309 => 0
  # DEBUG thisD.60293 => &D.46254
  # DEBUG __xD.60294 => &__positionD.42112
  # DEBUG D#27ptD.0 => &D.46254.D.26842
  # DEBUG thisD.60297 => D#27ptD.0
  # DEBUG __xD.60296 => D#1045ptD.0
  # DEBUG __yD.60295 => D#1044ptD.0
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG thisD.60290 => this_4(D)
  # VUSE <.MEM_105>
  # PT = nonlocal escaped 
  SR.1081_100 = MEM[(struct vectorD.41308 *)this_4(D)];
  # DEBUG D#600ptD.0 => MEM[(struct vectorD.41308 *)this_4(D) + 8B]
  # DEBUG thisD.60285 => &D.46253
  # DEBUG __xD.60286 => &D.46252
  # DEBUG D#27ptD.0 => &D.46253.D.26842
  # DEBUG thisD.60289 => D#27ptD.0
  # DEBUG __xD.60288 => SR.1081_100
  # DEBUG __yD.60287 => D#600ptD.0
  # DEBUG thisD.53090 => D#27ptD.0
  # DEBUG D.60315 => D#600ptD.0
  # DEBUG D#586ptD.0 => this_4(D)
  # DEBUG D#587ptD.0 => D.46253
  # DEBUG D#588ptD.0 => D.46254
  # DEBUG D#588ptD.0 => D.46254
  # DEBUG D#589ptD.0 => __startD.46248
  # DEBUG thisD.69665 => D#586ptD.0
  # DEBUG __last$D26842$_M_pD.69688 => D#1045ptD.0
  # DEBUG __firstD.69669 => SR.1081_100
  # DEBUG __lastD.69668 => D#1045ptD.0
  # DEBUG __resultD.69667 => _81
  # DEBUG __itD.59875 => D#1045ptD.0
  # DEBUG __itD.57867 => D#1045ptD.0
  # DEBUG __itD.59873 => SR.1081_100
  # DEBUG __itD.57867 => SR.1081_100
  # DEBUG __firstD.69672 => NULL
  # DEBUG __lastD.69671 => NULL
  # DEBUG __resultD.69670 => _81
  # DEBUG __itD.59855 => _81
  # DEBUG __itD.53604 => _81
  # DEBUG __itD.59853 => NULL
  # DEBUG __itD.53604 => NULL
  # DEBUG __itD.59851 => NULL
  # DEBUG __itD.53604 => NULL
  # DEBUG __firstD.69675 => NULL
  # DEBUG __lastD.69674 => NULL
  # DEBUG __resultD.69673 => _81
  # DEBUG __simpleD.69679 => 1
  # DEBUG __firstD.69682 => NULL
  # DEBUG __lastD.69681 => NULL
  # DEBUG __resultD.69680 => _81
  __last.173_235 = (long intD.12) __first_525;
  __first.174_236 = (long intD.12) SR.1081_100;
  _237 = __last.173_235 - __first.174_236;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _Num_238 = _237 /[ex] 8;
  # DEBUG _NumD.69683 => _Num_238
  if (_Num_238 != 0)
    goto <bb 67>;
  else
    goto <bb 66>;
;;    succ:       67 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 224, maybe hot
;;    prev block 65, next block 67, flags: (NEW)
;;    pred:       65 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_422 = (long unsigned intD.14) _237;
  goto <bb 68>;
;;    succ:       68 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 143, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _239 = (long unsigned intD.14) _237;
  # .MEM_488 = VDEF <.MEM_105>
  # USE = nonlocal null { D.69932 } (escaped heap)
  # CLB = nonlocal null { D.69932 } (escaped heap)
  memmoveD.995 (_81, SR.1081_100, _239);
;;    succ:       68 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 367, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       66 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                67 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_432 = PHI <.MEM_105(66), .MEM_488(67)>
  # RANGE [0, 18446744073709551615]
  # prephitmp_439 = PHI <pretmp_422(66), _239(67)>
  # PT = { D.69932 } (escaped heap)
  __i$D26722$_M_p_241 = _81 + prephitmp_439;
  # DEBUG __qD.69666 => __i$D26722$_M_p_241
  # DEBUG thisD.60134 => NULL
  # DEBUG __xD.60133 => __i$D26722$_M_p_241
  # DEBUG __yD.60132 => 0
  # DEBUG thisD.60137 => D#19ptD.0
  # DEBUG __xD.60136 => __i$D26722$_M_p_241
  # DEBUG __yD.60135 => 0
  # DEBUG thisD.53090 => D#19ptD.0
  # DEBUG thisD.60140 => NULL
  # DEBUG __xD.60139 => D#1045ptD.0
  # DEBUG __yD.60138 => 0
  # DEBUG thisD.60143 => D#26ptD.0
  # DEBUG __xD.60142 => D#1045ptD.0
  # DEBUG __yD.60141 => 0
  # DEBUG thisD.53090 => D#26ptD.0
  # DEBUG D#584ptD.0 => __lastD.69689
  # DEBUG D#584ptD.0 => __lastD.69689
  # DEBUG __it$D26842$_M_pD.60152 => D#1045ptD.0
  # DEBUG __it$D26842$_M_offsetD.69686 => D#1044ptD.0
  # DEBUG __it$D26842$_M_pD.60155 => D#1045ptD.0
  # DEBUG __it$D26842$_M_offsetD.60153 => 0
  # DEBUG __it$D26722$_M_pD.69724 => __i$D26722$_M_p_241
  # DEBUG __it$D26722$_M_offsetD.69722 => 0
  # DEBUG __it$D26842$_M_pD.69727 => D#1045ptD.0
  # DEBUG __it$D26842$_M_offsetD.69725 => D#1044ptD.0
  # DEBUG __it$D26842$_M_pD.69730 => D#1045ptD.0
  # DEBUG __it$D26842$_M_offsetD.69728 => 0
  # DEBUG __resultD.69914 => __i$D26722$_M_p_241
  # DEBUG __result$8D.69915 => 0
  # DEBUG __simpleD.69721 => 0
  # DEBUG __resultD.69920 => __i$D26722$_M_p_241
  # DEBUG __result$8D.69921 => 0
  # DEBUG __first$_M_pD.69756 => D#1045ptD.0
  # DEBUG __first$8D.69755 => 0
  # DEBUG __result$_M_pD.69754 => __i$D26722$_M_p_241
  # DEBUG __result$8D.69753 => 0
  # DEBUG D#16ptD.0 => &__lastD.69734.D.26842
  # DEBUG D#16ptD.0 => &__lastD.69734.D.26842
  # DEBUG D#17ptD.0 => &__firstD.69733.D.26842
  # DEBUG D#17ptD.0 => &__firstD.69733.D.26842
  # DEBUG __xD.69749 => D#16ptD.0
  # DEBUG __xD.69750 => D#16ptD.0
  # DEBUG __yD.69751 => D#17ptD.0
  # DEBUG __yD.69752 => D#17ptD.0
  # RANGE [0, 4294967295] NONZERO 4294967295
  __n_276 = (_DistanceD.47881) __first$8_480;
  # DEBUG __nD.69737 => NULL
  # DEBUG __result$8D.69753 => 0
  # DEBUG __result$_M_pD.69754 => __i$D26722$_M_p_241
  # DEBUG __first$8D.69755 => 0
  # DEBUG __first$_M_pD.69756 => D#1045ptD.0
  # DEBUG __nD.69737 => __n_276
  if (__n_276 == 0)
    goto <bb 82>;
  else
    goto <bb 69>;
;;    succ:       82 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                69 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 334, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 1, count 0, freq 3715, maybe hot
;;    prev block 69, next block 71, flags: (NEW)
;;    pred:       69 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                80 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 4294967295] NONZERO 4294967295
  # __n_495 = PHI <__n_276(69), __n_298(80)>
  # RANGE [0, 4294967295]
  # __first$8_496 = PHI <0(69), __first$8_300(80)>
  # PT = nonlocal 
  # __first_175 = PHI <__first_525(69), __first_299(80)>
  # RANGE [0, 4294967295]
  # __i$D26722$_M_offset_466 = PHI <0(69), __i$D26722$_M_offset_302(80)>
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_510 = PHI <__i$D26722$_M_p_241(69), __i$D26722$_M_p_301(80)>
  # .MEM_537 = PHI <.MEM_432(69), .MEM_498(80)>
  # DEBUG __result$8D.69753 => __i$D26722$_M_offset_466
  # DEBUG __result$_M_pD.69754 => __i$D26722$_M_p_510
  # DEBUG __first$8D.69755 => __first$8_496
  # DEBUG __first$_M_pD.69756 => __first_175
  # DEBUG __nD.69737 => __n_495
  # DEBUG D#28ptD.0 => &__firstD.69733
  # DEBUG D#28ptD.0 => &__firstD.69733
  # DEBUG thisD.69738 => D#28ptD.0
  # DEBUG thisD.69739 => D#28ptD.0
  # RANGE [0, 18446744073709551615]
  _282 = 1 << __first$8_496;
  # DEBUG thisD.53181 => NULL
  # DEBUG __xD.53180 => __first_175
  # DEBUG __yD.53179 => _282
  # DEBUG thisD.69740 => NULL
  # VUSE <.MEM_537>
  _284 = *__first_175;
  # RANGE [0, 18446744073709551615]
  _285 = _282 & _284;
  # DEBUG D#20ptD.0 => &__resultD.69735
  # DEBUG D#20ptD.0 => &__resultD.69735
  # DEBUG thisD.69741 => D#20ptD.0
  # DEBUG thisD.69742 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _287 = 1 << __i$D26722$_M_offset_466;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __i$D26722$_M_p_510
  # DEBUG __yD.53131 => _287
  # DEBUG thisD.69744 => NULL
  # DEBUG __xD.69743 => _285 != 0
  if (_285 != 0)
    goto <bb 71>;
  else
    goto <bb 72>;
;;    succ:       71 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 71, loop depth 1, count 0, freq 1858, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       70 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_537>
  _289 = *__i$D26722$_M_p_510;
  # RANGE [0, 18446744073709551615]
  _290 = _287 | _289;
  goto <bb 73>;
;;    succ:       73 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 72, loop depth 1, count 0, freq 1858, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       70 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_537>
  _291 = *__i$D26722$_M_p_510;
  # RANGE [0, 18446744073709551615]
  _292 = ~_287;
  # RANGE [0, 18446744073709551615]
  _293 = _291 & _292;
;;    succ:       73 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 73, loop depth 1, count 0, freq 3715, maybe hot
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       71 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                72 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_499 = PHI <_290(71), _293(72)>
  # .MEM_498 = VDEF <.MEM_537>
  *__i$D26722$_M_p_510 = cstore_499;
  # DEBUG thisD.69745 => &__firstD.69733
  # DEBUG D#29ptD.0 => &__firstD.69733.D.26842
  # DEBUG thisD.69746 => D#29ptD.0
  # DEBUG __first$8D.69755 => __first$8_496 + 1
  if (__first$8_496 == 63)
    goto <bb 75>;
  else
    goto <bb 74>;
;;    succ:       75 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                74 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 74, loop depth 1, count 0, freq 2675, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$8_294 = __first$8_496 + 1;
  goto <bb 76>;
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 1, count 0, freq 1040, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       73 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$8D.69755 => 0
  # PT = nonlocal 
  __first_295 = __first_175 + 8;
  # DEBUG __first$_M_pD.69756 => __first_295
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 1, count 0, freq 3715, maybe hot
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __first_299 = PHI <__first_175(74), __first_295(75)>
  # RANGE [0, 4294967295]
  # __first$8_300 = PHI <__first$8_294(74), 0(75)>
  # DEBUG __first$8D.69755 => __first$8_300
  # DEBUG __first$_M_pD.69756 => __first_299
  # DEBUG thisD.69747 => &__resultD.69735
  # DEBUG D#21ptD.0 => &__resultD.69735.D.26722
  # DEBUG thisD.69748 => D#21ptD.0
  # DEBUG __result$8D.69753 => __i$D26722$_M_offset_466 + 1
  if (__i$D26722$_M_offset_466 == 63)
    goto <bb 78>;
  else
    goto <bb 77>;
;;    succ:       78 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 77, loop depth 1, count 0, freq 2675, maybe hot
;;    prev block 76, next block 78, flags: (NEW)
;;    pred:       76 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __i$D26722$_M_offset_296 = __i$D26722$_M_offset_466 + 1;
  goto <bb 79>;
;;    succ:       79 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 78, loop depth 1, count 0, freq 1040, maybe hot
;;    prev block 77, next block 79, flags: (NEW, REACHABLE)
;;    pred:       76 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$8D.69753 => 0
  # PT = { D.69932 } (escaped heap)
  __i$D26722$_M_p_297 = __i$D26722$_M_p_510 + 8;
  # DEBUG __result$_M_pD.69754 => __i$D26722$_M_p_297
;;    succ:       79 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 79, loop depth 1, count 0, freq 3716, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       77 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                78 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_301 = PHI <__i$D26722$_M_p_510(77), __i$D26722$_M_p_297(78)>
  # RANGE [0, 4294967295]
  # __i$D26722$_M_offset_302 = PHI <__i$D26722$_M_offset_296(77), 0(78)>
  # DEBUG __result$8D.69753 => __i$D26722$_M_offset_302
  # DEBUG __result$_M_pD.69754 => __i$D26722$_M_p_301
  # RANGE [0, 4294967294] NONZERO 4294967295
  __n_298 = __n_495 + -1;
  # DEBUG __nD.69737 => __n_298
  # DEBUG __result$8D.69753 => __i$D26722$_M_offset_302
  # DEBUG __result$_M_pD.69754 => __i$D26722$_M_p_301
  # DEBUG __first$8D.69755 => __first$8_300
  # DEBUG __first$_M_pD.69756 => __first_299
  # DEBUG __nD.69737 => __n_298
  if (__n_298 == 0)
    goto <bb 81>;
  else
    goto <bb 80>;
;;    succ:       81 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 80, loop depth 1, count 0, freq 3382, maybe hot
;;    prev block 79, next block 81, flags: (NEW)
;;    pred:       79 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 70>;
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 81, loop depth 0, count 0, freq 334, maybe hot
;;    prev block 80, next block 82, flags: (NEW)
;;    pred:       79 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_494 = PHI <__i$D26722$_M_p_301(79)>
  # RANGE [0, 4294967295]
  # __i$D26722$_M_offset_493 = PHI <__i$D26722$_M_offset_302(79)>
  pretmp_437 = (long intD.12) __i$D26722$_M_offset_493;
;;    succ:       82 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 82, loop depth 0, count 0, freq 367, maybe hot
;;    prev block 81, next block 83, flags: (NEW, REACHABLE)
;;    pred:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  # __i$D26722$_M_offset_315 = PHI <__i$D26722$_M_offset_493(81), 0(68)>
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_511 = PHI <__i$D26722$_M_p_494(81), __i$D26722$_M_p_241(68)>
  # .MEM_540 = PHI <.MEM_498(81), .MEM_432(68)>
  # RANGE [0, 9223372036854775807] NONZERO 4294967295
  # prephitmp_444 = PHI <pretmp_437(81), 0(68)>
  # DEBUG __resultD.69920 => __i$D26722$_M_p_511
  # DEBUG __result$8D.69921 => __i$D26722$_M_offset_315
  # DEBUG __i$D26722$_M_pD.69894 => __i$D26722$_M_p_511
  # DEBUG __i$D26722$_M_offsetD.69895 => __i$D26722$_M_offset_315
  # DEBUG __iD.60310 => __i$D26722$_M_p_511
  # DEBUG __i$8D.60311 => __i$D26722$_M_offset_315
  # RANGE ~[0, 0]
  __n.166_16 = (long intD.12) __n_2(D);
  # DEBUG thisD.60274 => &__iD.46251
  # DEBUG __iD.60275 => __n.166_16
  # DEBUG __tmp$_M_pD.60283 => __i$D26722$_M_p_511
  # DEBUG __tmp$_M_offsetD.60282 => __i$D26722$_M_offset_315
  # DEBUG thisD.60278 => &__tmpD.60276
  # DEBUG __iD.60277 => __n.166_16
  # DEBUG D#23ptD.0 => &__tmpD.60276.D.26722
  # DEBUG thisD.60280 => D#23ptD.0
  # DEBUG __iD.60279 => __n.166_16
  # RANGE [-9223372036854775808, 9223372036854775807]
  __n_88 = __n.166_16 + prephitmp_444;
  # DEBUG __nD.60281 => __n_88
  _89 = __n_88 / 64;
  # RANGE [0, 18446744073709551615]
  _90 = (long unsigned intD.14) _89;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551608
  _91 = _90 * 8;
  # PT = { D.69932 } (escaped heap)
  __last$_M_p_92 = __i$D26722$_M_p_511 + _91;
  # DEBUG __tmp$_M_pD.60283 => __last$_M_p_92
  # RANGE [-63, 63]
  __n_93 = __n_88 % 64;
  # DEBUG __nD.60281 => __n_93
  if (__n_93 < 0)
    goto <bb 83>;
  else
    goto <bb 84>;
;;    succ:       83 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                84 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 83, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 82, next block 84, flags: (NEW, REACHABLE)
;;    pred:       82 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 63] NONZERO 63
  __n_94 = __n_93 + 64;
  # DEBUG __nD.60281 => __n_94
  # PT = { D.69932 } (escaped heap)
  __last$_M_p_95 = __last$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_pD.60283 => __last$_M_p_95
;;    succ:       84 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 84, loop depth 0, count 0, freq 367, maybe hot
;;    prev block 83, next block 85, flags: (NEW, REACHABLE)
;;    pred:       82 [73.0%]  (FALSE_VALUE,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 63] NONZERO 63
  # __n_96 = PHI <__n_93(82), __n_94(83)>
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_98 = PHI <__last$_M_p_92(82), __last$_M_p_95(83)>
  # DEBUG __tmp$_M_pD.60283 => __last$_M_p_98
  # DEBUG __nD.60281 => __n_96
  # RANGE [0, 63] NONZERO 63
  _97 = (unsigned intD.13) __n_96;
  # DEBUG __tmp$_M_offsetD.60282 => _97
  # DEBUG D#24ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_pD.60283 => D#24ptD.0
  # DEBUG D#25ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_offsetD.60282 => D#25ptD.0
  # DEBUG __first$D26722$_M_pD.69924 => __i$D26722$_M_p_511
  # DEBUG __first$D26722$_M_offsetD.69925 => __i$D26722$_M_offset_315
  # DEBUG __last$D26722$_M_pD.69926 => __last$_M_p_98
  # DEBUG __last$D26722$_M_offsetD.69927 => _97
  # DEBUG __xD.69760 => &__xD.42114
  # DEBUG __first$D26722$_M_pD.69781 => __i$D26722$_M_p_511
  # DEBUG __last$D26722$_M_pD.69780 => __last$_M_p_98
  if (__last$_M_p_98 != __i$D26722$_M_p_511)
    goto <bb 93>;
  else
    goto <bb 85>;
;;    succ:       93 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                85 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 85, loop depth 0, count 0, freq 25, maybe hot
;;    prev block 84, next block 86, flags: (NEW)
;;    pred:       84 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  if (__x_548(D) != 0)
    goto <bb 86>;
  else
    goto <bb 87>;
;;    succ:       87 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                86 [50.0%]  (TRUE_VALUE,EXECUTABLE)

;;   basic block 86, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 85, next block 87, flags: (NEW)
;;    pred:       85 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 117>;
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 87, loop depth 0, count 0, freq 13, maybe hot
;;    prev block 86, next block 88, flags: (NEW)
;;    pred:       85 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       88 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 88, loop depth 1, count 0, freq 137, maybe hot
;;    prev block 87, next block 89, flags: (NEW)
;;    pred:       87 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                92 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_242 = PHI <__last$_M_p_98(87), __i$D26722$_M_p_136(92)>
  # RANGE [0, 4294967295]
  # __i$D26722$_M_offset_234 = PHI <__i$D26722$_M_offset_315(87), __i$D26722$_M_offset_132(92)>
  # .MEM_233 = PHI <.MEM_540(87), .MEM_167(92)>
  # DEBUG __first$_M_offsetD.69828 => __i$D26722$_M_offset_234
  # DEBUG __first$_M_pD.69829 => __i$D26722$_M_p_242
  # DEBUG thisD.69825 => &__firstD.69815.D.26722
  # DEBUG __iD.69824 => &__lastD.69816.D.26722
  # DEBUG thisD.69827 => &__firstD.69815.D.26722
  # DEBUG __iD.69826 => &__lastD.69816.D.26722
  # DEBUG __first$_M_offsetD.69828 => __i$D26722$_M_offset_234
  # DEBUG __first$_M_pD.69829 => __i$D26722$_M_p_242
  # DEBUG thisD.69825 => &__firstD.69815.D.26722
  # DEBUG __iD.69824 => &__lastD.69816.D.26722
  # DEBUG thisD.69827 => &__firstD.69815.D.26722
  # DEBUG __iD.69826 => &__lastD.69816.D.26722
  # RANGE [0, 1]
  _232 = _97 == __i$D26722$_M_offset_234;
  # RANGE [0, 1]
  _230 = __last$_M_p_98 == __i$D26722$_M_p_242;
  # RANGE [0, 1]
  _215 = _232 & _230;
  if (_215 != 0)
    goto <bb 119>;
  else
    goto <bb 89>;
;;    succ:       119 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                89 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 89, loop depth 1, count 0, freq 132, maybe hot
;;    prev block 88, next block 90, flags: (NEW, REACHABLE)
;;    pred:       88 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69815
  # DEBUG D#20ptD.0 => &__firstD.69815
  # DEBUG thisD.69818 => D#20ptD.0
  # DEBUG thisD.69819 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _196 = 1 << __i$D26722$_M_offset_234;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __i$D26722$_M_p_242
  # DEBUG __yD.53131 => _196
  # DEBUG thisD.69821 => NULL
  # DEBUG __xD.69820 => __x_548(D)
  # VUSE <.MEM_233>
  _195 = *__i$D26722$_M_p_242;
  # RANGE [0, 18446744073709551615]
  _193 = ~_196;
  # RANGE [0, 18446744073709551615]
  _180 = _195 & _193;
  # .MEM_167 = VDEF <.MEM_233>
  *__i$D26722$_M_p_242 = _180;
  # DEBUG thisD.69822 => &__firstD.69815
  # DEBUG D#21ptD.0 => &__firstD.69815.D.26722
  # DEBUG thisD.69823 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69828 => __i$D26722$_M_offset_234 + 1
  if (__i$D26722$_M_offset_234 == 63)
    goto <bb 91>;
  else
    goto <bb 90>;
;;    succ:       91 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                90 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 90, loop depth 1, count 0, freq 90, maybe hot
;;    prev block 89, next block 91, flags: (NEW)
;;    pred:       89 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __i$D26722$_M_offset_163 = __i$D26722$_M_offset_234 + 1;
  goto <bb 92>;
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 91, loop depth 1, count 0, freq 35, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       89 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69828 => 0
  # PT = { D.69932 } (escaped heap)
  __i$D26722$_M_p_140 = __i$D26722$_M_p_242 + 8;
  # DEBUG __first$_M_pD.69829 => __i$D26722$_M_p_140
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 92, loop depth 1, count 0, freq 125, maybe hot
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       90 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                91 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_136 = PHI <__i$D26722$_M_p_242(90), __i$D26722$_M_p_140(91)>
  # RANGE ~[64, 64]
  # __i$D26722$_M_offset_132 = PHI <__i$D26722$_M_offset_163(90), 0(91)>
  goto <bb 88>;
;;    succ:       88 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 93, loop depth 0, count 0, freq 343, maybe hot
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       84 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  _131 = (intD.9) __x_548(D);
  _370 = -_131;
  # PT = { D.69932 } (escaped heap)
  __first_306 = __i$D26722$_M_p_511 + 8;
  # DEBUG D#75ptD.0 => &D.69784
  # DEBUG __firstD.69763 => __first_306
  # DEBUG __lastD.69762 => __last$_M_p_98
  # DEBUG D#74ptD.0 => D#75ptD.0
  # DEBUG __valueD.69761 => D#74ptD.0
  # DEBUG __itD.53614 => __last$_M_p_98
  # DEBUG __itD.53604 => __last$_M_p_98
  # DEBUG __itD.53612 => __first_306
  # DEBUG __itD.53604 => __first_306
  # DEBUG D#61ptD.0 => D#74ptD.0
  # DEBUG __firstD.69766 => __first_306
  # DEBUG __lastD.69765 => __last$_M_p_98
  # DEBUG __valueD.69764 => D#61ptD.0
  # DEBUG __tmpD.69767 => _370
  # DEBUG __firstD.69766 => __first_306
  if (__last$_M_p_98 == __first_306)
    goto <bb 94>;
  else
    goto <bb 102>;
;;    succ:       94 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                102 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 94, loop depth 0, count 0, freq 343, maybe hot
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       93 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                104 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_555 = PHI <.MEM_540(93), .MEM_402(104)>
  # DEBUG thisD.69770 => &D.69783
  # DEBUG __xD.69769 => __first_306
  # DEBUG __yD.69768 => 0
  # DEBUG D#19ptD.0 => &D.69783.D.26722
  # DEBUG thisD.69773 => D#19ptD.0
  # DEBUG __xD.69772 => __first_306
  # DEBUG __yD.69771 => 0
  # DEBUG thisD.53090 => D#19ptD.0
  # DEBUG __firstD.69930 => __i$D26722$_M_p_511
  # DEBUG __first$8D.69931 => __i$D26722$_M_offset_315
  # DEBUG __xD.69802 => __x_548(D)
  # DEBUG __first$_M_pD.69814 => __i$D26722$_M_p_511
  # DEBUG __first$_M_offsetD.69813 => __i$D26722$_M_offset_315
  if (__x_548(D) != 0)
    goto <bb 95>;
  else
    goto <bb 96>;
;;    succ:       96 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                95 [50.0%]  (TRUE_VALUE,EXECUTABLE)

;;   basic block 95, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 94, next block 96, flags: (NEW)
;;    pred:       94 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 108>;
;;    succ:       108 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 172, maybe hot
;;    prev block 95, next block 97, flags: (NEW)
;;    pred:       94 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       97 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 97, loop depth 1, count 0, freq 1905, maybe hot
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       96 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                101 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_341 = PHI <__i$D26722$_M_p_511(96), __i$D26722$_M_p_265(101)>
  # RANGE [0, 4294967295]
  # __i$D26722$_M_offset_336 = PHI <__i$D26722$_M_offset_315(96), __i$D26722$_M_offset_264(101)>
  # .MEM_335 = PHI <.MEM_555(96), .MEM_280(101)>
  # DEBUG __first$_M_offsetD.69813 => __i$D26722$_M_offset_336
  # DEBUG __first$_M_pD.69814 => __i$D26722$_M_p_341
  # DEBUG thisD.69810 => &__firstD.69800.D.26722
  # DEBUG __iD.69809 => &__lastD.69801.D.26722
  # DEBUG thisD.69812 => &__firstD.69800.D.26722
  # DEBUG __iD.69811 => &__lastD.69801.D.26722
  # RANGE [0, 1]
  _322 = __i$D26722$_M_offset_336 == 0;
  # RANGE [0, 1]
  _320 = __first_306 == __i$D26722$_M_p_341;
  # RANGE [0, 1]
  _318 = _320 & _322;
  if (_318 != 0)
    goto <bb 152>;
  else
    goto <bb 98>;
;;    succ:       152 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                98 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 98, loop depth 1, count 0, freq 1825, maybe hot
;;   Invalid sum of incoming frequencies 1372, should be 1825
;;    prev block 97, next block 99, flags: (NEW, REACHABLE)
;;    pred:       97 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69800
  # DEBUG D#20ptD.0 => &__firstD.69800
  # DEBUG thisD.69803 => D#20ptD.0
  # DEBUG thisD.69804 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _313 = 1 << __i$D26722$_M_offset_336;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __i$D26722$_M_p_341
  # DEBUG __yD.53131 => _313
  # DEBUG thisD.69806 => NULL
  # DEBUG __xD.69805 => __x_548(D)
  # VUSE <.MEM_335>
  _311 = *__i$D26722$_M_p_341;
  # RANGE [0, 18446744073709551615]
  _308 = ~_313;
  # RANGE [0, 18446744073709551615]
  _307 = _311 & _308;
  # .MEM_280 = VDEF <.MEM_335>
  *__i$D26722$_M_p_341 = _307;
  # DEBUG thisD.69807 => &__firstD.69800
  # DEBUG D#21ptD.0 => &__firstD.69800.D.26722
  # DEBUG thisD.69808 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69813 => __i$D26722$_M_offset_336 + 1
  if (__i$D26722$_M_offset_336 == 63)
    goto <bb 99>;
  else
    goto <bb 100>;
;;    succ:       99 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                100 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 99, loop depth 1, count 0, freq 485, maybe hot
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       98 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69813 => 0
  # PT = { D.69932 } (escaped heap)
  __i$D26722$_M_p_268 = __i$D26722$_M_p_341 + 8;
  # DEBUG __first$_M_pD.69814 => __i$D26722$_M_p_268
  goto <bb 101>;
;;    succ:       101 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 100, loop depth 1, count 0, freq 1248, maybe hot
;;    prev block 99, next block 101, flags: (NEW)
;;    pred:       98 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __i$D26722$_M_offset_267 = __i$D26722$_M_offset_336 + 1;
;;    succ:       101 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 101, loop depth 1, count 0, freq 1733, maybe hot
;;    prev block 100, next block 102, flags: (NEW, REACHABLE)
;;    pred:       99 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                100 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_265 = PHI <__i$D26722$_M_p_268(99), __i$D26722$_M_p_341(100)>
  # RANGE ~[64, 64]
  # __i$D26722$_M_offset_264 = PHI <0(99), __i$D26722$_M_offset_267(100)>
  goto <bb 97>;
;;    succ:       97 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 102, loop depth 0, count 0, freq 312, maybe hot
;;    prev block 101, next block 103, flags: (NEW)
;;    pred:       93 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  pretmp_522 = (long unsigned intD.14) _370;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 103, loop depth 1, count 0, freq 3466, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       102 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                105 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __first_171 = PHI <__first_306(102), __first_310(105)>
  # .MEM_541 = PHI <.MEM_540(102), .MEM_514(105)>
  # DEBUG __firstD.69766 => __first_171
  # .MEM_514 = VDEF <.MEM_541>
  *__first_171 = pretmp_522;
  # PT = { D.69932 } (escaped heap)
  __first_310 = __first_171 + 8;
  # DEBUG __firstD.69766 => __first_310
  # DEBUG __firstD.69766 => __first_310
  if (__last$_M_p_98 == __first_310)
    goto <bb 104>;
  else
    goto <bb 105>;
;;    succ:       104 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                105 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 312, maybe hot
;;    prev block 103, next block 105, flags: (NEW)
;;    pred:       103 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_402 = PHI <.MEM_514(103)>
  goto <bb 94>;
;;    succ:       94 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 105, loop depth 1, count 0, freq 3154, maybe hot
;;    prev block 104, next block 106, flags: (NEW)
;;    pred:       103 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 103>;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 1, count 0, freq 1248, maybe hot
;;    prev block 105, next block 107, flags: (NEW)
;;    pred:       161 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __i$D26722$_M_offset_349 = __i$D26722$_M_offset_340 + 1;
;;    succ:       107 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 107, loop depth 1, count 0, freq 1733, maybe hot
;;    prev block 106, next block 108, flags: (NEW, REACHABLE)
;;    pred:       106 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                109 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_99 = PHI <__i$D26722$_M_p_338(106), __i$D26722$_M_p_350(109)>
  # RANGE ~[64, 64]
  # __i$D26722$_M_offset_127 = PHI <__i$D26722$_M_offset_349(106), 0(109)>
;;    succ:       108 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 108, loop depth 1, count 0, freq 1905, maybe hot
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       107 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
;;                95 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_338 = PHI <__i$D26722$_M_p_99(107), __i$D26722$_M_p_511(95)>
  # RANGE [0, 4294967295]
  # __i$D26722$_M_offset_340 = PHI <__i$D26722$_M_offset_127(107), __i$D26722$_M_offset_315(95)>
  # .MEM_436 = PHI <.MEM_526(107), .MEM_555(95)>
  # DEBUG __first$_M_offsetD.69813 => __i$D26722$_M_offset_340
  # DEBUG __first$_M_pD.69814 => __i$D26722$_M_p_338
  # DEBUG thisD.69810 => &__firstD.69800.D.26722
  # DEBUG __iD.69809 => &__lastD.69801.D.26722
  # DEBUG thisD.69812 => &__firstD.69800.D.26722
  # DEBUG __iD.69811 => &__lastD.69801.D.26722
  # RANGE [0, 1]
  _568 = __i$D26722$_M_offset_340 == 0;
  # RANGE [0, 1]
  _567 = __first_306 == __i$D26722$_M_p_338;
  # RANGE [0, 1]
  _558 = _567 & _568;
  if (_558 != 0)
    goto <bb 152>;
  else
    goto <bb 161>;
;;    succ:       152 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                161 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 109, loop depth 1, count 0, freq 485, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       161 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69813 => 0
  # PT = { D.69932 } (escaped heap)
  __i$D26722$_M_p_350 = __i$D26722$_M_p_338 + 8;
  # DEBUG __first$_M_pD.69814 => __i$D26722$_M_p_350
  goto <bb 107>;
;;    succ:       107 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 110, loop depth 1, count 0, freq 1248, maybe hot
;;    prev block 109, next block 111, flags: (NEW)
;;    pred:       163 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$_M_offset_330 = __first$_M_offset_321 + 1;
;;    succ:       111 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 111, loop depth 1, count 0, freq 1733, maybe hot
;;    prev block 110, next block 112, flags: (NEW, REACHABLE)
;;    pred:       110 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                114 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_332 = PHI <__last$_M_p_319(110), __last$_M_p_331(114)>
  # RANGE ~[64, 64]
  # __first$_M_offset_371 = PHI <__first$_M_offset_330(110), 0(114)>
;;    succ:       112 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 112, loop depth 1, count 0, freq 1905, maybe hot
;;    prev block 111, next block 113, flags: (NEW, REACHABLE)
;;    pred:       111 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
;;                153 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_319 = PHI <__last$_M_p_332(111), __last$_M_p_98(153)>
  # RANGE [0, 4294967295]
  # __first$_M_offset_321 = PHI <__first$_M_offset_371(111), 0(153)>
  # .MEM_438 = PHI <.MEM_512(111), .MEM_521(153)>
  # DEBUG __first$_M_offsetD.69798 => __first$_M_offset_321
  # DEBUG __first$_M_pD.69799 => __last$_M_p_319
  # DEBUG thisD.69795 => &__firstD.69785.D.26722
  # DEBUG __iD.69794 => &__lastD.69786.D.26722
  # DEBUG thisD.69797 => &__firstD.69785.D.26722
  # DEBUG __iD.69796 => &__lastD.69786.D.26722
  if (__last$_M_p_98 == __last$_M_p_319)
    goto <bb 113>;
  else
    goto <bb 163>;
;;    succ:       113 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                163 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 113, loop depth 1, count 0, freq 286, maybe hot
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       112 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69798 => __first$_M_offset_321
  # DEBUG __first$_M_pD.69799 => __last$_M_p_319
  # DEBUG thisD.69795 => &__firstD.69785.D.26722
  # DEBUG __iD.69794 => &__lastD.69786.D.26722
  # DEBUG thisD.69797 => &__firstD.69785.D.26722
  # DEBUG __iD.69796 => &__lastD.69786.D.26722
  if (_97 == __first$_M_offset_321)
    goto <bb 162>;
  else
    goto <bb 163>;
;;    succ:       162 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                163 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 114, loop depth 1, count 0, freq 485, maybe hot
;;    prev block 113, next block 115, flags: (NEW, REACHABLE)
;;    pred:       163 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69798 => 0
  # PT = { D.69932 } (escaped heap)
  __last$_M_p_331 = __last$_M_p_319 + 8;
  # DEBUG __first$_M_pD.69799 => __last$_M_p_331
  goto <bb 111>;
;;    succ:       111 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 115, loop depth 1, count 0, freq 90, maybe hot
;;    prev block 114, next block 116, flags: (NEW)
;;    pred:       164 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __i$D26722$_M_offset_368 = __i$D26722$_M_offset_359 + 1;
;;    succ:       116 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 116, loop depth 1, count 0, freq 125, maybe hot
;;    prev block 115, next block 117, flags: (NEW, REACHABLE)
;;    pred:       115 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                118 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_129 = PHI <__i$D26722$_M_p_357(115), __i$D26722$_M_p_369(118)>
  # RANGE ~[64, 64]
  # __i$D26722$_M_offset_130 = PHI <__i$D26722$_M_offset_368(115), 0(118)>
;;    succ:       117 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 117, loop depth 1, count 0, freq 137, maybe hot
;;    prev block 116, next block 118, flags: (NEW)
;;    pred:       86 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                116 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __i$D26722$_M_p_357 = PHI <__last$_M_p_98(86), __i$D26722$_M_p_129(116)>
  # RANGE [0, 4294967295]
  # __i$D26722$_M_offset_359 = PHI <__i$D26722$_M_offset_315(86), __i$D26722$_M_offset_130(116)>
  # .MEM_440 = PHI <.MEM_540(86), .MEM_519(116)>
  # DEBUG __first$_M_offsetD.69828 => __i$D26722$_M_offset_359
  # DEBUG __first$_M_pD.69829 => __i$D26722$_M_p_357
  # DEBUG thisD.69825 => &__firstD.69815.D.26722
  # DEBUG __iD.69824 => &__lastD.69816.D.26722
  # DEBUG thisD.69827 => &__firstD.69815.D.26722
  # DEBUG __iD.69826 => &__lastD.69816.D.26722
  # DEBUG __first$_M_offsetD.69828 => __i$D26722$_M_offset_359
  # DEBUG __first$_M_pD.69829 => __i$D26722$_M_p_357
  # DEBUG thisD.69825 => &__firstD.69815.D.26722
  # DEBUG __iD.69824 => &__lastD.69816.D.26722
  # DEBUG thisD.69827 => &__firstD.69815.D.26722
  # DEBUG __iD.69826 => &__lastD.69816.D.26722
  # RANGE [0, 1]
  _15 = _97 == __i$D26722$_M_offset_359;
  # RANGE [0, 1]
  _560 = __last$_M_p_98 == __i$D26722$_M_p_357;
  # RANGE [0, 1]
  _559 = _15 & _560;
  if (_559 != 0)
    goto <bb 119>;
  else
    goto <bb 164>;
;;    succ:       119 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                164 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 118, loop depth 1, count 0, freq 35, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       164 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69828 => 0
  # PT = { D.69932 } (escaped heap)
  __i$D26722$_M_p_369 = __i$D26722$_M_p_357 + 8;
  # DEBUG __first$_M_pD.69829 => __i$D26722$_M_p_369
  goto <bb 116>;
;;    succ:       116 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 119, loop depth 0, count 0, freq 367, maybe hot
;;   Invalid sum of incoming frequencies 236, should be 367
;;    prev block 118, next block 120, flags: (NEW, REACHABLE)
;;    pred:       117 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                162 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_442 = PHI <.MEM_440(117), .MEM_528(162), .MEM_233(88)>
  # DEBUG thisD.60263 => &__iD.46251
  # DEBUG __iD.60264 => __n.166_16
  # DEBUG __tmp$_M_pD.60272 => __i$D26722$_M_p_511
  # DEBUG __tmp$_M_offsetD.60271 => __i$D26722$_M_offset_315
  # DEBUG thisD.60267 => &__tmpD.60265
  # DEBUG __iD.60266 => __n.166_16
  # DEBUG D#23ptD.0 => &__tmpD.60265.D.26722
  # DEBUG thisD.60269 => D#23ptD.0
  # DEBUG __iD.60268 => __n.166_16
  # DEBUG __nD.60270 => __n_88
  # DEBUG __tmp$_M_pD.60272 => __last$_M_p_92
  # DEBUG __nD.60270 => __n_93
  if (__n_93 < 0)
    goto <bb 120>;
  else
    goto <bb 121>;
;;    succ:       120 [27.0%]  (TRUE_VALUE,EXECUTABLE)
;;                121 [73.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 120, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 119, next block 121, flags: (NEW, REACHABLE)
;;    pred:       119 [27.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 63] NONZERO 63
  __n_82 = __n_93 + 64;
  # DEBUG __nD.60270 => __n_82
  # PT = { D.69932 } (escaped heap)
  __last$_M_p_83 = __last$_M_p_92 + 18446744073709551608;
  # DEBUG __tmp$_M_pD.60272 => __last$_M_p_83
;;    succ:       121 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 121, loop depth 0, count 0, freq 367, maybe hot
;;    prev block 120, next block 122, flags: (NEW, REACHABLE)
;;    pred:       119 [73.0%]  (FALSE_VALUE,EXECUTABLE)
;;                120 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 63] NONZERO 63
  # __n_84 = PHI <__n_93(119), __n_82(120)>
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_86 = PHI <__last$_M_p_92(119), __last$_M_p_83(120)>
  # DEBUG __tmp$_M_pD.60272 => __last$_M_p_86
  # DEBUG __nD.60270 => __n_84
  # RANGE [0, 63] NONZERO 63
  __result$8_85 = (const unsigned intD.13) __n_84;
  # DEBUG __tmp$_M_offsetD.60271 => __result$8_85
  # DEBUG D#24ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_pD.60272 => D#24ptD.0
  # DEBUG D#25ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_offsetD.60271 => D#25ptD.0
  # DEBUG thisD.60261 => this_4(D)
  # VUSE <.MEM_442>
  # PT = nonlocal escaped 
  __it$D26722$_M_p_111 = MEM[(struct vectorD.41308 *)this_4(D) + 16B];
  # VUSE <.MEM_442>
  __it$D26722$_M_offset_112 = MEM[(struct vectorD.41308 *)this_4(D) + 24B];
  # DEBUG D#532ptD.0 => __positionD.42112
  # DEBUG D#532ptD.0 => __positionD.42112
  # DEBUG D#533ptD.0 => D.51676
  # DEBUG D#533ptD.0 => D.51676
  # DEBUG D#534ptD.0 => D.51675
  # DEBUG D#534ptD.0 => D.51675
  # DEBUG __it$D26722$_M_pD.60258 => __it$D26722$_M_p_111
  # DEBUG __it$D26722$_M_offsetD.60260 => __it$D26722$_M_offset_112
  # DEBUG __it$D26722$_M_pD.60255 => D#1045ptD.0
  # DEBUG __it$D26722$_M_offsetD.60257 => D#1044ptD.0
  # DEBUG __it$D26722$_M_pD.69860 => __last$_M_p_86
  # DEBUG __it$D26722$_M_offsetD.69862 => __result$8_85
  # DEBUG __it$D26722$_M_pD.69857 => __it$D26722$_M_p_111
  # DEBUG __it$D26722$_M_offsetD.69859 => __it$D26722$_M_offset_112
  # DEBUG __it$D26722$_M_pD.69854 => D#1045ptD.0
  # DEBUG __it$D26722$_M_offsetD.69856 => D#1044ptD.0
  # DEBUG __simpleD.69851 => 0
  # DEBUG __first$_M_pD.69888 => D#1045ptD.0
  # DEBUG __first$8D.69887 => D#1044ptD.0
  # DEBUG __result$_M_pD.69886 => __last$_M_p_86
  # DEBUG __result$8D.69885 => __result$8_85
  # DEBUG D#16ptD.0 => &__lastD.69864.D.26722
  # DEBUG D#16ptD.0 => &__lastD.69864.D.26722
  # DEBUG D#17ptD.0 => &__firstD.69863.D.26722
  # DEBUG D#17ptD.0 => &__firstD.69863.D.26722
  # DEBUG __xD.69881 => D#16ptD.0
  # DEBUG __xD.69882 => D#16ptD.0
  # DEBUG __yD.69883 => D#17ptD.0
  # DEBUG __yD.69884 => D#17ptD.0
  _391 = (long intD.12) __it$D26722$_M_p_111;
  _393 = _391 - __last.173_235;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551608
  _394 = _393 * 8;
  # RANGE [0, 4294967295] NONZERO 4294967295
  _395 = (long intD.12) __it$D26722$_M_offset_112;
  _396 = _394 + _395;
  __n_398 = _396 - __n_276;
  # DEBUG __nD.69867 => NULL
  # DEBUG __result$8D.69885 => __result$8_85
  # DEBUG __result$_M_pD.69886 => __last$_M_p_86
  # DEBUG __first$8D.69887 => D#1044ptD.0
  # DEBUG __first$_M_pD.69888 => D#1045ptD.0
  # DEBUG __nD.69867 => __n_398
  if (__n_398 <= 0)
    goto <bb 135>;
  else
    goto <bb 122>;
;;    succ:       135 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                122 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 122, loop depth 0, count 0, freq 334, maybe hot
;;    prev block 121, next block 123, flags: (NEW, REACHABLE)
;;    pred:       121 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       123 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 123, loop depth 1, count 0, freq 3715, maybe hot
;;    prev block 122, next block 124, flags: (NEW)
;;    pred:       122 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                134 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_470 = PHI <__n_398(122), __n_417(134)>
  # __first$8_471 = PHI <__first$8_480(122), __first$8_419(134)>
  # RANGE [0, 63] NONZERO 63
  # __result$8_473 = PHI <__result$8_85(122), __result$8_421(134)>
  # PT = nonlocal 
  # __first_530 = PHI <__first_525(122), __first_418(134)>
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_531 = PHI <__last$_M_p_86(122), __last$_M_p_420(134)>
  # .MEM_543 = PHI <.MEM_442(122), .MEM_538(134)>
  # DEBUG __result$8D.69885 => __result$8_473
  # DEBUG __result$_M_pD.69886 => __last$_M_p_531
  # DEBUG __first$8D.69887 => __first$8_471
  # DEBUG __first$_M_pD.69888 => __first_530
  # DEBUG __nD.69867 => __n_470
  # DEBUG D#20ptD.0 => &__firstD.69863
  # DEBUG D#20ptD.0 => &__firstD.69863
  # DEBUG thisD.69868 => D#20ptD.0
  # DEBUG thisD.69869 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _401 = 1 << __first$8_471;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __first_530
  # DEBUG __yD.53131 => _401
  # DEBUG D#20ptD.0 => &__resultD.69865
  # DEBUG D#20ptD.0 => &__resultD.69865
  # DEBUG thisD.69870 => D#20ptD.0
  # DEBUG thisD.69871 => D#20ptD.0
  # RANGE [1, 9223372036854775808]
  _403 = 1 << __result$8_473;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __last$_M_p_531
  # DEBUG __yD.53131 => _403
  # DEBUG thisD.69873 => NULL
  # DEBUG __xD.69872 => NULL
  # DEBUG thisD.69874 => NULL
  # VUSE <.MEM_543>
  _405 = *__first_530;
  # RANGE [0, 18446744073709551615]
  _406 = _401 & _405;
  # DEBUG thisD.69876 => NULL
  # DEBUG __xD.69875 => _406 != 0
  if (_406 != 0)
    goto <bb 124>;
  else
    goto <bb 125>;
;;    succ:       124 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                125 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 124, loop depth 1, count 0, freq 1858, maybe hot
;;    prev block 123, next block 125, flags: (NEW, REACHABLE)
;;    pred:       123 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_543>
  _408 = *__last$_M_p_531;
  # RANGE [0, 18446744073709551615]
  _409 = _403 | _408;
  goto <bb 126>;
;;    succ:       126 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 125, loop depth 1, count 0, freq 1858, maybe hot
;;    prev block 124, next block 126, flags: (NEW, REACHABLE)
;;    pred:       123 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_543>
  _410 = *__last$_M_p_531;
  # RANGE [9223372036854775807, 18446744073709551614]
  _411 = ~_403;
  # RANGE [0, 18446744073709551614]
  _412 = _410 & _411;
;;    succ:       126 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 126, loop depth 1, count 0, freq 3715, maybe hot
;;    prev block 125, next block 127, flags: (NEW, REACHABLE)
;;    pred:       124 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                125 [100.0%]  (FALLTHRU,EXECUTABLE)
  # cstore_539 = PHI <_409(124), _412(125)>
  # .MEM_538 = VDEF <.MEM_543>
  *__last$_M_p_531 = cstore_539;
  # DEBUG thisD.69877 => &__firstD.69863
  # DEBUG D#21ptD.0 => &__firstD.69863.D.26722
  # DEBUG thisD.69878 => D#21ptD.0
  # DEBUG __first$8D.69887 => __first$8_471 + 1
  if (__first$8_471 == 63)
    goto <bb 128>;
  else
    goto <bb 127>;
;;    succ:       128 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                127 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 127, loop depth 1, count 0, freq 2675, maybe hot
;;    prev block 126, next block 128, flags: (NEW)
;;    pred:       126 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$8_413 = __first$8_471 + 1;
  goto <bb 129>;
;;    succ:       129 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 128, loop depth 1, count 0, freq 1040, maybe hot
;;    prev block 127, next block 129, flags: (NEW, REACHABLE)
;;    pred:       126 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$8D.69887 => 0
  # PT = nonlocal 
  __first_414 = __first_530 + 8;
  # DEBUG __first$_M_pD.69888 => __first_414
;;    succ:       129 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 129, loop depth 1, count 0, freq 3715, maybe hot
;;    prev block 128, next block 130, flags: (NEW, REACHABLE)
;;    pred:       127 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                128 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __first_418 = PHI <__first_530(127), __first_414(128)>
  # RANGE ~[64, 64]
  # __first$8_419 = PHI <__first$8_413(127), 0(128)>
  # DEBUG __first$8D.69887 => __first$8_419
  # DEBUG __first$_M_pD.69888 => __first_418
  # DEBUG thisD.69879 => &__resultD.69865
  # DEBUG D#21ptD.0 => &__resultD.69865.D.26722
  # DEBUG thisD.69880 => D#21ptD.0
  # DEBUG __result$8D.69885 => __result$8_473 + 1
  if (__result$8_473 == 63)
    goto <bb 131>;
  else
    goto <bb 130>;
;;    succ:       131 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                130 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 130, loop depth 1, count 0, freq 2675, maybe hot
;;    prev block 129, next block 131, flags: (NEW)
;;    pred:       129 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [1, 64] NONZERO 127
  __result$8_415 = __result$8_473 + 1;
  goto <bb 132>;
;;    succ:       132 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 131, loop depth 1, count 0, freq 1040, maybe hot
;;    prev block 130, next block 132, flags: (NEW, REACHABLE)
;;    pred:       129 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __result$8D.69885 => 0
  # PT = { D.69932 } (escaped heap)
  __last$_M_p_416 = __last$_M_p_531 + 8;
  # DEBUG __result$_M_pD.69886 => __last$_M_p_416
;;    succ:       132 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 132, loop depth 1, count 0, freq 3716, maybe hot
;;    prev block 131, next block 133, flags: (NEW, REACHABLE)
;;    pred:       130 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                131 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_420 = PHI <__last$_M_p_531(130), __last$_M_p_416(131)>
  # RANGE [0, 63] NONZERO 63
  # __result$8_421 = PHI <__result$8_415(130), 0(131)>
  # DEBUG __result$8D.69885 => __result$8_421
  # DEBUG __result$_M_pD.69886 => __last$_M_p_420
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_417 = __n_470 + -1;
  # DEBUG __nD.69867 => __n_417
  # DEBUG __result$8D.69885 => __result$8_421
  # DEBUG __result$_M_pD.69886 => __last$_M_p_420
  # DEBUG __first$8D.69887 => __first$8_419
  # DEBUG __first$_M_pD.69888 => __first_418
  # DEBUG __nD.69867 => __n_417
  if (__n_417 <= 0)
    goto <bb 133>;
  else
    goto <bb 134>;
;;    succ:       133 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                134 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 133, loop depth 0, count 0, freq 334, maybe hot
;;    prev block 132, next block 134, flags: (NEW)
;;    pred:       132 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_486 = PHI <__last$_M_p_420(132)>
  # RANGE [0, 63] NONZERO 63
  # __result$8_485 = PHI <__result$8_421(132)>
  goto <bb 135>;
;;    succ:       135 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 134, loop depth 1, count 0, freq 3382, maybe hot
;;    prev block 133, next block 135, flags: (NEW)
;;    pred:       132 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 123>;
;;    succ:       123 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 135, loop depth 0, count 0, freq 367, maybe hot
;;    prev block 134, next block 136, flags: (NEW, REACHABLE)
;;    pred:       133 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                121 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 63] NONZERO 63
  # __result$8_529 = PHI <__result$8_485(133), __result$8_85(121)>
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_532 = PHI <__last$_M_p_486(133), __last$_M_p_86(121)>
  # .MEM_544 = PHI <.MEM_538(133), .MEM_442(121)>
  # .MEM_115 = VDEF <.MEM_544>
  MEM[(struct _Bit_iteratorD.26670 *)this_4(D) + 16B] = __last$_M_p_532;
  # .MEM_116 = VDEF <.MEM_115>
  MEM[(struct _Bit_iteratorD.26670 *)this_4(D) + 24B] = __result$8_529;
  # DEBUG D#1038ptD.0 => &this_4(D)->D.42205
  # DEBUG thisD.69830 => D#1038ptD.0
  if (SR.1081_100 != 0B)
    goto <bb 136>;
  else
    goto <bb 137>;
;;    succ:       136 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                137 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 136, loop depth 0, count 0, freq 330, maybe hot
;;    prev block 135, next block 137, flags: (NEW, REACHABLE)
;;    pred:       135 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#277ptD.0 => &D#1038ptD.0->_M_implD.41731
  # VUSE <.MEM_116>
  # PT = nonlocal escaped 
  _373 = MEM[(long unsigned intD.14 * *)this_4(D) + 32B];
  # DEBUG D#177ptD.0 => D#277ptD.0
  # DEBUG thisD.69832 => D#177ptD.0
  _375 = (long intD.12) _373;
  # RANGE ~[0, 0]
  _376 = (long intD.12) SR.1081_100;
  _377 = _375 - _376;
  # DEBUG D#280ptD.0 => _377 /[ex] 8
  # DEBUG D#279ptD.0 => (const size_tD.2818) D#280ptD.0
  # DEBUG __nD.69831 => D#279ptD.0
  # RANGE [0, 18446744073709551615]
  _378 = (long unsigned intD.14) _377;
  # RANGE [0, 18446744073709551615]
  _379 = -_378;
  # PT = nonlocal escaped 
  _380 = _373 + _379;
  # DEBUG D#278ptD.0 => &D#1038ptD.0->_M_implD.41731
  # DEBUG D#275ptD.0 => D#278ptD.0
  # DEBUG D#276ptD.0 => D#279ptD.0
  # DEBUG __pD.69835 => _380
  # DEBUG __aD.69833 => D#275ptD.0
  # DEBUG __nD.69834 => D#276ptD.0
  # DEBUG D#274ptD.0 => D#276ptD.0
  # DEBUG D#273ptD.0 => D#275ptD.0
  # DEBUG D#271ptD.0 => D#273ptD.0
  # DEBUG D#272ptD.0 => D#274ptD.0
  # DEBUG __pD.69838 => _380
  # DEBUG thisD.69836 => D#271ptD.0
  # DEBUG D.69837 => D#272ptD.0
  # .MEM_546 = VDEF <.MEM_116>
  # USE = nonlocal null { D.69932 } (escaped heap)
  # CLB = nonlocal null { D.69932 } (escaped heap)
  _ZdlPvD.2766 (_380);
;;    succ:       137 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 137, loop depth 0, count 0, freq 367, maybe hot
;;    prev block 136, next block 138, flags: (NEW, REACHABLE)
;;    pred:       136 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                135 [10.1%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_445 = PHI <.MEM_546(136), .MEM_116(135)>
  # DEBUG __nD.60245 => NULL
  # PT = { D.69932 } (escaped heap)
  _20 = _81 + prephitmp_147;
  # .MEM_21 = VDEF <.MEM_445>
  this_4(D)->D.42205._M_implD.41731._M_end_of_storageD.41735 = _20;
  # .MEM_117 = VDEF <.MEM_21>
  MEM[(struct _Bit_iteratorD.26670 *)this_4(D)] = _81;
  # .MEM_118 = VDEF <.MEM_117>
  MEM[(struct _Bit_iteratorD.26670 *)this_4(D) + 8B] = 0;
  # DEBUG D#591ptD.0 => {CLOBBER}
  # DEBUG __start$_M_pD.60308 => D#591ptD.0
  # DEBUG D#592ptD.0 => {CLOBBER}
  # DEBUG __start$_M_offsetD.60309 => D#592ptD.0
  # DEBUG D#1039ptD.0 => {CLOBBER}
  # DEBUG __i$D26722$_M_pD.69894 => D#1039ptD.0
  # DEBUG D#1040ptD.0 => {CLOBBER}
  # DEBUG __i$D26722$_M_offsetD.69895 => D#1040ptD.0
  # DEBUG D#593ptD.0 => {CLOBBER}
  # DEBUG __iD.60310 => D#593ptD.0
  # DEBUG D#594ptD.0 => {CLOBBER}
  # DEBUG __i$8D.60311 => D#594ptD.0
;;    succ:       138 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 138, loop depth 0, count 0, freq 2078, maybe hot
;;    prev block 137, next block 139, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                137 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_3(D)(2), .MEM_103(60), .MEM_118(137)>
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 139, loop depth 0, count 0, freq 392, maybe hot
;;   Invalid sum of incoming frequencies 2612, should be 392
;;    prev block 138, next block 140, flags: (NEW, REACHABLE)
;;    pred:       46 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_479 = PHI <.MEM_425(46), .MEM_536(35)>
  # .MEM_476 = VDEF <.MEM_479>
  D.69614 ={v} {CLOBBER};
  # DEBUG thisD.69607 => &D.69613
  # DEBUG __xD.69606 => __last$_M_p_67
  # DEBUG __yD.69605 => 0
  # DEBUG D#19ptD.0 => &D.69613.D.26722
  # DEBUG thisD.69610 => D#19ptD.0
  # DEBUG __xD.69609 => __last$_M_p_67
  # DEBUG __yD.69608 => 0
  # DEBUG thisD.53090 => D#19ptD.0
  # DEBUG __last$_M_pD.69904 => __last$_M_p_67
  # DEBUG __last$_M_offsetD.69905 => _66
  # DEBUG __xD.69618 => __x_548(D)
  # DEBUG __first$_M_pD.69630 => __last$_M_p_67
  # DEBUG __first$_M_offsetD.69629 => 0
  if (__x_548(D) != 0)
    goto <bb 140>;
  else
    goto <bb 141>;
;;    succ:       141 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                140 [50.0%]  (TRUE_VALUE,EXECUTABLE)

;;   basic block 140, loop depth 0, count 0, freq 196, maybe hot
;;    prev block 139, next block 141, flags: (NEW)
;;    pred:       139 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 50>;
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 141, loop depth 0, count 0, freq 196, maybe hot
;;    prev block 140, next block 142, flags: (NEW)
;;    pred:       139 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       142 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 142, loop depth 1, count 0, freq 4664, maybe hot
;;   Invalid sum of incoming frequencies 4440, should be 4664
;;    prev block 141, next block 143, flags: (NEW, REACHABLE)
;;    pred:       141 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                147 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal 
  # __last$_M_p_508 = PHI <__last$_M_p_67(141), __last$_M_p_553(147)>
  # RANGE [0, 4294967295]
  # __first$_M_offset_505 = PHI <0(141), __first$_M_offset_552(147)>
  # .MEM_497 = PHI <.MEM_476(141), .MEM_516(147)>
  # DEBUG __first$_M_offsetD.69629 => __first$_M_offset_505
  # DEBUG __first$_M_pD.69630 => __last$_M_p_508
  # DEBUG thisD.69626 => &__firstD.69616.D.26722
  # DEBUG __iD.69625 => &__lastD.69617.D.26722
  # DEBUG thisD.69628 => &__firstD.69616.D.26722
  # DEBUG __iD.69627 => &__lastD.69617.D.26722
  if (__last$_M_p_67 == __last$_M_p_508)
    goto <bb 143>;
  else
    goto <bb 144>;
;;    succ:       143 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                144 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 143, loop depth 1, count 0, freq 700, maybe hot
;;    prev block 142, next block 144, flags: (NEW, REACHABLE)
;;    pred:       142 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69629 => __first$_M_offset_505
  # DEBUG __first$_M_pD.69630 => __last$_M_p_508
  # DEBUG thisD.69626 => &__firstD.69616.D.26722
  # DEBUG __iD.69625 => &__lastD.69617.D.26722
  # DEBUG thisD.69628 => &__firstD.69616.D.26722
  # DEBUG __iD.69627 => &__lastD.69617.D.26722
  if (_66 == __first$_M_offset_505)
    goto <bb 150>;
  else
    goto <bb 144>;
;;    succ:       150 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                144 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 144, loop depth 1, count 0, freq 4468, maybe hot
;;    prev block 143, next block 145, flags: (NEW, REACHABLE)
;;    pred:       142 [85.0%]  (FALSE_VALUE,EXECUTABLE)
;;                143 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69616
  # DEBUG D#20ptD.0 => &__firstD.69616
  # DEBUG thisD.69619 => D#20ptD.0
  # DEBUG thisD.69620 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _260 = 1 << __first$_M_offset_505;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __last$_M_p_508
  # DEBUG __yD.53131 => _260
  # DEBUG thisD.69622 => NULL
  # DEBUG __xD.69621 => __x_548(D)
  # VUSE <.MEM_497>
  _534 = *__last$_M_p_508;
  # RANGE [0, 18446744073709551615]
  _549 = ~_260;
  # RANGE [0, 18446744073709551615]
  _304 = _534 & _549;
  # .MEM_516 = VDEF <.MEM_497>
  *__last$_M_p_508 = _304;
  # DEBUG thisD.69623 => &__firstD.69616
  # DEBUG D#21ptD.0 => &__firstD.69616.D.26722
  # DEBUG thisD.69624 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69629 => __first$_M_offset_505 + 1
  if (__first$_M_offset_505 == 63)
    goto <bb 146>;
  else
    goto <bb 145>;
;;    succ:       146 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                145 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 145, loop depth 1, count 0, freq 3056, maybe hot
;;   Invalid sum of incoming frequencies 3217, should be 3056
;;    prev block 144, next block 146, flags: (NEW)
;;    pred:       144 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$_M_offset_173 = __first$_M_offset_505 + 1;
  goto <bb 147>;
;;    succ:       147 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 146, loop depth 1, count 0, freq 1189, maybe hot
;;    prev block 145, next block 147, flags: (NEW, REACHABLE)
;;    pred:       144 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69629 => 0
  # PT = nonlocal 
  __last$_M_p_554 = __last$_M_p_508 + 8;
  # DEBUG __first$_M_pD.69630 => __last$_M_p_554
;;    succ:       147 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 147, loop depth 1, count 0, freq 4244, maybe hot
;;    prev block 146, next block 148, flags: (NEW, REACHABLE)
;;    pred:       145 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                146 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __last$_M_p_553 = PHI <__last$_M_p_508(145), __last$_M_p_554(146)>
  # RANGE [0, 4294967295]
  # __first$_M_offset_552 = PHI <__first$_M_offset_173(145), 0(146)>
  goto <bb 142>;
;;    succ:       142 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 148, loop depth 1, count 0, freq 4468, maybe hot
;;   Invalid sum of incoming frequencies 3358, should be 4468
;;    prev block 147, next block 149, flags: (NEW, REACHABLE)
;;    pred:       46 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69631
  # DEBUG D#20ptD.0 => &__firstD.69631
  # DEBUG thisD.69634 => D#20ptD.0
  # DEBUG thisD.69635 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _203 = 1 << __first$8_200;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __first_198
  # DEBUG __yD.53131 => _203
  # DEBUG thisD.69637 => NULL
  # DEBUG __xD.69636 => __x_548(D)
  # VUSE <.MEM_425>
  _204 = *__first_198;
  # RANGE [0, 18446744073709551615]
  _205 = _203 | _204;
  # .MEM_481 = VDEF <.MEM_425>
  *__first_198 = _205;
  # DEBUG thisD.69638 => &__firstD.69631
  # DEBUG D#21ptD.0 => &__firstD.69631.D.26722
  # DEBUG thisD.69639 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69644 => __first$8_200 + 1
  if (__first$8_200 == 63)
    goto <bb 47>;
  else
    goto <bb 44>;
;;    succ:       47 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 149, loop depth 1, count 0, freq 4468, maybe hot
;;    prev block 148, next block 150, flags: (NEW, REACHABLE)
;;    pred:       51 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                50 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69616
  # DEBUG D#20ptD.0 => &__firstD.69616
  # DEBUG thisD.69619 => D#20ptD.0
  # DEBUG thisD.69620 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _184 = 1 << __first$_M_offset_181;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __last$_M_p_179
  # DEBUG __yD.53131 => _184
  # DEBUG thisD.69622 => NULL
  # DEBUG __xD.69621 => __x_548(D)
  # VUSE <.MEM_427>
  _185 = *__last$_M_p_179;
  # RANGE [0, 18446744073709551615]
  _186 = _184 | _185;
  # .MEM_467 = VDEF <.MEM_427>
  *__last$_M_p_179 = _186;
  # DEBUG thisD.69623 => &__firstD.69616
  # DEBUG D#21ptD.0 => &__firstD.69616.D.26722
  # DEBUG thisD.69624 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69629 => __first$_M_offset_181 + 1
  if (__first$_M_offset_181 == 63)
    goto <bb 52>;
  else
    goto <bb 48>;
;;    succ:       52 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 150, loop depth 0, count 0, freq 392, maybe hot
;;    prev block 149, next block 151, flags: (NEW, REACHABLE)
;;    pred:       51 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                143 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_551 = PHI <.MEM_427(51), .MEM_497(143)>
  # .MEM_483 = VDEF <.MEM_551>
  D.69613 ={v} {CLOBBER};
  goto <bb 57>;
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 151, loop depth 1, count 0, freq 322, maybe hot
;;    prev block 150, next block 152, flags: (NEW, REACHABLE)
;;    pred:       55 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69646
  # DEBUG D#20ptD.0 => &__firstD.69646
  # DEBUG thisD.69649 => D#20ptD.0
  # DEBUG thisD.69650 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _222 = 1 << __first$8_219;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __first_217
  # DEBUG __yD.53131 => _222
  # DEBUG thisD.69652 => NULL
  # DEBUG __xD.69651 => __x_548(D)
  # VUSE <.MEM_429>
  _223 = *__first_217;
  # RANGE [0, 18446744073709551615]
  _224 = _222 | _223;
  # .MEM_474 = VDEF <.MEM_429>
  *__first_217 = _224;
  # DEBUG thisD.69653 => &__firstD.69646
  # DEBUG D#21ptD.0 => &__firstD.69646.D.26722
  # DEBUG thisD.69654 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69659 => __first$8_219 + 1
  if (__first$8_219 == 63)
    goto <bb 56>;
  else
    goto <bb 53>;
;;    succ:       56 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 152, loop depth 0, count 0, freq 160, maybe hot
;;   Invalid sum of incoming frequencies 1066, should be 160
;;    prev block 151, next block 153, flags: (NEW, REACHABLE)
;;    pred:       108 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                97 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_258 = PHI <.MEM_436(108), .MEM_335(97)>
  # .MEM_521 = VDEF <.MEM_258>
  D.69783 ={v} {CLOBBER};
  # DEBUG thisD.69776 => &D.69782
  # DEBUG __xD.69775 => __last$_M_p_98
  # DEBUG __yD.69774 => 0
  # DEBUG D#19ptD.0 => &D.69782.D.26722
  # DEBUG thisD.69779 => D#19ptD.0
  # DEBUG __xD.69778 => __last$_M_p_98
  # DEBUG __yD.69777 => 0
  # DEBUG thisD.53090 => D#19ptD.0
  # DEBUG __last$_M_pD.69928 => __last$_M_p_98
  # DEBUG __last$_M_offsetD.69929 => _97
  # DEBUG __xD.69787 => __x_548(D)
  # DEBUG __first$_M_pD.69799 => __last$_M_p_98
  # DEBUG __first$_M_offsetD.69798 => 0
  if (__x_548(D) != 0)
    goto <bb 153>;
  else
    goto <bb 154>;
;;    succ:       154 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                153 [50.0%]  (TRUE_VALUE,EXECUTABLE)

;;   basic block 153, loop depth 0, count 0, freq 80, maybe hot
;;    prev block 152, next block 154, flags: (NEW)
;;    pred:       152 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 112>;
;;    succ:       112 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 154, loop depth 0, count 0, freq 80, maybe hot
;;    prev block 153, next block 155, flags: (NEW)
;;    pred:       152 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       155 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 155, loop depth 1, count 0, freq 1905, maybe hot
;;    prev block 154, next block 156, flags: (NEW, REACHABLE)
;;    pred:       154 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                160 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_435 = PHI <__last$_M_p_98(154), __last$_M_p_383(160)>
  # RANGE [0, 4294967295]
  # __first$_M_offset_434 = PHI <0(154), __first$_M_offset_374(160)>
  # .MEM_430 = PHI <.MEM_521(154), .MEM_400(160)>
  # DEBUG __first$_M_offsetD.69798 => __first$_M_offset_434
  # DEBUG __first$_M_pD.69799 => __last$_M_p_435
  # DEBUG thisD.69795 => &__firstD.69785.D.26722
  # DEBUG __iD.69794 => &__lastD.69786.D.26722
  # DEBUG thisD.69797 => &__firstD.69785.D.26722
  # DEBUG __iD.69796 => &__lastD.69786.D.26722
  if (__last$_M_p_98 == __last$_M_p_435)
    goto <bb 156>;
  else
    goto <bb 157>;
;;    succ:       156 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                157 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 156, loop depth 1, count 0, freq 286, maybe hot
;;    prev block 155, next block 157, flags: (NEW, REACHABLE)
;;    pred:       155 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69798 => __first$_M_offset_434
  # DEBUG __first$_M_pD.69799 => __last$_M_p_435
  # DEBUG thisD.69795 => &__firstD.69785.D.26722
  # DEBUG __iD.69794 => &__lastD.69786.D.26722
  # DEBUG thisD.69797 => &__firstD.69785.D.26722
  # DEBUG __iD.69796 => &__lastD.69786.D.26722
  if (_97 == __first$_M_offset_434)
    goto <bb 162>;
  else
    goto <bb 157>;
;;    succ:       162 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                157 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 157, loop depth 1, count 0, freq 1825, maybe hot
;;    prev block 156, next block 158, flags: (NEW, REACHABLE)
;;    pred:       155 [85.0%]  (FALSE_VALUE,EXECUTABLE)
;;                156 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69785
  # DEBUG D#20ptD.0 => &__firstD.69785
  # DEBUG thisD.69788 => D#20ptD.0
  # DEBUG thisD.69789 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _428 = 1 << __first$_M_offset_434;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __last$_M_p_435
  # DEBUG __yD.53131 => _428
  # DEBUG thisD.69791 => NULL
  # DEBUG __xD.69790 => __x_548(D)
  # VUSE <.MEM_430>
  _426 = *__last$_M_p_435;
  # RANGE [0, 18446744073709551615]
  _424 = ~_428;
  # RANGE [0, 18446744073709551615]
  _423 = _426 & _424;
  # .MEM_400 = VDEF <.MEM_430>
  *__last$_M_p_435 = _423;
  # DEBUG thisD.69792 => &__firstD.69785
  # DEBUG D#21ptD.0 => &__firstD.69785.D.26722
  # DEBUG thisD.69793 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69798 => __first$_M_offset_434 + 1
  if (__first$_M_offset_434 == 63)
    goto <bb 159>;
  else
    goto <bb 158>;
;;    succ:       159 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                158 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 158, loop depth 1, count 0, freq 1248, maybe hot
;;    prev block 157, next block 159, flags: (NEW)
;;    pred:       157 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE [0, 4294967295]
  __first$_M_offset_399 = __first$_M_offset_434 + 1;
  goto <bb 160>;
;;    succ:       160 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 159, loop depth 1, count 0, freq 485, maybe hot
;;    prev block 158, next block 160, flags: (NEW, REACHABLE)
;;    pred:       157 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __first$_M_offsetD.69798 => 0
  # PT = { D.69932 } (escaped heap)
  __last$_M_p_384 = __last$_M_p_435 + 8;
  # DEBUG __first$_M_pD.69799 => __last$_M_p_384
;;    succ:       160 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 160, loop depth 1, count 0, freq 1733, maybe hot
;;    prev block 159, next block 161, flags: (NEW, REACHABLE)
;;    pred:       158 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                159 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = { D.69932 } (escaped heap)
  # __last$_M_p_383 = PHI <__last$_M_p_435(158), __last$_M_p_384(159)>
  # RANGE ~[64, 64]
  # __first$_M_offset_374 = PHI <__first$_M_offset_399(158), 0(159)>
  goto <bb 155>;
;;    succ:       155 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 161, loop depth 1, count 0, freq 1825, maybe hot
;;   Invalid sum of incoming frequencies 1372, should be 1825
;;    prev block 160, next block 162, flags: (NEW, REACHABLE)
;;    pred:       108 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69800
  # DEBUG D#20ptD.0 => &__firstD.69800
  # DEBUG thisD.69803 => D#20ptD.0
  # DEBUG thisD.69804 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _343 = 1 << __i$D26722$_M_offset_340;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __i$D26722$_M_p_338
  # DEBUG __yD.53131 => _343
  # DEBUG thisD.69806 => NULL
  # DEBUG __xD.69805 => __x_548(D)
  # VUSE <.MEM_436>
  _344 = *__i$D26722$_M_p_338;
  # RANGE [0, 18446744073709551615]
  _345 = _343 | _344;
  # .MEM_526 = VDEF <.MEM_436>
  *__i$D26722$_M_p_338 = _345;
  # DEBUG thisD.69807 => &__firstD.69800
  # DEBUG D#21ptD.0 => &__firstD.69800.D.26722
  # DEBUG thisD.69808 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69813 => __i$D26722$_M_offset_340 + 1
  if (__i$D26722$_M_offset_340 == 63)
    goto <bb 109>;
  else
    goto <bb 106>;
;;    succ:       109 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                106 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 162, loop depth 0, count 0, freq 160, maybe hot
;;    prev block 161, next block 163, flags: (NEW, REACHABLE)
;;    pred:       113 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                156 [28.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_360 = PHI <.MEM_438(113), .MEM_430(156)>
  # .MEM_528 = VDEF <.MEM_360>
  D.69782 ={v} {CLOBBER};
  goto <bb 119>;
;;    succ:       119 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 163, loop depth 1, count 0, freq 1825, maybe hot
;;    prev block 162, next block 164, flags: (NEW, REACHABLE)
;;    pred:       113 [72.0%]  (FALSE_VALUE,EXECUTABLE)
;;                112 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69785
  # DEBUG D#20ptD.0 => &__firstD.69785
  # DEBUG thisD.69788 => D#20ptD.0
  # DEBUG thisD.69789 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _324 = 1 << __first$_M_offset_321;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __last$_M_p_319
  # DEBUG __yD.53131 => _324
  # DEBUG thisD.69791 => NULL
  # DEBUG __xD.69790 => __x_548(D)
  # VUSE <.MEM_438>
  _325 = *__last$_M_p_319;
  # RANGE [0, 18446744073709551615]
  _326 = _324 | _325;
  # .MEM_512 = VDEF <.MEM_438>
  *__last$_M_p_319 = _326;
  # DEBUG thisD.69792 => &__firstD.69785
  # DEBUG D#21ptD.0 => &__firstD.69785.D.26722
  # DEBUG thisD.69793 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69798 => __first$_M_offset_321 + 1
  if (__first$_M_offset_321 == 63)
    goto <bb 114>;
  else
    goto <bb 110>;
;;    succ:       114 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                110 [72.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 164, loop depth 1, count 0, freq 132, maybe hot
;;    prev block 163, next block 1, flags: (NEW, REACHABLE)
;;    pred:       117 [72.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#20ptD.0 => &__firstD.69815
  # DEBUG D#20ptD.0 => &__firstD.69815
  # DEBUG thisD.69818 => D#20ptD.0
  # DEBUG thisD.69819 => D#20ptD.0
  # RANGE [0, 18446744073709551615]
  _362 = 1 << __i$D26722$_M_offset_359;
  # DEBUG thisD.53133 => NULL
  # DEBUG __xD.53132 => __i$D26722$_M_p_357
  # DEBUG __yD.53131 => _362
  # DEBUG thisD.69821 => NULL
  # DEBUG __xD.69820 => __x_548(D)
  # VUSE <.MEM_440>
  _363 = *__i$D26722$_M_p_357;
  # RANGE [0, 18446744073709551615]
  _364 = _362 | _363;
  # .MEM_519 = VDEF <.MEM_440>
  *__i$D26722$_M_p_357 = _364;
  # DEBUG thisD.69822 => &__firstD.69815
  # DEBUG D#21ptD.0 => &__firstD.69815.D.26722
  # DEBUG thisD.69823 => D#21ptD.0
  # DEBUG __first$_M_offsetD.69828 => __i$D26722$_M_offset_359 + 1
  if (__i$D26722$_M_offset_359 == 63)
    goto <bb 118>;
  else
    goto <bb 115>;
;;    succ:       118 [28.0%]  (TRUE_VALUE,EXECUTABLE)
;;                115 [72.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function virtual void BufferState::FeedbackSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState26FeedbackSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2186, decl_uid=41211, cgraph_uid=653, symbol_order=654)


Pass statistics:
----------------

virtual void BufferState::FeedbackSharedBufferPolicy::SendingFlit(const Flit*) (struct FeedbackSharedBufferPolicyD.40434 * const thisD.43710, const struct FlitD.33590 * const fD.43708)
Eh tree:
   3 cleanup land:{2,<L1>}
{
  size_typeD.11502 __dnewD.70106;
  intD.9 iD.70045;
  const intD.9 vcD.70040;
  const struct stringD.2845 D.70085;
  const value_typeD.43628 D.43712;
  struct SharedBufferPolicyD.39699 * _2;
  intD.9 _9;
  long unsigned intD.14 _10;
  struct dequeD.40449 * _11;
  struct queueD.40450 * _13;
  long unsigned intD.14 _14;
  struct queueD.40450 & _15;
  intD.9 * _17;
  intD.9 * _18;
  intD.9 * _19;
  intD.9 * _21;
  long unsigned intD.14 _22;
  intD.9 * _23;
  long unsigned intD.14 _24;
  intD.9 & _25;
  intD.9 _26;
  intD.9 _27;
  intD.9 * _28;
  intD.9 & _29;
  long unsigned intD.14 _31;
  intD.9 * _32;
  long unsigned intD.14 _33;
  intD.9 & _34;
  intD.9 _35;
  intD.9 _36;
  intD.9 * _37;
  intD.9 & _38;
  intD.9 _39;
  intD.9 _40;
  intD.9 _41;
  intD.9 _42;
  intD.9 & _43;
  charD.10 * const _44;
  boolD.2757 _45;
  intD.9 * _46;
  intD.9 & _47;
  intD.9 _48;
  intD.9 _49;
  charD.10 * const _50;
  intD.9 * _57;
  intD.9 _59;
  charD.10 * _60;
  long unsigned intD.14 __dnew.49_61;
  long unsigned intD.14 __dnew.49_64;
  charD.10 * const _65;
  charD.10 * _66;
  intD.9 * _68;
  intD.9 * _69;
  intD.9 _70;
  intD.9 * * _71;
  intD.9 * * _72;
  intD.9 * _73;
  intD.9 * _74;
  long unsigned intD.14 _76;
  intD.9 * * _77;
  long intD.12 _78;
  intD.9 * * _79;
  long intD.12 _80;
  long intD.12 _81;
  long intD.12 _82;
  long unsigned intD.14 _83;
  long unsigned intD.14 _84;
  intD.9 * * pretmp_108;
  intD.9 * * prephitmp_109;
  intD.9 & _132;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _2 = &this_1(D)->D.41247;
  # DEBUG thisD.70038 => _2
  # DEBUG fD.70039 => f_4(D)
  # VUSE <.MEM_3(D)>
  vc_16 = f_4(D)->vcD.33600;
  # DEBUG vcD.70040 => vc_16
  # RANGE ~[2147483648, 18446744071562067967]
  _22 = (long unsigned intD.14) vc_16;
  # DEBUG D#334ptD.0 => &_2->_reserved_slotsD.40245
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _23 = MEM[(intD.9 * *)this_1(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.70044 => _22
  # DEBUG thisD.70043 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _24 = _22 * 4;
  # PT = nonlocal escaped 
  _25 = _23 + _24;
  # VUSE <.MEM_3(D)>
  _26 = *_25;
  if (_26 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_2->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _22
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _27 = _26 + -1;
  # .MEM_93 = VDEF <.MEM_3(D)>
  *_25 = _27;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_2->_private_buf_vc_mapD.40240
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _28 = MEM[(intD.9 * *)this_1(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.70080 => _22
  # DEBUG thisD.70079 => D#43ptD.0
  # PT = nonlocal escaped 
  _29 = _28 + _24;
  # VUSE <.MEM_3(D)>
  i_30 = *_29;
  # DEBUG iD.70045 => i_30
  # RANGE ~[2147483648, 18446744071562067967]
  _31 = (long unsigned intD.14) i_30;
  # DEBUG D#337ptD.0 => &_2->_private_buf_occupancyD.40242
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _32 = MEM[(intD.9 * *)this_1(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.70082 => _31
  # DEBUG thisD.70081 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _33 = _31 * 4;
  # PT = nonlocal escaped 
  _34 = _32 + _33;
  # VUSE <.MEM_3(D)>
  _35 = *_34;
  _36 = _35 + 1;
  # .MEM_94 = VDEF <.MEM_3(D)>
  *_34 = _36;
  # DEBUG D#338ptD.0 => &_2->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _31
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_2->_private_buf_sizeD.40241
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)this_1(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.70084 => _31
  # DEBUG thisD.70083 => D#43ptD.0
  # PT = nonlocal escaped 
  _38 = _37 + _33;
  # VUSE <.MEM_94>
  _39 = *_38;
  if (_36 > _39)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_94(4), .MEM_95(6)>
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_94>
  _40 = MEM[(struct SharedBufferPolicyD.39699 *)this_1(D)]._shared_buf_occupancyD.40244;
  _41 = _40 + 1;
  # .MEM_95 = VDEF <.MEM_94>
  MEM[(struct SharedBufferPolicyD.39699 *)this_1(D)]._shared_buf_occupancyD.40244 = _41;
  # VUSE <.MEM_95>
  _42 = MEM[(struct SharedBufferPolicyD.39699 *)this_1(D)]._shared_buf_sizeD.40243;
  if (_41 > _42)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70078 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.70087 => &D.70085
  # DEBUG __sD.70088 => "Shared buffer overflow."
  # DEBUG __aD.70089 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.70099 => &D.70085
  # DEBUG D#296ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.70102 => D#296ptD.0
  # DEBUG __datD.70101 => &D.70085.D.11539._M_local_bufD.11541
  # DEBUG __aD.70100 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  MEM[(struct _Alloc_hiderD.11518 *)&D.70085]._M_pD.11525 = &D.70085.D.11539._M_local_bufD.11541;
  # DEBUG __sD.70098 => "Shared buffer overflow."
  # DEBUG thisD.70092 => &D.70085
  # DEBUG __begD.70091 => "Shared buffer overflow."
  # DEBUG __endD.70090 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.70096 => &D.70085
  # DEBUG __begD.70095 => "Shared buffer overflow."
  # DEBUG __endD.70094 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.70103 => &D.70085
  # DEBUG __begD.70104 => "Shared buffer overflow."
  # DEBUG __endD.70105 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.70129 => "Shared buffer overflow."
  # DEBUG __lastD.70128 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.70129
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.70131 => "Shared buffer overflow."
  # DEBUG __lastD.70130 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_97 = VDEF <.MEM_96>
  __dnewD.70106 = 23;
  # .MEM_98 = VDEF <.MEM_97>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _60 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.70085, &__dnewD.70106, 0);
  # DEBUG D#7ptD.0 => &D.70085
  # DEBUG __pD.70125 => _60
  # DEBUG thisD.70124 => D#7ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  MEM[(charD.10 * *)&D.70085] = _60;
  # VUSE <.MEM_99>
  __dnew.49_61 = __dnewD.70106;
  # DEBUG D#8ptD.0 => &D.70085
  # DEBUG __capacityD.70127 => __dnew.49_61
  # DEBUG thisD.70126 => D#8ptD.0
  # .MEM_100 = VDEF <.MEM_99>
  MEM[(size_typeD.11502 *)&D.70085 + 16B] = __dnew.49_61;
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.70109 => _60
  # DEBUG __k1D.70108 => "Shared buffer overflow."
  # DEBUG __k2D.70107 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.70112 => _60
  # DEBUG __sD.70111 => "Shared buffer overflow."
  # DEBUG __nD.70110 => 23
  # DEBUG __s1D.70115 => _60
  # DEBUG __s2D.70114 => "Shared buffer overflow."
  # DEBUG __nD.70113 => 23
  # .MEM_102 = VDEF <.MEM_100>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  memcpyD.992 (_60, "Shared buffer overflow.", 23);
  # VUSE <.MEM_102>
  __dnew.49_64 = __dnewD.70106;
  # DEBUG thisD.70119 => &D.70085
  # DEBUG __nD.70118 => __dnew.49_64
  # DEBUG D#9ptD.0 => &D.70085
  # DEBUG __lengthD.70121 => __dnew.49_64
  # DEBUG thisD.70120 => D#9ptD.0
  # .MEM_103 = VDEF <.MEM_102>
  MEM[(size_typeD.11502 *)&D.70085 + 8B] = __dnew.49_64;
  # VUSE <.MEM_103>
  # PT = nonlocal escaped null { D.70085 } (escaped)
  _65 = MEM[(charD.10 * *)&D.70085];
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.70085 } (escaped)
  _66 = _65 + __dnew.49_64;
  # DEBUG __c1D.70123 => _66
  # DEBUG __c2D.70122 => D#10ptD.0
  # .MEM_104 = VDEF <.MEM_103>
  MEM[(char_typeD.6629 &)_66] = 0;
  # .MEM_105 = VDEF <.MEM_104>
  __dnewD.70106 ={v} {CLOBBER};
  [LP 2] # .MEM_106 = VDEF <.MEM_105>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_2, &D.70085);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.70062 => &D.70085
  # DEBUG thisD.70063 => &D.70085
  # DEBUG thisD.70072 => &D.70085
  # VUSE <.MEM_106>
  # PT = nonlocal escaped null { D.70085 } (escaped)
  _44 = MEM[(charD.10 * *)&D.70085];
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.70073 => &D.70085
  if (&D.70085.D.11539._M_local_bufD.11541 != _44)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.70085.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.70065 => &D.70085
  # DEBUG __sizeD.70064 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.70085
  # DEBUG D#185ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.70068 => _44
  # DEBUG __aD.70066 => D#183ptD.0
  # DEBUG __nD.70067 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.70071 => _44
  # DEBUG thisD.70069 => D#179ptD.0
  # DEBUG D.70070 => D#180ptD.0
  # .MEM_107 = VDEF <.MEM_106>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZdlPvD.2766 (_44);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_106(8), .MEM_107(9)>
  # DEBUG D#189ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG thisD.70074 => D#189ptD.0
  # DEBUG thisD.70075 => D#189ptD.0
  # DEBUG thisD.70076 => D#189ptD.0
  # .MEM_112 = VDEF <.MEM_53>
  D.70085 ={v} {CLOBBER};
  # DEBUG thisD.70077 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_85 = PHI <.MEM_93(3), .MEM_62(5), .MEM_112(10)>
  # VUSE <.MEM_85>
  _45 = f_4(D)->tailD.33603;
  if (_45 != 0)
    goto <bb 12>;
  else
    goto <bb 19>;
;;    succ:       12 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_2->_reserved_slotsD.40245
  # VUSE <.MEM_85>
  # PT = nonlocal escaped 
  _57 = MEM[(intD.9 * *)this_1(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.70042 => _22
  # DEBUG thisD.70041 => D#43ptD.0
  # PT = nonlocal escaped 
  _132 = _57 + _24;
  # VUSE <.MEM_85>
  _59 = *_132;
  if (_59 != 0)
    goto <bb 13>;
  else
    goto <bb 19>;
;;    succ:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _43 = PHI <_132(13), _47(15)>
  # _70 = PHI <_59(13), _48(15)>
  # .MEM_58 = PHI <.MEM_85(13), .MEM_120(15)>
  # DEBUG D#341ptD.0 => &_2->_reserved_slotsD.40245
  # DEBUG __nD.70042 => _22
  # DEBUG thisD.70041 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_2->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _22
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _49 = _70 + -1;
  # .MEM_119 = VDEF <.MEM_58>
  *_43 = _49;
  # .MEM_120 = VDEF <.MEM_119>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_2, vc_16);
  # DEBUG D#341ptD.0 => &_2->_reserved_slotsD.40245
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _46 = MEM[(intD.9 * *)this_1(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.70042 => _22
  # DEBUG thisD.70041 => D#43ptD.0
  # PT = nonlocal escaped 
  _47 = _46 + _24;
  # VUSE <.MEM_120>
  _48 = *_47;
  if (_48 != 0)
    goto <bb 15>;
  else
    goto <bb 19>;
;;    succ:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L1>: [LP 2]
  # DEBUG thisD.70047 => &D.70085
  # DEBUG thisD.70048 => &D.70085
  # DEBUG thisD.70057 => &D.70085
  # VUSE <.MEM_106>
  # PT = nonlocal escaped null { D.70085 } (escaped)
  _50 = MEM[(charD.10 * *)&D.70085];
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.70058 => &D.70085
  if (&D.70085.D.11539._M_local_bufD.11541 != _50)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.70085.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.70050 => &D.70085
  # DEBUG __sizeD.70049 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.70085
  # DEBUG D#185ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.70053 => _50
  # DEBUG __aD.70051 => D#183ptD.0
  # DEBUG __nD.70052 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.70056 => _50
  # DEBUG thisD.70054 => D#179ptD.0
  # DEBUG D.70055 => D#180ptD.0
  # .MEM_113 = VDEF <.MEM_106>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZdlPvD.2766 (_50);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_106(16), .MEM_113(17)>
  # DEBUG D#189ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG thisD.70059 => D#189ptD.0
  # DEBUG thisD.70060 => D#189ptD.0
  # DEBUG thisD.70061 => D#189ptD.0
  # .MEM_118 = VDEF <.MEM_87>
  D.70085 ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 19, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                14 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_67 = PHI <.MEM_85(11), .MEM_85(12), .MEM_120(14)>
  # .MEM_6 = VDEF <.MEM_67>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _7 = _Z10GetSimTimevD.42335 ();
  # VUSE <.MEM_6>
  _9 = f_4(D)->vcD.33600;
  # RANGE ~[2147483648, 18446744071562067967]
  _10 = (long unsigned intD.14) _9;
  # DEBUG D#622ptD.0 => &this_1(D)->_flit_sent_timeD.41197
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _13 = MEM[(struct queueD.40450 * *)this_1(D) + 272B];
  # DEBUG D#53ptD.0 => D#622ptD.0
  # DEBUG __nD.60979 => _10
  # DEBUG thisD.60980 => D#53ptD.0
  # RANGE [0, 18446744073709551536] NONZERO 18446744073709551600
  _14 = _10 * 80;
  # PT = nonlocal escaped 
  _15 = _13 + _14;
  # DEBUG thisD.60976 => NULL
  # DEBUG __xD.60977 => &D.43712
  # DEBUG D#1068ptD.0 => &_15->cD.43633
  # DEBUG thisD.70030 => D#1068ptD.0
  # DEBUG __xD.70031 => &D.43712
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _17 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_curD.42940;
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _18 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_lastD.42942;
  # PT = nonlocal escaped 
  _19 = _18 + 18446744073709551612;
  if (_17 != _19)
    goto <bb 20>;
  else
    goto <bb 23>;
;;    succ:       20 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 1376, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#621ptD.0 => &D#1068ptD.0->D.43590._M_implD.43041
  # DEBUG D#82ptD.0 => D#621ptD.0
  # DEBUG __pD.70034 => _17
  # DEBUG __argD.70033 => &D.43712
  # DEBUG __aD.70032 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#82ptD.0
  # DEBUG D#80ptD.0 => D#81ptD.0
  # DEBUG __pD.70037 => _17
  # DEBUG __valD.70036 => &D.43712
  # DEBUG thisD.70035 => D#80ptD.0
  # DEBUG D#11ptD.0 => 4
  # DEBUG __pD.53755 => _17
  # DEBUG D.53756 => D#11ptD.0
  if (_17 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 1237, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_129 = VDEF <.MEM_6>
  *_17 = _7;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 1376, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       20 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_89 = PHI <.MEM_6(20), .MEM_129(21)>
  # PT = nonlocal escaped 
  _21 = _17 + 4;
  # .MEM_130 = VDEF <.MEM_89>
  MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_curD.42940 = _21;
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       19 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.70132 => D#1068ptD.0
  # DEBUG __tD.70133 => &D.43712
  # DEBUG thisD.70146 => D#1068ptD.0
  # DEBUG __nodes_to_addD.70147 => 1
  # VUSE <.MEM_6>
  _76 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_map_sizeD.43044;
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _77 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  _78 = (long intD.12) _77;
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _79 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_mapD.43043;
  _80 = (long intD.12) _79;
  _81 = _78 - _80;
  # RANGE [-1152921504606846975, 1152921504606846976]
  _82 = _81 /[ex] -8;
  # RANGE ~[1152921504606846977, 17293822569102704640]
  _83 = (long unsigned intD.14) _82;
  # RANGE [0, 18446744073709551615]
  _84 = _76 + _83;
  if (_84 <= 1)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 39, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  _11 = &_15->cD.43633;
  # .MEM_121 = VDEF <.MEM_6>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmbD.43542 (_11, 1, 0);
  # VUSE <.MEM_121>
  pretmp_108 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_121(24), .MEM_6(23)>
  # PT = nonlocal escaped 
  # prephitmp_109 = PHI <pretmp_108(24), _77(23)>
  # DEBUG D#620ptD.0 => &D#1068ptD.0->D.43590
  # DEBUG D#392ptD.0 => D#620ptD.0
  # DEBUG thisD.70134 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG __sizeD.56854 => 4
  # DEBUG D#390ptD.0 => &D#391ptD.0->_M_implD.43041
  # DEBUG D#386ptD.0 => D#390ptD.0
  # DEBUG __nD.70137 => NULL
  # DEBUG __aD.70136 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.70140 => NULL
  # DEBUG thisD.70138 => D#383ptD.0
  # DEBUG D.70139 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  # .MEM_122 = VDEF <.MEM_90>
  # PT = { D.70150 } (escaped heap)
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _68 = _ZnwmD.2764 (512);
  # .MEM_123 = VDEF <.MEM_122>
  MEM[(intD.9 * *)prephitmp_109 + 8B] = _68;
  # VUSE <.MEM_123>
  # PT = nonlocal escaped 
  _69 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_curD.42940;
  # DEBUG D#619ptD.0 => &D#1068ptD.0->D.43590._M_implD.43041
  # DEBUG D#80ptD.0 => D#619ptD.0
  # DEBUG __pD.70143 => _69
  # DEBUG __valD.70142 => &D.43712
  # DEBUG thisD.70141 => D#80ptD.0
  # DEBUG D#11ptD.0 => 4
  # DEBUG __pD.53755 => _69
  # DEBUG D.53756 => D#11ptD.0
  if (_69 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_124 = VDEF <.MEM_123>
  *_69 = _7;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       25 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_123(25), .MEM_124(26)>
  # VUSE <.MEM_91>
  # PT = nonlocal escaped 
  _71 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _72 = _71 + 8;
  # DEBUG D#618ptD.0 => &D#1068ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.70145 => D#618ptD.0
  # DEBUG __new_nodeD.70144 => _72
  # .MEM_125 = VDEF <.MEM_91>
  MEM[(struct _Deque_iteratorD.42908 *)_15 + 48B]._M_nodeD.42943 = _72;
  # VUSE <.MEM_125>
  # PT = nonlocal escaped 
  _73 = MEM[(intD.9 * *)_71 + 8B];
  # .MEM_126 = VDEF <.MEM_125>
  MEM[(struct _Deque_iteratorD.42908 *)_15 + 48B]._M_firstD.42941 = _73;
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _74 = _73 + 512;
  # .MEM_127 = VDEF <.MEM_126>
  MEM[(struct _Deque_iteratorD.42908 *)_15 + 48B]._M_lastD.42942 = _74;
  # .MEM_128 = VDEF <.MEM_127>
  MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_curD.42940 = _73;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 27, next block 1, flags: (NEW, REACHABLE)
;;    pred:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_128(27), .MEM_130(22)>
  # VUSE <.MEM_92>
  return;
;;    succ:       EXIT [100.0%] 

}



Updating SSA:
Registering new PHI nodes in block #14
Updating SSA information for statement BufferState::SharedBufferPolicy::ProcessFreeSlot (_2, vc_16);
Updating SSA information for statement _46 = MEM[(int * *)this_1(D) + 192B];
Updating SSA information for statement _48 = *_47;
Registering new PHI nodes in block #15
Registering new PHI nodes in block #29

DFA Statistics for virtual void BufferState::FeedbackSharedBufferPolicy::SendingFlit(const Flit*)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            162       1296b
DEF operands                             65        520b
VUSE operands                            63        504b
VDEF operands                            30        240b
PHI nodes                                14       1456b
PHI arguments                            29       1392b
---------------------------------------------------------
Total memory used by DFA/SSA data                 5408b
---------------------------------------------------------

Average number of arguments per PHI node: 2.1 (max: 3)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_111 -> { .MEM_120 }
Incremental SSA update started at block: 14
Number of blocks in CFG: 30
Number of blocks to update: 3 ( 10%)
Affected blocks: 14 15 29


Creating dr for f_4(D)->vc
analyze_innermost: success.
	base_address: f_4(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: *f_4(D)
	Access function 0: 32
Creating dr for MEM[(int * *)this_1(D) + 192B]
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_1(D) + 192B]
Creating dr for *_25
analyze_innermost: success.
	base_address: _23 + (long unsigned int) vc_16 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_25
Creating dr for *_25
analyze_innermost: success.
	base_address: _23 + (long unsigned int) vc_16 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_25
Creating dr for MEM[(int * *)this_1(D) + 112B]
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_1(D) + 112B]
Creating dr for *_29
analyze_innermost: success.
	base_address: _28 + (long unsigned int) vc_16 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_29
Creating dr for MEM[(int * *)this_1(D) + 160B]
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_1(D) + 160B]
Creating dr for *_34
analyze_innermost: success.
	base_address: _32 + (long unsigned int) i_30 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_34
Creating dr for *_34
analyze_innermost: success.
	base_address: _32 + (long unsigned int) i_30 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_34
Creating dr for MEM[(int * *)this_1(D) + 136B]
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_1(D) + 136B]
Creating dr for *_38
analyze_innermost: success.
	base_address: _37 + (long unsigned int) i_30 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_38
Creating dr for MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_1(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_1(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_size
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_1(D)]
	Access function 0: 1472
Creating dr for MEM[(struct _Alloc_hider *)&D.70085]._M_p
analyze_innermost: success.
	base_address: &D.70085
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.70085]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.70085]
analyze_innermost: success.
	base_address: &D.70085
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.70085]
Creating dr for MEM[(char * *)&D.70085]
analyze_innermost: success.
	base_address: &D.70085
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.70085]
Creating dr for f_4(D)->tail
analyze_innermost: success.
	base_address: f_4(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_4(D)
	Access function 0: 104
Creating dr for MEM[(int * *)this_1(D) + 192B]
analyze_innermost: success.
	base_address: this_1(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_1(D) + 192B]
Creating dr for *_132
analyze_innermost: success.
	base_address: _57 + (long unsigned int) vc_16 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_132
Creating dr for *_43
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_43
Creating dr for *_43
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_43
Creating dr for *_43
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_43
Creating dr for *_43
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_43
Creating dr for *_43
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_43
Creating dr for *_43
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_43
Creating dr for *_43
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_43
Creating dr for *_43
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_43
Creating dr for *_17
analyze_innermost: success.
	base_address: _17
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_17
Creating dr for MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(struct deque *)_15]
	Access function 0: 0
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct deque *)_15].D.43590._M_impl._M_map_size
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct deque *)_15]
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(struct deque *)_15]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct deque *)_15].D.43590._M_impl._M_map
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct deque *)_15]
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for *_69
analyze_innermost: success.
	base_address: _69
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_69
Creating dr for MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(struct deque *)_15]
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(struct _Deque_iterator *)_15 + 48B]._M_node
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)_15 + 48B]
	Access function 0: 192
Creating dr for MEM[(int * *)_71 + 8B]
analyze_innermost: success.
	base_address: _71
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)_71 + 8B]
Creating dr for MEM[(struct _Deque_iterator *)_15 + 48B]._M_first
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)_15 + 48B]
	Access function 0: 64
Creating dr for MEM[(struct _Deque_iterator *)_15 + 48B]._M_last
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)_15 + 48B]
	Access function 0: 128
Creating dr for MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur
analyze_innermost: success.
	base_address: _13 + (long unsigned int) _9 * 80
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(struct deque *)_15]
	Access function 0: 0
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:12)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:34, LOOPS:1, CONDITIONS:13, STMTS:335)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    _2 = &this_1(D)->D.41247;
    # DEBUG this => _2
    # DEBUG f => f_4(D)
    # VUSE <.MEM_3(D)>
    vc_16 = f_4(D)->vc;
    # DEBUG vc => vc_16
    _22 = (long unsigned int) vc_16;
    # DEBUG D#334 => &_2->_reserved_slots
    # VUSE <.MEM_3(D)>
    _23 = MEM[(int * *)this_1(D) + 192B];
    # DEBUG D#43 => D#334
    # DEBUG __n => _22
    # DEBUG this => D#43
    _24 = _22 * 4;
    _25 = _23 + _24;
    # VUSE <.MEM_3(D)>
    _26 = *_25;
    if (_26 > 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_11 })
  {
    <bb 3>:
    # DEBUG D#335 => &_2->_reserved_slots
    # DEBUG D#43 => D#335
    # DEBUG __n => _22
    # DEBUG this => D#43
    _27 = _26 + -1;
    # .MEM_93 = VDEF <.MEM_3(D)>
    *_25 = _27;
    goto <bb 11>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_6 bb_5 })
  {
    <bb 4>:
    # DEBUG D#336 => &_2->_private_buf_vc_map
    # VUSE <.MEM_3(D)>
    _28 = MEM[(int * *)this_1(D) + 112B];
    # DEBUG D#43 => D#336
    # DEBUG __n => _22
    # DEBUG this => D#43
    _29 = _28 + _24;
    # VUSE <.MEM_3(D)>
    i_30 = *_29;
    # DEBUG i => i_30
    _31 = (long unsigned int) i_30;
    # DEBUG D#337 => &_2->_private_buf_occupancy
    # VUSE <.MEM_3(D)>
    _32 = MEM[(int * *)this_1(D) + 160B];
    # DEBUG D#43 => D#337
    # DEBUG __n => _31
    # DEBUG this => D#43
    _33 = _31 * 4;
    _34 = _32 + _33;
    # VUSE <.MEM_3(D)>
    _35 = *_34;
    _36 = _35 + 1;
    # .MEM_94 = VDEF <.MEM_3(D)>
    *_34 = _36;
    # DEBUG D#338 => &_2->_private_buf_occupancy
    # DEBUG D#43 => D#338
    # DEBUG __n => _31
    # DEBUG this => D#43
    # DEBUG D#339 => &_2->_private_buf_size
    # VUSE <.MEM_94>
    _37 = MEM[(int * *)this_1(D) + 136B];
    # DEBUG D#43 => D#339
    # DEBUG __n => _31
    # DEBUG this => D#43
    _38 = _37 + _33;
    # VUSE <.MEM_94>
    _39 = *_38;
    if (_36 > _39)
      goto <bb 6>;
    else
      goto <bb 5>;

  }
  bb_5 (preds = {bb_4 bb_6 }, succs = {bb_30 })
  {
    <bb 5>:
    # .MEM_62 = PHI <.MEM_94(4), .MEM_95(6)>

  }
  bb_30 (preds = {bb_5 }, succs = {bb_11 })
  {
    <bb 30>:
    goto <bb 11>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_5 })
  {
    <bb 6>:
    # VUSE <.MEM_94>
    _40 = MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_occupancy;
    _41 = _40 + 1;
    # .MEM_95 = VDEF <.MEM_94>
    MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_occupancy = _41;
    # VUSE <.MEM_95>
    _42 = MEM[(struct SharedBufferPolicy *)this_1(D)]._shared_buf_size;
    if (_41 > _42)
      goto <bb 7>;
    else
      goto <bb 5>;

  }
  bb_7 (preds = {bb_6 }, succs = {bb_8 bb_16 })
  {
    <bb 7>:
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG this => &D.70085
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.70085
    # DEBUG D#296 => &D.70085._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.70085.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_96 = VDEF <.MEM_95>
    MEM[(struct _Alloc_hider *)&D.70085]._M_p = &D.70085.D.11539._M_local_buf;
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG this => &D.70085
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.70085
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.70085
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __ptr => "Shared buffer overflow."
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # .MEM_97 = VDEF <.MEM_96>
    __dnew = 23;
    # .MEM_98 = VDEF <.MEM_97>
    _60 = std::__cxx11::basic_string<char>::_M_create (&D.70085, &__dnew, 0);
    # DEBUG D#7 => &D.70085
    # DEBUG __p => _60
    # DEBUG this => D#7
    # .MEM_99 = VDEF <.MEM_98>
    MEM[(char * *)&D.70085] = _60;
    # VUSE <.MEM_99>
    __dnew.49_61 = __dnew;
    # DEBUG D#8 => &D.70085
    # DEBUG __capacity => __dnew.49_61
    # DEBUG this => D#8
    # .MEM_100 = VDEF <.MEM_99>
    MEM[(size_type *)&D.70085 + 16B] = __dnew.49_61;
    # DEBUG D#1 => &D.70085
    # DEBUG this => D#1
    # DEBUG __p => _60
    # DEBUG __k1 => "Shared buffer overflow."
    # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __d => _60
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __n => 23
    # DEBUG __s1 => _60
    # DEBUG __s2 => "Shared buffer overflow."
    # DEBUG __n => 23
    # .MEM_102 = VDEF <.MEM_100>
    __builtin_memcpy (_60, "Shared buffer overflow.", 23);
    # VUSE <.MEM_102>
    __dnew.49_64 = __dnew;
    # DEBUG this => &D.70085
    # DEBUG __n => __dnew.49_64
    # DEBUG D#9 => &D.70085
    # DEBUG __length => __dnew.49_64
    # DEBUG this => D#9
    # .MEM_103 = VDEF <.MEM_102>
    MEM[(size_type *)&D.70085 + 8B] = __dnew.49_64;
    # VUSE <.MEM_103>
    _65 = MEM[(char * *)&D.70085];
    # DEBUG D#1 => &D.70085
    # DEBUG this => D#1
    _66 = _65 + __dnew.49_64;
    # DEBUG __c1 => _66
    # DEBUG __c2 => D#10
    # .MEM_104 = VDEF <.MEM_103>
    MEM[(char_type &)_66] = 0;
    # .MEM_105 = VDEF <.MEM_104>
    __dnew ={v} {CLOBBER};
    # .MEM_106 = VDEF <.MEM_105>
    Module::Error (_2, &D.70085);

  }
  bb_8 (preds = {bb_7 }, succs = {bb_9 bb_10 })
  {
    <bb 8>:
    # DEBUG this => &D.70085
    # DEBUG this => &D.70085
    # DEBUG this => &D.70085
    # VUSE <.MEM_106>
    _44 = MEM[(char * *)&D.70085];
    # DEBUG D#1 => &D.70085
    # DEBUG this => D#1
    # DEBUG this => &D.70085
    if (&D.70085.D.11539._M_local_buf != _44)
      goto <bb 9>;
    else
      goto <bb 10>;

  }
  bb_9 (preds = {bb_8 }, succs = {bb_10 })
  {
    <bb 9>:
    # DEBUG D#188 => D.70085.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.70085
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.70085
    # DEBUG this => D#1
    # DEBUG this => &D.70085
    # DEBUG D#185 => &D.70085._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _44
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _44
    # DEBUG this => D#179
    # DEBUG D.70070 => D#180
    # .MEM_107 = VDEF <.MEM_106>
    operator delete (_44);

  }
  bb_10 (preds = {bb_8 bb_9 }, succs = {bb_11 })
  {
    <bb 10>:
    # .MEM_53 = PHI <.MEM_106(8), .MEM_107(9)>
    # DEBUG D#189 => &D.70085._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_112 = VDEF <.MEM_53>
    D.70085 ={v} {CLOBBER};
    # DEBUG this => NULL
    # DEBUG this => NULL

  }
  bb_11 (preds = {bb_3 bb_30 bb_10 }, succs = {bb_12 bb_19 })
  {
    <bb 11>:
    # .MEM_85 = PHI <.MEM_93(3), .MEM_62(30), .MEM_112(10)>
    # VUSE <.MEM_85>
    _45 = f_4(D)->tail;
    if (_45 != 0)
      goto <bb 12>;
    else
      goto <bb 19>;

  }
  bb_12 (preds = {bb_11 }, succs = {bb_13 bb_19 })
  {
    <bb 12>:
    # DEBUG D#341 => &_2->_reserved_slots
    # VUSE <.MEM_85>
    _57 = MEM[(int * *)this_1(D) + 192B];
    # DEBUG D#43 => D#341
    # DEBUG __n => _22
    # DEBUG this => D#43
    _132 = _57 + _24;
    # VUSE <.MEM_85>
    _59 = *_132;
    if (_59 != 0)
      goto <bb 13>;
    else
      goto <bb 19>;

  }
  bb_13 (preds = {bb_12 }, succs = {bb_14 })
  {
    <bb 13>:

  }
  bb_16 (preds = {bb_7 }, succs = {bb_17 bb_18 })
  {
  <L1>:
    # DEBUG this => &D.70085
    # DEBUG this => &D.70085
    # DEBUG this => &D.70085
    # VUSE <.MEM_106>
    _50 = MEM[(char * *)&D.70085];
    # DEBUG D#1 => &D.70085
    # DEBUG this => D#1
    # DEBUG this => &D.70085
    if (&D.70085.D.11539._M_local_buf != _50)
      goto <bb 17>;
    else
      goto <bb 18>;

  }
  bb_17 (preds = {bb_16 }, succs = {bb_18 })
  {
    <bb 17>:
    # DEBUG D#188 => D.70085.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.70085
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.70085
    # DEBUG this => D#1
    # DEBUG this => &D.70085
    # DEBUG D#185 => &D.70085._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _50
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _50
    # DEBUG this => D#179
    # DEBUG D.70055 => D#180
    # .MEM_113 = VDEF <.MEM_106>
    operator delete (_50);

  }
  bb_18 (preds = {bb_16 bb_17 }, succs = {})
  {
    <bb 18>:
    # .MEM_87 = PHI <.MEM_106(16), .MEM_113(17)>
    # DEBUG D#189 => &D.70085._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_118 = VDEF <.MEM_87>
    D.70085 ={v} {CLOBBER};
    resx 3

  }
  bb_29 (preds = {bb_14 }, succs = {bb_19 })
  {
    <bb 29>:
    # .MEM_111 = PHI <.MEM_120(14)>

  }
  bb_19 (preds = {bb_11 bb_12 bb_29 }, succs = {bb_20 bb_23 })
  {
    <bb 19>:
    # .MEM_67 = PHI <.MEM_85(11), .MEM_85(12), .MEM_111(29)>
    # .MEM_6 = VDEF <.MEM_67>
    _7 = GetSimTime ();
    # VUSE <.MEM_6>
    _9 = f_4(D)->vc;
    _10 = (long unsigned int) _9;
    # DEBUG D#622 => &this_1(D)->_flit_sent_time
    # VUSE <.MEM_6>
    _13 = MEM[(struct queue * *)this_1(D) + 272B];
    # DEBUG D#53 => D#622
    # DEBUG __n => _10
    # DEBUG this => D#53
    _14 = _10 * 80;
    _15 = _13 + _14;
    # DEBUG this => NULL
    # DEBUG __x => &D.43712
    # DEBUG D#1068 => &_15->c
    # DEBUG this => D#1068
    # DEBUG __x => &D.43712
    # VUSE <.MEM_6>
    _17 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur;
    # VUSE <.MEM_6>
    _18 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_last;
    _19 = _18 + 18446744073709551612;
    if (_17 != _19)
      goto <bb 20>;
    else
      goto <bb 23>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_21 bb_22 })
  {
    <bb 20>:
    # DEBUG D#621 => &D#1068->D.43590._M_impl
    # DEBUG D#82 => D#621
    # DEBUG __p => _17
    # DEBUG __arg => &D.43712
    # DEBUG __a => D#82
    # DEBUG D#81 => D#82
    # DEBUG D#80 => D#81
    # DEBUG __p => _17
    # DEBUG __val => &D.43712
    # DEBUG this => D#80
    # DEBUG D#11 => 4
    # DEBUG __p => _17
    # DEBUG D.53756 => D#11
    if (_17 != 0B)
      goto <bb 21>;
    else
      goto <bb 22>;

  }
  bb_21 (preds = {bb_20 }, succs = {bb_22 })
  {
    <bb 21>:
    # .MEM_129 = VDEF <.MEM_6>
    *_17 = _7;

  }
  bb_22 (preds = {bb_20 bb_21 }, succs = {bb_31 })
  {
    <bb 22>:
    # .MEM_89 = PHI <.MEM_6(20), .MEM_129(21)>

  }
  bb_31 (preds = {bb_22 }, succs = {bb_28 })
  {
    <bb 31>:
    _21 = _17 + 4;
    # .MEM_130 = VDEF <.MEM_89>
    MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur = _21;
    goto <bb 28>;

  }
  bb_23 (preds = {bb_19 }, succs = {bb_24 bb_25 })
  {
    <bb 23>:
    # DEBUG this => D#1068
    # DEBUG __t => &D.43712
    # DEBUG this => D#1068
    # DEBUG __nodes_to_add => 1
    # VUSE <.MEM_6>
    _76 = MEM[(struct deque *)_15].D.43590._M_impl._M_map_size;
    # VUSE <.MEM_6>
    _77 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_node;
    _78 = (long int) _77;
    # VUSE <.MEM_6>
    _79 = MEM[(struct deque *)_15].D.43590._M_impl._M_map;
    _80 = (long int) _79;
    _81 = _78 - _80;
    _82 = _81 /[ex] -8;
    _83 = (long unsigned int) _82;
    _84 = _76 + _83;
    if (_84 <= 1)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    _11 = &_15->c;
    # .MEM_121 = VDEF <.MEM_6>
    std::deque<int, std::allocator<int> >::_M_reallocate_map (_11, 1, 0);
    # VUSE <.MEM_121>
    pretmp_108 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_node;

  }
  bb_25 (preds = {bb_24 bb_23 }, succs = {bb_26 bb_27 })
  {
    <bb 25>:
    # .MEM_90 = PHI <.MEM_121(24), .MEM_6(23)>
    # prephitmp_109 = PHI <pretmp_108(24), _77(23)>
    # DEBUG D#620 => &D#1068->D.43590
    # DEBUG D#392 => D#620
    # DEBUG this => D#392
    # DEBUG D#391 => D#392
    # DEBUG __size => 4
    # DEBUG D#390 => &D#391->_M_impl
    # DEBUG D#386 => D#390
    # DEBUG __n => NULL
    # DEBUG __a => D#386
    # DEBUG D#385 => D#386
    # DEBUG D#383 => D#385
    # DEBUG D#384 => 0B
    # DEBUG __n => NULL
    # DEBUG this => D#383
    # DEBUG D.70139 => D#384
    # DEBUG D#382 => D#383
    # DEBUG D#381 => D#382
    # DEBUG this => D#381
    # .MEM_122 = VDEF <.MEM_90>
    _68 = operator new (512);
    # .MEM_123 = VDEF <.MEM_122>
    MEM[(int * *)prephitmp_109 + 8B] = _68;
    # VUSE <.MEM_123>
    _69 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur;
    # DEBUG D#619 => &D#1068->D.43590._M_impl
    # DEBUG D#80 => D#619
    # DEBUG __p => _69
    # DEBUG __val => &D.43712
    # DEBUG this => D#80
    # DEBUG D#11 => 4
    # DEBUG __p => _69
    # DEBUG D.53756 => D#11
    if (_69 != 0B)
      goto <bb 26>;
    else
      goto <bb 27>;

  }
  bb_26 (preds = {bb_25 }, succs = {bb_27 })
  {
    <bb 26>:
    # .MEM_124 = VDEF <.MEM_123>
    *_69 = _7;

  }
  bb_27 (preds = {bb_25 bb_26 }, succs = {bb_32 })
  {
    <bb 27>:
    # .MEM_91 = PHI <.MEM_123(25), .MEM_124(26)>

  }
  bb_32 (preds = {bb_27 }, succs = {bb_28 })
  {
    <bb 32>:
    # VUSE <.MEM_91>
    _71 = MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_node;
    _72 = _71 + 8;
    # DEBUG D#618 => &D#1068->D.43590._M_impl._M_finish
    # DEBUG this => D#618
    # DEBUG __new_node => _72
    # .MEM_125 = VDEF <.MEM_91>
    MEM[(struct _Deque_iterator *)_15 + 48B]._M_node = _72;
    # VUSE <.MEM_125>
    _73 = MEM[(int * *)_71 + 8B];
    # .MEM_126 = VDEF <.MEM_125>
    MEM[(struct _Deque_iterator *)_15 + 48B]._M_first = _73;
    # DEBUG __size => 4
    _74 = _73 + 512;
    # .MEM_127 = VDEF <.MEM_126>
    MEM[(struct _Deque_iterator *)_15 + 48B]._M_last = _74;
    # .MEM_128 = VDEF <.MEM_127>
    MEM[(struct deque *)_15].D.43590._M_impl._M_finish._M_cur = _73;

  }
  bb_28 (preds = {bb_32 bb_31 }, succs = {bb_33 })
  {
    <bb 28>:
    # .MEM_92 = PHI <.MEM_128(32), .MEM_130(31)>

  }
  bb_33 (preds = {bb_28 }, succs = {bb_1 })
  {
    <bb 33>:
    # VUSE <.MEM_92>
    return;

  }
  loop_1 (header = 14, latch = 15, niter = )
  {
    bb_14 (preds = {bb_13 bb_15 }, succs = {bb_15 bb_29 })
    {
      <bb 14>:
      # _43 = PHI <_132(13), _47(15)>
      # _70 = PHI <_59(13), _48(15)>
      # .MEM_58 = PHI <.MEM_85(13), .MEM_120(15)>
      # DEBUG D#341 => &_2->_reserved_slots
      # DEBUG __n => _22
      # DEBUG this => D#43
      # DEBUG D#340 => &_2->_reserved_slots
      # DEBUG D#43 => D#340
      # DEBUG __n => _22
      # DEBUG this => D#43
      _49 = _70 + -1;
      # .MEM_119 = VDEF <.MEM_58>
      *_43 = _49;
      # .MEM_120 = VDEF <.MEM_119>
      BufferState::SharedBufferPolicy::ProcessFreeSlot (_2, vc_16);
      # DEBUG D#341 => &_2->_reserved_slots
      # VUSE <.MEM_120>
      _46 = MEM[(int * *)this_1(D) + 192B];
      # DEBUG D#43 => D#341
      # DEBUG __n => _22
      # DEBUG this => D#43
      _47 = _46 + _24;
      # VUSE <.MEM_120>
      _48 = *_47;
      if (_48 != 0)
        goto <bb 15>;
      else
        goto <bb 29>;

    }
    bb_15 (preds = {bb_14 }, succs = {bb_14 })
    {
      <bb 15>:
      goto <bb 14>;

    }
  }
}

Pass statistics:
----------------

virtual void BufferState::FeedbackSharedBufferPolicy::SendingFlit(const Flit*) (struct FeedbackSharedBufferPolicyD.40434 * const thisD.43710, const struct FlitD.33590 * const fD.43708)
Eh tree:
   3 cleanup land:{2,<L1>}
{
  size_typeD.11502 __dnewD.70106;
  intD.9 iD.70045;
  const intD.9 vcD.70040;
  const struct stringD.2845 D.70085;
  const value_typeD.43628 D.43712;
  struct SharedBufferPolicyD.39699 * _2;
  intD.9 _9;
  long unsigned intD.14 _10;
  struct dequeD.40449 * _11;
  struct queueD.40450 * _13;
  long unsigned intD.14 _14;
  struct queueD.40450 & _15;
  intD.9 * _17;
  intD.9 * _18;
  intD.9 * _19;
  intD.9 * _21;
  long unsigned intD.14 _22;
  intD.9 * _23;
  long unsigned intD.14 _24;
  intD.9 & _25;
  intD.9 _26;
  intD.9 _27;
  intD.9 * _28;
  intD.9 & _29;
  long unsigned intD.14 _31;
  intD.9 * _32;
  long unsigned intD.14 _33;
  intD.9 & _34;
  intD.9 _35;
  intD.9 _36;
  intD.9 * _37;
  intD.9 & _38;
  intD.9 _39;
  intD.9 _40;
  intD.9 _41;
  intD.9 _42;
  intD.9 & _43;
  charD.10 * const _44;
  boolD.2757 _45;
  intD.9 * _46;
  intD.9 & _47;
  intD.9 _48;
  intD.9 _49;
  charD.10 * const _50;
  intD.9 * _57;
  intD.9 _59;
  charD.10 * _60;
  long unsigned intD.14 __dnew.49_61;
  long unsigned intD.14 __dnew.49_64;
  charD.10 * const _65;
  charD.10 * _66;
  intD.9 * _68;
  intD.9 * _69;
  intD.9 _70;
  intD.9 * * _71;
  intD.9 * * _72;
  intD.9 * _73;
  intD.9 * _74;
  long unsigned intD.14 _76;
  intD.9 * * _77;
  long intD.12 _78;
  intD.9 * * _79;
  long intD.12 _80;
  long intD.12 _81;
  long intD.12 _82;
  long unsigned intD.14 _83;
  long unsigned intD.14 _84;
  intD.9 * * pretmp_108;
  intD.9 * * prephitmp_109;
  intD.9 & _132;

;;   basic block 2, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _2 = &this_1(D)->D.41247;
  # DEBUG thisD.70038 => _2
  # DEBUG fD.70039 => f_4(D)
  # VUSE <.MEM_3(D)>
  vc_16 = f_4(D)->vcD.33600;
  # DEBUG vcD.70040 => vc_16
  # RANGE ~[2147483648, 18446744071562067967]
  _22 = (long unsigned intD.14) vc_16;
  # DEBUG D#334ptD.0 => &_2->_reserved_slotsD.40245
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _23 = MEM[(intD.9 * *)this_1(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.70044 => _22
  # DEBUG thisD.70043 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _24 = _22 * 4;
  # PT = nonlocal escaped 
  _25 = _23 + _24;
  # VUSE <.MEM_3(D)>
  _26 = *_25;
  if (_26 > 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_2->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _22
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _27 = _26 + -1;
  # .MEM_93 = VDEF <.MEM_3(D)>
  *_25 = _27;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_2->_private_buf_vc_mapD.40240
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _28 = MEM[(intD.9 * *)this_1(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.70080 => _22
  # DEBUG thisD.70079 => D#43ptD.0
  # PT = nonlocal escaped 
  _29 = _28 + _24;
  # VUSE <.MEM_3(D)>
  i_30 = *_29;
  # DEBUG iD.70045 => i_30
  # RANGE ~[2147483648, 18446744071562067967]
  _31 = (long unsigned intD.14) i_30;
  # DEBUG D#337ptD.0 => &_2->_private_buf_occupancyD.40242
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _32 = MEM[(intD.9 * *)this_1(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.70082 => _31
  # DEBUG thisD.70081 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _33 = _31 * 4;
  # PT = nonlocal escaped 
  _34 = _32 + _33;
  # VUSE <.MEM_3(D)>
  _35 = *_34;
  _36 = _35 + 1;
  # .MEM_94 = VDEF <.MEM_3(D)>
  *_34 = _36;
  # DEBUG D#338ptD.0 => &_2->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _31
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_2->_private_buf_sizeD.40241
  # VUSE <.MEM_94>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)this_1(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.70084 => _31
  # DEBUG thisD.70083 => D#43ptD.0
  # PT = nonlocal escaped 
  _38 = _37 + _33;
  # VUSE <.MEM_94>
  _39 = *_38;
  if (_36 > _39)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 4, next block 30, flags: (NEW)
;;    pred:       4 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_62 = PHI <.MEM_94(4), .MEM_95(6)>
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 5, next block 6, flags: (NEW)
;;    pred:       5 [100.0%]  (FALLTHRU)
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 30, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_94>
  _40 = MEM[(struct SharedBufferPolicyD.39699 *)this_1(D)]._shared_buf_occupancyD.40244;
  _41 = _40 + 1;
  # .MEM_95 = VDEF <.MEM_94>
  MEM[(struct SharedBufferPolicyD.39699 *)this_1(D)]._shared_buf_occupancyD.40244 = _41;
  # VUSE <.MEM_95>
  _42 = MEM[(struct SharedBufferPolicyD.39699 *)this_1(D)]._shared_buf_sizeD.40243;
  if (_41 > _42)
    goto <bb 7>;
  else
    goto <bb 5>;
;;    succ:       7 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70078 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.70087 => &D.70085
  # DEBUG __sD.70088 => "Shared buffer overflow."
  # DEBUG __aD.70089 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.70099 => &D.70085
  # DEBUG D#296ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.70102 => D#296ptD.0
  # DEBUG __datD.70101 => &D.70085.D.11539._M_local_bufD.11541
  # DEBUG __aD.70100 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  MEM[(struct _Alloc_hiderD.11518 *)&D.70085]._M_pD.11525 = &D.70085.D.11539._M_local_bufD.11541;
  # DEBUG __sD.70098 => "Shared buffer overflow."
  # DEBUG thisD.70092 => &D.70085
  # DEBUG __begD.70091 => "Shared buffer overflow."
  # DEBUG __endD.70090 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.70096 => &D.70085
  # DEBUG __begD.70095 => "Shared buffer overflow."
  # DEBUG __endD.70094 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.70103 => &D.70085
  # DEBUG __begD.70104 => "Shared buffer overflow."
  # DEBUG __endD.70105 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.70129 => "Shared buffer overflow."
  # DEBUG __lastD.70128 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.70129
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.70131 => "Shared buffer overflow."
  # DEBUG __lastD.70130 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_97 = VDEF <.MEM_96>
  __dnewD.70106 = 23;
  # .MEM_98 = VDEF <.MEM_97>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _60 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.70085, &__dnewD.70106, 0);
  # DEBUG D#7ptD.0 => &D.70085
  # DEBUG __pD.70125 => _60
  # DEBUG thisD.70124 => D#7ptD.0
  # .MEM_99 = VDEF <.MEM_98>
  MEM[(charD.10 * *)&D.70085] = _60;
  # VUSE <.MEM_99>
  __dnew.49_61 = __dnewD.70106;
  # DEBUG D#8ptD.0 => &D.70085
  # DEBUG __capacityD.70127 => __dnew.49_61
  # DEBUG thisD.70126 => D#8ptD.0
  # .MEM_100 = VDEF <.MEM_99>
  MEM[(size_typeD.11502 *)&D.70085 + 16B] = __dnew.49_61;
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.70109 => _60
  # DEBUG __k1D.70108 => "Shared buffer overflow."
  # DEBUG __k2D.70107 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.70112 => _60
  # DEBUG __sD.70111 => "Shared buffer overflow."
  # DEBUG __nD.70110 => 23
  # DEBUG __s1D.70115 => _60
  # DEBUG __s2D.70114 => "Shared buffer overflow."
  # DEBUG __nD.70113 => 23
  # .MEM_102 = VDEF <.MEM_100>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  memcpyD.992 (_60, "Shared buffer overflow.", 23);
  # VUSE <.MEM_102>
  __dnew.49_64 = __dnewD.70106;
  # DEBUG thisD.70119 => &D.70085
  # DEBUG __nD.70118 => __dnew.49_64
  # DEBUG D#9ptD.0 => &D.70085
  # DEBUG __lengthD.70121 => __dnew.49_64
  # DEBUG thisD.70120 => D#9ptD.0
  # .MEM_103 = VDEF <.MEM_102>
  MEM[(size_typeD.11502 *)&D.70085 + 8B] = __dnew.49_64;
  # VUSE <.MEM_103>
  # PT = nonlocal escaped null { D.70085 } (escaped)
  _65 = MEM[(charD.10 * *)&D.70085];
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.70085 } (escaped)
  _66 = _65 + __dnew.49_64;
  # DEBUG __c1D.70123 => _66
  # DEBUG __c2D.70122 => D#10ptD.0
  # .MEM_104 = VDEF <.MEM_103>
  MEM[(char_typeD.6629 &)_66] = 0;
  # .MEM_105 = VDEF <.MEM_104>
  __dnewD.70106 ={v} {CLOBBER};
  [LP 2] # .MEM_106 = VDEF <.MEM_105>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_2, &D.70085);
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 (EH,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.70062 => &D.70085
  # DEBUG thisD.70063 => &D.70085
  # DEBUG thisD.70072 => &D.70085
  # VUSE <.MEM_106>
  # PT = nonlocal escaped null { D.70085 } (escaped)
  _44 = MEM[(charD.10 * *)&D.70085];
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.70073 => &D.70085
  if (&D.70085.D.11539._M_local_bufD.11541 != _44)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.70085.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.70065 => &D.70085
  # DEBUG __sizeD.70064 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.70085
  # DEBUG D#185ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.70068 => _44
  # DEBUG __aD.70066 => D#183ptD.0
  # DEBUG __nD.70067 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.70071 => _44
  # DEBUG thisD.70069 => D#179ptD.0
  # DEBUG D.70070 => D#180ptD.0
  # .MEM_107 = VDEF <.MEM_106>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZdlPvD.2766 (_44);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       8 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_53 = PHI <.MEM_106(8), .MEM_107(9)>
  # DEBUG D#189ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG thisD.70074 => D#189ptD.0
  # DEBUG thisD.70075 => D#189ptD.0
  # DEBUG thisD.70076 => D#189ptD.0
  # .MEM_112 = VDEF <.MEM_53>
  D.70085 ={v} {CLOBBER};
  # DEBUG thisD.70077 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_85 = PHI <.MEM_93(3), .MEM_62(30), .MEM_112(10)>
  # VUSE <.MEM_85>
  _45 = f_4(D)->tailD.33603;
  if (_45 != 0)
    goto <bb 12>;
  else
    goto <bb 19>;
;;    succ:       12 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_2->_reserved_slotsD.40245
  # VUSE <.MEM_85>
  # PT = nonlocal escaped 
  _57 = MEM[(intD.9 * *)this_1(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.70042 => _22
  # DEBUG thisD.70041 => D#43ptD.0
  # PT = nonlocal escaped 
  _132 = _57 + _24;
  # VUSE <.MEM_85>
  _59 = *_132;
  if (_59 != 0)
    goto <bb 13>;
  else
    goto <bb 19>;
;;    succ:       13 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       12 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # _43 = PHI <_132(13), _47(15)>
  # _70 = PHI <_59(13), _48(15)>
  # .MEM_58 = PHI <.MEM_85(13), .MEM_120(15)>
  # DEBUG D#341ptD.0 => &_2->_reserved_slotsD.40245
  # DEBUG __nD.70042 => _22
  # DEBUG thisD.70041 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_2->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _22
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _49 = _70 + -1;
  # .MEM_119 = VDEF <.MEM_58>
  *_43 = _49;
  # .MEM_120 = VDEF <.MEM_119>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_2, vc_16);
  # DEBUG D#341ptD.0 => &_2->_reserved_slotsD.40245
  # VUSE <.MEM_120>
  # PT = nonlocal escaped 
  _46 = MEM[(intD.9 * *)this_1(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.70042 => _22
  # DEBUG thisD.70041 => D#43ptD.0
  # PT = nonlocal escaped 
  _47 = _46 + _24;
  # VUSE <.MEM_120>
  _48 = *_47;
  if (_48 != 0)
    goto <bb 15>;
  else
    goto <bb 29>;
;;    succ:       15 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       7 (EH,EXECUTABLE)
<L1>: [LP 2]
  # DEBUG thisD.70047 => &D.70085
  # DEBUG thisD.70048 => &D.70085
  # DEBUG thisD.70057 => &D.70085
  # VUSE <.MEM_106>
  # PT = nonlocal escaped null { D.70085 } (escaped)
  _50 = MEM[(charD.10 * *)&D.70085];
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.70058 => &D.70085
  if (&D.70085.D.11539._M_local_bufD.11541 != _50)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 0
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.70085.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.70050 => &D.70085
  # DEBUG __sizeD.70049 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.70085
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.70085
  # DEBUG D#185ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.70053 => _50
  # DEBUG __aD.70051 => D#183ptD.0
  # DEBUG __nD.70052 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.70056 => _50
  # DEBUG thisD.70054 => D#179ptD.0
  # DEBUG D.70055 => D#180ptD.0
  # .MEM_113 = VDEF <.MEM_106>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZdlPvD.2766 (_50);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0
;;    prev block 17, next block 29, flags: (NEW, REACHABLE)
;;    pred:       16 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_87 = PHI <.MEM_106(16), .MEM_113(17)>
  # DEBUG D#189ptD.0 => &D.70085._M_dataplusD.11519
  # DEBUG thisD.70059 => D#189ptD.0
  # DEBUG thisD.70060 => D#189ptD.0
  # DEBUG thisD.70061 => D#189ptD.0
  # .MEM_118 = VDEF <.MEM_87>
  D.70085 ={v} {CLOBBER};
  resx 3
;;    succ:      

;;   basic block 29, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       14 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_111 = PHI <.MEM_120(14)>
;;    succ:       19 [100.0%]  (FALLTHRU)

;;   basic block 19, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 29, next block 20, flags: (NEW, REACHABLE)
;;    pred:       11 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                12 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU)
  # .MEM_67 = PHI <.MEM_85(11), .MEM_85(12), .MEM_111(29)>
  # .MEM_6 = VDEF <.MEM_67>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _7 = _Z10GetSimTimevD.42335 ();
  # VUSE <.MEM_6>
  _9 = f_4(D)->vcD.33600;
  # RANGE ~[2147483648, 18446744071562067967]
  _10 = (long unsigned intD.14) _9;
  # DEBUG D#622ptD.0 => &this_1(D)->_flit_sent_timeD.41197
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _13 = MEM[(struct queueD.40450 * *)this_1(D) + 272B];
  # DEBUG D#53ptD.0 => D#622ptD.0
  # DEBUG __nD.60979 => _10
  # DEBUG thisD.60980 => D#53ptD.0
  # RANGE [0, 18446744073709551536] NONZERO 18446744073709551600
  _14 = _10 * 80;
  # PT = nonlocal escaped 
  _15 = _13 + _14;
  # DEBUG thisD.60976 => NULL
  # DEBUG __xD.60977 => &D.43712
  # DEBUG D#1068ptD.0 => &_15->cD.43633
  # DEBUG thisD.70030 => D#1068ptD.0
  # DEBUG __xD.70031 => &D.43712
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _17 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_curD.42940;
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _18 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_lastD.42942;
  # PT = nonlocal escaped 
  _19 = _18 + 18446744073709551612;
  if (_17 != _19)
    goto <bb 20>;
  else
    goto <bb 23>;
;;    succ:       20 [93.3%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [6.7%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 1376, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       19 [93.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#621ptD.0 => &D#1068ptD.0->D.43590._M_implD.43041
  # DEBUG D#82ptD.0 => D#621ptD.0
  # DEBUG __pD.70034 => _17
  # DEBUG __argD.70033 => &D.43712
  # DEBUG __aD.70032 => D#82ptD.0
  # DEBUG D#81ptD.0 => D#82ptD.0
  # DEBUG D#80ptD.0 => D#81ptD.0
  # DEBUG __pD.70037 => _17
  # DEBUG __valD.70036 => &D.43712
  # DEBUG thisD.70035 => D#80ptD.0
  # DEBUG D#11ptD.0 => 4
  # DEBUG __pD.53755 => _17
  # DEBUG D.53756 => D#11ptD.0
  if (_17 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 1237, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       20 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_129 = VDEF <.MEM_6>
  *_17 = _7;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 1376, maybe hot
;;    prev block 21, next block 31, flags: (NEW, REACHABLE)
;;    pred:       20 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_89 = PHI <.MEM_6(20), .MEM_129(21)>
;;    succ:       31 [100.0%]  (FALLTHRU)

;;   basic block 31, loop depth 0, count 0, freq 1376, maybe hot
;;    prev block 22, next block 23, flags: (NEW)
;;    pred:       22 [100.0%]  (FALLTHRU)
  # PT = nonlocal escaped 
  _21 = _17 + 4;
  # .MEM_130 = VDEF <.MEM_89>
  MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_curD.42940 = _21;
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 31, next block 24, flags: (NEW, REACHABLE)
;;    pred:       19 [6.7%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.70132 => D#1068ptD.0
  # DEBUG __tD.70133 => &D.43712
  # DEBUG thisD.70146 => D#1068ptD.0
  # DEBUG __nodes_to_addD.70147 => 1
  # VUSE <.MEM_6>
  _76 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_map_sizeD.43044;
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _77 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  _78 = (long intD.12) _77;
  # VUSE <.MEM_6>
  # PT = nonlocal escaped 
  _79 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_mapD.43043;
  _80 = (long intD.12) _79;
  _81 = _78 - _80;
  # RANGE [-1152921504606846975, 1152921504606846976]
  _82 = _81 /[ex] -8;
  # RANGE ~[1152921504606846977, 17293822569102704640]
  _83 = (long unsigned intD.14) _82;
  # RANGE [0, 18446744073709551615]
  _84 = _76 + _83;
  if (_84 <= 1)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 39, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  _11 = &_15->cD.43633;
  # .MEM_121 = VDEF <.MEM_6>
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmbD.43542 (_11, 1, 0);
  # VUSE <.MEM_121>
  pretmp_108 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_90 = PHI <.MEM_121(24), .MEM_6(23)>
  # PT = nonlocal escaped 
  # prephitmp_109 = PHI <pretmp_108(24), _77(23)>
  # DEBUG D#620ptD.0 => &D#1068ptD.0->D.43590
  # DEBUG D#392ptD.0 => D#620ptD.0
  # DEBUG thisD.70134 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG __sizeD.56854 => 4
  # DEBUG D#390ptD.0 => &D#391ptD.0->_M_implD.43041
  # DEBUG D#386ptD.0 => D#390ptD.0
  # DEBUG __nD.70137 => NULL
  # DEBUG __aD.70136 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.70140 => NULL
  # DEBUG thisD.70138 => D#383ptD.0
  # DEBUG D.70139 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  # .MEM_122 = VDEF <.MEM_90>
  # PT = { D.70150 } (escaped heap)
  # USE = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  # CLB = nonlocal null { D.70085 D.70106 D.70150 } (escaped heap)
  _68 = _ZnwmD.2764 (512);
  # .MEM_123 = VDEF <.MEM_122>
  MEM[(intD.9 * *)prephitmp_109 + 8B] = _68;
  # VUSE <.MEM_123>
  # PT = nonlocal escaped 
  _69 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_curD.42940;
  # DEBUG D#619ptD.0 => &D#1068ptD.0->D.43590._M_implD.43041
  # DEBUG D#80ptD.0 => D#619ptD.0
  # DEBUG __pD.70143 => _69
  # DEBUG __valD.70142 => &D.43712
  # DEBUG thisD.70141 => D#80ptD.0
  # DEBUG D#11ptD.0 => 4
  # DEBUG __pD.53755 => _69
  # DEBUG D.53756 => D#11ptD.0
  if (_69 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 89, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       25 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_124 = VDEF <.MEM_123>
  *_69 = _7;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 26, next block 32, flags: (NEW, REACHABLE)
;;    pred:       25 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_91 = PHI <.MEM_123(25), .MEM_124(26)>
;;    succ:       32 [100.0%]  (FALLTHRU)

;;   basic block 32, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 27, next block 28, flags: (NEW)
;;    pred:       27 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_91>
  # PT = nonlocal escaped 
  _71 = MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _72 = _71 + 8;
  # DEBUG D#618ptD.0 => &D#1068ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.70145 => D#618ptD.0
  # DEBUG __new_nodeD.70144 => _72
  # .MEM_125 = VDEF <.MEM_91>
  MEM[(struct _Deque_iteratorD.42908 *)_15 + 48B]._M_nodeD.42943 = _72;
  # VUSE <.MEM_125>
  # PT = nonlocal escaped 
  _73 = MEM[(intD.9 * *)_71 + 8B];
  # .MEM_126 = VDEF <.MEM_125>
  MEM[(struct _Deque_iteratorD.42908 *)_15 + 48B]._M_firstD.42941 = _73;
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _74 = _73 + 512;
  # .MEM_127 = VDEF <.MEM_126>
  MEM[(struct _Deque_iteratorD.42908 *)_15 + 48B]._M_lastD.42942 = _74;
  # .MEM_128 = VDEF <.MEM_127>
  MEM[(struct dequeD.40449 *)_15].D.43590._M_implD.43041._M_finishD.43046._M_curD.42940 = _73;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 32, next block 33, flags: (NEW, REACHABLE)
;;    pred:       32 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_92 = PHI <.MEM_128(32), .MEM_130(31)>
;;    succ:       33 [100.0%]  (FALLTHRU)

;;   basic block 33, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 28, next block 1, flags: (NEW)
;;    pred:       28 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_92>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function virtual void BufferState::SimpleFeedbackSharedBufferPolicy::SendingFlit(const Flit*) (_ZN11BufferState32SimpleFeedbackSharedBufferPolicy11SendingFlitEPK4Flit, funcdef_no=2201, decl_uid=41268, cgraph_uid=668, symbol_order=669)


Pass statistics:
----------------

virtual void BufferState::SimpleFeedbackSharedBufferPolicy::SendingFlit(const Flit*) (struct SimpleFeedbackSharedBufferPolicyD.41259 * const thisD.43778, const struct FlitD.33590 * const fD.43776)
Eh tree:
   1 cleanup land:{1,<L5>}
{
  size_typeD.11502 __dnewD.70256;
  intD.9 iD.70195;
  const intD.9 vcD.70190;
  const struct stringD.2845 D.70235;
  intD.9 D.70173;
  static const charD.10 _ZZNK11BufferState12OccupancyForEiE19__PRETTY_FUNCTION__D.42307[41] = "int BufferState::OccupancyFor(int) const";
  intD.9 _4;
  long unsigned intD.14 _5;
  long unsigned intD.14 _7;
  const struct BufferStateD.39590 * _8;
  intD.9 _9;
  intD.9 * const _10;
  intD.9 * const _11;
  intD.9 _12;
  struct FeedbackSharedBufferPolicyD.40434 * _14;
  struct SharedBufferPolicyD.39699 * _17;
  intD.9 & _18;
  intD.9 * _19;
  struct queueD.40450 * _20;
  struct queueD.40450 & _21;
  intD.9 & _23;
  intD.9 _24;
  intD.9 * const _26;
  long unsigned intD.14 _27;
  const intD.9 & _28;
  intD.9 _29;
  intD.9 * _31;
  long unsigned intD.14 _32;
  intD.9 & _33;
  intD.9 _34;
  intD.9 _35;
  intD.9 * _36;
  intD.9 & _37;
  long unsigned intD.14 _39;
  intD.9 * _40;
  long unsigned intD.14 _41;
  intD.9 & _42;
  intD.9 _43;
  intD.9 _44;
  intD.9 * _45;
  intD.9 & _46;
  intD.9 _47;
  intD.9 _48;
  intD.9 _49;
  intD.9 _50;
  charD.10 * const _52;
  boolD.2757 _53;
  intD.9 * _54;
  intD.9 & _55;
  intD.9 _56;
  intD.9 _57;
  charD.10 * const _58;
  intD.9 _59;
  intD.9 & _60;
  intD.9 * _65;
  charD.10 * _68;
  long unsigned intD.14 __dnew.49_69;
  long unsigned intD.14 __dnew.49_72;
  charD.10 * const _73;
  charD.10 * _74;

;;   basic block 2, loop depth 0, count 0, freq 1736, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#623ptD.0 => &f_2(D)->vcD.33600
  # DEBUG vcD.43780 => D#623ptD.0
  # VUSE <.MEM_3(D)>
  _4 = MEM[(const intD.9 &)f_2(D) + 4];
  # RANGE ~[2147483648, 18446744071562067967]
  _5 = (long unsigned intD.14) _4;
  # DEBUG D#624ptD.0 => &this_6(D)->D.41295._flit_sent_timeD.41197
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _20 = MEM[(struct queueD.40450 * *)this_6(D) + 272B];
  # DEBUG D#53ptD.0 => D#624ptD.0
  # DEBUG __nD.60989 => _5
  # DEBUG thisD.60990 => D#53ptD.0
  # RANGE [0, 18446744073709551536] NONZERO 18446744073709551600
  _7 = _5 * 80;
  # PT = nonlocal escaped 
  _21 = _20 + _7;
  # DEBUG thisD.60983 => NULL
  # DEBUG thisD.60984 => D#90ptD.0
  # DEBUG D#88ptD.0 => &D#90ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#89ptD.0 => &D#90ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _11 = MEM[(intD.9 * *)_21 + 48B];
  # DEBUG D#86ptD.0 => D#89ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _10 = MEM[(intD.9 * *)_21 + 16B];
  # DEBUG D#87ptD.0 => D#88ptD.0
  # DEBUG __xD.60985 => D#86ptD.0
  # DEBUG __yD.60986 => D#87ptD.0
  if (_10 == _11)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _8 = this_6(D)->D.41295.D.41247.D.40291._buffer_stateD.39594;
  # DEBUG thisD.70169 => _8
  # DEBUG vcD.70170 => _4
  if (_4 < 0)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  _24 = _8->_vcsD.41304;
  if (_4 >= _24)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 0
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_80 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  __assert_failD.24398 ("(vc >= 0) && (vc < _vcs)", "buffer_state.hpp", 225, &_ZZNK11BufferState12OccupancyForEiE19__PRETTY_FUNCTION__D.42307);
;;    succ:      

;;   basic block 6, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#31ptD.0 => &_8->_vc_occupancyD.41303
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _26 = MEM[(intD.9 * *)_8 + 112B];
  # DEBUG D#30ptD.0 => D#31ptD.0
  # DEBUG __nD.70172 => _5
  # DEBUG thisD.70171 => D#30ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _27 = _5 * 4;
  # PT = nonlocal escaped 
  _28 = _26 + _27;
  # VUSE <.MEM_3(D)>
  _29 = *_28;
  if (_29 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#626ptD.0 => this_6(D)
  # DEBUG D#627ptD.0 => f_2(D)
  # DEBUG D#628ptD.0 => D#627ptD.0
  # DEBUG fD.70175 => D#628ptD.0
  # DEBUG D#629ptD.0 => D#626ptD.0
  # DEBUG thisD.70176 => D#629ptD.0
  # .MEM_79 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  __assert_failD.24398 ("_buffer_state->OccupancyFor(vc) > 0", "buffer_state.cpp", 502, &_ZZN11BufferState32SimpleFeedbackSharedBufferPolicy11SendingFlitEPK4FlitE19__PRETTY_FUNCTION__D.43781);
;;    succ:      

;;   basic block 8, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#625ptD.0 => &this_6(D)->_pending_creditsD.41261
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _19 = MEM[(intD.9 * *)this_6(D) + 312B];
  # DEBUG D#43ptD.0 => D#625ptD.0
  # DEBUG __nD.60993 => _5
  # DEBUG thisD.60994 => D#43ptD.0
  # PT = nonlocal escaped 
  _23 = _19 + _27;
  # RANGE [0, 2147483646] NONZERO 2147483647
  _12 = _29 + -1;
  # .MEM_13 = VDEF <.MEM_3(D)>
  *_23 = _12;
  # PT = nonlocal 
  _14 = &this_6(D)->D.41295;
  # .MEM_15 = VDEF <.MEM_13>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZN11BufferState26FeedbackSharedBufferPolicy11SendingFlitEPK4FlitD.41211 (_14, f_2(D));
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       2 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _17 = &this_6(D)->D.41295.D.41247;
  # DEBUG thisD.70188 => _17
  # DEBUG fD.70189 => f_2(D)
  # DEBUG vcD.70190 => _4
  # DEBUG D#334ptD.0 => &_17->_reserved_slotsD.40245
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _31 = MEM[(intD.9 * *)this_6(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.70194 => _5
  # DEBUG thisD.70193 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _32 = _5 * 4;
  # PT = nonlocal escaped 
  _33 = _31 + _32;
  # VUSE <.MEM_3(D)>
  _34 = *_33;
  if (_34 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_17->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _5
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _35 = _34 + -1;
  # .MEM_81 = VDEF <.MEM_3(D)>
  *_33 = _35;
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_17->_private_buf_vc_mapD.40240
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _36 = MEM[(intD.9 * *)this_6(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.70230 => _5
  # DEBUG thisD.70229 => D#43ptD.0
  # PT = nonlocal escaped 
  _37 = _36 + _32;
  # VUSE <.MEM_3(D)>
  i_38 = *_37;
  # DEBUG iD.70195 => i_38
  # RANGE ~[2147483648, 18446744071562067967]
  _39 = (long unsigned intD.14) i_38;
  # DEBUG D#337ptD.0 => &_17->_private_buf_occupancyD.40242
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _40 = MEM[(intD.9 * *)this_6(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.70232 => _39
  # DEBUG thisD.70231 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _41 = _39 * 4;
  # PT = nonlocal escaped 
  _42 = _40 + _41;
  # VUSE <.MEM_3(D)>
  _43 = *_42;
  _44 = _43 + 1;
  # .MEM_82 = VDEF <.MEM_3(D)>
  *_42 = _44;
  # DEBUG D#338ptD.0 => &_17->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _39
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_17->_private_buf_sizeD.40241
  # VUSE <.MEM_82>
  # PT = nonlocal escaped 
  _45 = MEM[(intD.9 * *)this_6(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.70234 => _39
  # DEBUG thisD.70233 => D#43ptD.0
  # PT = nonlocal escaped 
  _46 = _45 + _41;
  # VUSE <.MEM_82>
  _47 = *_46;
  if (_44 > _47)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_82(11), .MEM_83(13)>
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_82>
  _48 = MEM[(struct SharedBufferPolicyD.39699 *)this_6(D)]._shared_buf_occupancyD.40244;
  _49 = _48 + 1;
  # .MEM_83 = VDEF <.MEM_82>
  MEM[(struct SharedBufferPolicyD.39699 *)this_6(D)]._shared_buf_occupancyD.40244 = _49;
  # VUSE <.MEM_83>
  _50 = MEM[(struct SharedBufferPolicyD.39699 *)this_6(D)]._shared_buf_sizeD.40243;
  if (_49 > _50)
    goto <bb 14>;
  else
    goto <bb 12>;
;;    succ:       14 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70228 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.70237 => &D.70235
  # DEBUG __sD.70238 => "Shared buffer overflow."
  # DEBUG __aD.70239 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.70249 => &D.70235
  # DEBUG D#296ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.70252 => D#296ptD.0
  # DEBUG __datD.70251 => &D.70235.D.11539._M_local_bufD.11541
  # DEBUG __aD.70250 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_84 = VDEF <.MEM_83>
  MEM[(struct _Alloc_hiderD.11518 *)&D.70235]._M_pD.11525 = &D.70235.D.11539._M_local_bufD.11541;
  # DEBUG __sD.70248 => "Shared buffer overflow."
  # DEBUG thisD.70242 => &D.70235
  # DEBUG __begD.70241 => "Shared buffer overflow."
  # DEBUG __endD.70240 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.70246 => &D.70235
  # DEBUG __begD.70245 => "Shared buffer overflow."
  # DEBUG __endD.70244 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.70253 => &D.70235
  # DEBUG __begD.70254 => "Shared buffer overflow."
  # DEBUG __endD.70255 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.70279 => "Shared buffer overflow."
  # DEBUG __lastD.70278 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.70279
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.70281 => "Shared buffer overflow."
  # DEBUG __lastD.70280 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_85 = VDEF <.MEM_84>
  __dnewD.70256 = 23;
  # .MEM_86 = VDEF <.MEM_85>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _68 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.70235, &__dnewD.70256, 0);
  # DEBUG D#7ptD.0 => &D.70235
  # DEBUG __pD.70275 => _68
  # DEBUG thisD.70274 => D#7ptD.0
  # .MEM_87 = VDEF <.MEM_86>
  MEM[(charD.10 * *)&D.70235] = _68;
  # VUSE <.MEM_87>
  __dnew.49_69 = __dnewD.70256;
  # DEBUG D#8ptD.0 => &D.70235
  # DEBUG __capacityD.70277 => __dnew.49_69
  # DEBUG thisD.70276 => D#8ptD.0
  # .MEM_88 = VDEF <.MEM_87>
  MEM[(size_typeD.11502 *)&D.70235 + 16B] = __dnew.49_69;
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.70259 => _68
  # DEBUG __k1D.70258 => "Shared buffer overflow."
  # DEBUG __k2D.70257 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.70262 => _68
  # DEBUG __sD.70261 => "Shared buffer overflow."
  # DEBUG __nD.70260 => 23
  # DEBUG __s1D.70265 => _68
  # DEBUG __s2D.70264 => "Shared buffer overflow."
  # DEBUG __nD.70263 => 23
  # .MEM_90 = VDEF <.MEM_88>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  memcpyD.992 (_68, "Shared buffer overflow.", 23);
  # VUSE <.MEM_90>
  __dnew.49_72 = __dnewD.70256;
  # DEBUG thisD.70269 => &D.70235
  # DEBUG __nD.70268 => __dnew.49_72
  # DEBUG D#9ptD.0 => &D.70235
  # DEBUG __lengthD.70271 => __dnew.49_72
  # DEBUG thisD.70270 => D#9ptD.0
  # .MEM_91 = VDEF <.MEM_90>
  MEM[(size_typeD.11502 *)&D.70235 + 8B] = __dnew.49_72;
  # VUSE <.MEM_91>
  # PT = nonlocal escaped null { D.70235 } (escaped)
  _73 = MEM[(charD.10 * *)&D.70235];
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.70235 } (escaped)
  _74 = _73 + __dnew.49_72;
  # DEBUG __c1D.70273 => _74
  # DEBUG __c2D.70272 => D#10ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(char_typeD.6629 &)_74] = 0;
  # .MEM_93 = VDEF <.MEM_92>
  __dnewD.70256 ={v} {CLOBBER};
  [LP 1] # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_17, &D.70235);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 (EH,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.70212 => &D.70235
  # DEBUG thisD.70213 => &D.70235
  # DEBUG thisD.70222 => &D.70235
  # VUSE <.MEM_94>
  # PT = nonlocal escaped null { D.70235 } (escaped)
  _52 = MEM[(charD.10 * *)&D.70235];
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.70223 => &D.70235
  if (&D.70235.D.11539._M_local_bufD.11541 != _52)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.70235.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.70215 => &D.70235
  # DEBUG __sizeD.70214 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.70235
  # DEBUG D#185ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.70218 => _52
  # DEBUG __aD.70216 => D#183ptD.0
  # DEBUG __nD.70217 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.70221 => _52
  # DEBUG thisD.70219 => D#179ptD.0
  # DEBUG D.70220 => D#180ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZdlPvD.2766 (_52);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_94(15), .MEM_95(16)>
  # DEBUG D#189ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG thisD.70224 => D#189ptD.0
  # DEBUG thisD.70225 => D#189ptD.0
  # DEBUG thisD.70226 => D#189ptD.0
  # .MEM_100 = VDEF <.MEM_61>
  D.70235 ={v} {CLOBBER};
  # DEBUG thisD.70227 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_81(10), .MEM_103(12), .MEM_100(17)>
  # VUSE <.MEM_75>
  _53 = f_2(D)->tailD.33603;
  if (_53 != 0)
    goto <bb 19>;
  else
    goto <bb 26>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_17->_reserved_slotsD.40245
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _65 = MEM[(intD.9 * *)this_6(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.70192 => _5
  # DEBUG thisD.70191 => D#43ptD.0
  # PT = nonlocal escaped 
  _60 = _65 + _32;
  # VUSE <.MEM_75>
  _59 = *_60;
  if (_59 != 0)
    goto <bb 20>;
  else
    goto <bb 26>;
;;    succ:       20 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # _18 = PHI <_60(20), _55(22)>
  # _9 = PHI <_59(20), _56(22)>
  # .MEM_51 = PHI <.MEM_75(20), .MEM_108(22)>
  # DEBUG D#341ptD.0 => &_17->_reserved_slotsD.40245
  # DEBUG __nD.70192 => _5
  # DEBUG thisD.70191 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_17->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _5
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _57 = _9 + -1;
  # .MEM_107 = VDEF <.MEM_51>
  *_18 = _57;
  # .MEM_108 = VDEF <.MEM_107>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_17, _4);
  # DEBUG D#341ptD.0 => &_17->_reserved_slotsD.40245
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _54 = MEM[(intD.9 * *)this_6(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.70192 => _5
  # DEBUG thisD.70191 => D#43ptD.0
  # PT = nonlocal escaped 
  _55 = _54 + _32;
  # VUSE <.MEM_108>
  _56 = *_55;
  if (_56 != 0)
    goto <bb 22>;
  else
    goto <bb 26>;
;;    succ:       22 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       21 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       14 (EH,EXECUTABLE)
<L5>: [LP 1]
  # DEBUG thisD.70197 => &D.70235
  # DEBUG thisD.70198 => &D.70235
  # DEBUG thisD.70207 => &D.70235
  # VUSE <.MEM_94>
  # PT = nonlocal escaped null { D.70235 } (escaped)
  _58 = MEM[(charD.10 * *)&D.70235];
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.70208 => &D.70235
  if (&D.70235.D.11539._M_local_bufD.11541 != _58)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.70235.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.70200 => &D.70235
  # DEBUG __sizeD.70199 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.70235
  # DEBUG D#185ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.70203 => _58
  # DEBUG __aD.70201 => D#183ptD.0
  # DEBUG __nD.70202 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.70206 => _58
  # DEBUG thisD.70204 => D#179ptD.0
  # DEBUG D.70205 => D#180ptD.0
  # .MEM_101 = VDEF <.MEM_94>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZdlPvD.2766 (_58);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_94(23), .MEM_101(24)>
  # DEBUG D#189ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG thisD.70209 => D#189ptD.0
  # DEBUG thisD.70210 => D#189ptD.0
  # DEBUG thisD.70211 => D#189ptD.0
  # .MEM_106 = VDEF <.MEM_77>
  D.70235 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 26, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                21 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_102 = PHI <.MEM_75(18), .MEM_75(19), .MEM_108(21)>
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 1735, maybe hot
;;    prev block 26, next block 1, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_16 = PHI <.MEM_15(8), .MEM_102(26)>
  # VUSE <.MEM_16>
  return;
;;    succ:       EXIT [100.0%] 

}



Updating SSA:
Registering new PHI nodes in block #21
Updating SSA information for statement BufferState::SharedBufferPolicy::ProcessFreeSlot (_17, _4);
Updating SSA information for statement _54 = MEM[(int * *)this_6(D) + 192B];
Updating SSA information for statement _56 = *_55;
Registering new PHI nodes in block #22
Registering new PHI nodes in block #28

DFA Statistics for virtual void BufferState::SimpleFeedbackSharedBufferPolicy::SendingFlit(const Flit*)

---------------------------------------------------------
                                Number of        Memory
                                instances         used 
---------------------------------------------------------
USE operands                            142       1136b
DEF operands                             53        424b
VUSE operands                            53        424b
VDEF operands                            23        184b
PHI nodes                                10       1040b
PHI arguments                            21       1008b
---------------------------------------------------------
Total memory used by DFA/SSA data                 4216b
---------------------------------------------------------

Average number of arguments per PHI node: 2.1 (max: 3)


SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_99 -> { .MEM_108 }
Incremental SSA update started at block: 21
Number of blocks in CFG: 29
Number of blocks to update: 3 ( 10%)
Affected blocks: 21 22 28


Creating dr for MEM[(const int &)f_2(D) + 4]
analyze_innermost: success.
	base_address: f_2(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 0
	aligned to: 256
	base_object: MEM[(const int &)f_2(D) + 4]
Creating dr for MEM[(struct queue * *)this_6(D) + 272B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 272
	step: 0
	aligned to: 256
	base_object: MEM[(struct queue * *)this_6(D) + 272B]
Creating dr for MEM[(int * *)_21 + 48B]
analyze_innermost: success.
	base_address: _20 + (long unsigned int) _4 * 80
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)_21 + 48B]
Creating dr for MEM[(int * *)_21 + 16B]
analyze_innermost: success.
	base_address: _20 + (long unsigned int) _4 * 80
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)_21 + 16B]
Creating dr for this_6(D)->D.41295.D.41247.D.40291._buffer_state
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 768
	Access function 1: 0
	Access function 2: 0
	Access function 3: 0
Creating dr for _8->_vcs
analyze_innermost: success.
	base_address: _8
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: *_8
	Access function 0: 1088
Creating dr for MEM[(int * *)_8 + 112B]
analyze_innermost: success.
	base_address: _8
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)_8 + 112B]
Creating dr for *_28
analyze_innermost: success.
	base_address: _26 + (long unsigned int) _4 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_28
Creating dr for MEM[(int * *)this_6(D) + 312B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 312
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 312B]
Creating dr for *_23
analyze_innermost: success.
	base_address: _19 + (long unsigned int) _4 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_23
Creating dr for MEM[(int * *)this_6(D) + 192B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 192B]
Creating dr for *_33
analyze_innermost: success.
	base_address: _31 + (long unsigned int) _4 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_33
Creating dr for *_33
analyze_innermost: success.
	base_address: _31 + (long unsigned int) _4 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_33
Creating dr for MEM[(int * *)this_6(D) + 112B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 112B]
Creating dr for *_37
analyze_innermost: success.
	base_address: _36 + (long unsigned int) _4 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_37
Creating dr for MEM[(int * *)this_6(D) + 160B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 160B]
Creating dr for *_42
analyze_innermost: success.
	base_address: _40 + (long unsigned int) i_38 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_42
Creating dr for *_42
analyze_innermost: success.
	base_address: _40 + (long unsigned int) i_38 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_42
Creating dr for MEM[(int * *)this_6(D) + 136B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 136
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 136B]
Creating dr for *_46
analyze_innermost: success.
	base_address: _45 + (long unsigned int) i_38 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_46
Creating dr for MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_6(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_occupancy
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 188
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_6(D)]
	Access function 0: 1504
Creating dr for MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_size
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 256
	base_object: MEM[(struct SharedBufferPolicy *)this_6(D)]
	Access function 0: 1472
Creating dr for MEM[(struct _Alloc_hider *)&D.70235]._M_p
analyze_innermost: success.
	base_address: &D.70235
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Alloc_hider *)&D.70235]
	Access function 0: 0
Creating dr for __dnew
analyze_innermost: success.
	base_address: &__dnew
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(long unsigned int *)&__dnew]
Creating dr for MEM[(char * *)&D.70235]
analyze_innermost: success.
	base_address: &D.70235
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.70235]
Creating dr for MEM[(char * *)&D.70235]
analyze_innermost: success.
	base_address: &D.70235
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(char * *)&D.70235]
Creating dr for f_2(D)->tail
analyze_innermost: success.
	base_address: f_2(D)
	offset from base address: 0
	constant offset from base address: 13
	step: 0
	aligned to: 256
	base_object: *f_2(D)
	Access function 0: 104
Creating dr for MEM[(int * *)this_6(D) + 192B]
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 0
	aligned to: 256
	base_object: MEM[(int * *)this_6(D) + 192B]
Creating dr for *_60
analyze_innermost: success.
	base_address: _65 + (long unsigned int) _4 * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_60
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:6)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:32, LOOPS:1, CONDITIONS:13, STMTS:292)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_9 })
  {
    <bb 2>:
    # DEBUG D#623 => &f_2(D)->vc
    # DEBUG vc => D#623
    # VUSE <.MEM_3(D)>
    _4 = MEM[(const int &)f_2(D) + 4];
    _5 = (long unsigned int) _4;
    # DEBUG D#624 => &this_6(D)->D.41295._flit_sent_time
    # VUSE <.MEM_3(D)>
    _20 = MEM[(struct queue * *)this_6(D) + 272B];
    # DEBUG D#53 => D#624
    # DEBUG __n => _5
    # DEBUG this => D#53
    _7 = _5 * 80;
    _21 = _20 + _7;
    # DEBUG this => NULL
    # DEBUG this => D#90
    # DEBUG D#88 => &D#90->D.43590._M_impl._M_start
    # DEBUG D#89 => &D#90->D.43590._M_impl._M_finish
    # VUSE <.MEM_3(D)>
    _11 = MEM[(int * *)_21 + 48B];
    # DEBUG D#86 => D#89
    # VUSE <.MEM_3(D)>
    _10 = MEM[(int * *)_21 + 16B];
    # DEBUG D#87 => D#88
    # DEBUG __x => D#86
    # DEBUG __y => D#87
    if (_10 == _11)
      goto <bb 3>;
    else
      goto <bb 9>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_5 bb_4 })
  {
    <bb 3>:
    # VUSE <.MEM_3(D)>
    _8 = this_6(D)->D.41295.D.41247.D.40291._buffer_state;
    # DEBUG this => _8
    # DEBUG vc => _4
    if (_4 < 0)
      goto <bb 5>;
    else
      goto <bb 4>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # VUSE <.MEM_3(D)>
    _24 = _8->_vcs;
    if (_4 >= _24)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 bb_3 }, succs = {})
  {
    <bb 5>:
    # .MEM_80 = VDEF <.MEM_3(D)>
    __assert_fail ("(vc >= 0) && (vc < _vcs)", "buffer_state.hpp", 225, &__PRETTY_FUNCTION__);

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # DEBUG D#31 => &_8->_vc_occupancy
    # VUSE <.MEM_3(D)>
    _26 = MEM[(int * *)_8 + 112B];
    # DEBUG D#30 => D#31
    # DEBUG __n => _5
    # DEBUG this => D#30
    _27 = _5 * 4;
    _28 = _26 + _27;
    # VUSE <.MEM_3(D)>
    _29 = *_28;
    if (_29 <= 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 }, succs = {})
  {
    <bb 7>:
    # DEBUG D#626 => this_6(D)
    # DEBUG D#627 => f_2(D)
    # DEBUG D#628 => D#627
    # DEBUG f => D#628
    # DEBUG D#629 => D#626
    # DEBUG this => D#629
    # .MEM_79 = VDEF <.MEM_3(D)>
    __assert_fail ("_buffer_state->OccupancyFor(vc) > 0", "buffer_state.cpp", 502, &__PRETTY_FUNCTION__);

  }
  bb_8 (preds = {bb_6 }, succs = {bb_27 })
  {
    <bb 8>:
    # DEBUG D#625 => &this_6(D)->_pending_credits
    # VUSE <.MEM_3(D)>
    _19 = MEM[(int * *)this_6(D) + 312B];
    # DEBUG D#43 => D#625
    # DEBUG __n => _5
    # DEBUG this => D#43
    _23 = _19 + _27;
    _12 = _29 + -1;
    # .MEM_13 = VDEF <.MEM_3(D)>
    *_23 = _12;
    _14 = &this_6(D)->D.41295;
    # .MEM_15 = VDEF <.MEM_13>
    BufferState::FeedbackSharedBufferPolicy::SendingFlit (_14, f_2(D));
    goto <bb 27>;

  }
  bb_9 (preds = {bb_2 }, succs = {bb_10 bb_11 })
  {
    <bb 9>:
    _17 = &this_6(D)->D.41295.D.41247;
    # DEBUG this => _17
    # DEBUG f => f_2(D)
    # DEBUG vc => _4
    # DEBUG D#334 => &_17->_reserved_slots
    # VUSE <.MEM_3(D)>
    _31 = MEM[(int * *)this_6(D) + 192B];
    # DEBUG D#43 => D#334
    # DEBUG __n => _5
    # DEBUG this => D#43
    _32 = _5 * 4;
    _33 = _31 + _32;
    # VUSE <.MEM_3(D)>
    _34 = *_33;
    if (_34 > 0)
      goto <bb 10>;
    else
      goto <bb 11>;

  }
  bb_10 (preds = {bb_9 }, succs = {bb_18 })
  {
    <bb 10>:
    # DEBUG D#335 => &_17->_reserved_slots
    # DEBUG D#43 => D#335
    # DEBUG __n => _5
    # DEBUG this => D#43
    _35 = _34 + -1;
    # .MEM_81 = VDEF <.MEM_3(D)>
    *_33 = _35;
    goto <bb 18>;

  }
  bb_11 (preds = {bb_9 }, succs = {bb_13 bb_12 })
  {
    <bb 11>:
    # DEBUG D#336 => &_17->_private_buf_vc_map
    # VUSE <.MEM_3(D)>
    _36 = MEM[(int * *)this_6(D) + 112B];
    # DEBUG D#43 => D#336
    # DEBUG __n => _5
    # DEBUG this => D#43
    _37 = _36 + _32;
    # VUSE <.MEM_3(D)>
    i_38 = *_37;
    # DEBUG i => i_38
    _39 = (long unsigned int) i_38;
    # DEBUG D#337 => &_17->_private_buf_occupancy
    # VUSE <.MEM_3(D)>
    _40 = MEM[(int * *)this_6(D) + 160B];
    # DEBUG D#43 => D#337
    # DEBUG __n => _39
    # DEBUG this => D#43
    _41 = _39 * 4;
    _42 = _40 + _41;
    # VUSE <.MEM_3(D)>
    _43 = *_42;
    _44 = _43 + 1;
    # .MEM_82 = VDEF <.MEM_3(D)>
    *_42 = _44;
    # DEBUG D#338 => &_17->_private_buf_occupancy
    # DEBUG D#43 => D#338
    # DEBUG __n => _39
    # DEBUG this => D#43
    # DEBUG D#339 => &_17->_private_buf_size
    # VUSE <.MEM_82>
    _45 = MEM[(int * *)this_6(D) + 136B];
    # DEBUG D#43 => D#339
    # DEBUG __n => _39
    # DEBUG this => D#43
    _46 = _45 + _41;
    # VUSE <.MEM_82>
    _47 = *_46;
    if (_44 > _47)
      goto <bb 13>;
    else
      goto <bb 12>;

  }
  bb_12 (preds = {bb_11 bb_13 }, succs = {bb_29 })
  {
    <bb 12>:
    # .MEM_103 = PHI <.MEM_82(11), .MEM_83(13)>

  }
  bb_29 (preds = {bb_12 }, succs = {bb_18 })
  {
    <bb 29>:
    goto <bb 18>;

  }
  bb_13 (preds = {bb_11 }, succs = {bb_14 bb_12 })
  {
    <bb 13>:
    # VUSE <.MEM_82>
    _48 = MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_occupancy;
    _49 = _48 + 1;
    # .MEM_83 = VDEF <.MEM_82>
    MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_occupancy = _49;
    # VUSE <.MEM_83>
    _50 = MEM[(struct SharedBufferPolicy *)this_6(D)]._shared_buf_size;
    if (_49 > _50)
      goto <bb 14>;
    else
      goto <bb 12>;

  }
  bb_14 (preds = {bb_13 }, succs = {bb_15 bb_23 })
  {
    <bb 14>:
    # DEBUG this => D#63
    # DEBUG D#62 => D#63
    # DEBUG this => D#62
    # DEBUG this => &D.70235
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __a => D#299
    # DEBUG D#298 => D#299
    # DEBUG this => &D.70235
    # DEBUG D#296 => &D.70235._M_dataplus
    # DEBUG D#126 => D#298
    # DEBUG this => D#296
    # DEBUG __dat => &D.70235.D.11539._M_local_buf
    # DEBUG __a => D#126
    # DEBUG D#125 => D#126
    # DEBUG D#123 => D#296
    # DEBUG D#124 => D#125
    # DEBUG this => D#123
    # DEBUG __a => D#124
    # DEBUG D#122 => D#124
    # DEBUG D#121 => D#123
    # DEBUG this => D#121
    # DEBUG D.54050 => D#122
    # .MEM_84 = VDEF <.MEM_83>
    MEM[(struct _Alloc_hider *)&D.70235]._M_p = &D.70235.D.11539._M_local_buf;
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG this => &D.70235
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.70235
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG this => &D.70235
    # DEBUG __beg => "Shared buffer overflow."
    # DEBUG __end => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __ptr => "Shared buffer overflow."
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG D#316 => &__first
    # DEBUG D.55911 => D#316
    # DEBUG __first => "Shared buffer overflow."
    # DEBUG __last => &MEM[(void *)"Shared buffer overflow." + 23B]
    # .MEM_85 = VDEF <.MEM_84>
    __dnew = 23;
    # .MEM_86 = VDEF <.MEM_85>
    _68 = std::__cxx11::basic_string<char>::_M_create (&D.70235, &__dnew, 0);
    # DEBUG D#7 => &D.70235
    # DEBUG __p => _68
    # DEBUG this => D#7
    # .MEM_87 = VDEF <.MEM_86>
    MEM[(char * *)&D.70235] = _68;
    # VUSE <.MEM_87>
    __dnew.49_69 = __dnew;
    # DEBUG D#8 => &D.70235
    # DEBUG __capacity => __dnew.49_69
    # DEBUG this => D#8
    # .MEM_88 = VDEF <.MEM_87>
    MEM[(size_type *)&D.70235 + 16B] = __dnew.49_69;
    # DEBUG D#1 => &D.70235
    # DEBUG this => D#1
    # DEBUG __p => _68
    # DEBUG __k1 => "Shared buffer overflow."
    # DEBUG __k2 => &MEM[(void *)"Shared buffer overflow." + 23B]
    # DEBUG __d => _68
    # DEBUG __s => "Shared buffer overflow."
    # DEBUG __n => 23
    # DEBUG __s1 => _68
    # DEBUG __s2 => "Shared buffer overflow."
    # DEBUG __n => 23
    # .MEM_90 = VDEF <.MEM_88>
    __builtin_memcpy (_68, "Shared buffer overflow.", 23);
    # VUSE <.MEM_90>
    __dnew.49_72 = __dnew;
    # DEBUG this => &D.70235
    # DEBUG __n => __dnew.49_72
    # DEBUG D#9 => &D.70235
    # DEBUG __length => __dnew.49_72
    # DEBUG this => D#9
    # .MEM_91 = VDEF <.MEM_90>
    MEM[(size_type *)&D.70235 + 8B] = __dnew.49_72;
    # VUSE <.MEM_91>
    _73 = MEM[(char * *)&D.70235];
    # DEBUG D#1 => &D.70235
    # DEBUG this => D#1
    _74 = _73 + __dnew.49_72;
    # DEBUG __c1 => _74
    # DEBUG __c2 => D#10
    # .MEM_92 = VDEF <.MEM_91>
    MEM[(char_type &)_74] = 0;
    # .MEM_93 = VDEF <.MEM_92>
    __dnew ={v} {CLOBBER};
    # .MEM_94 = VDEF <.MEM_93>
    Module::Error (_17, &D.70235);

  }
  bb_15 (preds = {bb_14 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # DEBUG this => &D.70235
    # DEBUG this => &D.70235
    # DEBUG this => &D.70235
    # VUSE <.MEM_94>
    _52 = MEM[(char * *)&D.70235];
    # DEBUG D#1 => &D.70235
    # DEBUG this => D#1
    # DEBUG this => &D.70235
    if (&D.70235.D.11539._M_local_buf != _52)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    # DEBUG D#188 => D.70235.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.70235
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.70235
    # DEBUG this => D#1
    # DEBUG this => &D.70235
    # DEBUG D#185 => &D.70235._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _52
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _52
    # DEBUG this => D#179
    # DEBUG D.70220 => D#180
    # .MEM_95 = VDEF <.MEM_94>
    operator delete (_52);

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_18 })
  {
    <bb 17>:
    # .MEM_61 = PHI <.MEM_94(15), .MEM_95(16)>
    # DEBUG D#189 => &D.70235._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_100 = VDEF <.MEM_61>
    D.70235 ={v} {CLOBBER};
    # DEBUG this => NULL
    # DEBUG this => NULL

  }
  bb_18 (preds = {bb_10 bb_29 bb_17 }, succs = {bb_19 bb_26 })
  {
    <bb 18>:
    # .MEM_75 = PHI <.MEM_81(10), .MEM_103(29), .MEM_100(17)>
    # VUSE <.MEM_75>
    _53 = f_2(D)->tail;
    if (_53 != 0)
      goto <bb 19>;
    else
      goto <bb 26>;

  }
  bb_19 (preds = {bb_18 }, succs = {bb_20 bb_26 })
  {
    <bb 19>:
    # DEBUG D#341 => &_17->_reserved_slots
    # VUSE <.MEM_75>
    _65 = MEM[(int * *)this_6(D) + 192B];
    # DEBUG D#43 => D#341
    # DEBUG __n => _5
    # DEBUG this => D#43
    _60 = _65 + _32;
    # VUSE <.MEM_75>
    _59 = *_60;
    if (_59 != 0)
      goto <bb 20>;
    else
      goto <bb 26>;

  }
  bb_20 (preds = {bb_19 }, succs = {bb_21 })
  {
    <bb 20>:

  }
  bb_23 (preds = {bb_14 }, succs = {bb_24 bb_25 })
  {
  <L5>:
    # DEBUG this => &D.70235
    # DEBUG this => &D.70235
    # DEBUG this => &D.70235
    # VUSE <.MEM_94>
    _58 = MEM[(char * *)&D.70235];
    # DEBUG D#1 => &D.70235
    # DEBUG this => D#1
    # DEBUG this => &D.70235
    if (&D.70235.D.11539._M_local_buf != _58)
      goto <bb 24>;
    else
      goto <bb 25>;

  }
  bb_24 (preds = {bb_23 }, succs = {bb_25 })
  {
    <bb 24>:
    # DEBUG D#188 => D.70235.D.11539._M_allocated_capacity
    # DEBUG D#187 => D#188
    # DEBUG this => &D.70235
    # DEBUG __size => D#187
    # DEBUG D#186 => D#187
    # DEBUG D#1 => &D.70235
    # DEBUG this => D#1
    # DEBUG this => &D.70235
    # DEBUG D#185 => &D.70235._M_dataplus
    # DEBUG D#183 => D#185
    # DEBUG D#184 => D#186 + 1
    # DEBUG __p => _58
    # DEBUG __a => D#183
    # DEBUG __n => D#184
    # DEBUG D#182 => D#184
    # DEBUG D#181 => D#183
    # DEBUG D#179 => D#181
    # DEBUG D#180 => D#182
    # DEBUG __p => _58
    # DEBUG this => D#179
    # DEBUG D.70205 => D#180
    # .MEM_101 = VDEF <.MEM_94>
    operator delete (_58);

  }
  bb_25 (preds = {bb_23 bb_24 }, succs = {})
  {
    <bb 25>:
    # .MEM_77 = PHI <.MEM_94(23), .MEM_101(24)>
    # DEBUG D#189 => &D.70235._M_dataplus
    # DEBUG this => D#189
    # DEBUG this => D#189
    # DEBUG this => D#189
    # .MEM_106 = VDEF <.MEM_77>
    D.70235 ={v} {CLOBBER};
    resx 1

  }
  bb_28 (preds = {bb_21 }, succs = {bb_26 })
  {
    <bb 28>:
    # .MEM_99 = PHI <.MEM_108(21)>

  }
  bb_26 (preds = {bb_18 bb_19 bb_28 }, succs = {bb_30 })
  {
    <bb 26>:
    # .MEM_102 = PHI <.MEM_75(18), .MEM_75(19), .MEM_99(28)>

  }
  bb_30 (preds = {bb_26 }, succs = {bb_27 })
  {
    <bb 30>:

  }
  bb_27 (preds = {bb_8 bb_30 }, succs = {bb_31 })
  {
    <bb 27>:
    # .MEM_16 = PHI <.MEM_15(8), .MEM_102(30)>

  }
  bb_31 (preds = {bb_27 }, succs = {bb_1 })
  {
    <bb 31>:
    # VUSE <.MEM_16>
    return;

  }
  loop_1 (header = 21, latch = 22, niter = )
  {
    bb_21 (preds = {bb_20 bb_22 }, succs = {bb_22 bb_28 })
    {
      <bb 21>:
      # _18 = PHI <_60(20), _55(22)>
      # _9 = PHI <_59(20), _56(22)>
      # .MEM_51 = PHI <.MEM_75(20), .MEM_108(22)>
      # DEBUG D#341 => &_17->_reserved_slots
      # DEBUG __n => _5
      # DEBUG this => D#43
      # DEBUG D#340 => &_17->_reserved_slots
      # DEBUG D#43 => D#340
      # DEBUG __n => _5
      # DEBUG this => D#43
      _57 = _9 + -1;
      # .MEM_107 = VDEF <.MEM_51>
      *_18 = _57;
      # .MEM_108 = VDEF <.MEM_107>
      BufferState::SharedBufferPolicy::ProcessFreeSlot (_17, _4);
      # DEBUG D#341 => &_17->_reserved_slots
      # VUSE <.MEM_108>
      _54 = MEM[(int * *)this_6(D) + 192B];
      # DEBUG D#43 => D#341
      # DEBUG __n => _5
      # DEBUG this => D#43
      _55 = _54 + _32;
      # VUSE <.MEM_108>
      _56 = *_55;
      if (_56 != 0)
        goto <bb 22>;
      else
        goto <bb 28>;

    }
    bb_22 (preds = {bb_21 }, succs = {bb_21 })
    {
      <bb 22>:
      goto <bb 21>;

    }
  }
}

Pass statistics:
----------------

virtual void BufferState::SimpleFeedbackSharedBufferPolicy::SendingFlit(const Flit*) (struct SimpleFeedbackSharedBufferPolicyD.41259 * const thisD.43778, const struct FlitD.33590 * const fD.43776)
Eh tree:
   1 cleanup land:{1,<L5>}
{
  size_typeD.11502 __dnewD.70256;
  intD.9 iD.70195;
  const intD.9 vcD.70190;
  const struct stringD.2845 D.70235;
  intD.9 D.70173;
  static const charD.10 _ZZNK11BufferState12OccupancyForEiE19__PRETTY_FUNCTION__D.42307[41] = "int BufferState::OccupancyFor(int) const";
  intD.9 _4;
  long unsigned intD.14 _5;
  long unsigned intD.14 _7;
  const struct BufferStateD.39590 * _8;
  intD.9 _9;
  intD.9 * const _10;
  intD.9 * const _11;
  intD.9 _12;
  struct FeedbackSharedBufferPolicyD.40434 * _14;
  struct SharedBufferPolicyD.39699 * _17;
  intD.9 & _18;
  intD.9 * _19;
  struct queueD.40450 * _20;
  struct queueD.40450 & _21;
  intD.9 & _23;
  intD.9 _24;
  intD.9 * const _26;
  long unsigned intD.14 _27;
  const intD.9 & _28;
  intD.9 _29;
  intD.9 * _31;
  long unsigned intD.14 _32;
  intD.9 & _33;
  intD.9 _34;
  intD.9 _35;
  intD.9 * _36;
  intD.9 & _37;
  long unsigned intD.14 _39;
  intD.9 * _40;
  long unsigned intD.14 _41;
  intD.9 & _42;
  intD.9 _43;
  intD.9 _44;
  intD.9 * _45;
  intD.9 & _46;
  intD.9 _47;
  intD.9 _48;
  intD.9 _49;
  intD.9 _50;
  charD.10 * const _52;
  boolD.2757 _53;
  intD.9 * _54;
  intD.9 & _55;
  intD.9 _56;
  intD.9 _57;
  charD.10 * const _58;
  intD.9 _59;
  intD.9 & _60;
  intD.9 * _65;
  charD.10 * _68;
  long unsigned intD.14 __dnew.49_69;
  long unsigned intD.14 __dnew.49_72;
  charD.10 * const _73;
  charD.10 * _74;

;;   basic block 2, loop depth 0, count 0, freq 1736, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#623ptD.0 => &f_2(D)->vcD.33600
  # DEBUG vcD.43780 => D#623ptD.0
  # VUSE <.MEM_3(D)>
  _4 = MEM[(const intD.9 &)f_2(D) + 4];
  # RANGE ~[2147483648, 18446744071562067967]
  _5 = (long unsigned intD.14) _4;
  # DEBUG D#624ptD.0 => &this_6(D)->D.41295._flit_sent_timeD.41197
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _20 = MEM[(struct queueD.40450 * *)this_6(D) + 272B];
  # DEBUG D#53ptD.0 => D#624ptD.0
  # DEBUG __nD.60989 => _5
  # DEBUG thisD.60990 => D#53ptD.0
  # RANGE [0, 18446744073709551536] NONZERO 18446744073709551600
  _7 = _5 * 80;
  # PT = nonlocal escaped 
  _21 = _20 + _7;
  # DEBUG thisD.60983 => NULL
  # DEBUG thisD.60984 => D#90ptD.0
  # DEBUG D#88ptD.0 => &D#90ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#89ptD.0 => &D#90ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _11 = MEM[(intD.9 * *)_21 + 48B];
  # DEBUG D#86ptD.0 => D#89ptD.0
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _10 = MEM[(intD.9 * *)_21 + 16B];
  # DEBUG D#87ptD.0 => D#88ptD.0
  # DEBUG __xD.60985 => D#86ptD.0
  # DEBUG __yD.60986 => D#87ptD.0
  if (_10 == _11)
    goto <bb 3>;
  else
    goto <bb 9>;
;;    succ:       3 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _8 = this_6(D)->D.41295.D.41247.D.40291._buffer_stateD.39594;
  # DEBUG thisD.70169 => _8
  # DEBUG vcD.70170 => _4
  if (_4 < 0)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_3(D)>
  _24 = _8->_vcsD.41304;
  if (_4 >= _24)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 0
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_80 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  __assert_failD.24398 ("(vc >= 0) && (vc < _vcs)", "buffer_state.hpp", 225, &_ZZNK11BufferState12OccupancyForEiE19__PRETTY_FUNCTION__D.42307);
;;    succ:      

;;   basic block 6, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#31ptD.0 => &_8->_vc_occupancyD.41303
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _26 = MEM[(intD.9 * *)_8 + 112B];
  # DEBUG D#30ptD.0 => D#31ptD.0
  # DEBUG __nD.70172 => _5
  # DEBUG thisD.70171 => D#30ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _27 = _5 * 4;
  # PT = nonlocal escaped 
  _28 = _26 + _27;
  # VUSE <.MEM_3(D)>
  _29 = *_28;
  if (_29 <= 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 0
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#626ptD.0 => this_6(D)
  # DEBUG D#627ptD.0 => f_2(D)
  # DEBUG D#628ptD.0 => D#627ptD.0
  # DEBUG fD.70175 => D#628ptD.0
  # DEBUG D#629ptD.0 => D#626ptD.0
  # DEBUG thisD.70176 => D#629ptD.0
  # .MEM_79 = VDEF <.MEM_3(D)>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  __assert_failD.24398 ("_buffer_state->OccupancyFor(vc) > 0", "buffer_state.cpp", 502, &_ZZN11BufferState32SimpleFeedbackSharedBufferPolicy11SendingFlitEPK4FlitE19__PRETTY_FUNCTION__D.43781);
;;    succ:      

;;   basic block 8, loop depth 0, count 0, freq 260, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#625ptD.0 => &this_6(D)->_pending_creditsD.41261
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _19 = MEM[(intD.9 * *)this_6(D) + 312B];
  # DEBUG D#43ptD.0 => D#625ptD.0
  # DEBUG __nD.60993 => _5
  # DEBUG thisD.60994 => D#43ptD.0
  # PT = nonlocal escaped 
  _23 = _19 + _27;
  # RANGE [0, 2147483646] NONZERO 2147483647
  _12 = _29 + -1;
  # .MEM_13 = VDEF <.MEM_3(D)>
  *_23 = _12;
  # PT = nonlocal 
  _14 = &this_6(D)->D.41295;
  # .MEM_15 = VDEF <.MEM_13>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZN11BufferState26FeedbackSharedBufferPolicy11SendingFlitEPK4FlitD.41211 (_14, f_2(D));
  goto <bb 27>;
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       2 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # PT = nonlocal 
  _17 = &this_6(D)->D.41295.D.41247;
  # DEBUG thisD.70188 => _17
  # DEBUG fD.70189 => f_2(D)
  # DEBUG vcD.70190 => _4
  # DEBUG D#334ptD.0 => &_17->_reserved_slotsD.40245
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _31 = MEM[(intD.9 * *)this_6(D) + 192B];
  # DEBUG D#43ptD.0 => D#334ptD.0
  # DEBUG __nD.70194 => _5
  # DEBUG thisD.70193 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _32 = _5 * 4;
  # PT = nonlocal escaped 
  _33 = _31 + _32;
  # VUSE <.MEM_3(D)>
  _34 = *_33;
  if (_34 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 1077, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#335ptD.0 => &_17->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#335ptD.0
  # DEBUG __nD.56327 => _5
  # DEBUG thisD.56328 => D#43ptD.0
  # RANGE [0, 2147483646] NONZERO 2147483647
  _35 = _34 + -1;
  # .MEM_81 = VDEF <.MEM_3(D)>
  *_33 = _35;
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 398, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#336ptD.0 => &_17->_private_buf_vc_mapD.40240
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _36 = MEM[(intD.9 * *)this_6(D) + 112B];
  # DEBUG D#43ptD.0 => D#336ptD.0
  # DEBUG __nD.70230 => _5
  # DEBUG thisD.70229 => D#43ptD.0
  # PT = nonlocal escaped 
  _37 = _36 + _32;
  # VUSE <.MEM_3(D)>
  i_38 = *_37;
  # DEBUG iD.70195 => i_38
  # RANGE ~[2147483648, 18446744071562067967]
  _39 = (long unsigned intD.14) i_38;
  # DEBUG D#337ptD.0 => &_17->_private_buf_occupancyD.40242
  # VUSE <.MEM_3(D)>
  # PT = nonlocal escaped 
  _40 = MEM[(intD.9 * *)this_6(D) + 160B];
  # DEBUG D#43ptD.0 => D#337ptD.0
  # DEBUG __nD.70232 => _39
  # DEBUG thisD.70231 => D#43ptD.0
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _41 = _39 * 4;
  # PT = nonlocal escaped 
  _42 = _40 + _41;
  # VUSE <.MEM_3(D)>
  _43 = *_42;
  _44 = _43 + 1;
  # .MEM_82 = VDEF <.MEM_3(D)>
  *_42 = _44;
  # DEBUG D#338ptD.0 => &_17->_private_buf_occupancyD.40242
  # DEBUG D#43ptD.0 => D#338ptD.0
  # DEBUG __nD.56335 => _39
  # DEBUG thisD.56336 => D#43ptD.0
  # DEBUG D#339ptD.0 => &_17->_private_buf_sizeD.40241
  # VUSE <.MEM_82>
  # PT = nonlocal escaped 
  _45 = MEM[(intD.9 * *)this_6(D) + 136B];
  # DEBUG D#43ptD.0 => D#339ptD.0
  # DEBUG __nD.70234 => _39
  # DEBUG thisD.70233 => D#43ptD.0
  # PT = nonlocal escaped 
  _46 = _45 + _41;
  # VUSE <.MEM_82>
  _47 = *_46;
  if (_44 > _47)
    goto <bb 13>;
  else
    goto <bb 12>;
;;    succ:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 11, next block 29, flags: (NEW)
;;    pred:       11 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                13 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_103 = PHI <.MEM_82(11), .MEM_83(13)>
;;    succ:       29 [100.0%]  (FALLTHRU)

;;   basic block 29, loop depth 0, count 0, freq 340, maybe hot
;;    prev block 12, next block 13, flags: (NEW)
;;    pred:       12 [100.0%]  (FALLTHRU)
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 199, maybe hot
;;    prev block 29, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_82>
  _48 = MEM[(struct SharedBufferPolicyD.39699 *)this_6(D)]._shared_buf_occupancyD.40244;
  _49 = _48 + 1;
  # .MEM_83 = VDEF <.MEM_82>
  MEM[(struct SharedBufferPolicyD.39699 *)this_6(D)]._shared_buf_occupancyD.40244 = _49;
  # VUSE <.MEM_83>
  _50 = MEM[(struct SharedBufferPolicyD.39699 *)this_6(D)]._shared_buf_sizeD.40243;
  if (_49 > _50)
    goto <bb 14>;
  else
    goto <bb 12>;
;;    succ:       14 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70228 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG thisD.70237 => &D.70235
  # DEBUG __sD.70238 => "Shared buffer overflow."
  # DEBUG __aD.70239 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.70249 => &D.70235
  # DEBUG D#296ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.70252 => D#296ptD.0
  # DEBUG __datD.70251 => &D.70235.D.11539._M_local_bufD.11541
  # DEBUG __aD.70250 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_84 = VDEF <.MEM_83>
  MEM[(struct _Alloc_hiderD.11518 *)&D.70235]._M_pD.11525 = &D.70235.D.11539._M_local_bufD.11541;
  # DEBUG __sD.70248 => "Shared buffer overflow."
  # DEBUG thisD.70242 => &D.70235
  # DEBUG __begD.70241 => "Shared buffer overflow."
  # DEBUG __endD.70240 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.70246 => &D.70235
  # DEBUG __begD.70245 => "Shared buffer overflow."
  # DEBUG __endD.70244 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG thisD.70253 => &D.70235
  # DEBUG __begD.70254 => "Shared buffer overflow."
  # DEBUG __endD.70255 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __ptrD.55982 => "Shared buffer overflow."
  # DEBUG __firstD.70279 => "Shared buffer overflow."
  # DEBUG __lastD.70278 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG D#316ptD.0 => &__firstD.70279
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.70281 => "Shared buffer overflow."
  # DEBUG __lastD.70280 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # .MEM_85 = VDEF <.MEM_84>
  __dnewD.70256 = 23;
  # .MEM_86 = VDEF <.MEM_85>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _68 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.70235, &__dnewD.70256, 0);
  # DEBUG D#7ptD.0 => &D.70235
  # DEBUG __pD.70275 => _68
  # DEBUG thisD.70274 => D#7ptD.0
  # .MEM_87 = VDEF <.MEM_86>
  MEM[(charD.10 * *)&D.70235] = _68;
  # VUSE <.MEM_87>
  __dnew.49_69 = __dnewD.70256;
  # DEBUG D#8ptD.0 => &D.70235
  # DEBUG __capacityD.70277 => __dnew.49_69
  # DEBUG thisD.70276 => D#8ptD.0
  # .MEM_88 = VDEF <.MEM_87>
  MEM[(size_typeD.11502 *)&D.70235 + 16B] = __dnew.49_69;
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.70259 => _68
  # DEBUG __k1D.70258 => "Shared buffer overflow."
  # DEBUG __k2D.70257 => &MEM[(voidD.45 *)"Shared buffer overflow." + 23B]
  # DEBUG __dD.70262 => _68
  # DEBUG __sD.70261 => "Shared buffer overflow."
  # DEBUG __nD.70260 => 23
  # DEBUG __s1D.70265 => _68
  # DEBUG __s2D.70264 => "Shared buffer overflow."
  # DEBUG __nD.70263 => 23
  # .MEM_90 = VDEF <.MEM_88>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  memcpyD.992 (_68, "Shared buffer overflow.", 23);
  # VUSE <.MEM_90>
  __dnew.49_72 = __dnewD.70256;
  # DEBUG thisD.70269 => &D.70235
  # DEBUG __nD.70268 => __dnew.49_72
  # DEBUG D#9ptD.0 => &D.70235
  # DEBUG __lengthD.70271 => __dnew.49_72
  # DEBUG thisD.70270 => D#9ptD.0
  # .MEM_91 = VDEF <.MEM_90>
  MEM[(size_typeD.11502 *)&D.70235 + 8B] = __dnew.49_72;
  # VUSE <.MEM_91>
  # PT = nonlocal escaped null { D.70235 } (escaped)
  _73 = MEM[(charD.10 * *)&D.70235];
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.70235 } (escaped)
  _74 = _73 + __dnew.49_72;
  # DEBUG __c1D.70273 => _74
  # DEBUG __c2D.70272 => D#10ptD.0
  # .MEM_92 = VDEF <.MEM_91>
  MEM[(char_typeD.6629 &)_74] = 0;
  # .MEM_93 = VDEF <.MEM_92>
  __dnewD.70256 ={v} {CLOBBER};
  [LP 1] # .MEM_94 = VDEF <.MEM_93>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZNK6Module5ErrorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.30390 (_17, &D.70235);
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                23 (EH,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.70212 => &D.70235
  # DEBUG thisD.70213 => &D.70235
  # DEBUG thisD.70222 => &D.70235
  # VUSE <.MEM_94>
  # PT = nonlocal escaped null { D.70235 } (escaped)
  _52 = MEM[(charD.10 * *)&D.70235];
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.70223 => &D.70235
  if (&D.70235.D.11539._M_local_bufD.11541 != _52)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.70235.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.70215 => &D.70235
  # DEBUG __sizeD.70214 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.70235
  # DEBUG D#185ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.70218 => _52
  # DEBUG __aD.70216 => D#183ptD.0
  # DEBUG __nD.70217 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.70221 => _52
  # DEBUG thisD.70219 => D#179ptD.0
  # DEBUG D.70220 => D#180ptD.0
  # .MEM_95 = VDEF <.MEM_94>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZdlPvD.2766 (_52);
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 58, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_94(15), .MEM_95(16)>
  # DEBUG D#189ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG thisD.70224 => D#189ptD.0
  # DEBUG thisD.70225 => D#189ptD.0
  # DEBUG thisD.70226 => D#189ptD.0
  # .MEM_100 = VDEF <.MEM_61>
  D.70235 ={v} {CLOBBER};
  # DEBUG thisD.70227 => NULL
  # DEBUG thisD.56348 => NULL
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_75 = PHI <.MEM_81(10), .MEM_103(29), .MEM_100(17)>
  # VUSE <.MEM_75>
  _53 = f_2(D)->tailD.33603;
  if (_53 != 0)
    goto <bb 19>;
  else
    goto <bb 26>;
;;    succ:       19 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW)
;;    pred:       18 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#341ptD.0 => &_17->_reserved_slotsD.40245
  # VUSE <.MEM_75>
  # PT = nonlocal escaped 
  _65 = MEM[(intD.9 * *)this_6(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.70192 => _5
  # DEBUG thisD.70191 => D#43ptD.0
  # PT = nonlocal escaped 
  _60 = _65 + _32;
  # VUSE <.MEM_75>
  _59 = *_60;
  if (_59 != 0)
    goto <bb 20>;
  else
    goto <bb 26>;
;;    succ:       20 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # PT = nonlocal escaped 
  # _18 = PHI <_60(20), _55(22)>
  # _9 = PHI <_59(20), _56(22)>
  # .MEM_51 = PHI <.MEM_75(20), .MEM_108(22)>
  # DEBUG D#341ptD.0 => &_17->_reserved_slotsD.40245
  # DEBUG __nD.70192 => _5
  # DEBUG thisD.70191 => D#43ptD.0
  # DEBUG D#340ptD.0 => &_17->_reserved_slotsD.40245
  # DEBUG D#43ptD.0 => D#340ptD.0
  # DEBUG __nD.56369 => _5
  # DEBUG thisD.56370 => D#43ptD.0
  # RANGE [-2147483648, 2147483646]
  _57 = _9 + -1;
  # .MEM_107 = VDEF <.MEM_51>
  *_18 = _57;
  # .MEM_108 = VDEF <.MEM_107>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZN11BufferState18SharedBufferPolicy15ProcessFreeSlotEiD.40247 (_17, _4);
  # DEBUG D#341ptD.0 => &_17->_reserved_slotsD.40245
  # VUSE <.MEM_108>
  # PT = nonlocal escaped 
  _54 = MEM[(intD.9 * *)this_6(D) + 192B];
  # DEBUG D#43ptD.0 => D#341ptD.0
  # DEBUG __nD.70192 => _5
  # DEBUG thisD.70191 => D#43ptD.0
  # PT = nonlocal escaped 
  _55 = _54 + _32;
  # VUSE <.MEM_108>
  _56 = *_55;
  if (_56 != 0)
    goto <bb 22>;
  else
    goto <bb 28>;
;;    succ:       22 [91.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [9.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 21, next block 23, flags: (NEW)
;;    pred:       21 [91.0%]  (TRUE_VALUE,EXECUTABLE)
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 0
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       14 (EH,EXECUTABLE)
<L5>: [LP 1]
  # DEBUG thisD.70197 => &D.70235
  # DEBUG thisD.70198 => &D.70235
  # DEBUG thisD.70207 => &D.70235
  # VUSE <.MEM_94>
  # PT = nonlocal escaped null { D.70235 } (escaped)
  _58 = MEM[(charD.10 * *)&D.70235];
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.70208 => &D.70235
  if (&D.70235.D.11539._M_local_bufD.11541 != _58)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 0
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.70235.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.70200 => &D.70235
  # DEBUG __sizeD.70199 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.70235
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.70235
  # DEBUG D#185ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.70203 => _58
  # DEBUG __aD.70201 => D#183ptD.0
  # DEBUG __nD.70202 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.70206 => _58
  # DEBUG thisD.70204 => D#179ptD.0
  # DEBUG D.70205 => D#180ptD.0
  # .MEM_101 = VDEF <.MEM_94>
  # USE = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  # CLB = nonlocal null { D.42307 D.43781 D.70235 D.70256 } (nonlocal, escaped)
  _ZdlPvD.2766 (_58);
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0
;;    prev block 24, next block 28, flags: (NEW, REACHABLE)
;;    pred:       23 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_94(23), .MEM_101(24)>
  # DEBUG D#189ptD.0 => &D.70235._M_dataplusD.11519
  # DEBUG thisD.70209 => D#189ptD.0
  # DEBUG thisD.70210 => D#189ptD.0
  # DEBUG thisD.70211 => D#189ptD.0
  # .MEM_106 = VDEF <.MEM_77>
  D.70235 ={v} {CLOBBER};
  resx 1
;;    succ:      

;;   basic block 28, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 26, flags: (NEW)
;;    pred:       21 [9.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_99 = PHI <.MEM_108(21)>
;;    succ:       26 [100.0%]  (FALLTHRU)

;;   basic block 26, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       18 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [9.0%]  (FALSE_VALUE,EXECUTABLE)
;;                28 [100.0%]  (FALLTHRU)
  # .MEM_102 = PHI <.MEM_75(18), .MEM_75(19), .MEM_99(28)>
;;    succ:       30 [100.0%]  (FALLTHRU)

;;   basic block 30, loop depth 0, count 0, freq 1475, maybe hot
;;    prev block 26, next block 27, flags: (NEW)
;;    pred:       26 [100.0%]  (FALLTHRU)
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 1735, maybe hot
;;    prev block 30, next block 31, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_16 = PHI <.MEM_15(8), .MEM_102(30)>
;;    succ:       31 [100.0%]  (FALLTHRU)

;;   basic block 31, loop depth 0, count 0, freq 1735, maybe hot
;;    prev block 27, next block 1, flags: (NEW)
;;    pred:       27 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_16>
  return;
;;    succ:       EXIT [100.0%] 

}



;; Function std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = int] (_ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_, funcdef_no=2853, decl_uid=47472, cgraph_uid=1320, symbol_order=1321)


Pass statistics:
----------------

std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = int] (struct _Deque_iteratorD.42910 __firstD.47473, struct _Deque_iteratorD.42910 __lastD.47474, struct _Deque_iteratorD.42908 & restrict __resultD.47475)
{
  intD.9 * * __first$_M_nodeD.70320;
  intD.9 * const __first$_M_lastD.70319;
  intD.9 * __first$_M_firstD.70318;
  intD.9 * const __first$_M_curD.70317;
  const difference_typeD.44735 __offsetD.70310;
  struct _SelfD.44736 & D.70314;
  const difference_typeD.42938 __offsetD.70303;
  struct _SelfD.42939 & D.70307;
  const ptrdiff_tD.2819 _NumD.60784;
  const difference_typeD.47674 __clenD.47682;
  difference_typeD.47674 __lenD.47675;
  const long intD.12 D.47683;
  const long intD.12 D.47684;
  long intD.12 _8;
  long intD.12 _10;
  long intD.12 _11;
  long intD.12 _15;
  long intD.12 _17;
  long intD.12 _18;
  long intD.12 _21;
  intD.9 * * _22;
  long unsigned intD.14 __clen.112_26;
  long unsigned intD.14 _27;
  long intD.12 _30;
  long intD.12 _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  long intD.12 _41;
  intD.9 * _42;
  long intD.12 _43;
  intD.9 * _44;
  long intD.12 _45;
  long intD.12 _46;
  long intD.12 _47;
  long intD.12 _48;
  long intD.12 _50;
  long intD.12 _52;
  long intD.12 _53;
  long intD.12 _54;
  long intD.12 __len.111_56;
  long intD.12 _57;
  intD.9 * * _65;
  intD.9 * _73;
  long intD.12 _74;
  long intD.12 _75;
  long intD.12 _76;
  intD.9 * _81;
  long intD.12 iftmp.117_82;
  long unsigned intD.14 _84;
  long unsigned intD.14 _85;
  long intD.12 _86;
  long intD.12 iftmp.117_87;
  intD.9 * * _88;
  long intD.12 iftmp.117_89;
  long unsigned intD.14 __node_offset.119_90;
  long unsigned intD.14 _91;
  intD.9 * * _92;
  intD.9 * _93;
  intD.9 * _94;
  long intD.12 _95;
  long intD.12 _96;
  long unsigned intD.14 _97;
  long unsigned intD.14 _98;
  intD.9 * _99;
  long intD.12 _102;
  long intD.12 _103;
  long intD.12 _104;
  long intD.12 iftmp.107_110;
  long unsigned intD.14 _112;
  long unsigned intD.14 _113;
  long intD.12 _114;
  long intD.12 iftmp.107_115;
  long intD.12 iftmp.107_117;
  long unsigned intD.14 __node_offset.109_118;
  long unsigned intD.14 _119;
  long intD.12 _123;
  long intD.12 _124;
  long unsigned intD.14 _125;
  long unsigned intD.14 _126;
  unsigned long _143;
  unsigned long _144;
  intD.9 * pretmp_214;
  intD.9 * prephitmp_215;
  long intD.12 pretmp_216;
  long intD.12 prephitmp_217;
  intD.9 * const prephitmp_227;
  intD.9 * const pretmp_228;
  intD.9 * const prephitmp_229;
  intD.9 * const prephitmp_230;
  intD.9 * const prephitmp_238;
  intD.9 * const prephitmp_239;
  intD.9 * const prephitmp_240;
  intD.9 * const pretmp_241;
  intD.9 * const prephitmp_242;
  intD.9 * const pretmp_243;
  intD.9 * const prephitmp_244;
  intD.9 * const pretmp_245;
  intD.9 * const prephitmp_246;
  intD.9 * pretmp_247;
  intD.9 * prephitmp_248;
  intD.9 * pretmp_249;
  intD.9 * prephitmp_250;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __first$_M_cur_78 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47473];
  # DEBUG __first$_M_curD.70317 => __first$_M_cur_78
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __first$_M_first_146 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47473 + 8B];
  # DEBUG __first$_M_firstD.70318 => __first$_M_first_146
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __first$_M_last_145 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47473 + 16B];
  # DEBUG __first$_M_lastD.70319 => __first$_M_last_145
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __first$_M_node_147 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47473 + 24B];
  # DEBUG __first$_M_nodeD.70320 => __first$_M_node_147
  # DEBUG __xD.60765 => &__lastD.47474
  # DEBUG __yD.60766 => &__firstD.47473
  # DEBUG __sizeD.60431 => 4
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  _22 = __lastD.47474._M_nodeD.44740;
  _21 = (long intD.12) _22;
  _37 = (long intD.12) __first$_M_node_147;
  _38 = _21 - _37;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _39 = _38 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _40 = _39 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _41 = _40 * 128;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  _42 = __lastD.47474._M_curD.44737;
  _43 = (long intD.12) _42;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  _44 = __lastD.47474._M_firstD.44738;
  _45 = (long intD.12) _44;
  _46 = _43 - _45;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _47 = _46 /[ex] 4;
  _48 = _41 + _47;
  _50 = (long intD.12) __first$_M_last_145;
  _52 = (long intD.12) __first$_M_cur_78;
  _53 = _50 - _52;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _54 = _53 /[ex] 4;
  __len_55 = _48 + _54;
  # DEBUG __lenD.47675 => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_241 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_curD.42940;
  # VUSE <.MEM_2(D)>
  pretmp_243 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_firstD.42941;
  # VUSE <.MEM_2(D)>
  pretmp_245 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_lastD.42942;
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_247 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_lastD.42942;
  # VUSE <.MEM_2(D)>
  pretmp_249 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_curD.42940;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_2(D)(4), .MEM_128(17)>
  # __len.111_56 = PHI <__len_55(4), __len_32(17)>
  # PT = nonlocal escaped 
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # PT = nonlocal escaped 
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # PT = nonlocal escaped 
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # PT = nonlocal 
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # PT = nonlocal escaped 
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # PT = nonlocal escaped 
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_nodeD.70320 => __first$_M_node_23
  # DEBUG __first$_M_lastD.70319 => __first$_M_last_130
  # DEBUG __first$_M_firstD.70318 => __first$_M_first_132
  # DEBUG __first$_M_curD.70317 => __first$_M_cur_129
  _8 = (long intD.12) prephitmp_248;
  # DEBUG D#1081ptD.0 => MEM[(struct _Deque_iteratorD.42908 &)__result_6(D) clique 1 base 1]._M_curD.42940
  _10 = (long intD.12) prephitmp_250;
  _11 = _8 - _10;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _12 = _11 /[ex] 4;
  _15 = (long intD.12) __first$_M_last_130;
  _17 = (long intD.12) __first$_M_cur_129;
  _18 = _15 - _17;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _19 = _18 /[ex] 4;
  # DEBUG __aD.60789 => &D.47683
  # DEBUG __bD.60790 => &D.47684
  _30 = MIN_EXPR <_12, __len.111_56>;
  # DEBUG __aD.60786 => &__lenD.47675
  # DEBUG __bD.60787 => NULL
  # RANGE [-2305843009213693952, 2305843009213693951]
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clenD.47682 => D#1079ptD.0
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __clen.112_26 = (long unsigned intD.14) __clen_59;
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _27 = __clen.112_26 * 4;
  # DEBUG D#1082ptD.0 => __first$_M_cur_129 + _27
  # DEBUG __firstD.60768 => __first$_M_cur_129
  # DEBUG __lastD.60769 => D#1082ptD.0
  # DEBUG __resultD.60770 => D#1081ptD.0
  # DEBUG __itD.54938 => D#1082ptD.0
  # DEBUG __itD.54242 => D#1082ptD.0
  # DEBUG __itD.54936 => __first$_M_cur_129
  # DEBUG __itD.54242 => __first$_M_cur_129
  # DEBUG __firstD.60773 => __first$_M_cur_129
  # DEBUG __lastD.60772 => D#1082ptD.0
  # DEBUG __resultD.60771 => D#1081ptD.0
  # DEBUG __itD.54918 => D#1081ptD.0
  # DEBUG __itD.54245 => D#1081ptD.0
  # DEBUG __itD.54916 => D#1082ptD.0
  # DEBUG __itD.54245 => D#1082ptD.0
  # DEBUG __itD.54914 => __first$_M_cur_129
  # DEBUG __itD.54245 => __first$_M_cur_129
  # DEBUG __firstD.60776 => NULL
  # DEBUG __lastD.60775 => NULL
  # DEBUG __resultD.60774 => NULL
  # DEBUG __simpleD.60780 => 1
  # DEBUG __firstD.60783 => NULL
  # DEBUG __lastD.60782 => NULL
  # DEBUG __resultD.60781 => NULL
  # RANGE ~[-3, -1] NONZERO 18446744073709551612
  _57 = (long intD.12) _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_58 = _57 /[ex] 4;
  # DEBUG _NumD.60784 => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 2639, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_66 = VDEF <.MEM_60>
  # USE = nonlocal 
  # CLB = nonlocal 
  memmoveD.995 (prephitmp_250, __first$_M_cur_129, _27);
  # VUSE <.MEM_66>
  pretmp_214 = __result_6(D)->_M_curD.42940;
  pretmp_216 = (long intD.12) pretmp_214;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_60(5), .MEM_66(6)>
  # PT = nonlocal escaped 
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG thisD.70308 => &__firstD.47473
  # DEBUG __nD.70309 => D#1079ptD.0
  _102 = (long intD.12) __first$_M_first_132;
  _103 = _17 - _102;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _104 = _103 /[ex] 4;
  # RANGE [-4611686018427387904, 4611686018427387902]
  __offset_105 = __clen_59 + _104;
  # DEBUG __offsetD.70310 => __offset_105
  # DEBUG __sizeD.60431 => 4
  _143 = (unsigned long) __offset_105;
  if (_143 <= 127)
    goto <bb 8>;
  else
    goto <bb 20>;
;;    succ:       8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 4052, maybe hot
;;   Invalid sum of incoming frequencies 4218, should be 4052
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       20 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 36028797018963967] NONZERO 36028797018963967
  iftmp.107_110 = __offset_105 >> 7;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1499, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       20 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[4611686018427387904, 18446744073709551614]
  _112 = ~_143;
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _113 = _112 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _114 = (long intD.12) _113;
  # RANGE [-144115188075855872, -1]
  iftmp.107_115 = ~_114;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 36028797018963967]
  # iftmp.107_117 = PHI <iftmp.107_110(9), iftmp.107_115(10)>
  # DEBUG __node_offsetD.70311 => iftmp.107_117
  # RANGE ~[36028797018963968, 18302628885633695743]
  __node_offset.109_118 = (long unsigned intD.14) iftmp.107_117;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _119 = __node_offset.109_118 * 8;
  # PT = nonlocal 
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG thisD.70313 => &__firstD.47473
  # DEBUG __new_nodeD.70312 => __first$_M_node_120
  # DEBUG __first$_M_nodeD.70320 => __first$_M_node_120
  # VUSE <.MEM_35>
  # PT = nonlocal escaped 
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_firstD.70318 => __first$_M_first_121
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_lastD.70319 => __first$_M_last_122
  # DEBUG __sizeD.60431 => 4
  # RANGE [-9223372036854775808, 4611686018427387776] NONZERO 18446744073709551488
  _123 = iftmp.107_117 * 128;
  # RANGE [-9223372036854775680, 9223372036854775807]
  _124 = __offset_105 - _123;
  # RANGE [0, 18446744073709551615]
  _125 = (long unsigned intD.14) _124;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _126 = _125 * 4;
  # PT = nonlocal escaped 
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_curD.70317 => __first$_M_cur_127
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;   Invalid sum of incoming frequencies 10101, should be 9100
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(11)>
  # PT = nonlocal escaped 
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(11)>
  # PT = nonlocal escaped 
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(11)>
  # PT = nonlocal 
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(11)>
  # DEBUG __first$_M_nodeD.70320 => __first$_M_node_106
  # DEBUG __first$_M_lastD.70319 => __first$_M_last_1
  # DEBUG __first$_M_firstD.70318 => __first$_M_first_131
  # DEBUG __first$_M_curD.70317 => __first$_M_cur_133
  # DEBUG thisD.70301 => __result_6(D)
  # DEBUG __nD.70302 => D#1079ptD.0
  # VUSE <.MEM_35>
  # PT = nonlocal escaped 
  _73 = MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_firstD.42941;
  _74 = (long intD.12) _73;
  _75 = prephitmp_217 - _74;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _76 = _75 /[ex] 4;
  # RANGE [-4611686018427387904, 4611686018427387902]
  __offset_77 = __clen_59 + _76;
  # DEBUG __offsetD.70303 => __offset_77
  # DEBUG __sizeD.54289 => 4
  _144 = (unsigned long) __offset_77;
  if (_144 <= 127)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 4052, maybe hot
;;   Invalid sum of incoming frequencies 4218, should be 4052
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       22 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 36028797018963967] NONZERO 36028797018963967
  iftmp.117_82 = __offset_77 >> 7;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 1499, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       22 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[4611686018427387904, 18446744073709551614]
  _84 = ~_144;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _85 = _84 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _86 = (long intD.12) _85;
  # RANGE [-144115188075855872, -1]
  iftmp.117_87 = ~_86;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 36028797018963967]
  # iftmp.117_89 = PHI <iftmp.117_82(13), iftmp.117_87(14)>
  # DEBUG __node_offsetD.70304 => iftmp.117_89
  # VUSE <.MEM_35>
  # PT = nonlocal escaped 
  _88 = MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_nodeD.42943;
  # RANGE ~[36028797018963968, 18302628885633695743]
  __node_offset.119_90 = (long unsigned intD.14) iftmp.117_89;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _91 = __node_offset.119_90 * 8;
  # PT = nonlocal escaped 
  _92 = _88 + _91;
  # DEBUG thisD.70306 => __result_6(D)
  # DEBUG __new_nodeD.70305 => _92
  # .MEM_136 = VDEF <.MEM_35>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_nodeD.42943 = _92;
  # VUSE <.MEM_136>
  # PT = nonlocal escaped 
  _93 = *_92;
  # .MEM_137 = VDEF <.MEM_136>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_firstD.42941 = _93;
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _94 = _93 + 512;
  # .MEM_138 = VDEF <.MEM_137>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_lastD.42942 = _94;
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 4611686018427387776] NONZERO 18446744073709551488
  _95 = iftmp.117_89 * 128;
  # RANGE [-9223372036854775680, 9223372036854775807]
  _96 = __offset_77 - _95;
  # RANGE [0, 18446744073709551615]
  _97 = (long unsigned intD.14) _96;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _98 = _97 * 4;
  # PT = nonlocal escaped 
  _99 = _93 + _98;
  # .MEM_139 = VDEF <.MEM_138>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_curD.42940 = _99;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_128 = PHI <.MEM_135(21), .MEM_139(15)>
  # prephitmp_227 = PHI <_81(21), _99(15)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(15)>
  # prephitmp_230 = PHI <_73(21), _93(15)>
  # RANGE [-2305843009213693950, 9223372036854775807]
  __len_32 = __len.111_56 - __clen_59;
  # DEBUG __lenD.47675 => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 19, flags: (NEW)
;;    pred:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_128(18), .MEM_2(D)(3)>
  # PT = nonlocal escaped 
  # prephitmp_242 = PHI <prephitmp_240(18), pretmp_241(3)>
  # PT = nonlocal escaped 
  # prephitmp_244 = PHI <prephitmp_238(18), pretmp_243(3)>
  # PT = nonlocal escaped 
  # prephitmp_246 = PHI <prephitmp_239(18), pretmp_245(3)>
  # DEBUG thisD.60792 => _34(D)
  # DEBUG __xD.60793 => __result_6(D)
  # .MEM_67 = VDEF <.MEM_61>
  _34(D)->_M_curD.42940 = prephitmp_242;
  # .MEM_68 = VDEF <.MEM_67>
  _34(D)->_M_firstD.42941 = prephitmp_244;
  # .MEM_69 = VDEF <.MEM_68>
  _34(D)->_M_lastD.42942 = prephitmp_246;
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _65 = MEM[(const struct iteratorD.42928 &)__result_6(D) clique 1 base 1]._M_nodeD.42943;
  # .MEM_70 = VDEF <.MEM_69>
  _34(D)->_M_nodeD.42943 = _65;
  # DEBUG D#1080ptD.0 => {CLOBBER}
  # DEBUG __lenD.47675 => D#1080ptD.0
  # VUSE <.MEM_70>
  return _34(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 20, loop depth 1, count 0, freq 5778, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 5778
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       7 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 3549, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 3549
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  _81 = prephitmp_215 + _27;
  # .MEM_135 = VDEF <.MEM_35>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_curD.42940 = _81;
  # VUSE <.MEM_135>
  pretmp_228 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_lastD.42942;
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 5778, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 5778
;;    prev block 21, next block 1, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [27.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(struct _Deque_iterator *)&__first]
analyze_innermost: success.
	base_address: &__first
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)&__first]
Creating dr for MEM[(struct _Deque_iterator *)&__first + 8B]
analyze_innermost: success.
	base_address: &__first
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)&__first + 8B]
Creating dr for MEM[(struct _Deque_iterator *)&__first + 16B]
analyze_innermost: success.
	base_address: &__first
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)&__first + 16B]
Creating dr for MEM[(struct _Deque_iterator *)&__first + 24B]
analyze_innermost: success.
	base_address: &__first
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)&__first + 24B]
Creating dr for __last._M_node
analyze_innermost: success.
	base_address: &__last
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: __last
	Access function 0: 192
Creating dr for __last._M_cur
analyze_innermost: success.
	base_address: &__last
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: __last
	Access function 0: 0
Creating dr for __last._M_first
analyze_innermost: success.
	base_address: &__last
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: __last
	Access function 0: 64
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 64
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 0
Creating dr for *__first$_M_node_120
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__first$_M_node_120
Creating dr for *__first$_M_node_120
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__first$_M_node_120
Creating dr for *__result_6(D)._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 64
Creating dr for *__result_6(D)._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 64
Creating dr for *__result_6(D)._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 0
Creating dr for *__result_6(D)._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 128
Creating dr for *__result_6(D)._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 192
Creating dr for *__result_6(D)._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 192
Creating dr for *__result_6(D)._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 192
Creating dr for *__result_6(D)._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 192
Creating dr for *_92
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_92
Creating dr for *_92
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_92
Creating dr for *__result_6(D)._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 64
Creating dr for *__result_6(D)._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 64
Creating dr for *__result_6(D)._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 128
Creating dr for *__result_6(D)._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 128
Creating dr for *__result_6(D)._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 0
Creating dr for *__result_6(D)._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 0
Applying pattern match.pd:822, generic-match.c:7035
Creating dr for *__first$_M_node_120
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__first$_M_node_120
Creating dr for *__first$_M_node_120
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *__first$_M_node_120
Creating dr for *__result_6(D)._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 64
Creating dr for *__result_6(D)._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 64
Creating dr for *__result_6(D)._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 0
Creating dr for *__result_6(D)._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 128
Creating dr for *__result_6(D)._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 192
Creating dr for *__result_6(D)._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 192
Creating dr for *__result_6(D)._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 192
Creating dr for *__result_6(D)._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 192
Creating dr for *_92
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_92
Creating dr for *_92
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_92
Creating dr for *__result_6(D)._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 64
Creating dr for *__result_6(D)._M_first
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 64
Creating dr for *__result_6(D)._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 128
Creating dr for *__result_6(D)._M_last
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 128
Creating dr for *__result_6(D)._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 0
Creating dr for *__result_6(D)._M_cur
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__result_6(D)
	Access function 0: 0
Creating dr for _34(D)->_M_cur
analyze_innermost: success.
	base_address: _34(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *_34(D)
	Access function 0: 0
Creating dr for _34(D)->_M_first
analyze_innermost: success.
	base_address: _34(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *_34(D)
	Access function 0: 64
Creating dr for _34(D)->_M_last
analyze_innermost: success.
	base_address: _34(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: *_34(D)
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)__result_6(D)]._M_node
analyze_innermost: success.
	base_address: __result_6(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__result_6(D)]
	Access function 0: 192
Creating dr for _34(D)->_M_node
analyze_innermost: success.
	base_address: _34(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *_34(D)
	Access function 0: 192

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:19)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:3)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:5)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:20)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:2)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:10)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:27, LOOPS:1, CONDITIONS:7, STMTS:187)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # VUSE <.MEM_2(D)>
    __first$_M_cur_78 = MEM[(struct _Deque_iterator *)&__first];
    # DEBUG __first$_M_cur => __first$_M_cur_78
    # VUSE <.MEM_2(D)>
    __first$_M_first_146 = MEM[(struct _Deque_iterator *)&__first + 8B];
    # DEBUG __first$_M_first => __first$_M_first_146
    # VUSE <.MEM_2(D)>
    __first$_M_last_145 = MEM[(struct _Deque_iterator *)&__first + 16B];
    # DEBUG __first$_M_last => __first$_M_last_145
    # VUSE <.MEM_2(D)>
    __first$_M_node_147 = MEM[(struct _Deque_iterator *)&__first + 24B];
    # DEBUG __first$_M_node => __first$_M_node_147
    # DEBUG __x => &__last
    # DEBUG __y => &__first
    # DEBUG __size => 4
    # VUSE <.MEM_2(D)>
    _22 = __last._M_node;
    _21 = (long int) _22;
    _37 = (long int) __first$_M_node_147;
    _38 = _21 - _37;
    _39 = _38 /[ex] 8;
    _40 = _39 + -1;
    _41 = _40 * 128;
    # VUSE <.MEM_2(D)>
    _42 = __last._M_cur;
    _43 = (long int) _42;
    # VUSE <.MEM_2(D)>
    _44 = __last._M_first;
    _45 = (long int) _44;
    _46 = _43 - _45;
    _47 = _46 /[ex] 4;
    _48 = _41 + _47;
    _50 = (long int) __first$_M_last_145;
    _52 = (long int) __first$_M_cur_78;
    _53 = _50 - _52;
    _54 = _53 /[ex] 4;
    __len_55 = _48 + _54;
    # DEBUG __len => __len_55
    if (__len_55 <= 0)
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_19 })
  {
    <bb 3>:
    # VUSE <.MEM_2(D)>
    pretmp_241 = MEM[(const struct iterator &)__result_6(D)]._M_cur;
    # VUSE <.MEM_2(D)>
    pretmp_243 = MEM[(const struct iterator &)__result_6(D)]._M_first;
    # VUSE <.MEM_2(D)>
    pretmp_245 = MEM[(const struct iterator &)__result_6(D)]._M_last;
    goto <bb 19>;

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 })
  {
    <bb 4>:
    # VUSE <.MEM_2(D)>
    pretmp_247 = MEM[(const struct iterator &)__result_6(D)]._M_last;
    # VUSE <.MEM_2(D)>
    pretmp_249 = MEM[(const struct iterator &)__result_6(D)]._M_cur;

  }
  bb_18 (preds = {bb_16 }, succs = {bb_23 })
  {
    <bb 18>:
    # prephitmp_240 = PHI <prephitmp_227(16)>
    # prephitmp_239 = PHI <prephitmp_229(16)>
    # prephitmp_238 = PHI <prephitmp_230(16)>

  }
  bb_23 (preds = {bb_18 }, succs = {bb_19 })
  {
    <bb 23>:

  }
  bb_19 (preds = {bb_23 bb_3 }, succs = {bb_26 })
  {
    <bb 19>:
    # .MEM_61 = PHI <.MEM_128(23), .MEM_2(D)(3)>
    # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
    # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
    # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>

  }
  bb_26 (preds = {bb_19 }, succs = {bb_1 })
  {
    <bb 26>:
    # DEBUG this => _34(D)
    # DEBUG __x => __result_6(D)
    # .MEM_67 = VDEF <.MEM_61>
    _34(D)->_M_cur = prephitmp_242;
    # .MEM_68 = VDEF <.MEM_67>
    _34(D)->_M_first = prephitmp_244;
    # .MEM_69 = VDEF <.MEM_68>
    _34(D)->_M_last = prephitmp_246;
    # VUSE <.MEM_69>
    _65 = MEM[(const struct iterator &)__result_6(D)]._M_node;
    # .MEM_70 = VDEF <.MEM_69>
    _34(D)->_M_node = _65;
    # DEBUG D#1080 => {CLOBBER}
    # DEBUG __len => D#1080
    # VUSE <.MEM_70>
    return _34(D);

  }
  loop_1 (header = 5, latch = 17, niter = )
  {
    bb_5 (preds = {bb_4 bb_17 }, succs = {bb_6 bb_7 })
    {
      <bb 5>:
      # .MEM_60 = PHI <.MEM_2(D)(4), .MEM_128(17)>
      # __len.111_56 = PHI <__len_55(4), __len_32(17)>
      # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
      # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
      # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
      # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
      # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
      # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
      # DEBUG __first$_M_node => __first$_M_node_23
      # DEBUG __first$_M_last => __first$_M_last_130
      # DEBUG __first$_M_first => __first$_M_first_132
      # DEBUG __first$_M_cur => __first$_M_cur_129
      _8 = (long int) prephitmp_248;
      # DEBUG D#1081 => *__result_6(D)._M_cur
      _10 = (long int) prephitmp_250;
      _11 = _8 - _10;
      _12 = _11 /[ex] 4;
      _15 = (long int) __first$_M_last_130;
      _17 = (long int) __first$_M_cur_129;
      _18 = _15 - _17;
      _19 = _18 /[ex] 4;
      # DEBUG __a => &D.47683
      # DEBUG __b => &D.47684
      _30 = MIN_EXPR <_12, __len.111_56>;
      # DEBUG __a => &__len
      # DEBUG __b => NULL
      __clen_59 = MIN_EXPR <_19, _30>;
      # DEBUG __clen => D#1079
      __clen.112_26 = (long unsigned int) __clen_59;
      _27 = __clen.112_26 * 4;
      # DEBUG D#1082 => __first$_M_cur_129 + _27
      # DEBUG __first => __first$_M_cur_129
      # DEBUG __last => D#1082
      # DEBUG __result => D#1081
      # DEBUG __it => D#1082
      # DEBUG __it => D#1082
      # DEBUG __it => __first$_M_cur_129
      # DEBUG __it => __first$_M_cur_129
      # DEBUG __first => __first$_M_cur_129
      # DEBUG __last => D#1082
      # DEBUG __result => D#1081
      # DEBUG __it => D#1081
      # DEBUG __it => D#1081
      # DEBUG __it => D#1082
      # DEBUG __it => D#1082
      # DEBUG __it => __first$_M_cur_129
      # DEBUG __it => __first$_M_cur_129
      # DEBUG __first => NULL
      # DEBUG __last => NULL
      # DEBUG __result => NULL
      # DEBUG __simple => 1
      # DEBUG __first => NULL
      # DEBUG __last => NULL
      # DEBUG __result => NULL
      _57 = (long int) _27;
      _Num_58 = _57 /[ex] 4;
      # DEBUG _Num => _Num_58
      if (_Num_58 != 0)
        goto <bb 6>;
      else
        goto <bb 7>;

    }
    bb_6 (preds = {bb_5 }, succs = {bb_7 })
    {
      <bb 6>:
      # .MEM_66 = VDEF <.MEM_60>
      __builtin_memmove (prephitmp_250, __first$_M_cur_129, _27);
      # VUSE <.MEM_66>
      pretmp_214 = __result_6(D)->_M_cur;
      pretmp_216 = (long int) pretmp_214;

    }
    bb_7 (preds = {bb_5 bb_6 }, succs = {bb_8 bb_20 })
    {
      <bb 7>:
      # .MEM_35 = PHI <.MEM_60(5), .MEM_66(6)>
      # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
      # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
      # DEBUG this => &__first
      # DEBUG __n => D#1079
      _102 = (long int) __first$_M_first_132;
      _103 = _17 - _102;
      _104 = _103 /[ex] 4;
      __offset_105 = __clen_59 + _104;
      # DEBUG __offset => __offset_105
      # DEBUG __size => 4
      _143 = (unsigned long) __offset_105;
      if (_143 <= 127)
        goto <bb 8>;
      else
        goto <bb 20>;

    }
    bb_8 (preds = {bb_7 }, succs = {bb_12 })
    {
      <bb 8>:
      __first$_M_cur_28 = __first$_M_cur_129 + _27;
      goto <bb 12>;

    }
    bb_9 (preds = {bb_20 }, succs = {bb_11 })
    {
      <bb 9>:
      # DEBUG __size => 4
      iftmp.107_110 = __offset_105 >> 7;
      goto <bb 11>;

    }
    bb_10 (preds = {bb_20 }, succs = {bb_11 })
    {
      <bb 10>:
      _112 = ~_143;
      # DEBUG __size => 4
      _113 = _112 >> 7;
      _114 = (long int) _113;
      iftmp.107_115 = ~_114;

    }
    bb_11 (preds = {bb_9 bb_10 }, succs = {bb_24 })
    {
      <bb 11>:
      # iftmp.107_117 = PHI <iftmp.107_110(9), iftmp.107_115(10)>

    }
    bb_24 (preds = {bb_11 }, succs = {bb_12 })
    {
      <bb 24>:
      # DEBUG __node_offset => iftmp.107_117
      __node_offset.109_118 = (long unsigned int) iftmp.107_117;
      _119 = __node_offset.109_118 * 8;
      __first$_M_node_120 = __first$_M_node_23 + _119;
      # DEBUG this => &__first
      # DEBUG __new_node => __first$_M_node_120
      # DEBUG __first$_M_node => __first$_M_node_120
      # VUSE <.MEM_35>
      __first$_M_first_121 = *__first$_M_node_120;
      # DEBUG __first$_M_first => __first$_M_first_121
      # DEBUG __size => 4
      __first$_M_last_122 = __first$_M_first_121 + 512;
      # DEBUG __first$_M_last => __first$_M_last_122
      # DEBUG __size => 4
      _123 = iftmp.107_117 * 128;
      _124 = __offset_105 - _123;
      _125 = (long unsigned int) _124;
      _126 = _125 * 4;
      __first$_M_cur_127 = __first$_M_first_121 + _126;
      # DEBUG __first$_M_cur => __first$_M_cur_127

    }
    bb_12 (preds = {bb_8 bb_24 }, succs = {bb_21 bb_22 })
    {
      <bb 12>:
      # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
      # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
      # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
      # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
      # DEBUG __first$_M_node => __first$_M_node_106
      # DEBUG __first$_M_last => __first$_M_last_1
      # DEBUG __first$_M_first => __first$_M_first_131
      # DEBUG __first$_M_cur => __first$_M_cur_133
      # DEBUG this => __result_6(D)
      # DEBUG __n => D#1079
      # VUSE <.MEM_35>
      _73 = *__result_6(D)._M_first;
      _74 = (long int) _73;
      _75 = prephitmp_217 - _74;
      _76 = _75 /[ex] 4;
      __offset_77 = __clen_59 + _76;
      # DEBUG __offset => __offset_77
      # DEBUG __size => 4
      _144 = (unsigned long) __offset_77;
      if (_144 <= 127)
        goto <bb 21>;
      else
        goto <bb 22>;

    }
    bb_13 (preds = {bb_22 }, succs = {bb_15 })
    {
      <bb 13>:
      # DEBUG __size => 4
      iftmp.117_82 = __offset_77 >> 7;
      goto <bb 15>;

    }
    bb_14 (preds = {bb_22 }, succs = {bb_15 })
    {
      <bb 14>:
      _84 = ~_144;
      # DEBUG __size => 4
      _85 = _84 >> 7;
      _86 = (long int) _85;
      iftmp.117_87 = ~_86;

    }
    bb_15 (preds = {bb_13 bb_14 }, succs = {bb_25 })
    {
      <bb 15>:
      # iftmp.117_89 = PHI <iftmp.117_82(13), iftmp.117_87(14)>

    }
    bb_25 (preds = {bb_15 }, succs = {bb_16 })
    {
      <bb 25>:
      # DEBUG __node_offset => iftmp.117_89
      # VUSE <.MEM_35>
      _88 = *__result_6(D)._M_node;
      __node_offset.119_90 = (long unsigned int) iftmp.117_89;
      _91 = __node_offset.119_90 * 8;
      _92 = _88 + _91;
      # DEBUG this => __result_6(D)
      # DEBUG __new_node => _92
      # .MEM_136 = VDEF <.MEM_35>
      *__result_6(D)._M_node = _92;
      # VUSE <.MEM_136>
      _93 = *_92;
      # .MEM_137 = VDEF <.MEM_136>
      *__result_6(D)._M_first = _93;
      # DEBUG __size => 4
      _94 = _93 + 512;
      # .MEM_138 = VDEF <.MEM_137>
      *__result_6(D)._M_last = _94;
      # DEBUG __size => 4
      _95 = iftmp.117_89 * 128;
      _96 = __offset_77 - _95;
      _97 = (long unsigned int) _96;
      _98 = _97 * 4;
      _99 = _93 + _98;
      # .MEM_139 = VDEF <.MEM_138>
      *__result_6(D)._M_cur = _99;

    }
    bb_16 (preds = {bb_21 bb_25 }, succs = {bb_18 bb_17 })
    {
      <bb 16>:
      # .MEM_128 = PHI <.MEM_135(21), .MEM_139(25)>
      # prephitmp_227 = PHI <_81(21), _99(25)>
      # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
      # prephitmp_230 = PHI <_73(21), _93(25)>
      __len_32 = __len.111_56 - __clen_59;
      # DEBUG __len => __len_32
      if (__len_32 <= 0)
        goto <bb 18>;
      else
        goto <bb 17>;

    }
    bb_17 (preds = {bb_16 }, succs = {bb_5 })
    {
      <bb 17>:
      goto <bb 5>;

    }
    bb_20 (preds = {bb_7 }, succs = {bb_9 bb_10 })
    {
      <bb 20>:
      if (__offset_105 > 0)
        goto <bb 9>;
      else
        goto <bb 10>;

    }
    bb_21 (preds = {bb_12 }, succs = {bb_16 })
    {
      <bb 21>:
      _81 = prephitmp_215 + _27;
      # .MEM_135 = VDEF <.MEM_35>
      *__result_6(D)._M_cur = _81;
      # VUSE <.MEM_135>
      pretmp_228 = MEM[(const struct iterator &)__result_6(D)]._M_last;
      goto <bb 16>;

    }
    bb_22 (preds = {bb_12 }, succs = {bb_13 bb_14 })
    {
      <bb 22>:
      if (__offset_77 > 0)
        goto <bb 13>;
      else
        goto <bb 14>;

    }
  }
}

Pass statistics:
----------------

std::_Deque_iterator<_Tp, _Tp&, _Tp*> std::copy(std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, const _Tp&, const _Tp*>, std::_Deque_iterator<_Tp, _Tp&, _Tp*>) [with _Tp = int] (struct _Deque_iteratorD.42910 __firstD.47473, struct _Deque_iteratorD.42910 __lastD.47474, struct _Deque_iteratorD.42908 & restrict __resultD.47475)
{
  intD.9 * * __first$_M_nodeD.70320;
  intD.9 * const __first$_M_lastD.70319;
  intD.9 * __first$_M_firstD.70318;
  intD.9 * const __first$_M_curD.70317;
  const difference_typeD.44735 __offsetD.70310;
  struct _SelfD.44736 & D.70314;
  const difference_typeD.42938 __offsetD.70303;
  struct _SelfD.42939 & D.70307;
  const ptrdiff_tD.2819 _NumD.60784;
  const difference_typeD.47674 __clenD.47682;
  difference_typeD.47674 __lenD.47675;
  const long intD.12 D.47683;
  const long intD.12 D.47684;
  long intD.12 _8;
  long intD.12 _10;
  long intD.12 _11;
  long intD.12 _15;
  long intD.12 _17;
  long intD.12 _18;
  long intD.12 _21;
  intD.9 * * _22;
  long unsigned intD.14 __clen.112_26;
  long unsigned intD.14 _27;
  long intD.12 _30;
  long intD.12 _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  long intD.12 _41;
  intD.9 * _42;
  long intD.12 _43;
  intD.9 * _44;
  long intD.12 _45;
  long intD.12 _46;
  long intD.12 _47;
  long intD.12 _48;
  long intD.12 _50;
  long intD.12 _52;
  long intD.12 _53;
  long intD.12 _54;
  long intD.12 __len.111_56;
  long intD.12 _57;
  intD.9 * * _65;
  intD.9 * _73;
  long intD.12 _74;
  long intD.12 _75;
  long intD.12 _76;
  intD.9 * _81;
  long intD.12 iftmp.117_82;
  long unsigned intD.14 _84;
  long unsigned intD.14 _85;
  long intD.12 _86;
  long intD.12 iftmp.117_87;
  intD.9 * * _88;
  long intD.12 iftmp.117_89;
  long unsigned intD.14 __node_offset.119_90;
  long unsigned intD.14 _91;
  intD.9 * * _92;
  intD.9 * _93;
  intD.9 * _94;
  long intD.12 _95;
  long intD.12 _96;
  long unsigned intD.14 _97;
  long unsigned intD.14 _98;
  intD.9 * _99;
  long intD.12 _102;
  long intD.12 _103;
  long intD.12 _104;
  long intD.12 iftmp.107_110;
  long unsigned intD.14 _112;
  long unsigned intD.14 _113;
  long intD.12 _114;
  long intD.12 iftmp.107_115;
  long intD.12 iftmp.107_117;
  long unsigned intD.14 __node_offset.109_118;
  long unsigned intD.14 _119;
  long intD.12 _123;
  long intD.12 _124;
  long unsigned intD.14 _125;
  long unsigned intD.14 _126;
  unsigned long _143;
  unsigned long _144;
  intD.9 * pretmp_214;
  intD.9 * prephitmp_215;
  long intD.12 pretmp_216;
  long intD.12 prephitmp_217;
  intD.9 * const prephitmp_227;
  intD.9 * const pretmp_228;
  intD.9 * const prephitmp_229;
  intD.9 * const prephitmp_230;
  intD.9 * const prephitmp_238;
  intD.9 * const prephitmp_239;
  intD.9 * const prephitmp_240;
  intD.9 * const pretmp_241;
  intD.9 * const prephitmp_242;
  intD.9 * const pretmp_243;
  intD.9 * const prephitmp_244;
  intD.9 * const pretmp_245;
  intD.9 * const prephitmp_246;
  intD.9 * pretmp_247;
  intD.9 * prephitmp_248;
  intD.9 * pretmp_249;
  intD.9 * prephitmp_250;

;;   basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __first$_M_cur_78 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47473];
  # DEBUG __first$_M_curD.70317 => __first$_M_cur_78
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __first$_M_first_146 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47473 + 8B];
  # DEBUG __first$_M_firstD.70318 => __first$_M_first_146
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __first$_M_last_145 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47473 + 16B];
  # DEBUG __first$_M_lastD.70319 => __first$_M_last_145
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  __first$_M_node_147 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47473 + 24B];
  # DEBUG __first$_M_nodeD.70320 => __first$_M_node_147
  # DEBUG __xD.60765 => &__lastD.47474
  # DEBUG __yD.60766 => &__firstD.47473
  # DEBUG __sizeD.60431 => 4
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  _22 = __lastD.47474._M_nodeD.44740;
  _21 = (long intD.12) _22;
  _37 = (long intD.12) __first$_M_node_147;
  _38 = _21 - _37;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _39 = _38 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _40 = _39 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _41 = _40 * 128;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  _42 = __lastD.47474._M_curD.44737;
  _43 = (long intD.12) _42;
  # VUSE <.MEM_2(D)>
  # PT = nonlocal 
  _44 = __lastD.47474._M_firstD.44738;
  _45 = (long intD.12) _44;
  _46 = _43 - _45;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _47 = _46 /[ex] 4;
  _48 = _41 + _47;
  _50 = (long intD.12) __first$_M_last_145;
  _52 = (long intD.12) __first$_M_cur_78;
  _53 = _50 - _52;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _54 = _53 /[ex] 4;
  __len_55 = _48 + _54;
  # DEBUG __lenD.47675 => __len_55
  if (__len_55 <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;    prev block 2, next block 4, flags: (NEW)
;;    pred:       2 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_241 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_curD.42940;
  # VUSE <.MEM_2(D)>
  pretmp_243 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_firstD.42941;
  # VUSE <.MEM_2(D)>
  pretmp_245 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_lastD.42942;
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 3, next block 5, flags: (NEW)
;;    pred:       2 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2(D)>
  pretmp_247 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_lastD.42942;
  # VUSE <.MEM_2(D)>
  pretmp_249 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_curD.42940;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 4, next block 6, flags: (NEW)
;;    pred:       4 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_60 = PHI <.MEM_2(D)(4), .MEM_128(17)>
  # __len.111_56 = PHI <__len_55(4), __len_32(17)>
  # PT = nonlocal escaped 
  # __first$_M_cur_129 = PHI <__first$_M_cur_78(4), __first$_M_cur_133(17)>
  # PT = nonlocal escaped 
  # __first$_M_first_132 = PHI <__first$_M_first_146(4), __first$_M_first_131(17)>
  # PT = nonlocal escaped 
  # __first$_M_last_130 = PHI <__first$_M_last_145(4), __first$_M_last_1(17)>
  # PT = nonlocal 
  # __first$_M_node_23 = PHI <__first$_M_node_147(4), __first$_M_node_106(17)>
  # PT = nonlocal escaped 
  # prephitmp_248 = PHI <pretmp_247(4), prephitmp_229(17)>
  # PT = nonlocal escaped 
  # prephitmp_250 = PHI <pretmp_249(4), prephitmp_227(17)>
  # DEBUG __first$_M_nodeD.70320 => __first$_M_node_23
  # DEBUG __first$_M_lastD.70319 => __first$_M_last_130
  # DEBUG __first$_M_firstD.70318 => __first$_M_first_132
  # DEBUG __first$_M_curD.70317 => __first$_M_cur_129
  _8 = (long intD.12) prephitmp_248;
  # DEBUG D#1081ptD.0 => MEM[(struct _Deque_iteratorD.42908 &)__result_6(D) clique 1 base 1]._M_curD.42940
  _10 = (long intD.12) prephitmp_250;
  _11 = _8 - _10;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _12 = _11 /[ex] 4;
  _15 = (long intD.12) __first$_M_last_130;
  _17 = (long intD.12) __first$_M_cur_129;
  _18 = _15 - _17;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _19 = _18 /[ex] 4;
  # DEBUG __aD.60789 => &D.47683
  # DEBUG __bD.60790 => &D.47684
  _30 = MIN_EXPR <_12, __len.111_56>;
  # DEBUG __aD.60786 => &__lenD.47675
  # DEBUG __bD.60787 => NULL
  # RANGE [-2305843009213693952, 2305843009213693951]
  __clen_59 = MIN_EXPR <_19, _30>;
  # DEBUG __clenD.47682 => D#1079ptD.0
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __clen.112_26 = (long unsigned intD.14) __clen_59;
  # RANGE [0, 18446744073709551612] NONZERO 18446744073709551612
  _27 = __clen.112_26 * 4;
  # DEBUG D#1082ptD.0 => __first$_M_cur_129 + _27
  # DEBUG __firstD.60768 => __first$_M_cur_129
  # DEBUG __lastD.60769 => D#1082ptD.0
  # DEBUG __resultD.60770 => D#1081ptD.0
  # DEBUG __itD.54938 => D#1082ptD.0
  # DEBUG __itD.54242 => D#1082ptD.0
  # DEBUG __itD.54936 => __first$_M_cur_129
  # DEBUG __itD.54242 => __first$_M_cur_129
  # DEBUG __firstD.60773 => __first$_M_cur_129
  # DEBUG __lastD.60772 => D#1082ptD.0
  # DEBUG __resultD.60771 => D#1081ptD.0
  # DEBUG __itD.54918 => D#1081ptD.0
  # DEBUG __itD.54245 => D#1081ptD.0
  # DEBUG __itD.54916 => D#1082ptD.0
  # DEBUG __itD.54245 => D#1082ptD.0
  # DEBUG __itD.54914 => __first$_M_cur_129
  # DEBUG __itD.54245 => __first$_M_cur_129
  # DEBUG __firstD.60776 => NULL
  # DEBUG __lastD.60775 => NULL
  # DEBUG __resultD.60774 => NULL
  # DEBUG __simpleD.60780 => 1
  # DEBUG __firstD.60783 => NULL
  # DEBUG __lastD.60782 => NULL
  # DEBUG __resultD.60781 => NULL
  # RANGE ~[-3, -1] NONZERO 18446744073709551612
  _57 = (long intD.12) _27;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_58 = _57 /[ex] 4;
  # DEBUG _NumD.60784 => _Num_58
  if (_Num_58 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 1, count 0, freq 2639, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_66 = VDEF <.MEM_60>
  # USE = nonlocal 
  # CLB = nonlocal 
  memmoveD.995 (prephitmp_250, __first$_M_cur_129, _27);
  # VUSE <.MEM_66>
  pretmp_214 = __result_6(D)->_M_curD.42940;
  pretmp_216 = (long intD.12) pretmp_214;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       5 [71.0%]  (FALSE_VALUE,EXECUTABLE)
;;                6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_35 = PHI <.MEM_60(5), .MEM_66(6)>
  # PT = nonlocal escaped 
  # prephitmp_215 = PHI <prephitmp_250(5), pretmp_214(6)>
  # prephitmp_217 = PHI <_10(5), pretmp_216(6)>
  # DEBUG thisD.70308 => &__firstD.47473
  # DEBUG __nD.70309 => D#1079ptD.0
  _102 = (long intD.12) __first$_M_first_132;
  _103 = _17 - _102;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _104 = _103 /[ex] 4;
  # RANGE [-4611686018427387904, 4611686018427387902]
  __offset_105 = __clen_59 + _104;
  # DEBUG __offsetD.70310 => __offset_105
  # DEBUG __sizeD.60431 => 4
  _143 = (unsigned long) __offset_105;
  if (_143 <= 127)
    goto <bb 8>;
  else
    goto <bb 20>;
;;    succ:       8 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  __first$_M_cur_28 = __first$_M_cur_129 + _27;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 4052, maybe hot
;;   Invalid sum of incoming frequencies 4218, should be 4052
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       20 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 36028797018963967] NONZERO 36028797018963967
  iftmp.107_110 = __offset_105 >> 7;
  goto <bb 11>;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 1499, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       20 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[4611686018427387904, 18446744073709551614]
  _112 = ~_143;
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _113 = _112 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _114 = (long intD.12) _113;
  # RANGE [-144115188075855872, -1]
  iftmp.107_115 = ~_114;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 10, next block 24, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 36028797018963967]
  # iftmp.107_117 = PHI <iftmp.107_110(9), iftmp.107_115(10)>
;;    succ:       24 [100.0%]  (FALLTHRU)

;;   basic block 24, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 11, next block 12, flags: (NEW)
;;    pred:       11 [100.0%]  (FALLTHRU)
  # DEBUG __node_offsetD.70311 => iftmp.107_117
  # RANGE ~[36028797018963968, 18302628885633695743]
  __node_offset.109_118 = (long unsigned intD.14) iftmp.107_117;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _119 = __node_offset.109_118 * 8;
  # PT = nonlocal 
  __first$_M_node_120 = __first$_M_node_23 + _119;
  # DEBUG thisD.70313 => &__firstD.47473
  # DEBUG __new_nodeD.70312 => __first$_M_node_120
  # DEBUG __first$_M_nodeD.70320 => __first$_M_node_120
  # VUSE <.MEM_35>
  # PT = nonlocal escaped 
  __first$_M_first_121 = *__first$_M_node_120;
  # DEBUG __first$_M_firstD.70318 => __first$_M_first_121
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_122 = __first$_M_first_121 + 512;
  # DEBUG __first$_M_lastD.70319 => __first$_M_last_122
  # DEBUG __sizeD.60431 => 4
  # RANGE [-9223372036854775808, 4611686018427387776] NONZERO 18446744073709551488
  _123 = iftmp.107_117 * 128;
  # RANGE [-9223372036854775680, 9223372036854775807]
  _124 = __offset_105 - _123;
  # RANGE [0, 18446744073709551615]
  _125 = (long unsigned intD.14) _124;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _126 = _125 * 4;
  # PT = nonlocal escaped 
  __first$_M_cur_127 = __first$_M_first_121 + _126;
  # DEBUG __first$_M_curD.70317 => __first$_M_cur_127
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 1, count 0, freq 9100, maybe hot
;;   Invalid sum of incoming frequencies 10101, should be 9100
;;    prev block 24, next block 13, flags: (NEW, REACHABLE)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first$_M_cur_133 = PHI <__first$_M_cur_28(8), __first$_M_cur_127(24)>
  # PT = nonlocal escaped 
  # __first$_M_first_131 = PHI <__first$_M_first_132(8), __first$_M_first_121(24)>
  # PT = nonlocal escaped 
  # __first$_M_last_1 = PHI <__first$_M_last_130(8), __first$_M_last_122(24)>
  # PT = nonlocal 
  # __first$_M_node_106 = PHI <__first$_M_node_23(8), __first$_M_node_120(24)>
  # DEBUG __first$_M_nodeD.70320 => __first$_M_node_106
  # DEBUG __first$_M_lastD.70319 => __first$_M_last_1
  # DEBUG __first$_M_firstD.70318 => __first$_M_first_131
  # DEBUG __first$_M_curD.70317 => __first$_M_cur_133
  # DEBUG thisD.70301 => __result_6(D)
  # DEBUG __nD.70302 => D#1079ptD.0
  # VUSE <.MEM_35>
  # PT = nonlocal escaped 
  _73 = MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_firstD.42941;
  _74 = (long intD.12) _73;
  _75 = prephitmp_217 - _74;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _76 = _75 /[ex] 4;
  # RANGE [-4611686018427387904, 4611686018427387902]
  __offset_77 = __clen_59 + _76;
  # DEBUG __offsetD.70303 => __offset_77
  # DEBUG __sizeD.54289 => 4
  _144 = (unsigned long) __offset_77;
  if (_144 <= 127)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 4052, maybe hot
;;   Invalid sum of incoming frequencies 4218, should be 4052
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       22 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 36028797018963967] NONZERO 36028797018963967
  iftmp.117_82 = __offset_77 >> 7;
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 1, count 0, freq 1499, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       22 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[4611686018427387904, 18446744073709551614]
  _84 = ~_144;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _85 = _84 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _86 = (long intD.12) _85;
  # RANGE [-144115188075855872, -1]
  iftmp.117_87 = ~_86;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 14, next block 25, flags: (NEW, REACHABLE)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 36028797018963967]
  # iftmp.117_89 = PHI <iftmp.117_82(13), iftmp.117_87(14)>
;;    succ:       25 [100.0%]  (FALLTHRU)

;;   basic block 25, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 15, next block 16, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU)
  # DEBUG __node_offsetD.70304 => iftmp.117_89
  # VUSE <.MEM_35>
  # PT = nonlocal escaped 
  _88 = MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_nodeD.42943;
  # RANGE ~[36028797018963968, 18302628885633695743]
  __node_offset.119_90 = (long unsigned intD.14) iftmp.117_89;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _91 = __node_offset.119_90 * 8;
  # PT = nonlocal escaped 
  _92 = _88 + _91;
  # DEBUG thisD.70306 => __result_6(D)
  # DEBUG __new_nodeD.70305 => _92
  # .MEM_136 = VDEF <.MEM_35>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_nodeD.42943 = _92;
  # VUSE <.MEM_136>
  # PT = nonlocal escaped 
  _93 = *_92;
  # .MEM_137 = VDEF <.MEM_136>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_firstD.42941 = _93;
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _94 = _93 + 512;
  # .MEM_138 = VDEF <.MEM_137>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_lastD.42942 = _94;
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 4611686018427387776] NONZERO 18446744073709551488
  _95 = iftmp.117_89 * 128;
  # RANGE [-9223372036854775680, 9223372036854775807]
  _96 = __offset_77 - _95;
  # RANGE [0, 18446744073709551615]
  _97 = (long unsigned intD.14) _96;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _98 = _97 * 4;
  # PT = nonlocal escaped 
  _99 = _93 + _98;
  # .MEM_139 = VDEF <.MEM_138>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_curD.42940 = _99;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 25, next block 17, flags: (NEW, REACHABLE)
;;    pred:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_128 = PHI <.MEM_135(21), .MEM_139(25)>
  # prephitmp_227 = PHI <_81(21), _99(25)>
  # prephitmp_229 = PHI <pretmp_228(21), _94(25)>
  # prephitmp_230 = PHI <_73(21), _93(25)>
  # RANGE [-2305843009213693950, 9223372036854775807]
  __len_32 = __len.111_56 - __clen_59;
  # DEBUG __lenD.47675 => __len_32
  if (__len_32 <= 0)
    goto <bb 18>;
  else
    goto <bb 17>;
;;    succ:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       16 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 17, next block 23, flags: (NEW)
;;    pred:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # prephitmp_240 = PHI <prephitmp_227(16)>
  # prephitmp_239 = PHI <prephitmp_229(16)>
  # prephitmp_238 = PHI <prephitmp_230(16)>
;;    succ:       23 [100.0%]  (FALLTHRU)

;;   basic block 23, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 18, next block 19, flags: (NEW)
;;    pred:       18 [100.0%]  (FALLTHRU)
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 23, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_61 = PHI <.MEM_128(23), .MEM_2(D)(3)>
  # PT = nonlocal escaped 
  # prephitmp_242 = PHI <prephitmp_240(23), pretmp_241(3)>
  # PT = nonlocal escaped 
  # prephitmp_244 = PHI <prephitmp_238(23), pretmp_243(3)>
  # PT = nonlocal escaped 
  # prephitmp_246 = PHI <prephitmp_239(23), pretmp_245(3)>
;;    succ:       26 [100.0%]  (FALLTHRU)

;;   basic block 26, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 19, next block 20, flags: (NEW)
;;    pred:       19 [100.0%]  (FALLTHRU)
  # DEBUG thisD.60792 => _34(D)
  # DEBUG __xD.60793 => __result_6(D)
  # .MEM_67 = VDEF <.MEM_61>
  _34(D)->_M_curD.42940 = prephitmp_242;
  # .MEM_68 = VDEF <.MEM_67>
  _34(D)->_M_firstD.42941 = prephitmp_244;
  # .MEM_69 = VDEF <.MEM_68>
  _34(D)->_M_lastD.42942 = prephitmp_246;
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _65 = MEM[(const struct iteratorD.42928 &)__result_6(D) clique 1 base 1]._M_nodeD.42943;
  # .MEM_70 = VDEF <.MEM_69>
  _34(D)->_M_nodeD.42943 = _65;
  # DEBUG D#1080ptD.0 => {CLOBBER}
  # DEBUG __lenD.47675 => D#1080ptD.0
  # VUSE <.MEM_70>
  return _34(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 20, loop depth 1, count 0, freq 5778, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 5778
;;    prev block 26, next block 21, flags: (NEW, REACHABLE)
;;    pred:       7 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_105 > 0)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 3549, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 3549
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  _81 = prephitmp_215 + _27;
  # .MEM_135 = VDEF <.MEM_35>
  MEM[(struct _Deque_iteratorD.42908 *)__result_6(D) clique 2 base 1]._M_curD.42940 = _81;
  # VUSE <.MEM_135>
  pretmp_228 = MEM[(const struct iteratorD.42928 &)__result_6(D)]._M_lastD.42942;
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 5778, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 5778
;;    prev block 21, next block 1, flags: (NEW, REACHABLE)
;;    pred:       12 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_77 > 0)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [27.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIiSaIiEE24_M_new_elements_at_frontEm, funcdef_no=2895, decl_uid=43530, cgraph_uid=1362, symbol_order=1363)


Pass statistics:
----------------

void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct dequeD.40449 * const thisD.43531, size_typeD.43117 __new_elemsD.43532)
Eh tree:
   3 must_not_throw
   2 cleanup land:{2,<L10>}
   1 try land:{1,<L5>} catch:{}
{
  size_typeD.43117 __jD.48053;
  size_typeD.43117 __iD.48052;
  const size_typeD.43117 __new_nodesD.48051;
  long intD.12 _7;
  intD.9 * * _8;
  long unsigned intD.14 _10;
  long intD.12 _12;
  long unsigned intD.14 _13;
  intD.9 * * _14;
  intD.9 * _16;
  intD.9 * * _17;
  long unsigned intD.14 _18;
  sizetype _19;
  intD.9 * * _20;
  voidD.45 * _23;
  intD.9 * * _25;
  long unsigned intD.14 _26;
  sizetype _27;
  intD.9 * * _28;
  intD.9 * _29;
  long intD.12 _35;
  long intD.12 _36;
  long intD.12 _37;
  long intD.12 _38;
  intD.9 * _39;
  long intD.12 _40;
  intD.9 * _41;
  long intD.12 _42;
  long intD.12 _43;
  long intD.12 _44;
  long intD.12 _45;
  intD.9 * _46;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 _49;
  long intD.12 _50;
  long intD.12 _51;
  difference_typeD.42938 _52;
  size_typeD.43117 _53;
  intD.9 * * _54;
  long intD.12 _55;
  long intD.12 _56;
  long intD.12 _57;
  long unsigned intD.14 _58;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#638ptD.0 => this_6(D)
  # DEBUG thisD.61131 => D#638ptD.0
  # DEBUG D#637ptD.0 => D#638ptD.0
  # DEBUG D#636ptD.0 => &D#637ptD.0->D.43590
  # DEBUG thisD.61093 => D#636ptD.0
  # DEBUG __aD.61085 => D#399ptD.0
  # DEBUG D#398ptD.0 => D#399ptD.0
  # DEBUG D#381ptD.0 => D#398ptD.0
  # DEBUG thisD.56919 => D#381ptD.0
  # DEBUG thisD.61127 => this_6(D)
  # DEBUG D#174ptD.0 => &MEM[(const struct dequeD.40449 *)this_6(D)].D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &MEM[(const struct dequeD.40449 *)this_6(D)].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61129 => D#175ptD.0
  # DEBUG __yD.61128 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _14 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_nodeD.42943;
  _12 = (long intD.12) _14;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _8 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_nodeD.42943;
  _7 = (long intD.12) _8;
  _35 = _12 - _7;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _36 = _35 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _37 = _36 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _38 = _37 * 128;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _39 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_curD.42940;
  _40 = (long intD.12) _39;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _41 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_firstD.42941;
  _42 = (long intD.12) _41;
  _43 = _40 - _42;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _44 = _43 /[ex] 4;
  _45 = _38 + _44;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _46 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_lastD.42942;
  _47 = (long intD.12) _46;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _48 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_curD.42940;
  _49 = (long intD.12) _48;
  _50 = _47 - _49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _51 = _50 /[ex] 4;
  _52 = _45 + _51;
  # RANGE [0, 18446744073709551615]
  _53 = (size_typeD.43117) _52;
  # RANGE [0, 18446744073709551615]
  _10 = 4611686018427387903 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_34 = VDEF <.MEM_5(D)>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("deque::_M_new_elements_at_front");
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54286 => 4
  # RANGE [0, 18446744073709551615]
  _13 = __new_elems_11(D) + 127;
  # DEBUG __sizeD.54286 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  __new_nodes_15 = _13 >> 7;
  # DEBUG __new_nodesD.48051 => __new_nodes_15
  # DEBUG thisD.61133 => this_6(D)
  # DEBUG __nodes_to_addD.61134 => __new_nodes_15
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _54 = this_6(D)->D.43590._M_implD.43041._M_mapD.43043;
  _55 = (long intD.12) _54;
  _56 = _7 - _55;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _57 = _56 /[ex] 8;
  # RANGE ~[1152921504606846976, 17293822569102704639]
  _58 = (long unsigned intD.14) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 131, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_59 = VDEF <.MEM_5(D)>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmbD.43542 (this_6(D), __new_nodes_15, 1);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 451, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_59(5), .MEM_5(D)(4)>
  # DEBUG __iD.48052 => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_81 = PHI <.MEM_30(6), .MEM_21(10)>
  # VUSE <.MEM_81>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 8, loop depth 0, count 0, freq 431, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 288230376151711743
  # __i_67 = PHI <1(8), __i_22(11)>
  # .MEM_66 = PHI <.MEM_30(8), .MEM_21(11)>
  # DEBUG __iD.48052 => __i_67
  # VUSE <.MEM_66>
  # PT = nonlocal escaped 
  _17 = this_6(D)->D.43590._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # RANGE [8, 1152921504606846968] NONZERO 1152921504606846968
  _18 = __i_67 * 8;
  # RANGE [17293822569102704648, 18446744073709551608] NONZERO 18446744073709551608
  _19 = -_18;
  # PT = nonlocal escaped 
  _20 = _17 + _19;
  # DEBUG D#642ptD.0 => &this_6(D)->D.43590
  # DEBUG D#392ptD.0 => D#642ptD.0
  # DEBUG thisD.61137 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG __sizeD.56854 => 4
  # DEBUG D#390ptD.0 => &D#391ptD.0->_M_implD.43041
  # DEBUG D#386ptD.0 => D#390ptD.0
  # DEBUG __nD.61140 => NULL
  # DEBUG __aD.61139 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.61143 => NULL
  # DEBUG thisD.61141 => D#383ptD.0
  # DEBUG D.61142 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  [LP 1] # .MEM_60 = VDEF <.MEM_66>
  # PT = { D.70334 } (escaped heap)
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  _16 = _ZnwmD.2764 (512);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_21 = VDEF <.MEM_60>
  *_20 = _16;
  # RANGE [2, 144115188075855872] NONZERO 288230376151711743
  __i_22 = __i_67 + 1;
  # DEBUG __iD.48052 => __i_22
  # DEBUG __iD.48052 => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;
;;    succ:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       9 (EH,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 288230376151711743
  # __i_76 = PHI <__i_67(9)>
<L5>: [LP 1]
  # VUSE <.MEM_60>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _23 = __builtin_eh_pointerD.2738 (1);
  # .MEM_24 = VDEF <.MEM_60>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  __cxa_begin_catchD.13514 (_23);
  # DEBUG __jD.48053 => 1
  # DEBUG __jD.48053 => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_24(12), .MEM_70(16)>
  [LP 2] # .MEM_32 = VDEF <.MEM_77>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       18 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 144115188075855871
  # __j_68 = PHI <1(14), __j_31(17)>
  # .MEM_69 = PHI <.MEM_24(14), .MEM_61(17)>
  # DEBUG __jD.48053 => __j_68
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _25 = this_6(D)->D.43590._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # RANGE [8, 1152921504606846960] NONZERO 1152921504606846968
  _26 = __j_68 * 8;
  # RANGE [17293822569102704656, 18446744073709551608] NONZERO 18446744073709551608
  _27 = -_26;
  # PT = nonlocal escaped 
  _28 = _25 + _27;
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _29 = *_28;
  # DEBUG D#641ptD.0 => &this_6(D)->D.43590
  # DEBUG thisD.61145 => D#641ptD.0
  # DEBUG __pD.61146 => _29
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#641ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.61150 => _29
  # DEBUG __aD.61148 => D#144ptD.0
  # DEBUG __nD.61149 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.61153 => _29
  # DEBUG thisD.61151 => D#140ptD.0
  # DEBUG D.61152 => D#141ptD.0
  # .MEM_61 = VDEF <.MEM_69>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  _ZdlPvD.2766 (_29);
  # RANGE [2, 144115188075855871] NONZERO 144115188075855871
  __j_31 = __j_68 + 1;
  # DEBUG __jD.48053 => __j_31
  # DEBUG __jD.48053 => __j_31
  if (__j_31 >= __i_76)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_70 = PHI <.MEM_61(15)>
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 1, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L10>: [LP 2]
  [MNT 3] # .MEM_33 = VDEF <.MEM_32>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  __cxa_end_catchD.13513 ();
  resx 2
;;    succ:      

}


Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 48]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 16]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 48]
	Access function 0: 0
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 48]
	Access function 0: 64
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 16]
	Access function 0: 128
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 16]
	Access function 0: 0
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for this_6(D)->D.43590._M_impl._M_map
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for *_20
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_20
Creating dr for *_20
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_20
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for *_28
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_28
Creating dr for *_28
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_28
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for *_28
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_28
Creating dr for *_28
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_28
Analyzing # of iterations of loop 2
  exit condition [2, + , 1] < __i_76
  bounds on difference of bases: 0 ... 18446744073709551612
  result:
    # of iterations __i_76 + 18446744073709551614, bounded by 0x0fffffffffffffffc
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for *_28
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_28
Creating dr for *_28
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_28
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_start._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for *_28
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_28
Creating dr for *_28
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_28
Analyzing # of iterations of loop 2
  exit condition [2, + , 1] < __i_76
  bounds on difference of bases: 0 ... 18446744073709551612
  result:
    # of iterations __i_76 + 18446744073709551614, bounded by 0x0fffffffffffffffc

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:21, LOOPS:2, CONDITIONS:7, STMTS:124)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#638 => this_6(D)
    # DEBUG this => D#638
    # DEBUG D#637 => D#638
    # DEBUG D#636 => &D#637->D.43590
    # DEBUG this => D#636
    # DEBUG __a => D#399
    # DEBUG D#398 => D#399
    # DEBUG D#381 => D#398
    # DEBUG this => D#381
    # DEBUG this => this_6(D)
    # DEBUG D#174 => &MEM[(const struct deque *)this_6(D)].D.43590._M_impl._M_start
    # DEBUG D#175 => &MEM[(const struct deque *)this_6(D)].D.43590._M_impl._M_finish
    # DEBUG __x => D#175
    # DEBUG __y => D#174
    # DEBUG __size => 4
    # VUSE <.MEM_5(D)>
    _14 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
    _12 = (long int) _14;
    # VUSE <.MEM_5(D)>
    _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
    _7 = (long int) _8;
    _35 = _12 - _7;
    _36 = _35 /[ex] 8;
    _37 = _36 + -1;
    _38 = _37 * 128;
    # VUSE <.MEM_5(D)>
    _39 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
    _40 = (long int) _39;
    # VUSE <.MEM_5(D)>
    _41 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
    _42 = (long int) _41;
    _43 = _40 - _42;
    _44 = _43 /[ex] 4;
    _45 = _38 + _44;
    # VUSE <.MEM_5(D)>
    _46 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
    _47 = (long int) _46;
    # VUSE <.MEM_5(D)>
    _48 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
    _49 = (long int) _48;
    _50 = _47 - _49;
    _51 = _50 /[ex] 4;
    _52 = _45 + _51;
    _53 = (size_type) _52;
    _10 = 4611686018427387903 - _53;
    if (_10 < __new_elems_11(D))
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {})
  {
    <bb 3>:
    # .MEM_34 = VDEF <.MEM_5(D)>
    std::__throw_length_error ("deque::_M_new_elements_at_front");

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # DEBUG __size => 4
    _13 = __new_elems_11(D) + 127;
    # DEBUG __size => 4
    __new_nodes_15 = _13 >> 7;
    # DEBUG __new_nodes => __new_nodes_15
    # DEBUG this => this_6(D)
    # DEBUG __nodes_to_add => __new_nodes_15
    # VUSE <.MEM_5(D)>
    _54 = this_6(D)->D.43590._M_impl._M_map;
    _55 = (long int) _54;
    _56 = _7 - _55;
    _57 = _56 /[ex] 8;
    _58 = (long unsigned int) _57;
    if (__new_nodes_15 > _58)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:
    # .MEM_59 = VDEF <.MEM_5(D)>
    std::deque<int, std::allocator<int> >::_M_reallocate_map (this_6(D), __new_nodes_15, 1);

  }
  bb_6 (preds = {bb_5 bb_4 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # .MEM_30 = PHI <.MEM_59(5), .MEM_5(D)(4)>
    # DEBUG __i => 1
    if (__new_nodes_15 == 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 bb_10 }, succs = {bb_20 })
  {
    <bb 7>:
    # .MEM_81 = PHI <.MEM_30(6), .MEM_21(10)>

  }
  bb_20 (preds = {bb_7 }, succs = {bb_1 })
  {
    <bb 20>:
    # VUSE <.MEM_81>
    return;

  }
  bb_8 (preds = {bb_6 }, succs = {bb_9 })
  {
    <bb 8>:

  }
  bb_12 (preds = {bb_9 }, succs = {bb_13 bb_14 })
  {
    # __i_76 = PHI <__i_67(9)>
  <L5>:
    # VUSE <.MEM_60>
    _23 = __builtin_eh_pointer (1);
    # .MEM_24 = VDEF <.MEM_60>
    __cxa_begin_catch (_23);
    # DEBUG __j => 1
    # DEBUG __j => 1
    if (__i_76 <= 1)
      goto <bb 13>;
    else
      goto <bb 14>;

  }
  bb_13 (preds = {bb_12 bb_19 }, succs = {bb_18 })
  {
    <bb 13>:
    # .MEM_77 = PHI <.MEM_24(12), .MEM_70(19)>
    # .MEM_32 = VDEF <.MEM_77>
    __cxa_rethrow ();

  }
  bb_14 (preds = {bb_12 }, succs = {bb_15 })
  {
    <bb 14>:

  }
  bb_16 (preds = {bb_15 }, succs = {bb_19 })
  {
    <bb 16>:
    # .MEM_70 = PHI <.MEM_61(15)>

  }
  bb_19 (preds = {bb_16 }, succs = {bb_13 })
  {
    <bb 19>:
    goto <bb 13>;

  }
  bb_18 (preds = {bb_13 }, succs = {})
  {
  <L10>:
    # .MEM_33 = VDEF <.MEM_32>
    __cxa_end_catch ();
    resx 2

  }
  loop_2 (header = 15, latch = 17, niter = , upper_bound = 0x0fffffffffffffffc)
  {
    bb_15 (preds = {bb_14 bb_17 }, succs = {bb_16 bb_17 })
    {
      <bb 15>:
      # __j_68 = PHI <1(14), __j_31(17)>
      # .MEM_69 = PHI <.MEM_24(14), .MEM_61(17)>
      # DEBUG __j => __j_68
      # VUSE <.MEM_69>
      _25 = this_6(D)->D.43590._M_impl._M_start._M_node;
      _26 = __j_68 * 8;
      _27 = -_26;
      _28 = _25 + _27;
      # VUSE <.MEM_69>
      _29 = *_28;
      # DEBUG D#641 => &this_6(D)->D.43590
      # DEBUG this => D#641
      # DEBUG __p => _29
      # DEBUG __size => 4
      # DEBUG D#167 => &D#641->_M_impl
      # DEBUG D#144 => D#167
      # DEBUG __p => _29
      # DEBUG __a => D#144
      # DEBUG __n => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG D#140 => D#142
      # DEBUG D#141 => D#143
      # DEBUG __p => _29
      # DEBUG this => D#140
      # DEBUG D.61152 => D#141
      # .MEM_61 = VDEF <.MEM_69>
      operator delete (_29);
      __j_31 = __j_68 + 1;
      # DEBUG __j => __j_31
      # DEBUG __j => __j_31
      if (__j_31 >= __i_76)
        goto <bb 16>;
      else
        goto <bb 17>;

    }
    bb_17 (preds = {bb_15 }, succs = {bb_15 })
    {
      <bb 17>:
      goto <bb 15>;

    }
  }
  loop_1 (header = 9, latch = 11, niter = )
  {
    bb_9 (preds = {bb_8 bb_11 }, succs = {bb_10 bb_12 })
    {
      <bb 9>:
      # __i_67 = PHI <1(8), __i_22(11)>
      # .MEM_66 = PHI <.MEM_30(8), .MEM_21(11)>
      # DEBUG __i => __i_67
      # VUSE <.MEM_66>
      _17 = this_6(D)->D.43590._M_impl._M_start._M_node;
      _18 = __i_67 * 8;
      _19 = -_18;
      _20 = _17 + _19;
      # DEBUG D#642 => &this_6(D)->D.43590
      # DEBUG D#392 => D#642
      # DEBUG this => D#392
      # DEBUG D#391 => D#392
      # DEBUG __size => 4
      # DEBUG D#390 => &D#391->_M_impl
      # DEBUG D#386 => D#390
      # DEBUG __n => NULL
      # DEBUG __a => D#386
      # DEBUG D#385 => D#386
      # DEBUG D#383 => D#385
      # DEBUG D#384 => 0B
      # DEBUG __n => NULL
      # DEBUG this => D#383
      # DEBUG D.61142 => D#384
      # DEBUG D#382 => D#383
      # DEBUG D#381 => D#382
      # DEBUG this => D#381
      # .MEM_60 = VDEF <.MEM_66>
      _16 = operator new (512);

    }
    bb_10 (preds = {bb_9 }, succs = {bb_7 bb_11 })
    {
      <bb 10>:
      # .MEM_21 = VDEF <.MEM_60>
      *_20 = _16;
      __i_22 = __i_67 + 1;
      # DEBUG __i => __i_22
      # DEBUG __i => __i_22
      if (__new_nodes_15 < __i_22)
        goto <bb 7>;
      else
        goto <bb 11>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_9 })
    {
      <bb 11>:
      goto <bb 9>;

    }
  }
}

Pass statistics:
----------------

void std::deque<_Tp, _Alloc>::_M_new_elements_at_front(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct dequeD.40449 * const thisD.43531, size_typeD.43117 __new_elemsD.43532)
Eh tree:
   3 must_not_throw
   2 cleanup land:{2,<L10>}
   1 try land:{1,<L5>} catch:{}
{
  size_typeD.43117 __jD.48053;
  size_typeD.43117 __iD.48052;
  const size_typeD.43117 __new_nodesD.48051;
  long intD.12 _7;
  intD.9 * * _8;
  long unsigned intD.14 _10;
  long intD.12 _12;
  long unsigned intD.14 _13;
  intD.9 * * _14;
  intD.9 * _16;
  intD.9 * * _17;
  long unsigned intD.14 _18;
  sizetype _19;
  intD.9 * * _20;
  voidD.45 * _23;
  intD.9 * * _25;
  long unsigned intD.14 _26;
  sizetype _27;
  intD.9 * * _28;
  intD.9 * _29;
  long intD.12 _35;
  long intD.12 _36;
  long intD.12 _37;
  long intD.12 _38;
  intD.9 * _39;
  long intD.12 _40;
  intD.9 * _41;
  long intD.12 _42;
  long intD.12 _43;
  long intD.12 _44;
  long intD.12 _45;
  intD.9 * _46;
  long intD.12 _47;
  intD.9 * _48;
  long intD.12 _49;
  long intD.12 _50;
  long intD.12 _51;
  difference_typeD.42938 _52;
  size_typeD.43117 _53;
  intD.9 * * _54;
  long intD.12 _55;
  long intD.12 _56;
  long intD.12 _57;
  long unsigned intD.14 _58;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#638ptD.0 => this_6(D)
  # DEBUG thisD.61131 => D#638ptD.0
  # DEBUG D#637ptD.0 => D#638ptD.0
  # DEBUG D#636ptD.0 => &D#637ptD.0->D.43590
  # DEBUG thisD.61093 => D#636ptD.0
  # DEBUG __aD.61085 => D#399ptD.0
  # DEBUG D#398ptD.0 => D#399ptD.0
  # DEBUG D#381ptD.0 => D#398ptD.0
  # DEBUG thisD.56919 => D#381ptD.0
  # DEBUG thisD.61127 => this_6(D)
  # DEBUG D#174ptD.0 => &MEM[(const struct dequeD.40449 *)this_6(D)].D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &MEM[(const struct dequeD.40449 *)this_6(D)].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61129 => D#175ptD.0
  # DEBUG __yD.61128 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _14 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_nodeD.42943;
  _12 = (long intD.12) _14;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _8 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_nodeD.42943;
  _7 = (long intD.12) _8;
  _35 = _12 - _7;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _36 = _35 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _37 = _36 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _38 = _37 * 128;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _39 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_curD.42940;
  _40 = (long intD.12) _39;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _41 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_firstD.42941;
  _42 = (long intD.12) _41;
  _43 = _40 - _42;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _44 = _43 /[ex] 4;
  _45 = _38 + _44;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _46 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_lastD.42942;
  _47 = (long intD.12) _46;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _48 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_curD.42940;
  _49 = (long intD.12) _48;
  _50 = _47 - _49;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _51 = _50 /[ex] 4;
  _52 = _45 + _51;
  # RANGE [0, 18446744073709551615]
  _53 = (size_typeD.43117) _52;
  # RANGE [0, 18446744073709551615]
  _10 = 4611686018427387903 - _53;
  if (_10 < __new_elems_11(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_34 = VDEF <.MEM_5(D)>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("deque::_M_new_elements_at_front");
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54286 => 4
  # RANGE [0, 18446744073709551615]
  _13 = __new_elems_11(D) + 127;
  # DEBUG __sizeD.54286 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  __new_nodes_15 = _13 >> 7;
  # DEBUG __new_nodesD.48051 => __new_nodes_15
  # DEBUG thisD.61133 => this_6(D)
  # DEBUG __nodes_to_addD.61134 => __new_nodes_15
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _54 = this_6(D)->D.43590._M_implD.43041._M_mapD.43043;
  _55 = (long intD.12) _54;
  _56 = _7 - _55;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _57 = _56 /[ex] 8;
  # RANGE ~[1152921504606846976, 17293822569102704639]
  _58 = (long unsigned intD.14) _57;
  if (__new_nodes_15 > _58)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [29.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [71.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 131, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [29.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_59 = VDEF <.MEM_5(D)>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmbD.43542 (this_6(D), __new_nodes_15, 1);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 451, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       5 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                4 [71.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_30 = PHI <.MEM_59(5), .MEM_5(D)(4)>
  # DEBUG __iD.48052 => 1
  if (__new_nodes_15 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 6, next block 20, flags: (NEW, REACHABLE)
;;    pred:       6 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_81 = PHI <.MEM_30(6), .MEM_21(10)>
;;    succ:       20 [100.0%]  (FALLTHRU)

;;   basic block 20, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 7, next block 8, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_81>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 8, loop depth 0, count 0, freq 431, maybe hot
;;    prev block 20, next block 9, flags: (NEW)
;;    pred:       6 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 288230376151711743
  # __i_67 = PHI <1(8), __i_22(11)>
  # .MEM_66 = PHI <.MEM_30(8), .MEM_21(11)>
  # DEBUG __iD.48052 => __i_67
  # VUSE <.MEM_66>
  # PT = nonlocal escaped 
  _17 = this_6(D)->D.43590._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # RANGE [8, 1152921504606846968] NONZERO 1152921504606846968
  _18 = __i_67 * 8;
  # RANGE [17293822569102704648, 18446744073709551608] NONZERO 18446744073709551608
  _19 = -_18;
  # PT = nonlocal escaped 
  _20 = _17 + _19;
  # DEBUG D#642ptD.0 => &this_6(D)->D.43590
  # DEBUG D#392ptD.0 => D#642ptD.0
  # DEBUG thisD.61137 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG __sizeD.56854 => 4
  # DEBUG D#390ptD.0 => &D#391ptD.0->_M_implD.43041
  # DEBUG D#386ptD.0 => D#390ptD.0
  # DEBUG __nD.61140 => NULL
  # DEBUG __aD.61139 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.61143 => NULL
  # DEBUG thisD.61141 => D#383ptD.0
  # DEBUG D.61142 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  [LP 1] # .MEM_60 = VDEF <.MEM_66>
  # PT = { D.70334 } (escaped heap)
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  _16 = _ZnwmD.2764 (512);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_21 = VDEF <.MEM_60>
  *_20 = _16;
  # RANGE [2, 144115188075855872] NONZERO 288230376151711743
  __i_22 = __i_67 + 1;
  # DEBUG __iD.48052 => __i_22
  # DEBUG __iD.48052 => __i_22
  if (__new_nodes_15 < __i_22)
    goto <bb 7>;
  else
    goto <bb 11>;
;;    succ:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       9 (EH,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 288230376151711743
  # __i_76 = PHI <__i_67(9)>
<L5>: [LP 1]
  # VUSE <.MEM_60>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _23 = __builtin_eh_pointerD.2738 (1);
  # .MEM_24 = VDEF <.MEM_60>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  __cxa_begin_catchD.13514 (_23);
  # DEBUG __jD.48053 => 1
  # DEBUG __jD.48053 => 1
  if (__i_76 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_77 = PHI <.MEM_24(12), .MEM_70(19)>
  [LP 2] # .MEM_32 = VDEF <.MEM_77>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       18 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 144115188075855871
  # __j_68 = PHI <1(14), __j_31(17)>
  # .MEM_69 = PHI <.MEM_24(14), .MEM_61(17)>
  # DEBUG __jD.48053 => __j_68
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _25 = this_6(D)->D.43590._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # RANGE [8, 1152921504606846960] NONZERO 1152921504606846968
  _26 = __j_68 * 8;
  # RANGE [17293822569102704656, 18446744073709551608] NONZERO 18446744073709551608
  _27 = -_26;
  # PT = nonlocal escaped 
  _28 = _25 + _27;
  # VUSE <.MEM_69>
  # PT = nonlocal escaped 
  _29 = *_28;
  # DEBUG D#641ptD.0 => &this_6(D)->D.43590
  # DEBUG thisD.61145 => D#641ptD.0
  # DEBUG __pD.61146 => _29
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#641ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.61150 => _29
  # DEBUG __aD.61148 => D#144ptD.0
  # DEBUG __nD.61149 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.61153 => _29
  # DEBUG thisD.61151 => D#140ptD.0
  # DEBUG D.61152 => D#141ptD.0
  # .MEM_61 = VDEF <.MEM_69>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  _ZdlPvD.2766 (_29);
  # RANGE [2, 144115188075855871] NONZERO 144115188075855871
  __j_31 = __j_68 + 1;
  # DEBUG __jD.48053 => __j_31
  # DEBUG __jD.48053 => __j_31
  if (__j_31 >= __i_76)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 19, flags: (NEW)
;;    pred:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_70 = PHI <.MEM_61(15)>
;;    succ:       19 [100.0%]  (FALLTHRU)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 17, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU)
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 19, next block 18, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 1, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L10>: [LP 2]
  [MNT 3] # .MEM_33 = VDEF <.MEM_32>
  # USE = nonlocal { D.70334 } (escaped heap)
  # CLB = nonlocal { D.70334 } (escaped heap)
  __cxa_end_catchD.13513 ();
  resx 2
;;    succ:      

}



;; Function void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEm, funcdef_no=2897, decl_uid=43533, cgraph_uid=1364, symbol_order=1365)


Pass statistics:
----------------

void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct dequeD.40449 * const thisD.43534, size_typeD.43117 __new_elemsD.43535)
Eh tree:
   3 must_not_throw
   2 cleanup land:{2,<L10>}
   1 try land:{1,<L5>} catch:{}
{
  size_typeD.43117 __jD.48065;
  size_typeD.43117 __iD.48064;
  const size_typeD.43117 __new_nodesD.48063;
  long intD.12 _7;
  intD.9 * * _8;
  long unsigned intD.14 _9;
  long intD.12 _11;
  long unsigned intD.14 _12;
  intD.9 * * _13;
  intD.9 * * _16;
  long unsigned intD.14 _17;
  intD.9 * * _18;
  voidD.45 * _21;
  intD.9 * * _23;
  long unsigned intD.14 _24;
  intD.9 * * _25;
  intD.9 * _26;
  long intD.12 _31;
  long intD.12 _32;
  long intD.12 _33;
  long intD.12 _34;
  intD.9 * _35;
  long intD.12 _36;
  intD.9 * _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  long intD.12 _41;
  intD.9 * _42;
  long intD.12 _43;
  intD.9 * _44;
  long intD.12 _45;
  long intD.12 _46;
  long intD.12 _47;
  difference_typeD.42938 _48;
  size_typeD.43117 _49;
  intD.9 * _50;
  long unsigned intD.14 _53;
  long unsigned intD.14 _54;
  intD.9 * * _57;
  long intD.12 _58;
  long intD.12 _59;
  long intD.12 _60;
  long unsigned intD.14 _61;
  long unsigned intD.14 _62;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#638ptD.0 => this_6(D)
  # DEBUG thisD.61102 => D#638ptD.0
  # DEBUG D#637ptD.0 => D#638ptD.0
  # DEBUG D#636ptD.0 => &D#637ptD.0->D.43590
  # DEBUG thisD.61093 => D#636ptD.0
  # DEBUG __aD.61085 => D#399ptD.0
  # DEBUG D#398ptD.0 => D#399ptD.0
  # DEBUG D#381ptD.0 => D#398ptD.0
  # DEBUG thisD.56919 => D#381ptD.0
  # DEBUG thisD.61098 => this_6(D)
  # DEBUG D#174ptD.0 => &MEM[(const struct dequeD.40449 *)this_6(D)].D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &MEM[(const struct dequeD.40449 *)this_6(D)].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61100 => D#175ptD.0
  # DEBUG __yD.61099 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _13 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_nodeD.42943;
  _11 = (long intD.12) _13;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _8 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_nodeD.42943;
  _7 = (long intD.12) _8;
  _31 = _11 - _7;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _32 = _31 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _33 = _32 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _34 = _33 * 128;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _35 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_curD.42940;
  _36 = (long intD.12) _35;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _37 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_firstD.42941;
  _38 = (long intD.12) _37;
  _39 = _36 - _38;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _40 = _39 /[ex] 4;
  _41 = _34 + _40;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _42 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_lastD.42942;
  _43 = (long intD.12) _42;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _44 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_curD.42940;
  _45 = (long intD.12) _44;
  _46 = _43 - _45;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _47 = _46 /[ex] 4;
  _48 = _41 + _47;
  # RANGE [0, 18446744073709551615]
  _49 = (size_typeD.43117) _48;
  # RANGE [0, 18446744073709551615]
  _9 = 4611686018427387903 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_30 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("deque::_M_new_elements_at_back");
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54286 => 4
  # RANGE [0, 18446744073709551615]
  _12 = __new_elems_10(D) + 127;
  # DEBUG __sizeD.54286 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  __new_nodes_14 = _12 >> 7;
  # DEBUG __new_nodesD.48063 => __new_nodes_14
  # DEBUG thisD.70359 => this_6(D)
  # DEBUG __nodes_to_addD.70360 => __new_nodes_14
  # RANGE [1, 144115188075855872] NONZERO 288230376151711743
  _53 = __new_nodes_14 + 1;
  # VUSE <.MEM_5(D)>
  _54 = this_6(D)->D.43590._M_implD.43041._M_map_sizeD.43044;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _57 = this_6(D)->D.43590._M_implD.43041._M_mapD.43043;
  _58 = (long intD.12) _57;
  _59 = _11 - _58;
  # RANGE [-1152921504606846975, 1152921504606846976]
  _60 = _59 /[ex] -8;
  # RANGE ~[1152921504606846977, 17293822569102704640]
  _61 = (long unsigned intD.14) _60;
  # RANGE [0, 18446744073709551615]
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 175, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_15 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmbD.43542 (this_6(D), __new_nodes_14, 0);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_5(D)(4), .MEM_15(5)>
  # DEBUG __iD.48064 => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_74 = PHI <.MEM_55(6), .MEM_19(10)>
  # VUSE <.MEM_74>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 8, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       6 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 288230376151711743
  # __i_67 = PHI <1(8), __i_20(11)>
  # .MEM_68 = PHI <.MEM_55(8), .MEM_19(11)>
  # DEBUG __iD.48064 => __i_67
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _16 = this_6(D)->D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # RANGE [8, 1152921504606846968] NONZERO 1152921504606846968
  _17 = __i_67 * 8;
  # PT = nonlocal escaped 
  _18 = _16 + _17;
  # DEBUG D#640ptD.0 => &this_6(D)->D.43590
  # DEBUG D#392ptD.0 => D#640ptD.0
  # DEBUG thisD.61106 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG __sizeD.56854 => 4
  # DEBUG D#390ptD.0 => &D#391ptD.0->_M_implD.43041
  # DEBUG D#386ptD.0 => D#390ptD.0
  # DEBUG __nD.61109 => NULL
  # DEBUG __aD.61108 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.61112 => NULL
  # DEBUG thisD.61110 => D#383ptD.0
  # DEBUG D.61111 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  [LP 1] # .MEM_51 = VDEF <.MEM_68>
  # PT = { D.70363 } (escaped heap)
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  _50 = _ZnwmD.2764 (512);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_19 = VDEF <.MEM_51>
  *_18 = _50;
  # RANGE [2, 144115188075855872] NONZERO 288230376151711743
  __i_20 = __i_67 + 1;
  # DEBUG __iD.48064 => __i_20
  # DEBUG __iD.48064 => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;
;;    succ:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       9 (EH,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 288230376151711743
  # __i_65 = PHI <__i_67(9)>
<L5>: [LP 1]
  # VUSE <.MEM_51>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _21 = __builtin_eh_pointerD.2738 (1);
  # .MEM_22 = VDEF <.MEM_51>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  __cxa_begin_catchD.13514 (_21);
  # DEBUG __jD.48065 => 1
  # DEBUG __jD.48065 => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_22(12), .MEM_71(16)>
  [LP 2] # .MEM_28 = VDEF <.MEM_72>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       18 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 144115188075855871
  # __j_66 = PHI <1(14), __j_27(17)>
  # .MEM_70 = PHI <.MEM_22(14), .MEM_52(17)>
  # DEBUG __jD.48065 => __j_66
  # VUSE <.MEM_70>
  # PT = nonlocal escaped 
  _23 = this_6(D)->D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # RANGE [8, 1152921504606846960] NONZERO 1152921504606846968
  _24 = __j_66 * 8;
  # PT = nonlocal escaped 
  _25 = _23 + _24;
  # VUSE <.MEM_70>
  # PT = nonlocal escaped 
  _26 = *_25;
  # DEBUG D#639ptD.0 => &this_6(D)->D.43590
  # DEBUG thisD.61114 => D#639ptD.0
  # DEBUG __pD.61115 => _26
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#639ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.61119 => _26
  # DEBUG __aD.61117 => D#144ptD.0
  # DEBUG __nD.61118 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.61122 => _26
  # DEBUG thisD.61120 => D#140ptD.0
  # DEBUG D.61121 => D#141ptD.0
  # .MEM_52 = VDEF <.MEM_70>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  _ZdlPvD.2766 (_26);
  # RANGE [2, 144115188075855871] NONZERO 144115188075855871
  __j_27 = __j_66 + 1;
  # DEBUG __jD.48065 => __j_27
  # DEBUG __jD.48065 => __j_27
  if (__j_27 >= __i_65)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_52(15)>
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 16, next block 18, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 1, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L10>: [LP 2]
  [MNT 3] # .MEM_29 = VDEF <.MEM_28>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  __cxa_end_catchD.13513 ();
  resx 2
;;    succ:      

}


Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 48]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 16]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 48]
	Access function 0: 0
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 48]
	Access function 0: 64
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 16]
	Access function 0: 128
Creating dr for MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_6(D) + 16]
	Access function 0: 0
Applying pattern match.pd:725, generic-match.c:1428
Creating dr for this_6(D)->D.43590._M_impl._M_map_size
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 64
	Access function 1: 0
	Access function 2: 0
Creating dr for this_6(D)->D.43590._M_impl._M_map
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 0
	Access function 1: 0
	Access function 2: 0
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for *_18
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_18
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for *_25
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
Creating dr for *_25
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for *_25
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
Creating dr for *_25
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
Analyzing # of iterations of loop 2
  exit condition [2, + , 1] < __i_65
  bounds on difference of bases: 0 ... 18446744073709551612
  result:
    # of iterations __i_65 + 18446744073709551614, bounded by 0x0fffffffffffffffc
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for *_25
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
Creating dr for *_25
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for this_6(D)->D.43590._M_impl._M_finish._M_node
analyze_innermost: success.
	base_address: this_6(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: *this_6(D)
	Access function 0: 192
	Access function 1: 384
	Access function 2: 0
	Access function 3: 0
Creating dr for *_25
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
Creating dr for *_25
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_25
Analyzing # of iterations of loop 2
  exit condition [2, + , 1] < __i_65
  bounds on difference of bases: 0 ... 18446744073709551612
  result:
    # of iterations __i_65 + 18446744073709551614, bounded by 0x0fffffffffffffffc

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:21, LOOPS:2, CONDITIONS:7, STMTS:125)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_4 })
  {
    <bb 2>:
    # DEBUG D#638 => this_6(D)
    # DEBUG this => D#638
    # DEBUG D#637 => D#638
    # DEBUG D#636 => &D#637->D.43590
    # DEBUG this => D#636
    # DEBUG __a => D#399
    # DEBUG D#398 => D#399
    # DEBUG D#381 => D#398
    # DEBUG this => D#381
    # DEBUG this => this_6(D)
    # DEBUG D#174 => &MEM[(const struct deque *)this_6(D)].D.43590._M_impl._M_start
    # DEBUG D#175 => &MEM[(const struct deque *)this_6(D)].D.43590._M_impl._M_finish
    # DEBUG __x => D#175
    # DEBUG __y => D#174
    # DEBUG __size => 4
    # VUSE <.MEM_5(D)>
    _13 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_node;
    _11 = (long int) _13;
    # VUSE <.MEM_5(D)>
    _8 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_node;
    _7 = (long int) _8;
    _31 = _11 - _7;
    _32 = _31 /[ex] 8;
    _33 = _32 + -1;
    _34 = _33 * 128;
    # VUSE <.MEM_5(D)>
    _35 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_cur;
    _36 = (long int) _35;
    # VUSE <.MEM_5(D)>
    _37 = MEM[(const struct _Deque_iterator &)this_6(D) + 48]._M_first;
    _38 = (long int) _37;
    _39 = _36 - _38;
    _40 = _39 /[ex] 4;
    _41 = _34 + _40;
    # VUSE <.MEM_5(D)>
    _42 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_last;
    _43 = (long int) _42;
    # VUSE <.MEM_5(D)>
    _44 = MEM[(const struct _Deque_iterator &)this_6(D) + 16]._M_cur;
    _45 = (long int) _44;
    _46 = _43 - _45;
    _47 = _46 /[ex] 4;
    _48 = _41 + _47;
    _49 = (size_type) _48;
    _9 = 4611686018427387903 - _49;
    if (_9 < __new_elems_10(D))
      goto <bb 3>;
    else
      goto <bb 4>;

  }
  bb_3 (preds = {bb_2 }, succs = {})
  {
    <bb 3>:
    # .MEM_30 = VDEF <.MEM_5(D)>
    std::__throw_length_error ("deque::_M_new_elements_at_back");

  }
  bb_4 (preds = {bb_2 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # DEBUG __size => 4
    _12 = __new_elems_10(D) + 127;
    # DEBUG __size => 4
    __new_nodes_14 = _12 >> 7;
    # DEBUG __new_nodes => __new_nodes_14
    # DEBUG this => this_6(D)
    # DEBUG __nodes_to_add => __new_nodes_14
    _53 = __new_nodes_14 + 1;
    # VUSE <.MEM_5(D)>
    _54 = this_6(D)->D.43590._M_impl._M_map_size;
    # VUSE <.MEM_5(D)>
    _57 = this_6(D)->D.43590._M_impl._M_map;
    _58 = (long int) _57;
    _59 = _11 - _58;
    _60 = _59 /[ex] -8;
    _61 = (long unsigned int) _60;
    _62 = _54 + _61;
    if (_53 > _62)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 }, succs = {bb_6 })
  {
    <bb 5>:
    # .MEM_15 = VDEF <.MEM_5(D)>
    std::deque<int, std::allocator<int> >::_M_reallocate_map (this_6(D), __new_nodes_14, 0);

  }
  bb_6 (preds = {bb_4 bb_5 }, succs = {bb_7 bb_8 })
  {
    <bb 6>:
    # .MEM_55 = PHI <.MEM_5(D)(4), .MEM_15(5)>
    # DEBUG __i => 1
    if (__new_nodes_14 == 0)
      goto <bb 7>;
    else
      goto <bb 8>;

  }
  bb_7 (preds = {bb_6 bb_10 }, succs = {bb_20 })
  {
    <bb 7>:
    # .MEM_74 = PHI <.MEM_55(6), .MEM_19(10)>

  }
  bb_20 (preds = {bb_7 }, succs = {bb_1 })
  {
    <bb 20>:
    # VUSE <.MEM_74>
    return;

  }
  bb_8 (preds = {bb_6 }, succs = {bb_9 })
  {
    <bb 8>:

  }
  bb_12 (preds = {bb_9 }, succs = {bb_13 bb_14 })
  {
    # __i_65 = PHI <__i_67(9)>
  <L5>:
    # VUSE <.MEM_51>
    _21 = __builtin_eh_pointer (1);
    # .MEM_22 = VDEF <.MEM_51>
    __cxa_begin_catch (_21);
    # DEBUG __j => 1
    # DEBUG __j => 1
    if (__i_65 <= 1)
      goto <bb 13>;
    else
      goto <bb 14>;

  }
  bb_13 (preds = {bb_12 bb_19 }, succs = {bb_18 })
  {
    <bb 13>:
    # .MEM_72 = PHI <.MEM_22(12), .MEM_71(19)>
    # .MEM_28 = VDEF <.MEM_72>
    __cxa_rethrow ();

  }
  bb_14 (preds = {bb_12 }, succs = {bb_15 })
  {
    <bb 14>:

  }
  bb_16 (preds = {bb_15 }, succs = {bb_19 })
  {
    <bb 16>:
    # .MEM_71 = PHI <.MEM_52(15)>

  }
  bb_19 (preds = {bb_16 }, succs = {bb_13 })
  {
    <bb 19>:
    goto <bb 13>;

  }
  bb_18 (preds = {bb_13 }, succs = {})
  {
  <L10>:
    # .MEM_29 = VDEF <.MEM_28>
    __cxa_end_catch ();
    resx 2

  }
  loop_2 (header = 15, latch = 17, niter = , upper_bound = 0x0fffffffffffffffc)
  {
    bb_15 (preds = {bb_14 bb_17 }, succs = {bb_16 bb_17 })
    {
      <bb 15>:
      # __j_66 = PHI <1(14), __j_27(17)>
      # .MEM_70 = PHI <.MEM_22(14), .MEM_52(17)>
      # DEBUG __j => __j_66
      # VUSE <.MEM_70>
      _23 = this_6(D)->D.43590._M_impl._M_finish._M_node;
      _24 = __j_66 * 8;
      _25 = _23 + _24;
      # VUSE <.MEM_70>
      _26 = *_25;
      # DEBUG D#639 => &this_6(D)->D.43590
      # DEBUG this => D#639
      # DEBUG __p => _26
      # DEBUG __size => 4
      # DEBUG D#167 => &D#639->_M_impl
      # DEBUG D#144 => D#167
      # DEBUG __p => _26
      # DEBUG __a => D#144
      # DEBUG __n => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG D#140 => D#142
      # DEBUG D#141 => D#143
      # DEBUG __p => _26
      # DEBUG this => D#140
      # DEBUG D.61121 => D#141
      # .MEM_52 = VDEF <.MEM_70>
      operator delete (_26);
      __j_27 = __j_66 + 1;
      # DEBUG __j => __j_27
      # DEBUG __j => __j_27
      if (__j_27 >= __i_65)
        goto <bb 16>;
      else
        goto <bb 17>;

    }
    bb_17 (preds = {bb_15 }, succs = {bb_15 })
    {
      <bb 17>:
      goto <bb 15>;

    }
  }
  loop_1 (header = 9, latch = 11, niter = )
  {
    bb_9 (preds = {bb_8 bb_11 }, succs = {bb_10 bb_12 })
    {
      <bb 9>:
      # __i_67 = PHI <1(8), __i_20(11)>
      # .MEM_68 = PHI <.MEM_55(8), .MEM_19(11)>
      # DEBUG __i => __i_67
      # VUSE <.MEM_68>
      _16 = this_6(D)->D.43590._M_impl._M_finish._M_node;
      _17 = __i_67 * 8;
      _18 = _16 + _17;
      # DEBUG D#640 => &this_6(D)->D.43590
      # DEBUG D#392 => D#640
      # DEBUG this => D#392
      # DEBUG D#391 => D#392
      # DEBUG __size => 4
      # DEBUG D#390 => &D#391->_M_impl
      # DEBUG D#386 => D#390
      # DEBUG __n => NULL
      # DEBUG __a => D#386
      # DEBUG D#385 => D#386
      # DEBUG D#383 => D#385
      # DEBUG D#384 => 0B
      # DEBUG __n => NULL
      # DEBUG this => D#383
      # DEBUG D.61111 => D#384
      # DEBUG D#382 => D#383
      # DEBUG D#381 => D#382
      # DEBUG this => D#381
      # .MEM_51 = VDEF <.MEM_68>
      _50 = operator new (512);

    }
    bb_10 (preds = {bb_9 }, succs = {bb_7 bb_11 })
    {
      <bb 10>:
      # .MEM_19 = VDEF <.MEM_51>
      *_18 = _50;
      __i_20 = __i_67 + 1;
      # DEBUG __i => __i_20
      # DEBUG __i => __i_20
      if (__new_nodes_14 < __i_20)
        goto <bb 7>;
      else
        goto <bb 11>;

    }
    bb_11 (preds = {bb_10 }, succs = {bb_9 })
    {
      <bb 11>:
      goto <bb 9>;

    }
  }
}

Pass statistics:
----------------

void std::deque<_Tp, _Alloc>::_M_new_elements_at_back(std::deque<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct dequeD.40449 * const thisD.43534, size_typeD.43117 __new_elemsD.43535)
Eh tree:
   3 must_not_throw
   2 cleanup land:{2,<L10>}
   1 try land:{1,<L5>} catch:{}
{
  size_typeD.43117 __jD.48065;
  size_typeD.43117 __iD.48064;
  const size_typeD.43117 __new_nodesD.48063;
  long intD.12 _7;
  intD.9 * * _8;
  long unsigned intD.14 _9;
  long intD.12 _11;
  long unsigned intD.14 _12;
  intD.9 * * _13;
  intD.9 * * _16;
  long unsigned intD.14 _17;
  intD.9 * * _18;
  voidD.45 * _21;
  intD.9 * * _23;
  long unsigned intD.14 _24;
  intD.9 * * _25;
  intD.9 * _26;
  long intD.12 _31;
  long intD.12 _32;
  long intD.12 _33;
  long intD.12 _34;
  intD.9 * _35;
  long intD.12 _36;
  intD.9 * _37;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  long intD.12 _41;
  intD.9 * _42;
  long intD.12 _43;
  intD.9 * _44;
  long intD.12 _45;
  long intD.12 _46;
  long intD.12 _47;
  difference_typeD.42938 _48;
  size_typeD.43117 _49;
  intD.9 * _50;
  long unsigned intD.14 _53;
  long unsigned intD.14 _54;
  intD.9 * * _57;
  long intD.12 _58;
  long intD.12 _59;
  long intD.12 _60;
  long unsigned intD.14 _61;
  long unsigned intD.14 _62;

;;   basic block 2, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#638ptD.0 => this_6(D)
  # DEBUG thisD.61102 => D#638ptD.0
  # DEBUG D#637ptD.0 => D#638ptD.0
  # DEBUG D#636ptD.0 => &D#637ptD.0->D.43590
  # DEBUG thisD.61093 => D#636ptD.0
  # DEBUG __aD.61085 => D#399ptD.0
  # DEBUG D#398ptD.0 => D#399ptD.0
  # DEBUG D#381ptD.0 => D#398ptD.0
  # DEBUG thisD.56919 => D#381ptD.0
  # DEBUG thisD.61098 => this_6(D)
  # DEBUG D#174ptD.0 => &MEM[(const struct dequeD.40449 *)this_6(D)].D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &MEM[(const struct dequeD.40449 *)this_6(D)].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61100 => D#175ptD.0
  # DEBUG __yD.61099 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _13 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_nodeD.42943;
  _11 = (long intD.12) _13;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _8 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_nodeD.42943;
  _7 = (long intD.12) _8;
  _31 = _11 - _7;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _32 = _31 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _33 = _32 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _34 = _33 * 128;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _35 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_curD.42940;
  _36 = (long intD.12) _35;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _37 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 48]._M_firstD.42941;
  _38 = (long intD.12) _37;
  _39 = _36 - _38;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _40 = _39 /[ex] 4;
  _41 = _34 + _40;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _42 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_lastD.42942;
  _43 = (long intD.12) _42;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _44 = MEM[(const struct _Deque_iteratorD.42908 &)this_6(D) + 16]._M_curD.42940;
  _45 = (long intD.12) _44;
  _46 = _43 - _45;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _47 = _46 /[ex] 4;
  _48 = _41 + _47;
  # RANGE [0, 18446744073709551615]
  _49 = (size_typeD.43117) _48;
  # RANGE [0, 18446744073709551615]
  _9 = 4611686018427387903 - _49;
  if (_9 < __new_elems_10(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_30 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("deque::_M_new_elements_at_back");
;;    succ:      

;;   basic block 4, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54286 => 4
  # RANGE [0, 18446744073709551615]
  _12 = __new_elems_10(D) + 127;
  # DEBUG __sizeD.54286 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  __new_nodes_14 = _12 >> 7;
  # DEBUG __new_nodesD.48063 => __new_nodes_14
  # DEBUG thisD.70359 => this_6(D)
  # DEBUG __nodes_to_addD.70360 => __new_nodes_14
  # RANGE [1, 144115188075855872] NONZERO 288230376151711743
  _53 = __new_nodes_14 + 1;
  # VUSE <.MEM_5(D)>
  _54 = this_6(D)->D.43590._M_implD.43041._M_map_sizeD.43044;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _57 = this_6(D)->D.43590._M_implD.43041._M_mapD.43043;
  _58 = (long intD.12) _57;
  _59 = _11 - _58;
  # RANGE [-1152921504606846975, 1152921504606846976]
  _60 = _59 /[ex] -8;
  # RANGE ~[1152921504606846977, 17293822569102704640]
  _61 = (long unsigned intD.14) _60;
  # RANGE [0, 18446744073709551615]
  _62 = _54 + _61;
  if (_53 > _62)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 175, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_15 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  _ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmbD.43542 (this_6(D), __new_nodes_14, 0);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_55 = PHI <.MEM_5(D)(4), .MEM_15(5)>
  # DEBUG __iD.48064 => 1
  if (__new_nodes_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 6, next block 20, flags: (NEW, REACHABLE)
;;    pred:       6 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_74 = PHI <.MEM_55(6), .MEM_19(10)>
;;    succ:       20 [100.0%]  (FALLTHRU)

;;   basic block 20, loop depth 0, count 0, freq 450, maybe hot
;;    prev block 7, next block 8, flags: (NEW)
;;    pred:       7 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_74>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 8, loop depth 0, count 0, freq 430, maybe hot
;;    prev block 20, next block 9, flags: (NEW)
;;    pred:       6 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 288230376151711743
  # __i_67 = PHI <1(8), __i_20(11)>
  # .MEM_68 = PHI <.MEM_55(8), .MEM_19(11)>
  # DEBUG __iD.48064 => __i_67
  # VUSE <.MEM_68>
  # PT = nonlocal escaped 
  _16 = this_6(D)->D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # RANGE [8, 1152921504606846968] NONZERO 1152921504606846968
  _17 = __i_67 * 8;
  # PT = nonlocal escaped 
  _18 = _16 + _17;
  # DEBUG D#640ptD.0 => &this_6(D)->D.43590
  # DEBUG D#392ptD.0 => D#640ptD.0
  # DEBUG thisD.61106 => D#392ptD.0
  # DEBUG D#391ptD.0 => D#392ptD.0
  # DEBUG __sizeD.56854 => 4
  # DEBUG D#390ptD.0 => &D#391ptD.0->_M_implD.43041
  # DEBUG D#386ptD.0 => D#390ptD.0
  # DEBUG __nD.61109 => NULL
  # DEBUG __aD.61108 => D#386ptD.0
  # DEBUG D#385ptD.0 => D#386ptD.0
  # DEBUG D#383ptD.0 => D#385ptD.0
  # DEBUG D#384ptD.0 => 0B
  # DEBUG __nD.61112 => NULL
  # DEBUG thisD.61110 => D#383ptD.0
  # DEBUG D.61111 => D#384ptD.0
  # DEBUG D#382ptD.0 => D#383ptD.0
  # DEBUG D#381ptD.0 => D#382ptD.0
  # DEBUG thisD.56790 => D#381ptD.0
  [LP 1] # .MEM_51 = VDEF <.MEM_68>
  # PT = { D.70363 } (escaped heap)
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  _50 = _ZnwmD.2764 (512);
;;    succ:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 (EH,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 9550, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_19 = VDEF <.MEM_51>
  *_18 = _50;
  # RANGE [2, 144115188075855872] NONZERO 288230376151711743
  __i_20 = __i_67 + 1;
  # DEBUG __iD.48064 => __i_20
  # DEBUG __iD.48064 => __i_20
  if (__new_nodes_14 < __i_20)
    goto <bb 7>;
  else
    goto <bb 11>;
;;    succ:       7 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 9120, maybe hot
;;    prev block 10, next block 12, flags: (NEW)
;;    pred:       10 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       9 (EH,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 288230376151711743
  # __i_65 = PHI <__i_67(9)>
<L5>: [LP 1]
  # VUSE <.MEM_51>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _21 = __builtin_eh_pointerD.2738 (1);
  # .MEM_22 = VDEF <.MEM_51>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  __cxa_begin_catchD.13514 (_21);
  # DEBUG __jD.48065 => 1
  # DEBUG __jD.48065 => 1
  if (__i_65 <= 1)
    goto <bb 13>;
  else
    goto <bb 14>;
;;    succ:       13 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                14 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_72 = PHI <.MEM_22(12), .MEM_71(19)>
  [LP 2] # .MEM_28 = VDEF <.MEM_72>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       18 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       12 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)
  # RANGE [1, 18446744073709551614] NONZERO 144115188075855871
  # __j_66 = PHI <1(14), __j_27(17)>
  # .MEM_70 = PHI <.MEM_22(14), .MEM_52(17)>
  # DEBUG __jD.48065 => __j_66
  # VUSE <.MEM_70>
  # PT = nonlocal escaped 
  _23 = this_6(D)->D.43590._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # RANGE [8, 1152921504606846960] NONZERO 1152921504606846968
  _24 = __j_66 * 8;
  # PT = nonlocal escaped 
  _25 = _23 + _24;
  # VUSE <.MEM_70>
  # PT = nonlocal escaped 
  _26 = *_25;
  # DEBUG D#639ptD.0 => &this_6(D)->D.43590
  # DEBUG thisD.61114 => D#639ptD.0
  # DEBUG __pD.61115 => _26
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#639ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.61119 => _26
  # DEBUG __aD.61117 => D#144ptD.0
  # DEBUG __nD.61118 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.61122 => _26
  # DEBUG thisD.61120 => D#140ptD.0
  # DEBUG D.61121 => D#141ptD.0
  # .MEM_52 = VDEF <.MEM_70>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  _ZdlPvD.2766 (_26);
  # RANGE [2, 144115188075855871] NONZERO 144115188075855871
  __j_27 = __j_66 + 1;
  # DEBUG __jD.48065 => __j_27
  # DEBUG __jD.48065 => __j_27
  if (__j_27 >= __i_65)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 15, next block 19, flags: (NEW)
;;    pred:       15 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_71 = PHI <.MEM_52(15)>
;;    succ:       19 [100.0%]  (FALLTHRU)

;;   basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 16, next block 17, flags: (NEW)
;;    pred:       16 [100.0%]  (FALLTHRU)
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 19, next block 18, flags: (NEW)
;;    pred:       15 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,DFS_BACK,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 17, next block 1, flags: (NEW, REACHABLE)
;;    pred:       13 (EH,EXECUTABLE)
<L10>: [LP 2]
  [MNT 3] # .MEM_29 = VDEF <.MEM_28>
  # USE = nonlocal null { D.70363 } (escaped heap)
  # CLB = nonlocal null { D.70363 } (escaped heap)
  __cxa_end_catchD.13513 ();
  resx 2
;;    succ:      

}



;; Function void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<int, const int&, const int*>; _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<int, int&, int*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (_ZNSt5dequeIiSaIiEE13_M_insert_auxISt15_Deque_iteratorIiRKiPS4_EEEvS3_IiRiPiET_SB_m, funcdef_no=2892, decl_uid=47910, cgraph_uid=1359, symbol_order=1360)


Pass statistics:
----------------


Global statistics (BBS:145, LOOPS:7, CONDITIONS:56, STMTS:2158)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

void std::deque<_Tp, _Alloc>::_M_insert_aux(std::deque<_Tp, _Alloc>::iterator, _ForwardIterator, _ForwardIterator, std::deque<_Tp, _Alloc>::size_type) [with _ForwardIterator = std::_Deque_iterator<int, const int&, const int*>; _Tp = int; _Alloc = std::allocator<int>; std::deque<_Tp, _Alloc>::iterator = std::_Deque_iterator<int, int&, int*>; std::deque<_Tp, _Alloc>::size_type = long unsigned int] (struct dequeD.40449 * const thisD.47911, struct iteratorD.43111 & restrict __posD.47912, struct _Deque_iteratorD.42910 __firstD.47913, struct _Deque_iteratorD.42910 __lastD.47914, size_typeD.43117 __nD.47915)
{
  intD.9 * * SR.1923D.71522;
  intD.9 * SR.1922D.71521;
  intD.9 * SR.1921D.71520;
  intD.9 * * SR.1920D.71519;
  intD.9 * SR.1919D.71518;
  intD.9 * SR.1918D.71517;
  intD.9 * * __first$_M_nodeD.71516;
  intD.9 * __first$_M_lastD.71515;
  intD.9 * const __firstD.71513;
  intD.9 * * SR.1914D.71512;
  intD.9 * SR.1913D.71511;
  intD.9 * SR.1912D.71510;
  intD.9 * * __first$24D.71509;
  intD.9 * __first$16D.71508;
  intD.9 * __first$8D.71507;
  intD.9 * __firstD.71506;
  intD.9 * * __last$24D.71505;
  intD.9 * __last$8D.71503;
  intD.9 * __lastD.71502;
  intD.9 * * __first$24D.71501;
  intD.9 * __first$16D.71500;
  intD.9 * __first$8D.71499;
  intD.9 * __firstD.71498;
  intD.9 * * __first$_M_nodeD.71497;
  intD.9 * __first$_M_lastD.71496;
  intD.9 * __first$_M_firstD.71495;
  intD.9 * __first$_M_curD.71494;
  intD.9 * * __last$_M_nodeD.71493;
  intD.9 * __last$_M_lastD.71492;
  intD.9 * __last$_M_firstD.71491;
  intD.9 * __last$_M_curD.71490;
  intD.9 * * __last$_M_nodeD.71489;
  intD.9 * __last$_M_lastD.71488;
  intD.9 * __last$_M_firstD.71487;
  intD.9 * __last$_M_curD.71486;
  intD.9 * * __first$_M_nodeD.71485;
  intD.9 * __first$_M_lastD.71484;
  intD.9 * __first$_M_firstD.71483;
  intD.9 * __first$_M_curD.71482;
  intD.9 * * __first$_M_nodeD.71481;
  intD.9 * __first$_M_lastD.71480;
  intD.9 * __first$_M_firstD.71479;
  intD.9 * __first$_M_curD.71478;
  intD.9 * * __last$_M_nodeD.71477;
  intD.9 * __last$_M_lastD.71476;
  intD.9 * __last$_M_firstD.71475;
  intD.9 * __last$_M_curD.71474;
  intD.9 * * __last1$_M_nodeD.71473;
  intD.9 * __last1$_M_lastD.71472;
  intD.9 * __last1$_M_firstD.71471;
  intD.9 * __last1$_M_curD.71470;
  intD.9 * * __first1$_M_nodeD.71469;
  intD.9 * __first1$_M_lastD.71468;
  intD.9 * __first1$_M_firstD.71467;
  intD.9 * __first1$_M_curD.71466;
  intD.9 * * __last$_M_nodeD.71465;
  intD.9 * __last$_M_firstD.71463;
  intD.9 * __last$_M_curD.71462;
  intD.9 * * SR.1865D.71461;
  intD.9 * SR.1864D.71460;
  intD.9 * SR.1863D.71459;
  intD.9 * * SR.1862D.71458;
  intD.9 * SR.1861D.71457;
  intD.9 * SR.1860D.71456;
  intD.9 * * __tmp$_M_nodeD.71455;
  intD.9 * __tmp$_M_lastD.71454;
  intD.9 * __tmp$_M_firstD.71453;
  intD.9 * __tmp$_M_curD.71452;
  intD.9 * * SR.1855D.71451;
  intD.9 * SR.1854D.71450;
  intD.9 * SR.1853D.71449;
  intD.9 * * SR.1852D.71448;
  intD.9 * SR.1851D.71447;
  intD.9 * SR.1850D.71446;
  intD.9 * SR.1849D.71445;
  intD.9 * * __tmp$_M_nodeD.71444;
  intD.9 * __tmp$_M_lastD.71443;
  intD.9 * __tmp$_M_firstD.71442;
  intD.9 * __tmp$_M_curD.71441;
  intD.9 * * __tmp$_M_nodeD.71440;
  intD.9 * __tmp$_M_lastD.71439;
  intD.9 * __tmp$_M_firstD.71438;
  intD.9 * __tmp$_M_curD.71437;
  intD.9 * * __first$_M_nodeD.71436;
  intD.9 * __first$_M_lastD.71435;
  intD.9 * const __firstD.71433;
  intD.9 * * SR.1837D.71432;
  intD.9 * SR.1836D.71431;
  intD.9 * SR.1835D.71430;
  intD.9 * * __first$24D.71429;
  intD.9 * __first$16D.71428;
  intD.9 * __first$8D.71427;
  intD.9 * __firstD.71426;
  intD.9 * * __last$24D.71425;
  intD.9 * __last$8D.71423;
  intD.9 * __lastD.71422;
  intD.9 * * __first$24D.71421;
  intD.9 * __first$16D.71420;
  intD.9 * __first$8D.71419;
  intD.9 * __firstD.71418;
  intD.9 * * SR.1823D.71417;
  intD.9 * SR.1822D.71416;
  intD.9 * SR.1821D.71415;
  intD.9 * * SR.1820D.71414;
  intD.9 * SR.1819D.71413;
  intD.9 * SR.1818D.71412;
  intD.9 * * __first$_M_nodeD.71411;
  intD.9 * __first$_M_lastD.71410;
  intD.9 * __first$_M_firstD.71409;
  intD.9 * __first$_M_curD.71408;
  intD.9 * * __last$_M_nodeD.71407;
  intD.9 * __last$_M_lastD.71406;
  intD.9 * __last$_M_firstD.71405;
  intD.9 * __last$_M_curD.71404;
  intD.9 * * __last$_M_nodeD.71403;
  intD.9 * __last$_M_lastD.71402;
  intD.9 * __last$_M_firstD.71401;
  intD.9 * __last$_M_curD.71400;
  intD.9 * * __first$_M_nodeD.71399;
  intD.9 * __first$_M_lastD.71398;
  intD.9 * __first$_M_firstD.71397;
  intD.9 * __first$_M_curD.71396;
  intD.9 * * __first$_M_nodeD.71395;
  intD.9 * __first$_M_lastD.71394;
  intD.9 * __first$_M_firstD.71393;
  intD.9 * __first$_M_curD.71392;
  intD.9 * * __last$_M_nodeD.71391;
  intD.9 * __last$_M_lastD.71390;
  intD.9 * __last$_M_firstD.71389;
  intD.9 * __last$_M_curD.71388;
  intD.9 * * __last2$_M_nodeD.71387;
  intD.9 * __last2$_M_lastD.71386;
  intD.9 * __last2$_M_firstD.71385;
  intD.9 * __last2$_M_curD.71384;
  intD.9 * * __first2$_M_nodeD.71383;
  intD.9 * __first2$_M_lastD.71382;
  intD.9 * __first2$_M_firstD.71381;
  intD.9 * __first2$_M_curD.71380;
  intD.9 * * SR.1785D.71379;
  intD.9 * SR.1784D.71378;
  intD.9 * SR.1783D.71377;
  intD.9 * * SR.1782D.71376;
  intD.9 * SR.1781D.71375;
  intD.9 * SR.1780D.71374;
  intD.9 * * __tmp$_M_nodeD.71373;
  intD.9 * __tmp$_M_lastD.71372;
  intD.9 * __tmp$_M_firstD.71371;
  intD.9 * __tmp$_M_curD.71370;
  intD.9 * * __tmp$_M_nodeD.71369;
  intD.9 * __tmp$_M_lastD.71368;
  intD.9 * __tmp$_M_firstD.71367;
  intD.9 * __tmp$_M_curD.71366;
  intD.9 * * __tmp$_M_nodeD.71365;
  intD.9 * __tmp$_M_lastD.71364;
  intD.9 * __tmp$_M_firstD.71363;
  intD.9 * __tmp$_M_curD.71362;
  intD.9 * * __tmp$_M_nodeD.71361;
  intD.9 * __tmp$_M_lastD.71360;
  intD.9 * __tmp$_M_firstD.71359;
  intD.9 * __tmp$_M_curD.71358;
  intD.9 * * __mid$_M_nodeD.71357;
  intD.9 * __mid$_M_lastD.71356;
  intD.9 * __mid$_M_firstD.71355;
  intD.9 * __mid$_M_curD.71354;
  intD.9 * * SR.1759D.71353;
  intD.9 * SR.1758D.71352;
  intD.9 * SR.1757D.71351;
  intD.9 * SR.1756D.71350;
  intD.9 * * __new_finish$_M_nodeD.71349;
  intD.9 * __new_finish$_M_lastD.71348;
  intD.9 * __new_finish$_M_firstD.71347;
  intD.9 * __new_finish$_M_curD.71346;
  intD.9 * * __mid$_M_nodeD.71345;
  intD.9 * __mid$_M_lastD.71344;
  intD.9 * __mid$_M_firstD.71343;
  intD.9 * __mid$_M_curD.71342;
  intD.9 * * SR.1747D.71341;
  intD.9 * SR.1746D.71340;
  intD.9 * SR.1745D.71339;
  intD.9 * SR.1744D.71338;
  intD.9 * * __new_start$_M_nodeD.71337;
  intD.9 * __new_start$_M_lastD.71336;
  intD.9 * __new_start$_M_firstD.71335;
  intD.9 * __new_start$_M_curD.71334;
  _DistanceD.48261 __nD.71319;
  struct _Deque_iteratorD.42908 D.71312;
  struct _Deque_iteratorD.42908 D.71311;
  struct _Deque_iteratorD.42908 D.71310;
  struct iterator_typeD.47403 D.71296;
  struct iterator_typeD.47403 D.71295;
  struct iterator_typeD.47403 D.71294;
  struct _Deque_iteratorD.42908 D.71272;
  struct iterator_typeD.47403 D.71271;
  struct iterator_typeD.47403 D.71270;
  struct _Deque_iteratorD.42908 D.71252;
  struct _Deque_iteratorD.42908 D.71251;
  struct _Deque_iteratorD.42908 D.71250;
  struct _Deque_iteratorD.42908 D.71240;
  struct _Deque_iteratorD.42908 D.71239;
  struct _Deque_iteratorD.42908 D.71238;
  struct _Deque_iteratorD.42908 D.71225;
  struct _Deque_iteratorD.42908 D.71224;
  struct _Deque_iteratorD.42908 D.71223;
  _DistanceD.47812 __nD.71200;
  struct _Deque_iteratorD.42910 __firstD.71194;
  struct _Deque_iteratorD.42910 __lastD.71195;
  struct _Deque_iteratorD.42910 __lastD.71175;
  struct _Deque_iteratorD.42910 __firstD.71176;
  struct _Deque_iteratorD.42908 D.71193;
  intD.9 * __itD.71192;
  intD.9 * __it$8D.71191;
  intD.9 * __it$16D.71190;
  intD.9 * * __it$24D.71188;
  intD.9 * __itD.71187;
  intD.9 * __it$8D.71186;
  intD.9 * __it$16D.71185;
  intD.9 * * __it$24D.71183;
  struct _Deque_iteratorD.42910 __firstD.71169;
  struct _Deque_iteratorD.42910 __lastD.71170;
  struct _Deque_iteratorD.42908 D.71168;
  struct _Deque_iteratorD.42910 D.71167;
  struct _Deque_iteratorD.42910 D.71166;
  intD.9 * __itD.71165;
  intD.9 * __it$8D.71164;
  intD.9 * __it$16D.71163;
  intD.9 * * __it$24D.71162;
  intD.9 * __itD.71161;
  intD.9 * __it$8D.71160;
  intD.9 * __it$16D.71159;
  intD.9 * * __it$24D.71158;
  struct _Deque_iteratorD.42910 __firstD.71149;
  struct _Deque_iteratorD.42910 __lastD.71150;
  struct _Deque_iteratorD.42910 __lastD.71144;
  struct _Deque_iteratorD.42910 __firstD.71145;
  struct _Deque_iteratorD.42908 D.71148;
  struct _Deque_iteratorD.42910 __firstD.71135;
  struct _Deque_iteratorD.42910 __lastD.71136;
  struct _Deque_iteratorD.42908 D.71134;
  struct _Deque_iteratorD.42908 D.71133;
  struct _Deque_iteratorD.42908 D.71132;
  const difference_typeD.44735 __offsetD.71117;
  struct _SelfD.44736 & D.71121;
  struct _Deque_iteratorD.42908 D.71114;
  struct _Deque_iteratorD.42908 D.71113;
  struct _Deque_iteratorD.42908 D.71112;
  struct _Deque_iteratorD.42908 __midD.71095;
  struct _Deque_iteratorD.42910 __lastD.71100;
  struct _Deque_iteratorD.42910 __firstD.71101;
  struct _Deque_iteratorD.42908 D.71111;
  struct _Deque_iteratorD.42908 D.71110;
  struct _Deque_iteratorD.42910 __first1D.71089;
  struct _Deque_iteratorD.42910 __last1D.71090;
  const ptrdiff_tD.2819 _NumD.71087;
  intD.9 * D.71088;
  const difference_typeD.44735 __offsetD.71066;
  struct _SelfD.44736 & D.71070;
  const difference_typeD.42938 __offsetD.71059;
  struct _SelfD.42939 & D.71063;
  difference_typeD.48175 __lenD.71039;
  difference_typeD.48175 __llenD.71044;
  intD.9 * __lendD.71045;
  difference_typeD.48175 __rlenD.71046;
  intD.9 * __rendD.71047;
  const difference_typeD.48175 __clenD.71048;
  struct _Deque_iteratorD.42910 __firstD.71034;
  struct _Deque_iteratorD.42910 __lastD.71035;
  _DistanceD.48261 __nD.71021;
  struct _Deque_iteratorD.42908 D.71014;
  struct _Deque_iteratorD.42908 D.71013;
  struct _Deque_iteratorD.42908 D.71012;
  struct iterator_typeD.47403 D.70998;
  struct iterator_typeD.47403 D.70997;
  struct iterator_typeD.47403 D.70996;
  struct _Deque_iteratorD.42908 D.70974;
  struct iterator_typeD.47403 D.70973;
  struct iterator_typeD.47403 D.70972;
  struct _Deque_iteratorD.42908 D.70954;
  struct _Deque_iteratorD.42908 D.70953;
  struct _Deque_iteratorD.42908 D.70952;
  struct _Deque_iteratorD.42908 D.70942;
  struct _Deque_iteratorD.42908 D.70941;
  struct _Deque_iteratorD.42908 D.70940;
  struct _Deque_iteratorD.42908 D.70927;
  struct _Deque_iteratorD.42908 D.70926;
  struct _Deque_iteratorD.42908 D.70925;
  const difference_typeD.42938 __offsetD.70910;
  struct _SelfD.42939 & D.70914;
  struct _SelfD.42939 __tmpD.70901;
  struct _Deque_iteratorD.42908 D.70898;
  struct _Deque_iteratorD.42908 D.70897;
  struct _Deque_iteratorD.42908 D.70896;
  struct _Deque_iteratorD.42908 D.70895;
  struct _Deque_iteratorD.42908 D.70884;
  struct _Deque_iteratorD.42910 D.70883;
  struct _Deque_iteratorD.42910 D.70882;
  struct _Deque_iteratorD.42908 D.70881;
  const difference_typeD.42938 __offsetD.70867;
  struct _SelfD.42939 & D.70871;
  const difference_typeD.42938 __offsetD.70860;
  struct _SelfD.42939 & D.70864;
  struct _SelfD.42939 __tmpD.70853;
  const size_typeD.43117 __vacanciesD.70850;
  struct _SelfD.42939 __tmpD.70841;
  _DistanceD.47812 __nD.70826;
  struct _Deque_iteratorD.42910 __firstD.70820;
  struct _Deque_iteratorD.42910 __lastD.70821;
  struct _Deque_iteratorD.42910 __lastD.70801;
  struct _Deque_iteratorD.42910 __firstD.70802;
  struct _Deque_iteratorD.42908 D.70819;
  intD.9 * __itD.70818;
  intD.9 * __it$8D.70817;
  intD.9 * __it$16D.70816;
  intD.9 * * __it$24D.70814;
  intD.9 * __itD.70813;
  intD.9 * __it$8D.70812;
  intD.9 * __it$16D.70811;
  intD.9 * * __it$24D.70809;
  struct _Deque_iteratorD.42910 __firstD.70795;
  struct _Deque_iteratorD.42910 __lastD.70796;
  struct _Deque_iteratorD.42908 D.70794;
  struct _Deque_iteratorD.42910 D.70793;
  struct _Deque_iteratorD.42910 D.70792;
  intD.9 * __itD.70791;
  intD.9 * __it$8D.70790;
  intD.9 * __it$16D.70789;
  intD.9 * * __it$24D.70788;
  intD.9 * __itD.70787;
  intD.9 * __it$8D.70786;
  intD.9 * __it$16D.70785;
  intD.9 * * __it$24D.70784;
  struct _Deque_iteratorD.42910 __firstD.70775;
  struct _Deque_iteratorD.42910 __lastD.70776;
  _DistanceD.48261 __nD.70762;
  struct _Deque_iteratorD.42908 D.70755;
  struct _Deque_iteratorD.42908 D.70754;
  struct _Deque_iteratorD.42908 D.70753;
  struct iterator_typeD.47403 D.70739;
  struct iterator_typeD.47403 D.70738;
  struct iterator_typeD.47403 D.70737;
  struct _Deque_iteratorD.42908 D.70715;
  struct iterator_typeD.47403 D.70714;
  struct iterator_typeD.47403 D.70713;
  struct _Deque_iteratorD.42908 D.70695;
  struct _Deque_iteratorD.42908 D.70694;
  struct _Deque_iteratorD.42908 D.70693;
  struct _Deque_iteratorD.42908 D.70683;
  struct _Deque_iteratorD.42908 D.70682;
  struct _Deque_iteratorD.42908 D.70681;
  struct _Deque_iteratorD.42908 D.70668;
  struct _Deque_iteratorD.42908 D.70667;
  struct _Deque_iteratorD.42908 D.70666;
  struct _Deque_iteratorD.42908 D.70655;
  struct _Deque_iteratorD.42908 D.70654;
  struct _Deque_iteratorD.42908 D.70653;
  struct _Deque_iteratorD.42910 __lastD.70638;
  struct _Deque_iteratorD.42910 __firstD.70639;
  struct _Deque_iteratorD.42908 D.70642;
  struct _Deque_iteratorD.42910 __firstD.70629;
  struct _Deque_iteratorD.42910 __lastD.70630;
  const difference_typeD.44735 __offsetD.70624;
  struct _SelfD.44736 & D.70628;
  struct _Deque_iteratorD.42908 D.70621;
  struct _Deque_iteratorD.42908 D.70620;
  struct _Deque_iteratorD.42908 D.70619;
  struct _Deque_iteratorD.42908 __midD.70602;
  struct _Deque_iteratorD.42910 __lastD.70613;
  struct _Deque_iteratorD.42910 __firstD.70614;
  struct _Deque_iteratorD.42908 D.70618;
  struct _Deque_iteratorD.42908 D.70617;
  struct _Deque_iteratorD.42910 __first2D.70598;
  struct _Deque_iteratorD.42910 __last2D.70599;
  const difference_typeD.42938 __offsetD.70591;
  struct _SelfD.42939 & D.70595;
  _DistanceD.48261 __nD.70576;
  struct _Deque_iteratorD.42908 D.70569;
  struct _Deque_iteratorD.42908 D.70568;
  struct _Deque_iteratorD.42908 D.70567;
  struct iterator_typeD.47403 D.70553;
  struct iterator_typeD.47403 D.70552;
  struct iterator_typeD.47403 D.70551;
  struct _Deque_iteratorD.42908 D.70529;
  struct iterator_typeD.47403 D.70528;
  struct iterator_typeD.47403 D.70527;
  struct _Deque_iteratorD.42908 D.70509;
  struct _Deque_iteratorD.42908 D.70508;
  struct _Deque_iteratorD.42908 D.70507;
  struct _Deque_iteratorD.42908 D.70497;
  struct _Deque_iteratorD.42908 D.70496;
  struct _Deque_iteratorD.42908 D.70495;
  struct _Deque_iteratorD.42908 D.70482;
  struct _Deque_iteratorD.42908 D.70481;
  struct _Deque_iteratorD.42908 D.70480;
  const difference_typeD.42938 __offsetD.70465;
  struct _SelfD.42939 & D.70469;
  struct _SelfD.42939 __tmpD.70458;
  struct _Deque_iteratorD.42908 D.70455;
  struct _Deque_iteratorD.42908 D.70454;
  struct _Deque_iteratorD.42908 D.70453;
  struct _Deque_iteratorD.42908 D.70452;
  struct _Deque_iteratorD.42908 D.70441;
  struct _Deque_iteratorD.42910 D.70440;
  struct _Deque_iteratorD.42910 D.70439;
  struct _Deque_iteratorD.42908 D.70438;
  struct _SelfD.42939 __tmpD.70422;
  const difference_typeD.42938 __offsetD.70415;
  struct _SelfD.42939 & D.70419;
  const difference_typeD.42938 __offsetD.70408;
  struct _SelfD.42939 & D.70412;
  struct _SelfD.42939 __tmpD.70399;
  const size_typeD.43117 __vacanciesD.70396;
  struct _SelfD.42939 __tmpD.70389;
  struct _Deque_iteratorD.42910 __midD.48028;
  struct iteratorD.43111 __finish_nD.48006;
  const difference_typeD.43118 __elemsafterD.48004;
  struct iteratorD.43111 __new_finishD.48000;
  struct _Deque_iteratorD.42910 __midD.47978;
  struct iteratorD.43111 __start_nD.47951;
  struct iteratorD.43111 __new_startD.47946;
  struct _Deque_iteratorD.42908 D.48045;
  struct _Deque_iteratorD.42908 D.48039;
  struct _Deque_iteratorD.42908 D.48040;
  struct _Deque_iteratorD.42908 D.48041;
  struct _Deque_iteratorD.42908 D.48026;
  struct _Deque_iteratorD.42908 D.48020;
  struct _Deque_iteratorD.42908 D.48021;
  struct _Deque_iteratorD.42908 D.48022;
  struct _Deque_iteratorD.42908 D.48008;
  struct _Deque_iteratorD.42908 D.48009;
  struct _Deque_iteratorD.42908 D.48010;
  struct _SelfD.42939 D.48005;
  struct _Deque_iteratorD.42908 D.47998;
  struct _Deque_iteratorD.42908 D.47990;
  struct _Deque_iteratorD.42908 D.47991;
  struct _Deque_iteratorD.42908 D.47994;
  struct _SelfD.42939 D.47974;
  struct _Deque_iteratorD.42908 D.47970;
  struct _Deque_iteratorD.42908 D.47971;
  struct _Deque_iteratorD.42908 D.47972;
  struct _Deque_iteratorD.42908 D.47958;
  struct _Deque_iteratorD.42908 D.47959;
  struct _Deque_iteratorD.42908 D.47960;
  struct _SelfD.42939 D.47950;
  long intD.12 _7;
  long intD.12 _8;
  long unsigned intD.14 _9;
  long unsigned intD.14 __elemsbefore.133_10;
  unsigned long _18;
  intD.9 * _22;
  intD.9 * _28;
  long intD.12 _38;
  intD.9 * _48;
  intD.9 * _57;
  long intD.12 _62;
  intD.9 * _64;
  intD.9 * _75;
  intD.9 * * _80;
  intD.9 * _82;
  long intD.12 _93;
  long intD.12 _94;
  intD.9 * _95;
  long intD.12 _96;
  intD.9 * _97;
  long intD.12 _98;
  long intD.12 _99;
  long intD.12 _100;
  long intD.12 _101;
  difference_typeD.42938 _102;
  size_typeD.43117 _103;
  intD.9 * * _104;
  long intD.12 _105;
  intD.9 * * _106;
  long intD.12 _107;
  long intD.12 _108;
  long intD.12 _109;
  long intD.12 _110;
  long intD.12 _111;
  intD.9 * _112;
  long intD.12 _113;
  intD.9 * _114;
  long intD.12 _115;
  long intD.12 _116;
  long intD.12 _117;
  long intD.12 _118;
  intD.9 * _119;
  long intD.12 _120;
  intD.9 * _121;
  long intD.12 _122;
  long intD.12 _123;
  long intD.12 _124;
  difference_typeD.42938 _125;
  intD.9 * _133;
  intD.9 * _134;
  intD.9 * * _135;
  intD.9 * _146;
  intD.9 * * _147;
  intD.9 * _157;
  intD.9 * _161;
  intD.9 * * _162;
  intD.9 * _172;
  intD.9 * _173;
  intD.9 * _174;
  intD.9 * * _175;
  intD.9 * _179;
  intD.9 * _180;
  intD.9 * * _181;
  long intD.12 pretmp_190;
  long intD.12 pretmp_191;
  long intD.12 pretmp_192;
  long intD.12 pretmp_193;
  intD.9 * _278;
  long intD.12 _279;
  long intD.12 _280;
  long intD.12 _281;
  long unsigned intD.14 _283;
  long intD.12 __n.120_284;
  long intD.12 _289;
  long unsigned intD.14 __n.116_303;
  long unsigned intD.14 _304;
  long intD.12 iftmp.117_306;
  long unsigned intD.14 _308;
  long unsigned intD.14 _309;
  long intD.12 _310;
  long intD.12 iftmp.117_311;
  long intD.12 iftmp.117_313;
  long unsigned intD.14 __node_offset.119_314;
  long unsigned intD.14 _315;
  long intD.12 _319;
  long intD.12 _320;
  long unsigned intD.14 _321;
  long unsigned intD.14 _322;
  long unsigned intD.14 _333;
  long intD.12 iftmp.117_335;
  long unsigned intD.14 _337;
  long unsigned intD.14 _338;
  long intD.12 _339;
  long intD.12 iftmp.117_340;
  long intD.12 iftmp.117_342;
  long unsigned intD.14 __node_offset.119_343;
  long unsigned intD.14 _344;
  long intD.12 _348;
  long intD.12 _349;
  long unsigned intD.14 _350;
  long unsigned intD.14 _351;
  intD.9 * _353;
  long intD.12 _393;
  long intD.12 _395;
  long intD.12 _396;
  long intD.12 _397;
  long unsigned intD.14 _401;
  long intD.12 iftmp.117_403;
  long unsigned intD.14 _405;
  long unsigned intD.14 _406;
  long intD.12 _407;
  long intD.12 iftmp.117_408;
  long intD.12 iftmp.117_410;
  long unsigned intD.14 __node_offset.119_411;
  long unsigned intD.14 _412;
  long intD.12 _416;
  long intD.12 _417;
  long unsigned intD.14 _418;
  long unsigned intD.14 _419;
  unsigned long _478;
  unsigned long _479;
  unsigned long _480;
  unsigned long _481;
  unsigned long _482;
  unsigned long _483;
  unsigned long _485;
  unsigned long _492;
  unsigned long _495;
  unsigned long _501;
  long intD.12 _502;
  long intD.12 _505;
  long intD.12 _506;
  long intD.12 _507;
  long intD.12 _509;
  long intD.12 _512;
  long intD.12 _513;
  intD.9 _518;
  intD.9 * _519;
  intD.9 * _522;
  intD.9 * * _530;
  intD.9 * _531;
  intD.9 * _532;
  intD.9 * * _534;
  intD.9 * _535;
  intD.9 * _536;
  long intD.12 _538;
  long intD.12 _540;
  long intD.12 _541;
  long intD.12 _542;
  long unsigned intD.14 __n.116_545;
  long unsigned intD.14 _546;
  long intD.12 iftmp.117_548;
  long unsigned intD.14 _550;
  long unsigned intD.14 _551;
  long intD.12 _552;
  long intD.12 iftmp.117_553;
  long intD.12 iftmp.117_555;
  long unsigned intD.14 __node_offset.119_556;
  long unsigned intD.14 _557;
  long intD.12 _561;
  long intD.12 _562;
  long unsigned intD.14 _563;
  long unsigned intD.14 _564;
  long intD.12 _582;
  long intD.12 _584;
  long intD.12 _585;
  long intD.12 _586;
  long unsigned intD.14 __n.106_589;
  long unsigned intD.14 _590;
  long intD.12 iftmp.107_592;
  long unsigned intD.14 _594;
  long unsigned intD.14 _595;
  long intD.12 _596;
  long intD.12 iftmp.107_597;
  long intD.12 iftmp.107_599;
  long unsigned intD.14 __node_offset.109_600;
  long unsigned intD.14 _601;
  long intD.12 _605;
  long intD.12 _606;
  long unsigned intD.14 _607;
  long unsigned intD.14 _608;
  long intD.12 _698;
  long intD.12 _700;
  long intD.12 _701;
  long intD.12 _702;
  long intD.12 _703;
  long intD.12 _704;
  long intD.12 _706;
  long intD.12 _708;
  long intD.12 _709;
  long intD.12 _710;
  long intD.12 _711;
  long intD.12 _713;
  long intD.12 _715;
  long intD.12 _716;
  long intD.12 _717;
  intD.9 _722;
  intD.9 * _723;
  intD.9 * _726;
  intD.9 * * _734;
  intD.9 * _735;
  intD.9 * _736;
  intD.9 * * _738;
  intD.9 * _739;
  intD.9 * _740;
  long intD.12 _774;
  long intD.12 _777;
  long intD.12 _778;
  long intD.12 _779;
  long intD.12 _781;
  long intD.12 _784;
  long intD.12 _785;
  intD.9 _790;
  intD.9 * _794;
  intD.9 * * _806;
  intD.9 * _807;
  intD.9 * _808;
  long intD.12 _813;
  long intD.12 _819;
  long intD.12 _822;
  long intD.12 _823;
  long intD.12 _824;
  long unsigned intD.14 _826;
  long intD.12 __n.131_827;
  long unsigned intD.14 _846;
  long intD.12 iftmp.117_848;
  long unsigned intD.14 _850;
  long unsigned intD.14 _851;
  long intD.12 _852;
  long intD.12 iftmp.117_853;
  long intD.12 iftmp.117_855;
  long unsigned intD.14 __node_offset.119_856;
  long unsigned intD.14 _857;
  long intD.12 _861;
  long intD.12 _862;
  long unsigned intD.14 _863;
  long unsigned intD.14 _864;
  long unsigned intD.14 __n.116_874;
  long unsigned intD.14 _875;
  long intD.12 iftmp.117_877;
  long unsigned intD.14 _879;
  long unsigned intD.14 _880;
  long intD.12 _881;
  long intD.12 iftmp.117_882;
  long intD.12 iftmp.117_884;
  long unsigned intD.14 __node_offset.119_885;
  long unsigned intD.14 _886;
  long intD.12 _890;
  long intD.12 _891;
  long unsigned intD.14 _892;
  long unsigned intD.14 _893;
  long intD.12 _921;
  long intD.12 _927;
  long intD.12 _929;
  long intD.12 _930;
  long intD.12 _931;
  long unsigned intD.14 __n.116_934;
  long unsigned intD.14 _935;
  long intD.12 iftmp.117_937;
  long unsigned intD.14 _939;
  long unsigned intD.14 _940;
  long intD.12 _941;
  long intD.12 iftmp.117_942;
  long intD.12 iftmp.117_944;
  long unsigned intD.14 __node_offset.119_945;
  long unsigned intD.14 _946;
  long intD.12 _950;
  long intD.12 _951;
  long unsigned intD.14 _952;
  long unsigned intD.14 _953;
  long intD.12 _1041;
  long intD.12 _1043;
  long intD.12 _1045;
  long intD.12 _1046;
  long intD.12 _1047;
  intD.9 _1052;
  intD.9 * _1053;
  intD.9 * _1056;
  intD.9 * * _1064;
  intD.9 * _1065;
  intD.9 * _1066;
  intD.9 * * _1068;
  intD.9 * _1069;
  intD.9 * _1070;
  long intD.12 _1074;
  long intD.12 _1075;
  long intD.12 _1076;
  long intD.12 _1077;
  long intD.12 _1078;
  long intD.12 _1083;
  long intD.12 _1084;
  long intD.12 _1085;
  long intD.12 _1087;
  long intD.12 _1089;
  long intD.12 _1090;
  long intD.12 _1091;
  long intD.12 _1095;
  long intD.12 _1097;
  long intD.12 _1098;
  long intD.12 _1101;
  long intD.12 _1103;
  long intD.12 _1104;
  intD.9 * _1107;
  intD.9 * _1110;
  long unsigned intD.14 __clen.146_1118;
  long unsigned intD.14 _1119;
  sizetype _1120;
  intD.9 * _1122;
  long intD.12 _1124;
  intD.9 * const pretmp_1130;
  intD.9 * const prephitmp_1131;
  intD.9 * const pretmp_1132;
  intD.9 * const prephitmp_1133;
  intD.9 * const pretmp_1134;
  intD.9 * const prephitmp_1135;
  long unsigned intD.14 __n.116_1138;
  long unsigned intD.14 _1139;
  intD.9 * _1140;
  long intD.12 iftmp.117_1141;
  long intD.12 pretmp_1142;
  long unsigned intD.14 _1143;
  long unsigned intD.14 _1144;
  long intD.12 _1145;
  long intD.12 iftmp.117_1146;
  long intD.12 prephitmp_1147;
  long intD.12 iftmp.117_1148;
  long unsigned intD.14 __node_offset.119_1149;
  long unsigned intD.14 _1150;
  intD.9 * * _1151;
  intD.9 * _1152;
  long intD.12 _1154;
  long intD.12 _1155;
  long unsigned intD.14 _1156;
  long unsigned intD.14 _1157;
  intD.9 * _1158;
  long unsigned intD.14 __n.106_1167;
  long unsigned intD.14 _1168;
  long intD.12 iftmp.107_1170;
  intD.9 * * const pretmp_1171;
  long unsigned intD.14 _1172;
  long unsigned intD.14 _1173;
  long intD.12 _1174;
  long intD.12 iftmp.107_1175;
  intD.9 * * const prephitmp_1176;
  long intD.12 iftmp.107_1177;
  long unsigned intD.14 __node_offset.109_1178;
  long unsigned intD.14 _1179;
  long intD.12 _1183;
  long intD.12 _1184;
  long unsigned intD.14 _1185;
  long unsigned intD.14 _1186;
  long intD.12 __first.79_1189;
  long intD.12 _1190;
  long unsigned intD.14 _1192;
  sizetype _1193;
  intD.9 * _1194;
  long intD.12 _1214;
  long intD.12 _1216;
  long intD.12 _1217;
  long intD.12 _1218;
  long unsigned intD.14 __n.106_1221;
  long unsigned intD.14 _1222;
  long intD.12 iftmp.107_1224;
  long unsigned intD.14 _1226;
  long unsigned intD.14 _1227;
  long intD.12 _1228;
  long intD.12 iftmp.107_1229;
  long intD.12 iftmp.107_1231;
  long unsigned intD.14 __node_offset.109_1232;
  long unsigned intD.14 _1233;
  long intD.12 _1237;
  long intD.12 _1238;
  long unsigned intD.14 _1239;
  long unsigned intD.14 _1240;
  long intD.12 _1282;
  long intD.12 _1284;
  long intD.12 _1285;
  long intD.12 _1286;
  long intD.12 _1287;
  long intD.12 _1288;
  long intD.12 _1290;
  long intD.12 _1292;
  long intD.12 _1293;
  long intD.12 _1294;
  long intD.12 _1295;
  long intD.12 _1297;
  long intD.12 _1299;
  long intD.12 _1300;
  long intD.12 _1301;
  intD.9 _1306;
  intD.9 * _1310;
  intD.9 * * _1322;
  intD.9 * _1323;
  intD.9 * _1324;
  long intD.12 _1398;
  long intD.12 _1400;
  long intD.12 _1401;
  long intD.12 _1402;
  long intD.12 _1403;
  long intD.12 _1404;
  long intD.12 _1406;
  long intD.12 _1408;
  long intD.12 _1409;
  long intD.12 _1410;
  long intD.12 _1411;
  long intD.12 _1413;
  long intD.12 _1415;
  long intD.12 _1416;
  long intD.12 _1417;
  intD.9 _1422;
  intD.9 * _1423;
  intD.9 * _1426;
  intD.9 * * _1434;
  intD.9 * _1435;
  intD.9 * _1436;
  intD.9 * * _1438;
  intD.9 * _1439;
  intD.9 * _1440;
  long intD.12 pretmp_1442;
  long intD.12 _1448;
  long intD.12 pretmp_1449;
  long intD.12 prephitmp_1465;
  long intD.12 pretmp_1467;
  long intD.12 prephitmp_1468;
  long intD.12 __len.137_1507;
  intD.9 * * const prephitmp_1526;
  intD.9 * * const pretmp_1527;
  intD.9 * const prephitmp_1528;
  intD.9 * const pretmp_1529;
  intD.9 * const prephitmp_1530;
  intD.9 * const pretmp_1531;
  long intD.12 prephitmp_1534;
  long intD.12 pretmp_1535;
  intD.9 * const pretmp_1562;
  intD.9 * const prephitmp_1563;
  intD.9 * const pretmp_1564;
  intD.9 * const prephitmp_1565;
  intD.9 * const pretmp_1566;
  intD.9 * const prephitmp_1567;
  intD.9 * * const pretmp_1568;
  intD.9 * * const prephitmp_1569;
  long intD.12 pretmp_1570;
  long intD.12 pretmp_1572;
  long intD.12 pretmp_1574;
  long intD.12 pretmp_1576;
  long intD.12 prephitmp_1577;
  long intD.12 pretmp_2002;
  long intD.12 pretmp_2004;
  long intD.12 pretmp_2061;
  long intD.12 pretmp_2154;
  long intD.12 pretmp_2155;
  long intD.12 pretmp_2156;
  long intD.12 pretmp_2162;
  long intD.12 pretmp_2164;
  long intD.12 pretmp_2166;
  long intD.12 prephitmp_2167;
  long intD.12 pretmp_2168;
  long intD.12 prephitmp_2169;
  long intD.12 pretmp_2172;
  long intD.12 pretmp_2173;
  long intD.12 pretmp_2174;
  long intD.12 pretmp_2176;
  long intD.12 pretmp_2178;
  long intD.12 pretmp_2180;
  long intD.12 prephitmp_2181;
  long intD.12 pretmp_2182;
  long intD.12 prephitmp_2183;
  long intD.12 pretmp_2185;
  long intD.12 prephitmp_2187;

;;   basic block 2, loop depth 0, count 0, freq 3600, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#677ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG __xD.61510 => __pos_6(D)
  # DEBUG __yD.61511 => D#677ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _104 = MEM[(const struct _Deque_iteratorD.42908 &)__pos_6(D) clique 1 base 1]._M_nodeD.42943;
  _105 = (long intD.12) _104;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _106 = MEM[(const struct _Deque_iteratorD.42908 &)this_4(D) + 16]._M_nodeD.42943;
  _107 = (long intD.12) _106;
  _108 = _105 - _107;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _109 = _108 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _110 = _109 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _111 = _110 * 128;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _112 = MEM[(const struct _Deque_iteratorD.42908 &)__pos_6(D) clique 1 base 1]._M_curD.42940;
  _113 = (long intD.12) _112;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _114 = MEM[(const struct _Deque_iteratorD.42908 &)__pos_6(D) clique 1 base 1]._M_firstD.42941;
  _115 = (long intD.12) _114;
  _116 = _113 - _115;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _117 = _116 /[ex] 4;
  _118 = _111 + _117;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _119 = MEM[(const struct _Deque_iteratorD.42908 &)this_4(D) + 16]._M_lastD.42942;
  _120 = (long intD.12) _119;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _121 = MEM[(const struct _Deque_iteratorD.42908 &)this_4(D) + 16]._M_curD.42940;
  _122 = (long intD.12) _121;
  _123 = _120 - _122;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _124 = _123 /[ex] 4;
  _125 = _118 + _124;
  # DEBUG __elemsbeforeD.47944 => _125
  # DEBUG thisD.61506 => this_4(D)
  # DEBUG D#174ptD.0 => &MEM[(const struct dequeD.40449 *)this_4(D)].D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &MEM[(const struct dequeD.40449 *)this_4(D)].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61508 => D#175ptD.0
  # DEBUG __yD.61507 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _80 = MEM[(const struct _Deque_iteratorD.42908 &)this_4(D) + 48]._M_nodeD.42943;
  _62 = (long intD.12) _80;
  _8 = _62 - _107;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _7 = _8 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _93 = _7 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _94 = _93 * 128;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _95 = MEM[(const struct _Deque_iteratorD.42908 &)this_4(D) + 48]._M_curD.42940;
  _96 = (long intD.12) _95;
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _97 = MEM[(const struct _Deque_iteratorD.42908 &)this_4(D) + 48]._M_firstD.42941;
  _98 = (long intD.12) _97;
  _99 = _96 - _98;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _100 = _99 /[ex] 4;
  _101 = _94 + _100;
  _102 = _101 + _124;
  # RANGE [0, 18446744073709551615]
  _103 = (size_typeD.43117) _102;
  # DEBUG __lengthD.47945 => _103
  # RANGE [0, 9223372036854775807] NONZERO 9223372036854775807
  _9 = _103 >> 1;
  # RANGE [0, 18446744073709551615]
  __elemsbefore.133_10 = (long unsigned intD.14) _125;
  if (_9 > __elemsbefore.133_10)
    goto <bb 3>;
  else
    goto <bb 56>;
;;    succ:       3 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70394 => this_4(D)
  # DEBUG __nD.70395 => __n_11(D)
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _278 = this_4(D)->D.43590._M_implD.43041._M_startD.43045._M_firstD.42941;
  _279 = (long intD.12) _278;
  _280 = _122 - _279;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _281 = _280 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __vacancies_282 = (const size_typeD.43117) _281;
  # DEBUG __vacanciesD.70396 => __vacancies_282
  if (__n_11(D) > __vacancies_282)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                5 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 702, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  _283 = __n_11(D) - __vacancies_282;
  # .MEM_1476 = VDEF <.MEM_5(D)>
  # USE = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  # CLB = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  _ZNSt5dequeIiSaIiEE24_M_new_elements_at_frontEmD.43530 (this_4(D), _283);
  # VUSE <.MEM_1476>
  pretmp_1562 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_curD.42940;
  # VUSE <.MEM_1476>
  pretmp_1564 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_firstD.42941;
  # VUSE <.MEM_1476>
  pretmp_1566 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_lastD.42942;
  # VUSE <.MEM_1476>
  pretmp_1568 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_nodeD.42943;
  pretmp_1570 = (long intD.12) pretmp_1562;
  pretmp_1572 = (long intD.12) pretmp_1564;
  pretmp_1574 = pretmp_1570 - pretmp_1572;
  pretmp_1576 = pretmp_1574 /[ex] 4;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       3 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1441 = PHI <.MEM_5(D)(3), .MEM_1476(4)>
  # PT = nonlocal escaped 
  # prephitmp_1563 = PHI <_121(3), pretmp_1562(4)>
  # PT = nonlocal escaped 
  # prephitmp_1565 = PHI <_278(3), pretmp_1564(4)>
  # PT = nonlocal escaped 
  # prephitmp_1567 = PHI <_119(3), pretmp_1566(4)>
  # PT = nonlocal escaped 
  # prephitmp_1569 = PHI <_106(3), pretmp_1568(4)>
  # RANGE [-2305843009213693952, 2305843009213693951]
  # prephitmp_1577 = PHI <_281(3), pretmp_1576(4)>
  __n.120_284 = (long intD.12) __n_11(D);
  # DEBUG D#1086ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.70397 => D#1086ptD.0
  # DEBUG __nD.70398 => __n.120_284
  # DEBUG thisD.70401 => &__tmpD.70399
  # DEBUG __xD.70400 => D#1086ptD.0
  # DEBUG D#1121ptD.0 => MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_curD.42940
  # DEBUG D#1120ptD.0 => MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_firstD.42941
  # DEBUG __tmp$_M_firstD.71363 => D#1120ptD.0
  # DEBUG D#1119ptD.0 => MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_lastD.42942
  # DEBUG __tmp$_M_lastD.71364 => D#1119ptD.0
  # DEBUG D#1118ptD.0 => MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_nodeD.42943
  # DEBUG __tmp$_M_nodeD.71365 => D#1118ptD.0
  # DEBUG thisD.70403 => &__tmpD.70399
  # DEBUG __nD.70402 => __n.120_284
  _289 = -__n.120_284;
  # DEBUG thisD.70406 => &__tmpD.70399
  # DEBUG __nD.70407 => _289
  __offset_301 = prephitmp_1577 - __n.120_284;
  # DEBUG __offsetD.70408 => __offset_301
  # DEBUG __sizeD.54289 => 4
  _485 = (unsigned long) __offset_301;
  if (_485 <= 127)
    goto <bb 123>;
  else
    goto <bb 124>;
;;    succ:       123 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                124 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 802, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       124 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_306 = __offset_301 >> 7;
  goto <bb 8>;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 296, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       124 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _308 = ~_485;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _309 = _308 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _310 = (long intD.12) _309;
  # RANGE [-144115188075855872, -1]
  iftmp.117_311 = ~_310;
;;    succ:       8 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 1098, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_313 = PHI <iftmp.117_306(6), iftmp.117_311(7)>
  # DEBUG __node_offsetD.70409 => iftmp.117_313
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_314 = (long unsigned intD.14) iftmp.117_313;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _315 = __node_offset.119_314 * 8;
  # PT = nonlocal escaped 
  __new_start$_M_node_316 = prephitmp_1569 + _315;
  # DEBUG thisD.70411 => &__tmpD.70399
  # DEBUG __new_nodeD.70410 => __new_start$_M_node_316
  # DEBUG __tmp$_M_nodeD.71365 => __new_start$_M_node_316
  # VUSE <.MEM_1441>
  # PT = nonlocal escaped 
  __new_start$_M_first_317 = *__new_start$_M_node_316;
  # DEBUG __tmp$_M_firstD.71363 => __new_start$_M_first_317
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  __new_start$_M_last_318 = __new_start$_M_first_317 + 512;
  # DEBUG __tmp$_M_lastD.71364 => __new_start$_M_last_318
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _319 = iftmp.117_313 * 128;
  _320 = __offset_301 - _319;
  # RANGE [0, 18446744073709551615]
  _321 = (long unsigned intD.14) _320;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _322 = _321 * 4;
  # PT = nonlocal escaped 
  __new_start$_M_cur_323 = __new_start$_M_first_317 + _322;
  # DEBUG __tmp$_M_curD.71362 => __new_start$_M_cur_323
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       123 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __new_start$_M_cur_91 = PHI <__new_start$_M_cur_305(123), __new_start$_M_cur_323(8)>
  # PT = nonlocal escaped 
  # __new_start$_M_first_87 = PHI <prephitmp_1565(123), __new_start$_M_first_317(8)>
  # PT = nonlocal escaped 
  # __new_start$_M_last_2267 = PHI <prephitmp_1567(123), __new_start$_M_last_318(8)>
  # PT = nonlocal escaped 
  # __new_start$_M_node_2266 = PHI <prephitmp_1569(123), __new_start$_M_node_316(8)>
  # DEBUG __tmp$_M_nodeD.71365 => __new_start$_M_node_2266
  # DEBUG __tmp$_M_lastD.71364 => __new_start$_M_last_2267
  # DEBUG __tmp$_M_firstD.71363 => __new_start$_M_first_87
  # DEBUG __tmp$_M_curD.71362 => __new_start$_M_cur_91
  # DEBUG thisD.70405 => &__new_startD.47946
  # DEBUG __xD.70404 => NULL
  # DEBUG __new_start$_M_curD.71334 => __new_start$_M_cur_91
  # DEBUG __new_start$_M_firstD.71335 => __new_start$_M_first_87
  # DEBUG __new_start$_M_lastD.71336 => __new_start$_M_last_2267
  # DEBUG __new_start$_M_nodeD.71337 => __new_start$_M_node_2266
  # .MEM_1491 = VDEF <.MEM_1441>
  __tmpD.70399 ={v} {CLOBBER};
  # DEBUG D#678ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61513 => &__old_startD.47948
  # DEBUG __xD.61514 => D#678ptD.0
  # DEBUG __old_start$_M_curD.61577 => D#1121ptD.0
  # DEBUG __old_start$_M_firstD.61578 => D#1120ptD.0
  # DEBUG __old_start$_M_lastD.61579 => D#1119ptD.0
  # DEBUG __old_start$_M_nodeD.61580 => D#1118ptD.0
  # DEBUG D#1087ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.70387 => D#1087ptD.0
  # DEBUG __nD.70388 => _125
  # DEBUG thisD.70391 => &__tmpD.70389
  # DEBUG __xD.70390 => D#1087ptD.0
  # DEBUG __tmp$_M_firstD.71359 => D#1120ptD.0
  # DEBUG __tmp$_M_lastD.71360 => D#1119ptD.0
  # DEBUG __tmp$_M_nodeD.71361 => D#1118ptD.0
  # DEBUG thisD.70413 => &__tmpD.70389
  # DEBUG __nD.70414 => _125
  __offset_330 = _125 + prephitmp_1577;
  # DEBUG __offsetD.70415 => __offset_330
  # DEBUG __sizeD.54289 => 4
  _483 = (unsigned long) __offset_330;
  if (_483 <= 127)
    goto <bb 125>;
  else
    goto <bb 126>;
;;    succ:       125 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                126 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 802, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       126 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_335 = __offset_330 >> 7;
  goto <bb 12>;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 296, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       126 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _337 = ~_483;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _338 = _337 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _339 = (long intD.12) _338;
  # RANGE [-144115188075855872, -1]
  iftmp.117_340 = ~_339;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 1098, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_342 = PHI <iftmp.117_335(10), iftmp.117_340(11)>
  # DEBUG __node_offsetD.70416 => iftmp.117_342
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_343 = (long unsigned intD.14) iftmp.117_342;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _344 = __node_offset.119_343 * 8;
  # PT = nonlocal escaped 
  SR.1747_345 = prephitmp_1569 + _344;
  # DEBUG thisD.70418 => &__tmpD.70389
  # DEBUG __new_nodeD.70417 => SR.1747_345
  # DEBUG __tmp$_M_nodeD.71361 => SR.1747_345
  # VUSE <.MEM_1491>
  # PT = nonlocal escaped 
  SR.1745_346 = *SR.1747_345;
  # DEBUG __tmp$_M_firstD.71359 => SR.1745_346
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  SR.1746_347 = SR.1745_346 + 512;
  # DEBUG __tmp$_M_lastD.71360 => SR.1746_347
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _348 = iftmp.117_342 * 128;
  _349 = __offset_330 - _348;
  # RANGE [0, 18446744073709551615]
  _350 = (long unsigned intD.14) _349;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _351 = _350 * 4;
  # PT = nonlocal escaped 
  SR.1744_352 = SR.1745_346 + _351;
  # DEBUG __tmp$_M_curD.71358 => SR.1744_352
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       125 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1744_1511 = PHI <SR.1744_334(125), SR.1744_352(12)>
  # PT = nonlocal escaped 
  # SR.1745_1496 = PHI <prephitmp_1565(125), SR.1745_346(12)>
  # PT = nonlocal escaped 
  # SR.1746_1481 = PHI <prephitmp_1567(125), SR.1746_347(12)>
  # PT = nonlocal escaped 
  # SR.1747_92 = PHI <prephitmp_1569(125), SR.1747_345(12)>
  # DEBUG __tmp$_M_nodeD.71361 => SR.1747_92
  # DEBUG __tmp$_M_lastD.71360 => SR.1746_1481
  # DEBUG __tmp$_M_firstD.71359 => SR.1745_1496
  # DEBUG __tmp$_M_curD.71358 => SR.1744_1511
  # DEBUG thisD.70393 => &D.47950
  # DEBUG __xD.70392 => NULL
  # .MEM_1506 = VDEF <.MEM_1491>
  __tmpD.70389 ={v} {CLOBBER};
  # .MEM_1781 = VDEF <.MEM_1506>
  MEM[(struct iteratorD.43111 &)__pos_6(D) clique 48 base 1] = SR.1744_1511;
  # .MEM_1779 = VDEF <.MEM_1781>
  MEM[(struct iteratorD.43111 &)__pos_6(D) + 8 clique 48 base 1] = SR.1745_1496;
  # .MEM_1778 = VDEF <.MEM_1779>
  MEM[(struct iteratorD.43111 &)__pos_6(D) + 16 clique 48 base 1] = SR.1746_1481;
  # .MEM_1776 = VDEF <.MEM_1778>
  MEM[(struct iteratorD.43111 &)__pos_6(D) + 24 clique 48 base 1] = SR.1747_92;
  if (_125 >= __n.120_284)
    goto <bb 14>;
  else
    goto <bb 32>;
;;    succ:       14 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       13 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70456 => D#1087ptD.0
  # DEBUG __nD.70457 => __n.120_284
  # DEBUG thisD.70460 => &__tmpD.70458
  # DEBUG __xD.70459 => D#1087ptD.0
  # VUSE <.MEM_1776>
  # PT = nonlocal escaped 
  _22 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_curD.42940;
  # VUSE <.MEM_1776>
  # PT = nonlocal escaped 
  __tmp$_M_first_385 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_firstD.42941;
  # DEBUG __tmp$_M_firstD.71371 => __tmp$_M_first_385
  # VUSE <.MEM_1776>
  # PT = nonlocal escaped 
  __tmp$_M_last_386 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_lastD.42942;
  # DEBUG __tmp$_M_lastD.71372 => __tmp$_M_last_386
  # VUSE <.MEM_1776>
  # PT = nonlocal escaped 
  __tmp$_M_node_387 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_nodeD.42943;
  # DEBUG __tmp$_M_nodeD.71373 => __tmp$_M_node_387
  # DEBUG thisD.70463 => &__tmpD.70458
  # DEBUG __nD.70464 => __n.120_284
  _393 = (long intD.12) _22;
  _395 = (long intD.12) __tmp$_M_first_385;
  _396 = _393 - _395;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _397 = _396 /[ex] 4;
  __offset_398 = __n.120_284 + _397;
  # DEBUG __offsetD.70465 => __offset_398
  # DEBUG __sizeD.54289 => 4
  _482 = (unsigned long) __offset_398;
  if (_482 <= 127)
    goto <bb 127>;
  else
    goto <bb 128>;
;;    succ:       127 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                128 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 401, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       128 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_403 = __offset_398 >> 7;
  goto <bb 17>;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 148, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       128 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _405 = ~_482;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _406 = _405 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _407 = (long intD.12) _406;
  # RANGE [-144115188075855872, -1]
  iftmp.117_408 = ~_407;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 549, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_410 = PHI <iftmp.117_403(15), iftmp.117_408(16)>
  # DEBUG __node_offsetD.70466 => iftmp.117_410
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_411 = (long unsigned intD.14) iftmp.117_410;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _412 = __node_offset.119_411 * 8;
  # PT = nonlocal escaped 
  __tmp$_M_node_413 = __tmp$_M_node_387 + _412;
  # DEBUG thisD.70468 => &__tmpD.70458
  # DEBUG __new_nodeD.70467 => __tmp$_M_node_413
  # DEBUG __tmp$_M_nodeD.71373 => __tmp$_M_node_413
  # VUSE <.MEM_1776>
  # PT = nonlocal escaped 
  __tmp$_M_first_414 = *__tmp$_M_node_413;
  # DEBUG __tmp$_M_firstD.71371 => __tmp$_M_first_414
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  __tmp$_M_last_415 = __tmp$_M_first_414 + 512;
  # DEBUG __tmp$_M_lastD.71372 => __tmp$_M_last_415
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _416 = iftmp.117_410 * 128;
  _417 = __offset_398 - _416;
  # RANGE [0, 18446744073709551615]
  _418 = (long unsigned intD.14) _417;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _419 = _418 * 4;
  # PT = nonlocal escaped 
  __tmp$_M_cur_420 = __tmp$_M_first_414 + _419;
  # DEBUG __tmp$_M_curD.71370 => __tmp$_M_cur_420
  pretmp_2172 = (long intD.12) __tmp$_M_node_413;
  pretmp_2173 = (long intD.12) __tmp$_M_node_387;
  pretmp_2174 = pretmp_2172 - pretmp_2173;
  pretmp_2176 = pretmp_2174 /[ex] 8;
  pretmp_2178 = pretmp_2176 + -1;
  pretmp_2180 = pretmp_2178 * 128;
  pretmp_2182 = (long intD.12) __tmp$_M_first_414;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       127 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __tmp$_M_cur_2259 = PHI <__tmp$_M_cur_402(127), __tmp$_M_cur_420(17)>
  # PT = nonlocal escaped 
  # __tmp$_M_first_2258 = PHI <__tmp$_M_first_385(127), __tmp$_M_first_414(17)>
  # PT = nonlocal escaped 
  # __tmp$_M_last_2256 = PHI <__tmp$_M_last_386(127), __tmp$_M_last_415(17)>
  # PT = nonlocal escaped 
  # __tmp$_M_node_2255 = PHI <__tmp$_M_node_387(127), __tmp$_M_node_413(17)>
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  # prephitmp_2181 = PHI <-128(127), pretmp_2180(17)>
  # prephitmp_2183 = PHI <_395(127), pretmp_2182(17)>
  # DEBUG __tmp$_M_nodeD.71373 => __tmp$_M_node_2255
  # DEBUG __tmp$_M_lastD.71372 => __tmp$_M_last_2256
  # DEBUG __tmp$_M_firstD.71371 => __tmp$_M_first_2258
  # DEBUG __tmp$_M_curD.71370 => __tmp$_M_cur_2259
  # DEBUG thisD.70462 => &__start_nD.47951
  # DEBUG __xD.70461 => NULL
  # .MEM_1521 = VDEF <.MEM_1776>
  __tmpD.70458 ={v} {CLOBBER};
  # DEBUG D#679ptD.0 => &this_4(D)->D.43590
  # DEBUG thisD.61527 => D#679ptD.0
  # DEBUG thisD.61525 => &D.47960
  # DEBUG __xD.61526 => &__new_startD.47946
  # DEBUG thisD.61523 => &D.47959
  # DEBUG __xD.61524 => &__start_nD.47951
  # DEBUG D#680ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61521 => &D.47958
  # DEBUG __xD.61522 => D#680ptD.0
  # DEBUG __firstD.70442 => &D.47958
  # DEBUG __lastD.70443 => &D.47959
  # DEBUG __resultD.70444 => &D.47960
  # DEBUG __allocD.70445 => D#676ptD.0
  # DEBUG D#675ptD.0 => D#676ptD.0
  # DEBUG thisD.70447 => &D.70453
  # DEBUG __xD.70446 => &D.47960
  # DEBUG thisD.70449 => &D.70454
  # DEBUG __xD.70448 => &D.47959
  # DEBUG thisD.70451 => &D.70455
  # DEBUG __xD.70450 => &D.47958
  # DEBUG D#674ptD.0 => D#675ptD.0
  # DEBUG __firstD.70470 => &D.70455
  # DEBUG __lastD.70471 => &D.70454
  # DEBUG __resultD.70472 => &D.70453
  # DEBUG D.70473 => D#674ptD.0
  # DEBUG thisD.70475 => &D.70480
  # DEBUG __xD.70474 => &D.70453
  # DEBUG thisD.70477 => &D.70481
  # DEBUG __xD.70476 => &D.70454
  # DEBUG thisD.70479 => &D.70482
  # DEBUG __xD.70478 => &D.70455
  # DEBUG __firstD.70483 => &D.70482
  # DEBUG __lastD.70484 => &D.70481
  # DEBUG __resultD.70485 => &D.70480
  # DEBUG __assignableD.70488 => 1
  # DEBUG thisD.70490 => &D.70497
  # DEBUG __xD.70489 => &D.70480
  # DEBUG thisD.70492 => &D.70496
  # DEBUG __xD.70491 => &D.70481
  # DEBUG thisD.70494 => &D.70495
  # DEBUG __xD.70493 => &D.70482
  # DEBUG __firstD.70498 => &D.70495
  # DEBUG __lastD.70499 => &D.70496
  # DEBUG __resultD.70500 => &D.70497
  # DEBUG thisD.70502 => &D.70509
  # DEBUG __xD.70501 => &D.70497
  # DEBUG thisD.70504 => &D.70508
  # DEBUG __xD.70503 => &D.70496
  # DEBUG thisD.70506 => &D.70507
  # DEBUG __xD.70505 => &D.70495
  # DEBUG __firstD.70510 => &D.70507
  # DEBUG __lastD.70511 => &D.70508
  # DEBUG __resultD.70512 => &D.70509
  # DEBUG thisD.70514 => &D.70529
  # DEBUG __xD.70513 => &D.70509
  # DEBUG thisD.70516 => NULL
  # DEBUG __xD.70515 => &D.70508
  # DEBUG __itD.70517 => NULL
  # DEBUG thisD.61360 => NULL
  # DEBUG __xD.61359 => NULL
  # DEBUG __itD.70518 => NULL
  # DEBUG thisD.70520 => &D.70528
  # DEBUG __xD.70519 => NULL
  # DEBUG thisD.70522 => NULL
  # DEBUG __xD.70521 => &D.70507
  # DEBUG __itD.70523 => NULL
  # DEBUG thisD.61352 => NULL
  # DEBUG __xD.61351 => NULL
  # DEBUG __itD.70524 => NULL
  # DEBUG thisD.70526 => &D.70527
  # DEBUG __xD.70525 => NULL
  # DEBUG __firstD.70530 => &D.70527
  # DEBUG __lastD.70531 => &D.70528
  # DEBUG __resultD.70532 => &D.70529
  # DEBUG thisD.70534 => NULL
  # DEBUG __xD.70533 => &D.70529
  # DEBUG __itD.70535 => NULL
  # DEBUG thisD.61328 => NULL
  # DEBUG __xD.61327 => NULL
  # DEBUG __itD.70536 => NULL
  # DEBUG thisD.70538 => &D.70553
  # DEBUG __xD.70537 => NULL
  # DEBUG thisD.70540 => NULL
  # DEBUG __xD.70539 => &D.70528
  # DEBUG __itD.70541 => NULL
  # DEBUG thisD.61320 => NULL
  # DEBUG __xD.61319 => NULL
  # DEBUG __itD.70542 => NULL
  # DEBUG thisD.70544 => &D.70552
  # DEBUG __xD.70543 => NULL
  # DEBUG thisD.70546 => NULL
  # DEBUG __xD.70545 => &D.70527
  # DEBUG __itD.70547 => NULL
  # DEBUG thisD.61312 => NULL
  # DEBUG __xD.61311 => NULL
  # DEBUG __itD.70548 => NULL
  # DEBUG thisD.70550 => &D.70551
  # DEBUG __xD.70549 => NULL
  # DEBUG __firstD.70554 => &D.70551
  # DEBUG __lastD.70555 => &D.70552
  # DEBUG __resultD.70556 => &D.70553
  # DEBUG __simpleD.70560 => 0
  # DEBUG thisD.70562 => &D.70569
  # DEBUG __xD.70561 => &D.70553
  # DEBUG thisD.70564 => &D.70568
  # DEBUG __xD.70563 => &D.70552
  # DEBUG thisD.70566 => &D.70567
  # DEBUG __xD.70565 => &D.70551
  # DEBUG __firstD.70570 => &D.70567
  # DEBUG __lastD.70571 => &D.70568
  # DEBUG __resultD.70572 => &D.70569
  # DEBUG __xD.70580 => &D.70568
  # DEBUG __yD.70579 => &D.70567
  # DEBUG __sizeD.54289 => 4
  _502 = (long intD.12) __tmp$_M_cur_2259;
  _505 = _502 - prephitmp_2183;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _506 = _505 /[ex] 4;
  _507 = _506 + prephitmp_2181;
  _509 = (long intD.12) __tmp$_M_last_386;
  _512 = _509 - _393;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _513 = _512 /[ex] 4;
  __n_514 = _507 + _513;
  # DEBUG __nD.70576 => __n_514
  # DEBUG __nD.70576 => __n_514
  if (__n_514 <= 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2184 = PHI <.MEM_1521(18), .MEM_1995(26)>
  # DEBUG thisD.70575 => &D.70452
  # DEBUG __xD.70574 => &D.70569
  # .MEM_1621 = VDEF <.MEM_2184>
  D.70567 ={v} {CLOBBER};
  # .MEM_1622 = VDEF <.MEM_1621>
  D.70568 ={v} {CLOBBER};
  # .MEM_1623 = VDEF <.MEM_1622>
  D.70569 ={v} {CLOBBER};
  # .MEM_1624 = VDEF <.MEM_1623>
  D.70551 ={v} {CLOBBER};
  # .MEM_1625 = VDEF <.MEM_1624>
  D.70552 ={v} {CLOBBER};
  # .MEM_1626 = VDEF <.MEM_1625>
  D.70553 ={v} {CLOBBER};
  # .MEM_1627 = VDEF <.MEM_1626>
  D.70527 ={v} {CLOBBER};
  # .MEM_1628 = VDEF <.MEM_1627>
  D.70528 ={v} {CLOBBER};
  # .MEM_1629 = VDEF <.MEM_1628>
  D.70529 ={v} {CLOBBER};
  # .MEM_1630 = VDEF <.MEM_1629>
  D.70507 ={v} {CLOBBER};
  # .MEM_1631 = VDEF <.MEM_1630>
  D.70508 ={v} {CLOBBER};
  # .MEM_1632 = VDEF <.MEM_1631>
  D.70509 ={v} {CLOBBER};
  # .MEM_1633 = VDEF <.MEM_1632>
  D.70495 ={v} {CLOBBER};
  # .MEM_1634 = VDEF <.MEM_1633>
  D.70496 ={v} {CLOBBER};
  # .MEM_1635 = VDEF <.MEM_1634>
  D.70497 ={v} {CLOBBER};
  # .MEM_1636 = VDEF <.MEM_1635>
  D.70482 ={v} {CLOBBER};
  # .MEM_1637 = VDEF <.MEM_1636>
  D.70481 ={v} {CLOBBER};
  # .MEM_1638 = VDEF <.MEM_1637>
  D.70480 ={v} {CLOBBER};
  # .MEM_1639 = VDEF <.MEM_1638>
  D.70455 ={v} {CLOBBER};
  # .MEM_1640 = VDEF <.MEM_1639>
  D.70454 ={v} {CLOBBER};
  # .MEM_1641 = VDEF <.MEM_1640>
  D.70453 ={v} {CLOBBER};
  # .MEM_23 = VDEF <.MEM_1641>
  D.47958 ={v} {CLOBBER};
  # .MEM_24 = VDEF <.MEM_23>
  D.47959 ={v} {CLOBBER};
  # .MEM_25 = VDEF <.MEM_24>
  D.47960 ={v} {CLOBBER};
  # .MEM_1605 = VDEF <.MEM_25>
  MEM[(struct dequeD.40449 *)this_4(D) + 16B] = __new_start$_M_cur_91;
  # .MEM_1604 = VDEF <.MEM_1605>
  MEM[(struct dequeD.40449 *)this_4(D) + 24B] = __new_start$_M_first_87;
  # .MEM_1602 = VDEF <.MEM_1604>
  MEM[(struct dequeD.40449 *)this_4(D) + 32B] = __new_start$_M_last_2267;
  # .MEM_1597 = VDEF <.MEM_1602>
  MEM[(struct dequeD.40449 *)this_4(D) + 40B] = __new_start$_M_node_2266;
  # DEBUG thisD.61519 => &D.47972
  # DEBUG __xD.61520 => &__old_startD.47948
  # DEBUG thisD.61517 => &D.47971
  # DEBUG __xD.61518 => __pos_6(D)
  # VUSE <.MEM_1597>
  # PT = nonlocal escaped 
  _28 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_curD.42940;
  # VUSE <.MEM_1597>
  # PT = nonlocal escaped 
  _133 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_firstD.42941;
  # VUSE <.MEM_1597>
  # PT = nonlocal escaped 
  _134 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_lastD.42942;
  # VUSE <.MEM_1597>
  # PT = nonlocal escaped 
  _135 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_nodeD.42943;
  # DEBUG thisD.61515 => &D.47970
  # DEBUG __xD.61516 => &__start_nD.47951
  # DEBUG __firstD.70429 => &D.47970
  # DEBUG __lastD.70430 => &D.47971
  # DEBUG __resultD.70431 => &D.47972
  # DEBUG thisD.70433 => &D.70441
  # DEBUG __xD.70432 => &D.47972
  # .MEM_1642 = VDEF <.MEM_1597>
  D.70441._M_curD.42940 = prephitmp_1563;
  # .MEM_1643 = VDEF <.MEM_1642>
  D.70441._M_firstD.42941 = prephitmp_1565;
  # .MEM_1644 = VDEF <.MEM_1643>
  D.70441._M_lastD.42942 = prephitmp_1567;
  # .MEM_1645 = VDEF <.MEM_1644>
  D.70441._M_nodeD.42943 = prephitmp_1569;
  # DEBUG thisD.70435 => &D.70440
  # DEBUG __xD.70434 => &D.47971
  # .MEM_1646 = VDEF <.MEM_1645>
  D.70440._M_curD.44737 = _28;
  # .MEM_1647 = VDEF <.MEM_1646>
  D.70440._M_firstD.44738 = _133;
  # .MEM_1648 = VDEF <.MEM_1647>
  D.70440._M_lastD.44739 = _134;
  # .MEM_1649 = VDEF <.MEM_1648>
  D.70440._M_nodeD.44740 = _135;
  # DEBUG thisD.70437 => &D.70439
  # DEBUG __xD.70436 => &D.47970
  # .MEM_1650 = VDEF <.MEM_1649>
  D.70439._M_curD.44737 = __tmp$_M_cur_2259;
  # .MEM_1651 = VDEF <.MEM_1650>
  D.70439._M_firstD.44738 = __tmp$_M_first_2258;
  # .MEM_1652 = VDEF <.MEM_1651>
  D.70439._M_lastD.44739 = __tmp$_M_last_2256;
  # .MEM_1653 = VDEF <.MEM_1652>
  D.70439._M_nodeD.44740 = __tmp$_M_node_2255;
  # .MEM_1654 = VDEF <.MEM_1653>
  # USE = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  # CLB = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  D.70438 = _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (D.70439, D.70440, &D.70441); [return slot optimization]
  # .MEM_1655 = VDEF <.MEM_1654>
  D.70439 ={v} {CLOBBER};
  # .MEM_1656 = VDEF <.MEM_1655>
  D.70440 ={v} {CLOBBER};
  # .MEM_1657 = VDEF <.MEM_1656>
  D.70441 ={v} {CLOBBER};
  # .MEM_30 = VDEF <.MEM_1657>
  D.47970 ={v} {CLOBBER};
  # .MEM_31 = VDEF <.MEM_30>
  D.47971 ={v} {CLOBBER};
  # .MEM_32 = VDEF <.MEM_31>
  D.47972 ={v} {CLOBBER};
  # DEBUG thisD.70420 => __pos_6(D)
  # DEBUG __nD.70421 => __n.120_284
  # DEBUG thisD.70424 => &__tmpD.70422
  # DEBUG __xD.70423 => __pos_6(D)
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  _353 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 47 base 1]._M_curD.42940;
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __tmp$_M_first_354 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 47 base 1]._M_firstD.42941;
  # DEBUG __tmp$_M_firstD.71367 => __tmp$_M_first_354
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __tmp$_M_last_355 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 47 base 1]._M_lastD.42942;
  # DEBUG __tmp$_M_lastD.71368 => __tmp$_M_last_355
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __tmp$_M_node_356 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 47 base 1]._M_nodeD.42943;
  # DEBUG __tmp$_M_nodeD.71369 => __tmp$_M_node_356
  # DEBUG thisD.70426 => &__tmpD.70422
  # DEBUG __nD.70425 => __n.120_284
  # DEBUG thisD.70589 => &__tmpD.70422
  # DEBUG __nD.70590 => _289
  _538 = (long intD.12) _353;
  _540 = (long intD.12) __tmp$_M_first_354;
  _541 = _538 - _540;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _542 = _541 /[ex] 4;
  __offset_543 = _542 - __n.120_284;
  # DEBUG __offsetD.70591 => __offset_543
  # DEBUG __sizeD.54289 => 4
  _480 = (unsigned long) __offset_543;
  if (_480 <= 127)
    goto <bb 129>;
  else
    goto <bb 130>;
;;    succ:       129 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                130 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       18 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1477 = PHI <__n_514(20), __n_524(27)>
  # .MEM_253 = PHI <.MEM_1521(20), .MEM_1606(27)>
  # PT = nonlocal escaped 
  # SR.1780_2253 = PHI <_22(20), SR.1780_2248(27)>
  # PT = nonlocal escaped 
  # SR.1781_2247 = PHI <__tmp$_M_last_386(20), SR.1781_2245(27)>
  # PT = nonlocal escaped 
  # SR.1782_2152 = PHI <__tmp$_M_node_387(20), SR.1782_2151(27)>
  # PT = nonlocal escaped 
  # SR.1783_2149 = PHI <__new_start$_M_cur_91(20), SR.1783_2148(27)>
  # PT = nonlocal escaped 
  # SR.1784_2147 = PHI <__new_start$_M_last_2267(20), SR.1784_2146(27)>
  # PT = nonlocal escaped 
  # SR.1785_2144 = PHI <__new_start$_M_node_2266(20), SR.1785_2143(27)>
  # DEBUG __nD.70576 => __n_1477
  # DEBUG D#100ptD.0 => &D.70569
  # DEBUG thisD.61292 => D#100ptD.0
  # DEBUG D#100ptD.0 => &D.70567
  # DEBUG thisD.61289 => D#100ptD.0
  # VUSE <.MEM_253>
  _518 = *SR.1780_2253;
  # .MEM_1606 = VDEF <.MEM_253>
  *SR.1783_2149 = _518;
  # DEBUG thisD.70577 => &D.70567
  # PT = nonlocal escaped 
  _519 = SR.1780_2253 + 4;
  if (_519 == SR.1781_2247)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70581 => &D.70567
  # PT = nonlocal escaped 
  _530 = SR.1782_2152 + 8;
  # DEBUG thisD.70583 => &D.70567
  # DEBUG __new_nodeD.70582 => _530
  # VUSE <.MEM_1606>
  # PT = nonlocal escaped 
  _531 = MEM[(intD.9 * *)SR.1782_2152 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _532 = _531 + 512;
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1780_2248 = PHI <_519(21), _531(22)>
  # PT = nonlocal escaped 
  # SR.1781_2245 = PHI <SR.1781_2247(21), _532(22)>
  # PT = nonlocal escaped 
  # SR.1782_2151 = PHI <SR.1782_2152(21), _530(22)>
  # DEBUG thisD.70578 => &D.70569
  # PT = nonlocal escaped 
  _522 = SR.1783_2149 + 4;
  if (_522 == SR.1784_2147)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70585 => &D.70569
  # PT = nonlocal escaped 
  _534 = SR.1785_2144 + 8;
  # DEBUG thisD.70587 => &D.70569
  # DEBUG __new_nodeD.70586 => _534
  # VUSE <.MEM_1606>
  # PT = nonlocal escaped 
  _535 = MEM[(intD.9 * *)SR.1785_2144 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _536 = _535 + 512;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1783_2148 = PHI <_522(23), _535(24)>
  # PT = nonlocal escaped 
  # SR.1784_2146 = PHI <SR.1784_2147(23), _536(24)>
  # PT = nonlocal escaped 
  # SR.1785_2143 = PHI <SR.1785_2144(23), _534(24)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_524 = __n_1477 + -1;
  # DEBUG __nD.70576 => __n_524
  # DEBUG __nD.70576 => __n_524
  if (__n_524 <= 0)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1995 = PHI <.MEM_1606(25)>
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 401, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       130 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_548 = __offset_543 >> 7;
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 148, maybe hot
;;    prev block 28, next block 30, flags: (NEW, REACHABLE)
;;    pred:       130 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _550 = ~_480;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _551 = _550 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _552 = (long intD.12) _551;
  # RANGE [-144115188075855872, -1]
  iftmp.117_553 = ~_552;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 549, maybe hot
;;    prev block 29, next block 31, flags: (NEW, REACHABLE)
;;    pred:       28 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_555 = PHI <iftmp.117_548(28), iftmp.117_553(29)>
  # DEBUG __node_offsetD.70592 => iftmp.117_555
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_556 = (long unsigned intD.14) iftmp.117_555;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _557 = __node_offset.119_556 * 8;
  # PT = nonlocal escaped 
  __tmp$_M_node_558 = __tmp$_M_node_356 + _557;
  # DEBUG thisD.70594 => &__tmpD.70422
  # DEBUG __new_nodeD.70593 => __tmp$_M_node_558
  # DEBUG __tmp$_M_nodeD.71369 => __tmp$_M_node_558
  # VUSE <.MEM_32>
  # PT = nonlocal escaped 
  __tmp$_M_first_559 = *__tmp$_M_node_558;
  # DEBUG __tmp$_M_firstD.71367 => __tmp$_M_first_559
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  __tmp$_M_last_560 = __tmp$_M_first_559 + 512;
  # DEBUG __tmp$_M_lastD.71368 => __tmp$_M_last_560
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _561 = iftmp.117_555 * 128;
  _562 = __offset_543 - _561;
  # RANGE [0, 18446744073709551615]
  _563 = (long unsigned intD.14) _562;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _564 = _563 * 4;
  # PT = nonlocal escaped 
  __tmp$_M_cur_565 = __tmp$_M_first_559 + _564;
  # DEBUG __tmp$_M_curD.71366 => __tmp$_M_cur_565
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       129 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __tmp$_M_cur_2264 = PHI <__tmp$_M_cur_547(129), __tmp$_M_cur_565(30)>
  # PT = nonlocal escaped 
  # __tmp$_M_first_2263 = PHI <__tmp$_M_first_354(129), __tmp$_M_first_559(30)>
  # PT = nonlocal escaped 
  # __tmp$_M_last_2262 = PHI <__tmp$_M_last_355(129), __tmp$_M_last_560(30)>
  # PT = nonlocal escaped 
  # __tmp$_M_node_2261 = PHI <__tmp$_M_node_356(129), __tmp$_M_node_558(30)>
  # DEBUG __tmp$_M_nodeD.71369 => __tmp$_M_node_2261
  # DEBUG __tmp$_M_lastD.71368 => __tmp$_M_last_2262
  # DEBUG __tmp$_M_firstD.71367 => __tmp$_M_first_2263
  # DEBUG __tmp$_M_curD.71366 => __tmp$_M_cur_2264
  # DEBUG thisD.70428 => &D.47974
  # DEBUG __xD.70427 => NULL
  # .MEM_1668 = VDEF <.MEM_32>
  D.47974._M_curD.42940 = __tmp$_M_cur_2264;
  # .MEM_1669 = VDEF <.MEM_1668>
  D.47974._M_firstD.42941 = __tmp$_M_first_2263;
  # .MEM_1670 = VDEF <.MEM_1669>
  D.47974._M_lastD.42942 = __tmp$_M_last_2262;
  # .MEM_1671 = VDEF <.MEM_1670>
  D.47974._M_nodeD.42943 = __tmp$_M_node_2261;
  # .MEM_1672 = VDEF <.MEM_1671>
  __tmpD.70422 ={v} {CLOBBER};
  # .MEM_34 = VDEF <.MEM_1672>
  # USE = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  # CLB = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (__firstD.47913, __lastD.47914, &D.47974);
  # .MEM_35 = VDEF <.MEM_34>
  D.47974 ={v} {CLOBBER};
  # .MEM_36 = VDEF <.MEM_35>
  __start_nD.47951 ={v} {CLOBBER};
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       13 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_37 = VDEF <.MEM_1776>
  __midD.47978 = __firstD.47913;
  # VUSE <.MEM_37>
  # PT = nonlocal 
  __mid$_M_cur_1508 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47913 clique 48 base 0];
  # DEBUG __mid$_M_curD.71342 => __mid$_M_cur_1508
  # VUSE <.MEM_37>
  # PT = nonlocal 
  __mid$_M_first_17 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47913 + 8B clique 48 base 0];
  # DEBUG __mid$_M_firstD.71343 => __mid$_M_first_17
  # VUSE <.MEM_37>
  # PT = nonlocal 
  __mid$_M_last_16 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47913 + 16B clique 48 base 0];
  # DEBUG __mid$_M_lastD.71344 => __mid$_M_last_16
  # VUSE <.MEM_37>
  # PT = nonlocal 
  __mid$_M_node_1505 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47913 + 24B clique 48 base 0];
  # DEBUG __mid$_M_nodeD.71345 => __mid$_M_node_1505
  # RANGE [1, 9223372036854775807] NONZERO 9223372036854775807
  _38 = __n.120_284 - _125;
  # DEBUG __iD.61539 => &__midD.47978
  # DEBUG __nD.61540 => _38
  # DEBUG __dD.61541 => _38
  # DEBUG D#630ptD.0 => &__midD.47978
  # DEBUG D.61175 => D#630ptD.0
  # DEBUG __iD.61543 => &__midD.47978
  # DEBUG __nD.61542 => _38
  # DEBUG thisD.70622 => &__midD.47978
  # DEBUG __nD.70623 => _38
  _582 = (long intD.12) __mid$_M_cur_1508;
  _584 = (long intD.12) __mid$_M_first_17;
  _585 = _582 - _584;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _586 = _585 /[ex] 4;
  # RANGE [-2305843009213693951, 9223372036854775807]
  __offset_587 = _38 + _586;
  # DEBUG __offsetD.70624 => __offset_587
  # DEBUG __sizeD.60431 => 4
  _481 = (unsigned long) __offset_587;
  if (_481 <= 127)
    goto <bb 131>;
  else
    goto <bb 132>;
;;    succ:       131 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                132 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 401, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       132 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.107_592 = __offset_587 >> 7;
  goto <bb 35>;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 148, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       132 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[2305843009213693951, 18446744073709551614]
  _594 = ~_481;
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _595 = _594 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _596 = (long intD.12) _595;
  # RANGE [-144115188075855872, -1]
  iftmp.107_597 = ~_596;
;;    succ:       35 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 549, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                34 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.107_599 = PHI <iftmp.107_592(33), iftmp.107_597(34)>
  # DEBUG __node_offsetD.70625 => iftmp.107_599
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.109_600 = (long unsigned intD.14) iftmp.107_599;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _601 = __node_offset.109_600 * 8;
  # PT = nonlocal 
  __mid$_M_node_602 = __mid$_M_node_1505 + _601;
  # DEBUG thisD.70627 => &__midD.47978
  # DEBUG __new_nodeD.70626 => __mid$_M_node_602
  # DEBUG __mid$_M_nodeD.71345 => __mid$_M_node_602
  # VUSE <.MEM_37>
  # PT = nonlocal escaped 
  __mid$_M_first_603 = *__mid$_M_node_602;
  # DEBUG __mid$_M_firstD.71343 => __mid$_M_first_603
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __mid$_M_last_604 = __mid$_M_first_603 + 512;
  # DEBUG __mid$_M_lastD.71344 => __mid$_M_last_604
  # DEBUG __sizeD.60431 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _605 = iftmp.107_599 * 128;
  _606 = __offset_587 - _605;
  # RANGE [0, 18446744073709551615]
  _607 = (long unsigned intD.14) _606;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _608 = _607 * 4;
  # PT = nonlocal escaped 
  __mid$_M_cur_609 = __mid$_M_first_603 + _608;
  # DEBUG __mid$_M_curD.71342 => __mid$_M_cur_609
  pretmp_2154 = (long intD.12) __mid$_M_node_602;
  pretmp_2155 = (long intD.12) __mid$_M_node_1505;
  pretmp_2156 = pretmp_2154 - pretmp_2155;
  pretmp_2162 = pretmp_2156 /[ex] 8;
  pretmp_2164 = pretmp_2162 + -1;
  pretmp_2166 = pretmp_2164 * 128;
  pretmp_2168 = (long intD.12) __mid$_M_first_603;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       131 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __mid$_M_cur_2090 = PHI <__mid$_M_cur_591(131), __mid$_M_cur_609(35)>
  # PT = nonlocal escaped 
  # __mid$_M_first_2073 = PHI <__mid$_M_first_17(131), __mid$_M_first_603(35)>
  # PT = nonlocal escaped 
  # __mid$_M_last_2067 = PHI <__mid$_M_last_16(131), __mid$_M_last_604(35)>
  # PT = nonlocal 
  # __mid$_M_node_1915 = PHI <__mid$_M_node_1505(131), __mid$_M_node_602(35)>
  # prephitmp_2167 = PHI <-128(131), pretmp_2166(35)>
  # prephitmp_2169 = PHI <_584(131), pretmp_2168(35)>
  # DEBUG __mid$_M_nodeD.71345 => __mid$_M_node_1915
  # DEBUG __mid$_M_lastD.71344 => __mid$_M_last_2067
  # DEBUG __mid$_M_firstD.71343 => __mid$_M_first_2073
  # DEBUG __mid$_M_curD.71342 => __mid$_M_cur_2090
  # DEBUG D#681ptD.0 => &this_4(D)->D.43590
  # DEBUG thisD.61537 => D#681ptD.0
  # DEBUG D#1091ptD.0 => &MEM[(struct _Deque_baseD.42881 *)this_4(D)]._M_implD.43041
  # DEBUG thisD.61535 => &D.47994
  # DEBUG __xD.61536 => &__new_startD.47946
  # DEBUG thisD.61533 => &D.47991
  # DEBUG __xD.61534 => __pos_6(D)
  # DEBUG D#682ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61531 => &D.47990
  # DEBUG __xD.61532 => D#682ptD.0
  # VUSE <.MEM_37>
  # PT = nonlocal escaped 
  _48 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_curD.42940;
  # VUSE <.MEM_37>
  # PT = nonlocal escaped 
  _146 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_lastD.42942;
  # VUSE <.MEM_37>
  # PT = nonlocal escaped 
  _147 = MEM[(const struct iteratorD.42928 &)this_4(D) + 16]._M_nodeD.42943;
  # DEBUG __first1D.70596 => &D.47990
  # DEBUG __last1D.70597 => &D.47991
  # DEBUG __first2$_M_curD.71380 => __mid$_M_cur_1508
  # DEBUG __first2$_M_firstD.71381 => __mid$_M_first_17
  # DEBUG __first2$_M_lastD.71382 => __mid$_M_last_16
  # DEBUG __first2$_M_nodeD.71383 => __mid$_M_node_1505
  # DEBUG __last2$_M_curD.71384 => __mid$_M_cur_2090
  # DEBUG __last2$_M_firstD.71385 => __mid$_M_first_2073
  # DEBUG __last2$_M_lastD.71386 => __mid$_M_last_2067
  # DEBUG __last2$_M_nodeD.71387 => __mid$_M_node_1915
  # DEBUG __resultD.70600 => &D.47994
  # DEBUG __allocD.70601 => D#1091ptD.0
  # DEBUG thisD.70604 => &D.70621
  # DEBUG __xD.70603 => &D.47994
  # DEBUG thisD.70606 => &D.70620
  # DEBUG __xD.70605 => &D.47991
  # DEBUG thisD.70608 => &D.70619
  # DEBUG __xD.70607 => &D.47990
  # DEBUG D#676ptD.0 => D#1091ptD.0
  # DEBUG __firstD.70643 => &D.70619
  # DEBUG __lastD.70644 => &D.70620
  # DEBUG __resultD.70645 => &D.70621
  # DEBUG __allocD.70646 => D#676ptD.0
  # DEBUG D#675ptD.0 => D#676ptD.0
  # DEBUG thisD.70648 => &D.70653
  # DEBUG __xD.70647 => &D.70621
  # DEBUG thisD.70650 => &D.70654
  # DEBUG __xD.70649 => &D.70620
  # DEBUG thisD.70652 => &D.70655
  # DEBUG __xD.70651 => &D.70619
  # DEBUG D#674ptD.0 => D#675ptD.0
  # DEBUG __firstD.70656 => &D.70655
  # DEBUG __lastD.70657 => &D.70654
  # DEBUG __resultD.70658 => &D.70653
  # DEBUG D.70659 => D#674ptD.0
  # DEBUG thisD.70661 => &D.70666
  # DEBUG __xD.70660 => &D.70653
  # DEBUG thisD.70663 => &D.70667
  # DEBUG __xD.70662 => &D.70654
  # DEBUG thisD.70665 => &D.70668
  # DEBUG __xD.70664 => &D.70655
  # DEBUG __firstD.70669 => &D.70668
  # DEBUG __lastD.70670 => &D.70667
  # DEBUG __resultD.70671 => &D.70666
  # DEBUG __assignableD.70674 => 1
  # DEBUG thisD.70676 => &D.70683
  # DEBUG __xD.70675 => &D.70666
  # DEBUG thisD.70678 => &D.70682
  # DEBUG __xD.70677 => &D.70667
  # DEBUG thisD.70680 => &D.70681
  # DEBUG __xD.70679 => &D.70668
  # DEBUG __firstD.70684 => &D.70681
  # DEBUG __lastD.70685 => &D.70682
  # DEBUG __resultD.70686 => &D.70683
  # DEBUG thisD.70688 => &D.70695
  # DEBUG __xD.70687 => &D.70683
  # DEBUG thisD.70690 => &D.70694
  # DEBUG __xD.70689 => &D.70682
  # DEBUG thisD.70692 => &D.70693
  # DEBUG __xD.70691 => &D.70681
  # DEBUG __firstD.70696 => &D.70693
  # DEBUG __lastD.70697 => &D.70694
  # DEBUG __resultD.70698 => &D.70695
  # DEBUG thisD.70700 => &D.70715
  # DEBUG __xD.70699 => &D.70695
  # DEBUG thisD.70702 => NULL
  # DEBUG __xD.70701 => &D.70694
  # DEBUG __itD.70703 => NULL
  # DEBUG thisD.61360 => NULL
  # DEBUG __xD.61359 => NULL
  # DEBUG __itD.70704 => NULL
  # DEBUG thisD.70706 => &D.70714
  # DEBUG __xD.70705 => NULL
  # DEBUG thisD.70708 => NULL
  # DEBUG __xD.70707 => &D.70693
  # DEBUG __itD.70709 => NULL
  # DEBUG thisD.61352 => NULL
  # DEBUG __xD.61351 => NULL
  # DEBUG __itD.70710 => NULL
  # DEBUG thisD.70712 => &D.70713
  # DEBUG __xD.70711 => NULL
  # DEBUG __firstD.70716 => &D.70713
  # DEBUG __lastD.70717 => &D.70714
  # DEBUG __resultD.70718 => &D.70715
  # DEBUG thisD.70720 => NULL
  # DEBUG __xD.70719 => &D.70715
  # DEBUG __itD.70721 => NULL
  # DEBUG thisD.61328 => NULL
  # DEBUG __xD.61327 => NULL
  # DEBUG __itD.70722 => NULL
  # DEBUG thisD.70724 => &D.70739
  # DEBUG __xD.70723 => NULL
  # DEBUG thisD.70726 => NULL
  # DEBUG __xD.70725 => &D.70714
  # DEBUG __itD.70727 => NULL
  # DEBUG thisD.61320 => NULL
  # DEBUG __xD.61319 => NULL
  # DEBUG __itD.70728 => NULL
  # DEBUG thisD.70730 => &D.70738
  # DEBUG __xD.70729 => NULL
  # DEBUG thisD.70732 => NULL
  # DEBUG __xD.70731 => &D.70713
  # DEBUG __itD.70733 => NULL
  # DEBUG thisD.61312 => NULL
  # DEBUG __xD.61311 => NULL
  # DEBUG __itD.70734 => NULL
  # DEBUG thisD.70736 => &D.70737
  # DEBUG __xD.70735 => NULL
  # DEBUG __firstD.70740 => &D.70737
  # DEBUG __lastD.70741 => &D.70738
  # DEBUG __resultD.70742 => &D.70739
  # DEBUG __simpleD.70746 => 0
  # DEBUG thisD.70748 => &D.70755
  # DEBUG __xD.70747 => &D.70739
  # DEBUG thisD.70750 => &D.70754
  # DEBUG __xD.70749 => &D.70738
  # DEBUG thisD.70752 => &D.70753
  # DEBUG __xD.70751 => &D.70737
  # DEBUG __firstD.70756 => &D.70753
  # DEBUG __lastD.70757 => &D.70754
  # DEBUG __resultD.70758 => &D.70755
  # DEBUG __xD.70766 => &D.70754
  # DEBUG __yD.70765 => &D.70753
  # DEBUG __sizeD.54289 => 4
  _698 = (long intD.12) SR.1747_92;
  _700 = (long intD.12) _147;
  _701 = _698 - _700;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _702 = _701 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _703 = _702 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _704 = _703 * 128;
  _706 = (long intD.12) SR.1744_1511;
  _708 = (long intD.12) SR.1745_1496;
  _709 = _706 - _708;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _710 = _709 /[ex] 4;
  _711 = _704 + _710;
  _713 = (long intD.12) _146;
  _715 = (long intD.12) _48;
  _716 = _713 - _715;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _717 = _716 /[ex] 4;
  __n_718 = _711 + _717;
  # DEBUG __nD.70762 => __n_718
  # DEBUG __nD.70762 => __n_718
  if (__n_718 <= 0)
    goto <bb 45>;
  else
    goto <bb 37>;
;;    succ:       45 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1896 = PHI <__n_718(37), __n_728(44)>
  # .MEM_255 = PHI <.MEM_37(37), .MEM_1777(44)>
  # PT = nonlocal escaped 
  # SR.1818_2140 = PHI <_48(37), SR.1818_2139(44)>
  # PT = nonlocal escaped 
  # SR.1819_2138 = PHI <_146(37), SR.1819_2136(44)>
  # PT = nonlocal escaped 
  # SR.1820_2131 = PHI <_147(37), SR.1820_2130(44)>
  # PT = nonlocal escaped 
  # SR.1821_2129 = PHI <__new_start$_M_cur_91(37), SR.1821_2128(44)>
  # PT = nonlocal escaped 
  # SR.1822_2112 = PHI <__new_start$_M_last_2267(37), SR.1822_2107(44)>
  # PT = nonlocal escaped 
  # SR.1823_2105 = PHI <__new_start$_M_node_2266(37), SR.1823_2104(44)>
  # DEBUG __nD.70762 => __n_1896
  # DEBUG D#100ptD.0 => &D.70755
  # DEBUG thisD.61292 => D#100ptD.0
  # DEBUG D#100ptD.0 => &D.70753
  # DEBUG thisD.61289 => D#100ptD.0
  # VUSE <.MEM_255>
  _722 = *SR.1818_2140;
  # .MEM_1777 = VDEF <.MEM_255>
  *SR.1821_2129 = _722;
  # DEBUG thisD.70763 => &D.70753
  # PT = nonlocal escaped 
  _723 = SR.1818_2140 + 4;
  if (_723 == SR.1819_2138)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                40 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 39, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       38 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70767 => &D.70753
  # PT = nonlocal escaped 
  _734 = SR.1820_2131 + 8;
  # DEBUG thisD.70769 => &D.70753
  # DEBUG __new_nodeD.70768 => _734
  # VUSE <.MEM_1777>
  # PT = nonlocal escaped 
  _735 = MEM[(intD.9 * *)SR.1820_2131 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _736 = _735 + 512;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       38 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                39 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1818_2139 = PHI <_723(38), _735(39)>
  # PT = nonlocal escaped 
  # SR.1819_2136 = PHI <SR.1819_2138(38), _736(39)>
  # PT = nonlocal escaped 
  # SR.1820_2130 = PHI <SR.1820_2131(38), _734(39)>
  # DEBUG thisD.70764 => &D.70755
  # PT = nonlocal escaped 
  _726 = SR.1821_2129 + 4;
  if (_726 == SR.1822_2112)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70771 => &D.70755
  # PT = nonlocal escaped 
  _738 = SR.1823_2105 + 8;
  # DEBUG thisD.70773 => &D.70755
  # DEBUG __new_nodeD.70772 => _738
  # VUSE <.MEM_1777>
  # PT = nonlocal escaped 
  _739 = MEM[(intD.9 * *)SR.1823_2105 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _740 = _739 + 512;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1821_2128 = PHI <_726(40), _739(41)>
  # PT = nonlocal escaped 
  # SR.1822_2107 = PHI <SR.1822_2112(40), _740(41)>
  # PT = nonlocal escaped 
  # SR.1823_2104 = PHI <SR.1823_2105(40), _738(41)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_728 = __n_1896 + -1;
  # DEBUG __nD.70762 => __n_728
  # DEBUG __nD.70762 => __n_728
  if (__n_728 <= 0)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       42 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1823_1973 = PHI <SR.1823_2104(42)>
  # PT = nonlocal escaped 
  # SR.1822_1972 = PHI <SR.1822_2107(42)>
  # PT = nonlocal escaped 
  # SR.1821_1971 = PHI <SR.1821_2128(42)>
  goto <bb 45>;
;;    succ:       45 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       42 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 38>;
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       43 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_256 = PHI <.MEM_1777(43), .MEM_37(36)>
  # PT = nonlocal escaped 
  # SR.1821_2113 = PHI <SR.1821_1971(43), __new_start$_M_cur_91(36)>
  # PT = nonlocal escaped 
  # SR.1822_2106 = PHI <SR.1822_1972(43), __new_start$_M_last_2267(36)>
  # PT = nonlocal escaped 
  # SR.1823_2099 = PHI <SR.1823_1973(43), __new_start$_M_node_2266(36)>
  # DEBUG thisD.70761 => &__midD.70602
  # DEBUG __xD.70760 => &D.70755
  # .MEM_1792 = VDEF <.MEM_256>
  D.70753 ={v} {CLOBBER};
  # .MEM_1793 = VDEF <.MEM_1792>
  D.70754 ={v} {CLOBBER};
  # .MEM_1794 = VDEF <.MEM_1793>
  D.70755 ={v} {CLOBBER};
  # .MEM_1795 = VDEF <.MEM_1794>
  D.70737 ={v} {CLOBBER};
  # .MEM_1796 = VDEF <.MEM_1795>
  D.70738 ={v} {CLOBBER};
  # .MEM_1797 = VDEF <.MEM_1796>
  D.70739 ={v} {CLOBBER};
  # .MEM_1798 = VDEF <.MEM_1797>
  D.70713 ={v} {CLOBBER};
  # .MEM_1799 = VDEF <.MEM_1798>
  D.70714 ={v} {CLOBBER};
  # .MEM_1800 = VDEF <.MEM_1799>
  D.70715 ={v} {CLOBBER};
  # .MEM_1801 = VDEF <.MEM_1800>
  D.70693 ={v} {CLOBBER};
  # .MEM_1802 = VDEF <.MEM_1801>
  D.70694 ={v} {CLOBBER};
  # .MEM_1803 = VDEF <.MEM_1802>
  D.70695 ={v} {CLOBBER};
  # .MEM_1804 = VDEF <.MEM_1803>
  D.70681 ={v} {CLOBBER};
  # .MEM_1805 = VDEF <.MEM_1804>
  D.70682 ={v} {CLOBBER};
  # .MEM_1806 = VDEF <.MEM_1805>
  D.70683 ={v} {CLOBBER};
  # .MEM_1807 = VDEF <.MEM_1806>
  D.70668 ={v} {CLOBBER};
  # .MEM_1808 = VDEF <.MEM_1807>
  D.70667 ={v} {CLOBBER};
  # .MEM_1809 = VDEF <.MEM_1808>
  D.70666 ={v} {CLOBBER};
  # .MEM_1810 = VDEF <.MEM_1809>
  D.70655 ={v} {CLOBBER};
  # .MEM_1811 = VDEF <.MEM_1810>
  D.70654 ={v} {CLOBBER};
  # .MEM_1812 = VDEF <.MEM_1811>
  D.70653 ={v} {CLOBBER};
  # .MEM_1813 = VDEF <.MEM_1812>
  D.70619 ={v} {CLOBBER};
  # .MEM_1814 = VDEF <.MEM_1813>
  D.70620 ={v} {CLOBBER};
  # .MEM_1815 = VDEF <.MEM_1814>
  D.70621 ={v} {CLOBBER};
  # DEBUG thisD.70610 => NULL
  # DEBUG __xD.70609 => &__midD.70602
  # DEBUG D#603ptD.0 => D#1091ptD.0
  # DEBUG __first$_M_curD.71392 => __mid$_M_cur_1508
  # DEBUG __first$_M_firstD.71393 => __mid$_M_first_17
  # DEBUG __first$_M_lastD.71394 => __mid$_M_last_16
  # DEBUG __first$_M_nodeD.71395 => __mid$_M_node_1505
  # DEBUG __last$_M_curD.71388 => __mid$_M_cur_2090
  # DEBUG __last$_M_firstD.71389 => __mid$_M_first_2073
  # DEBUG __last$_M_lastD.71390 => __mid$_M_last_2067
  # DEBUG __last$_M_nodeD.71391 => __mid$_M_node_1915
  # DEBUG __resultD.70612 => NULL
  # DEBUG D.70611 => D#603ptD.0
  # DEBUG thisD.70616 => &D.70618
  # DEBUG __xD.70615 => NULL
  # DEBUG __first$_M_curD.71396 => __mid$_M_cur_1508
  # DEBUG __first$_M_firstD.71397 => __mid$_M_first_17
  # DEBUG __first$_M_lastD.71398 => __mid$_M_last_16
  # DEBUG __first$_M_nodeD.71399 => __mid$_M_node_1505
  # DEBUG __last$_M_curD.71400 => __mid$_M_cur_2090
  # DEBUG __last$_M_firstD.71401 => __mid$_M_first_2073
  # DEBUG __last$_M_lastD.71402 => __mid$_M_last_2067
  # DEBUG __last$_M_nodeD.71403 => __mid$_M_node_1915
  # DEBUG __resultD.70631 => &D.70618
  # DEBUG __assignableD.70634 => 1
  # DEBUG thisD.70636 => NULL
  # DEBUG __xD.70635 => &D.70618
  # DEBUG __first$_M_curD.71408 => __mid$_M_cur_1508
  # DEBUG __first$_M_firstD.71409 => __mid$_M_first_17
  # DEBUG __first$_M_lastD.71410 => __mid$_M_last_16
  # DEBUG __first$_M_nodeD.71411 => __mid$_M_node_1505
  # DEBUG __last$_M_curD.71404 => __mid$_M_cur_2090
  # DEBUG __last$_M_firstD.71405 => __mid$_M_first_2073
  # DEBUG __last$_M_lastD.71406 => __mid$_M_last_2067
  # DEBUG __last$_M_nodeD.71407 => __mid$_M_node_1915
  # DEBUG __resultD.70637 => NULL
  # DEBUG thisD.70641 => &D.70642
  # DEBUG __xD.70640 => NULL
  # DEBUG __firstD.71418 => __mid$_M_cur_1508
  # DEBUG __first$8D.71419 => __mid$_M_first_17
  # DEBUG __first$16D.71420 => __mid$_M_last_16
  # DEBUG __first$24D.71421 => __mid$_M_node_1505
  # DEBUG __lastD.71422 => __mid$_M_cur_2090
  # DEBUG __last$8D.71423 => __mid$_M_first_2073
  # DEBUG __last$_M_lastD.71424 => __mid$_M_last_2067
  # DEBUG __last$24D.71425 => __mid$_M_node_1915
  # DEBUG __resultD.70777 => &D.70642
  # DEBUG thisD.70779 => &D.70794
  # DEBUG __xD.70778 => &D.70642
  # DEBUG __itD.70787 => __mid$_M_cur_2090
  # DEBUG __it$8D.70786 => __mid$_M_first_2073
  # DEBUG D#1090ptD.0 => MEM[(struct _Deque_iteratorD.42910 *)&__lastD.70776 + 16B clique 21 base 0]
  # DEBUG __it$16D.70785 => D#1090ptD.0
  # DEBUG __it$24D.70784 => __mid$_M_node_1915
  # DEBUG __it$_M_curD.60535 => __mid$_M_cur_2090
  # DEBUG __it$_M_firstD.60534 => __mid$_M_first_2073
  # DEBUG __it$_M_lastD.60533 => D#1090ptD.0
  # DEBUG __it$_M_nodeD.60532 => __mid$_M_node_1915
  # DEBUG __itD.70791 => __mid$_M_cur_1508
  # DEBUG __it$8D.70790 => __mid$_M_first_17
  # DEBUG __it$16D.70789 => __mid$_M_last_16
  # DEBUG __it$24D.70788 => __mid$_M_node_1505
  # DEBUG __it$_M_curD.60529 => __mid$_M_cur_1508
  # DEBUG __it$_M_firstD.60528 => __mid$_M_first_17
  # DEBUG __it$_M_lastD.60527 => __mid$_M_last_16
  # DEBUG __it$_M_nodeD.60526 => __mid$_M_node_1505
  # DEBUG __resultD.70797 => &D.70794
  # DEBUG thisD.70799 => NULL
  # DEBUG __xD.70798 => &D.70794
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.70813 => __mid$_M_cur_2090
  # DEBUG __it$8D.70812 => __mid$_M_first_2073
  # DEBUG __it$16D.70811 => D#1090ptD.0
  # DEBUG __it$24D.70809 => __mid$_M_node_1915
  # DEBUG __it$_M_curD.60489 => __mid$_M_cur_2090
  # DEBUG __it$_M_firstD.60488 => __mid$_M_first_2073
  # DEBUG __it$_M_lastD.60487 => D#1090ptD.0
  # DEBUG __it$_M_nodeD.60486 => __mid$_M_node_1915
  # DEBUG __itD.70818 => __mid$_M_cur_1508
  # DEBUG __it$8D.70817 => __mid$_M_first_17
  # DEBUG __it$16D.70816 => __mid$_M_last_16
  # DEBUG __it$24D.70814 => __mid$_M_node_1505
  # DEBUG __it$_M_curD.60483 => __mid$_M_cur_1508
  # DEBUG __it$_M_firstD.60482 => __mid$_M_first_17
  # DEBUG __it$_M_lastD.60481 => __mid$_M_last_16
  # DEBUG __it$_M_nodeD.60480 => __mid$_M_node_1505
  # DEBUG __firstD.71426 => __mid$_M_cur_1508
  # DEBUG __first$8D.71427 => __mid$_M_first_17
  # DEBUG __first$16D.71428 => __mid$_M_last_16
  # DEBUG __first$24D.71429 => __mid$_M_node_1505
  # DEBUG __resultD.70800 => NULL
  # DEBUG __simpleD.70806 => 0
  # DEBUG thisD.70808 => &D.70819
  # DEBUG __xD.70807 => NULL
  # DEBUG __firstD.71433 => __mid$_M_cur_1508
  # DEBUG __first$_M_firstD.71434 => __mid$_M_first_17
  # DEBUG __first$_M_lastD.71435 => __mid$_M_last_16
  # DEBUG __first$_M_nodeD.71436 => __mid$_M_node_1505
  # DEBUG __resultD.70822 => &D.70819
  # DEBUG __xD.70830 => &__lastD.70821
  # DEBUG __yD.70829 => &__firstD.70820
  # DEBUG __sizeD.60431 => 4
  _774 = (long intD.12) __mid$_M_cur_2090;
  _777 = _774 - prephitmp_2169;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _778 = _777 /[ex] 4;
  _779 = _778 + prephitmp_2167;
  _781 = (long intD.12) __mid$_M_last_16;
  _784 = _781 - _582;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _785 = _784 /[ex] 4;
  __n_786 = _779 + _785;
  # DEBUG __nD.70826 => __n_786
  # DEBUG __nD.70826 => __n_786
  if (__n_786 <= 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 46, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 45, next block 47, flags: (NEW, REACHABLE)
;;    pred:       45 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2171 = PHI <.MEM_1815(45), .MEM_1983(53)>
  # DEBUG thisD.70825 => &D.70617
  # DEBUG __xD.70824 => &D.70819
  # .MEM_1875 = VDEF <.MEM_2171>
  D.70819 ={v} {CLOBBER};
  # .MEM_1876 = VDEF <.MEM_1875>
  D.70794 ={v} {CLOBBER};
  # .MEM_1877 = VDEF <.MEM_1876>
  D.70642 ={v} {CLOBBER};
  # .MEM_1878 = VDEF <.MEM_1877>
  D.70618 ={v} {CLOBBER};
  # .MEM_1879 = VDEF <.MEM_1878>
  __midD.70602 ={v} {CLOBBER};
  # .MEM_44 = VDEF <.MEM_1879>
  D.47990 ={v} {CLOBBER};
  # .MEM_45 = VDEF <.MEM_44>
  D.47991 ={v} {CLOBBER};
  # .MEM_46 = VDEF <.MEM_45>
  D.47994 ={v} {CLOBBER};
  # .MEM_223 = VDEF <.MEM_46>
  MEM[(struct dequeD.40449 *)this_4(D) + 16B] = __new_start$_M_cur_91;
  # .MEM_224 = VDEF <.MEM_223>
  MEM[(struct dequeD.40449 *)this_4(D) + 24B] = __new_start$_M_first_87;
  # .MEM_225 = VDEF <.MEM_224>
  MEM[(struct dequeD.40449 *)this_4(D) + 32B] = __new_start$_M_last_2267;
  # .MEM_226 = VDEF <.MEM_225>
  MEM[(struct dequeD.40449 *)this_4(D) + 40B] = __new_start$_M_node_2266;
  # DEBUG thisD.61529 => &D.47998
  # DEBUG __xD.61530 => &__old_startD.47948
  # .MEM_219 = VDEF <.MEM_226>
  D.47998._M_curD.42940 = prephitmp_1563;
  # .MEM_220 = VDEF <.MEM_219>
  D.47998._M_firstD.42941 = prephitmp_1565;
  # .MEM_221 = VDEF <.MEM_220>
  D.47998._M_lastD.42942 = prephitmp_1567;
  # .MEM_222 = VDEF <.MEM_221>
  D.47998._M_nodeD.42943 = prephitmp_1569;
  # .MEM_227 = VDEF <.MEM_222>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47978 clique 48 base 0] = __mid$_M_cur_2090;
  # .MEM_228 = VDEF <.MEM_227>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47978 + 8B clique 48 base 0] = __mid$_M_first_2073;
  # .MEM_229 = VDEF <.MEM_228>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47978 + 16B clique 48 base 0] = __mid$_M_last_2067;
  # .MEM_230 = VDEF <.MEM_229>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47978 + 24B clique 48 base 0] = __mid$_M_node_1915;
  # .MEM_49 = VDEF <.MEM_230>
  # USE = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  # CLB = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (__midD.47978, __lastD.47914, &D.47998);
  # .MEM_50 = VDEF <.MEM_49>
  D.47998 ={v} {CLOBBER};
  # DEBUG D#1097ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_curD.71342 => D#1097ptD.0
  # DEBUG D#1098ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_firstD.71343 => D#1098ptD.0
  # DEBUG D#1099ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_lastD.71344 => D#1099ptD.0
  # DEBUG D#1100ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_nodeD.71345 => D#1100ptD.0
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       45 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                54 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1492 = PHI <__n_786(47), __n_796(54)>
  # .MEM_257 = PHI <.MEM_1815(47), .MEM_1860(54)>
  # PT = nonlocal escaped 
  # SR.1835_2098 = PHI <SR.1821_2113(47), SR.1835_2096(54)>
  # PT = nonlocal escaped 
  # SR.1836_2094 = PHI <SR.1822_2106(47), SR.1836_2093(54)>
  # PT = nonlocal escaped 
  # SR.1837_2092 = PHI <SR.1823_2099(47), SR.1837_2091(54)>
  # PT = nonlocal escaped 
  # __first_2088 = PHI <__mid$_M_cur_1508(47), __first_2077(54)>
  # PT = nonlocal escaped 
  # __first$_M_last_2075 = PHI <__mid$_M_last_16(47), __first$_M_last_2074(54)>
  # PT = nonlocal 
  # __first$_M_node_2071 = PHI <__mid$_M_node_1505(47), __first$_M_node_2069(54)>
  # DEBUG __first$_M_nodeD.71436 => __first$_M_node_2071
  # DEBUG __first$_M_lastD.71435 => __first$_M_last_2075
  # DEBUG __firstD.71433 => __first_2088
  # DEBUG __nD.70826 => __n_1492
  # DEBUG D#100ptD.0 => &D.70819
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.70820
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_257>
  _790 = MEM[(const intD.9 &)__first_2088];
  # .MEM_1860 = VDEF <.MEM_257>
  *SR.1835_2098 = _790;
  # DEBUG thisD.70827 => &__firstD.70820
  # PT = nonlocal escaped 
  __first_791 = __first_2088 + 4;
  # DEBUG __firstD.71433 => __first_791
  if (__first_791 == __first$_M_last_2075)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70831 => &__firstD.70820
  # PT = nonlocal 
  __first$_M_node_802 = __first$_M_node_2071 + 8;
  # DEBUG thisD.70833 => &__firstD.70820
  # DEBUG __new_nodeD.70832 => __first$_M_node_802
  # DEBUG __first$_M_nodeD.71436 => __first$_M_node_802
  # VUSE <.MEM_1860>
  # PT = nonlocal escaped 
  __first_803 = MEM[(intD.9 * *)__first$_M_node_2071 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_804 = __first_803 + 512;
  # DEBUG __first$_M_lastD.71435 => __first$_M_last_804
  # DEBUG __firstD.71433 => __first_803
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       48 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_2077 = PHI <__first_791(48), __first_803(49)>
  # PT = nonlocal escaped 
  # __first$_M_last_2074 = PHI <__first$_M_last_2075(48), __first$_M_last_804(49)>
  # PT = nonlocal 
  # __first$_M_node_2069 = PHI <__first$_M_node_2071(48), __first$_M_node_802(49)>
  # DEBUG __first$_M_nodeD.71436 => __first$_M_node_2069
  # DEBUG __first$_M_lastD.71435 => __first$_M_last_2074
  # DEBUG __firstD.71433 => __first_2077
  # DEBUG thisD.70828 => &D.70819
  # PT = nonlocal escaped 
  _794 = SR.1835_2098 + 4;
  if (_794 == SR.1836_2094)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70835 => &D.70819
  # PT = nonlocal escaped 
  _806 = SR.1837_2092 + 8;
  # DEBUG thisD.70837 => &D.70819
  # DEBUG __new_nodeD.70836 => _806
  # VUSE <.MEM_1860>
  # PT = nonlocal escaped 
  _807 = MEM[(intD.9 * *)SR.1837_2092 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _808 = _807 + 512;
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       50 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1835_2096 = PHI <_794(50), _807(51)>
  # PT = nonlocal escaped 
  # SR.1836_2093 = PHI <SR.1836_2094(50), _808(51)>
  # PT = nonlocal escaped 
  # SR.1837_2091 = PHI <SR.1837_2092(50), _806(51)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_796 = __n_1492 + -1;
  # DEBUG __nD.70826 => __n_796
  # DEBUG __nD.70826 => __n_796
  if (__n_796 <= 0)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 52, next block 54, flags: (NEW)
;;    pred:       52 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1983 = PHI <.MEM_1860(52)>
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       52 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 48>;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 0, count 0, freq 3600, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       31 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                114 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                99 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_36(31), .MEM_50(46), .MEM_90(114), .MEM_78(99)>
  # DEBUG D#1101ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_curD.71334 => D#1101ptD.0
  # DEBUG D#1102ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_firstD.71335 => D#1102ptD.0
  # DEBUG D#1103ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_lastD.71336 => D#1103ptD.0
  # DEBUG D#1104ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_nodeD.71337 => D#1104ptD.0
  # VUSE <.MEM_1>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 56, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       2 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.70848 => this_4(D)
  # DEBUG __nD.70849 => __n_11(D)
  # VUSE <.MEM_5(D)>
  # PT = nonlocal escaped 
  _57 = this_4(D)->D.43590._M_implD.43041._M_finishD.43046._M_lastD.42942;
  _819 = (long intD.12) _57;
  _822 = _819 - _96;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _823 = _822 /[ex] 4;
  # RANGE [-2305843009213693953, 2305843009213693950]
  _824 = _823 + -1;
  # RANGE ~[2305843009213693951, 16140901064495857662]
  __vacancies_825 = (const size_typeD.43117) _824;
  # DEBUG __vacanciesD.70850 => __vacancies_825
  if (__n_11(D) > __vacancies_825)
    goto <bb 57>;
  else
    goto <bb 58>;
;;    succ:       57 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                58 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 702, maybe hot
;;    prev block 56, next block 58, flags: (NEW, REACHABLE)
;;    pred:       56 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  _826 = __n_11(D) - __vacancies_825;
  # .MEM_1880 = VDEF <.MEM_5(D)>
  # USE = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  # CLB = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  _ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEmD.43533 (this_4(D), _826);
  # VUSE <.MEM_1880>
  pretmp_1130 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_curD.42940;
  # VUSE <.MEM_1880>
  pretmp_1132 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_firstD.42941;
  # VUSE <.MEM_1880>
  pretmp_1134 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_lastD.42942;
  # VUSE <.MEM_1880>
  pretmp_1171 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_nodeD.42943;
  pretmp_2002 = (long intD.12) pretmp_1130;
  pretmp_2004 = (long intD.12) pretmp_1132;
  pretmp_2061 = pretmp_2002 - pretmp_2004;
  pretmp_1142 = pretmp_2061 /[ex] 4;
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       56 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1456 = PHI <.MEM_5(D)(56), .MEM_1880(57)>
  # PT = nonlocal escaped 
  # prephitmp_1131 = PHI <_95(56), pretmp_1130(57)>
  # PT = nonlocal escaped 
  # prephitmp_1133 = PHI <_97(56), pretmp_1132(57)>
  # PT = nonlocal escaped 
  # prephitmp_1135 = PHI <_57(56), pretmp_1134(57)>
  # PT = nonlocal escaped 
  # prephitmp_1176 = PHI <_80(56), pretmp_1171(57)>
  # RANGE [-2305843009213693952, 2305843009213693951]
  # prephitmp_1147 = PHI <_100(56), pretmp_1142(57)>
  __n.131_827 = (long intD.12) __n_11(D);
  # DEBUG D#1088ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.70851 => D#1088ptD.0
  # DEBUG __nD.70852 => __n.131_827
  # DEBUG thisD.70855 => &__tmpD.70853
  # DEBUG __xD.70854 => D#1088ptD.0
  # DEBUG D#1117ptD.0 => MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_curD.42940
  # DEBUG D#1116ptD.0 => MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_firstD.42941
  # DEBUG __tmp$_M_firstD.71442 => D#1116ptD.0
  # DEBUG D#1115ptD.0 => MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_lastD.42942
  # DEBUG __tmp$_M_lastD.71443 => D#1115ptD.0
  # DEBUG D#1114ptD.0 => MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_nodeD.42943
  # DEBUG __tmp$_M_nodeD.71444 => D#1114ptD.0
  # DEBUG thisD.70858 => &__tmpD.70853
  # DEBUG __nD.70859 => __n.131_827
  __offset_843 = __n.131_827 + prephitmp_1147;
  # DEBUG __offsetD.70860 => __offset_843
  # DEBUG __sizeD.54289 => 4
  _478 = (unsigned long) __offset_843;
  if (_478 <= 127)
    goto <bb 133>;
  else
    goto <bb 134>;
;;    succ:       133 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                134 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 802, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       134 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_848 = __offset_843 >> 7;
  goto <bb 61>;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 296, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       134 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _850 = ~_478;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _851 = _850 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _852 = (long intD.12) _851;
  # RANGE [-144115188075855872, -1]
  iftmp.117_853 = ~_852;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 1098, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       59 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_855 = PHI <iftmp.117_848(59), iftmp.117_853(60)>
  # DEBUG __node_offsetD.70861 => iftmp.117_855
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_856 = (long unsigned intD.14) iftmp.117_855;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _857 = __node_offset.119_856 * 8;
  # PT = nonlocal escaped 
  __new_finish$_M_node_858 = prephitmp_1176 + _857;
  # DEBUG thisD.70863 => &__tmpD.70853
  # DEBUG __new_nodeD.70862 => __new_finish$_M_node_858
  # DEBUG __tmp$_M_nodeD.71444 => __new_finish$_M_node_858
  # VUSE <.MEM_1456>
  # PT = nonlocal escaped 
  __new_finish$_M_first_859 = *__new_finish$_M_node_858;
  # DEBUG __tmp$_M_firstD.71442 => __new_finish$_M_first_859
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  __new_finish$_M_last_860 = __new_finish$_M_first_859 + 512;
  # DEBUG __tmp$_M_lastD.71443 => __new_finish$_M_last_860
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _861 = iftmp.117_855 * 128;
  _862 = __offset_843 - _861;
  # RANGE [0, 18446744073709551615]
  _863 = (long unsigned intD.14) _862;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _864 = _863 * 4;
  # PT = nonlocal escaped 
  __new_finish$_M_cur_865 = __new_finish$_M_first_859 + _864;
  # DEBUG __tmp$_M_curD.71441 => __new_finish$_M_cur_865
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 61, next block 63, flags: (NEW, REACHABLE)
;;    pred:       133 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                61 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __new_finish$_M_cur_2051 = PHI <__new_finish$_M_cur_847(133), __new_finish$_M_cur_865(61)>
  # PT = nonlocal escaped 
  # __new_finish$_M_first_2050 = PHI <prephitmp_1133(133), __new_finish$_M_first_859(61)>
  # PT = nonlocal escaped 
  # __new_finish$_M_last_2049 = PHI <prephitmp_1135(133), __new_finish$_M_last_860(61)>
  # PT = nonlocal escaped 
  # __new_finish$_M_node_2047 = PHI <prephitmp_1176(133), __new_finish$_M_node_858(61)>
  # DEBUG __tmp$_M_nodeD.71444 => __new_finish$_M_node_2047
  # DEBUG __tmp$_M_lastD.71443 => __new_finish$_M_last_2049
  # DEBUG __tmp$_M_firstD.71442 => __new_finish$_M_first_2050
  # DEBUG __tmp$_M_curD.71441 => __new_finish$_M_cur_2051
  # DEBUG thisD.70857 => &__new_finishD.48000
  # DEBUG __xD.70856 => NULL
  # DEBUG __new_finish$_M_curD.71346 => __new_finish$_M_cur_2051
  # DEBUG __new_finish$_M_firstD.71347 => __new_finish$_M_first_2050
  # DEBUG __new_finish$_M_lastD.71348 => __new_finish$_M_last_2049
  # DEBUG __new_finish$_M_nodeD.71349 => __new_finish$_M_node_2047
  # .MEM_1895 = VDEF <.MEM_1456>
  __tmpD.70853 ={v} {CLOBBER};
  # DEBUG D#683ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61544 => &__old_finishD.48002
  # DEBUG __xD.61545 => D#683ptD.0
  # DEBUG __old_finish$_M_curD.61581 => D#1117ptD.0
  # DEBUG __old_finish$_M_firstD.61582 => D#1116ptD.0
  # DEBUG __old_finish$_M_lastD.61583 => D#1115ptD.0
  # DEBUG __old_finish$_M_nodeD.61584 => D#1114ptD.0
  __elemsafter_55 = _102 - _125;
  # DEBUG __elemsafterD.48004 => __elemsafter_55
  # DEBUG D#1089ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.70839 => D#1089ptD.0
  # DEBUG __nD.70840 => __elemsafter_55
  # DEBUG thisD.70843 => &__tmpD.70841
  # DEBUG __xD.70842 => D#1089ptD.0
  # DEBUG __tmp$_M_firstD.71438 => D#1116ptD.0
  # DEBUG __tmp$_M_lastD.71439 => D#1115ptD.0
  # DEBUG __tmp$_M_nodeD.71440 => D#1114ptD.0
  # DEBUG thisD.70845 => &__tmpD.70841
  # DEBUG __nD.70844 => __elemsafter_55
  # DEBUG thisD.70865 => &__tmpD.70841
  # DEBUG __nD.70866 => -__elemsafter_55
  __offset_872 = prephitmp_1147 - __elemsafter_55;
  # DEBUG __offsetD.70867 => __offset_872
  # DEBUG __sizeD.54289 => 4
  _479 = (unsigned long) __offset_872;
  if (_479 <= 127)
    goto <bb 136>;
  else
    goto <bb 135>;
;;    succ:       136 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                135 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 0, count 0, freq 802, maybe hot
;;    prev block 62, next block 64, flags: (NEW, REACHABLE)
;;    pred:       135 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_877 = __offset_872 >> 7;
  goto <bb 65>;
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 296, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       135 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _879 = ~_479;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _880 = _879 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _881 = (long intD.12) _880;
  # RANGE [-144115188075855872, -1]
  iftmp.117_882 = ~_881;
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 1098, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       63 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                64 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_884 = PHI <iftmp.117_877(63), iftmp.117_882(64)>
  # DEBUG __node_offsetD.70868 => iftmp.117_884
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_885 = (long unsigned intD.14) iftmp.117_884;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _886 = __node_offset.119_885 * 8;
  # PT = nonlocal escaped 
  SR.1759_887 = prephitmp_1176 + _886;
  # DEBUG thisD.70870 => &__tmpD.70841
  # DEBUG __new_nodeD.70869 => SR.1759_887
  # DEBUG __tmp$_M_nodeD.71440 => SR.1759_887
  # VUSE <.MEM_1895>
  # PT = nonlocal escaped 
  SR.1757_888 = *SR.1759_887;
  # DEBUG __tmp$_M_firstD.71438 => SR.1757_888
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  SR.1758_889 = SR.1757_888 + 512;
  # DEBUG __tmp$_M_lastD.71439 => SR.1758_889
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _890 = iftmp.117_884 * 128;
  _891 = __offset_872 - _890;
  # RANGE [0, 18446744073709551615]
  _892 = (long unsigned intD.14) _891;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _893 = _892 * 4;
  # PT = nonlocal escaped 
  SR.1756_894 = SR.1757_888 + _893;
  # DEBUG __tmp$_M_curD.71437 => SR.1756_894
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 1800, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       136 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1756_2068 = PHI <SR.1756_876(136), SR.1756_894(65)>
  # PT = nonlocal escaped 
  # SR.1757_2059 = PHI <prephitmp_1133(136), SR.1757_888(65)>
  # PT = nonlocal escaped 
  # SR.1758_2053 = PHI <prephitmp_1135(136), SR.1758_889(65)>
  # PT = nonlocal escaped 
  # SR.1759_2052 = PHI <prephitmp_1176(136), SR.1759_887(65)>
  # DEBUG __tmp$_M_nodeD.71440 => SR.1759_2052
  # DEBUG __tmp$_M_lastD.71439 => SR.1758_2053
  # DEBUG __tmp$_M_firstD.71438 => SR.1757_2059
  # DEBUG __tmp$_M_curD.71437 => SR.1756_2068
  # DEBUG thisD.70847 => &D.48005
  # DEBUG __xD.70846 => NULL
  # .MEM_1910 = VDEF <.MEM_1895>
  __tmpD.70841 ={v} {CLOBBER};
  # .MEM_1954 = VDEF <.MEM_1910>
  MEM[(struct iteratorD.43111 &)__pos_6(D) clique 48 base 1] = SR.1756_2068;
  # .MEM_1955 = VDEF <.MEM_1954>
  MEM[(struct iteratorD.43111 &)__pos_6(D) + 8 clique 48 base 1] = SR.1757_2059;
  # .MEM_1956 = VDEF <.MEM_1955>
  MEM[(struct iteratorD.43111 &)__pos_6(D) + 16 clique 48 base 1] = SR.1758_2053;
  # .MEM_1957 = VDEF <.MEM_1956>
  MEM[(struct iteratorD.43111 &)__pos_6(D) + 24 clique 48 base 1] = SR.1759_2052;
  if (__elemsafter_55 > __n.131_827)
    goto <bb 67>;
  else
    goto <bb 100>;
;;    succ:       67 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                100 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       66 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.70899 => D#1089ptD.0
  # DEBUG __nD.70900 => __n.131_827
  # DEBUG thisD.70903 => &__tmpD.70901
  # DEBUG __xD.70902 => D#1089ptD.0
  # VUSE <.MEM_1957>
  # PT = nonlocal escaped 
  _64 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_curD.42940;
  # VUSE <.MEM_1957>
  # PT = nonlocal escaped 
  SR.1850_918 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_firstD.42941;
  # DEBUG __tmp$_M_firstD.71453 => SR.1850_918
  # VUSE <.MEM_1957>
  # PT = nonlocal escaped 
  SR.1851_919 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_lastD.42942;
  # DEBUG __tmp$_M_lastD.71454 => SR.1851_919
  # VUSE <.MEM_1957>
  # PT = nonlocal escaped 
  SR.1852_920 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_nodeD.42943;
  # DEBUG __tmp$_M_nodeD.71455 => SR.1852_920
  # DEBUG thisD.70905 => &__tmpD.70901
  # DEBUG __nD.70904 => __n.131_827
  # DEBUG thisD.70908 => &__tmpD.70901
  # DEBUG __nD.70909 => -__n.131_827
  _927 = (long intD.12) _64;
  _929 = (long intD.12) SR.1850_918;
  _930 = _927 - _929;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _931 = _930 /[ex] 4;
  __offset_932 = _931 - __n.131_827;
  # DEBUG __offsetD.70910 => __offset_932
  # DEBUG __sizeD.54289 => 4
  _18 = (unsigned long) __offset_932;
  if (_18 <= 127)
    goto <bb 137>;
  else
    goto <bb 138>;
;;    succ:       137 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                138 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 401, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       138 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_937 = __offset_932 >> 7;
  goto <bb 70>;
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 148, maybe hot
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       138 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _939 = ~_18;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _940 = _939 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _941 = (long intD.12) _940;
  # RANGE [-144115188075855872, -1]
  iftmp.117_942 = ~_941;
;;    succ:       70 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 549, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       68 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                69 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_944 = PHI <iftmp.117_937(68), iftmp.117_942(69)>
  # DEBUG __node_offsetD.70911 => iftmp.117_944
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_945 = (long unsigned intD.14) iftmp.117_944;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _946 = __node_offset.119_945 * 8;
  # PT = nonlocal escaped 
  SR.1852_947 = SR.1852_920 + _946;
  # DEBUG thisD.70913 => &__tmpD.70901
  # DEBUG __new_nodeD.70912 => SR.1852_947
  # DEBUG __tmp$_M_nodeD.71455 => SR.1852_947
  # VUSE <.MEM_1957>
  # PT = nonlocal escaped 
  SR.1850_948 = *SR.1852_947;
  # DEBUG __tmp$_M_firstD.71453 => SR.1850_948
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  SR.1851_949 = SR.1850_948 + 512;
  # DEBUG __tmp$_M_lastD.71454 => SR.1851_949
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _950 = iftmp.117_944 * 128;
  _951 = __offset_932 - _950;
  # RANGE [0, 18446744073709551615]
  _952 = (long unsigned intD.14) _951;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _953 = _952 * 4;
  # PT = nonlocal escaped 
  SR.1849_954 = SR.1850_948 + _953;
  # DEBUG __tmp$_M_curD.71452 => SR.1849_954
  pretmp_193 = (long intD.12) SR.1852_920;
  pretmp_192 = (long intD.12) SR.1852_947;
  pretmp_191 = pretmp_193 - pretmp_192;
  pretmp_190 = pretmp_191 /[ex] 8;
  pretmp_1449 = pretmp_190 + -1;
  pretmp_1442 = pretmp_1449 * 128;
  pretmp_1467 = (long intD.12) SR.1850_948;
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       137 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1849_2015 = PHI <SR.1849_936(137), SR.1849_954(70)>
  # PT = nonlocal escaped 
  # SR.1850_2014 = PHI <SR.1850_918(137), SR.1850_948(70)>
  # PT = nonlocal escaped 
  # SR.1851_2012 = PHI <SR.1851_919(137), SR.1851_949(70)>
  # PT = nonlocal escaped 
  # SR.1852_2011 = PHI <SR.1852_920(137), SR.1852_947(70)>
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  # prephitmp_1468 = PHI <-128(137), pretmp_1442(70)>
  # prephitmp_1465 = PHI <_929(137), pretmp_1467(70)>
  # prephitmp_2187 = PHI <pretmp_2185(137), pretmp_192(70)>
  # DEBUG __tmp$_M_nodeD.71455 => SR.1852_2011
  # DEBUG __tmp$_M_lastD.71454 => SR.1851_2012
  # DEBUG __tmp$_M_firstD.71453 => SR.1850_2014
  # DEBUG __tmp$_M_curD.71452 => SR.1849_2015
  # DEBUG thisD.70907 => &__finish_nD.48006
  # DEBUG __xD.70906 => NULL
  # .MEM_1925 = VDEF <.MEM_1957>
  __tmpD.70901 ={v} {CLOBBER};
  # DEBUG D#684ptD.0 => &this_4(D)->D.43590
  # DEBUG thisD.61560 => D#684ptD.0
  # DEBUG D#685ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61558 => &D.48010
  # DEBUG __xD.61559 => D#685ptD.0
  # DEBUG D#686ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61556 => &D.48009
  # DEBUG __xD.61557 => D#686ptD.0
  # DEBUG thisD.61554 => &D.48008
  # DEBUG __xD.61555 => &__finish_nD.48006
  # DEBUG __firstD.70885 => &D.48008
  # DEBUG __lastD.70886 => &D.48009
  # DEBUG __resultD.70887 => &D.48010
  # DEBUG __allocD.70888 => D#676ptD.0
  # DEBUG D#675ptD.0 => D#676ptD.0
  # DEBUG thisD.70890 => &D.70896
  # DEBUG __xD.70889 => &D.48010
  # DEBUG thisD.70892 => &D.70897
  # DEBUG __xD.70891 => &D.48009
  # DEBUG thisD.70894 => &D.70898
  # DEBUG __xD.70893 => &D.48008
  # DEBUG D#674ptD.0 => D#675ptD.0
  # DEBUG __firstD.70915 => &D.70898
  # DEBUG __lastD.70916 => &D.70897
  # DEBUG __resultD.70917 => &D.70896
  # DEBUG D.70918 => D#674ptD.0
  # DEBUG thisD.70920 => &D.70925
  # DEBUG __xD.70919 => &D.70896
  # DEBUG thisD.70922 => &D.70926
  # DEBUG __xD.70921 => &D.70897
  # DEBUG thisD.70924 => &D.70927
  # DEBUG __xD.70923 => &D.70898
  # DEBUG __firstD.70928 => &D.70927
  # DEBUG __lastD.70929 => &D.70926
  # DEBUG __resultD.70930 => &D.70925
  # DEBUG __assignableD.70933 => 1
  # DEBUG thisD.70935 => &D.70942
  # DEBUG __xD.70934 => &D.70925
  # DEBUG thisD.70937 => &D.70941
  # DEBUG __xD.70936 => &D.70926
  # DEBUG thisD.70939 => &D.70940
  # DEBUG __xD.70938 => &D.70927
  # DEBUG __firstD.70943 => &D.70940
  # DEBUG __lastD.70944 => &D.70941
  # DEBUG __resultD.70945 => &D.70942
  # DEBUG thisD.70947 => &D.70954
  # DEBUG __xD.70946 => &D.70942
  # DEBUG thisD.70949 => &D.70953
  # DEBUG __xD.70948 => &D.70941
  # DEBUG thisD.70951 => &D.70952
  # DEBUG __xD.70950 => &D.70940
  # DEBUG __firstD.70955 => &D.70952
  # DEBUG __lastD.70956 => &D.70953
  # DEBUG __resultD.70957 => &D.70954
  # DEBUG thisD.70959 => &D.70974
  # DEBUG __xD.70958 => &D.70954
  # DEBUG thisD.70961 => NULL
  # DEBUG __xD.70960 => &D.70953
  # DEBUG __itD.70962 => NULL
  # DEBUG thisD.61360 => NULL
  # DEBUG __xD.61359 => NULL
  # DEBUG __itD.70963 => NULL
  # DEBUG thisD.70965 => &D.70973
  # DEBUG __xD.70964 => NULL
  # DEBUG thisD.70967 => NULL
  # DEBUG __xD.70966 => &D.70952
  # DEBUG __itD.70968 => NULL
  # DEBUG thisD.61352 => NULL
  # DEBUG __xD.61351 => NULL
  # DEBUG __itD.70969 => NULL
  # DEBUG thisD.70971 => &D.70972
  # DEBUG __xD.70970 => NULL
  # DEBUG __firstD.70975 => &D.70972
  # DEBUG __lastD.70976 => &D.70973
  # DEBUG __resultD.70977 => &D.70974
  # DEBUG thisD.70979 => NULL
  # DEBUG __xD.70978 => &D.70974
  # DEBUG __itD.70980 => NULL
  # DEBUG thisD.61328 => NULL
  # DEBUG __xD.61327 => NULL
  # DEBUG __itD.70981 => NULL
  # DEBUG thisD.70983 => &D.70998
  # DEBUG __xD.70982 => NULL
  # DEBUG thisD.70985 => NULL
  # DEBUG __xD.70984 => &D.70973
  # DEBUG __itD.70986 => NULL
  # DEBUG thisD.61320 => NULL
  # DEBUG __xD.61319 => NULL
  # DEBUG __itD.70987 => NULL
  # DEBUG thisD.70989 => &D.70997
  # DEBUG __xD.70988 => NULL
  # DEBUG thisD.70991 => NULL
  # DEBUG __xD.70990 => &D.70972
  # DEBUG __itD.70992 => NULL
  # DEBUG thisD.61312 => NULL
  # DEBUG __xD.61311 => NULL
  # DEBUG __itD.70993 => NULL
  # DEBUG thisD.70995 => &D.70996
  # DEBUG __xD.70994 => NULL
  # DEBUG __firstD.70999 => &D.70996
  # DEBUG __lastD.71000 => &D.70997
  # DEBUG __resultD.71001 => &D.70998
  # DEBUG __simpleD.71005 => 0
  # DEBUG thisD.71007 => &D.71014
  # DEBUG __xD.71006 => &D.70998
  # DEBUG thisD.71009 => &D.71013
  # DEBUG __xD.71008 => &D.70997
  # DEBUG thisD.71011 => &D.71012
  # DEBUG __xD.71010 => &D.70996
  # DEBUG __firstD.71015 => &D.71012
  # DEBUG __lastD.71016 => &D.71013
  # DEBUG __resultD.71017 => &D.71014
  # DEBUG __xD.71025 => &D.71013
  # DEBUG __yD.71024 => &D.71012
  # DEBUG __sizeD.54289 => 4
  _1041 = _931 + prephitmp_1468;
  _1043 = (long intD.12) SR.1851_2012;
  _1045 = (long intD.12) SR.1849_2015;
  _1046 = _1043 - _1045;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _1047 = _1046 /[ex] 4;
  __n_1048 = _1041 + _1047;
  # DEBUG __nD.71021 => __n_1048
  # DEBUG __nD.71021 => __n_1048
  if (__n_1048 <= 0)
    goto <bb 72>;
  else
    goto <bb 73>;
;;    succ:       72 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                73 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       71 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                79 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2170 = PHI <.MEM_1925(71), .MEM_2111(79)>
  # DEBUG thisD.71020 => &D.70895
  # DEBUG __xD.71019 => &D.71014
  # .MEM_2025 = VDEF <.MEM_2170>
  D.71012 ={v} {CLOBBER};
  # .MEM_2026 = VDEF <.MEM_2025>
  D.71013 ={v} {CLOBBER};
  # .MEM_2027 = VDEF <.MEM_2026>
  D.71014 ={v} {CLOBBER};
  # .MEM_2028 = VDEF <.MEM_2027>
  D.70996 ={v} {CLOBBER};
  # .MEM_2029 = VDEF <.MEM_2028>
  D.70997 ={v} {CLOBBER};
  # .MEM_2030 = VDEF <.MEM_2029>
  D.70998 ={v} {CLOBBER};
  # .MEM_2031 = VDEF <.MEM_2030>
  D.70972 ={v} {CLOBBER};
  # .MEM_2032 = VDEF <.MEM_2031>
  D.70973 ={v} {CLOBBER};
  # .MEM_2033 = VDEF <.MEM_2032>
  D.70974 ={v} {CLOBBER};
  # .MEM_2034 = VDEF <.MEM_2033>
  D.70952 ={v} {CLOBBER};
  # .MEM_2035 = VDEF <.MEM_2034>
  D.70953 ={v} {CLOBBER};
  # .MEM_2036 = VDEF <.MEM_2035>
  D.70954 ={v} {CLOBBER};
  # .MEM_2037 = VDEF <.MEM_2036>
  D.70940 ={v} {CLOBBER};
  # .MEM_2038 = VDEF <.MEM_2037>
  D.70941 ={v} {CLOBBER};
  # .MEM_2039 = VDEF <.MEM_2038>
  D.70942 ={v} {CLOBBER};
  # .MEM_2040 = VDEF <.MEM_2039>
  D.70927 ={v} {CLOBBER};
  # .MEM_2041 = VDEF <.MEM_2040>
  D.70926 ={v} {CLOBBER};
  # .MEM_2042 = VDEF <.MEM_2041>
  D.70925 ={v} {CLOBBER};
  # .MEM_2043 = VDEF <.MEM_2042>
  D.70898 ={v} {CLOBBER};
  # .MEM_2044 = VDEF <.MEM_2043>
  D.70897 ={v} {CLOBBER};
  # .MEM_2045 = VDEF <.MEM_2044>
  D.70896 ={v} {CLOBBER};
  # .MEM_65 = VDEF <.MEM_2045>
  D.48008 ={v} {CLOBBER};
  # .MEM_66 = VDEF <.MEM_65>
  D.48009 ={v} {CLOBBER};
  # .MEM_67 = VDEF <.MEM_66>
  D.48010 ={v} {CLOBBER};
  # .MEM_1984 = VDEF <.MEM_67>
  MEM[(struct dequeD.40449 *)this_4(D) + 48B] = __new_finish$_M_cur_2051;
  # .MEM_1985 = VDEF <.MEM_1984>
  MEM[(struct dequeD.40449 *)this_4(D) + 56B] = __new_finish$_M_first_2050;
  # .MEM_1986 = VDEF <.MEM_1985>
  MEM[(struct dequeD.40449 *)this_4(D) + 64B] = __new_finish$_M_last_2049;
  # .MEM_1987 = VDEF <.MEM_1986>
  MEM[(struct dequeD.40449 *)this_4(D) + 72B] = __new_finish$_M_node_2047;
  # DEBUG thisD.61552 => &D.48022
  # DEBUG __xD.61553 => &__old_finishD.48002
  # DEBUG thisD.61550 => &D.48021
  # DEBUG __xD.61551 => &__finish_nD.48006
  # DEBUG thisD.61548 => &D.48020
  # DEBUG __xD.61549 => __pos_6(D)
  # VUSE <.MEM_1987>
  # PT = nonlocal escaped 
  _75 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_curD.42940;
  # VUSE <.MEM_1987>
  # PT = nonlocal escaped 
  _161 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_lastD.42942;
  # VUSE <.MEM_1987>
  # PT = nonlocal escaped 
  _162 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_nodeD.42943;
  # DEBUG __firstD.70872 => &D.48020
  # DEBUG __lastD.70873 => &D.48021
  # DEBUG __resultD.70874 => &D.48022
  # DEBUG thisD.70876 => &D.70884
  # DEBUG __xD.70875 => &D.48022
  # DEBUG thisD.70878 => &D.70883
  # DEBUG __xD.70877 => &D.48021
  # DEBUG thisD.70880 => &D.70882
  # DEBUG __xD.70879 => &D.48020
  # DEBUG __last$_M_curD.71462 => SR.1849_2015
  # DEBUG __last$_M_firstD.71463 => SR.1850_2014
  # DEBUG __last$_M_lastD.71464 => SR.1851_2012
  # DEBUG __last$_M_nodeD.71465 => SR.1852_2011
  # DEBUG __resultD.71036 => &D.70884
  # DEBUG __xD.71043 => &__lastD.71035
  # DEBUG __yD.71042 => &__firstD.71034
  # DEBUG __sizeD.60431 => 4
  _1074 = (long intD.12) _162;
  _1075 = prephitmp_2187 - _1074;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _1076 = _1075 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _1077 = _1076 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _1078 = _1077 * 128;
  _1083 = _1045 - prephitmp_1465;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _1084 = _1083 /[ex] 4;
  _1085 = _1078 + _1084;
  _1087 = (long intD.12) _161;
  _1089 = (long intD.12) _75;
  _1090 = _1087 - _1089;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _1091 = _1090 /[ex] 4;
  __len_1092 = _1085 + _1091;
  # DEBUG __lenD.71039 => __len_1092
  if (__len_1092 <= 0)
    goto <bb 99>;
  else
    goto <bb 81>;
;;    succ:       99 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                81 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 72, next block 74, flags: (NEW)
;;    pred:       71 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       74 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 74, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                80 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1911 = PHI <__n_1048(73), __n_1058(80)>
  # .MEM_259 = PHI <.MEM_1925(73), .MEM_2010(80)>
  # PT = nonlocal escaped 
  # SR.1860_2009 = PHI <SR.1849_2015(73), SR.1860_2008(80)>
  # PT = nonlocal escaped 
  # SR.1861_2006 = PHI <SR.1851_2012(73), SR.1861_2001(80)>
  # PT = nonlocal escaped 
  # SR.1862_2000 = PHI <SR.1852_2011(73), SR.1862_1998(80)>
  # PT = nonlocal escaped 
  # SR.1863_1919 = PHI <_64(73), SR.1863_1918(80)>
  # PT = nonlocal escaped 
  # SR.1864_1917 = PHI <SR.1851_919(73), SR.1864_1916(80)>
  # PT = nonlocal escaped 
  # SR.1865_1914 = PHI <SR.1852_920(73), SR.1865_1913(80)>
  # DEBUG __nD.71021 => __n_1911
  # DEBUG D#100ptD.0 => &D.71014
  # DEBUG thisD.61292 => D#100ptD.0
  # DEBUG D#100ptD.0 => &D.71012
  # DEBUG thisD.61289 => D#100ptD.0
  # VUSE <.MEM_259>
  _1052 = *SR.1860_2009;
  # .MEM_2010 = VDEF <.MEM_259>
  *SR.1863_1919 = _1052;
  # DEBUG thisD.71022 => &D.71012
  # PT = nonlocal escaped 
  _1053 = SR.1860_2009 + 4;
  if (_1053 == SR.1861_2006)
    goto <bb 75>;
  else
    goto <bb 76>;
;;    succ:       75 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                76 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 75, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       74 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71026 => &D.71012
  # PT = nonlocal escaped 
  _1064 = SR.1862_2000 + 8;
  # DEBUG thisD.71028 => &D.71012
  # DEBUG __new_nodeD.71027 => _1064
  # VUSE <.MEM_2010>
  # PT = nonlocal escaped 
  _1065 = MEM[(intD.9 * *)SR.1862_2000 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _1066 = _1065 + 512;
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       74 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                75 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1860_2008 = PHI <_1053(74), _1065(75)>
  # PT = nonlocal escaped 
  # SR.1861_2001 = PHI <SR.1861_2006(74), _1066(75)>
  # PT = nonlocal escaped 
  # SR.1862_1998 = PHI <SR.1862_2000(74), _1064(75)>
  # DEBUG thisD.71023 => &D.71014
  # PT = nonlocal escaped 
  _1056 = SR.1863_1919 + 4;
  if (_1056 == SR.1864_1917)
    goto <bb 77>;
  else
    goto <bb 78>;
;;    succ:       77 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                78 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 77, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       76 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71030 => &D.71014
  # PT = nonlocal escaped 
  _1068 = SR.1865_1914 + 8;
  # DEBUG thisD.71032 => &D.71014
  # DEBUG __new_nodeD.71031 => _1068
  # VUSE <.MEM_2010>
  # PT = nonlocal escaped 
  _1069 = MEM[(intD.9 * *)SR.1865_1914 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _1070 = _1069 + 512;
;;    succ:       78 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 78, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 77, next block 79, flags: (NEW, REACHABLE)
;;    pred:       76 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                77 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1863_1918 = PHI <_1056(76), _1069(77)>
  # PT = nonlocal escaped 
  # SR.1864_1916 = PHI <SR.1864_1917(76), _1070(77)>
  # PT = nonlocal escaped 
  # SR.1865_1913 = PHI <SR.1865_1914(76), _1068(77)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_1058 = __n_1911 + -1;
  # DEBUG __nD.71021 => __n_1058
  # DEBUG __nD.71021 => __n_1058
  if (__n_1058 <= 0)
    goto <bb 79>;
  else
    goto <bb 80>;
;;    succ:       79 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 79, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 78, next block 80, flags: (NEW)
;;    pred:       78 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_2111 = PHI <.MEM_2010(78)>
  goto <bb 72>;
;;    succ:       72 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 80, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 79, next block 81, flags: (NEW)
;;    pred:       78 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 74>;
;;    succ:       74 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 81, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 80, next block 82, flags: (NEW)
;;    pred:       72 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       82 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 82, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 81, next block 83, flags: (NEW)
;;    pred:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                97 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __len.137_1507 = PHI <__len_1092(81), __len_1125(97)>
  # .MEM_176 = PHI <.MEM_1987(81), .MEM_1466(97)>
  # PT = nonlocal escaped 
  # __rend_2046 = PHI <prephitmp_1131(81), SR.1853_68(97)>
  # PT = nonlocal escaped 
  # SR.1854_2020 = PHI <prephitmp_1133(81), SR.1854_2019(97)>
  # PT = nonlocal escaped 
  # SR.1855_2017 = PHI <prephitmp_1176(81), SR.1855_2016(97)>
  # PT = nonlocal escaped 
  # SR.1849_1912 = PHI <SR.1849_2015(81), SR.1849_59(97)>
  # PT = nonlocal escaped 
  # SR.1850_58 = PHI <SR.1850_2014(81), SR.1850_1909(97)>
  # PT = nonlocal escaped 
  # SR.1852_1908 = PHI <SR.1852_2011(81), SR.1852_1907(97)>
  # DEBUG __last$_M_nodeD.71465 => SR.1852_1908
  # DEBUG __last$_M_firstD.71463 => SR.1850_58
  # DEBUG __last$_M_curD.71462 => SR.1849_1912
  _1095 = (long intD.12) SR.1849_1912;
  _1097 = (long intD.12) SR.1850_58;
  _1098 = _1095 - _1097;
  # RANGE [-2305843009213693952, 2305843009213693951]
  __llen_1099 = _1098 /[ex] 4;
  # DEBUG __llenD.71044 => __llen_1099
  # DEBUG __lendD.71045 => SR.1849_1912
  _1101 = (long intD.12) __rend_2046;
  _1103 = (long intD.12) SR.1854_2020;
  _1104 = _1101 - _1103;
  # RANGE [-2305843009213693952, 2305843009213693951]
  __rlen_1105 = _1104 /[ex] 4;
  # DEBUG __rlenD.71046 => __rlen_1105
  # DEBUG __rendD.71047 => __rend_2046
  if (__llen_1099 == 0)
    goto <bb 83>;
  else
    goto <bb 84>;
;;    succ:       83 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                84 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 83, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 82, next block 84, flags: (NEW, REACHABLE)
;;    pred:       82 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # DEBUG __llenD.71044 => 128
  # VUSE <.MEM_176>
  # PT = nonlocal escaped 
  _1107 = MEM[(intD.9 * *)SR.1852_1908 + -8B];
  # PT = nonlocal escaped 
  SR.1849_1108 = _1107 + 512;
  # DEBUG __lendD.71045 => SR.1849_1108
  pretmp_1535 = (long intD.12) SR.1849_1108;
;;    succ:       84 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 84, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 83, next block 85, flags: (NEW, REACHABLE)
;;    pred:       82 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1849_1121 = PHI <SR.1849_1912(82), SR.1849_1108(83)>
  # __llen_2086 = PHI <__llen_1099(82), 128(83)>
  # prephitmp_1534 = PHI <_1095(82), pretmp_1535(83)>
  # DEBUG __llenD.71044 => __llen_2086
  # DEBUG __lendD.71045 => SR.1849_1121
  if (__rlen_1105 == 0)
    goto <bb 85>;
  else
    goto <bb 86>;
;;    succ:       85 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                86 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 85, loop depth 1, count 0, freq 4550, maybe hot
;;    prev block 84, next block 86, flags: (NEW, REACHABLE)
;;    pred:       84 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # DEBUG __rlenD.71046 => 128
  # VUSE <.MEM_176>
  # PT = nonlocal escaped 
  _1110 = MEM[(intD.9 * *)SR.1855_2017 + -8B];
  # PT = nonlocal escaped 
  __rend_1111 = _1110 + 512;
  # DEBUG __rendD.71047 => __rend_1111
;;    succ:       86 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 86, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 85, next block 87, flags: (NEW, REACHABLE)
;;    pred:       84 [50.0%]  (FALSE_VALUE,EXECUTABLE)
;;                85 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __rend_1123 = PHI <__rend_2046(84), __rend_1111(85)>
  # __rlen_2081 = PHI <__rlen_1105(84), 128(85)>
  # DEBUG __rlenD.71046 => __rlen_2081
  # DEBUG __rendD.71047 => __rend_1123
  # DEBUG __aD.71050 => &__llenD.71044
  # DEBUG __bD.71049 => &__rlenD.71046
  _1448 = MIN_EXPR <__len.137_1507, __llen_2086>;
  # DEBUG __aD.71052 => &__lenD.71039
  # DEBUG __bD.71051 => NULL
  __clen_493 = MIN_EXPR <_1448, __rlen_2081>;
  # DEBUG __clenD.71048 => D#1085ptD.0
  # RANGE [0, 18446744073709551615]
  __clen.146_1118 = (long unsigned intD.14) __clen_493;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _1119 = __clen.146_1118 * 4;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _1120 = -_1119;
  # PT = nonlocal escaped 
  _1122 = SR.1849_1121 + _1120;
  # DEBUG __firstD.71071 => _1122
  # DEBUG __lastD.71072 => SR.1849_1121
  # DEBUG __resultD.71073 => __rend_1123
  # DEBUG __itD.57014 => SR.1849_1121
  # DEBUG __itD.54242 => SR.1849_1121
  # DEBUG __itD.57012 => _1122
  # DEBUG __itD.54242 => _1122
  # DEBUG __firstD.71076 => _1122
  # DEBUG __lastD.71075 => SR.1849_1121
  # DEBUG __resultD.71074 => __rend_1123
  # DEBUG __itD.56994 => __rend_1123
  # DEBUG __itD.54245 => __rend_1123
  # DEBUG __itD.56992 => SR.1849_1121
  # DEBUG __itD.54245 => SR.1849_1121
  # DEBUG __itD.56990 => _1122
  # DEBUG __itD.54245 => _1122
  # DEBUG __firstD.71079 => NULL
  # DEBUG __lastD.71078 => NULL
  # DEBUG __resultD.71077 => NULL
  # DEBUG __simpleD.71083 => 1
  # DEBUG __firstD.71086 => NULL
  # DEBUG __lastD.71085 => NULL
  # DEBUG __resultD.71084 => NULL
  __first.79_1189 = (long intD.12) _1122;
  _1190 = prephitmp_1534 - __first.79_1189;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _Num_1191 = _1190 /[ex] 4;
  # DEBUG _NumD.71087 => _Num_1191
  if (_Num_1191 != 0)
    goto <bb 87>;
  else
    goto <bb 88>;
;;    succ:       87 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                88 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 87, loop depth 1, count 0, freq 3547, maybe hot
;;    prev block 86, next block 88, flags: (NEW, REACHABLE)
;;    pred:       86 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _1192 = (long unsigned intD.14) _1190;
  # RANGE [0, 18446744073709551615]
  _1193 = -_1192;
  # PT = nonlocal escaped 
  _1194 = __rend_1123 + _1193;
  # .MEM_2065 = VDEF <.MEM_176>
  # USE = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  # CLB = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  memmoveD.995 (_1194, _1122, _1192);
;;    succ:       88 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 88, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 87, next block 89, flags: (NEW, REACHABLE)
;;    pred:       86 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                87 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1466 = PHI <.MEM_176(86), .MEM_2065(87)>
  # DEBUG thisD.71054 => &__lastD.71035
  # DEBUG __nD.71053 => D#1085ptD.0
  _1124 = -__clen_493;
  # DEBUG thisD.71064 => &__lastD.71035
  # DEBUG __nD.71065 => _1124
  __offset_1165 = __llen_1099 - __clen_493;
  # DEBUG __offsetD.71066 => __offset_1165
  # DEBUG __sizeD.60431 => 4
  _501 = (unsigned long) __offset_1165;
  if (_501 <= 127)
    goto <bb 139>;
  else
    goto <bb 140>;
;;    succ:       139 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                140 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 89, loop depth 1, count 0, freq 4052, maybe hot
;;   Invalid sum of incoming frequencies 4218, should be 4052
;;    prev block 88, next block 90, flags: (NEW, REACHABLE)
;;    pred:       140 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.107_1170 = __offset_1165 >> 7;
  goto <bb 91>;
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 90, loop depth 1, count 0, freq 1499, maybe hot
;;    prev block 89, next block 91, flags: (NEW, REACHABLE)
;;    pred:       140 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _1172 = ~_501;
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _1173 = _1172 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _1174 = (long intD.12) _1173;
  # RANGE [-144115188075855872, -1]
  iftmp.107_1175 = ~_1174;
;;    succ:       91 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 91, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       89 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                90 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.107_1177 = PHI <iftmp.107_1170(89), iftmp.107_1175(90)>
  # DEBUG __node_offsetD.71067 => iftmp.107_1177
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.109_1178 = (long unsigned intD.14) iftmp.107_1177;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _1179 = __node_offset.109_1178 * 8;
  # PT = nonlocal escaped 
  SR.1852_1180 = SR.1852_1908 + _1179;
  # DEBUG thisD.71069 => &__lastD.71035
  # DEBUG __new_nodeD.71068 => SR.1852_1180
  # DEBUG __last$_M_nodeD.71465 => SR.1852_1180
  # VUSE <.MEM_1466>
  # PT = nonlocal escaped 
  SR.1850_1181 = *SR.1852_1180;
  # DEBUG __last$_M_firstD.71463 => SR.1850_1181
  # DEBUG __sizeD.60431 => 4
  # DEBUG __sizeD.60431 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _1183 = iftmp.107_1177 * 128;
  _1184 = __offset_1165 - _1183;
  # RANGE [0, 18446744073709551615]
  _1185 = (long unsigned intD.14) _1184;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _1186 = _1185 * 4;
  # PT = nonlocal escaped 
  SR.1849_1187 = SR.1850_1181 + _1186;
  # DEBUG __last$_M_curD.71462 => SR.1849_1187
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 92, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       139 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                91 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1849_59 = PHI <SR.1849_1169(139), SR.1849_1187(91)>
  # PT = nonlocal escaped 
  # SR.1850_1909 = PHI <SR.1850_58(139), SR.1850_1181(91)>
  # PT = nonlocal escaped 
  # SR.1852_1907 = PHI <SR.1852_1908(139), SR.1852_1180(91)>
  # DEBUG __last$_M_nodeD.71465 => SR.1852_1907
  # DEBUG __last$_M_firstD.71463 => SR.1850_1909
  # DEBUG __last$_M_curD.71462 => SR.1849_59
  # DEBUG thisD.71056 => &D.70884
  # DEBUG __nD.71055 => D#1085ptD.0
  # DEBUG thisD.71057 => &D.70884
  # DEBUG __nD.71058 => _1124
  __offset_1136 = __rlen_1105 - __clen_493;
  # DEBUG __offsetD.71059 => __offset_1136
  # DEBUG __sizeD.54289 => 4
  _495 = (unsigned long) __offset_1136;
  if (_495 <= 127)
    goto <bb 141>;
  else
    goto <bb 142>;
;;    succ:       141 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                142 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 93, loop depth 1, count 0, freq 4052, maybe hot
;;   Invalid sum of incoming frequencies 4218, should be 4052
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       142 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_1141 = __offset_1136 >> 7;
  goto <bb 95>;
;;    succ:       95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 94, loop depth 1, count 0, freq 1499, maybe hot
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       142 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _1143 = ~_495;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _1144 = _1143 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _1145 = (long intD.12) _1144;
  # RANGE [-144115188075855872, -1]
  iftmp.117_1146 = ~_1145;
;;    succ:       95 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 95, loop depth 1, count 0, freq 5551, maybe hot
;;    prev block 94, next block 96, flags: (NEW, REACHABLE)
;;    pred:       93 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                94 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_1148 = PHI <iftmp.117_1141(93), iftmp.117_1146(94)>
  # DEBUG __node_offsetD.71060 => iftmp.117_1148
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_1149 = (long unsigned intD.14) iftmp.117_1148;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _1150 = __node_offset.119_1149 * 8;
  # PT = nonlocal escaped 
  _1151 = SR.1855_2017 + _1150;
  # DEBUG thisD.71062 => &D.70884
  # DEBUG __new_nodeD.71061 => _1151
  # VUSE <.MEM_1466>
  # PT = nonlocal escaped 
  _1152 = *_1151;
  # DEBUG __sizeD.54289 => 4
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _1154 = iftmp.117_1148 * 128;
  _1155 = __offset_1136 - _1154;
  # RANGE [0, 18446744073709551615]
  _1156 = (long unsigned intD.14) _1155;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _1157 = _1156 * 4;
  # PT = nonlocal escaped 
  _1158 = _1152 + _1157;
;;    succ:       96 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 96, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       141 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                95 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1853_68 = PHI <_1140(141), _1158(95)>
  # PT = nonlocal escaped 
  # SR.1854_2019 = PHI <SR.1854_2020(141), _1152(95)>
  # PT = nonlocal escaped 
  # SR.1855_2016 = PHI <SR.1855_2017(141), _1151(95)>
  __len_1125 = __len.137_1507 - __clen_493;
  # DEBUG __lenD.71039 => __len_1125
  # DEBUG D#1094ptD.0 => {CLOBBER}
  # DEBUG __llenD.71044 => D#1094ptD.0
  # DEBUG D#1095ptD.0 => {CLOBBER}
  # DEBUG __rlenD.71046 => D#1095ptD.0
  if (__len_1125 <= 0)
    goto <bb 98>;
  else
    goto <bb 97>;
;;    succ:       98 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                97 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 97, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 96, next block 98, flags: (NEW)
;;    pred:       96 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 82>;
;;    succ:       82 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 98, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 97, next block 99, flags: (NEW)
;;    pred:       96 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1466>
  pretmp_1531 = MEM[(const struct iteratorD.42928 &)__pos_6(D)]._M_curD.42940;
  # VUSE <.MEM_1466>
  pretmp_1529 = MEM[(const struct iteratorD.42928 &)__pos_6(D)]._M_lastD.42942;
  # VUSE <.MEM_1466>
  pretmp_1527 = MEM[(const struct iteratorD.42928 &)__pos_6(D)]._M_nodeD.42943;
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 99, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       98 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                72 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_261 = PHI <.MEM_1466(98), .MEM_1987(72)>
  # PT = nonlocal escaped 
  # prephitmp_1530 = PHI <pretmp_1531(98), _75(72)>
  # PT = nonlocal escaped 
  # prephitmp_1528 = PHI <pretmp_1529(98), _161(72)>
  # PT = nonlocal escaped 
  # prephitmp_1526 = PHI <pretmp_1527(98), _162(72)>
  # DEBUG thisD.71041 => &D.70881
  # DEBUG __xD.71040 => &D.70884
  # DEBUG D#1096ptD.0 => {CLOBBER}
  # DEBUG __lenD.71039 => D#1096ptD.0
  # .MEM_2087 = VDEF <.MEM_261>
  D.70882 ={v} {CLOBBER};
  # .MEM_2089 = VDEF <.MEM_2087>
  D.70884 ={v} {CLOBBER};
  # .MEM_72 = VDEF <.MEM_2089>
  D.48020 ={v} {CLOBBER};
  # .MEM_73 = VDEF <.MEM_72>
  D.48021 ={v} {CLOBBER};
  # .MEM_74 = VDEF <.MEM_73>
  D.48022 ={v} {CLOBBER};
  # DEBUG thisD.61546 => &D.48026
  # DEBUG __xD.61547 => __pos_6(D)
  # .MEM_247 = VDEF <.MEM_74>
  D.48026._M_curD.42940 = prephitmp_1530;
  # VUSE <.MEM_247>
  # PT = nonlocal escaped 
  _157 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_firstD.42941;
  # .MEM_248 = VDEF <.MEM_247>
  D.48026._M_firstD.42941 = _157;
  # .MEM_249 = VDEF <.MEM_248>
  D.48026._M_lastD.42942 = prephitmp_1528;
  # .MEM_250 = VDEF <.MEM_249>
  D.48026._M_nodeD.42943 = prephitmp_1526;
  # .MEM_76 = VDEF <.MEM_250>
  # USE = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  # CLB = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (__firstD.47913, __lastD.47914, &D.48026);
  # .MEM_77 = VDEF <.MEM_76>
  D.48026 ={v} {CLOBBER};
  # .MEM_78 = VDEF <.MEM_77>
  __finish_nD.48006 ={v} {CLOBBER};
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 99, next block 101, flags: (NEW, REACHABLE)
;;    pred:       66 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_79 = VDEF <.MEM_1957>
  __midD.48028 = __firstD.47913;
  # VUSE <.MEM_79>
  # PT = nonlocal 
  __mid$_M_cur_211 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47913 clique 48 base 0];
  # DEBUG __mid$_M_curD.71354 => __mid$_M_cur_211
  # VUSE <.MEM_79>
  # PT = nonlocal 
  __mid$_M_first_212 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47913 + 8B clique 48 base 0];
  # DEBUG __mid$_M_firstD.71355 => __mid$_M_first_212
  # VUSE <.MEM_79>
  # PT = nonlocal 
  __mid$_M_last_149 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47913 + 16B clique 48 base 0];
  # DEBUG __mid$_M_lastD.71356 => __mid$_M_last_149
  # VUSE <.MEM_79>
  # PT = nonlocal 
  __mid$_M_node_213 = MEM[(struct _Deque_iteratorD.42910 *)&__firstD.47913 + 24B clique 48 base 0];
  # DEBUG __mid$_M_nodeD.71357 => __mid$_M_node_213
  # DEBUG __iD.61572 => &__midD.48028
  # DEBUG __nD.61573 => __elemsafter_55
  # DEBUG __dD.61574 => __elemsafter_55
  # DEBUG D#630ptD.0 => &__midD.48028
  # DEBUG D.61175 => D#630ptD.0
  # DEBUG __iD.61576 => &__midD.48028
  # DEBUG __nD.61575 => __elemsafter_55
  # DEBUG thisD.71115 => &__midD.48028
  # DEBUG __nD.71116 => __elemsafter_55
  _1214 = (long intD.12) __mid$_M_cur_211;
  _1216 = (long intD.12) __mid$_M_first_212;
  _1217 = _1214 - _1216;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _1218 = _1217 /[ex] 4;
  __offset_1219 = __elemsafter_55 + _1218;
  # DEBUG __offsetD.71117 => __offset_1219
  # DEBUG __sizeD.60431 => 4
  _492 = (unsigned long) __offset_1219;
  if (_492 <= 127)
    goto <bb 143>;
  else
    goto <bb 144>;
;;    succ:       143 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                144 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 101, loop depth 0, count 0, freq 401, maybe hot
;;    prev block 100, next block 102, flags: (NEW, REACHABLE)
;;    pred:       144 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.107_1224 = __offset_1219 >> 7;
  goto <bb 103>;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 0, count 0, freq 148, maybe hot
;;    prev block 101, next block 103, flags: (NEW, REACHABLE)
;;    pred:       144 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _1226 = ~_492;
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _1227 = _1226 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _1228 = (long intD.12) _1227;
  # RANGE [-144115188075855872, -1]
  iftmp.107_1229 = ~_1228;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 103, loop depth 0, count 0, freq 549, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       101 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                102 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.107_1231 = PHI <iftmp.107_1224(101), iftmp.107_1229(102)>
  # DEBUG __node_offsetD.71118 => iftmp.107_1231
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.109_1232 = (long unsigned intD.14) iftmp.107_1231;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _1233 = __node_offset.109_1232 * 8;
  # PT = nonlocal 
  __mid$_M_node_1234 = __mid$_M_node_213 + _1233;
  # DEBUG thisD.71120 => &__midD.48028
  # DEBUG __new_nodeD.71119 => __mid$_M_node_1234
  # DEBUG __mid$_M_nodeD.71357 => __mid$_M_node_1234
  # VUSE <.MEM_79>
  # PT = nonlocal escaped 
  __mid$_M_first_1235 = *__mid$_M_node_1234;
  # DEBUG __mid$_M_firstD.71355 => __mid$_M_first_1235
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __mid$_M_last_1236 = __mid$_M_first_1235 + 512;
  # DEBUG __mid$_M_lastD.71356 => __mid$_M_last_1236
  # DEBUG __sizeD.60431 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _1237 = iftmp.107_1231 * 128;
  _1238 = __offset_1219 - _1237;
  # RANGE [0, 18446744073709551615]
  _1239 = (long unsigned intD.14) _1238;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _1240 = _1239 * 4;
  # PT = nonlocal escaped 
  __mid$_M_cur_1241 = __mid$_M_first_1235 + _1240;
  # DEBUG __mid$_M_curD.71354 => __mid$_M_cur_1241
;;    succ:       104 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 103, next block 105, flags: (NEW, REACHABLE)
;;    pred:       143 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                103 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __mid$_M_cur_1900 = PHI <__mid$_M_cur_1223(143), __mid$_M_cur_1241(103)>
  # PT = nonlocal escaped 
  # __mid$_M_first_1885 = PHI <__mid$_M_first_212(143), __mid$_M_first_1235(103)>
  # PT = nonlocal escaped 
  # __mid$_M_last_1673 = PHI <__mid$_M_last_149(143), __mid$_M_last_1236(103)>
  # PT = nonlocal 
  # __mid$_M_node_1662 = PHI <__mid$_M_node_213(143), __mid$_M_node_1234(103)>
  # DEBUG __mid$_M_nodeD.71357 => __mid$_M_node_1662
  # DEBUG __mid$_M_lastD.71356 => __mid$_M_last_1673
  # DEBUG __mid$_M_firstD.71355 => __mid$_M_first_1885
  # DEBUG __mid$_M_curD.71354 => __mid$_M_cur_1900
  # DEBUG D#687ptD.0 => &this_4(D)->D.43590
  # DEBUG thisD.61570 => D#687ptD.0
  # DEBUG D#1093ptD.0 => &MEM[(struct _Deque_baseD.42881 *)this_4(D)]._M_implD.43041
  # DEBUG D#688ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61568 => &D.48041
  # DEBUG __xD.61569 => D#688ptD.0
  # VUSE <.MEM_79>
  # PT = nonlocal escaped 
  _82 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_curD.42940;
  # VUSE <.MEM_79>
  # PT = nonlocal escaped 
  _179 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_firstD.42941;
  # VUSE <.MEM_79>
  # PT = nonlocal escaped 
  _180 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_lastD.42942;
  # VUSE <.MEM_79>
  # PT = nonlocal escaped 
  _181 = MEM[(const struct iteratorD.42928 &)this_4(D) + 48]._M_nodeD.42943;
  # DEBUG D#689ptD.0 => &this_4(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61566 => &D.48040
  # DEBUG __xD.61567 => D#689ptD.0
  # DEBUG thisD.61564 => &D.48039
  # DEBUG __xD.61565 => __pos_6(D)
  # DEBUG __first1$_M_curD.71466 => __mid$_M_cur_1900
  # DEBUG __first1$_M_firstD.71467 => __mid$_M_first_1885
  # DEBUG __first1$_M_lastD.71468 => __mid$_M_last_1673
  # DEBUG __first1$_M_nodeD.71469 => __mid$_M_node_1662
  # VUSE <.MEM_79>
  # PT = nonlocal 
  __last_1684 = MEM[(struct _Deque_iteratorD.42910 *)&__lastD.47914 clique 48 base 0];
  # DEBUG __last1$_M_curD.71470 => __last_1684
  # VUSE <.MEM_79>
  # PT = nonlocal 
  __last$8_1685 = MEM[(struct _Deque_iteratorD.42910 *)&__lastD.47914 + 8B clique 48 base 0];
  # DEBUG __last1$_M_firstD.71471 => __last$8_1685
  # DEBUG D#1113ptD.0 => MEM[(struct _Deque_iteratorD.42910 *)&__lastD.47914 + 16B]
  # DEBUG __last1$_M_lastD.71472 => D#1113ptD.0
  # VUSE <.MEM_79>
  # PT = nonlocal 
  __last$24_1687 = MEM[(struct _Deque_iteratorD.42910 *)&__lastD.47914 + 24B clique 48 base 0];
  # DEBUG __last1$_M_nodeD.71473 => __last$24_1687
  # DEBUG __first2D.71091 => &D.48039
  # DEBUG __last2D.71092 => &D.48040
  # DEBUG __resultD.71093 => &D.48041
  # DEBUG __allocD.71094 => D#1093ptD.0
  # DEBUG thisD.71097 => NULL
  # DEBUG __xD.71096 => &D.48041
  # DEBUG D#603ptD.0 => D#1093ptD.0
  # DEBUG __first$_M_curD.71478 => __mid$_M_cur_1900
  # DEBUG __first$_M_firstD.71479 => __mid$_M_first_1885
  # DEBUG __first$_M_lastD.71480 => __mid$_M_last_1673
  # DEBUG __first$_M_nodeD.71481 => __mid$_M_node_1662
  # DEBUG __last$_M_curD.71474 => __last_1684
  # DEBUG __last$_M_firstD.71475 => __last$8_1685
  # DEBUG __last$_M_lastD.71476 => D#1113ptD.0
  # DEBUG __last$_M_nodeD.71477 => __last$24_1687
  # DEBUG __resultD.71099 => NULL
  # DEBUG D.71098 => D#603ptD.0
  # DEBUG thisD.71103 => &D.71111
  # DEBUG __xD.71102 => NULL
  # DEBUG __first$_M_curD.71482 => __mid$_M_cur_1900
  # DEBUG __first$_M_firstD.71483 => __mid$_M_first_1885
  # DEBUG __first$_M_lastD.71484 => __mid$_M_last_1673
  # DEBUG __first$_M_nodeD.71485 => __mid$_M_node_1662
  # DEBUG __last$_M_curD.71486 => __last_1684
  # DEBUG __last$_M_firstD.71487 => __last$8_1685
  # DEBUG __last$_M_lastD.71488 => D#1113ptD.0
  # DEBUG __last$_M_nodeD.71489 => __last$24_1687
  # DEBUG __resultD.71137 => &D.71111
  # DEBUG __assignableD.71140 => 1
  # DEBUG thisD.71142 => NULL
  # DEBUG __xD.71141 => &D.71111
  # DEBUG __first$_M_curD.71494 => __mid$_M_cur_1900
  # DEBUG __first$_M_firstD.71495 => __mid$_M_first_1885
  # DEBUG __first$_M_lastD.71496 => __mid$_M_last_1673
  # DEBUG __first$_M_nodeD.71497 => __mid$_M_node_1662
  # DEBUG __last$_M_curD.71490 => __last_1684
  # DEBUG __last$_M_firstD.71491 => __last$8_1685
  # DEBUG __last$_M_lastD.71492 => D#1113ptD.0
  # DEBUG __last$_M_nodeD.71493 => __last$24_1687
  # DEBUG __resultD.71143 => NULL
  # DEBUG thisD.71147 => &D.71148
  # DEBUG __xD.71146 => NULL
  # DEBUG __firstD.71498 => __mid$_M_cur_1900
  # DEBUG __first$8D.71499 => __mid$_M_first_1885
  # DEBUG __first$16D.71500 => __mid$_M_last_1673
  # DEBUG __first$24D.71501 => __mid$_M_node_1662
  # DEBUG __lastD.71502 => __last_1684
  # DEBUG __last$8D.71503 => __last$8_1685
  # DEBUG __last$_M_lastD.71504 => D#1113ptD.0
  # DEBUG __last$24D.71505 => __last$24_1687
  # DEBUG __resultD.71151 => &D.71148
  # DEBUG thisD.71153 => &D.71168
  # DEBUG __xD.71152 => &D.71148
  # DEBUG __itD.71161 => __last_1684
  # DEBUG __it$8D.71160 => __last$8_1685
  # DEBUG D#1092ptD.0 => MEM[(struct _Deque_iteratorD.42910 *)&__lastD.71150 + 16B clique 37 base 0]
  # DEBUG __it$16D.71159 => D#1092ptD.0
  # DEBUG __it$24D.71158 => __last$24_1687
  # DEBUG __it$_M_curD.60535 => __last_1684
  # DEBUG __it$_M_firstD.60534 => __last$8_1685
  # DEBUG __it$_M_lastD.60533 => D#1092ptD.0
  # DEBUG __it$_M_nodeD.60532 => __last$24_1687
  # DEBUG __itD.71165 => __mid$_M_cur_1900
  # DEBUG __it$8D.71164 => __mid$_M_first_1885
  # DEBUG __it$16D.71163 => __mid$_M_last_1673
  # DEBUG __it$24D.71162 => __mid$_M_node_1662
  # DEBUG __it$_M_curD.60529 => __mid$_M_cur_1900
  # DEBUG __it$_M_firstD.60528 => __mid$_M_first_1885
  # DEBUG __it$_M_lastD.60527 => __mid$_M_last_1673
  # DEBUG __it$_M_nodeD.60526 => __mid$_M_node_1662
  # DEBUG __resultD.71171 => &D.71168
  # DEBUG thisD.71173 => NULL
  # DEBUG __xD.71172 => &D.71168
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.71187 => __last_1684
  # DEBUG __it$8D.71186 => __last$8_1685
  # DEBUG __it$16D.71185 => D#1092ptD.0
  # DEBUG __it$24D.71183 => __last$24_1687
  # DEBUG __it$_M_curD.60489 => __last_1684
  # DEBUG __it$_M_firstD.60488 => __last$8_1685
  # DEBUG __it$_M_lastD.60487 => D#1092ptD.0
  # DEBUG __it$_M_nodeD.60486 => __last$24_1687
  # DEBUG __itD.71192 => __mid$_M_cur_1900
  # DEBUG __it$8D.71191 => __mid$_M_first_1885
  # DEBUG __it$16D.71190 => __mid$_M_last_1673
  # DEBUG __it$24D.71188 => __mid$_M_node_1662
  # DEBUG __it$_M_curD.60483 => __mid$_M_cur_1900
  # DEBUG __it$_M_firstD.60482 => __mid$_M_first_1885
  # DEBUG __it$_M_lastD.60481 => __mid$_M_last_1673
  # DEBUG __it$_M_nodeD.60480 => __mid$_M_node_1662
  # DEBUG __firstD.71506 => __mid$_M_cur_1900
  # DEBUG __first$8D.71507 => __mid$_M_first_1885
  # DEBUG __first$16D.71508 => __mid$_M_last_1673
  # DEBUG __first$24D.71509 => __mid$_M_node_1662
  # DEBUG __resultD.71174 => NULL
  # DEBUG __simpleD.71180 => 0
  # DEBUG thisD.71182 => &D.71193
  # DEBUG __xD.71181 => NULL
  # DEBUG __firstD.71513 => __mid$_M_cur_1900
  # DEBUG __first$_M_firstD.71514 => __mid$_M_first_1885
  # DEBUG __first$_M_lastD.71515 => __mid$_M_last_1673
  # DEBUG __first$_M_nodeD.71516 => __mid$_M_node_1662
  # DEBUG __resultD.71196 => &D.71193
  # DEBUG __xD.71204 => &__lastD.71195
  # DEBUG __yD.71203 => &__firstD.71194
  # DEBUG __sizeD.60431 => 4
  _1282 = (long intD.12) __last$24_1687;
  _1284 = (long intD.12) __mid$_M_node_1662;
  _1285 = _1282 - _1284;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _1286 = _1285 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _1287 = _1286 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _1288 = _1287 * 128;
  _1290 = (long intD.12) __last_1684;
  _1292 = (long intD.12) __last$8_1685;
  _1293 = _1290 - _1292;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _1294 = _1293 /[ex] 4;
  _1295 = _1288 + _1294;
  _1297 = (long intD.12) __mid$_M_last_1673;
  _1299 = (long intD.12) __mid$_M_cur_1900;
  _1300 = _1297 - _1299;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _1301 = _1300 /[ex] 4;
  __n_1302 = _1295 + _1301;
  # DEBUG __nD.71200 => __n_1302
  # DEBUG __nD.71200 => __n_1302
  if (__n_1302 <= 0)
    goto <bb 113>;
  else
    goto <bb 105>;
;;    succ:       113 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                105 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 104, next block 106, flags: (NEW)
;;    pred:       104 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       106 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 105, next block 107, flags: (NEW)
;;    pred:       105 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                112 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_81 = PHI <__n_1302(105), __n_1312(112)>
  # .MEM_262 = PHI <.MEM_79(105), .MEM_2142(112)>
  # PT = nonlocal escaped 
  # SR.1912_1906 = PHI <_82(105), SR.1912_1904(112)>
  # PT = nonlocal escaped 
  # SR.1913_1902 = PHI <_180(105), SR.1913_1901(112)>
  # PT = nonlocal escaped 
  # SR.1914_1898 = PHI <_181(105), SR.1914_1897(112)>
  # PT = nonlocal escaped 
  # __mid$_M_cur_1893 = PHI <__mid$_M_cur_1900(105), __mid$_M_cur_1892(112)>
  # PT = nonlocal escaped 
  # __mid$_M_last_1891 = PHI <__mid$_M_last_1673(105), __mid$_M_last_1889(112)>
  # PT = nonlocal 
  # __mid$_M_node_1888 = PHI <__mid$_M_node_1662(105), __mid$_M_node_1887(112)>
  # DEBUG __first$_M_nodeD.71516 => __mid$_M_node_1888
  # DEBUG __first$_M_lastD.71515 => __mid$_M_last_1891
  # DEBUG __firstD.71513 => __mid$_M_cur_1893
  # DEBUG __nD.71200 => __n_81
  # DEBUG D#100ptD.0 => &D.71193
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.71194
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_262>
  _1306 = MEM[(const intD.9 &)__mid$_M_cur_1893];
  # .MEM_2142 = VDEF <.MEM_262>
  *SR.1912_1906 = _1306;
  # DEBUG thisD.71201 => &__firstD.71194
  # PT = nonlocal escaped 
  __mid$_M_cur_1307 = __mid$_M_cur_1893 + 4;
  # DEBUG __firstD.71513 => __mid$_M_cur_1307
  if (__mid$_M_cur_1307 == __mid$_M_last_1891)
    goto <bb 107>;
  else
    goto <bb 108>;
;;    succ:       107 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                108 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 107, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 106, next block 108, flags: (NEW, REACHABLE)
;;    pred:       106 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71205 => &__firstD.71194
  # PT = nonlocal 
  __mid$_M_node_1318 = __mid$_M_node_1888 + 8;
  # DEBUG thisD.71207 => &__firstD.71194
  # DEBUG __new_nodeD.71206 => __mid$_M_node_1318
  # DEBUG __first$_M_nodeD.71516 => __mid$_M_node_1318
  # VUSE <.MEM_2142>
  # PT = nonlocal escaped 
  __mid$_M_cur_1319 = MEM[(intD.9 * *)__mid$_M_node_1888 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __mid$_M_last_1320 = __mid$_M_cur_1319 + 512;
  # DEBUG __first$_M_lastD.71515 => __mid$_M_last_1320
  # DEBUG __firstD.71513 => __mid$_M_cur_1319
;;    succ:       108 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 108, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 107, next block 109, flags: (NEW, REACHABLE)
;;    pred:       106 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                107 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __mid$_M_cur_1892 = PHI <__mid$_M_cur_1307(106), __mid$_M_cur_1319(107)>
  # PT = nonlocal escaped 
  # __mid$_M_last_1889 = PHI <__mid$_M_last_1891(106), __mid$_M_last_1320(107)>
  # PT = nonlocal 
  # __mid$_M_node_1887 = PHI <__mid$_M_node_1888(106), __mid$_M_node_1318(107)>
  # DEBUG __first$_M_nodeD.71516 => __mid$_M_node_1887
  # DEBUG __first$_M_lastD.71515 => __mid$_M_last_1889
  # DEBUG __firstD.71513 => __mid$_M_cur_1892
  # DEBUG thisD.71202 => &D.71193
  # PT = nonlocal escaped 
  _1310 = SR.1912_1906 + 4;
  if (_1310 == SR.1913_1902)
    goto <bb 109>;
  else
    goto <bb 110>;
;;    succ:       109 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                110 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 109, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       108 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71209 => &D.71193
  # PT = nonlocal escaped 
  _1322 = SR.1914_1898 + 8;
  # DEBUG thisD.71211 => &D.71193
  # DEBUG __new_nodeD.71210 => _1322
  # VUSE <.MEM_2142>
  # PT = nonlocal escaped 
  _1323 = MEM[(intD.9 * *)SR.1914_1898 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _1324 = _1323 + 512;
;;    succ:       110 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 110, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 109, next block 111, flags: (NEW, REACHABLE)
;;    pred:       108 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                109 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1912_1904 = PHI <_1310(108), _1323(109)>
  # PT = nonlocal escaped 
  # SR.1913_1901 = PHI <SR.1913_1902(108), _1324(109)>
  # PT = nonlocal escaped 
  # SR.1914_1897 = PHI <SR.1914_1898(108), _1322(109)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_1312 = __n_81 + -1;
  # DEBUG __nD.71200 => __n_1312
  # DEBUG __nD.71200 => __n_1312
  if (__n_1312 <= 0)
    goto <bb 111>;
  else
    goto <bb 112>;
;;    succ:       111 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                112 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 110, next block 112, flags: (NEW)
;;    pred:       110 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1914_1976 = PHI <SR.1914_1897(110)>
  # PT = nonlocal escaped 
  # SR.1913_1975 = PHI <SR.1913_1901(110)>
  # PT = nonlocal escaped 
  # SR.1912_1974 = PHI <SR.1912_1904(110)>
  goto <bb 113>;
;;    succ:       113 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 112, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 111, next block 113, flags: (NEW)
;;    pred:       110 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 106>;
;;    succ:       106 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 113, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       111 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                104 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_263 = PHI <.MEM_2142(111), .MEM_79(104)>
  # PT = nonlocal escaped 
  # SR.1912_1903 = PHI <SR.1912_1974(111), _82(104)>
  # PT = nonlocal escaped 
  # SR.1913_1899 = PHI <SR.1913_1975(111), _180(104)>
  # PT = nonlocal escaped 
  # SR.1914_1894 = PHI <SR.1914_1976(111), _181(104)>
  # DEBUG thisD.71199 => &__midD.71095
  # DEBUG __xD.71198 => &D.71193
  # .MEM_2157 = VDEF <.MEM_263>
  D.71193 ={v} {CLOBBER};
  # .MEM_2158 = VDEF <.MEM_2157>
  D.71168 ={v} {CLOBBER};
  # .MEM_2159 = VDEF <.MEM_2158>
  D.71148 ={v} {CLOBBER};
  # .MEM_2160 = VDEF <.MEM_2159>
  D.71111 ={v} {CLOBBER};
  # DEBUG thisD.71105 => &D.71114
  # DEBUG __xD.71104 => &__midD.71095
  # DEBUG thisD.71107 => &D.71113
  # DEBUG __xD.71106 => &D.48040
  # DEBUG thisD.71109 => &D.71112
  # DEBUG __xD.71108 => &D.48039
  # DEBUG D#676ptD.0 => D#1093ptD.0
  # DEBUG __firstD.71122 => &D.71112
  # DEBUG __lastD.71123 => &D.71113
  # DEBUG __resultD.71124 => &D.71114
  # DEBUG __allocD.71125 => D#676ptD.0
  # DEBUG D#675ptD.0 => D#676ptD.0
  # DEBUG thisD.71127 => &D.71132
  # DEBUG __xD.71126 => &D.71114
  # DEBUG thisD.71129 => &D.71133
  # DEBUG __xD.71128 => &D.71113
  # DEBUG thisD.71131 => &D.71134
  # DEBUG __xD.71130 => &D.71112
  # DEBUG D#674ptD.0 => D#675ptD.0
  # DEBUG __firstD.71213 => &D.71134
  # DEBUG __lastD.71214 => &D.71133
  # DEBUG __resultD.71215 => &D.71132
  # DEBUG D.71216 => D#674ptD.0
  # DEBUG thisD.71218 => &D.71223
  # DEBUG __xD.71217 => &D.71132
  # DEBUG thisD.71220 => &D.71224
  # DEBUG __xD.71219 => &D.71133
  # DEBUG thisD.71222 => &D.71225
  # DEBUG __xD.71221 => &D.71134
  # DEBUG __firstD.71226 => &D.71225
  # DEBUG __lastD.71227 => &D.71224
  # DEBUG __resultD.71228 => &D.71223
  # DEBUG __assignableD.71231 => 1
  # DEBUG thisD.71233 => &D.71240
  # DEBUG __xD.71232 => &D.71223
  # DEBUG thisD.71235 => &D.71239
  # DEBUG __xD.71234 => &D.71224
  # DEBUG thisD.71237 => &D.71238
  # DEBUG __xD.71236 => &D.71225
  # DEBUG __firstD.71241 => &D.71238
  # DEBUG __lastD.71242 => &D.71239
  # DEBUG __resultD.71243 => &D.71240
  # DEBUG thisD.71245 => &D.71252
  # DEBUG __xD.71244 => &D.71240
  # DEBUG thisD.71247 => &D.71251
  # DEBUG __xD.71246 => &D.71239
  # DEBUG thisD.71249 => &D.71250
  # DEBUG __xD.71248 => &D.71238
  # DEBUG __firstD.71253 => &D.71250
  # DEBUG __lastD.71254 => &D.71251
  # DEBUG __resultD.71255 => &D.71252
  # DEBUG thisD.71257 => &D.71272
  # DEBUG __xD.71256 => &D.71252
  # DEBUG thisD.71259 => NULL
  # DEBUG __xD.71258 => &D.71251
  # DEBUG __itD.71260 => NULL
  # DEBUG thisD.61360 => NULL
  # DEBUG __xD.61359 => NULL
  # DEBUG __itD.71261 => NULL
  # DEBUG thisD.71263 => &D.71271
  # DEBUG __xD.71262 => NULL
  # DEBUG thisD.71265 => NULL
  # DEBUG __xD.71264 => &D.71250
  # DEBUG __itD.71266 => NULL
  # DEBUG thisD.61352 => NULL
  # DEBUG __xD.61351 => NULL
  # DEBUG __itD.71267 => NULL
  # DEBUG thisD.71269 => &D.71270
  # DEBUG __xD.71268 => NULL
  # DEBUG __firstD.71273 => &D.71270
  # DEBUG __lastD.71274 => &D.71271
  # DEBUG __resultD.71275 => &D.71272
  # DEBUG thisD.71277 => NULL
  # DEBUG __xD.71276 => &D.71272
  # DEBUG __itD.71278 => NULL
  # DEBUG thisD.61328 => NULL
  # DEBUG __xD.61327 => NULL
  # DEBUG __itD.71279 => NULL
  # DEBUG thisD.71281 => &D.71296
  # DEBUG __xD.71280 => NULL
  # DEBUG thisD.71283 => NULL
  # DEBUG __xD.71282 => &D.71271
  # DEBUG __itD.71284 => NULL
  # DEBUG thisD.61320 => NULL
  # DEBUG __xD.61319 => NULL
  # DEBUG __itD.71285 => NULL
  # DEBUG thisD.71287 => &D.71295
  # DEBUG __xD.71286 => NULL
  # DEBUG thisD.71289 => NULL
  # DEBUG __xD.71288 => &D.71270
  # DEBUG __itD.71290 => NULL
  # DEBUG thisD.61312 => NULL
  # DEBUG __xD.61311 => NULL
  # DEBUG __itD.71291 => NULL
  # DEBUG thisD.71293 => &D.71294
  # DEBUG __xD.71292 => NULL
  # DEBUG __firstD.71297 => &D.71294
  # DEBUG __lastD.71298 => &D.71295
  # DEBUG __resultD.71299 => &D.71296
  # DEBUG __simpleD.71303 => 0
  # DEBUG thisD.71305 => &D.71312
  # DEBUG __xD.71304 => &D.71296
  # DEBUG thisD.71307 => &D.71311
  # DEBUG __xD.71306 => &D.71295
  # DEBUG thisD.71309 => &D.71310
  # DEBUG __xD.71308 => &D.71294
  # DEBUG __firstD.71313 => &D.71310
  # DEBUG __lastD.71314 => &D.71311
  # DEBUG __resultD.71315 => &D.71312
  # DEBUG __xD.71323 => &D.71311
  # DEBUG __yD.71322 => &D.71310
  # DEBUG __sizeD.54289 => 4
  _1398 = (long intD.12) _181;
  _1400 = (long intD.12) SR.1759_2052;
  _1401 = _1398 - _1400;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _1402 = _1401 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _1403 = _1402 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _1404 = _1403 * 128;
  _1406 = (long intD.12) _82;
  _1408 = (long intD.12) _179;
  _1409 = _1406 - _1408;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _1410 = _1409 /[ex] 4;
  _1411 = _1404 + _1410;
  _1413 = (long intD.12) SR.1758_2053;
  _1415 = (long intD.12) SR.1756_2068;
  _1416 = _1413 - _1415;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _1417 = _1416 /[ex] 4;
  __n_1418 = _1411 + _1417;
  # DEBUG __nD.71319 => __n_1418
  # DEBUG __nD.71319 => __n_1418
  if (__n_1418 <= 0)
    goto <bb 114>;
  else
    goto <bb 115>;
;;    succ:       114 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                115 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 114, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 113, next block 115, flags: (NEW, REACHABLE)
;;    pred:       113 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                121 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2153 = PHI <.MEM_2160(113), .MEM_2079(121)>
  # DEBUG thisD.71318 => &D.71110
  # DEBUG __xD.71317 => &D.71312
  # .MEM_2272 = VDEF <.MEM_2153>
  D.71310 ={v} {CLOBBER};
  # .MEM_2273 = VDEF <.MEM_2272>
  D.71311 ={v} {CLOBBER};
  # .MEM_2274 = VDEF <.MEM_2273>
  D.71312 ={v} {CLOBBER};
  # .MEM_2275 = VDEF <.MEM_2274>
  D.71294 ={v} {CLOBBER};
  # .MEM_2276 = VDEF <.MEM_2275>
  D.71295 ={v} {CLOBBER};
  # .MEM_2277 = VDEF <.MEM_2276>
  D.71296 ={v} {CLOBBER};
  # .MEM_2278 = VDEF <.MEM_2277>
  D.71270 ={v} {CLOBBER};
  # .MEM_2279 = VDEF <.MEM_2278>
  D.71271 ={v} {CLOBBER};
  # .MEM_2280 = VDEF <.MEM_2279>
  D.71272 ={v} {CLOBBER};
  # .MEM_2281 = VDEF <.MEM_2280>
  D.71250 ={v} {CLOBBER};
  # .MEM_2282 = VDEF <.MEM_2281>
  D.71251 ={v} {CLOBBER};
  # .MEM_2283 = VDEF <.MEM_2282>
  D.71252 ={v} {CLOBBER};
  # .MEM_2284 = VDEF <.MEM_2283>
  D.71238 ={v} {CLOBBER};
  # .MEM_2285 = VDEF <.MEM_2284>
  D.71239 ={v} {CLOBBER};
  # .MEM_2286 = VDEF <.MEM_2285>
  D.71240 ={v} {CLOBBER};
  # .MEM_2287 = VDEF <.MEM_2286>
  D.71225 ={v} {CLOBBER};
  # .MEM_2288 = VDEF <.MEM_2287>
  D.71224 ={v} {CLOBBER};
  # .MEM_2289 = VDEF <.MEM_2288>
  D.71223 ={v} {CLOBBER};
  # .MEM_2290 = VDEF <.MEM_2289>
  D.71134 ={v} {CLOBBER};
  # .MEM_2291 = VDEF <.MEM_2290>
  D.71133 ={v} {CLOBBER};
  # .MEM_2292 = VDEF <.MEM_2291>
  D.71132 ={v} {CLOBBER};
  # .MEM_2293 = VDEF <.MEM_2292>
  D.71112 ={v} {CLOBBER};
  # .MEM_2294 = VDEF <.MEM_2293>
  D.71113 ={v} {CLOBBER};
  # .MEM_2295 = VDEF <.MEM_2294>
  D.71114 ={v} {CLOBBER};
  # .MEM_2296 = VDEF <.MEM_2295>
  __midD.71095 ={v} {CLOBBER};
  # .MEM_84 = VDEF <.MEM_2296>
  D.48039 ={v} {CLOBBER};
  # .MEM_85 = VDEF <.MEM_84>
  D.48040 ={v} {CLOBBER};
  # .MEM_86 = VDEF <.MEM_85>
  D.48041 ={v} {CLOBBER};
  # .MEM_1751 = VDEF <.MEM_86>
  MEM[(struct dequeD.40449 *)this_4(D) + 48B] = __new_finish$_M_cur_2051;
  # .MEM_1752 = VDEF <.MEM_1751>
  MEM[(struct dequeD.40449 *)this_4(D) + 56B] = __new_finish$_M_first_2050;
  # .MEM_1753 = VDEF <.MEM_1752>
  MEM[(struct dequeD.40449 *)this_4(D) + 64B] = __new_finish$_M_last_2049;
  # .MEM_1754 = VDEF <.MEM_1753>
  MEM[(struct dequeD.40449 *)this_4(D) + 72B] = __new_finish$_M_node_2047;
  # DEBUG thisD.61562 => &D.48045
  # DEBUG __xD.61563 => __pos_6(D)
  # VUSE <.MEM_1754>
  # PT = nonlocal escaped 
  _172 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_curD.42940;
  # .MEM_264 = VDEF <.MEM_1754>
  D.48045._M_curD.42940 = _172;
  # VUSE <.MEM_264>
  # PT = nonlocal escaped 
  _173 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_firstD.42941;
  # .MEM_265 = VDEF <.MEM_264>
  D.48045._M_firstD.42941 = _173;
  # VUSE <.MEM_265>
  # PT = nonlocal escaped 
  _174 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_lastD.42942;
  # .MEM_266 = VDEF <.MEM_265>
  D.48045._M_lastD.42942 = _174;
  # VUSE <.MEM_266>
  # PT = nonlocal escaped 
  _175 = MEM[(const struct iteratorD.42928 &)__pos_6(D) clique 1 base 1]._M_nodeD.42943;
  # .MEM_267 = VDEF <.MEM_266>
  D.48045._M_nodeD.42943 = _175;
  # .MEM_1755 = VDEF <.MEM_267>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.48028 clique 48 base 0] = __mid$_M_cur_1900;
  # .MEM_1756 = VDEF <.MEM_1755>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.48028 + 8B clique 48 base 0] = __mid$_M_first_1885;
  # .MEM_1757 = VDEF <.MEM_1756>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.48028 + 16B clique 48 base 0] = __mid$_M_last_1673;
  # .MEM_1758 = VDEF <.MEM_1757>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.48028 + 24B clique 48 base 0] = __mid$_M_node_1662;
  # .MEM_89 = VDEF <.MEM_1758>
  # USE = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  # CLB = nonlocal { D.47974 D.47998 D.48026 D.48045 D.70438 D.70441 } (escaped)
  _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (__firstD.47913, __midD.48028, &D.48045);
  # .MEM_90 = VDEF <.MEM_89>
  D.48045 ={v} {CLOBBER};
  # DEBUG D#1105ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_curD.71354 => D#1105ptD.0
  # DEBUG D#1106ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_firstD.71355 => D#1106ptD.0
  # DEBUG D#1107ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_lastD.71356 => D#1107ptD.0
  # DEBUG D#1108ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_nodeD.71357 => D#1108ptD.0
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 115, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 114, next block 116, flags: (NEW)
;;    pred:       113 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       116 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 116, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 115, next block 117, flags: (NEW)
;;    pred:       115 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                122 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_252 = PHI <__n_1418(115), __n_1428(122)>
  # .MEM_2100 = PHI <.MEM_2160(115), .MEM_2257(122)>
  # PT = nonlocal escaped 
  # SR.1918_1886 = PHI <SR.1756_2068(115), SR.1918_1884(122)>
  # PT = nonlocal escaped 
  # SR.1919_1883 = PHI <SR.1758_2053(115), SR.1919_1882(122)>
  # PT = nonlocal escaped 
  # SR.1920_52 = PHI <SR.1759_2052(115), SR.1920_51(122)>
  # PT = nonlocal escaped 
  # SR.1921_47 = PHI <SR.1912_1903(115), SR.1921_1870(122)>
  # PT = nonlocal escaped 
  # SR.1922_1869 = PHI <SR.1913_1899(115), SR.1922_1867(122)>
  # PT = nonlocal escaped 
  # SR.1923_1866 = PHI <SR.1914_1894(115), SR.1923_1865(122)>
  # DEBUG __nD.71319 => __n_252
  # DEBUG D#100ptD.0 => &D.71312
  # DEBUG thisD.61292 => D#100ptD.0
  # DEBUG D#100ptD.0 => &D.71310
  # DEBUG thisD.61289 => D#100ptD.0
  # VUSE <.MEM_2100>
  _1422 = *SR.1918_1886;
  # .MEM_2257 = VDEF <.MEM_2100>
  *SR.1921_47 = _1422;
  # DEBUG thisD.71320 => &D.71310
  # PT = nonlocal escaped 
  _1423 = SR.1918_1886 + 4;
  if (_1423 == SR.1919_1883)
    goto <bb 117>;
  else
    goto <bb 118>;
;;    succ:       117 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                118 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 117, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 116, next block 118, flags: (NEW, REACHABLE)
;;    pred:       116 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71324 => &D.71310
  # PT = nonlocal escaped 
  _1434 = SR.1920_52 + 8;
  # DEBUG thisD.71326 => &D.71310
  # DEBUG __new_nodeD.71325 => _1434
  # VUSE <.MEM_2257>
  # PT = nonlocal escaped 
  _1435 = MEM[(intD.9 * *)SR.1920_52 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _1436 = _1435 + 512;
;;    succ:       118 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 118, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       116 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                117 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1918_1884 = PHI <_1423(116), _1435(117)>
  # PT = nonlocal escaped 
  # SR.1919_1882 = PHI <SR.1919_1883(116), _1436(117)>
  # PT = nonlocal escaped 
  # SR.1920_51 = PHI <SR.1920_52(116), _1434(117)>
  # DEBUG thisD.71321 => &D.71312
  # PT = nonlocal escaped 
  _1426 = SR.1921_47 + 4;
  if (_1426 == SR.1922_1869)
    goto <bb 119>;
  else
    goto <bb 120>;
;;    succ:       119 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                120 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 119, loop depth 1, count 0, freq 612, maybe hot
;;    prev block 118, next block 120, flags: (NEW, REACHABLE)
;;    pred:       118 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71328 => &D.71312
  # PT = nonlocal escaped 
  _1438 = SR.1923_1866 + 8;
  # DEBUG thisD.71330 => &D.71312
  # DEBUG __new_nodeD.71329 => _1438
  # VUSE <.MEM_2257>
  # PT = nonlocal escaped 
  _1439 = MEM[(intD.9 * *)SR.1923_1866 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _1440 = _1439 + 512;
;;    succ:       120 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 120, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 119, next block 121, flags: (NEW, REACHABLE)
;;    pred:       118 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                119 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.1921_1870 = PHI <_1426(118), _1439(119)>
  # PT = nonlocal escaped 
  # SR.1922_1867 = PHI <SR.1922_1869(118), _1440(119)>
  # PT = nonlocal escaped 
  # SR.1923_1865 = PHI <SR.1923_1866(118), _1438(119)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_1428 = __n_252 + -1;
  # DEBUG __nD.71319 => __n_1428
  # DEBUG __nD.71319 => __n_1428
  if (__n_1428 <= 0)
    goto <bb 121>;
  else
    goto <bb 122>;
;;    succ:       121 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                122 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 121, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 120, next block 122, flags: (NEW)
;;    pred:       120 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_2079 = PHI <.MEM_2257(120)>
  goto <bb 114>;
;;    succ:       114 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 122, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 121, next block 123, flags: (NEW)
;;    pred:       120 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 116>;
;;    succ:       116 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 123, loop depth 0, count 0, freq 702, maybe hot
;;   Invalid sum of incoming frequencies 900, should be 702
;;    prev block 122, next block 124, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __n.116_303 = (long unsigned intD.14) _289;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _304 = __n.116_303 * 4;
  # PT = nonlocal escaped 
  __new_start$_M_cur_305 = prephitmp_1563 + _304;
  # DEBUG __tmp$_M_curD.71362 => __new_start$_M_cur_305
  goto <bb 9>;
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 124, loop depth 0, count 0, freq 1143, maybe hot
;;   Invalid sum of incoming frequencies 900, should be 1143
;;    prev block 123, next block 125, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_301 > 0)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                7 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 125, loop depth 0, count 0, freq 702, maybe hot
;;   Invalid sum of incoming frequencies 900, should be 702
;;    prev block 124, next block 126, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _333 = __elemsbefore.133_10 * 4;
  # PT = nonlocal escaped 
  SR.1744_334 = prephitmp_1563 + _333;
  # DEBUG __tmp$_M_curD.71358 => SR.1744_334
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 126, loop depth 0, count 0, freq 1143, maybe hot
;;   Invalid sum of incoming frequencies 900, should be 1143
;;    prev block 125, next block 127, flags: (NEW, REACHABLE)
;;    pred:       9 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_330 > 0)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 127, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 126, next block 128, flags: (NEW, REACHABLE)
;;    pred:       14 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _401 = __n_11(D) * 4;
  # PT = nonlocal escaped 
  __tmp$_M_cur_402 = _22 + _401;
  # DEBUG __tmp$_M_curD.71370 => __tmp$_M_cur_402
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 128, loop depth 0, count 0, freq 572, maybe hot
;;   Invalid sum of incoming frequencies 450, should be 572
;;    prev block 127, next block 129, flags: (NEW, REACHABLE)
;;    pred:       14 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_398 > 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       15 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 129, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 128, next block 130, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __n.116_545 = (long unsigned intD.14) _289;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _546 = __n.116_545 * 4;
  # PT = nonlocal escaped 
  __tmp$_M_cur_547 = _353 + _546;
  # DEBUG __tmp$_M_curD.71366 => __tmp$_M_cur_547
  goto <bb 31>;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 130, loop depth 0, count 0, freq 571, maybe hot
;;   Invalid sum of incoming frequencies 450, should be 571
;;    prev block 129, next block 131, flags: (NEW, REACHABLE)
;;    pred:       19 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_543 > 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 131, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 130, next block 132, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 9223372036854775807
  __n.106_589 = (long unsigned intD.14) _38;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _590 = __n.106_589 * 4;
  # PT = nonlocal 
  __mid$_M_cur_591 = __mid$_M_cur_1508 + _590;
  # DEBUG __mid$_M_curD.71342 => __mid$_M_cur_591
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 132, loop depth 0, count 0, freq 572, maybe hot
;;   Invalid sum of incoming frequencies 450, should be 572
;;    prev block 131, next block 133, flags: (NEW, REACHABLE)
;;    pred:       32 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_587 > 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 133, loop depth 0, count 0, freq 702, maybe hot
;;   Invalid sum of incoming frequencies 900, should be 702
;;    prev block 132, next block 134, flags: (NEW, REACHABLE)
;;    pred:       58 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _846 = __n_11(D) * 4;
  # PT = nonlocal escaped 
  __new_finish$_M_cur_847 = prephitmp_1131 + _846;
  # DEBUG __tmp$_M_curD.71441 => __new_finish$_M_cur_847
  goto <bb 62>;
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 134, loop depth 0, count 0, freq 1143, maybe hot
;;   Invalid sum of incoming frequencies 900, should be 1143
;;    prev block 133, next block 135, flags: (NEW, REACHABLE)
;;    pred:       58 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_843 > 0)
    goto <bb 59>;
  else
    goto <bb 60>;
;;    succ:       59 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                60 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 135, loop depth 0, count 0, freq 1143, maybe hot
;;   Invalid sum of incoming frequencies 900, should be 1143
;;    prev block 134, next block 136, flags: (NEW, REACHABLE)
;;    pred:       62 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_872 > 0)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                64 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 136, loop depth 0, count 0, freq 702, maybe hot
;;   Invalid sum of incoming frequencies 900, should be 702
;;    prev block 135, next block 137, flags: (NEW, REACHABLE)
;;    pred:       62 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  _813 = -__elemsafter_55;
  # RANGE [0, 18446744073709551615]
  __n.116_874 = (long unsigned intD.14) _813;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _875 = __n.116_874 * 4;
  # PT = nonlocal escaped 
  SR.1756_876 = prephitmp_1131 + _875;
  # DEBUG __tmp$_M_curD.71437 => SR.1756_876
  goto <bb 66>;
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 137, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 136, next block 138, flags: (NEW, REACHABLE)
;;    pred:       67 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  _921 = -__n.131_827;
  # RANGE [0, 18446744073709551615]
  __n.116_934 = (long unsigned intD.14) _921;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _935 = __n.116_934 * 4;
  # PT = nonlocal escaped 
  SR.1849_936 = _64 + _935;
  # DEBUG __tmp$_M_curD.71452 => SR.1849_936
  pretmp_2185 = (long intD.12) SR.1852_920;
  goto <bb 71>;
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 138, loop depth 0, count 0, freq 572, maybe hot
;;   Invalid sum of incoming frequencies 450, should be 572
;;    prev block 137, next block 139, flags: (NEW, REACHABLE)
;;    pred:       67 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_932 > 0)
    goto <bb 68>;
  else
    goto <bb 69>;
;;    succ:       68 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                69 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 139, loop depth 1, count 0, freq 3549, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 3549
;;    prev block 138, next block 140, flags: (NEW, REACHABLE)
;;    pred:       88 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __n.106_1167 = (long unsigned intD.14) _1124;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _1168 = __n.106_1167 * 4;
  # PT = nonlocal escaped 
  SR.1849_1169 = SR.1849_1912 + _1168;
  # DEBUG __last$_M_curD.71462 => SR.1849_1169
  goto <bb 92>;
;;    succ:       92 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 140, loop depth 1, count 0, freq 5778, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 5778
;;    prev block 139, next block 141, flags: (NEW, REACHABLE)
;;    pred:       88 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_1165 > 0)
    goto <bb 89>;
  else
    goto <bb 90>;
;;    succ:       89 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                90 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 141, loop depth 1, count 0, freq 3549, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 3549
;;    prev block 140, next block 142, flags: (NEW, REACHABLE)
;;    pred:       92 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __n.116_1138 = (long unsigned intD.14) _1124;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _1139 = __n.116_1138 * 4;
  # PT = nonlocal escaped 
  _1140 = __rend_2046 + _1139;
  goto <bb 96>;
;;    succ:       96 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 142, loop depth 1, count 0, freq 5778, maybe hot
;;   Invalid sum of incoming frequencies 4550, should be 5778
;;    prev block 141, next block 143, flags: (NEW, REACHABLE)
;;    pred:       92 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_1136 > 0)
    goto <bb 93>;
  else
    goto <bb 94>;
;;    succ:       93 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                94 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 143, loop depth 0, count 0, freq 351, maybe hot
;;    prev block 142, next block 144, flags: (NEW, REACHABLE)
;;    pred:       100 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  __n.106_1221 = (long unsigned intD.14) __elemsafter_55;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _1222 = __n.106_1221 * 4;
  # PT = nonlocal 
  __mid$_M_cur_1223 = __mid$_M_cur_211 + _1222;
  # DEBUG __mid$_M_curD.71354 => __mid$_M_cur_1223
  goto <bb 104>;
;;    succ:       104 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 144, loop depth 0, count 0, freq 572, maybe hot
;;   Invalid sum of incoming frequencies 450, should be 572
;;    prev block 143, next block 1, flags: (NEW, REACHABLE)
;;    pred:       100 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_1219 > 0)
    goto <bb 101>;
  else
    goto <bb 102>;
;;    succ:       101 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                102 [27.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>] (_ZNSt5dequeIiSaIiEEaSERKS1_, funcdef_no=2820, decl_uid=43169, cgraph_uid=1287, symbol_order=1288)


Pass statistics:
----------------

std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>] (struct dequeD.40449 * const thisD.43170, const struct dequeD.40449 & __xD.43171)
{
  intD.9 * * __first$_M_nodeD.72006;
  intD.9 * __first$_M_lastD.72005;
  intD.9 * const __firstD.72003;
  intD.9 * * SR.2108D.72002;
  intD.9 * SR.2107D.72001;
  intD.9 * SR.2106D.72000;
  intD.9 * * __first$24D.71999;
  intD.9 * __first$16D.71998;
  intD.9 * __first$8D.71997;
  intD.9 * __firstD.71996;
  intD.9 * * __last$24D.71995;
  intD.9 * __last$8D.71993;
  intD.9 * __lastD.71992;
  intD.9 * * __first$24D.71991;
  intD.9 * __first$16D.71990;
  intD.9 * __first$8D.71989;
  intD.9 * __firstD.71988;
  intD.9 * * __first$_M_nodeD.71987;
  intD.9 * __first$_M_lastD.71986;
  intD.9 * __first$_M_firstD.71985;
  intD.9 * __first$_M_curD.71984;
  intD.9 * * __last$_M_nodeD.71983;
  intD.9 * __last$_M_lastD.71982;
  intD.9 * __last$_M_firstD.71981;
  intD.9 * __last$_M_curD.71980;
  intD.9 * * __last$_M_nodeD.71979;
  intD.9 * __last$_M_lastD.71978;
  intD.9 * __last$_M_firstD.71977;
  intD.9 * __last$_M_curD.71976;
  intD.9 * * __first$_M_nodeD.71975;
  intD.9 * __first$_M_lastD.71974;
  intD.9 * __first$_M_firstD.71973;
  intD.9 * __first$_M_curD.71972;
  intD.9 * * __tmp$_M_nodeD.71971;
  intD.9 * __tmp$_M_lastD.71970;
  intD.9 * __tmp$_M_firstD.71969;
  intD.9 * __tmp$_M_curD.71968;
  intD.9 * * __last$_M_nodeD.71967;
  intD.9 * __last$_M_lastD.71966;
  intD.9 * __last$_M_firstD.71965;
  intD.9 * __last$_M_curD.71964;
  intD.9 * * __first$_M_nodeD.71963;
  intD.9 * __first$_M_lastD.71962;
  intD.9 * __first$_M_firstD.71961;
  intD.9 * __first$_M_curD.71960;
  intD.9 * * __first$_M_nodeD.71959;
  intD.9 * __first$_M_lastD.71958;
  intD.9 * const __firstD.71956;
  intD.9 * * SR.2063D.71955;
  intD.9 * SR.2062D.71954;
  intD.9 * SR.2061D.71953;
  intD.9 * * __first$24D.71952;
  intD.9 * __first$16D.71951;
  intD.9 * __first$8D.71950;
  intD.9 * __firstD.71949;
  intD.9 * * __last$24D.71948;
  intD.9 * __last$8D.71946;
  intD.9 * __lastD.71945;
  intD.9 * * __first$24D.71944;
  intD.9 * __first$16D.71943;
  intD.9 * __first$8D.71942;
  intD.9 * __firstD.71941;
  intD.9 * * __first$_M_nodeD.71940;
  intD.9 * __first$_M_lastD.71939;
  intD.9 * __first$_M_firstD.71938;
  intD.9 * __first$_M_curD.71937;
  intD.9 * * __last$_M_nodeD.71936;
  intD.9 * __last$_M_lastD.71935;
  intD.9 * __last$_M_firstD.71934;
  intD.9 * __last$_M_curD.71933;
  intD.9 * * __last$_M_nodeD.71932;
  intD.9 * __last$_M_lastD.71931;
  intD.9 * __last$_M_firstD.71930;
  intD.9 * __last$_M_curD.71929;
  intD.9 * * __first$_M_nodeD.71928;
  intD.9 * __first$_M_lastD.71927;
  intD.9 * __first$_M_firstD.71926;
  intD.9 * __first$_M_curD.71925;
  intD.9 * * __tmp$_M_nodeD.71924;
  intD.9 * __tmp$_M_lastD.71923;
  intD.9 * __tmp$_M_firstD.71922;
  intD.9 * __tmp$_M_curD.71921;
  intD.9 * * __last$_M_nodeD.71920;
  intD.9 * __last$_M_lastD.71919;
  intD.9 * __last$_M_firstD.71918;
  intD.9 * __last$_M_curD.71917;
  intD.9 * * __first$_M_nodeD.71916;
  intD.9 * __first$_M_lastD.71915;
  intD.9 * __first$_M_firstD.71914;
  intD.9 * __first$_M_curD.71913;
  intD.9 * * __new_finish$_M_nodeD.71912;
  intD.9 * __new_finish$_M_lastD.71911;
  intD.9 * __new_finish$_M_firstD.71910;
  intD.9 * __new_finish$_M_curD.71909;
  intD.9 * * __new_start$_M_nodeD.71908;
  intD.9 * __new_start$_M_lastD.71907;
  intD.9 * __new_start$_M_firstD.71906;
  intD.9 * __new_start$_M_curD.71905;
  intD.9 * * __last$_M_nodeD.71904;
  intD.9 * __last$_M_lastD.71903;
  intD.9 * __last$_M_firstD.71902;
  intD.9 * __last$_M_curD.71901;
  intD.9 * * __first$_M_nodeD.71900;
  intD.9 * const __first$16D.71899;
  intD.9 * __first$_M_firstD.71898;
  intD.9 * const __firstD.71897;
  intD.9 * * __tmp$_M_nodeD.71896;
  intD.9 * __tmp$_M_lastD.71895;
  intD.9 * __tmp$_M_firstD.71894;
  intD.9 * __tmp$_M_curD.71893;
  intD.9 * * __first$_M_nodeD.71892;
  intD.9 * __first$_M_lastD.71891;
  intD.9 * __first$_M_firstD.71890;
  intD.9 * __first$_M_curD.71889;
  intD.9 * * __last$_M_nodeD.71888;
  intD.9 * __last$_M_lastD.71887;
  intD.9 * __last$_M_firstD.71886;
  intD.9 * __last$_M_curD.71885;
  intD.9 * * __last$_M_nodeD.71884;
  intD.9 * __last$_M_lastD.71883;
  intD.9 * __last$_M_firstD.71882;
  intD.9 * __last$_M_curD.71881;
  intD.9 * * __first$_M_nodeD.71880;
  intD.9 * __first$_M_lastD.71879;
  intD.9 * __first$_M_firstD.71878;
  intD.9 * __first$_M_curD.71877;
  intD.9 * * SR.1985D.71876;
  intD.9 * SR.1984D.71875;
  intD.9 * SR.1983D.71874;
  intD.9 * SR.1982D.71873;
  intD.9 * * SR.1981D.71872;
  intD.9 * SR.1980D.71871;
  intD.9 * SR.1979D.71870;
  intD.9 * SR.1978D.71869;
  intD.9 * * __mid$_M_nodeD.71868;
  intD.9 * __mid$_M_lastD.71867;
  intD.9 * __mid$_M_firstD.71866;
  intD.9 * __mid$_M_curD.71865;
  _DistanceD.47812 __nD.71851;
  struct _Deque_iteratorD.42910 __firstD.71845;
  struct _Deque_iteratorD.42910 __lastD.71846;
  struct _Deque_iteratorD.42910 __lastD.71826;
  struct _Deque_iteratorD.42910 __firstD.71827;
  struct _Deque_iteratorD.42908 D.71844;
  intD.9 * __itD.71843;
  intD.9 * __it$8D.71842;
  intD.9 * __it$16D.71841;
  intD.9 * * __it$24D.71839;
  intD.9 * __itD.71838;
  intD.9 * __it$8D.71837;
  intD.9 * __it$16D.71836;
  intD.9 * * __it$24D.71834;
  struct _Deque_iteratorD.42910 __firstD.71820;
  struct _Deque_iteratorD.42910 __lastD.71821;
  struct _Deque_iteratorD.42908 D.71819;
  struct _Deque_iteratorD.42910 D.71818;
  struct _Deque_iteratorD.42910 D.71817;
  intD.9 * __itD.71816;
  intD.9 * __it$8D.71815;
  intD.9 * __it$16D.71814;
  intD.9 * * __it$24D.71813;
  intD.9 * __itD.71812;
  intD.9 * __it$8D.71811;
  intD.9 * __it$16D.71810;
  intD.9 * * __it$24D.71809;
  struct _Deque_iteratorD.42910 __firstD.71800;
  struct _Deque_iteratorD.42910 __lastD.71801;
  struct _Deque_iteratorD.42910 __lastD.71795;
  struct _Deque_iteratorD.42910 __firstD.71796;
  struct _Deque_iteratorD.42908 D.71799;
  struct _Deque_iteratorD.42910 __firstD.71786;
  struct _Deque_iteratorD.42910 __lastD.71787;
  const difference_typeD.42938 __offsetD.71781;
  struct _SelfD.42939 & D.71785;
  struct _SelfD.42939 __tmpD.71774;
  const size_typeD.43117 __vacanciesD.71771;
  struct _Deque_iteratorD.42908 D.71768;
  struct _Deque_iteratorD.42908 D.71767;
  struct _Deque_iteratorD.42910 __firstD.71761;
  struct _Deque_iteratorD.42910 __lastD.71762;
  _DistanceD.47812 __nD.71748;
  struct _Deque_iteratorD.42910 __firstD.71742;
  struct _Deque_iteratorD.42910 __lastD.71743;
  struct _Deque_iteratorD.42910 __lastD.71723;
  struct _Deque_iteratorD.42910 __firstD.71724;
  struct _Deque_iteratorD.42908 D.71741;
  intD.9 * __itD.71740;
  intD.9 * __it$8D.71739;
  intD.9 * __it$16D.71738;
  intD.9 * * __it$24D.71736;
  intD.9 * __itD.71735;
  intD.9 * __it$8D.71734;
  intD.9 * __it$16D.71733;
  intD.9 * * __it$24D.71731;
  struct _Deque_iteratorD.42910 __firstD.71717;
  struct _Deque_iteratorD.42910 __lastD.71718;
  struct _Deque_iteratorD.42908 D.71716;
  struct _Deque_iteratorD.42910 D.71715;
  struct _Deque_iteratorD.42910 D.71714;
  intD.9 * __itD.71713;
  intD.9 * __it$8D.71712;
  intD.9 * __it$16D.71711;
  intD.9 * * __it$24D.71710;
  intD.9 * __itD.71709;
  intD.9 * __it$8D.71708;
  intD.9 * __it$16D.71707;
  intD.9 * * __it$24D.71706;
  struct _Deque_iteratorD.42910 __firstD.71697;
  struct _Deque_iteratorD.42910 __lastD.71698;
  struct _Deque_iteratorD.42910 __lastD.71692;
  struct _Deque_iteratorD.42910 __firstD.71693;
  struct _Deque_iteratorD.42908 D.71696;
  struct _Deque_iteratorD.42910 __firstD.71683;
  struct _Deque_iteratorD.42910 __lastD.71684;
  const difference_typeD.42938 __offsetD.71678;
  struct _SelfD.42939 & D.71682;
  struct _SelfD.42939 __tmpD.71669;
  const size_typeD.43117 __vacanciesD.71666;
  struct _Deque_iteratorD.42908 D.71663;
  struct _Deque_iteratorD.42908 D.71662;
  struct _Deque_iteratorD.42910 __firstD.71656;
  struct _Deque_iteratorD.42910 __lastD.71657;
  struct _Deque_iteratorD.42908 D.71655;
  struct _Deque_iteratorD.42908 D.71654;
  struct iteratorD.43111 D.71653;
  const size_typeD.43117 __nD.71642;
  struct iteratorD.43111 __new_startD.71645;
  struct iteratorD.43111 __new_finishD.71650;
  struct _Deque_iteratorD.42910 __firstD.71639;
  struct _Deque_iteratorD.42910 __lastD.71640;
  struct forward_iterator_tagD.4673 D.71641;
  const difference_typeD.44735 __offsetD.71632;
  struct _SelfD.44736 & D.71636;
  struct _SelfD.44736 __tmpD.71629;
  struct _Deque_iteratorD.42910 __lastD.71618;
  struct _Deque_iteratorD.42910 __firstD.71619;
  struct forward_iterator_tagD.4673 D.71626;
  struct iteratorD.43111 D.71625;
  struct _Deque_iteratorD.42910 __firstD.71613;
  struct _Deque_iteratorD.42910 __lastD.71614;
  intD.9 * * __nstartD.71599;
  struct const_iteratorD.43112 __midD.47478;
  struct iteratorD.43111 D.47491;
  struct _Deque_iteratorD.42910 D.50409;
  struct _Deque_iteratorD.42910 D.50408;
  struct _Deque_iteratorD.42908 D.47483;
  struct const_iteratorD.43112 D.47479;
  struct _Deque_iteratorD.42910 D.50405;
  struct _Deque_iteratorD.42910 D.50404;
  struct _Deque_iteratorD.42908 D.47476;
  struct _Deque_iteratorD.42908 D.47477;
  long intD.12 _5;
  intD.9 * * _6;
  intD.9 * _13;
  intD.9 * _17;
  long intD.12 _23;
  long intD.12 _24;
  long intD.12 _25;
  long intD.12 _26;
  long intD.12 _27;
  intD.9 * _28;
  long intD.12 _29;
  intD.9 * _30;
  long intD.12 _31;
  long intD.12 _32;
  long intD.12 _33;
  long intD.12 _34;
  long intD.12 _36;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  difference_typeD.42938 _41;
  size_typeD.43117 _42;
  intD.9 * * _43;
  long intD.12 _44;
  intD.9 * * _45;
  long intD.12 _46;
  long intD.12 _47;
  long intD.12 _48;
  long intD.12 _49;
  long intD.12 _50;
  intD.9 * _51;
  long intD.12 _52;
  intD.9 * _53;
  long intD.12 _54;
  long intD.12 _55;
  long intD.12 _56;
  long intD.12 _57;
  intD.9 * _58;
  long intD.12 _59;
  intD.9 * _60;
  long intD.12 _61;
  long intD.12 _62;
  long intD.12 _63;
  difference_typeD.42938 _64;
  size_typeD.43117 _65;
  intD.9 * _66;
  intD.9 * _67;
  intD.9 * _68;
  intD.9 * _70;
  intD.9 * _72;
  intD.9 * * _74;
  intD.9 * _78;
  intD.9 * * _114;
  intD.9 * * _115;
  intD.9 * * _116;
  intD.9 * _119;
  long intD.12 _126;
  long intD.12 _127;
  long intD.12 _128;
  long unsigned intD.14 _132;
  long intD.12 iftmp.107_134;
  long unsigned intD.14 _136;
  long unsigned intD.14 _137;
  long intD.12 _138;
  long intD.12 iftmp.107_139;
  long intD.12 iftmp.107_141;
  long unsigned intD.14 __node_offset.109_142;
  long unsigned intD.14 _143;
  long intD.12 _147;
  long intD.12 _148;
  long unsigned intD.14 _149;
  long unsigned intD.14 _150;
  long intD.12 _158;
  long intD.12 _160;
  long intD.12 _161;
  long intD.12 _162;
  long intD.12 _163;
  long intD.12 _164;
  long intD.12 _165;
  long intD.12 _166;
  long intD.12 _167;
  long intD.12 _168;
  long intD.12 _170;
  long intD.12 _171;
  long intD.12 _172;
  difference_typeD.44735 _173;
  intD.9 * _176;
  long intD.12 _194;
  intD.9 * _195;
  long intD.12 _196;
  long intD.12 _197;
  long intD.12 _198;
  long unsigned intD.14 _200;
  long intD.12 _207;
  long intD.12 _214;
  long intD.12 _217;
  long intD.12 _218;
  long unsigned intD.14 __n.116_221;
  long unsigned intD.14 _222;
  long intD.12 iftmp.117_224;
  long unsigned intD.14 _226;
  long unsigned intD.14 _227;
  long intD.12 _228;
  long intD.12 iftmp.117_229;
  long intD.12 iftmp.117_231;
  long unsigned intD.14 __node_offset.119_232;
  long unsigned intD.14 _233;
  long intD.12 _237;
  long intD.12 _238;
  long unsigned intD.14 _239;
  long unsigned intD.14 _240;
  intD.9 _295;
  intD.9 * _299;
  intD.9 * * _311;
  intD.9 * _312;
  intD.9 * _313;
  long intD.12 _319;
  long intD.12 _321;
  long intD.12 _322;
  long intD.12 _323;
  long intD.12 _324;
  long unsigned intD.14 _326;
  long intD.12 _341;
  long intD.12 _342;
  long intD.12 _343;
  long unsigned intD.14 _347;
  long intD.12 iftmp.117_349;
  long unsigned intD.14 _351;
  long unsigned intD.14 _352;
  long intD.12 _353;
  long intD.12 iftmp.117_354;
  long intD.12 iftmp.117_356;
  long unsigned intD.14 __node_offset.119_357;
  long unsigned intD.14 _358;
  long intD.12 _362;
  long intD.12 _363;
  long unsigned intD.14 _364;
  long unsigned intD.14 _365;
  unsigned long _369;
  unsigned long _370;
  unsigned long _372;
  intD.9 * const prephitmp_377;
  intD.9 * const pretmp_402;
  intD.9 * const prephitmp_404;
  intD.9 * const pretmp_406;
  intD.9 * const prephitmp_407;
  long intD.12 pretmp_408;
  long intD.12 prephitmp_409;
  intD.9 _420;
  intD.9 * _424;
  intD.9 * * _436;
  intD.9 * _437;
  intD.9 * _438;
  long intD.12 pretmp_503;
  long intD.12 prephitmp_504;
  long intD.12 pretmp_505;
  long intD.12 prephitmp_508;
  intD.9 * const pretmp_509;
  intD.9 * const prephitmp_510;
  intD.9 * const pretmp_511;
  long intD.12 pretmp_512;
  long intD.12 prephitmp_513;

;;   basic block 2, loop depth 0, count 0, freq 2568, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 48>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2308, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.61649 => this_3(D)
  # DEBUG D#174ptD.0 => &MEM[(const struct dequeD.40449 *)this_3(D)].D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &MEM[(const struct dequeD.40449 *)this_3(D)].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61651 => D#175ptD.0
  # DEBUG __yD.61650 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _43 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 48]._M_nodeD.42943;
  _44 = (long intD.12) _43;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _45 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 16]._M_nodeD.42943;
  _46 = (long intD.12) _45;
  _47 = _44 - _46;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _48 = _47 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _49 = _48 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _50 = _49 * 128;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _51 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 48]._M_curD.42940;
  _52 = (long intD.12) _51;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _53 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 48]._M_firstD.42941;
  _54 = (long intD.12) _53;
  _55 = _52 - _54;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _56 = _55 /[ex] 4;
  _57 = _50 + _56;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _58 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 16]._M_lastD.42942;
  _59 = (long intD.12) _58;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _60 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 16]._M_curD.42940;
  _61 = (long intD.12) _60;
  _62 = _59 - _61;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _63 = _62 /[ex] 4;
  _64 = _57 + _63;
  # RANGE [0, 18446744073709551615]
  _65 = (size_typeD.43117) _64;
  # DEBUG __lenD.47469 => _65
  # DEBUG thisD.61645 => __x_2(D)
  # DEBUG D#174ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61647 => D#175ptD.0
  # DEBUG __yD.61646 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _6 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 48]._M_nodeD.42943;
  _5 = (long intD.12) _6;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  SR.1981_22 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 16]._M_nodeD.42943;
  _23 = (long intD.12) SR.1981_22;
  _24 = _5 - _23;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _25 = _24 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _26 = _25 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _27 = _26 * 128;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _28 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 48]._M_curD.42940;
  _29 = (long intD.12) _28;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _30 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 48]._M_firstD.42941;
  _31 = (long intD.12) _30;
  _32 = _29 - _31;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _33 = _32 /[ex] 4;
  _34 = _27 + _33;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  SR.1980_35 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 16]._M_lastD.42942;
  _36 = (long intD.12) SR.1980_35;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  SR.1978_37 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 16]._M_curD.42940;
  _38 = (long intD.12) SR.1978_37;
  _39 = _36 - _38;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _40 = _39 /[ex] 4;
  _41 = _34 + _40;
  # RANGE [0, 18446744073709551615]
  _42 = (size_typeD.43117) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 10>;
;;    succ:       4 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#696ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61659 => &D.47476
  # DEBUG __xD.61660 => D#696ptD.0
  # .MEM_102 = VDEF <.MEM_4(D)>
  D.47476._M_curD.42940 = _60;
  # VUSE <.MEM_102>
  # PT = nonlocal escaped 
  _68 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_firstD.42941;
  # .MEM_103 = VDEF <.MEM_102>
  D.47476._M_firstD.42941 = _68;
  # .MEM_104 = VDEF <.MEM_103>
  D.47476._M_lastD.42942 = _58;
  # .MEM_105 = VDEF <.MEM_104>
  D.47476._M_nodeD.42943 = _45;
  # DEBUG thisD.61656 => __x_2(D)
  # DEBUG D#83ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61658 => &D.50404
  # DEBUG __xD.61657 => D#83ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  D.50404._M_curD.44737 = _28;
  # .MEM_107 = VDEF <.MEM_106>
  D.50404._M_firstD.44738 = _30;
  # VUSE <.MEM_107>
  # PT = nonlocal escaped 
  _67 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_lastD.42942;
  # .MEM_108 = VDEF <.MEM_107>
  D.50404._M_lastD.44739 = _67;
  # .MEM_109 = VDEF <.MEM_108>
  D.50404._M_nodeD.44740 = _6;
  # DEBUG thisD.61653 => __x_2(D)
  # DEBUG D#84ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61655 => &D.50405
  # DEBUG __xD.61654 => D#84ptD.0
  # .MEM_110 = VDEF <.MEM_109>
  D.50405._M_curD.44737 = SR.1978_37;
  # VUSE <.MEM_110>
  # PT = nonlocal escaped 
  _66 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 16]._M_firstD.42941;
  # .MEM_111 = VDEF <.MEM_110>
  D.50405._M_firstD.44738 = _66;
  # .MEM_112 = VDEF <.MEM_111>
  D.50405._M_lastD.44739 = SR.1980_35;
  # .MEM_113 = VDEF <.MEM_112>
  D.50405._M_nodeD.44740 = SR.1981_22;
  # .MEM_18 = VDEF <.MEM_113>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  D.47477 = _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (D.50405, D.50404, &D.47476); [return slot optimization]
  # DEBUG thisD.71591 => this_3(D)
  # DEBUG __posD.71592 => &D.47477
  # DEBUG D#485ptD.0 => &this_3(D)->D.43590
  # DEBUG thisD.58023 => D#485ptD.0
  # DEBUG thisD.71593 => this_3(D)
  # DEBUG D#66ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.71595 => NULL
  # DEBUG __xD.71594 => D#66ptD.0
  # DEBUG D#492ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_curD.42940
  # DEBUG D.58025 => D#492ptD.0
  # DEBUG D#491ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_firstD.42941
  # DEBUG D.58026 => D#491ptD.0
  # DEBUG D#490ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_lastD.42942
  # DEBUG D.58027 => D#490ptD.0
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _114 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_nodeD.42943;
  # DEBUG D.58028 => _114
  # DEBUG thisD.71597 => NULL
  # DEBUG __xD.71596 => &D.47477
  # DEBUG D#489ptD.0 => MEM[(const struct iteratorD.42928 &)&D.47477 clique 2 base 1]._M_curD.42940
  # DEBUG D.58029 => D#489ptD.0
  # DEBUG D#488ptD.0 => MEM[(const struct iteratorD.42928 &)&D.47477 clique 2 base 1]._M_firstD.42941
  # DEBUG D.58030 => D#488ptD.0
  # DEBUG D#487ptD.0 => MEM[(const struct iteratorD.42928 &)&D.47477 clique 2 base 1]._M_lastD.42942
  # DEBUG D.58031 => D#487ptD.0
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _115 = MEM[(const struct iteratorD.42928 &)&D.47477 clique 1 base 1]._M_nodeD.42943;
  # DEBUG D.58032 => _115
  # DEBUG D#68ptD.0 => this_3(D)
  # DEBUG thisD.58017 => D#68ptD.0
  # DEBUG __firstD.58016 => D#69ptD.0
  # DEBUG __lastD.58015 => D#70ptD.0
  # DEBUG D.58014 => D#71ptD.0
  # PT = nonlocal escaped 
  _116 = _114 + 8;
  # PT = nonlocal escaped 
  __nstart_117 = _115 + 8;
  # DEBUG D#486ptD.0 => &this_3(D)->D.43590
  # DEBUG thisD.71600 => D#486ptD.0
  # DEBUG __nstartD.71599 => __nstart_117
  # DEBUG __nfinishD.71598 => _116
  # DEBUG __nD.71601 => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_649 = PHI <.MEM_18(4), .MEM_626(8)>
  # .MEM_652 = VDEF <.MEM_649>
  this_3(D)->D.43590._M_implD.43041._M_finishD.43046 = MEM[(const struct _Deque_iteratorD.42908 &)&D.47477 clique 1 base 1];
  # .MEM_20 = VDEF <.MEM_652>
  D.47477 ={v} {CLOBBER};
  # .MEM_21 = VDEF <.MEM_20>
  D.47476 ={v} {CLOBBER};
  goto <bb 48>;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_100 = PHI <__nstart_117(6), __nstart_120(9)>
  # .MEM_465 = PHI <.MEM_18(6), .MEM_651(9)>
  # DEBUG __nD.71601 => __nstart_100
  # VUSE <.MEM_465>
  # PT = nonlocal escaped 
  _119 = *__nstart_100;
  # DEBUG thisD.71603 => D#486ptD.0
  # DEBUG __pD.71602 => _119
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#486ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.71607 => _119
  # DEBUG __aD.71605 => D#144ptD.0
  # DEBUG __nD.71606 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.71610 => _119
  # DEBUG thisD.71608 => D#140ptD.0
  # DEBUG D.71609 => D#141ptD.0
  # .MEM_651 = VDEF <.MEM_465>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  _ZdlPvD.2766 (_119);
  # PT = nonlocal escaped 
  __nstart_120 = __nstart_100 + 8;
  # DEBUG __nD.71601 => __nstart_120
  # DEBUG __nD.71601 => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 9, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_626 = PHI <.MEM_651(7)>
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 8, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 1408, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       3 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.61671 => __x_2(D)
  # DEBUG D#84ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61673 => &D.47479
  # DEBUG __xD.61672 => D#84ptD.0
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  SR.1979_81 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 16]._M_firstD.42941;
  # DEBUG thisD.71627 => &D.47479
  # DEBUG __nD.71628 => _64
  # DEBUG __tmp$_M_curD.71893 => SR.1978_37
  # DEBUG __tmp$_M_firstD.71894 => SR.1979_81
  # DEBUG __tmp$_M_lastD.71895 => SR.1980_35
  # DEBUG __tmp$_M_nodeD.71896 => SR.1981_22
  # DEBUG thisD.71630 => &__tmpD.71629
  # DEBUG __nD.71631 => _64
  _126 = (long intD.12) SR.1979_81;
  _127 = _38 - _126;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _128 = _127 /[ex] 4;
  __offset_129 = _64 + _128;
  # DEBUG __offsetD.71632 => __offset_129
  # DEBUG __sizeD.60431 => 4
  _372 = (unsigned long) __offset_129;
  if (_372 <= 127)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 627, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       50 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.107_134 = __offset_129 >> 7;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 232, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       50 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _136 = ~_372;
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _137 = _136 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _138 = (long intD.12) _137;
  # RANGE [-144115188075855872, -1]
  iftmp.107_139 = ~_138;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 859, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.107_141 = PHI <iftmp.107_134(11), iftmp.107_139(12)>
  # DEBUG __node_offsetD.71633 => iftmp.107_141
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.109_142 = (long unsigned intD.14) iftmp.107_141;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _143 = __node_offset.109_142 * 8;
  # PT = nonlocal escaped 
  __tmp$_M_node_144 = SR.1981_22 + _143;
  # DEBUG thisD.71635 => &__tmpD.71629
  # DEBUG __new_nodeD.71634 => __tmp$_M_node_144
  # DEBUG __tmp$_M_nodeD.71896 => __tmp$_M_node_144
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  __tmp$_M_first_145 = *__tmp$_M_node_144;
  # DEBUG __tmp$_M_firstD.71894 => __tmp$_M_first_145
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __tmp$_M_last_146 = __tmp$_M_first_145 + 512;
  # DEBUG __tmp$_M_lastD.71895 => __tmp$_M_last_146
  # DEBUG __sizeD.60431 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _147 = iftmp.107_141 * 128;
  _148 = __offset_129 - _147;
  # RANGE [0, 18446744073709551615]
  _149 = (long unsigned intD.14) _148;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _150 = _149 * 4;
  # PT = nonlocal escaped 
  __tmp$_M_cur_151 = __tmp$_M_first_145 + _150;
  # DEBUG __tmp$_M_curD.71893 => __tmp$_M_cur_151
  pretmp_503 = (long intD.12) __tmp$_M_node_144;
  pretmp_505 = (long intD.12) __tmp$_M_last_146;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 1408, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __tmp$_M_cur_477 = PHI <__tmp$_M_cur_133(49), __tmp$_M_cur_151(13)>
  # PT = nonlocal escaped 
  # __tmp$_M_first_569 = PHI <SR.1979_81(49), __tmp$_M_first_145(13)>
  # PT = nonlocal escaped 
  # __tmp$_M_last_453 = PHI <SR.1980_35(49), __tmp$_M_last_146(13)>
  # PT = nonlocal escaped 
  # __tmp$_M_node_16 = PHI <SR.1981_22(49), __tmp$_M_node_144(13)>
  # prephitmp_504 = PHI <_23(49), pretmp_503(13)>
  # prephitmp_508 = PHI <_36(49), pretmp_505(13)>
  # DEBUG __tmp$_M_nodeD.71896 => __tmp$_M_node_16
  # DEBUG __tmp$_M_lastD.71895 => __tmp$_M_last_453
  # DEBUG __tmp$_M_firstD.71894 => __tmp$_M_first_569
  # DEBUG __tmp$_M_curD.71893 => __tmp$_M_cur_477
  # DEBUG __mid$_M_curD.71865 => __tmp$_M_cur_477
  # DEBUG __mid$_M_firstD.71866 => __tmp$_M_first_569
  # DEBUG __mid$_M_lastD.71867 => __tmp$_M_last_453
  # DEBUG __mid$_M_nodeD.71868 => __tmp$_M_node_16
  # DEBUG D#1132ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_curD.71893 => D#1132ptD.0
  # DEBUG D#1133ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_firstD.71894 => D#1133ptD.0
  # DEBUG D#1134ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_lastD.71895 => D#1134ptD.0
  # DEBUG D#1135ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_nodeD.71896 => D#1135ptD.0
  # DEBUG D#694ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61669 => &D.47483
  # DEBUG __xD.61670 => D#694ptD.0
  # .MEM_86 = VDEF <.MEM_4(D)>
  D.47483._M_curD.42940 = _60;
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _78 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_firstD.42941;
  # .MEM_87 = VDEF <.MEM_86>
  D.47483._M_firstD.42941 = _78;
  # .MEM_88 = VDEF <.MEM_87>
  D.47483._M_lastD.42942 = _58;
  # .MEM_89 = VDEF <.MEM_88>
  D.47483._M_nodeD.42943 = _45;
  # DEBUG thisD.61666 => __x_2(D)
  # DEBUG D#84ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61668 => &D.50408
  # DEBUG __xD.61667 => D#84ptD.0
  # .MEM_90 = VDEF <.MEM_89>
  D.50408._M_curD.44737 = SR.1978_37;
  # .MEM_91 = VDEF <.MEM_90>
  D.50408._M_firstD.44738 = SR.1979_81;
  # .MEM_92 = VDEF <.MEM_91>
  D.50408._M_lastD.44739 = SR.1980_35;
  # .MEM_93 = VDEF <.MEM_92>
  D.50408._M_nodeD.44740 = SR.1981_22;
  # .MEM_593 = VDEF <.MEM_93>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47478] = __tmp$_M_cur_477;
  # .MEM_592 = VDEF <.MEM_593>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47478 + 8B] = __tmp$_M_first_569;
  # .MEM_591 = VDEF <.MEM_592>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47478 + 16B] = __tmp$_M_last_453;
  # .MEM_590 = VDEF <.MEM_591>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47478 + 24B] = __tmp$_M_node_16;
  # .MEM_10 = VDEF <.MEM_590>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (D.50408, __midD.47478, &D.47483);
  # .MEM_11 = VDEF <.MEM_10>
  D.47483 ={v} {CLOBBER};
  # DEBUG thisD.61663 => __x_2(D)
  # DEBUG D#83ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61665 => &D.50409
  # DEBUG __xD.61664 => D#83ptD.0
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _13 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_curD.42940;
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _72 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_firstD.42941;
  # DEBUG D#1148ptD.0 => MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_lastD.42942
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _74 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_nodeD.42943;
  # DEBUG D#695ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61661 => &D.47491
  # DEBUG __xD.61662 => D#695ptD.0
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _17 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_curD.42940;
  # DEBUG thisD.71611 => this_3(D)
  # DEBUG __positionD.71612 => &D.47491
  # DEBUG __first$_M_curD.71877 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71878 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71879 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71880 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71881 => _13
  # DEBUG __last$_M_firstD.71882 => _72
  # DEBUG __last$_M_lastD.71883 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71884 => _74
  # DEBUG thisD.71617 => NULL
  # DEBUG __xD.71616 => &D.47491
  # DEBUG thisD.71621 => this_3(D)
  # DEBUG __posD.71620 => NULL
  # DEBUG __first$_M_curD.71889 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71890 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71891 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71892 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71885 => _13
  # DEBUG __last$_M_firstD.71886 => _72
  # DEBUG __last$_M_lastD.71887 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71888 => _74
  # DEBUG thisD.71624 => &D.71625
  # DEBUG __xD.71623 => NULL
  # DEBUG thisD.71637 => this_3(D)
  # DEBUG __posD.71638 => &D.71625
  # DEBUG __firstD.71897 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71898 => __tmp$_M_first_569
  # DEBUG __first$16D.71899 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71900 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71901 => _13
  # DEBUG __last$_M_firstD.71902 => _72
  # DEBUG __last$_M_lastD.71903 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71904 => _74
  # DEBUG D#634ptD.0 => __firstD.71639
  # DEBUG D#634ptD.0 => __firstD.71639
  # DEBUG D#634ptD.0 => __firstD.71639
  # DEBUG D#635ptD.0 => __lastD.71640
  # DEBUG D#635ptD.0 => __lastD.71640
  # DEBUG D#635ptD.0 => __lastD.71640
  # DEBUG D.61049 => D#630ptD.0
  # DEBUG __xD.71644 => NULL
  # DEBUG __yD.71643 => NULL
  # DEBUG __sizeD.60431 => 4
  _158 = (long intD.12) _74;
  _160 = _158 - prephitmp_504;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _161 = _160 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _162 = _161 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _163 = _162 * 128;
  _164 = (long intD.12) _13;
  _165 = (long intD.12) _72;
  _166 = _164 - _165;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _167 = _166 /[ex] 4;
  _168 = _163 + _167;
  _170 = (long intD.12) __tmp$_M_cur_477;
  _171 = prephitmp_508 - _170;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _172 = _171 /[ex] 4;
  _173 = _168 + _172;
  # RANGE [0, 18446744073709551615]
  __n_174 = (const size_typeD.43117) _173;
  # DEBUG __nD.71642 => __n_174
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _176 = this_3(D)->D.43590._M_implD.43041._M_startD.43045._M_curD.42940;
  if (_17 == _176)
    goto <bb 15>;
  else
    goto <bb 31>;
;;    succ:       15 [4.4%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [95.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [4.4%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71664 => this_3(D)
  # DEBUG __nD.71665 => __n_174
  _194 = (long intD.12) _17;
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _195 = this_3(D)->D.43590._M_implD.43041._M_startD.43045._M_firstD.42941;
  _196 = (long intD.12) _195;
  _197 = _194 - _196;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _198 = _197 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __vacancies_199 = (const size_typeD.43117) _198;
  # DEBUG __vacanciesD.71666 => __vacancies_199
  if (__n_174 > __vacancies_199)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 24, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  _200 = __n_174 - __vacancies_199;
  # .MEM_564 = VDEF <.MEM_11>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  _ZNSt5dequeIiSaIiEE24_M_new_elements_at_frontEmD.43530 (this_3(D), _200);
  # VUSE <.MEM_564>
  pretmp_402 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_curD.42940;
  # VUSE <.MEM_564>
  pretmp_406 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_firstD.42941;
  pretmp_408 = (long intD.12) pretmp_406;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_441 = PHI <.MEM_11(15), .MEM_564(16)>
  # PT = nonlocal escaped 
  # prephitmp_404 = PHI <_176(15), pretmp_402(16)>
  # PT = nonlocal escaped 
  # prephitmp_407 = PHI <_195(15), pretmp_406(16)>
  # prephitmp_409 = PHI <_196(15), pretmp_408(16)>
  # DEBUG D#1129ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.71667 => D#1129ptD.0
  # DEBUG __nD.71668 => _173
  # DEBUG thisD.71671 => &__tmpD.71669
  # DEBUG __xD.71670 => D#1129ptD.0
  # DEBUG D#1149ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_firstD.42941
  # DEBUG __tmp$_M_firstD.71922 => D#1149ptD.0
  # VUSE <.MEM_441>
  # PT = nonlocal escaped 
  __new_start$_M_last_205 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_lastD.42942;
  # DEBUG __tmp$_M_lastD.71923 => __new_start$_M_last_205
  # VUSE <.MEM_441>
  # PT = nonlocal escaped 
  __new_start$_M_node_206 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_nodeD.42943;
  # DEBUG __tmp$_M_nodeD.71924 => __new_start$_M_node_206
  # DEBUG thisD.71673 => &__tmpD.71669
  # DEBUG __nD.71672 => _173
  # DEBUG thisD.71676 => &__tmpD.71669
  # DEBUG __nD.71677 => -_173
  _214 = (long intD.12) prephitmp_404;
  _217 = _214 - prephitmp_409;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _218 = _217 /[ex] 4;
  __offset_219 = _218 - _173;
  # DEBUG __offsetD.71678 => __offset_219
  # DEBUG __sizeD.54289 => 4
  _369 = (unsigned long) __offset_219;
  if (_369 <= 127)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       52 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_224 = __offset_219 >> 7;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 10, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       52 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _226 = ~_369;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _227 = _226 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _228 = (long intD.12) _227;
  # RANGE [-144115188075855872, -1]
  iftmp.117_229 = ~_228;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 38, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_231 = PHI <iftmp.117_224(18), iftmp.117_229(19)>
  # DEBUG __node_offsetD.71679 => iftmp.117_231
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_232 = (long unsigned intD.14) iftmp.117_231;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _233 = __node_offset.119_232 * 8;
  # PT = nonlocal escaped 
  __new_start$_M_node_234 = __new_start$_M_node_206 + _233;
  # DEBUG thisD.71681 => &__tmpD.71669
  # DEBUG __new_nodeD.71680 => __new_start$_M_node_234
  # DEBUG __tmp$_M_nodeD.71924 => __new_start$_M_node_234
  # VUSE <.MEM_441>
  # PT = nonlocal escaped 
  __new_start$_M_first_235 = *__new_start$_M_node_234;
  # DEBUG __tmp$_M_firstD.71922 => __new_start$_M_first_235
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  __new_start$_M_last_236 = __new_start$_M_first_235 + 512;
  # DEBUG __tmp$_M_lastD.71923 => __new_start$_M_last_236
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _237 = iftmp.117_231 * 128;
  _238 = __offset_219 - _237;
  # RANGE [0, 18446744073709551615]
  _239 = (long unsigned intD.14) _238;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _240 = _239 * 4;
  # PT = nonlocal escaped 
  __new_start$_M_cur_241 = __new_start$_M_first_235 + _240;
  # DEBUG __tmp$_M_curD.71921 => __new_start$_M_cur_241
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 20, next block 22, flags: (NEW, REACHABLE)
;;    pred:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __new_start$_M_cur_557 = PHI <__new_start$_M_cur_223(51), __new_start$_M_cur_241(20)>
  # PT = nonlocal escaped 
  # __new_start$_M_first_556 = PHI <prephitmp_407(51), __new_start$_M_first_235(20)>
  # PT = nonlocal escaped 
  # __new_start$_M_last_546 = PHI <__new_start$_M_last_205(51), __new_start$_M_last_236(20)>
  # PT = nonlocal escaped 
  # __new_start$_M_node_545 = PHI <__new_start$_M_node_206(51), __new_start$_M_node_234(20)>
  # DEBUG __tmp$_M_nodeD.71924 => __new_start$_M_node_545
  # DEBUG __tmp$_M_lastD.71923 => __new_start$_M_last_546
  # DEBUG __tmp$_M_firstD.71922 => __new_start$_M_first_556
  # DEBUG __tmp$_M_curD.71921 => __new_start$_M_cur_557
  # DEBUG thisD.71675 => &__new_startD.71645
  # DEBUG __xD.71674 => NULL
  # DEBUG __new_start$_M_curD.71905 => __new_start$_M_cur_557
  # DEBUG __new_start$_M_firstD.71906 => __new_start$_M_first_556
  # DEBUG __new_start$_M_lastD.71907 => __new_start$_M_last_546
  # DEBUG __new_start$_M_nodeD.71908 => __new_start$_M_node_545
  # .MEM_579 = VDEF <.MEM_441>
  __tmpD.71669 ={v} {CLOBBER};
  # DEBUG D#690ptD.0 => &this_3(D)->D.43590
  # DEBUG thisD.61598 => D#690ptD.0
  # DEBUG thisD.71647 => &D.71655
  # DEBUG __xD.71646 => &__new_startD.71645
  # DEBUG __first$_M_curD.71913 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71914 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71915 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71916 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71917 => _13
  # DEBUG __last$_M_firstD.71918 => _72
  # DEBUG __last$_M_lastD.71919 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71920 => _74
  # DEBUG __resultD.71658 => &D.71655
  # DEBUG D.71659 => D#603ptD.0
  # DEBUG thisD.71661 => &D.71663
  # DEBUG __xD.71660 => &D.71655
  # DEBUG __first$_M_curD.71925 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71926 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71927 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71928 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71929 => _13
  # DEBUG __last$_M_firstD.71930 => _72
  # DEBUG __last$_M_lastD.71931 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71932 => _74
  # DEBUG __resultD.71685 => &D.71663
  # DEBUG __assignableD.71688 => 1
  # DEBUG thisD.71690 => NULL
  # DEBUG __xD.71689 => &D.71663
  # DEBUG __first$_M_curD.71937 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71938 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71939 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71940 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71933 => _13
  # DEBUG __last$_M_firstD.71934 => _72
  # DEBUG __last$_M_lastD.71935 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71936 => _74
  # DEBUG __resultD.71691 => NULL
  # DEBUG thisD.71695 => &D.71696
  # DEBUG __xD.71694 => NULL
  # DEBUG __firstD.71941 => __tmp$_M_cur_477
  # DEBUG __first$8D.71942 => __tmp$_M_first_569
  # DEBUG __first$16D.71943 => __tmp$_M_last_453
  # DEBUG __first$24D.71944 => __tmp$_M_node_16
  # DEBUG __lastD.71945 => _13
  # DEBUG __last$8D.71946 => _72
  # DEBUG __last$_M_lastD.71947 => D#1148ptD.0
  # DEBUG __last$24D.71948 => _74
  # DEBUG __resultD.71699 => &D.71696
  # DEBUG thisD.71701 => &D.71716
  # DEBUG __xD.71700 => &D.71696
  # DEBUG __itD.71709 => _13
  # DEBUG __it$8D.71708 => _72
  # DEBUG D#1130ptD.0 => MEM[(struct _Deque_iteratorD.42910 *)&__lastD.71698 + 16B clique 7 base 0]
  # DEBUG __it$16D.71707 => D#1130ptD.0
  # DEBUG __it$24D.71706 => _74
  # DEBUG __it$_M_curD.60535 => _13
  # DEBUG __it$_M_firstD.60534 => _72
  # DEBUG __it$_M_lastD.60533 => D#1130ptD.0
  # DEBUG __it$_M_nodeD.60532 => _74
  # DEBUG __itD.71713 => __tmp$_M_cur_477
  # DEBUG __it$8D.71712 => __tmp$_M_first_569
  # DEBUG __it$16D.71711 => __tmp$_M_last_453
  # DEBUG __it$24D.71710 => __tmp$_M_node_16
  # DEBUG __it$_M_curD.60529 => __tmp$_M_cur_477
  # DEBUG __it$_M_firstD.60528 => __tmp$_M_first_569
  # DEBUG __it$_M_lastD.60527 => __tmp$_M_last_453
  # DEBUG __it$_M_nodeD.60526 => __tmp$_M_node_16
  # DEBUG __resultD.71719 => &D.71716
  # DEBUG thisD.71721 => NULL
  # DEBUG __xD.71720 => &D.71716
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.71735 => _13
  # DEBUG __it$8D.71734 => _72
  # DEBUG __it$16D.71733 => D#1130ptD.0
  # DEBUG __it$24D.71731 => _74
  # DEBUG __it$_M_curD.60489 => _13
  # DEBUG __it$_M_firstD.60488 => _72
  # DEBUG __it$_M_lastD.60487 => D#1130ptD.0
  # DEBUG __it$_M_nodeD.60486 => _74
  # DEBUG __itD.71740 => __tmp$_M_cur_477
  # DEBUG __it$8D.71739 => __tmp$_M_first_569
  # DEBUG __it$16D.71738 => __tmp$_M_last_453
  # DEBUG __it$24D.71736 => __tmp$_M_node_16
  # DEBUG __it$_M_curD.60483 => __tmp$_M_cur_477
  # DEBUG __it$_M_firstD.60482 => __tmp$_M_first_569
  # DEBUG __it$_M_lastD.60481 => __tmp$_M_last_453
  # DEBUG __it$_M_nodeD.60480 => __tmp$_M_node_16
  # DEBUG __firstD.71949 => __tmp$_M_cur_477
  # DEBUG __first$8D.71950 => __tmp$_M_first_569
  # DEBUG __first$16D.71951 => __tmp$_M_last_453
  # DEBUG __first$24D.71952 => __tmp$_M_node_16
  # DEBUG __resultD.71722 => NULL
  # DEBUG __simpleD.71728 => 0
  # DEBUG thisD.71730 => &D.71741
  # DEBUG __xD.71729 => NULL
  # DEBUG __firstD.71956 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71957 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71958 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71959 => __tmp$_M_node_16
  # DEBUG __resultD.71744 => &D.71741
  # DEBUG __xD.71752 => &__lastD.71743
  # DEBUG __yD.71751 => &__firstD.71742
  # DEBUG __sizeD.60431 => 4
  # DEBUG __nD.71748 => _173
  # DEBUG __nD.71748 => _173
  if (_173 <= 0)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 63, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_648 = PHI <.MEM_579(21), .MEM_637(29)>
  # DEBUG thisD.71747 => &D.71662
  # DEBUG __xD.71746 => &D.71741
  # .MEM_643 = VDEF <.MEM_648>
  D.71741 ={v} {CLOBBER};
  # .MEM_644 = VDEF <.MEM_643>
  D.71716 ={v} {CLOBBER};
  # .MEM_645 = VDEF <.MEM_644>
  D.71696 ={v} {CLOBBER};
  # .MEM_646 = VDEF <.MEM_645>
  D.71663 ={v} {CLOBBER};
  # .MEM_647 = VDEF <.MEM_646>
  D.71655 ={v} {CLOBBER};
  # .MEM_562 = VDEF <.MEM_647>
  MEM[(struct dequeD.40449 *)this_3(D) + 16B] = __new_start$_M_cur_557;
  # .MEM_122 = VDEF <.MEM_562>
  MEM[(struct dequeD.40449 *)this_3(D) + 24B] = __new_start$_M_first_556;
  # .MEM_121 = VDEF <.MEM_122>
  MEM[(struct dequeD.40449 *)this_3(D) + 32B] = __new_start$_M_last_546;
  # .MEM_155 = VDEF <.MEM_121>
  MEM[(struct dequeD.40449 *)this_3(D) + 40B] = __new_start$_M_node_545;
  # DEBUG D#1140ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_curD.71905 => D#1140ptD.0
  # DEBUG D#1141ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_firstD.71906 => D#1141ptD.0
  # DEBUG D#1142ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_lastD.71907 => D#1142ptD.0
  # DEBUG D#1143ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_nodeD.71908 => D#1143ptD.0
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 56, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       21 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 628, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_71 = PHI <_173(23), __n_301(30)>
  # .MEM_467 = PHI <.MEM_579(23), .MEM_628(30)>
  # PT = nonlocal escaped 
  # SR.2061_543 = PHI <__new_start$_M_cur_557(23), SR.2061_542(30)>
  # PT = nonlocal escaped 
  # SR.2062_541 = PHI <__new_start$_M_last_546(23), SR.2062_540(30)>
  # PT = nonlocal escaped 
  # SR.2063_538 = PHI <__new_start$_M_node_545(23), SR.2063_537(30)>
  # PT = nonlocal escaped 
  # __mid$_M_cur_534 = PHI <__tmp$_M_cur_477(23), __mid$_M_cur_533(30)>
  # PT = nonlocal escaped 
  # __mid$_M_last_532 = PHI <__tmp$_M_last_453(23), __mid$_M_last_530(30)>
  # PT = nonlocal escaped 
  # __mid$_M_node_525 = PHI <__tmp$_M_node_16(23), __mid$_M_node_524(30)>
  # DEBUG __first$_M_nodeD.71959 => __mid$_M_node_525
  # DEBUG __first$_M_lastD.71958 => __mid$_M_last_532
  # DEBUG __firstD.71956 => __mid$_M_cur_534
  # DEBUG __nD.71748 => __n_71
  # DEBUG D#100ptD.0 => &D.71741
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.71742
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_467>
  _295 = MEM[(const intD.9 &)__mid$_M_cur_534];
  # .MEM_628 = VDEF <.MEM_467>
  *SR.2061_543 = _295;
  # DEBUG thisD.71749 => &__firstD.71742
  # PT = nonlocal escaped 
  __mid$_M_cur_296 = __mid$_M_cur_534 + 4;
  # DEBUG __firstD.71956 => __mid$_M_cur_296
  if (__mid$_M_cur_296 == __mid$_M_last_532)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 42, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71753 => &__firstD.71742
  # PT = nonlocal escaped 
  __mid$_M_node_307 = __mid$_M_node_525 + 8;
  # DEBUG thisD.71755 => &__firstD.71742
  # DEBUG __new_nodeD.71754 => __mid$_M_node_307
  # DEBUG __first$_M_nodeD.71959 => __mid$_M_node_307
  # VUSE <.MEM_628>
  # PT = nonlocal escaped 
  __mid$_M_cur_308 = MEM[(intD.9 * *)__mid$_M_node_525 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __mid$_M_last_309 = __mid$_M_cur_308 + 512;
  # DEBUG __first$_M_lastD.71958 => __mid$_M_last_309
  # DEBUG __firstD.71956 => __mid$_M_cur_308
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 628, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __mid$_M_cur_533 = PHI <__mid$_M_cur_296(24), __mid$_M_cur_308(25)>
  # PT = nonlocal escaped 
  # __mid$_M_last_530 = PHI <__mid$_M_last_532(24), __mid$_M_last_309(25)>
  # PT = nonlocal escaped 
  # __mid$_M_node_524 = PHI <__mid$_M_node_525(24), __mid$_M_node_307(25)>
  # DEBUG __first$_M_nodeD.71959 => __mid$_M_node_524
  # DEBUG __first$_M_lastD.71958 => __mid$_M_last_530
  # DEBUG __firstD.71956 => __mid$_M_cur_533
  # DEBUG thisD.71750 => &D.71741
  # PT = nonlocal escaped 
  _299 = SR.2061_543 + 4;
  if (_299 == SR.2062_541)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 42, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71757 => &D.71741
  # PT = nonlocal escaped 
  _311 = SR.2063_538 + 8;
  # DEBUG thisD.71759 => &D.71741
  # DEBUG __new_nodeD.71758 => _311
  # VUSE <.MEM_628>
  # PT = nonlocal escaped 
  _312 = MEM[(intD.9 * *)SR.2063_538 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _313 = _312 + 512;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 628, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.2061_542 = PHI <_299(26), _312(27)>
  # PT = nonlocal escaped 
  # SR.2062_540 = PHI <SR.2062_541(26), _313(27)>
  # PT = nonlocal escaped 
  # SR.2063_537 = PHI <SR.2063_538(26), _311(27)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_301 = __n_71 + -1;
  # DEBUG __nD.71748 => __n_301
  # DEBUG __nD.71748 => __n_301
  if (__n_301 <= 0)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 57, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_637 = PHI <.MEM_628(28)>
  goto <bb 22>;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 571, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       28 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 136, maybe hot
;;   Invalid sum of incoming frequencies 1346, should be 136
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       14 [95.6%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _70 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_lastD.42942;
  # DEBUG thisD.71769 => this_3(D)
  # DEBUG __nD.71770 => __n_174
  _319 = (long intD.12) _70;
  _321 = (long intD.12) _17;
  _322 = _319 - _321;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _323 = _322 /[ex] 4;
  # RANGE [-2305843009213693953, 2305843009213693950]
  _324 = _323 + -1;
  # RANGE ~[2305843009213693951, 16140901064495857662]
  __vacancies_325 = (const size_typeD.43117) _324;
  # DEBUG __vacanciesD.71771 => __vacancies_325
  if (__n_174 > __vacancies_325)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 53, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  _326 = __n_174 - __vacancies_325;
  # .MEM_472 = VDEF <.MEM_11>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  _ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEmD.43533 (this_3(D), _326);
  # VUSE <.MEM_472>
  pretmp_509 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_curD.42940;
  # VUSE <.MEM_472>
  pretmp_511 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_lastD.42942;
  pretmp_512 = (long intD.12) pretmp_509;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 136, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       31 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_446 = PHI <.MEM_11(31), .MEM_472(32)>
  # PT = nonlocal escaped 
  # prephitmp_510 = PHI <_17(31), pretmp_509(32)>
  # PT = nonlocal escaped 
  # prephitmp_377 = PHI <_70(31), pretmp_511(32)>
  # prephitmp_513 = PHI <_321(31), pretmp_512(32)>
  # DEBUG D#1128ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.71772 => D#1128ptD.0
  # DEBUG __nD.71773 => _173
  # DEBUG thisD.71776 => &__tmpD.71774
  # DEBUG __xD.71775 => D#1128ptD.0
  # VUSE <.MEM_446>
  # PT = nonlocal escaped 
  __new_finish$_M_first_330 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_firstD.42941;
  # DEBUG __tmp$_M_firstD.71969 => __new_finish$_M_first_330
  # DEBUG D#1150ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_lastD.42942
  # DEBUG __tmp$_M_lastD.71970 => D#1150ptD.0
  # VUSE <.MEM_446>
  # PT = nonlocal escaped 
  __new_finish$_M_node_332 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_nodeD.42943;
  # DEBUG __tmp$_M_nodeD.71971 => __new_finish$_M_node_332
  # DEBUG thisD.71779 => &__tmpD.71774
  # DEBUG __nD.71780 => _173
  _341 = (long intD.12) __new_finish$_M_first_330;
  _342 = prephitmp_513 - _341;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _343 = _342 /[ex] 4;
  __offset_344 = _173 + _343;
  # DEBUG __offsetD.71781 => __offset_344
  # DEBUG __sizeD.54289 => 4
  _370 = (unsigned long) __offset_344;
  if (_370 <= 127)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 61, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       54 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_349 = __offset_344 >> 7;
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       54 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _351 = ~_370;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _352 = _351 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _353 = (long intD.12) _352;
  # RANGE [-144115188075855872, -1]
  iftmp.117_354 = ~_353;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 83, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_356 = PHI <iftmp.117_349(34), iftmp.117_354(35)>
  # DEBUG __node_offsetD.71782 => iftmp.117_356
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_357 = (long unsigned intD.14) iftmp.117_356;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _358 = __node_offset.119_357 * 8;
  # PT = nonlocal escaped 
  __new_finish$_M_node_359 = __new_finish$_M_node_332 + _358;
  # DEBUG thisD.71784 => &__tmpD.71774
  # DEBUG __new_nodeD.71783 => __new_finish$_M_node_359
  # DEBUG __tmp$_M_nodeD.71971 => __new_finish$_M_node_359
  # VUSE <.MEM_446>
  # PT = nonlocal escaped 
  __new_finish$_M_first_360 = *__new_finish$_M_node_359;
  # DEBUG __tmp$_M_firstD.71969 => __new_finish$_M_first_360
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  __new_finish$_M_last_361 = __new_finish$_M_first_360 + 512;
  # DEBUG __tmp$_M_lastD.71970 => __new_finish$_M_last_361
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _362 = iftmp.117_356 * 128;
  _363 = __offset_344 - _362;
  # RANGE [0, 18446744073709551615]
  _364 = (long unsigned intD.14) _363;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _365 = _364 * 4;
  # PT = nonlocal escaped 
  __new_finish$_M_cur_366 = __new_finish$_M_first_360 + _365;
  # DEBUG __tmp$_M_curD.71968 => __new_finish$_M_cur_366
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 136, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __new_finish$_M_cur_523 = PHI <__new_finish$_M_cur_348(53), __new_finish$_M_cur_366(36)>
  # PT = nonlocal escaped 
  # __new_finish$_M_first_522 = PHI <__new_finish$_M_first_330(53), __new_finish$_M_first_360(36)>
  # PT = nonlocal escaped 
  # __new_finish$_M_last_507 = PHI <prephitmp_377(53), __new_finish$_M_last_361(36)>
  # PT = nonlocal escaped 
  # __new_finish$_M_node_506 = PHI <__new_finish$_M_node_332(53), __new_finish$_M_node_359(36)>
  # DEBUG __tmp$_M_nodeD.71971 => __new_finish$_M_node_506
  # DEBUG __tmp$_M_lastD.71970 => __new_finish$_M_last_507
  # DEBUG __tmp$_M_firstD.71969 => __new_finish$_M_first_522
  # DEBUG __tmp$_M_curD.71968 => __new_finish$_M_cur_523
  # DEBUG thisD.71778 => &__new_finishD.71650
  # DEBUG __xD.71777 => NULL
  # DEBUG __new_finish$_M_curD.71909 => __new_finish$_M_cur_523
  # DEBUG __new_finish$_M_firstD.71910 => __new_finish$_M_first_522
  # DEBUG __new_finish$_M_lastD.71911 => __new_finish$_M_last_507
  # DEBUG __new_finish$_M_nodeD.71912 => __new_finish$_M_node_506
  # .MEM_487 = VDEF <.MEM_446>
  __tmpD.71774 ={v} {CLOBBER};
  # DEBUG D#691ptD.0 => &this_3(D)->D.43590
  # DEBUG thisD.61602 => D#691ptD.0
  # DEBUG D#692ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.71652 => &D.71654
  # DEBUG __xD.71651 => D#692ptD.0
  # DEBUG __first$_M_curD.71960 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71961 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71962 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71963 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71964 => _13
  # DEBUG __last$_M_firstD.71965 => _72
  # DEBUG __last$_M_lastD.71966 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71967 => _74
  # DEBUG __resultD.71763 => &D.71654
  # DEBUG D.71764 => D#603ptD.0
  # DEBUG thisD.71766 => &D.71768
  # DEBUG __xD.71765 => &D.71654
  # DEBUG __first$_M_curD.71972 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71973 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71974 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71975 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71976 => _13
  # DEBUG __last$_M_firstD.71977 => _72
  # DEBUG __last$_M_lastD.71978 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71979 => _74
  # DEBUG __resultD.71788 => &D.71768
  # DEBUG __assignableD.71791 => 1
  # DEBUG thisD.71793 => NULL
  # DEBUG __xD.71792 => &D.71768
  # DEBUG __first$_M_curD.71984 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71985 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71986 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71987 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71980 => _13
  # DEBUG __last$_M_firstD.71981 => _72
  # DEBUG __last$_M_lastD.71982 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71983 => _74
  # DEBUG __resultD.71794 => NULL
  # DEBUG thisD.71798 => &D.71799
  # DEBUG __xD.71797 => NULL
  # DEBUG __firstD.71988 => __tmp$_M_cur_477
  # DEBUG __first$8D.71989 => __tmp$_M_first_569
  # DEBUG __first$16D.71990 => __tmp$_M_last_453
  # DEBUG __first$24D.71991 => __tmp$_M_node_16
  # DEBUG __lastD.71992 => _13
  # DEBUG __last$8D.71993 => _72
  # DEBUG __last$_M_lastD.71994 => D#1148ptD.0
  # DEBUG __last$24D.71995 => _74
  # DEBUG __resultD.71802 => &D.71799
  # DEBUG thisD.71804 => &D.71819
  # DEBUG __xD.71803 => &D.71799
  # DEBUG __itD.71812 => _13
  # DEBUG __it$8D.71811 => _72
  # DEBUG D#1131ptD.0 => MEM[(struct _Deque_iteratorD.42910 *)&__lastD.71801 + 16B clique 12 base 0]
  # DEBUG __it$16D.71810 => D#1131ptD.0
  # DEBUG __it$24D.71809 => _74
  # DEBUG __it$_M_curD.60535 => _13
  # DEBUG __it$_M_firstD.60534 => _72
  # DEBUG __it$_M_lastD.60533 => D#1131ptD.0
  # DEBUG __it$_M_nodeD.60532 => _74
  # DEBUG __itD.71816 => __tmp$_M_cur_477
  # DEBUG __it$8D.71815 => __tmp$_M_first_569
  # DEBUG __it$16D.71814 => __tmp$_M_last_453
  # DEBUG __it$24D.71813 => __tmp$_M_node_16
  # DEBUG __it$_M_curD.60529 => __tmp$_M_cur_477
  # DEBUG __it$_M_firstD.60528 => __tmp$_M_first_569
  # DEBUG __it$_M_lastD.60527 => __tmp$_M_last_453
  # DEBUG __it$_M_nodeD.60526 => __tmp$_M_node_16
  # DEBUG __resultD.71822 => &D.71819
  # DEBUG thisD.71824 => NULL
  # DEBUG __xD.71823 => &D.71819
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.71838 => _13
  # DEBUG __it$8D.71837 => _72
  # DEBUG __it$16D.71836 => D#1131ptD.0
  # DEBUG __it$24D.71834 => _74
  # DEBUG __it$_M_curD.60489 => _13
  # DEBUG __it$_M_firstD.60488 => _72
  # DEBUG __it$_M_lastD.60487 => D#1131ptD.0
  # DEBUG __it$_M_nodeD.60486 => _74
  # DEBUG __itD.71843 => __tmp$_M_cur_477
  # DEBUG __it$8D.71842 => __tmp$_M_first_569
  # DEBUG __it$16D.71841 => __tmp$_M_last_453
  # DEBUG __it$24D.71839 => __tmp$_M_node_16
  # DEBUG __it$_M_curD.60483 => __tmp$_M_cur_477
  # DEBUG __it$_M_firstD.60482 => __tmp$_M_first_569
  # DEBUG __it$_M_lastD.60481 => __tmp$_M_last_453
  # DEBUG __it$_M_nodeD.60480 => __tmp$_M_node_16
  # DEBUG __firstD.71996 => __tmp$_M_cur_477
  # DEBUG __first$8D.71997 => __tmp$_M_first_569
  # DEBUG __first$16D.71998 => __tmp$_M_last_453
  # DEBUG __first$24D.71999 => __tmp$_M_node_16
  # DEBUG __resultD.71825 => NULL
  # DEBUG __simpleD.71831 => 0
  # DEBUG thisD.71833 => &D.71844
  # DEBUG __xD.71832 => NULL
  # DEBUG __firstD.72003 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.72004 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.72005 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.72006 => __tmp$_M_node_16
  # DEBUG __resultD.71847 => &D.71844
  # DEBUG __xD.71855 => &__lastD.71846
  # DEBUG __yD.71854 => &__firstD.71845
  # DEBUG __sizeD.60431 => 4
  # DEBUG __nD.71851 => _173
  # DEBUG __nD.71851 => _173
  if (_173 <= 0)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 136, maybe hot
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       37 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_638 = PHI <.MEM_487(37), .MEM_468(45)>
  # DEBUG thisD.71850 => &D.71767
  # DEBUG __xD.71849 => &D.71844
  # .MEM_551 = VDEF <.MEM_638>
  D.71844 ={v} {CLOBBER};
  # .MEM_552 = VDEF <.MEM_551>
  D.71819 ={v} {CLOBBER};
  # .MEM_553 = VDEF <.MEM_552>
  D.71799 ={v} {CLOBBER};
  # .MEM_554 = VDEF <.MEM_553>
  D.71768 ={v} {CLOBBER};
  # .MEM_555 = VDEF <.MEM_554>
  D.71654 ={v} {CLOBBER};
  # .MEM_589 = VDEF <.MEM_555>
  MEM[(struct dequeD.40449 *)this_3(D) + 48B] = __new_finish$_M_cur_523;
  # .MEM_594 = VDEF <.MEM_589>
  MEM[(struct dequeD.40449 *)this_3(D) + 56B] = __new_finish$_M_first_522;
  # .MEM_595 = VDEF <.MEM_594>
  MEM[(struct dequeD.40449 *)this_3(D) + 64B] = __new_finish$_M_last_507;
  # .MEM_596 = VDEF <.MEM_595>
  MEM[(struct dequeD.40449 *)this_3(D) + 72B] = __new_finish$_M_node_506;
  # DEBUG D#1136ptD.0 => {CLOBBER}
  # DEBUG __new_finish$_M_curD.71909 => D#1136ptD.0
  # DEBUG D#1137ptD.0 => {CLOBBER}
  # DEBUG __new_finish$_M_firstD.71910 => D#1137ptD.0
  # DEBUG D#1138ptD.0 => {CLOBBER}
  # DEBUG __new_finish$_M_lastD.71911 => D#1138ptD.0
  # DEBUG D#1139ptD.0 => {CLOBBER}
  # DEBUG __new_finish$_M_nodeD.71912 => D#1139ptD.0
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 124, maybe hot
;;    prev block 38, next block 40, flags: (NEW)
;;    pred:       37 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 1380, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_101 = PHI <_173(39), __n_426(46)>
  # .MEM_471 = PHI <.MEM_487(39), .MEM_536(46)>
  # PT = nonlocal escaped 
  # SR.2106_501 = PHI <prephitmp_510(39), SR.2106_500(46)>
  # PT = nonlocal escaped 
  # SR.2107_499 = PHI <prephitmp_377(39), SR.2107_498(46)>
  # PT = nonlocal escaped 
  # SR.2108_493 = PHI <__new_finish$_M_node_332(39), SR.2108_492(46)>
  # PT = nonlocal escaped 
  # __mid$_M_cur_486 = PHI <__tmp$_M_cur_477(39), __mid$_M_cur_485(46)>
  # PT = nonlocal escaped 
  # __mid$_M_last_484 = PHI <__tmp$_M_last_453(39), __mid$_M_last_483(46)>
  # PT = nonlocal escaped 
  # __mid$_M_node_481 = PHI <__tmp$_M_node_16(39), __mid$_M_node_480(46)>
  # DEBUG __first$_M_nodeD.72006 => __mid$_M_node_481
  # DEBUG __first$_M_lastD.72005 => __mid$_M_last_484
  # DEBUG __firstD.72003 => __mid$_M_cur_486
  # DEBUG __nD.71851 => __n_101
  # DEBUG D#100ptD.0 => &D.71844
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.71845
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_471>
  _420 = MEM[(const intD.9 &)__mid$_M_cur_486];
  # .MEM_536 = VDEF <.MEM_471>
  *SR.2106_501 = _420;
  # DEBUG thisD.71852 => &__firstD.71845
  # PT = nonlocal escaped 
  __mid$_M_cur_421 = __mid$_M_cur_486 + 4;
  # DEBUG __firstD.72003 => __mid$_M_cur_421
  if (__mid$_M_cur_421 == __mid$_M_last_484)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 93, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71856 => &__firstD.71845
  # PT = nonlocal escaped 
  __mid$_M_node_432 = __mid$_M_node_481 + 8;
  # DEBUG thisD.71858 => &__firstD.71845
  # DEBUG __new_nodeD.71857 => __mid$_M_node_432
  # DEBUG __first$_M_nodeD.72006 => __mid$_M_node_432
  # VUSE <.MEM_536>
  # PT = nonlocal escaped 
  __mid$_M_cur_433 = MEM[(intD.9 * *)__mid$_M_node_481 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __mid$_M_last_434 = __mid$_M_cur_433 + 512;
  # DEBUG __first$_M_lastD.72005 => __mid$_M_last_434
  # DEBUG __firstD.72003 => __mid$_M_cur_433
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 1380, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __mid$_M_cur_485 = PHI <__mid$_M_cur_421(40), __mid$_M_cur_433(41)>
  # PT = nonlocal escaped 
  # __mid$_M_last_483 = PHI <__mid$_M_last_484(40), __mid$_M_last_434(41)>
  # PT = nonlocal escaped 
  # __mid$_M_node_480 = PHI <__mid$_M_node_481(40), __mid$_M_node_432(41)>
  # DEBUG __first$_M_nodeD.72006 => __mid$_M_node_480
  # DEBUG __first$_M_lastD.72005 => __mid$_M_last_483
  # DEBUG __firstD.72003 => __mid$_M_cur_485
  # DEBUG thisD.71853 => &D.71844
  # PT = nonlocal escaped 
  _424 = SR.2106_501 + 4;
  if (_424 == SR.2107_499)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 93, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71860 => &D.71844
  # PT = nonlocal escaped 
  _436 = SR.2108_493 + 8;
  # DEBUG thisD.71862 => &D.71844
  # DEBUG __new_nodeD.71861 => _436
  # VUSE <.MEM_536>
  # PT = nonlocal escaped 
  _437 = MEM[(intD.9 * *)SR.2108_493 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _438 = _437 + 512;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 1380, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       42 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.2106_500 = PHI <_424(42), _437(43)>
  # PT = nonlocal escaped 
  # SR.2107_498 = PHI <SR.2107_499(42), _438(43)>
  # PT = nonlocal escaped 
  # SR.2108_492 = PHI <SR.2108_493(42), _436(43)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_426 = __n_101 + -1;
  # DEBUG __nD.71851 => __n_426
  # DEBUG __nD.71851 => __n_426
  if (__n_426 <= 0)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 124, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_468 = PHI <.MEM_536(44)>
  goto <bb 38>;
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 1256, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       44 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 1408, maybe hot
;;   Invalid sum of incoming frequencies 199, should be 1408
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_451 = PHI <.MEM_596(38), .MEM_155(22)>
  # .MEM_650 = VDEF <.MEM_451>
  D.71625 ={v} {CLOBBER};
  # .MEM_15 = VDEF <.MEM_650>
  D.47491 ={v} {CLOBBER};
  # DEBUG D#1144ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_curD.71865 => D#1144ptD.0
  # DEBUG D#1145ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_firstD.71866 => D#1145ptD.0
  # DEBUG D#1146ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_lastD.71867 => D#1146ptD.0
  # DEBUG D#1147ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_nodeD.71868 => D#1147ptD.0
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 2568, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_4(D)(2), .MEM_15(47), .MEM_21(5)>
  # VUSE <.MEM_1>
  return this_3(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 49, loop depth 0, count 0, freq 549, maybe hot
;;   Invalid sum of incoming frequencies 704, should be 549
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _132 = _65 * 4;
  # PT = nonlocal escaped 
  __tmp$_M_cur_133 = SR.1978_37 + _132;
  # DEBUG __tmp$_M_curD.71893 => __tmp$_M_cur_133
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 894, maybe hot
;;   Invalid sum of incoming frequencies 704, should be 894
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_129 > 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 24, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  _207 = -_173;
  # RANGE [0, 18446744073709551615]
  __n.116_221 = (long unsigned intD.14) _207;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _222 = __n.116_221 * 4;
  # PT = nonlocal escaped 
  __new_start$_M_cur_223 = prephitmp_404 + _222;
  # DEBUG __tmp$_M_curD.71921 => __new_start$_M_cur_223
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       17 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_219 > 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 53, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _347 = __n_174 * 4;
  # PT = nonlocal escaped 
  __new_finish$_M_cur_348 = prephitmp_510 + _347;
  # DEBUG __tmp$_M_curD.71968 => __new_finish$_M_cur_348
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 87, maybe hot
;;    prev block 53, next block 1, flags: (NEW, REACHABLE)
;;    pred:       33 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_344 > 0)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [27.0%]  (FALSE_VALUE,EXECUTABLE)

}


Creating dr for MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_3(D) + 48]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_3(D) + 16]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_3(D) + 48]
	Access function 0: 0
Creating dr for MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_3(D) + 48]
	Access function 0: 64
Creating dr for MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_3(D) + 16]
	Access function 0: 128
Creating dr for MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)this_3(D) + 16]
	Access function 0: 0
Creating dr for MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)__x_2(D) + 48]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)__x_2(D) + 16]
	Access function 0: 192
Creating dr for MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)__x_2(D) + 48]
	Access function 0: 0
Creating dr for MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)__x_2(D) + 48]
	Access function 0: 64
Creating dr for MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)__x_2(D) + 16]
	Access function 0: 128
Creating dr for MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)__x_2(D) + 16]
	Access function 0: 0
Creating dr for D.47476._M_cur
analyze_innermost: success.
	base_address: &D.47476
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: D.47476
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)this_3(D) + 16]._M_first
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_3(D) + 16]
	Access function 0: 64
Creating dr for D.47476._M_first
analyze_innermost: success.
	base_address: &D.47476
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: D.47476
	Access function 0: 64
Creating dr for D.47476._M_last
analyze_innermost: success.
	base_address: &D.47476
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: D.47476
	Access function 0: 128
Creating dr for D.47476._M_node
analyze_innermost: success.
	base_address: &D.47476
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: D.47476
	Access function 0: 192
Creating dr for D.50404._M_cur
analyze_innermost: success.
	base_address: &D.50404
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: D.50404
	Access function 0: 0
Creating dr for D.50404._M_first
analyze_innermost: success.
	base_address: &D.50404
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: D.50404
	Access function 0: 64
Creating dr for MEM[(const struct iterator &)__x_2(D) + 48]._M_last
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__x_2(D) + 48]
	Access function 0: 128
Creating dr for D.50404._M_last
analyze_innermost: success.
	base_address: &D.50404
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: D.50404
	Access function 0: 128
Creating dr for D.50404._M_node
analyze_innermost: success.
	base_address: &D.50404
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: D.50404
	Access function 0: 192
Creating dr for D.50405._M_cur
analyze_innermost: success.
	base_address: &D.50405
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: D.50405
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)__x_2(D) + 16]._M_first
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__x_2(D) + 16]
	Access function 0: 64
Creating dr for D.50405._M_first
analyze_innermost: success.
	base_address: &D.50405
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: D.50405
	Access function 0: 64
Creating dr for D.50405._M_last
analyze_innermost: success.
	base_address: &D.50405
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: D.50405
	Access function 0: 128
Creating dr for D.50405._M_node
analyze_innermost: success.
	base_address: &D.50405
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: D.50405
	Access function 0: 192
Creating dr for *__nstart_100
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _115
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_115
	Access function 0: {8B, +, 8}_1
Creating dr for *__nstart_100
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _115
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_115
	Access function 0: {8B, +, 8}_1
Creating dr for *__nstart_100
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _115
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_115
	Access function 0: {8B, +, 8}_1
Creating dr for *__nstart_100
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _115
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_115
	Access function 0: {8B, +, 8}_1
Applying pattern match.pd:397, generic-match.c:4039
Analyzing # of iterations of loop 1
  exit condition [_115 + 16, + , 8](no_overflow) < _114 + 8
  bounds on difference of bases: -7 ... 18446744073709551599
Applying pattern match.pd:491, generic-match.c:3721
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _114 - (unsigned long) _115) + 18446744073709551615) / 8, bounded by 2305843009213693950
Applying pattern match.pd:397, generic-match.c:4039
Analyzing # of iterations of loop 1
  exit condition [_115 + 16, + , 8](no_overflow) < _114 + 8
  bounds on difference of bases: -7 ... 18446744073709551599
Applying pattern match.pd:491, generic-match.c:3721
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _114 - (unsigned long) _115) + 18446744073709551615) / 8, bounded by 2305843009213693950
Creating dr for *__nstart_100
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _115
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_115
	Access function 0: {8B, +, 8}_1
Creating dr for *__nstart_100
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _115
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_115
	Access function 0: {8B, +, 8}_1
Creating dr for *__nstart_100
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _115
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_115
	Access function 0: {8B, +, 8}_1
Creating dr for *__nstart_100
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: _115
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 256
	base_object: *_115
	Access function 0: {8B, +, 8}_1
Applying pattern match.pd:397, generic-match.c:4039
Analyzing # of iterations of loop 1
  exit condition [_115 + 16, + , 8](no_overflow) < _114 + 8
  bounds on difference of bases: -7 ... 18446744073709551599
Applying pattern match.pd:491, generic-match.c:3721
Applying pattern match.pd:129, generic-match.c:7247
  result:
    # of iterations (((unsigned long) _114 - (unsigned long) _115) + 18446744073709551615) / 8, bounded by 2305843009213693950
Creating dr for MEM[(const struct _Deque_iterator &)&D.47477]
analyze_innermost: success.
	base_address: &D.47477
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(const struct _Deque_iterator &)&D.47477]
Creating dr for this_3(D)->D.43590._M_impl._M_finish
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 384
	Access function 1: 0
	Access function 2: 0
Creating dr for MEM[(const struct iterator &)__x_2(D) + 16]._M_first
analyze_innermost: success.
	base_address: __x_2(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)__x_2(D) + 16]
	Access function 0: 64
Creating dr for *__tmp$_M_node_144
analyze_innermost: success.
Applying pattern match.pd:524, generic-match.c:4929
	base_address: SR.1981_22 + (long unsigned int) iftmp.107_141 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__tmp$_M_node_144
Creating dr for D.47483._M_cur
analyze_innermost: success.
	base_address: &D.47483
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: D.47483
	Access function 0: 0
Creating dr for MEM[(const struct iterator &)this_3(D) + 16]._M_first
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_3(D) + 16]
	Access function 0: 64
Creating dr for D.47483._M_first
analyze_innermost: success.
	base_address: &D.47483
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: D.47483
	Access function 0: 64
Creating dr for D.47483._M_last
analyze_innermost: success.
	base_address: &D.47483
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: D.47483
	Access function 0: 128
Creating dr for D.47483._M_node
analyze_innermost: success.
	base_address: &D.47483
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: D.47483
	Access function 0: 192
Creating dr for D.50408._M_cur
analyze_innermost: success.
	base_address: &D.50408
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: D.50408
	Access function 0: 0
Creating dr for D.50408._M_first
analyze_innermost: success.
	base_address: &D.50408
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: D.50408
	Access function 0: 64
Creating dr for D.50408._M_last
analyze_innermost: success.
	base_address: &D.50408
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: D.50408
	Access function 0: 128
Creating dr for D.50408._M_node
analyze_innermost: success.
	base_address: &D.50408
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: D.50408
	Access function 0: 192
Creating dr for MEM[(struct _Deque_iterator *)&__mid]
analyze_innermost: success.
	base_address: &__mid
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)&__mid]
Creating dr for MEM[(struct _Deque_iterator *)&__mid + 8B]
analyze_innermost: success.
	base_address: &__mid
	offset from base address: 0
	constant offset from base address: 8
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)&__mid + 8B]
Creating dr for MEM[(struct _Deque_iterator *)&__mid + 16B]
analyze_innermost: success.
	base_address: &__mid
	offset from base address: 0
	constant offset from base address: 16
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)&__mid + 16B]
Creating dr for MEM[(struct _Deque_iterator *)&__mid + 24B]
analyze_innermost: success.
	base_address: &__mid
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: MEM[(struct _Deque_iterator *)&__mid + 24B]
Creating dr for this_3(D)->D.43590._M_impl._M_start._M_first
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 0
	aligned to: 256
	base_object: *this_3(D)
	Access function 0: 64
	Access function 1: 128
	Access function 2: 0
	Access function 3: 0
Creating dr for MEM[(const struct iterator &)this_3(D) + 16]._M_last
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_3(D) + 16]
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)this_3(D) + 16]._M_node
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 40
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_3(D) + 16]
	Access function 0: 192
Creating dr for *__new_start$_M_node_234
analyze_innermost: success.
Applying pattern match.pd:524, generic-match.c:4929
	base_address: __new_start$_M_node_206 + (long unsigned int) iftmp.117_231 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__new_start$_M_node_234
Creating dr for MEM[(const int &)__mid$_M_cur_534]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_534]
Creating dr for MEM[(const int &)__mid$_M_cur_534]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_534]
Creating dr for *SR.2061_543
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2061_543
Creating dr for *SR.2061_543
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2061_543
Creating dr for MEM[(const int &)__mid$_M_cur_534]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_534]
Creating dr for MEM[(const int &)__mid$_M_cur_534]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_534]
Creating dr for *SR.2061_543
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2061_543
Creating dr for *SR.2061_543
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2061_543
Creating dr for MEM[(int * *)__mid$_M_node_525 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)__mid$_M_node_525 + 8B]
Creating dr for MEM[(int * *)__mid$_M_node_525 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)__mid$_M_node_525 + 8B]
Creating dr for MEM[(int * *)SR.2063_538 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)SR.2063_538 + 8B]
Creating dr for MEM[(int * *)SR.2063_538 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)SR.2063_538 + 8B]
Analyzing # of iterations of loop 2
  exit condition 0 < [(_Distance) _173 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) _173 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 2
  exit condition 0 < [(_Distance) _173 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) _173 + -1), bounded by 9223372036854775806
Creating dr for MEM[(const int &)__mid$_M_cur_534]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_534]
Creating dr for MEM[(const int &)__mid$_M_cur_534]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_534]
Creating dr for *SR.2061_543
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2061_543
Creating dr for *SR.2061_543
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2061_543
Creating dr for MEM[(const int &)__mid$_M_cur_534]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_534]
Creating dr for MEM[(const int &)__mid$_M_cur_534]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_534]
Creating dr for *SR.2061_543
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2061_543
Creating dr for *SR.2061_543
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2061_543
Creating dr for MEM[(int * *)__mid$_M_node_525 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)__mid$_M_node_525 + 8B]
Creating dr for MEM[(int * *)__mid$_M_node_525 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)__mid$_M_node_525 + 8B]
Creating dr for MEM[(int * *)SR.2063_538 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)SR.2063_538 + 8B]
Creating dr for MEM[(int * *)SR.2063_538 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)SR.2063_538 + 8B]
Analyzing # of iterations of loop 2
  exit condition 0 < [(_Distance) _173 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) _173 + -1), bounded by 9223372036854775806
Creating dr for MEM[(const struct iterator &)this_3(D) + 48]._M_last
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_3(D) + 48]
	Access function 0: 128
Creating dr for MEM[(const struct iterator &)this_3(D) + 48]._M_first
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_3(D) + 48]
	Access function 0: 64
Creating dr for MEM[(const struct iterator &)this_3(D) + 48]._M_node
analyze_innermost: success.
	base_address: this_3(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 256
	base_object: MEM[(const struct iterator &)this_3(D) + 48]
	Access function 0: 192
Creating dr for *__new_finish$_M_node_359
analyze_innermost: success.
Applying pattern match.pd:524, generic-match.c:4929
	base_address: __new_finish$_M_node_332 + (long unsigned int) iftmp.117_356 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 256
	base_object: *__new_finish$_M_node_359
Creating dr for MEM[(const int &)__mid$_M_cur_486]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_486]
Creating dr for MEM[(const int &)__mid$_M_cur_486]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_486]
Creating dr for *SR.2106_501
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2106_501
Creating dr for *SR.2106_501
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2106_501
Creating dr for MEM[(const int &)__mid$_M_cur_486]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_486]
Creating dr for MEM[(const int &)__mid$_M_cur_486]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_486]
Creating dr for *SR.2106_501
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2106_501
Creating dr for *SR.2106_501
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2106_501
Creating dr for MEM[(int * *)__mid$_M_node_481 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)__mid$_M_node_481 + 8B]
Creating dr for MEM[(int * *)__mid$_M_node_481 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)__mid$_M_node_481 + 8B]
Creating dr for MEM[(int * *)SR.2108_493 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)SR.2108_493 + 8B]
Creating dr for MEM[(int * *)SR.2108_493 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)SR.2108_493 + 8B]
Analyzing # of iterations of loop 3
  exit condition 0 < [(_Distance) _173 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) _173 + -1), bounded by 9223372036854775806
Analyzing # of iterations of loop 3
  exit condition 0 < [(_Distance) _173 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) _173 + -1), bounded by 9223372036854775806
Creating dr for MEM[(const int &)__mid$_M_cur_486]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_486]
Creating dr for MEM[(const int &)__mid$_M_cur_486]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_486]
Creating dr for *SR.2106_501
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2106_501
Creating dr for *SR.2106_501
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2106_501
Creating dr for MEM[(const int &)__mid$_M_cur_486]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_486]
Creating dr for MEM[(const int &)__mid$_M_cur_486]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int &)__mid$_M_cur_486]
Creating dr for *SR.2106_501
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2106_501
Creating dr for *SR.2106_501
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *SR.2106_501
Creating dr for MEM[(int * *)__mid$_M_node_481 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)__mid$_M_node_481 + 8B]
Creating dr for MEM[(int * *)__mid$_M_node_481 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)__mid$_M_node_481 + 8B]
Creating dr for MEM[(int * *)SR.2108_493 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)SR.2108_493 + 8B]
Creating dr for MEM[(int * *)SR.2108_493 + 8B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(int * *)SR.2108_493 + 8B]
Analyzing # of iterations of loop 3
  exit condition 0 < [(_Distance) _173 + -1, + , -1](no_overflow)
  bounds on difference of bases: 0 ... 9223372036854775806
Applying pattern match.pd:49, generic-match.c:4253
  result:
    # of iterations (unsigned long) ((_Distance) _173 + -1), bounded by 9223372036854775806

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:10)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:7)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:7, LOOPS:0, CONDITIONS:2, STMTS:55)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:10)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:7)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:2, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:7, LOOPS:0, CONDITIONS:2, STMTS:51)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:7, LOOPS:0, CONDITIONS:2, STMTS:53)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Before limit_scops SCoP statistics (BBS:1, LOOPS:0, CONDITIONS:0, STMTS:1)

Before limit_scops SCoP profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

number of SCoPs: 0

Global statistics (BBS:64, LOOPS:3, CONDITIONS:21, STMTS:830)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)
loop_0 (header = 0, latch = 1, niter = )
{
  bb_2 (preds = {bb_0 }, succs = {bb_3 bb_48 })
  {
    <bb 2>:
    if (__x_2(D) != this_3(D))
      goto <bb 3>;
    else
      goto <bb 48>;

  }
  bb_3 (preds = {bb_2 }, succs = {bb_4 bb_10 })
  {
    <bb 3>:
    # DEBUG this => this_3(D)
    # DEBUG D#174 => &MEM[(const struct deque *)this_3(D)].D.43590._M_impl._M_start
    # DEBUG D#175 => &MEM[(const struct deque *)this_3(D)].D.43590._M_impl._M_finish
    # DEBUG __x => D#175
    # DEBUG __y => D#174
    # DEBUG __size => 4
    # VUSE <.MEM_4(D)>
    _43 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_node;
    _44 = (long int) _43;
    # VUSE <.MEM_4(D)>
    _45 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_node;
    _46 = (long int) _45;
    _47 = _44 - _46;
    _48 = _47 /[ex] 8;
    _49 = _48 + -1;
    _50 = _49 * 128;
    # VUSE <.MEM_4(D)>
    _51 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_cur;
    _52 = (long int) _51;
    # VUSE <.MEM_4(D)>
    _53 = MEM[(const struct _Deque_iterator &)this_3(D) + 48]._M_first;
    _54 = (long int) _53;
    _55 = _52 - _54;
    _56 = _55 /[ex] 4;
    _57 = _50 + _56;
    # VUSE <.MEM_4(D)>
    _58 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_last;
    _59 = (long int) _58;
    # VUSE <.MEM_4(D)>
    _60 = MEM[(const struct _Deque_iterator &)this_3(D) + 16]._M_cur;
    _61 = (long int) _60;
    _62 = _59 - _61;
    _63 = _62 /[ex] 4;
    _64 = _57 + _63;
    _65 = (size_type) _64;
    # DEBUG __len => _65
    # DEBUG this => __x_2(D)
    # DEBUG D#174 => &__x_2(D)->D.43590._M_impl._M_start
    # DEBUG D#175 => &__x_2(D)->D.43590._M_impl._M_finish
    # DEBUG __x => D#175
    # DEBUG __y => D#174
    # DEBUG __size => 4
    # VUSE <.MEM_4(D)>
    _6 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_node;
    _5 = (long int) _6;
    # VUSE <.MEM_4(D)>
    SR.1981_22 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_node;
    _23 = (long int) SR.1981_22;
    _24 = _5 - _23;
    _25 = _24 /[ex] 8;
    _26 = _25 + -1;
    _27 = _26 * 128;
    # VUSE <.MEM_4(D)>
    _28 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_cur;
    _29 = (long int) _28;
    # VUSE <.MEM_4(D)>
    _30 = MEM[(const struct _Deque_iterator &)__x_2(D) + 48]._M_first;
    _31 = (long int) _30;
    _32 = _29 - _31;
    _33 = _32 /[ex] 4;
    _34 = _27 + _33;
    # VUSE <.MEM_4(D)>
    SR.1980_35 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_last;
    _36 = (long int) SR.1980_35;
    # VUSE <.MEM_4(D)>
    SR.1978_37 = MEM[(const struct _Deque_iterator &)__x_2(D) + 16]._M_cur;
    _38 = (long int) SR.1978_37;
    _39 = _36 - _38;
    _40 = _39 /[ex] 4;
    _41 = _34 + _40;
    _42 = (size_type) _41;
    if (_42 <= _65)
      goto <bb 4>;
    else
      goto <bb 10>;

  }
  bb_4 (preds = {bb_3 }, succs = {bb_5 bb_6 })
  {
    <bb 4>:
    # DEBUG D#696 => &this_3(D)->D.43590._M_impl._M_start
    # DEBUG this => &D.47476
    # DEBUG __x => D#696
    # .MEM_102 = VDEF <.MEM_4(D)>
    D.47476._M_cur = _60;
    # VUSE <.MEM_102>
    _68 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
    # .MEM_103 = VDEF <.MEM_102>
    D.47476._M_first = _68;
    # .MEM_104 = VDEF <.MEM_103>
    D.47476._M_last = _58;
    # .MEM_105 = VDEF <.MEM_104>
    D.47476._M_node = _45;
    # DEBUG this => __x_2(D)
    # DEBUG D#83 => &__x_2(D)->D.43590._M_impl._M_finish
    # DEBUG this => &D.50404
    # DEBUG __x => D#83
    # .MEM_106 = VDEF <.MEM_105>
    D.50404._M_cur = _28;
    # .MEM_107 = VDEF <.MEM_106>
    D.50404._M_first = _30;
    # VUSE <.MEM_107>
    _67 = MEM[(const struct iterator &)__x_2(D) + 48]._M_last;
    # .MEM_108 = VDEF <.MEM_107>
    D.50404._M_last = _67;
    # .MEM_109 = VDEF <.MEM_108>
    D.50404._M_node = _6;
    # DEBUG this => __x_2(D)
    # DEBUG D#84 => &__x_2(D)->D.43590._M_impl._M_start
    # DEBUG this => &D.50405
    # DEBUG __x => D#84
    # .MEM_110 = VDEF <.MEM_109>
    D.50405._M_cur = SR.1978_37;
    # VUSE <.MEM_110>
    _66 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
    # .MEM_111 = VDEF <.MEM_110>
    D.50405._M_first = _66;
    # .MEM_112 = VDEF <.MEM_111>
    D.50405._M_last = SR.1980_35;
    # .MEM_113 = VDEF <.MEM_112>
    D.50405._M_node = SR.1981_22;
    # .MEM_18 = VDEF <.MEM_113>
    D.47477 = std::copy<int> (D.50405, D.50404, &D.47476); [return slot optimization]
    # DEBUG this => this_3(D)
    # DEBUG __pos => &D.47477
    # DEBUG D#485 => &this_3(D)->D.43590
    # DEBUG this => D#485
    # DEBUG this => this_3(D)
    # DEBUG D#66 => &this_3(D)->D.43590._M_impl._M_finish
    # DEBUG this => NULL
    # DEBUG __x => D#66
    # DEBUG D#492 => MEM[(const struct iterator &)this_3(D) + 48]._M_cur
    # DEBUG D.58025 => D#492
    # DEBUG D#491 => MEM[(const struct iterator &)this_3(D) + 48]._M_first
    # DEBUG D.58026 => D#491
    # DEBUG D#490 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
    # DEBUG D.58027 => D#490
    # VUSE <.MEM_18>
    _114 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
    # DEBUG D.58028 => _114
    # DEBUG this => NULL
    # DEBUG __x => &D.47477
    # DEBUG D#489 => MEM[(const struct iterator &)&D.47477]._M_cur
    # DEBUG D.58029 => D#489
    # DEBUG D#488 => MEM[(const struct iterator &)&D.47477]._M_first
    # DEBUG D.58030 => D#488
    # DEBUG D#487 => MEM[(const struct iterator &)&D.47477]._M_last
    # DEBUG D.58031 => D#487
    # VUSE <.MEM_18>
    _115 = MEM[(const struct iterator &)&D.47477]._M_node;
    # DEBUG D.58032 => _115
    # DEBUG D#68 => this_3(D)
    # DEBUG this => D#68
    # DEBUG __first => D#69
    # DEBUG __last => D#70
    # DEBUG D.58014 => D#71
    _116 = _114 + 8;
    __nstart_117 = _115 + 8;
    # DEBUG D#486 => &this_3(D)->D.43590
    # DEBUG this => D#486
    # DEBUG __nstart => __nstart_117
    # DEBUG __nfinish => _116
    # DEBUG __n => __nstart_117
    if (_116 <= __nstart_117)
      goto <bb 5>;
    else
      goto <bb 6>;

  }
  bb_5 (preds = {bb_4 bb_55 }, succs = {bb_48 })
  {
    <bb 5>:
    # .MEM_649 = PHI <.MEM_18(4), .MEM_626(55)>
    # .MEM_652 = VDEF <.MEM_649>
    this_3(D)->D.43590._M_impl._M_finish = MEM[(const struct _Deque_iterator &)&D.47477];
    # .MEM_20 = VDEF <.MEM_652>
    D.47477 ={v} {CLOBBER};
    # .MEM_21 = VDEF <.MEM_20>
    D.47476 ={v} {CLOBBER};
    goto <bb 48>;

  }
  bb_6 (preds = {bb_4 }, succs = {bb_7 })
  {
    <bb 6>:

  }
  bb_8 (preds = {bb_7 }, succs = {bb_55 })
  {
    <bb 8>:
    # .MEM_626 = PHI <.MEM_651(7)>

  }
  bb_55 (preds = {bb_8 }, succs = {bb_5 })
  {
    <bb 55>:
    goto <bb 5>;

  }
  bb_10 (preds = {bb_3 }, succs = {bb_49 bb_50 })
  {
    <bb 10>:
    # DEBUG this => __x_2(D)
    # DEBUG D#84 => &__x_2(D)->D.43590._M_impl._M_start
    # DEBUG this => &D.47479
    # DEBUG __x => D#84
    # VUSE <.MEM_4(D)>
    SR.1979_81 = MEM[(const struct iterator &)__x_2(D) + 16]._M_first;
    # DEBUG this => &D.47479
    # DEBUG __n => _64
    # DEBUG __tmp$_M_cur => SR.1978_37
    # DEBUG __tmp$_M_first => SR.1979_81
    # DEBUG __tmp$_M_last => SR.1980_35
    # DEBUG __tmp$_M_node => SR.1981_22
    # DEBUG this => &__tmp
    # DEBUG __n => _64
    _126 = (long int) SR.1979_81;
    _127 = _38 - _126;
    _128 = _127 /[ex] 4;
    __offset_129 = _64 + _128;
    # DEBUG __offset => __offset_129
    # DEBUG __size => 4
    _372 = (unsigned long) __offset_129;
    if (_372 <= 127)
      goto <bb 49>;
    else
      goto <bb 50>;

  }
  bb_11 (preds = {bb_50 }, succs = {bb_13 })
  {
    <bb 11>:
    # DEBUG __size => 4
    iftmp.107_134 = __offset_129 >> 7;
    goto <bb 13>;

  }
  bb_12 (preds = {bb_50 }, succs = {bb_13 })
  {
    <bb 12>:
    _136 = ~_372;
    # DEBUG __size => 4
    _137 = _136 >> 7;
    _138 = (long int) _137;
    iftmp.107_139 = ~_138;

  }
  bb_13 (preds = {bb_11 bb_12 }, succs = {bb_14 })
  {
    <bb 13>:
    # iftmp.107_141 = PHI <iftmp.107_134(11), iftmp.107_139(12)>
    # DEBUG __node_offset => iftmp.107_141
    __node_offset.109_142 = (long unsigned int) iftmp.107_141;
    _143 = __node_offset.109_142 * 8;
    __tmp$_M_node_144 = SR.1981_22 + _143;
    # DEBUG this => &__tmp
    # DEBUG __new_node => __tmp$_M_node_144
    # DEBUG __tmp$_M_node => __tmp$_M_node_144
    # VUSE <.MEM_4(D)>
    __tmp$_M_first_145 = *__tmp$_M_node_144;
    # DEBUG __tmp$_M_first => __tmp$_M_first_145
    # DEBUG __size => 4
    __tmp$_M_last_146 = __tmp$_M_first_145 + 512;
    # DEBUG __tmp$_M_last => __tmp$_M_last_146
    # DEBUG __size => 4
    _147 = iftmp.107_141 * 128;
    _148 = __offset_129 - _147;
    _149 = (long unsigned int) _148;
    _150 = _149 * 4;
    __tmp$_M_cur_151 = __tmp$_M_first_145 + _150;
    # DEBUG __tmp$_M_cur => __tmp$_M_cur_151
    pretmp_503 = (long int) __tmp$_M_node_144;
    pretmp_505 = (long int) __tmp$_M_last_146;

  }
  bb_14 (preds = {bb_49 bb_13 }, succs = {bb_63 })
  {
    <bb 14>:
    # __tmp$_M_cur_477 = PHI <__tmp$_M_cur_133(49), __tmp$_M_cur_151(13)>
    # __tmp$_M_first_569 = PHI <SR.1979_81(49), __tmp$_M_first_145(13)>
    # __tmp$_M_last_453 = PHI <SR.1980_35(49), __tmp$_M_last_146(13)>
    # __tmp$_M_node_16 = PHI <SR.1981_22(49), __tmp$_M_node_144(13)>
    # prephitmp_504 = PHI <_23(49), pretmp_503(13)>
    # prephitmp_508 = PHI <_36(49), pretmp_505(13)>

  }
  bb_63 (preds = {bb_14 }, succs = {bb_15 bb_31 })
  {
    <bb 63>:
    # DEBUG __tmp$_M_node => __tmp$_M_node_16
    # DEBUG __tmp$_M_last => __tmp$_M_last_453
    # DEBUG __tmp$_M_first => __tmp$_M_first_569
    # DEBUG __tmp$_M_cur => __tmp$_M_cur_477
    # DEBUG __mid$_M_cur => __tmp$_M_cur_477
    # DEBUG __mid$_M_first => __tmp$_M_first_569
    # DEBUG __mid$_M_last => __tmp$_M_last_453
    # DEBUG __mid$_M_node => __tmp$_M_node_16
    # DEBUG D#1132 => {CLOBBER}
    # DEBUG __tmp$_M_cur => D#1132
    # DEBUG D#1133 => {CLOBBER}
    # DEBUG __tmp$_M_first => D#1133
    # DEBUG D#1134 => {CLOBBER}
    # DEBUG __tmp$_M_last => D#1134
    # DEBUG D#1135 => {CLOBBER}
    # DEBUG __tmp$_M_node => D#1135
    # DEBUG D#694 => &this_3(D)->D.43590._M_impl._M_start
    # DEBUG this => &D.47483
    # DEBUG __x => D#694
    # .MEM_86 = VDEF <.MEM_4(D)>
    D.47483._M_cur = _60;
    # VUSE <.MEM_86>
    _78 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
    # .MEM_87 = VDEF <.MEM_86>
    D.47483._M_first = _78;
    # .MEM_88 = VDEF <.MEM_87>
    D.47483._M_last = _58;
    # .MEM_89 = VDEF <.MEM_88>
    D.47483._M_node = _45;
    # DEBUG this => __x_2(D)
    # DEBUG D#84 => &__x_2(D)->D.43590._M_impl._M_start
    # DEBUG this => &D.50408
    # DEBUG __x => D#84
    # .MEM_90 = VDEF <.MEM_89>
    D.50408._M_cur = SR.1978_37;
    # .MEM_91 = VDEF <.MEM_90>
    D.50408._M_first = SR.1979_81;
    # .MEM_92 = VDEF <.MEM_91>
    D.50408._M_last = SR.1980_35;
    # .MEM_93 = VDEF <.MEM_92>
    D.50408._M_node = SR.1981_22;
    # .MEM_593 = VDEF <.MEM_93>
    MEM[(struct _Deque_iterator *)&__mid] = __tmp$_M_cur_477;
    # .MEM_592 = VDEF <.MEM_593>
    MEM[(struct _Deque_iterator *)&__mid + 8B] = __tmp$_M_first_569;
    # .MEM_591 = VDEF <.MEM_592>
    MEM[(struct _Deque_iterator *)&__mid + 16B] = __tmp$_M_last_453;
    # .MEM_590 = VDEF <.MEM_591>
    MEM[(struct _Deque_iterator *)&__mid + 24B] = __tmp$_M_node_16;
    # .MEM_10 = VDEF <.MEM_590>
    std::copy<int> (D.50408, __mid, &D.47483);
    # .MEM_11 = VDEF <.MEM_10>
    D.47483 ={v} {CLOBBER};
    # DEBUG this => __x_2(D)
    # DEBUG D#83 => &__x_2(D)->D.43590._M_impl._M_finish
    # DEBUG this => &D.50409
    # DEBUG __x => D#83
    # VUSE <.MEM_11>
    _13 = MEM[(const struct iterator &)__x_2(D) + 48]._M_cur;
    # VUSE <.MEM_11>
    _72 = MEM[(const struct iterator &)__x_2(D) + 48]._M_first;
    # DEBUG D#1148 => MEM[(const struct iterator &)__x_2(D) + 48]._M_last
    # VUSE <.MEM_11>
    _74 = MEM[(const struct iterator &)__x_2(D) + 48]._M_node;
    # DEBUG D#695 => &this_3(D)->D.43590._M_impl._M_finish
    # DEBUG this => &D.47491
    # DEBUG __x => D#695
    # VUSE <.MEM_11>
    _17 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
    # DEBUG this => this_3(D)
    # DEBUG __position => &D.47491
    # DEBUG __first$_M_cur => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG this => NULL
    # DEBUG __x => &D.47491
    # DEBUG this => this_3(D)
    # DEBUG __pos => NULL
    # DEBUG __first$_M_cur => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG this => &D.71625
    # DEBUG __x => NULL
    # DEBUG this => this_3(D)
    # DEBUG __pos => &D.71625
    # DEBUG __first => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$16 => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG D#634 => __first
    # DEBUG D#634 => __first
    # DEBUG D#634 => __first
    # DEBUG D#635 => __last
    # DEBUG D#635 => __last
    # DEBUG D#635 => __last
    # DEBUG D.61049 => D#630
    # DEBUG __x => NULL
    # DEBUG __y => NULL
    # DEBUG __size => 4
    _158 = (long int) _74;
    _160 = _158 - prephitmp_504;
    _161 = _160 /[ex] 8;
    _162 = _161 + -1;
    _163 = _162 * 128;
    _164 = (long int) _13;
    _165 = (long int) _72;
    _166 = _164 - _165;
    _167 = _166 /[ex] 4;
    _168 = _163 + _167;
    _170 = (long int) __tmp$_M_cur_477;
    _171 = prephitmp_508 - _170;
    _172 = _171 /[ex] 4;
    _173 = _168 + _172;
    __n_174 = (const size_type) _173;
    # DEBUG __n => __n_174
    # VUSE <.MEM_11>
    _176 = this_3(D)->D.43590._M_impl._M_start._M_cur;
    if (_17 == _176)
      goto <bb 15>;
    else
      goto <bb 31>;

  }
  bb_15 (preds = {bb_63 }, succs = {bb_16 bb_17 })
  {
    <bb 15>:
    # DEBUG this => this_3(D)
    # DEBUG __n => __n_174
    _194 = (long int) _17;
    # VUSE <.MEM_11>
    _195 = this_3(D)->D.43590._M_impl._M_start._M_first;
    _196 = (long int) _195;
    _197 = _194 - _196;
    _198 = _197 /[ex] 4;
    __vacancies_199 = (const size_type) _198;
    # DEBUG __vacancies => __vacancies_199
    if (__n_174 > __vacancies_199)
      goto <bb 16>;
    else
      goto <bb 17>;

  }
  bb_16 (preds = {bb_15 }, succs = {bb_17 })
  {
    <bb 16>:
    _200 = __n_174 - __vacancies_199;
    # .MEM_564 = VDEF <.MEM_11>
    std::deque<int, std::allocator<int> >::_M_new_elements_at_front (this_3(D), _200);
    # VUSE <.MEM_564>
    pretmp_402 = MEM[(const struct iterator &)this_3(D) + 16]._M_cur;
    # VUSE <.MEM_564>
    pretmp_406 = MEM[(const struct iterator &)this_3(D) + 16]._M_first;
    pretmp_408 = (long int) pretmp_406;

  }
  bb_17 (preds = {bb_15 bb_16 }, succs = {bb_58 })
  {
    <bb 17>:
    # .MEM_441 = PHI <.MEM_11(15), .MEM_564(16)>
    # prephitmp_404 = PHI <_176(15), pretmp_402(16)>
    # prephitmp_407 = PHI <_195(15), pretmp_406(16)>
    # prephitmp_409 = PHI <_196(15), pretmp_408(16)>

  }
  bb_58 (preds = {bb_17 }, succs = {bb_51 bb_52 })
  {
    <bb 58>:
    # DEBUG D#1129 => &this_3(D)->D.43590._M_impl._M_start
    # DEBUG this => D#1129
    # DEBUG __n => _173
    # DEBUG this => &__tmp
    # DEBUG __x => D#1129
    # DEBUG D#1149 => MEM[(const struct iterator &)this_3(D) + 16]._M_first
    # DEBUG __tmp$_M_first => D#1149
    # VUSE <.MEM_441>
    __new_start$_M_last_205 = MEM[(const struct iterator &)this_3(D) + 16]._M_last;
    # DEBUG __tmp$_M_last => __new_start$_M_last_205
    # VUSE <.MEM_441>
    __new_start$_M_node_206 = MEM[(const struct iterator &)this_3(D) + 16]._M_node;
    # DEBUG __tmp$_M_node => __new_start$_M_node_206
    # DEBUG this => &__tmp
    # DEBUG __n => _173
    # DEBUG this => &__tmp
    # DEBUG __n => -_173
    _214 = (long int) prephitmp_404;
    _217 = _214 - prephitmp_409;
    _218 = _217 /[ex] 4;
    __offset_219 = _218 - _173;
    # DEBUG __offset => __offset_219
    # DEBUG __size => 4
    _369 = (unsigned long) __offset_219;
    if (_369 <= 127)
      goto <bb 51>;
    else
      goto <bb 52>;

  }
  bb_18 (preds = {bb_52 }, succs = {bb_20 })
  {
    <bb 18>:
    # DEBUG __size => 4
    iftmp.117_224 = __offset_219 >> 7;
    goto <bb 20>;

  }
  bb_19 (preds = {bb_52 }, succs = {bb_20 })
  {
    <bb 19>:
    _226 = ~_369;
    # DEBUG __size => 4
    _227 = _226 >> 7;
    _228 = (long int) _227;
    iftmp.117_229 = ~_228;

  }
  bb_20 (preds = {bb_18 bb_19 }, succs = {bb_21 })
  {
    <bb 20>:
    # iftmp.117_231 = PHI <iftmp.117_224(18), iftmp.117_229(19)>
    # DEBUG __node_offset => iftmp.117_231
    __node_offset.119_232 = (long unsigned int) iftmp.117_231;
    _233 = __node_offset.119_232 * 8;
    __new_start$_M_node_234 = __new_start$_M_node_206 + _233;
    # DEBUG this => &__tmp
    # DEBUG __new_node => __new_start$_M_node_234
    # DEBUG __tmp$_M_node => __new_start$_M_node_234
    # VUSE <.MEM_441>
    __new_start$_M_first_235 = *__new_start$_M_node_234;
    # DEBUG __tmp$_M_first => __new_start$_M_first_235
    # DEBUG __size => 4
    __new_start$_M_last_236 = __new_start$_M_first_235 + 512;
    # DEBUG __tmp$_M_last => __new_start$_M_last_236
    # DEBUG __size => 4
    _237 = iftmp.117_231 * 128;
    _238 = __offset_219 - _237;
    _239 = (long unsigned int) _238;
    _240 = _239 * 4;
    __new_start$_M_cur_241 = __new_start$_M_first_235 + _240;
    # DEBUG __tmp$_M_cur => __new_start$_M_cur_241

  }
  bb_21 (preds = {bb_51 bb_20 }, succs = {bb_61 })
  {
    <bb 21>:
    # __new_start$_M_cur_557 = PHI <__new_start$_M_cur_223(51), __new_start$_M_cur_241(20)>
    # __new_start$_M_first_556 = PHI <prephitmp_407(51), __new_start$_M_first_235(20)>
    # __new_start$_M_last_546 = PHI <__new_start$_M_last_205(51), __new_start$_M_last_236(20)>
    # __new_start$_M_node_545 = PHI <__new_start$_M_node_206(51), __new_start$_M_node_234(20)>

  }
  bb_61 (preds = {bb_21 }, succs = {bb_22 bb_23 })
  {
    <bb 61>:
    # DEBUG __tmp$_M_node => __new_start$_M_node_545
    # DEBUG __tmp$_M_last => __new_start$_M_last_546
    # DEBUG __tmp$_M_first => __new_start$_M_first_556
    # DEBUG __tmp$_M_cur => __new_start$_M_cur_557
    # DEBUG this => &__new_start
    # DEBUG __x => NULL
    # DEBUG __new_start$_M_cur => __new_start$_M_cur_557
    # DEBUG __new_start$_M_first => __new_start$_M_first_556
    # DEBUG __new_start$_M_last => __new_start$_M_last_546
    # DEBUG __new_start$_M_node => __new_start$_M_node_545
    # .MEM_579 = VDEF <.MEM_441>
    __tmp ={v} {CLOBBER};
    # DEBUG D#690 => &this_3(D)->D.43590
    # DEBUG this => D#690
    # DEBUG this => &D.71655
    # DEBUG __x => &__new_start
    # DEBUG __first$_M_cur => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG __result => &D.71655
    # DEBUG D.71659 => D#603
    # DEBUG this => &D.71663
    # DEBUG __x => &D.71655
    # DEBUG __first$_M_cur => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG __result => &D.71663
    # DEBUG __assignable => 1
    # DEBUG this => NULL
    # DEBUG __x => &D.71663
    # DEBUG __first$_M_cur => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG __result => NULL
    # DEBUG this => &D.71696
    # DEBUG __x => NULL
    # DEBUG __first => __tmp$_M_cur_477
    # DEBUG __first$8 => __tmp$_M_first_569
    # DEBUG __first$16 => __tmp$_M_last_453
    # DEBUG __first$24 => __tmp$_M_node_16
    # DEBUG __last => _13
    # DEBUG __last$8 => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$24 => _74
    # DEBUG __result => &D.71696
    # DEBUG this => &D.71716
    # DEBUG __x => &D.71696
    # DEBUG __it => _13
    # DEBUG __it$8 => _72
    # DEBUG D#1130 => MEM[(struct _Deque_iterator *)&__last + 16B]
    # DEBUG __it$16 => D#1130
    # DEBUG __it$24 => _74
    # DEBUG __it$_M_cur => _13
    # DEBUG __it$_M_first => _72
    # DEBUG __it$_M_last => D#1130
    # DEBUG __it$_M_node => _74
    # DEBUG __it => __tmp$_M_cur_477
    # DEBUG __it$8 => __tmp$_M_first_569
    # DEBUG __it$16 => __tmp$_M_last_453
    # DEBUG __it$24 => __tmp$_M_node_16
    # DEBUG __it$_M_cur => __tmp$_M_cur_477
    # DEBUG __it$_M_first => __tmp$_M_first_569
    # DEBUG __it$_M_last => __tmp$_M_last_453
    # DEBUG __it$_M_node => __tmp$_M_node_16
    # DEBUG __result => &D.71716
    # DEBUG this => NULL
    # DEBUG __x => &D.71716
    # DEBUG __it => NULL
    # DEBUG this => NULL
    # DEBUG __x => NULL
    # DEBUG __it => NULL
    # DEBUG this => NULL
    # DEBUG __x => NULL
    # DEBUG __it => _13
    # DEBUG __it$8 => _72
    # DEBUG __it$16 => D#1130
    # DEBUG __it$24 => _74
    # DEBUG __it$_M_cur => _13
    # DEBUG __it$_M_first => _72
    # DEBUG __it$_M_last => D#1130
    # DEBUG __it$_M_node => _74
    # DEBUG __it => __tmp$_M_cur_477
    # DEBUG __it$8 => __tmp$_M_first_569
    # DEBUG __it$16 => __tmp$_M_last_453
    # DEBUG __it$24 => __tmp$_M_node_16
    # DEBUG __it$_M_cur => __tmp$_M_cur_477
    # DEBUG __it$_M_first => __tmp$_M_first_569
    # DEBUG __it$_M_last => __tmp$_M_last_453
    # DEBUG __it$_M_node => __tmp$_M_node_16
    # DEBUG __first => __tmp$_M_cur_477
    # DEBUG __first$8 => __tmp$_M_first_569
    # DEBUG __first$16 => __tmp$_M_last_453
    # DEBUG __first$24 => __tmp$_M_node_16
    # DEBUG __result => NULL
    # DEBUG __simple => 0
    # DEBUG this => &D.71741
    # DEBUG __x => NULL
    # DEBUG __first => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __result => &D.71741
    # DEBUG __x => &__last
    # DEBUG __y => &__first
    # DEBUG __size => 4
    # DEBUG __n => _173
    # DEBUG __n => _173
    if (_173 <= 0)
      goto <bb 22>;
    else
      goto <bb 23>;

  }
  bb_22 (preds = {bb_61 bb_56 }, succs = {bb_47 })
  {
    <bb 22>:
    # .MEM_648 = PHI <.MEM_579(61), .MEM_637(56)>
    # DEBUG this => &D.71662
    # DEBUG __x => &D.71741
    # .MEM_643 = VDEF <.MEM_648>
    D.71741 ={v} {CLOBBER};
    # .MEM_644 = VDEF <.MEM_643>
    D.71716 ={v} {CLOBBER};
    # .MEM_645 = VDEF <.MEM_644>
    D.71696 ={v} {CLOBBER};
    # .MEM_646 = VDEF <.MEM_645>
    D.71663 ={v} {CLOBBER};
    # .MEM_647 = VDEF <.MEM_646>
    D.71655 ={v} {CLOBBER};
    # .MEM_562 = VDEF <.MEM_647>
    MEM[(struct deque *)this_3(D) + 16B] = __new_start$_M_cur_557;
    # .MEM_122 = VDEF <.MEM_562>
    MEM[(struct deque *)this_3(D) + 24B] = __new_start$_M_first_556;
    # .MEM_121 = VDEF <.MEM_122>
    MEM[(struct deque *)this_3(D) + 32B] = __new_start$_M_last_546;
    # .MEM_155 = VDEF <.MEM_121>
    MEM[(struct deque *)this_3(D) + 40B] = __new_start$_M_node_545;
    # DEBUG D#1140 => {CLOBBER}
    # DEBUG __new_start$_M_cur => D#1140
    # DEBUG D#1141 => {CLOBBER}
    # DEBUG __new_start$_M_first => D#1141
    # DEBUG D#1142 => {CLOBBER}
    # DEBUG __new_start$_M_last => D#1142
    # DEBUG D#1143 => {CLOBBER}
    # DEBUG __new_start$_M_node => D#1143
    goto <bb 47>;

  }
  bb_23 (preds = {bb_61 }, succs = {bb_24 })
  {
    <bb 23>:

  }
  bb_29 (preds = {bb_28 }, succs = {bb_56 })
  {
    <bb 29>:
    # .MEM_637 = PHI <.MEM_628(28)>

  }
  bb_56 (preds = {bb_29 }, succs = {bb_22 })
  {
    <bb 56>:
    goto <bb 22>;

  }
  bb_31 (preds = {bb_63 }, succs = {bb_32 bb_33 })
  {
    <bb 31>:
    # VUSE <.MEM_11>
    _70 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
    # DEBUG this => this_3(D)
    # DEBUG __n => __n_174
    _319 = (long int) _70;
    _321 = (long int) _17;
    _322 = _319 - _321;
    _323 = _322 /[ex] 4;
    _324 = _323 + -1;
    __vacancies_325 = (const size_type) _324;
    # DEBUG __vacancies => __vacancies_325
    if (__n_174 > __vacancies_325)
      goto <bb 32>;
    else
      goto <bb 33>;

  }
  bb_32 (preds = {bb_31 }, succs = {bb_33 })
  {
    <bb 32>:
    _326 = __n_174 - __vacancies_325;
    # .MEM_472 = VDEF <.MEM_11>
    std::deque<int, std::allocator<int> >::_M_new_elements_at_back (this_3(D), _326);
    # VUSE <.MEM_472>
    pretmp_509 = MEM[(const struct iterator &)this_3(D) + 48]._M_cur;
    # VUSE <.MEM_472>
    pretmp_511 = MEM[(const struct iterator &)this_3(D) + 48]._M_last;
    pretmp_512 = (long int) pretmp_509;

  }
  bb_33 (preds = {bb_31 bb_32 }, succs = {bb_59 })
  {
    <bb 33>:
    # .MEM_446 = PHI <.MEM_11(31), .MEM_472(32)>
    # prephitmp_510 = PHI <_17(31), pretmp_509(32)>
    # prephitmp_377 = PHI <_70(31), pretmp_511(32)>
    # prephitmp_513 = PHI <_321(31), pretmp_512(32)>

  }
  bb_59 (preds = {bb_33 }, succs = {bb_53 bb_54 })
  {
    <bb 59>:
    # DEBUG D#1128 => &this_3(D)->D.43590._M_impl._M_finish
    # DEBUG this => D#1128
    # DEBUG __n => _173
    # DEBUG this => &__tmp
    # DEBUG __x => D#1128
    # VUSE <.MEM_446>
    __new_finish$_M_first_330 = MEM[(const struct iterator &)this_3(D) + 48]._M_first;
    # DEBUG __tmp$_M_first => __new_finish$_M_first_330
    # DEBUG D#1150 => MEM[(const struct iterator &)this_3(D) + 48]._M_last
    # DEBUG __tmp$_M_last => D#1150
    # VUSE <.MEM_446>
    __new_finish$_M_node_332 = MEM[(const struct iterator &)this_3(D) + 48]._M_node;
    # DEBUG __tmp$_M_node => __new_finish$_M_node_332
    # DEBUG this => &__tmp
    # DEBUG __n => _173
    _341 = (long int) __new_finish$_M_first_330;
    _342 = prephitmp_513 - _341;
    _343 = _342 /[ex] 4;
    __offset_344 = _173 + _343;
    # DEBUG __offset => __offset_344
    # DEBUG __size => 4
    _370 = (unsigned long) __offset_344;
    if (_370 <= 127)
      goto <bb 53>;
    else
      goto <bb 54>;

  }
  bb_34 (preds = {bb_54 }, succs = {bb_36 })
  {
    <bb 34>:
    # DEBUG __size => 4
    iftmp.117_349 = __offset_344 >> 7;
    goto <bb 36>;

  }
  bb_35 (preds = {bb_54 }, succs = {bb_36 })
  {
    <bb 35>:
    _351 = ~_370;
    # DEBUG __size => 4
    _352 = _351 >> 7;
    _353 = (long int) _352;
    iftmp.117_354 = ~_353;

  }
  bb_36 (preds = {bb_34 bb_35 }, succs = {bb_37 })
  {
    <bb 36>:
    # iftmp.117_356 = PHI <iftmp.117_349(34), iftmp.117_354(35)>
    # DEBUG __node_offset => iftmp.117_356
    __node_offset.119_357 = (long unsigned int) iftmp.117_356;
    _358 = __node_offset.119_357 * 8;
    __new_finish$_M_node_359 = __new_finish$_M_node_332 + _358;
    # DEBUG this => &__tmp
    # DEBUG __new_node => __new_finish$_M_node_359
    # DEBUG __tmp$_M_node => __new_finish$_M_node_359
    # VUSE <.MEM_446>
    __new_finish$_M_first_360 = *__new_finish$_M_node_359;
    # DEBUG __tmp$_M_first => __new_finish$_M_first_360
    # DEBUG __size => 4
    __new_finish$_M_last_361 = __new_finish$_M_first_360 + 512;
    # DEBUG __tmp$_M_last => __new_finish$_M_last_361
    # DEBUG __size => 4
    _362 = iftmp.117_356 * 128;
    _363 = __offset_344 - _362;
    _364 = (long unsigned int) _363;
    _365 = _364 * 4;
    __new_finish$_M_cur_366 = __new_finish$_M_first_360 + _365;
    # DEBUG __tmp$_M_cur => __new_finish$_M_cur_366

  }
  bb_37 (preds = {bb_53 bb_36 }, succs = {bb_62 })
  {
    <bb 37>:
    # __new_finish$_M_cur_523 = PHI <__new_finish$_M_cur_348(53), __new_finish$_M_cur_366(36)>
    # __new_finish$_M_first_522 = PHI <__new_finish$_M_first_330(53), __new_finish$_M_first_360(36)>
    # __new_finish$_M_last_507 = PHI <prephitmp_377(53), __new_finish$_M_last_361(36)>
    # __new_finish$_M_node_506 = PHI <__new_finish$_M_node_332(53), __new_finish$_M_node_359(36)>

  }
  bb_62 (preds = {bb_37 }, succs = {bb_38 bb_39 })
  {
    <bb 62>:
    # DEBUG __tmp$_M_node => __new_finish$_M_node_506
    # DEBUG __tmp$_M_last => __new_finish$_M_last_507
    # DEBUG __tmp$_M_first => __new_finish$_M_first_522
    # DEBUG __tmp$_M_cur => __new_finish$_M_cur_523
    # DEBUG this => &__new_finish
    # DEBUG __x => NULL
    # DEBUG __new_finish$_M_cur => __new_finish$_M_cur_523
    # DEBUG __new_finish$_M_first => __new_finish$_M_first_522
    # DEBUG __new_finish$_M_last => __new_finish$_M_last_507
    # DEBUG __new_finish$_M_node => __new_finish$_M_node_506
    # .MEM_487 = VDEF <.MEM_446>
    __tmp ={v} {CLOBBER};
    # DEBUG D#691 => &this_3(D)->D.43590
    # DEBUG this => D#691
    # DEBUG D#692 => &this_3(D)->D.43590._M_impl._M_finish
    # DEBUG this => &D.71654
    # DEBUG __x => D#692
    # DEBUG __first$_M_cur => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG __result => &D.71654
    # DEBUG D.71764 => D#603
    # DEBUG this => &D.71768
    # DEBUG __x => &D.71654
    # DEBUG __first$_M_cur => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG __result => &D.71768
    # DEBUG __assignable => 1
    # DEBUG this => NULL
    # DEBUG __x => &D.71768
    # DEBUG __first$_M_cur => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __last$_M_cur => _13
    # DEBUG __last$_M_first => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$_M_node => _74
    # DEBUG __result => NULL
    # DEBUG this => &D.71799
    # DEBUG __x => NULL
    # DEBUG __first => __tmp$_M_cur_477
    # DEBUG __first$8 => __tmp$_M_first_569
    # DEBUG __first$16 => __tmp$_M_last_453
    # DEBUG __first$24 => __tmp$_M_node_16
    # DEBUG __last => _13
    # DEBUG __last$8 => _72
    # DEBUG __last$_M_last => D#1148
    # DEBUG __last$24 => _74
    # DEBUG __result => &D.71799
    # DEBUG this => &D.71819
    # DEBUG __x => &D.71799
    # DEBUG __it => _13
    # DEBUG __it$8 => _72
    # DEBUG D#1131 => MEM[(struct _Deque_iterator *)&__last + 16B]
    # DEBUG __it$16 => D#1131
    # DEBUG __it$24 => _74
    # DEBUG __it$_M_cur => _13
    # DEBUG __it$_M_first => _72
    # DEBUG __it$_M_last => D#1131
    # DEBUG __it$_M_node => _74
    # DEBUG __it => __tmp$_M_cur_477
    # DEBUG __it$8 => __tmp$_M_first_569
    # DEBUG __it$16 => __tmp$_M_last_453
    # DEBUG __it$24 => __tmp$_M_node_16
    # DEBUG __it$_M_cur => __tmp$_M_cur_477
    # DEBUG __it$_M_first => __tmp$_M_first_569
    # DEBUG __it$_M_last => __tmp$_M_last_453
    # DEBUG __it$_M_node => __tmp$_M_node_16
    # DEBUG __result => &D.71819
    # DEBUG this => NULL
    # DEBUG __x => &D.71819
    # DEBUG __it => NULL
    # DEBUG this => NULL
    # DEBUG __x => NULL
    # DEBUG __it => NULL
    # DEBUG this => NULL
    # DEBUG __x => NULL
    # DEBUG __it => _13
    # DEBUG __it$8 => _72
    # DEBUG __it$16 => D#1131
    # DEBUG __it$24 => _74
    # DEBUG __it$_M_cur => _13
    # DEBUG __it$_M_first => _72
    # DEBUG __it$_M_last => D#1131
    # DEBUG __it$_M_node => _74
    # DEBUG __it => __tmp$_M_cur_477
    # DEBUG __it$8 => __tmp$_M_first_569
    # DEBUG __it$16 => __tmp$_M_last_453
    # DEBUG __it$24 => __tmp$_M_node_16
    # DEBUG __it$_M_cur => __tmp$_M_cur_477
    # DEBUG __it$_M_first => __tmp$_M_first_569
    # DEBUG __it$_M_last => __tmp$_M_last_453
    # DEBUG __it$_M_node => __tmp$_M_node_16
    # DEBUG __first => __tmp$_M_cur_477
    # DEBUG __first$8 => __tmp$_M_first_569
    # DEBUG __first$16 => __tmp$_M_last_453
    # DEBUG __first$24 => __tmp$_M_node_16
    # DEBUG __result => NULL
    # DEBUG __simple => 0
    # DEBUG this => &D.71844
    # DEBUG __x => NULL
    # DEBUG __first => __tmp$_M_cur_477
    # DEBUG __first$_M_first => __tmp$_M_first_569
    # DEBUG __first$_M_last => __tmp$_M_last_453
    # DEBUG __first$_M_node => __tmp$_M_node_16
    # DEBUG __result => &D.71844
    # DEBUG __x => &__last
    # DEBUG __y => &__first
    # DEBUG __size => 4
    # DEBUG __n => _173
    # DEBUG __n => _173
    if (_173 <= 0)
      goto <bb 38>;
    else
      goto <bb 39>;

  }
  bb_38 (preds = {bb_62 bb_57 }, succs = {bb_47 })
  {
    <bb 38>:
    # .MEM_638 = PHI <.MEM_487(62), .MEM_468(57)>
    # DEBUG this => &D.71767
    # DEBUG __x => &D.71844
    # .MEM_551 = VDEF <.MEM_638>
    D.71844 ={v} {CLOBBER};
    # .MEM_552 = VDEF <.MEM_551>
    D.71819 ={v} {CLOBBER};
    # .MEM_553 = VDEF <.MEM_552>
    D.71799 ={v} {CLOBBER};
    # .MEM_554 = VDEF <.MEM_553>
    D.71768 ={v} {CLOBBER};
    # .MEM_555 = VDEF <.MEM_554>
    D.71654 ={v} {CLOBBER};
    # .MEM_589 = VDEF <.MEM_555>
    MEM[(struct deque *)this_3(D) + 48B] = __new_finish$_M_cur_523;
    # .MEM_594 = VDEF <.MEM_589>
    MEM[(struct deque *)this_3(D) + 56B] = __new_finish$_M_first_522;
    # .MEM_595 = VDEF <.MEM_594>
    MEM[(struct deque *)this_3(D) + 64B] = __new_finish$_M_last_507;
    # .MEM_596 = VDEF <.MEM_595>
    MEM[(struct deque *)this_3(D) + 72B] = __new_finish$_M_node_506;
    # DEBUG D#1136 => {CLOBBER}
    # DEBUG __new_finish$_M_cur => D#1136
    # DEBUG D#1137 => {CLOBBER}
    # DEBUG __new_finish$_M_first => D#1137
    # DEBUG D#1138 => {CLOBBER}
    # DEBUG __new_finish$_M_last => D#1138
    # DEBUG D#1139 => {CLOBBER}
    # DEBUG __new_finish$_M_node => D#1139
    goto <bb 47>;

  }
  bb_39 (preds = {bb_62 }, succs = {bb_40 })
  {
    <bb 39>:

  }
  bb_45 (preds = {bb_44 }, succs = {bb_57 })
  {
    <bb 45>:
    # .MEM_468 = PHI <.MEM_536(44)>

  }
  bb_57 (preds = {bb_45 }, succs = {bb_38 })
  {
    <bb 57>:
    goto <bb 38>;

  }
  bb_47 (preds = {bb_38 bb_22 }, succs = {bb_48 })
  {
    <bb 47>:
    # .MEM_451 = PHI <.MEM_596(38), .MEM_155(22)>
    # .MEM_650 = VDEF <.MEM_451>
    D.71625 ={v} {CLOBBER};
    # .MEM_15 = VDEF <.MEM_650>
    D.47491 ={v} {CLOBBER};
    # DEBUG D#1144 => {CLOBBER}
    # DEBUG __mid$_M_cur => D#1144
    # DEBUG D#1145 => {CLOBBER}
    # DEBUG __mid$_M_first => D#1145
    # DEBUG D#1146 => {CLOBBER}
    # DEBUG __mid$_M_last => D#1146
    # DEBUG D#1147 => {CLOBBER}
    # DEBUG __mid$_M_node => D#1147

  }
  bb_48 (preds = {bb_2 bb_47 bb_5 }, succs = {bb_60 })
  {
    <bb 48>:
    # .MEM_1 = PHI <.MEM_4(D)(2), .MEM_15(47), .MEM_21(5)>

  }
  bb_60 (preds = {bb_48 }, succs = {bb_1 })
  {
    <bb 60>:
    # VUSE <.MEM_1>
    return this_3(D);

  }
  bb_49 (preds = {bb_10 }, succs = {bb_14 })
  {
    <bb 49>:
    _132 = _65 * 4;
    __tmp$_M_cur_133 = SR.1978_37 + _132;
    # DEBUG __tmp$_M_cur => __tmp$_M_cur_133
    goto <bb 14>;

  }
  bb_50 (preds = {bb_10 }, succs = {bb_11 bb_12 })
  {
    <bb 50>:
    if (__offset_129 > 0)
      goto <bb 11>;
    else
      goto <bb 12>;

  }
  bb_51 (preds = {bb_58 }, succs = {bb_21 })
  {
    <bb 51>:
    _207 = -_173;
    __n.116_221 = (long unsigned int) _207;
    _222 = __n.116_221 * 4;
    __new_start$_M_cur_223 = prephitmp_404 + _222;
    # DEBUG __tmp$_M_cur => __new_start$_M_cur_223
    goto <bb 21>;

  }
  bb_52 (preds = {bb_58 }, succs = {bb_18 bb_19 })
  {
    <bb 52>:
    if (__offset_219 > 0)
      goto <bb 18>;
    else
      goto <bb 19>;

  }
  bb_53 (preds = {bb_59 }, succs = {bb_37 })
  {
    <bb 53>:
    _347 = __n_174 * 4;
    __new_finish$_M_cur_348 = prephitmp_510 + _347;
    # DEBUG __tmp$_M_cur => __new_finish$_M_cur_348
    goto <bb 37>;

  }
  bb_54 (preds = {bb_59 }, succs = {bb_34 bb_35 })
  {
    <bb 54>:
    if (__offset_344 > 0)
      goto <bb 34>;
    else
      goto <bb 35>;

  }
  loop_1 (header = 7, latch = 9, niter = (((unsigned long) _114 - (unsigned long) _115) + 18446744073709551615) / 8, upper_bound = 2305843009213693950)
  {
    bb_7 (preds = {bb_6 bb_9 }, succs = {bb_8 bb_9 })
    {
      <bb 7>:
      # __nstart_100 = PHI <__nstart_117(6), __nstart_120(9)>
      # .MEM_465 = PHI <.MEM_18(6), .MEM_651(9)>
      # DEBUG __n => __nstart_100
      # VUSE <.MEM_465>
      _119 = *__nstart_100;
      # DEBUG this => D#486
      # DEBUG __p => _119
      # DEBUG __size => 4
      # DEBUG D#167 => &D#486->_M_impl
      # DEBUG D#144 => D#167
      # DEBUG __p => _119
      # DEBUG __a => D#144
      # DEBUG __n => D#145
      # DEBUG D#143 => D#145
      # DEBUG D#142 => D#144
      # DEBUG D#140 => D#142
      # DEBUG D#141 => D#143
      # DEBUG __p => _119
      # DEBUG this => D#140
      # DEBUG D.71609 => D#141
      # .MEM_651 = VDEF <.MEM_465>
      operator delete (_119);
      __nstart_120 = __nstart_100 + 8;
      # DEBUG __n => __nstart_120
      # DEBUG __n => __nstart_120
      if (_116 <= __nstart_120)
        goto <bb 8>;
      else
        goto <bb 9>;

    }
    bb_9 (preds = {bb_7 }, succs = {bb_7 })
    {
      <bb 9>:
      goto <bb 7>;

    }
  }
  loop_2 (header = 24, latch = 30, niter = (unsigned long) ((_Distance) _173 + -1), upper_bound = 9223372036854775806)
  {
    bb_24 (preds = {bb_23 bb_30 }, succs = {bb_25 bb_26 })
    {
      <bb 24>:
      # __n_71 = PHI <_173(23), __n_301(30)>
      # .MEM_467 = PHI <.MEM_579(23), .MEM_628(30)>
      # SR.2061_543 = PHI <__new_start$_M_cur_557(23), SR.2061_542(30)>
      # SR.2062_541 = PHI <__new_start$_M_last_546(23), SR.2062_540(30)>
      # SR.2063_538 = PHI <__new_start$_M_node_545(23), SR.2063_537(30)>
      # __mid$_M_cur_534 = PHI <__tmp$_M_cur_477(23), __mid$_M_cur_533(30)>
      # __mid$_M_last_532 = PHI <__tmp$_M_last_453(23), __mid$_M_last_530(30)>
      # __mid$_M_node_525 = PHI <__tmp$_M_node_16(23), __mid$_M_node_524(30)>
      # DEBUG __first$_M_node => __mid$_M_node_525
      # DEBUG __first$_M_last => __mid$_M_last_532
      # DEBUG __first => __mid$_M_cur_534
      # DEBUG __n => __n_71
      # DEBUG D#100 => &D.71741
      # DEBUG this => D#100
      # DEBUG D#91 => &__first
      # DEBUG this => D#91
      # VUSE <.MEM_467>
      _295 = MEM[(const int &)__mid$_M_cur_534];
      # .MEM_628 = VDEF <.MEM_467>
      *SR.2061_543 = _295;
      # DEBUG this => &__first
      __mid$_M_cur_296 = __mid$_M_cur_534 + 4;
      # DEBUG __first => __mid$_M_cur_296
      if (__mid$_M_cur_296 == __mid$_M_last_532)
        goto <bb 25>;
      else
        goto <bb 26>;

    }
    bb_25 (preds = {bb_24 }, succs = {bb_26 })
    {
      <bb 25>:
      # DEBUG this => &__first
      __mid$_M_node_307 = __mid$_M_node_525 + 8;
      # DEBUG this => &__first
      # DEBUG __new_node => __mid$_M_node_307
      # DEBUG __first$_M_node => __mid$_M_node_307
      # VUSE <.MEM_628>
      __mid$_M_cur_308 = MEM[(int * *)__mid$_M_node_525 + 8B];
      # DEBUG __size => 4
      __mid$_M_last_309 = __mid$_M_cur_308 + 512;
      # DEBUG __first$_M_last => __mid$_M_last_309
      # DEBUG __first => __mid$_M_cur_308

    }
    bb_26 (preds = {bb_24 bb_25 }, succs = {bb_27 bb_28 })
    {
      <bb 26>:
      # __mid$_M_cur_533 = PHI <__mid$_M_cur_296(24), __mid$_M_cur_308(25)>
      # __mid$_M_last_530 = PHI <__mid$_M_last_532(24), __mid$_M_last_309(25)>
      # __mid$_M_node_524 = PHI <__mid$_M_node_525(24), __mid$_M_node_307(25)>
      # DEBUG __first$_M_node => __mid$_M_node_524
      # DEBUG __first$_M_last => __mid$_M_last_530
      # DEBUG __first => __mid$_M_cur_533
      # DEBUG this => &D.71741
      _299 = SR.2061_543 + 4;
      if (_299 == SR.2062_541)
        goto <bb 27>;
      else
        goto <bb 28>;

    }
    bb_27 (preds = {bb_26 }, succs = {bb_28 })
    {
      <bb 27>:
      # DEBUG this => &D.71741
      _311 = SR.2063_538 + 8;
      # DEBUG this => &D.71741
      # DEBUG __new_node => _311
      # VUSE <.MEM_628>
      _312 = MEM[(int * *)SR.2063_538 + 8B];
      # DEBUG __size => 4
      _313 = _312 + 512;

    }
    bb_28 (preds = {bb_26 bb_27 }, succs = {bb_29 bb_30 })
    {
      <bb 28>:
      # SR.2061_542 = PHI <_299(26), _312(27)>
      # SR.2062_540 = PHI <SR.2062_541(26), _313(27)>
      # SR.2063_537 = PHI <SR.2063_538(26), _311(27)>
      __n_301 = __n_71 + -1;
      # DEBUG __n => __n_301
      # DEBUG __n => __n_301
      if (__n_301 <= 0)
        goto <bb 29>;
      else
        goto <bb 30>;

    }
    bb_30 (preds = {bb_28 }, succs = {bb_24 })
    {
      <bb 30>:
      goto <bb 24>;

    }
  }
  loop_3 (header = 40, latch = 46, niter = (unsigned long) ((_Distance) _173 + -1), upper_bound = 9223372036854775806)
  {
    bb_40 (preds = {bb_39 bb_46 }, succs = {bb_41 bb_42 })
    {
      <bb 40>:
      # __n_101 = PHI <_173(39), __n_426(46)>
      # .MEM_471 = PHI <.MEM_487(39), .MEM_536(46)>
      # SR.2106_501 = PHI <prephitmp_510(39), SR.2106_500(46)>
      # SR.2107_499 = PHI <prephitmp_377(39), SR.2107_498(46)>
      # SR.2108_493 = PHI <__new_finish$_M_node_332(39), SR.2108_492(46)>
      # __mid$_M_cur_486 = PHI <__tmp$_M_cur_477(39), __mid$_M_cur_485(46)>
      # __mid$_M_last_484 = PHI <__tmp$_M_last_453(39), __mid$_M_last_483(46)>
      # __mid$_M_node_481 = PHI <__tmp$_M_node_16(39), __mid$_M_node_480(46)>
      # DEBUG __first$_M_node => __mid$_M_node_481
      # DEBUG __first$_M_last => __mid$_M_last_484
      # DEBUG __first => __mid$_M_cur_486
      # DEBUG __n => __n_101
      # DEBUG D#100 => &D.71844
      # DEBUG this => D#100
      # DEBUG D#91 => &__first
      # DEBUG this => D#91
      # VUSE <.MEM_471>
      _420 = MEM[(const int &)__mid$_M_cur_486];
      # .MEM_536 = VDEF <.MEM_471>
      *SR.2106_501 = _420;
      # DEBUG this => &__first
      __mid$_M_cur_421 = __mid$_M_cur_486 + 4;
      # DEBUG __first => __mid$_M_cur_421
      if (__mid$_M_cur_421 == __mid$_M_last_484)
        goto <bb 41>;
      else
        goto <bb 42>;

    }
    bb_41 (preds = {bb_40 }, succs = {bb_42 })
    {
      <bb 41>:
      # DEBUG this => &__first
      __mid$_M_node_432 = __mid$_M_node_481 + 8;
      # DEBUG this => &__first
      # DEBUG __new_node => __mid$_M_node_432
      # DEBUG __first$_M_node => __mid$_M_node_432
      # VUSE <.MEM_536>
      __mid$_M_cur_433 = MEM[(int * *)__mid$_M_node_481 + 8B];
      # DEBUG __size => 4
      __mid$_M_last_434 = __mid$_M_cur_433 + 512;
      # DEBUG __first$_M_last => __mid$_M_last_434
      # DEBUG __first => __mid$_M_cur_433

    }
    bb_42 (preds = {bb_40 bb_41 }, succs = {bb_43 bb_44 })
    {
      <bb 42>:
      # __mid$_M_cur_485 = PHI <__mid$_M_cur_421(40), __mid$_M_cur_433(41)>
      # __mid$_M_last_483 = PHI <__mid$_M_last_484(40), __mid$_M_last_434(41)>
      # __mid$_M_node_480 = PHI <__mid$_M_node_481(40), __mid$_M_node_432(41)>
      # DEBUG __first$_M_node => __mid$_M_node_480
      # DEBUG __first$_M_last => __mid$_M_last_483
      # DEBUG __first => __mid$_M_cur_485
      # DEBUG this => &D.71844
      _424 = SR.2106_501 + 4;
      if (_424 == SR.2107_499)
        goto <bb 43>;
      else
        goto <bb 44>;

    }
    bb_43 (preds = {bb_42 }, succs = {bb_44 })
    {
      <bb 43>:
      # DEBUG this => &D.71844
      _436 = SR.2108_493 + 8;
      # DEBUG this => &D.71844
      # DEBUG __new_node => _436
      # VUSE <.MEM_536>
      _437 = MEM[(int * *)SR.2108_493 + 8B];
      # DEBUG __size => 4
      _438 = _437 + 512;

    }
    bb_44 (preds = {bb_42 bb_43 }, succs = {bb_45 bb_46 })
    {
      <bb 44>:
      # SR.2106_500 = PHI <_424(42), _437(43)>
      # SR.2107_498 = PHI <SR.2107_499(42), _438(43)>
      # SR.2108_492 = PHI <SR.2108_493(42), _436(43)>
      __n_426 = __n_101 + -1;
      # DEBUG __n => __n_426
      # DEBUG __n => __n_426
      if (__n_426 <= 0)
        goto <bb 45>;
      else
        goto <bb 46>;

    }
    bb_46 (preds = {bb_44 }, succs = {bb_40 })
    {
      <bb 46>:
      goto <bb 40>;

    }
  }
}

Pass statistics:
----------------

std::deque<_Tp, _Alloc>& std::deque<_Tp, _Alloc>::operator=(const std::deque<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>] (struct dequeD.40449 * const thisD.43170, const struct dequeD.40449 & __xD.43171)
{
  intD.9 * * __first$_M_nodeD.72006;
  intD.9 * __first$_M_lastD.72005;
  intD.9 * const __firstD.72003;
  intD.9 * * SR.2108D.72002;
  intD.9 * SR.2107D.72001;
  intD.9 * SR.2106D.72000;
  intD.9 * * __first$24D.71999;
  intD.9 * __first$16D.71998;
  intD.9 * __first$8D.71997;
  intD.9 * __firstD.71996;
  intD.9 * * __last$24D.71995;
  intD.9 * __last$8D.71993;
  intD.9 * __lastD.71992;
  intD.9 * * __first$24D.71991;
  intD.9 * __first$16D.71990;
  intD.9 * __first$8D.71989;
  intD.9 * __firstD.71988;
  intD.9 * * __first$_M_nodeD.71987;
  intD.9 * __first$_M_lastD.71986;
  intD.9 * __first$_M_firstD.71985;
  intD.9 * __first$_M_curD.71984;
  intD.9 * * __last$_M_nodeD.71983;
  intD.9 * __last$_M_lastD.71982;
  intD.9 * __last$_M_firstD.71981;
  intD.9 * __last$_M_curD.71980;
  intD.9 * * __last$_M_nodeD.71979;
  intD.9 * __last$_M_lastD.71978;
  intD.9 * __last$_M_firstD.71977;
  intD.9 * __last$_M_curD.71976;
  intD.9 * * __first$_M_nodeD.71975;
  intD.9 * __first$_M_lastD.71974;
  intD.9 * __first$_M_firstD.71973;
  intD.9 * __first$_M_curD.71972;
  intD.9 * * __tmp$_M_nodeD.71971;
  intD.9 * __tmp$_M_lastD.71970;
  intD.9 * __tmp$_M_firstD.71969;
  intD.9 * __tmp$_M_curD.71968;
  intD.9 * * __last$_M_nodeD.71967;
  intD.9 * __last$_M_lastD.71966;
  intD.9 * __last$_M_firstD.71965;
  intD.9 * __last$_M_curD.71964;
  intD.9 * * __first$_M_nodeD.71963;
  intD.9 * __first$_M_lastD.71962;
  intD.9 * __first$_M_firstD.71961;
  intD.9 * __first$_M_curD.71960;
  intD.9 * * __first$_M_nodeD.71959;
  intD.9 * __first$_M_lastD.71958;
  intD.9 * const __firstD.71956;
  intD.9 * * SR.2063D.71955;
  intD.9 * SR.2062D.71954;
  intD.9 * SR.2061D.71953;
  intD.9 * * __first$24D.71952;
  intD.9 * __first$16D.71951;
  intD.9 * __first$8D.71950;
  intD.9 * __firstD.71949;
  intD.9 * * __last$24D.71948;
  intD.9 * __last$8D.71946;
  intD.9 * __lastD.71945;
  intD.9 * * __first$24D.71944;
  intD.9 * __first$16D.71943;
  intD.9 * __first$8D.71942;
  intD.9 * __firstD.71941;
  intD.9 * * __first$_M_nodeD.71940;
  intD.9 * __first$_M_lastD.71939;
  intD.9 * __first$_M_firstD.71938;
  intD.9 * __first$_M_curD.71937;
  intD.9 * * __last$_M_nodeD.71936;
  intD.9 * __last$_M_lastD.71935;
  intD.9 * __last$_M_firstD.71934;
  intD.9 * __last$_M_curD.71933;
  intD.9 * * __last$_M_nodeD.71932;
  intD.9 * __last$_M_lastD.71931;
  intD.9 * __last$_M_firstD.71930;
  intD.9 * __last$_M_curD.71929;
  intD.9 * * __first$_M_nodeD.71928;
  intD.9 * __first$_M_lastD.71927;
  intD.9 * __first$_M_firstD.71926;
  intD.9 * __first$_M_curD.71925;
  intD.9 * * __tmp$_M_nodeD.71924;
  intD.9 * __tmp$_M_lastD.71923;
  intD.9 * __tmp$_M_firstD.71922;
  intD.9 * __tmp$_M_curD.71921;
  intD.9 * * __last$_M_nodeD.71920;
  intD.9 * __last$_M_lastD.71919;
  intD.9 * __last$_M_firstD.71918;
  intD.9 * __last$_M_curD.71917;
  intD.9 * * __first$_M_nodeD.71916;
  intD.9 * __first$_M_lastD.71915;
  intD.9 * __first$_M_firstD.71914;
  intD.9 * __first$_M_curD.71913;
  intD.9 * * __new_finish$_M_nodeD.71912;
  intD.9 * __new_finish$_M_lastD.71911;
  intD.9 * __new_finish$_M_firstD.71910;
  intD.9 * __new_finish$_M_curD.71909;
  intD.9 * * __new_start$_M_nodeD.71908;
  intD.9 * __new_start$_M_lastD.71907;
  intD.9 * __new_start$_M_firstD.71906;
  intD.9 * __new_start$_M_curD.71905;
  intD.9 * * __last$_M_nodeD.71904;
  intD.9 * __last$_M_lastD.71903;
  intD.9 * __last$_M_firstD.71902;
  intD.9 * __last$_M_curD.71901;
  intD.9 * * __first$_M_nodeD.71900;
  intD.9 * const __first$16D.71899;
  intD.9 * __first$_M_firstD.71898;
  intD.9 * const __firstD.71897;
  intD.9 * * __tmp$_M_nodeD.71896;
  intD.9 * __tmp$_M_lastD.71895;
  intD.9 * __tmp$_M_firstD.71894;
  intD.9 * __tmp$_M_curD.71893;
  intD.9 * * __first$_M_nodeD.71892;
  intD.9 * __first$_M_lastD.71891;
  intD.9 * __first$_M_firstD.71890;
  intD.9 * __first$_M_curD.71889;
  intD.9 * * __last$_M_nodeD.71888;
  intD.9 * __last$_M_lastD.71887;
  intD.9 * __last$_M_firstD.71886;
  intD.9 * __last$_M_curD.71885;
  intD.9 * * __last$_M_nodeD.71884;
  intD.9 * __last$_M_lastD.71883;
  intD.9 * __last$_M_firstD.71882;
  intD.9 * __last$_M_curD.71881;
  intD.9 * * __first$_M_nodeD.71880;
  intD.9 * __first$_M_lastD.71879;
  intD.9 * __first$_M_firstD.71878;
  intD.9 * __first$_M_curD.71877;
  intD.9 * * SR.1985D.71876;
  intD.9 * SR.1984D.71875;
  intD.9 * SR.1983D.71874;
  intD.9 * SR.1982D.71873;
  intD.9 * * SR.1981D.71872;
  intD.9 * SR.1980D.71871;
  intD.9 * SR.1979D.71870;
  intD.9 * SR.1978D.71869;
  intD.9 * * __mid$_M_nodeD.71868;
  intD.9 * __mid$_M_lastD.71867;
  intD.9 * __mid$_M_firstD.71866;
  intD.9 * __mid$_M_curD.71865;
  _DistanceD.47812 __nD.71851;
  struct _Deque_iteratorD.42910 __firstD.71845;
  struct _Deque_iteratorD.42910 __lastD.71846;
  struct _Deque_iteratorD.42910 __lastD.71826;
  struct _Deque_iteratorD.42910 __firstD.71827;
  struct _Deque_iteratorD.42908 D.71844;
  intD.9 * __itD.71843;
  intD.9 * __it$8D.71842;
  intD.9 * __it$16D.71841;
  intD.9 * * __it$24D.71839;
  intD.9 * __itD.71838;
  intD.9 * __it$8D.71837;
  intD.9 * __it$16D.71836;
  intD.9 * * __it$24D.71834;
  struct _Deque_iteratorD.42910 __firstD.71820;
  struct _Deque_iteratorD.42910 __lastD.71821;
  struct _Deque_iteratorD.42908 D.71819;
  struct _Deque_iteratorD.42910 D.71818;
  struct _Deque_iteratorD.42910 D.71817;
  intD.9 * __itD.71816;
  intD.9 * __it$8D.71815;
  intD.9 * __it$16D.71814;
  intD.9 * * __it$24D.71813;
  intD.9 * __itD.71812;
  intD.9 * __it$8D.71811;
  intD.9 * __it$16D.71810;
  intD.9 * * __it$24D.71809;
  struct _Deque_iteratorD.42910 __firstD.71800;
  struct _Deque_iteratorD.42910 __lastD.71801;
  struct _Deque_iteratorD.42910 __lastD.71795;
  struct _Deque_iteratorD.42910 __firstD.71796;
  struct _Deque_iteratorD.42908 D.71799;
  struct _Deque_iteratorD.42910 __firstD.71786;
  struct _Deque_iteratorD.42910 __lastD.71787;
  const difference_typeD.42938 __offsetD.71781;
  struct _SelfD.42939 & D.71785;
  struct _SelfD.42939 __tmpD.71774;
  const size_typeD.43117 __vacanciesD.71771;
  struct _Deque_iteratorD.42908 D.71768;
  struct _Deque_iteratorD.42908 D.71767;
  struct _Deque_iteratorD.42910 __firstD.71761;
  struct _Deque_iteratorD.42910 __lastD.71762;
  _DistanceD.47812 __nD.71748;
  struct _Deque_iteratorD.42910 __firstD.71742;
  struct _Deque_iteratorD.42910 __lastD.71743;
  struct _Deque_iteratorD.42910 __lastD.71723;
  struct _Deque_iteratorD.42910 __firstD.71724;
  struct _Deque_iteratorD.42908 D.71741;
  intD.9 * __itD.71740;
  intD.9 * __it$8D.71739;
  intD.9 * __it$16D.71738;
  intD.9 * * __it$24D.71736;
  intD.9 * __itD.71735;
  intD.9 * __it$8D.71734;
  intD.9 * __it$16D.71733;
  intD.9 * * __it$24D.71731;
  struct _Deque_iteratorD.42910 __firstD.71717;
  struct _Deque_iteratorD.42910 __lastD.71718;
  struct _Deque_iteratorD.42908 D.71716;
  struct _Deque_iteratorD.42910 D.71715;
  struct _Deque_iteratorD.42910 D.71714;
  intD.9 * __itD.71713;
  intD.9 * __it$8D.71712;
  intD.9 * __it$16D.71711;
  intD.9 * * __it$24D.71710;
  intD.9 * __itD.71709;
  intD.9 * __it$8D.71708;
  intD.9 * __it$16D.71707;
  intD.9 * * __it$24D.71706;
  struct _Deque_iteratorD.42910 __firstD.71697;
  struct _Deque_iteratorD.42910 __lastD.71698;
  struct _Deque_iteratorD.42910 __lastD.71692;
  struct _Deque_iteratorD.42910 __firstD.71693;
  struct _Deque_iteratorD.42908 D.71696;
  struct _Deque_iteratorD.42910 __firstD.71683;
  struct _Deque_iteratorD.42910 __lastD.71684;
  const difference_typeD.42938 __offsetD.71678;
  struct _SelfD.42939 & D.71682;
  struct _SelfD.42939 __tmpD.71669;
  const size_typeD.43117 __vacanciesD.71666;
  struct _Deque_iteratorD.42908 D.71663;
  struct _Deque_iteratorD.42908 D.71662;
  struct _Deque_iteratorD.42910 __firstD.71656;
  struct _Deque_iteratorD.42910 __lastD.71657;
  struct _Deque_iteratorD.42908 D.71655;
  struct _Deque_iteratorD.42908 D.71654;
  struct iteratorD.43111 D.71653;
  const size_typeD.43117 __nD.71642;
  struct iteratorD.43111 __new_startD.71645;
  struct iteratorD.43111 __new_finishD.71650;
  struct _Deque_iteratorD.42910 __firstD.71639;
  struct _Deque_iteratorD.42910 __lastD.71640;
  struct forward_iterator_tagD.4673 D.71641;
  const difference_typeD.44735 __offsetD.71632;
  struct _SelfD.44736 & D.71636;
  struct _SelfD.44736 __tmpD.71629;
  struct _Deque_iteratorD.42910 __lastD.71618;
  struct _Deque_iteratorD.42910 __firstD.71619;
  struct forward_iterator_tagD.4673 D.71626;
  struct iteratorD.43111 D.71625;
  struct _Deque_iteratorD.42910 __firstD.71613;
  struct _Deque_iteratorD.42910 __lastD.71614;
  intD.9 * * __nstartD.71599;
  struct const_iteratorD.43112 __midD.47478;
  struct iteratorD.43111 D.47491;
  struct _Deque_iteratorD.42910 D.50409;
  struct _Deque_iteratorD.42910 D.50408;
  struct _Deque_iteratorD.42908 D.47483;
  struct const_iteratorD.43112 D.47479;
  struct _Deque_iteratorD.42910 D.50405;
  struct _Deque_iteratorD.42910 D.50404;
  struct _Deque_iteratorD.42908 D.47476;
  struct _Deque_iteratorD.42908 D.47477;
  long intD.12 _5;
  intD.9 * * _6;
  intD.9 * _13;
  intD.9 * _17;
  long intD.12 _23;
  long intD.12 _24;
  long intD.12 _25;
  long intD.12 _26;
  long intD.12 _27;
  intD.9 * _28;
  long intD.12 _29;
  intD.9 * _30;
  long intD.12 _31;
  long intD.12 _32;
  long intD.12 _33;
  long intD.12 _34;
  long intD.12 _36;
  long intD.12 _38;
  long intD.12 _39;
  long intD.12 _40;
  difference_typeD.42938 _41;
  size_typeD.43117 _42;
  intD.9 * * _43;
  long intD.12 _44;
  intD.9 * * _45;
  long intD.12 _46;
  long intD.12 _47;
  long intD.12 _48;
  long intD.12 _49;
  long intD.12 _50;
  intD.9 * _51;
  long intD.12 _52;
  intD.9 * _53;
  long intD.12 _54;
  long intD.12 _55;
  long intD.12 _56;
  long intD.12 _57;
  intD.9 * _58;
  long intD.12 _59;
  intD.9 * _60;
  long intD.12 _61;
  long intD.12 _62;
  long intD.12 _63;
  difference_typeD.42938 _64;
  size_typeD.43117 _65;
  intD.9 * _66;
  intD.9 * _67;
  intD.9 * _68;
  intD.9 * _70;
  intD.9 * _72;
  intD.9 * * _74;
  intD.9 * _78;
  intD.9 * * _114;
  intD.9 * * _115;
  intD.9 * * _116;
  intD.9 * _119;
  long intD.12 _126;
  long intD.12 _127;
  long intD.12 _128;
  long unsigned intD.14 _132;
  long intD.12 iftmp.107_134;
  long unsigned intD.14 _136;
  long unsigned intD.14 _137;
  long intD.12 _138;
  long intD.12 iftmp.107_139;
  long intD.12 iftmp.107_141;
  long unsigned intD.14 __node_offset.109_142;
  long unsigned intD.14 _143;
  long intD.12 _147;
  long intD.12 _148;
  long unsigned intD.14 _149;
  long unsigned intD.14 _150;
  long intD.12 _158;
  long intD.12 _160;
  long intD.12 _161;
  long intD.12 _162;
  long intD.12 _163;
  long intD.12 _164;
  long intD.12 _165;
  long intD.12 _166;
  long intD.12 _167;
  long intD.12 _168;
  long intD.12 _170;
  long intD.12 _171;
  long intD.12 _172;
  difference_typeD.44735 _173;
  intD.9 * _176;
  long intD.12 _194;
  intD.9 * _195;
  long intD.12 _196;
  long intD.12 _197;
  long intD.12 _198;
  long unsigned intD.14 _200;
  long intD.12 _207;
  long intD.12 _214;
  long intD.12 _217;
  long intD.12 _218;
  long unsigned intD.14 __n.116_221;
  long unsigned intD.14 _222;
  long intD.12 iftmp.117_224;
  long unsigned intD.14 _226;
  long unsigned intD.14 _227;
  long intD.12 _228;
  long intD.12 iftmp.117_229;
  long intD.12 iftmp.117_231;
  long unsigned intD.14 __node_offset.119_232;
  long unsigned intD.14 _233;
  long intD.12 _237;
  long intD.12 _238;
  long unsigned intD.14 _239;
  long unsigned intD.14 _240;
  intD.9 _295;
  intD.9 * _299;
  intD.9 * * _311;
  intD.9 * _312;
  intD.9 * _313;
  long intD.12 _319;
  long intD.12 _321;
  long intD.12 _322;
  long intD.12 _323;
  long intD.12 _324;
  long unsigned intD.14 _326;
  long intD.12 _341;
  long intD.12 _342;
  long intD.12 _343;
  long unsigned intD.14 _347;
  long intD.12 iftmp.117_349;
  long unsigned intD.14 _351;
  long unsigned intD.14 _352;
  long intD.12 _353;
  long intD.12 iftmp.117_354;
  long intD.12 iftmp.117_356;
  long unsigned intD.14 __node_offset.119_357;
  long unsigned intD.14 _358;
  long intD.12 _362;
  long intD.12 _363;
  long unsigned intD.14 _364;
  long unsigned intD.14 _365;
  unsigned long _369;
  unsigned long _370;
  unsigned long _372;
  intD.9 * const prephitmp_377;
  intD.9 * const pretmp_402;
  intD.9 * const prephitmp_404;
  intD.9 * const pretmp_406;
  intD.9 * const prephitmp_407;
  long intD.12 pretmp_408;
  long intD.12 prephitmp_409;
  intD.9 _420;
  intD.9 * _424;
  intD.9 * * _436;
  intD.9 * _437;
  intD.9 * _438;
  long intD.12 pretmp_503;
  long intD.12 prephitmp_504;
  long intD.12 pretmp_505;
  long intD.12 prephitmp_508;
  intD.9 * const pretmp_509;
  intD.9 * const prephitmp_510;
  intD.9 * const pretmp_511;
  long intD.12 pretmp_512;
  long intD.12 prephitmp_513;

;;   basic block 2, loop depth 0, count 0, freq 2568, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  if (__x_2(D) != this_3(D))
    goto <bb 3>;
  else
    goto <bb 48>;
;;    succ:       3 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 2308, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.61649 => this_3(D)
  # DEBUG D#174ptD.0 => &MEM[(const struct dequeD.40449 *)this_3(D)].D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &MEM[(const struct dequeD.40449 *)this_3(D)].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61651 => D#175ptD.0
  # DEBUG __yD.61650 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _43 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 48]._M_nodeD.42943;
  _44 = (long intD.12) _43;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _45 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 16]._M_nodeD.42943;
  _46 = (long intD.12) _45;
  _47 = _44 - _46;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _48 = _47 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _49 = _48 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _50 = _49 * 128;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _51 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 48]._M_curD.42940;
  _52 = (long intD.12) _51;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _53 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 48]._M_firstD.42941;
  _54 = (long intD.12) _53;
  _55 = _52 - _54;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _56 = _55 /[ex] 4;
  _57 = _50 + _56;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _58 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 16]._M_lastD.42942;
  _59 = (long intD.12) _58;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _60 = MEM[(const struct _Deque_iteratorD.42908 &)this_3(D) + 16]._M_curD.42940;
  _61 = (long intD.12) _60;
  _62 = _59 - _61;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _63 = _62 /[ex] 4;
  _64 = _57 + _63;
  # RANGE [0, 18446744073709551615]
  _65 = (size_typeD.43117) _64;
  # DEBUG __lenD.47469 => _65
  # DEBUG thisD.61645 => __x_2(D)
  # DEBUG D#174ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.61647 => D#175ptD.0
  # DEBUG __yD.61646 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _6 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 48]._M_nodeD.42943;
  _5 = (long intD.12) _6;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  SR.1981_22 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 16]._M_nodeD.42943;
  _23 = (long intD.12) SR.1981_22;
  _24 = _5 - _23;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _25 = _24 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _26 = _25 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _27 = _26 * 128;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _28 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 48]._M_curD.42940;
  _29 = (long intD.12) _28;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  _30 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 48]._M_firstD.42941;
  _31 = (long intD.12) _30;
  _32 = _29 - _31;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _33 = _32 /[ex] 4;
  _34 = _27 + _33;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  SR.1980_35 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 16]._M_lastD.42942;
  _36 = (long intD.12) SR.1980_35;
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  SR.1978_37 = MEM[(const struct _Deque_iteratorD.42908 &)__x_2(D) + 16]._M_curD.42940;
  _38 = (long intD.12) SR.1978_37;
  _39 = _36 - _38;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _40 = _39 /[ex] 4;
  _41 = _34 + _40;
  # RANGE [0, 18446744073709551615]
  _42 = (size_typeD.43117) _41;
  if (_42 <= _65)
    goto <bb 4>;
  else
    goto <bb 10>;
;;    succ:       4 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                10 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#696ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61659 => &D.47476
  # DEBUG __xD.61660 => D#696ptD.0
  # .MEM_102 = VDEF <.MEM_4(D)>
  D.47476._M_curD.42940 = _60;
  # VUSE <.MEM_102>
  # PT = nonlocal escaped 
  _68 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_firstD.42941;
  # .MEM_103 = VDEF <.MEM_102>
  D.47476._M_firstD.42941 = _68;
  # .MEM_104 = VDEF <.MEM_103>
  D.47476._M_lastD.42942 = _58;
  # .MEM_105 = VDEF <.MEM_104>
  D.47476._M_nodeD.42943 = _45;
  # DEBUG thisD.61656 => __x_2(D)
  # DEBUG D#83ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61658 => &D.50404
  # DEBUG __xD.61657 => D#83ptD.0
  # .MEM_106 = VDEF <.MEM_105>
  D.50404._M_curD.44737 = _28;
  # .MEM_107 = VDEF <.MEM_106>
  D.50404._M_firstD.44738 = _30;
  # VUSE <.MEM_107>
  # PT = nonlocal escaped 
  _67 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_lastD.42942;
  # .MEM_108 = VDEF <.MEM_107>
  D.50404._M_lastD.44739 = _67;
  # .MEM_109 = VDEF <.MEM_108>
  D.50404._M_nodeD.44740 = _6;
  # DEBUG thisD.61653 => __x_2(D)
  # DEBUG D#84ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61655 => &D.50405
  # DEBUG __xD.61654 => D#84ptD.0
  # .MEM_110 = VDEF <.MEM_109>
  D.50405._M_curD.44737 = SR.1978_37;
  # VUSE <.MEM_110>
  # PT = nonlocal escaped 
  _66 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 16]._M_firstD.42941;
  # .MEM_111 = VDEF <.MEM_110>
  D.50405._M_firstD.44738 = _66;
  # .MEM_112 = VDEF <.MEM_111>
  D.50405._M_lastD.44739 = SR.1980_35;
  # .MEM_113 = VDEF <.MEM_112>
  D.50405._M_nodeD.44740 = SR.1981_22;
  # .MEM_18 = VDEF <.MEM_113>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  D.47477 = _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (D.50405, D.50404, &D.47476); [return slot optimization]
  # DEBUG thisD.71591 => this_3(D)
  # DEBUG __posD.71592 => &D.47477
  # DEBUG D#485ptD.0 => &this_3(D)->D.43590
  # DEBUG thisD.58023 => D#485ptD.0
  # DEBUG thisD.71593 => this_3(D)
  # DEBUG D#66ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.71595 => NULL
  # DEBUG __xD.71594 => D#66ptD.0
  # DEBUG D#492ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_curD.42940
  # DEBUG D.58025 => D#492ptD.0
  # DEBUG D#491ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_firstD.42941
  # DEBUG D.58026 => D#491ptD.0
  # DEBUG D#490ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_lastD.42942
  # DEBUG D.58027 => D#490ptD.0
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _114 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_nodeD.42943;
  # DEBUG D.58028 => _114
  # DEBUG thisD.71597 => NULL
  # DEBUG __xD.71596 => &D.47477
  # DEBUG D#489ptD.0 => MEM[(const struct iteratorD.42928 &)&D.47477 clique 2 base 1]._M_curD.42940
  # DEBUG D.58029 => D#489ptD.0
  # DEBUG D#488ptD.0 => MEM[(const struct iteratorD.42928 &)&D.47477 clique 2 base 1]._M_firstD.42941
  # DEBUG D.58030 => D#488ptD.0
  # DEBUG D#487ptD.0 => MEM[(const struct iteratorD.42928 &)&D.47477 clique 2 base 1]._M_lastD.42942
  # DEBUG D.58031 => D#487ptD.0
  # VUSE <.MEM_18>
  # PT = nonlocal escaped 
  _115 = MEM[(const struct iteratorD.42928 &)&D.47477 clique 1 base 1]._M_nodeD.42943;
  # DEBUG D.58032 => _115
  # DEBUG D#68ptD.0 => this_3(D)
  # DEBUG thisD.58017 => D#68ptD.0
  # DEBUG __firstD.58016 => D#69ptD.0
  # DEBUG __lastD.58015 => D#70ptD.0
  # DEBUG D.58014 => D#71ptD.0
  # PT = nonlocal escaped 
  _116 = _114 + 8;
  # PT = nonlocal escaped 
  __nstart_117 = _115 + 8;
  # DEBUG D#486ptD.0 => &this_3(D)->D.43590
  # DEBUG thisD.71600 => D#486ptD.0
  # DEBUG __nstartD.71599 => __nstart_117
  # DEBUG __nfinishD.71598 => _116
  # DEBUG __nD.71601 => __nstart_117
  if (_116 <= __nstart_117)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                55 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_649 = PHI <.MEM_18(4), .MEM_626(55)>
  # .MEM_652 = VDEF <.MEM_649>
  this_3(D)->D.43590._M_implD.43041._M_finishD.43046 = MEM[(const struct _Deque_iteratorD.42908 &)&D.47477 clique 1 base 1];
  # .MEM_20 = VDEF <.MEM_652>
  D.47477 ={v} {CLOBBER};
  # .MEM_21 = VDEF <.MEM_20>
  D.47476 ={v} {CLOBBER};
  goto <bb 48>;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 5, next block 7, flags: (NEW)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_100 = PHI <__nstart_117(6), __nstart_120(9)>
  # .MEM_465 = PHI <.MEM_18(6), .MEM_651(9)>
  # DEBUG __nD.71601 => __nstart_100
  # VUSE <.MEM_465>
  # PT = nonlocal escaped 
  _119 = *__nstart_100;
  # DEBUG thisD.71603 => D#486ptD.0
  # DEBUG __pD.71602 => _119
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#486ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.71607 => _119
  # DEBUG __aD.71605 => D#144ptD.0
  # DEBUG __nD.71606 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.71610 => _119
  # DEBUG thisD.71608 => D#140ptD.0
  # DEBUG D.71609 => D#141ptD.0
  # .MEM_651 = VDEF <.MEM_465>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  _ZdlPvD.2766 (_119);
  # PT = nonlocal escaped 
  __nstart_120 = __nstart_100 + 8;
  # DEBUG __nD.71601 => __nstart_120
  # DEBUG __nD.71601 => __nstart_120
  if (_116 <= __nstart_120)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 7, next block 55, flags: (NEW)
;;    pred:       7 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_626 = PHI <.MEM_651(7)>
;;    succ:       55 [100.0%]  (FALLTHRU)

;;   basic block 55, loop depth 0, count 0, freq 819, maybe hot
;;    prev block 8, next block 9, flags: (NEW)
;;    pred:       8 [100.0%]  (FALLTHRU)
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 8281, maybe hot
;;    prev block 55, next block 10, flags: (NEW)
;;    pred:       7 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 1408, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       3 [61.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.61671 => __x_2(D)
  # DEBUG D#84ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61673 => &D.47479
  # DEBUG __xD.61672 => D#84ptD.0
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  SR.1979_81 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 16]._M_firstD.42941;
  # DEBUG thisD.71627 => &D.47479
  # DEBUG __nD.71628 => _64
  # DEBUG __tmp$_M_curD.71893 => SR.1978_37
  # DEBUG __tmp$_M_firstD.71894 => SR.1979_81
  # DEBUG __tmp$_M_lastD.71895 => SR.1980_35
  # DEBUG __tmp$_M_nodeD.71896 => SR.1981_22
  # DEBUG thisD.71630 => &__tmpD.71629
  # DEBUG __nD.71631 => _64
  _126 = (long intD.12) SR.1979_81;
  _127 = _38 - _126;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _128 = _127 /[ex] 4;
  __offset_129 = _64 + _128;
  # DEBUG __offsetD.71632 => __offset_129
  # DEBUG __sizeD.60431 => 4
  _372 = (unsigned long) __offset_129;
  if (_372 <= 127)
    goto <bb 49>;
  else
    goto <bb 50>;
;;    succ:       49 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 627, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       50 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.107_134 = __offset_129 >> 7;
  goto <bb 13>;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 232, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       50 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _136 = ~_372;
  # DEBUG __sizeD.60431 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _137 = _136 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _138 = (long intD.12) _137;
  # RANGE [-144115188075855872, -1]
  iftmp.107_139 = ~_138;
;;    succ:       13 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 859, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       11 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.107_141 = PHI <iftmp.107_134(11), iftmp.107_139(12)>
  # DEBUG __node_offsetD.71633 => iftmp.107_141
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.109_142 = (long unsigned intD.14) iftmp.107_141;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _143 = __node_offset.109_142 * 8;
  # PT = nonlocal escaped 
  __tmp$_M_node_144 = SR.1981_22 + _143;
  # DEBUG thisD.71635 => &__tmpD.71629
  # DEBUG __new_nodeD.71634 => __tmp$_M_node_144
  # DEBUG __tmp$_M_nodeD.71896 => __tmp$_M_node_144
  # VUSE <.MEM_4(D)>
  # PT = nonlocal escaped 
  __tmp$_M_first_145 = *__tmp$_M_node_144;
  # DEBUG __tmp$_M_firstD.71894 => __tmp$_M_first_145
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __tmp$_M_last_146 = __tmp$_M_first_145 + 512;
  # DEBUG __tmp$_M_lastD.71895 => __tmp$_M_last_146
  # DEBUG __sizeD.60431 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _147 = iftmp.107_141 * 128;
  _148 = __offset_129 - _147;
  # RANGE [0, 18446744073709551615]
  _149 = (long unsigned intD.14) _148;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _150 = _149 * 4;
  # PT = nonlocal escaped 
  __tmp$_M_cur_151 = __tmp$_M_first_145 + _150;
  # DEBUG __tmp$_M_curD.71893 => __tmp$_M_cur_151
  pretmp_503 = (long intD.12) __tmp$_M_node_144;
  pretmp_505 = (long intD.12) __tmp$_M_last_146;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 1408, maybe hot
;;    prev block 13, next block 63, flags: (NEW, REACHABLE)
;;    pred:       49 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __tmp$_M_cur_477 = PHI <__tmp$_M_cur_133(49), __tmp$_M_cur_151(13)>
  # PT = nonlocal escaped 
  # __tmp$_M_first_569 = PHI <SR.1979_81(49), __tmp$_M_first_145(13)>
  # PT = nonlocal escaped 
  # __tmp$_M_last_453 = PHI <SR.1980_35(49), __tmp$_M_last_146(13)>
  # PT = nonlocal escaped 
  # __tmp$_M_node_16 = PHI <SR.1981_22(49), __tmp$_M_node_144(13)>
  # prephitmp_504 = PHI <_23(49), pretmp_503(13)>
  # prephitmp_508 = PHI <_36(49), pretmp_505(13)>
;;    succ:       63 [100.0%]  (FALLTHRU)

;;   basic block 63, loop depth 0, count 0, freq 1408, maybe hot
;;    prev block 14, next block 15, flags: (NEW)
;;    pred:       14 [100.0%]  (FALLTHRU)
  # DEBUG __tmp$_M_nodeD.71896 => __tmp$_M_node_16
  # DEBUG __tmp$_M_lastD.71895 => __tmp$_M_last_453
  # DEBUG __tmp$_M_firstD.71894 => __tmp$_M_first_569
  # DEBUG __tmp$_M_curD.71893 => __tmp$_M_cur_477
  # DEBUG __mid$_M_curD.71865 => __tmp$_M_cur_477
  # DEBUG __mid$_M_firstD.71866 => __tmp$_M_first_569
  # DEBUG __mid$_M_lastD.71867 => __tmp$_M_last_453
  # DEBUG __mid$_M_nodeD.71868 => __tmp$_M_node_16
  # DEBUG D#1132ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_curD.71893 => D#1132ptD.0
  # DEBUG D#1133ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_firstD.71894 => D#1133ptD.0
  # DEBUG D#1134ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_lastD.71895 => D#1134ptD.0
  # DEBUG D#1135ptD.0 => {CLOBBER}
  # DEBUG __tmp$_M_nodeD.71896 => D#1135ptD.0
  # DEBUG D#694ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61669 => &D.47483
  # DEBUG __xD.61670 => D#694ptD.0
  # .MEM_86 = VDEF <.MEM_4(D)>
  D.47483._M_curD.42940 = _60;
  # VUSE <.MEM_86>
  # PT = nonlocal escaped 
  _78 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_firstD.42941;
  # .MEM_87 = VDEF <.MEM_86>
  D.47483._M_firstD.42941 = _78;
  # .MEM_88 = VDEF <.MEM_87>
  D.47483._M_lastD.42942 = _58;
  # .MEM_89 = VDEF <.MEM_88>
  D.47483._M_nodeD.42943 = _45;
  # DEBUG thisD.61666 => __x_2(D)
  # DEBUG D#84ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.61668 => &D.50408
  # DEBUG __xD.61667 => D#84ptD.0
  # .MEM_90 = VDEF <.MEM_89>
  D.50408._M_curD.44737 = SR.1978_37;
  # .MEM_91 = VDEF <.MEM_90>
  D.50408._M_firstD.44738 = SR.1979_81;
  # .MEM_92 = VDEF <.MEM_91>
  D.50408._M_lastD.44739 = SR.1980_35;
  # .MEM_93 = VDEF <.MEM_92>
  D.50408._M_nodeD.44740 = SR.1981_22;
  # .MEM_593 = VDEF <.MEM_93>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47478] = __tmp$_M_cur_477;
  # .MEM_592 = VDEF <.MEM_593>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47478 + 8B] = __tmp$_M_first_569;
  # .MEM_591 = VDEF <.MEM_592>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47478 + 16B] = __tmp$_M_last_453;
  # .MEM_590 = VDEF <.MEM_591>
  MEM[(struct _Deque_iteratorD.42910 *)&__midD.47478 + 24B] = __tmp$_M_node_16;
  # .MEM_10 = VDEF <.MEM_590>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  _ZSt4copyIiESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_D.47472 (D.50408, __midD.47478, &D.47483);
  # .MEM_11 = VDEF <.MEM_10>
  D.47483 ={v} {CLOBBER};
  # DEBUG thisD.61663 => __x_2(D)
  # DEBUG D#83ptD.0 => &__x_2(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61665 => &D.50409
  # DEBUG __xD.61664 => D#83ptD.0
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _13 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_curD.42940;
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _72 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_firstD.42941;
  # DEBUG D#1148ptD.0 => MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_lastD.42942
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _74 = MEM[(const struct iteratorD.44725 &)__x_2(D) + 48]._M_nodeD.42943;
  # DEBUG D#695ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.61661 => &D.47491
  # DEBUG __xD.61662 => D#695ptD.0
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _17 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_curD.42940;
  # DEBUG thisD.71611 => this_3(D)
  # DEBUG __positionD.71612 => &D.47491
  # DEBUG __first$_M_curD.71877 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71878 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71879 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71880 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71881 => _13
  # DEBUG __last$_M_firstD.71882 => _72
  # DEBUG __last$_M_lastD.71883 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71884 => _74
  # DEBUG thisD.71617 => NULL
  # DEBUG __xD.71616 => &D.47491
  # DEBUG thisD.71621 => this_3(D)
  # DEBUG __posD.71620 => NULL
  # DEBUG __first$_M_curD.71889 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71890 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71891 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71892 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71885 => _13
  # DEBUG __last$_M_firstD.71886 => _72
  # DEBUG __last$_M_lastD.71887 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71888 => _74
  # DEBUG thisD.71624 => &D.71625
  # DEBUG __xD.71623 => NULL
  # DEBUG thisD.71637 => this_3(D)
  # DEBUG __posD.71638 => &D.71625
  # DEBUG __firstD.71897 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71898 => __tmp$_M_first_569
  # DEBUG __first$16D.71899 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71900 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71901 => _13
  # DEBUG __last$_M_firstD.71902 => _72
  # DEBUG __last$_M_lastD.71903 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71904 => _74
  # DEBUG D#634ptD.0 => __firstD.71639
  # DEBUG D#634ptD.0 => __firstD.71639
  # DEBUG D#634ptD.0 => __firstD.71639
  # DEBUG D#635ptD.0 => __lastD.71640
  # DEBUG D#635ptD.0 => __lastD.71640
  # DEBUG D#635ptD.0 => __lastD.71640
  # DEBUG D.61049 => D#630ptD.0
  # DEBUG __xD.71644 => NULL
  # DEBUG __yD.71643 => NULL
  # DEBUG __sizeD.60431 => 4
  _158 = (long intD.12) _74;
  _160 = _158 - prephitmp_504;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _161 = _160 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _162 = _161 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _163 = _162 * 128;
  _164 = (long intD.12) _13;
  _165 = (long intD.12) _72;
  _166 = _164 - _165;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _167 = _166 /[ex] 4;
  _168 = _163 + _167;
  _170 = (long intD.12) __tmp$_M_cur_477;
  _171 = prephitmp_508 - _170;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _172 = _171 /[ex] 4;
  _173 = _168 + _172;
  # RANGE [0, 18446744073709551615]
  __n_174 = (const size_typeD.43117) _173;
  # DEBUG __nD.71642 => __n_174
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _176 = this_3(D)->D.43590._M_implD.43041._M_startD.43045._M_curD.42940;
  if (_17 == _176)
    goto <bb 15>;
  else
    goto <bb 31>;
;;    succ:       15 [4.4%]  (TRUE_VALUE,EXECUTABLE)
;;                31 [95.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 63, next block 16, flags: (NEW, REACHABLE)
;;    pred:       63 [4.4%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71664 => this_3(D)
  # DEBUG __nD.71665 => __n_174
  _194 = (long intD.12) _17;
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _195 = this_3(D)->D.43590._M_implD.43041._M_startD.43045._M_firstD.42941;
  _196 = (long intD.12) _195;
  _197 = _194 - _196;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _198 = _197 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  __vacancies_199 = (const size_typeD.43117) _198;
  # DEBUG __vacanciesD.71666 => __vacancies_199
  if (__n_174 > __vacancies_199)
    goto <bb 16>;
  else
    goto <bb 17>;
;;    succ:       16 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                17 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 24, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       15 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  _200 = __n_174 - __vacancies_199;
  # .MEM_564 = VDEF <.MEM_11>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  _ZNSt5dequeIiSaIiEE24_M_new_elements_at_frontEmD.43530 (this_3(D), _200);
  # VUSE <.MEM_564>
  pretmp_402 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_curD.42940;
  # VUSE <.MEM_564>
  pretmp_406 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_firstD.42941;
  pretmp_408 = (long intD.12) pretmp_406;
;;    succ:       17 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 16, next block 58, flags: (NEW, REACHABLE)
;;    pred:       15 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                16 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_441 = PHI <.MEM_11(15), .MEM_564(16)>
  # PT = nonlocal escaped 
  # prephitmp_404 = PHI <_176(15), pretmp_402(16)>
  # PT = nonlocal escaped 
  # prephitmp_407 = PHI <_195(15), pretmp_406(16)>
  # prephitmp_409 = PHI <_196(15), pretmp_408(16)>
;;    succ:       58 [100.0%]  (FALLTHRU)

;;   basic block 58, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 17, next block 18, flags: (NEW)
;;    pred:       17 [100.0%]  (FALLTHRU)
  # DEBUG D#1129ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.71667 => D#1129ptD.0
  # DEBUG __nD.71668 => _173
  # DEBUG thisD.71671 => &__tmpD.71669
  # DEBUG __xD.71670 => D#1129ptD.0
  # DEBUG D#1149ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_firstD.42941
  # DEBUG __tmp$_M_firstD.71922 => D#1149ptD.0
  # VUSE <.MEM_441>
  # PT = nonlocal escaped 
  __new_start$_M_last_205 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_lastD.42942;
  # DEBUG __tmp$_M_lastD.71923 => __new_start$_M_last_205
  # VUSE <.MEM_441>
  # PT = nonlocal escaped 
  __new_start$_M_node_206 = MEM[(const struct iteratorD.42928 &)this_3(D) + 16]._M_nodeD.42943;
  # DEBUG __tmp$_M_nodeD.71924 => __new_start$_M_node_206
  # DEBUG thisD.71673 => &__tmpD.71669
  # DEBUG __nD.71672 => _173
  # DEBUG thisD.71676 => &__tmpD.71669
  # DEBUG __nD.71677 => -_173
  _214 = (long intD.12) prephitmp_404;
  _217 = _214 - prephitmp_409;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _218 = _217 /[ex] 4;
  __offset_219 = _218 - _173;
  # DEBUG __offsetD.71678 => __offset_219
  # DEBUG __sizeD.54289 => 4
  _369 = (unsigned long) __offset_219;
  if (_369 <= 127)
    goto <bb 51>;
  else
    goto <bb 52>;
;;    succ:       51 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                52 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 28, maybe hot
;;    prev block 58, next block 19, flags: (NEW, REACHABLE)
;;    pred:       52 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_224 = __offset_219 >> 7;
  goto <bb 20>;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 10, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       52 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _226 = ~_369;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _227 = _226 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _228 = (long intD.12) _227;
  # RANGE [-144115188075855872, -1]
  iftmp.117_229 = ~_228;
;;    succ:       20 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 38, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_231 = PHI <iftmp.117_224(18), iftmp.117_229(19)>
  # DEBUG __node_offsetD.71679 => iftmp.117_231
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_232 = (long unsigned intD.14) iftmp.117_231;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _233 = __node_offset.119_232 * 8;
  # PT = nonlocal escaped 
  __new_start$_M_node_234 = __new_start$_M_node_206 + _233;
  # DEBUG thisD.71681 => &__tmpD.71669
  # DEBUG __new_nodeD.71680 => __new_start$_M_node_234
  # DEBUG __tmp$_M_nodeD.71924 => __new_start$_M_node_234
  # VUSE <.MEM_441>
  # PT = nonlocal escaped 
  __new_start$_M_first_235 = *__new_start$_M_node_234;
  # DEBUG __tmp$_M_firstD.71922 => __new_start$_M_first_235
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  __new_start$_M_last_236 = __new_start$_M_first_235 + 512;
  # DEBUG __tmp$_M_lastD.71923 => __new_start$_M_last_236
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _237 = iftmp.117_231 * 128;
  _238 = __offset_219 - _237;
  # RANGE [0, 18446744073709551615]
  _239 = (long unsigned intD.14) _238;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _240 = _239 * 4;
  # PT = nonlocal escaped 
  __new_start$_M_cur_241 = __new_start$_M_first_235 + _240;
  # DEBUG __tmp$_M_curD.71921 => __new_start$_M_cur_241
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 20, next block 61, flags: (NEW, REACHABLE)
;;    pred:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __new_start$_M_cur_557 = PHI <__new_start$_M_cur_223(51), __new_start$_M_cur_241(20)>
  # PT = nonlocal escaped 
  # __new_start$_M_first_556 = PHI <prephitmp_407(51), __new_start$_M_first_235(20)>
  # PT = nonlocal escaped 
  # __new_start$_M_last_546 = PHI <__new_start$_M_last_205(51), __new_start$_M_last_236(20)>
  # PT = nonlocal escaped 
  # __new_start$_M_node_545 = PHI <__new_start$_M_node_206(51), __new_start$_M_node_234(20)>
;;    succ:       61 [100.0%]  (FALLTHRU)

;;   basic block 61, loop depth 0, count 0, freq 62, maybe hot
;;    prev block 21, next block 22, flags: (NEW)
;;    pred:       21 [100.0%]  (FALLTHRU)
  # DEBUG __tmp$_M_nodeD.71924 => __new_start$_M_node_545
  # DEBUG __tmp$_M_lastD.71923 => __new_start$_M_last_546
  # DEBUG __tmp$_M_firstD.71922 => __new_start$_M_first_556
  # DEBUG __tmp$_M_curD.71921 => __new_start$_M_cur_557
  # DEBUG thisD.71675 => &__new_startD.71645
  # DEBUG __xD.71674 => NULL
  # DEBUG __new_start$_M_curD.71905 => __new_start$_M_cur_557
  # DEBUG __new_start$_M_firstD.71906 => __new_start$_M_first_556
  # DEBUG __new_start$_M_lastD.71907 => __new_start$_M_last_546
  # DEBUG __new_start$_M_nodeD.71908 => __new_start$_M_node_545
  # .MEM_579 = VDEF <.MEM_441>
  __tmpD.71669 ={v} {CLOBBER};
  # DEBUG D#690ptD.0 => &this_3(D)->D.43590
  # DEBUG thisD.61598 => D#690ptD.0
  # DEBUG thisD.71647 => &D.71655
  # DEBUG __xD.71646 => &__new_startD.71645
  # DEBUG __first$_M_curD.71913 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71914 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71915 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71916 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71917 => _13
  # DEBUG __last$_M_firstD.71918 => _72
  # DEBUG __last$_M_lastD.71919 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71920 => _74
  # DEBUG __resultD.71658 => &D.71655
  # DEBUG D.71659 => D#603ptD.0
  # DEBUG thisD.71661 => &D.71663
  # DEBUG __xD.71660 => &D.71655
  # DEBUG __first$_M_curD.71925 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71926 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71927 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71928 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71929 => _13
  # DEBUG __last$_M_firstD.71930 => _72
  # DEBUG __last$_M_lastD.71931 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71932 => _74
  # DEBUG __resultD.71685 => &D.71663
  # DEBUG __assignableD.71688 => 1
  # DEBUG thisD.71690 => NULL
  # DEBUG __xD.71689 => &D.71663
  # DEBUG __first$_M_curD.71937 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71938 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71939 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71940 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71933 => _13
  # DEBUG __last$_M_firstD.71934 => _72
  # DEBUG __last$_M_lastD.71935 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71936 => _74
  # DEBUG __resultD.71691 => NULL
  # DEBUG thisD.71695 => &D.71696
  # DEBUG __xD.71694 => NULL
  # DEBUG __firstD.71941 => __tmp$_M_cur_477
  # DEBUG __first$8D.71942 => __tmp$_M_first_569
  # DEBUG __first$16D.71943 => __tmp$_M_last_453
  # DEBUG __first$24D.71944 => __tmp$_M_node_16
  # DEBUG __lastD.71945 => _13
  # DEBUG __last$8D.71946 => _72
  # DEBUG __last$_M_lastD.71947 => D#1148ptD.0
  # DEBUG __last$24D.71948 => _74
  # DEBUG __resultD.71699 => &D.71696
  # DEBUG thisD.71701 => &D.71716
  # DEBUG __xD.71700 => &D.71696
  # DEBUG __itD.71709 => _13
  # DEBUG __it$8D.71708 => _72
  # DEBUG D#1130ptD.0 => MEM[(struct _Deque_iteratorD.42910 *)&__lastD.71698 + 16B clique 7 base 0]
  # DEBUG __it$16D.71707 => D#1130ptD.0
  # DEBUG __it$24D.71706 => _74
  # DEBUG __it$_M_curD.60535 => _13
  # DEBUG __it$_M_firstD.60534 => _72
  # DEBUG __it$_M_lastD.60533 => D#1130ptD.0
  # DEBUG __it$_M_nodeD.60532 => _74
  # DEBUG __itD.71713 => __tmp$_M_cur_477
  # DEBUG __it$8D.71712 => __tmp$_M_first_569
  # DEBUG __it$16D.71711 => __tmp$_M_last_453
  # DEBUG __it$24D.71710 => __tmp$_M_node_16
  # DEBUG __it$_M_curD.60529 => __tmp$_M_cur_477
  # DEBUG __it$_M_firstD.60528 => __tmp$_M_first_569
  # DEBUG __it$_M_lastD.60527 => __tmp$_M_last_453
  # DEBUG __it$_M_nodeD.60526 => __tmp$_M_node_16
  # DEBUG __resultD.71719 => &D.71716
  # DEBUG thisD.71721 => NULL
  # DEBUG __xD.71720 => &D.71716
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.71735 => _13
  # DEBUG __it$8D.71734 => _72
  # DEBUG __it$16D.71733 => D#1130ptD.0
  # DEBUG __it$24D.71731 => _74
  # DEBUG __it$_M_curD.60489 => _13
  # DEBUG __it$_M_firstD.60488 => _72
  # DEBUG __it$_M_lastD.60487 => D#1130ptD.0
  # DEBUG __it$_M_nodeD.60486 => _74
  # DEBUG __itD.71740 => __tmp$_M_cur_477
  # DEBUG __it$8D.71739 => __tmp$_M_first_569
  # DEBUG __it$16D.71738 => __tmp$_M_last_453
  # DEBUG __it$24D.71736 => __tmp$_M_node_16
  # DEBUG __it$_M_curD.60483 => __tmp$_M_cur_477
  # DEBUG __it$_M_firstD.60482 => __tmp$_M_first_569
  # DEBUG __it$_M_lastD.60481 => __tmp$_M_last_453
  # DEBUG __it$_M_nodeD.60480 => __tmp$_M_node_16
  # DEBUG __firstD.71949 => __tmp$_M_cur_477
  # DEBUG __first$8D.71950 => __tmp$_M_first_569
  # DEBUG __first$16D.71951 => __tmp$_M_last_453
  # DEBUG __first$24D.71952 => __tmp$_M_node_16
  # DEBUG __resultD.71722 => NULL
  # DEBUG __simpleD.71728 => 0
  # DEBUG thisD.71730 => &D.71741
  # DEBUG __xD.71729 => NULL
  # DEBUG __firstD.71956 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71957 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71958 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71959 => __tmp$_M_node_16
  # DEBUG __resultD.71744 => &D.71741
  # DEBUG __xD.71752 => &__lastD.71743
  # DEBUG __yD.71751 => &__firstD.71742
  # DEBUG __sizeD.60431 => 4
  # DEBUG __nD.71748 => _173
  # DEBUG __nD.71748 => _173
  if (_173 <= 0)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 63, maybe hot
;;    prev block 61, next block 23, flags: (NEW, REACHABLE)
;;    pred:       61 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_648 = PHI <.MEM_579(61), .MEM_637(56)>
  # DEBUG thisD.71747 => &D.71662
  # DEBUG __xD.71746 => &D.71741
  # .MEM_643 = VDEF <.MEM_648>
  D.71741 ={v} {CLOBBER};
  # .MEM_644 = VDEF <.MEM_643>
  D.71716 ={v} {CLOBBER};
  # .MEM_645 = VDEF <.MEM_644>
  D.71696 ={v} {CLOBBER};
  # .MEM_646 = VDEF <.MEM_645>
  D.71663 ={v} {CLOBBER};
  # .MEM_647 = VDEF <.MEM_646>
  D.71655 ={v} {CLOBBER};
  # .MEM_562 = VDEF <.MEM_647>
  MEM[(struct dequeD.40449 *)this_3(D) + 16B] = __new_start$_M_cur_557;
  # .MEM_122 = VDEF <.MEM_562>
  MEM[(struct dequeD.40449 *)this_3(D) + 24B] = __new_start$_M_first_556;
  # .MEM_121 = VDEF <.MEM_122>
  MEM[(struct dequeD.40449 *)this_3(D) + 32B] = __new_start$_M_last_546;
  # .MEM_155 = VDEF <.MEM_121>
  MEM[(struct dequeD.40449 *)this_3(D) + 40B] = __new_start$_M_node_545;
  # DEBUG D#1140ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_curD.71905 => D#1140ptD.0
  # DEBUG D#1141ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_firstD.71906 => D#1141ptD.0
  # DEBUG D#1142ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_lastD.71907 => D#1142ptD.0
  # DEBUG D#1143ptD.0 => {CLOBBER}
  # DEBUG __new_start$_M_nodeD.71908 => D#1143ptD.0
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 56, maybe hot
;;    prev block 22, next block 24, flags: (NEW)
;;    pred:       61 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 1, count 0, freq 628, maybe hot
;;    prev block 23, next block 25, flags: (NEW)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                30 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_71 = PHI <_173(23), __n_301(30)>
  # .MEM_467 = PHI <.MEM_579(23), .MEM_628(30)>
  # PT = nonlocal escaped 
  # SR.2061_543 = PHI <__new_start$_M_cur_557(23), SR.2061_542(30)>
  # PT = nonlocal escaped 
  # SR.2062_541 = PHI <__new_start$_M_last_546(23), SR.2062_540(30)>
  # PT = nonlocal escaped 
  # SR.2063_538 = PHI <__new_start$_M_node_545(23), SR.2063_537(30)>
  # PT = nonlocal escaped 
  # __mid$_M_cur_534 = PHI <__tmp$_M_cur_477(23), __mid$_M_cur_533(30)>
  # PT = nonlocal escaped 
  # __mid$_M_last_532 = PHI <__tmp$_M_last_453(23), __mid$_M_last_530(30)>
  # PT = nonlocal escaped 
  # __mid$_M_node_525 = PHI <__tmp$_M_node_16(23), __mid$_M_node_524(30)>
  # DEBUG __first$_M_nodeD.71959 => __mid$_M_node_525
  # DEBUG __first$_M_lastD.71958 => __mid$_M_last_532
  # DEBUG __firstD.71956 => __mid$_M_cur_534
  # DEBUG __nD.71748 => __n_71
  # DEBUG D#100ptD.0 => &D.71741
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.71742
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_467>
  _295 = MEM[(const intD.9 &)__mid$_M_cur_534];
  # .MEM_628 = VDEF <.MEM_467>
  *SR.2061_543 = _295;
  # DEBUG thisD.71749 => &__firstD.71742
  # PT = nonlocal escaped 
  __mid$_M_cur_296 = __mid$_M_cur_534 + 4;
  # DEBUG __firstD.71956 => __mid$_M_cur_296
  if (__mid$_M_cur_296 == __mid$_M_last_532)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 25, loop depth 1, count 0, freq 42, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       24 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71753 => &__firstD.71742
  # PT = nonlocal escaped 
  __mid$_M_node_307 = __mid$_M_node_525 + 8;
  # DEBUG thisD.71755 => &__firstD.71742
  # DEBUG __new_nodeD.71754 => __mid$_M_node_307
  # DEBUG __first$_M_nodeD.71959 => __mid$_M_node_307
  # VUSE <.MEM_628>
  # PT = nonlocal escaped 
  __mid$_M_cur_308 = MEM[(intD.9 * *)__mid$_M_node_525 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __mid$_M_last_309 = __mid$_M_cur_308 + 512;
  # DEBUG __first$_M_lastD.71958 => __mid$_M_last_309
  # DEBUG __firstD.71956 => __mid$_M_cur_308
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 628, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __mid$_M_cur_533 = PHI <__mid$_M_cur_296(24), __mid$_M_cur_308(25)>
  # PT = nonlocal escaped 
  # __mid$_M_last_530 = PHI <__mid$_M_last_532(24), __mid$_M_last_309(25)>
  # PT = nonlocal escaped 
  # __mid$_M_node_524 = PHI <__mid$_M_node_525(24), __mid$_M_node_307(25)>
  # DEBUG __first$_M_nodeD.71959 => __mid$_M_node_524
  # DEBUG __first$_M_lastD.71958 => __mid$_M_last_530
  # DEBUG __firstD.71956 => __mid$_M_cur_533
  # DEBUG thisD.71750 => &D.71741
  # PT = nonlocal escaped 
  _299 = SR.2061_543 + 4;
  if (_299 == SR.2062_541)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 27, loop depth 1, count 0, freq 42, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71757 => &D.71741
  # PT = nonlocal escaped 
  _311 = SR.2063_538 + 8;
  # DEBUG thisD.71759 => &D.71741
  # DEBUG __new_nodeD.71758 => _311
  # VUSE <.MEM_628>
  # PT = nonlocal escaped 
  _312 = MEM[(intD.9 * *)SR.2063_538 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _313 = _312 + 512;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 628, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       26 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.2061_542 = PHI <_299(26), _312(27)>
  # PT = nonlocal escaped 
  # SR.2062_540 = PHI <SR.2062_541(26), _313(27)>
  # PT = nonlocal escaped 
  # SR.2063_537 = PHI <SR.2063_538(26), _311(27)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_301 = __n_71 + -1;
  # DEBUG __nD.71748 => __n_301
  # DEBUG __nD.71748 => __n_301
  if (__n_301 <= 0)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                30 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 57, maybe hot
;;    prev block 28, next block 56, flags: (NEW)
;;    pred:       28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_637 = PHI <.MEM_628(28)>
;;    succ:       56 [100.0%]  (FALLTHRU)

;;   basic block 56, loop depth 0, count 0, freq 57, maybe hot
;;    prev block 29, next block 30, flags: (NEW)
;;    pred:       29 [100.0%]  (FALLTHRU)
  goto <bb 22>;
;;    succ:       22 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 571, maybe hot
;;    prev block 56, next block 31, flags: (NEW)
;;    pred:       28 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 136, maybe hot
;;   Invalid sum of incoming frequencies 1346, should be 136
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       63 [95.6%]  (FALSE_VALUE,EXECUTABLE)
  # VUSE <.MEM_11>
  # PT = nonlocal escaped 
  _70 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_lastD.42942;
  # DEBUG thisD.71769 => this_3(D)
  # DEBUG __nD.71770 => __n_174
  _319 = (long intD.12) _70;
  _321 = (long intD.12) _17;
  _322 = _319 - _321;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _323 = _322 /[ex] 4;
  # RANGE [-2305843009213693953, 2305843009213693950]
  _324 = _323 + -1;
  # RANGE ~[2305843009213693951, 16140901064495857662]
  __vacancies_325 = (const size_typeD.43117) _324;
  # DEBUG __vacanciesD.71771 => __vacancies_325
  if (__n_174 > __vacancies_325)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32 [39.0%]  (TRUE_VALUE,EXECUTABLE)
;;                33 [61.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 53, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [39.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [1, 18446744073709551615]
  _326 = __n_174 - __vacancies_325;
  # .MEM_472 = VDEF <.MEM_11>
  # USE = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  # CLB = nonlocal { D.47476 D.47477 D.47483 } (escaped)
  _ZNSt5dequeIiSaIiEE23_M_new_elements_at_backEmD.43533 (this_3(D), _326);
  # VUSE <.MEM_472>
  pretmp_509 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_curD.42940;
  # VUSE <.MEM_472>
  pretmp_511 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_lastD.42942;
  pretmp_512 = (long intD.12) pretmp_509;
;;    succ:       33 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 136, maybe hot
;;    prev block 32, next block 59, flags: (NEW, REACHABLE)
;;    pred:       31 [61.0%]  (FALSE_VALUE,EXECUTABLE)
;;                32 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_446 = PHI <.MEM_11(31), .MEM_472(32)>
  # PT = nonlocal escaped 
  # prephitmp_510 = PHI <_17(31), pretmp_509(32)>
  # PT = nonlocal escaped 
  # prephitmp_377 = PHI <_70(31), pretmp_511(32)>
  # prephitmp_513 = PHI <_321(31), pretmp_512(32)>
;;    succ:       59 [100.0%]  (FALLTHRU)

;;   basic block 59, loop depth 0, count 0, freq 136, maybe hot
;;    prev block 33, next block 34, flags: (NEW)
;;    pred:       33 [100.0%]  (FALLTHRU)
  # DEBUG D#1128ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.71772 => D#1128ptD.0
  # DEBUG __nD.71773 => _173
  # DEBUG thisD.71776 => &__tmpD.71774
  # DEBUG __xD.71775 => D#1128ptD.0
  # VUSE <.MEM_446>
  # PT = nonlocal escaped 
  __new_finish$_M_first_330 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_firstD.42941;
  # DEBUG __tmp$_M_firstD.71969 => __new_finish$_M_first_330
  # DEBUG D#1150ptD.0 => MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_lastD.42942
  # DEBUG __tmp$_M_lastD.71970 => D#1150ptD.0
  # VUSE <.MEM_446>
  # PT = nonlocal escaped 
  __new_finish$_M_node_332 = MEM[(const struct iteratorD.42928 &)this_3(D) + 48]._M_nodeD.42943;
  # DEBUG __tmp$_M_nodeD.71971 => __new_finish$_M_node_332
  # DEBUG thisD.71779 => &__tmpD.71774
  # DEBUG __nD.71780 => _173
  _341 = (long intD.12) __new_finish$_M_first_330;
  _342 = prephitmp_513 - _341;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _343 = _342 /[ex] 4;
  __offset_344 = _173 + _343;
  # DEBUG __offsetD.71781 => __offset_344
  # DEBUG __sizeD.54289 => 4
  _370 = (unsigned long) __offset_344;
  if (_370 <= 127)
    goto <bb 53>;
  else
    goto <bb 54>;
;;    succ:       53 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 61, maybe hot
;;    prev block 59, next block 35, flags: (NEW, REACHABLE)
;;    pred:       54 [73.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 72057594037927935] NONZERO 72057594037927935
  iftmp.117_349 = __offset_344 >> 7;
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 22, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       54 [27.0%]  (FALSE_VALUE,EXECUTABLE)
  # RANGE ~[9223372036854775808, 18446744073709551614]
  _351 = ~_370;
  # DEBUG __sizeD.54289 => 4
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _352 = _351 >> 7;
  # RANGE [0, 144115188075855871] NONZERO 144115188075855871
  _353 = (long intD.12) _352;
  # RANGE [-144115188075855872, -1]
  iftmp.117_354 = ~_353;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 0, count 0, freq 83, maybe hot
;;    prev block 35, next block 37, flags: (NEW, REACHABLE)
;;    pred:       34 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [-144115188075855872, 72057594037927935]
  # iftmp.117_356 = PHI <iftmp.117_349(34), iftmp.117_354(35)>
  # DEBUG __node_offsetD.71782 => iftmp.117_356
  # RANGE ~[72057594037927936, 18302628885633695743]
  __node_offset.119_357 = (long unsigned intD.14) iftmp.117_356;
  # RANGE [0, 18446744073709551608] NONZERO 18446744073709551608
  _358 = __node_offset.119_357 * 8;
  # PT = nonlocal escaped 
  __new_finish$_M_node_359 = __new_finish$_M_node_332 + _358;
  # DEBUG thisD.71784 => &__tmpD.71774
  # DEBUG __new_nodeD.71783 => __new_finish$_M_node_359
  # DEBUG __tmp$_M_nodeD.71971 => __new_finish$_M_node_359
  # VUSE <.MEM_446>
  # PT = nonlocal escaped 
  __new_finish$_M_first_360 = *__new_finish$_M_node_359;
  # DEBUG __tmp$_M_firstD.71969 => __new_finish$_M_first_360
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  __new_finish$_M_last_361 = __new_finish$_M_first_360 + 512;
  # DEBUG __tmp$_M_lastD.71970 => __new_finish$_M_last_361
  # DEBUG __sizeD.54289 => 4
  # RANGE [-9223372036854775808, 9223372036854775680] NONZERO 18446744073709551488
  _362 = iftmp.117_356 * 128;
  _363 = __offset_344 - _362;
  # RANGE [0, 18446744073709551615]
  _364 = (long unsigned intD.14) _363;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _365 = _364 * 4;
  # PT = nonlocal escaped 
  __new_finish$_M_cur_366 = __new_finish$_M_first_360 + _365;
  # DEBUG __tmp$_M_curD.71968 => __new_finish$_M_cur_366
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 136, maybe hot
;;    prev block 36, next block 62, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __new_finish$_M_cur_523 = PHI <__new_finish$_M_cur_348(53), __new_finish$_M_cur_366(36)>
  # PT = nonlocal escaped 
  # __new_finish$_M_first_522 = PHI <__new_finish$_M_first_330(53), __new_finish$_M_first_360(36)>
  # PT = nonlocal escaped 
  # __new_finish$_M_last_507 = PHI <prephitmp_377(53), __new_finish$_M_last_361(36)>
  # PT = nonlocal escaped 
  # __new_finish$_M_node_506 = PHI <__new_finish$_M_node_332(53), __new_finish$_M_node_359(36)>
;;    succ:       62 [100.0%]  (FALLTHRU)

;;   basic block 62, loop depth 0, count 0, freq 136, maybe hot
;;    prev block 37, next block 38, flags: (NEW)
;;    pred:       37 [100.0%]  (FALLTHRU)
  # DEBUG __tmp$_M_nodeD.71971 => __new_finish$_M_node_506
  # DEBUG __tmp$_M_lastD.71970 => __new_finish$_M_last_507
  # DEBUG __tmp$_M_firstD.71969 => __new_finish$_M_first_522
  # DEBUG __tmp$_M_curD.71968 => __new_finish$_M_cur_523
  # DEBUG thisD.71778 => &__new_finishD.71650
  # DEBUG __xD.71777 => NULL
  # DEBUG __new_finish$_M_curD.71909 => __new_finish$_M_cur_523
  # DEBUG __new_finish$_M_firstD.71910 => __new_finish$_M_first_522
  # DEBUG __new_finish$_M_lastD.71911 => __new_finish$_M_last_507
  # DEBUG __new_finish$_M_nodeD.71912 => __new_finish$_M_node_506
  # .MEM_487 = VDEF <.MEM_446>
  __tmpD.71774 ={v} {CLOBBER};
  # DEBUG D#691ptD.0 => &this_3(D)->D.43590
  # DEBUG thisD.61602 => D#691ptD.0
  # DEBUG D#692ptD.0 => &this_3(D)->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.71652 => &D.71654
  # DEBUG __xD.71651 => D#692ptD.0
  # DEBUG __first$_M_curD.71960 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71961 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71962 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71963 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71964 => _13
  # DEBUG __last$_M_firstD.71965 => _72
  # DEBUG __last$_M_lastD.71966 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71967 => _74
  # DEBUG __resultD.71763 => &D.71654
  # DEBUG D.71764 => D#603ptD.0
  # DEBUG thisD.71766 => &D.71768
  # DEBUG __xD.71765 => &D.71654
  # DEBUG __first$_M_curD.71972 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71973 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71974 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71975 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71976 => _13
  # DEBUG __last$_M_firstD.71977 => _72
  # DEBUG __last$_M_lastD.71978 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71979 => _74
  # DEBUG __resultD.71788 => &D.71768
  # DEBUG __assignableD.71791 => 1
  # DEBUG thisD.71793 => NULL
  # DEBUG __xD.71792 => &D.71768
  # DEBUG __first$_M_curD.71984 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.71985 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.71986 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.71987 => __tmp$_M_node_16
  # DEBUG __last$_M_curD.71980 => _13
  # DEBUG __last$_M_firstD.71981 => _72
  # DEBUG __last$_M_lastD.71982 => D#1148ptD.0
  # DEBUG __last$_M_nodeD.71983 => _74
  # DEBUG __resultD.71794 => NULL
  # DEBUG thisD.71798 => &D.71799
  # DEBUG __xD.71797 => NULL
  # DEBUG __firstD.71988 => __tmp$_M_cur_477
  # DEBUG __first$8D.71989 => __tmp$_M_first_569
  # DEBUG __first$16D.71990 => __tmp$_M_last_453
  # DEBUG __first$24D.71991 => __tmp$_M_node_16
  # DEBUG __lastD.71992 => _13
  # DEBUG __last$8D.71993 => _72
  # DEBUG __last$_M_lastD.71994 => D#1148ptD.0
  # DEBUG __last$24D.71995 => _74
  # DEBUG __resultD.71802 => &D.71799
  # DEBUG thisD.71804 => &D.71819
  # DEBUG __xD.71803 => &D.71799
  # DEBUG __itD.71812 => _13
  # DEBUG __it$8D.71811 => _72
  # DEBUG D#1131ptD.0 => MEM[(struct _Deque_iteratorD.42910 *)&__lastD.71801 + 16B clique 12 base 0]
  # DEBUG __it$16D.71810 => D#1131ptD.0
  # DEBUG __it$24D.71809 => _74
  # DEBUG __it$_M_curD.60535 => _13
  # DEBUG __it$_M_firstD.60534 => _72
  # DEBUG __it$_M_lastD.60533 => D#1131ptD.0
  # DEBUG __it$_M_nodeD.60532 => _74
  # DEBUG __itD.71816 => __tmp$_M_cur_477
  # DEBUG __it$8D.71815 => __tmp$_M_first_569
  # DEBUG __it$16D.71814 => __tmp$_M_last_453
  # DEBUG __it$24D.71813 => __tmp$_M_node_16
  # DEBUG __it$_M_curD.60529 => __tmp$_M_cur_477
  # DEBUG __it$_M_firstD.60528 => __tmp$_M_first_569
  # DEBUG __it$_M_lastD.60527 => __tmp$_M_last_453
  # DEBUG __it$_M_nodeD.60526 => __tmp$_M_node_16
  # DEBUG __resultD.71822 => &D.71819
  # DEBUG thisD.71824 => NULL
  # DEBUG __xD.71823 => &D.71819
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.71838 => _13
  # DEBUG __it$8D.71837 => _72
  # DEBUG __it$16D.71836 => D#1131ptD.0
  # DEBUG __it$24D.71834 => _74
  # DEBUG __it$_M_curD.60489 => _13
  # DEBUG __it$_M_firstD.60488 => _72
  # DEBUG __it$_M_lastD.60487 => D#1131ptD.0
  # DEBUG __it$_M_nodeD.60486 => _74
  # DEBUG __itD.71843 => __tmp$_M_cur_477
  # DEBUG __it$8D.71842 => __tmp$_M_first_569
  # DEBUG __it$16D.71841 => __tmp$_M_last_453
  # DEBUG __it$24D.71839 => __tmp$_M_node_16
  # DEBUG __it$_M_curD.60483 => __tmp$_M_cur_477
  # DEBUG __it$_M_firstD.60482 => __tmp$_M_first_569
  # DEBUG __it$_M_lastD.60481 => __tmp$_M_last_453
  # DEBUG __it$_M_nodeD.60480 => __tmp$_M_node_16
  # DEBUG __firstD.71996 => __tmp$_M_cur_477
  # DEBUG __first$8D.71997 => __tmp$_M_first_569
  # DEBUG __first$16D.71998 => __tmp$_M_last_453
  # DEBUG __first$24D.71999 => __tmp$_M_node_16
  # DEBUG __resultD.71825 => NULL
  # DEBUG __simpleD.71831 => 0
  # DEBUG thisD.71833 => &D.71844
  # DEBUG __xD.71832 => NULL
  # DEBUG __firstD.72003 => __tmp$_M_cur_477
  # DEBUG __first$_M_firstD.72004 => __tmp$_M_first_569
  # DEBUG __first$_M_lastD.72005 => __tmp$_M_last_453
  # DEBUG __first$_M_nodeD.72006 => __tmp$_M_node_16
  # DEBUG __resultD.71847 => &D.71844
  # DEBUG __xD.71855 => &__lastD.71846
  # DEBUG __yD.71854 => &__firstD.71845
  # DEBUG __sizeD.60431 => 4
  # DEBUG __nD.71851 => _173
  # DEBUG __nD.71851 => _173
  if (_173 <= 0)
    goto <bb 38>;
  else
    goto <bb 39>;
;;    succ:       38 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 136, maybe hot
;;    prev block 62, next block 39, flags: (NEW, REACHABLE)
;;    pred:       62 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                57 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_638 = PHI <.MEM_487(62), .MEM_468(57)>
  # DEBUG thisD.71850 => &D.71767
  # DEBUG __xD.71849 => &D.71844
  # .MEM_551 = VDEF <.MEM_638>
  D.71844 ={v} {CLOBBER};
  # .MEM_552 = VDEF <.MEM_551>
  D.71819 ={v} {CLOBBER};
  # .MEM_553 = VDEF <.MEM_552>
  D.71799 ={v} {CLOBBER};
  # .MEM_554 = VDEF <.MEM_553>
  D.71768 ={v} {CLOBBER};
  # .MEM_555 = VDEF <.MEM_554>
  D.71654 ={v} {CLOBBER};
  # .MEM_589 = VDEF <.MEM_555>
  MEM[(struct dequeD.40449 *)this_3(D) + 48B] = __new_finish$_M_cur_523;
  # .MEM_594 = VDEF <.MEM_589>
  MEM[(struct dequeD.40449 *)this_3(D) + 56B] = __new_finish$_M_first_522;
  # .MEM_595 = VDEF <.MEM_594>
  MEM[(struct dequeD.40449 *)this_3(D) + 64B] = __new_finish$_M_last_507;
  # .MEM_596 = VDEF <.MEM_595>
  MEM[(struct dequeD.40449 *)this_3(D) + 72B] = __new_finish$_M_node_506;
  # DEBUG D#1136ptD.0 => {CLOBBER}
  # DEBUG __new_finish$_M_curD.71909 => D#1136ptD.0
  # DEBUG D#1137ptD.0 => {CLOBBER}
  # DEBUG __new_finish$_M_firstD.71910 => D#1137ptD.0
  # DEBUG D#1138ptD.0 => {CLOBBER}
  # DEBUG __new_finish$_M_lastD.71911 => D#1138ptD.0
  # DEBUG D#1139ptD.0 => {CLOBBER}
  # DEBUG __new_finish$_M_nodeD.71912 => D#1139ptD.0
  goto <bb 47>;
;;    succ:       47 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 124, maybe hot
;;    prev block 38, next block 40, flags: (NEW)
;;    pred:       62 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 1380, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_101 = PHI <_173(39), __n_426(46)>
  # .MEM_471 = PHI <.MEM_487(39), .MEM_536(46)>
  # PT = nonlocal escaped 
  # SR.2106_501 = PHI <prephitmp_510(39), SR.2106_500(46)>
  # PT = nonlocal escaped 
  # SR.2107_499 = PHI <prephitmp_377(39), SR.2107_498(46)>
  # PT = nonlocal escaped 
  # SR.2108_493 = PHI <__new_finish$_M_node_332(39), SR.2108_492(46)>
  # PT = nonlocal escaped 
  # __mid$_M_cur_486 = PHI <__tmp$_M_cur_477(39), __mid$_M_cur_485(46)>
  # PT = nonlocal escaped 
  # __mid$_M_last_484 = PHI <__tmp$_M_last_453(39), __mid$_M_last_483(46)>
  # PT = nonlocal escaped 
  # __mid$_M_node_481 = PHI <__tmp$_M_node_16(39), __mid$_M_node_480(46)>
  # DEBUG __first$_M_nodeD.72006 => __mid$_M_node_481
  # DEBUG __first$_M_lastD.72005 => __mid$_M_last_484
  # DEBUG __firstD.72003 => __mid$_M_cur_486
  # DEBUG __nD.71851 => __n_101
  # DEBUG D#100ptD.0 => &D.71844
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.71845
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_471>
  _420 = MEM[(const intD.9 &)__mid$_M_cur_486];
  # .MEM_536 = VDEF <.MEM_471>
  *SR.2106_501 = _420;
  # DEBUG thisD.71852 => &__firstD.71845
  # PT = nonlocal escaped 
  __mid$_M_cur_421 = __mid$_M_cur_486 + 4;
  # DEBUG __firstD.72003 => __mid$_M_cur_421
  if (__mid$_M_cur_421 == __mid$_M_last_484)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 1, count 0, freq 93, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71856 => &__firstD.71845
  # PT = nonlocal escaped 
  __mid$_M_node_432 = __mid$_M_node_481 + 8;
  # DEBUG thisD.71858 => &__firstD.71845
  # DEBUG __new_nodeD.71857 => __mid$_M_node_432
  # DEBUG __first$_M_nodeD.72006 => __mid$_M_node_432
  # VUSE <.MEM_536>
  # PT = nonlocal escaped 
  __mid$_M_cur_433 = MEM[(intD.9 * *)__mid$_M_node_481 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __mid$_M_last_434 = __mid$_M_cur_433 + 512;
  # DEBUG __first$_M_lastD.72005 => __mid$_M_last_434
  # DEBUG __firstD.72003 => __mid$_M_cur_433
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 1380, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __mid$_M_cur_485 = PHI <__mid$_M_cur_421(40), __mid$_M_cur_433(41)>
  # PT = nonlocal escaped 
  # __mid$_M_last_483 = PHI <__mid$_M_last_484(40), __mid$_M_last_434(41)>
  # PT = nonlocal escaped 
  # __mid$_M_node_480 = PHI <__mid$_M_node_481(40), __mid$_M_node_432(41)>
  # DEBUG __first$_M_nodeD.72006 => __mid$_M_node_480
  # DEBUG __first$_M_lastD.72005 => __mid$_M_last_483
  # DEBUG __firstD.72003 => __mid$_M_cur_485
  # DEBUG thisD.71853 => &D.71844
  # PT = nonlocal escaped 
  _424 = SR.2106_501 + 4;
  if (_424 == SR.2107_499)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                44 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 93, maybe hot
;;    prev block 42, next block 44, flags: (NEW, REACHABLE)
;;    pred:       42 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.71860 => &D.71844
  # PT = nonlocal escaped 
  _436 = SR.2108_493 + 8;
  # DEBUG thisD.71862 => &D.71844
  # DEBUG __new_nodeD.71861 => _436
  # VUSE <.MEM_536>
  # PT = nonlocal escaped 
  _437 = MEM[(intD.9 * *)SR.2108_493 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _438 = _437 + 512;
;;    succ:       44 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 1380, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       42 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.2106_500 = PHI <_424(42), _437(43)>
  # PT = nonlocal escaped 
  # SR.2107_498 = PHI <SR.2107_499(42), _438(43)>
  # PT = nonlocal escaped 
  # SR.2108_492 = PHI <SR.2108_493(42), _436(43)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_426 = __n_101 + -1;
  # DEBUG __nD.71851 => __n_426
  # DEBUG __nD.71851 => __n_426
  if (__n_426 <= 0)
    goto <bb 45>;
  else
    goto <bb 46>;
;;    succ:       45 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                46 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 124, maybe hot
;;    prev block 44, next block 57, flags: (NEW)
;;    pred:       44 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_468 = PHI <.MEM_536(44)>
;;    succ:       57 [100.0%]  (FALLTHRU)

;;   basic block 57, loop depth 0, count 0, freq 124, maybe hot
;;    prev block 45, next block 46, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU)
  goto <bb 38>;
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 1256, maybe hot
;;    prev block 57, next block 47, flags: (NEW)
;;    pred:       44 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 1408, maybe hot
;;   Invalid sum of incoming frequencies 199, should be 1408
;;    prev block 46, next block 48, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_451 = PHI <.MEM_596(38), .MEM_155(22)>
  # .MEM_650 = VDEF <.MEM_451>
  D.71625 ={v} {CLOBBER};
  # .MEM_15 = VDEF <.MEM_650>
  D.47491 ={v} {CLOBBER};
  # DEBUG D#1144ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_curD.71865 => D#1144ptD.0
  # DEBUG D#1145ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_firstD.71866 => D#1145ptD.0
  # DEBUG D#1146ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_lastD.71867 => D#1146ptD.0
  # DEBUG D#1147ptD.0 => {CLOBBER}
  # DEBUG __mid$_M_nodeD.71868 => D#1147ptD.0
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 0, count 0, freq 2568, maybe hot
;;    prev block 47, next block 60, flags: (NEW, REACHABLE)
;;    pred:       2 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_4(D)(2), .MEM_15(47), .MEM_21(5)>
;;    succ:       60 [100.0%]  (FALLTHRU)

;;   basic block 60, loop depth 0, count 0, freq 2568, maybe hot
;;    prev block 48, next block 49, flags: (NEW)
;;    pred:       48 [100.0%]  (FALLTHRU)
  # VUSE <.MEM_1>
  return this_3(D);
;;    succ:       EXIT [100.0%] 

;;   basic block 49, loop depth 0, count 0, freq 549, maybe hot
;;   Invalid sum of incoming frequencies 704, should be 549
;;    prev block 60, next block 50, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _132 = _65 * 4;
  # PT = nonlocal escaped 
  __tmp$_M_cur_133 = SR.1978_37 + _132;
  # DEBUG __tmp$_M_curD.71893 => __tmp$_M_cur_133
  goto <bb 14>;
;;    succ:       14 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 894, maybe hot
;;   Invalid sum of incoming frequencies 704, should be 894
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       10 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_129 > 0)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 24, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       58 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  _207 = -_173;
  # RANGE [0, 18446744073709551615]
  __n.116_221 = (long unsigned intD.14) _207;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _222 = __n.116_221 * 4;
  # PT = nonlocal escaped 
  __new_start$_M_cur_223 = prephitmp_404 + _222;
  # DEBUG __tmp$_M_curD.71921 => __new_start$_M_cur_223
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       58 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_219 > 0)
    goto <bb 18>;
  else
    goto <bb 19>;
;;    succ:       18 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                19 [27.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 53, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       59 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _347 = __n_174 * 4;
  # PT = nonlocal escaped 
  __new_finish$_M_cur_348 = prephitmp_510 + _347;
  # DEBUG __tmp$_M_curD.71968 => __new_finish$_M_cur_348
  goto <bb 37>;
;;    succ:       37 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 87, maybe hot
;;    prev block 53, next block 1, flags: (NEW, REACHABLE)
;;    pred:       59 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  if (__offset_344 > 0)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [73.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [27.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<int>; _Alloc = std::allocator<std::queue<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<int>*, std::vector<std::queue<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<int>] (_ZNSt6vectorISt5queueIiSt5dequeIiSaIiEEESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_, funcdef_no=2585, decl_uid=41118, cgraph_uid=1052, symbol_order=1053)


Pass statistics:
----------------


Global statistics (BBS:220, LOOPS:27, CONDITIONS:94, STMTS:2844)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::queue<int>; _Alloc = std::allocator<std::queue<int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::queue<int>*, std::vector<std::queue<int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::queue<int>*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::queue<int>] (struct vectorD.40452 * const thisD.41119, struct iteratorD.40763 __positionD.41120, size_typeD.40771 __nD.41121, const struct value_typeD.40758 & __xD.41122)
Eh tree:
   11 must_not_throw
   10 cleanup land:{6,<L18>}
   9 try land:{20,<L38>},{19,<L37>},{5,<L13>} catch:{}
     29 try land:{18,<L34>} catch:{}
     28 cleanup land:{17,<L36>}
     27 must_not_throw
     26 try land:{16,<L31>} catch:{}
     25 cleanup land:{15,<L33>}
     24 must_not_throw
     23 try land:{14,<L28>} catch:{}
     22 cleanup land:{13,<L30>}
     21 must_not_throw
   2 cleanup land:{25,<L43>},{24,<L42>},{23,<L41>},{22,<L40>},{21,<L39>},{2,<L44>}
     20 try land:{12,<L25>} catch:{}
     19 cleanup land:{11,<L27>}
     18 must_not_throw
     17 try land:{10,<L22>} catch:{}
     16 cleanup land:{9,<L24>}
     15 must_not_throw
     14 try land:{8,<L19>} catch:{}
     13 cleanup land:{7,<L21>}
     12 must_not_throw
{
  intD.9 * * __first$_M_nodeD.73083;
  intD.9 * __first$_M_lastD.73082;
  intD.9 * const __firstD.73080;
  intD.9 * * SR.2208D.73079;
  intD.9 * SR.2207D.73078;
  intD.9 * SR.2206D.73077;
  intD.9 * * __first$24D.73076;
  intD.9 * __first$16D.73075;
  intD.9 * __first$8D.73074;
  intD.9 * __firstD.73073;
  intD.9 * * __first$_M_nodeD.73072;
  intD.9 * __first$_M_lastD.73071;
  intD.9 * const __firstD.73069;
  intD.9 * * SR.2198D.73068;
  intD.9 * SR.2197D.73067;
  intD.9 * SR.2196D.73066;
  intD.9 * * __first$24D.73065;
  intD.9 * __first$16D.73064;
  intD.9 * __first$8D.73063;
  intD.9 * __firstD.73062;
  intD.9 * * __first$_M_nodeD.73061;
  intD.9 * __first$_M_lastD.73060;
  intD.9 * const __firstD.73058;
  intD.9 * * SR.2188D.73057;
  intD.9 * SR.2187D.73056;
  intD.9 * SR.2186D.73055;
  intD.9 * * __first$24D.73054;
  intD.9 * __first$16D.73053;
  intD.9 * __first$8D.73052;
  intD.9 * __firstD.73051;
  intD.9 * * __first$_M_nodeD.73050;
  intD.9 * __first$_M_lastD.73049;
  intD.9 * const __firstD.73047;
  intD.9 * * SR.2178D.73046;
  intD.9 * SR.2177D.73045;
  intD.9 * SR.2176D.73044;
  intD.9 * * __first$24D.73043;
  intD.9 * __first$16D.73042;
  intD.9 * __first$8D.73041;
  intD.9 * __firstD.73040;
  intD.9 * * __first$_M_nodeD.73039;
  intD.9 * __first$_M_lastD.73038;
  intD.9 * const __firstD.73036;
  intD.9 * * SR.2168D.73035;
  intD.9 * SR.2167D.73034;
  intD.9 * SR.2166D.73033;
  intD.9 * * __first$24D.73032;
  intD.9 * __first$16D.73031;
  intD.9 * __first$8D.73030;
  intD.9 * __firstD.73029;
  intD.9 * * __first$_M_nodeD.73028;
  intD.9 * __first$_M_lastD.73027;
  intD.9 * const __firstD.73025;
  intD.9 * * SR.2158D.73024;
  intD.9 * SR.2157D.73023;
  intD.9 * SR.2156D.73022;
  intD.9 * * __first$24D.73021;
  intD.9 * __first$16D.73020;
  intD.9 * __first$8D.73019;
  intD.9 * __firstD.73018;
  intD.9 * * __first$_M_nodeD.73017;
  intD.9 * __first$_M_lastD.73016;
  intD.9 * const __firstD.73014;
  intD.9 * * SR.2148D.73013;
  intD.9 * SR.2147D.73012;
  intD.9 * SR.2146D.73011;
  intD.9 * * __first$24D.73010;
  intD.9 * __first$16D.73009;
  intD.9 * __first$8D.73008;
  intD.9 * __firstD.73007;
  intD.9 * * __nstartD.72983;
  _DistanceD.47812 __nD.72965;
  struct _Deque_iteratorD.42910 __firstD.72959;
  struct _Deque_iteratorD.42910 __lastD.72960;
  struct _Deque_iteratorD.42910 __lastD.72940;
  struct _Deque_iteratorD.42910 __firstD.72941;
  struct _Deque_iteratorD.42908 D.72958;
  intD.9 * __itD.72957;
  intD.9 * __it$8D.72956;
  intD.9 * __it$16D.72955;
  intD.9 * * __it$24D.72953;
  intD.9 * __itD.72952;
  intD.9 * __it$8D.72951;
  intD.9 * __it$16D.72950;
  intD.9 * * __it$24D.72948;
  struct _Deque_iteratorD.42910 __firstD.72934;
  struct _Deque_iteratorD.42910 __lastD.72935;
  struct _Deque_iteratorD.42908 D.72933;
  struct _Deque_iteratorD.42910 D.72932;
  struct _Deque_iteratorD.42910 D.72931;
  intD.9 * __itD.72930;
  intD.9 * __it$8D.72929;
  intD.9 * __it$16D.72928;
  intD.9 * * __it$24D.72927;
  intD.9 * __itD.72926;
  intD.9 * __it$8D.72925;
  intD.9 * __it$16D.72924;
  intD.9 * * __it$24D.72923;
  struct _Deque_iteratorD.42910 __firstD.72914;
  struct _Deque_iteratorD.42910 __lastD.72915;
  struct _Deque_iteratorD.42910 __lastD.72909;
  struct _Deque_iteratorD.42910 __firstD.72910;
  struct _Deque_iteratorD.42908 D.72913;
  struct _Deque_iteratorD.42910 __firstD.72900;
  struct _Deque_iteratorD.42910 __lastD.72901;
  struct _Deque_iteratorD.42908 D.72899;
  struct _Deque_iteratorD.42908 D.72898;
  struct _Deque_iteratorD.42910 __firstD.72892;
  struct _Deque_iteratorD.42910 __lastD.72893;
  struct _Deque_iteratorD.42908 D.72891;
  struct _Deque_iteratorD.42910 D.72890;
  struct _Deque_iteratorD.42910 D.72889;
  struct queueD.40450 * D.72865;
  struct queueD.40450 * __firstD.72849;
  struct queueD.40450 * __resultD.72851;
  _DistanceD.47812 __nD.72836;
  struct _Deque_iteratorD.42910 __firstD.72830;
  struct _Deque_iteratorD.42910 __lastD.72831;
  struct _Deque_iteratorD.42910 __lastD.72811;
  struct _Deque_iteratorD.42910 __firstD.72812;
  struct _Deque_iteratorD.42908 D.72829;
  intD.9 * __itD.72828;
  intD.9 * __it$8D.72827;
  intD.9 * __it$16D.72826;
  intD.9 * * __it$24D.72824;
  intD.9 * __itD.72823;
  intD.9 * __it$8D.72822;
  intD.9 * __it$16D.72821;
  intD.9 * * __it$24D.72819;
  struct _Deque_iteratorD.42910 __firstD.72805;
  struct _Deque_iteratorD.42910 __lastD.72806;
  struct _Deque_iteratorD.42908 D.72804;
  struct _Deque_iteratorD.42910 D.72803;
  struct _Deque_iteratorD.42910 D.72802;
  intD.9 * __itD.72801;
  intD.9 * __it$8D.72800;
  intD.9 * __it$16D.72799;
  intD.9 * * __it$24D.72798;
  intD.9 * __itD.72797;
  intD.9 * __it$8D.72796;
  intD.9 * __it$16D.72795;
  intD.9 * * __it$24D.72794;
  struct _Deque_iteratorD.42910 __firstD.72785;
  struct _Deque_iteratorD.42910 __lastD.72786;
  struct _Deque_iteratorD.42910 __lastD.72780;
  struct _Deque_iteratorD.42910 __firstD.72781;
  struct _Deque_iteratorD.42908 D.72784;
  struct _Deque_iteratorD.42910 __firstD.72771;
  struct _Deque_iteratorD.42910 __lastD.72772;
  struct _Deque_iteratorD.42908 D.72770;
  struct _Deque_iteratorD.42908 D.72769;
  struct _Deque_iteratorD.42910 __firstD.72763;
  struct _Deque_iteratorD.42910 __lastD.72764;
  struct _Deque_iteratorD.42908 D.72762;
  struct _Deque_iteratorD.42910 D.72761;
  struct _Deque_iteratorD.42910 D.72760;
  struct queueD.40450 * D.72736;
  struct queueD.40450 * __firstD.72720;
  struct queueD.40450 * __resultD.72722;
  _DistanceD.47812 __nD.72707;
  struct _Deque_iteratorD.42910 __firstD.72701;
  struct _Deque_iteratorD.42910 __lastD.72702;
  struct _Deque_iteratorD.42910 __lastD.72682;
  struct _Deque_iteratorD.42910 __firstD.72683;
  struct _Deque_iteratorD.42908 D.72700;
  intD.9 * __itD.72699;
  intD.9 * __it$8D.72698;
  intD.9 * __it$16D.72697;
  intD.9 * * __it$24D.72695;
  intD.9 * __itD.72694;
  intD.9 * __it$8D.72693;
  intD.9 * __it$16D.72692;
  intD.9 * * __it$24D.72690;
  struct _Deque_iteratorD.42910 __firstD.72676;
  struct _Deque_iteratorD.42910 __lastD.72677;
  struct _Deque_iteratorD.42908 D.72675;
  struct _Deque_iteratorD.42910 D.72674;
  struct _Deque_iteratorD.42910 D.72673;
  intD.9 * __itD.72672;
  intD.9 * __it$8D.72671;
  intD.9 * __it$16D.72670;
  intD.9 * * __it$24D.72669;
  intD.9 * __itD.72668;
  intD.9 * __it$8D.72667;
  intD.9 * __it$16D.72666;
  intD.9 * * __it$24D.72665;
  struct _Deque_iteratorD.42910 __firstD.72656;
  struct _Deque_iteratorD.42910 __lastD.72657;
  struct _Deque_iteratorD.42910 __lastD.72651;
  struct _Deque_iteratorD.42910 __firstD.72652;
  struct _Deque_iteratorD.42908 D.72655;
  struct _Deque_iteratorD.42910 __firstD.72642;
  struct _Deque_iteratorD.42910 __lastD.72643;
  struct _Deque_iteratorD.42908 D.72641;
  struct _Deque_iteratorD.42908 D.72640;
  struct _Deque_iteratorD.42910 __firstD.72634;
  struct _Deque_iteratorD.42910 __lastD.72635;
  struct _Deque_iteratorD.42908 D.72633;
  struct _Deque_iteratorD.42910 D.72632;
  struct _Deque_iteratorD.42910 D.72631;
  const long unsigned intD.14 D.72610;
  const size_typeD.40771 __lenD.72604;
  size_typeD.40771 D.72609;
  size_typeD.40771 __nD.72602;
  struct queueD.40450 * D.72600;
  struct queueD.40450 * D.72588;
  struct queueD.40450 * __firstD.72572;
  long unsigned intD.14 __nD.72573;
  intD.9 * * __nstartD.72550;
  _DistanceD.47812 __nD.72532;
  struct _Deque_iteratorD.42910 __firstD.72526;
  struct _Deque_iteratorD.42910 __lastD.72527;
  struct _Deque_iteratorD.42910 __lastD.72507;
  struct _Deque_iteratorD.42910 __firstD.72508;
  struct _Deque_iteratorD.42908 D.72525;
  intD.9 * __itD.72524;
  intD.9 * __it$8D.72523;
  intD.9 * __it$16D.72522;
  intD.9 * * __it$24D.72520;
  intD.9 * __itD.72519;
  intD.9 * __it$8D.72518;
  intD.9 * __it$16D.72517;
  intD.9 * * __it$24D.72515;
  struct _Deque_iteratorD.42910 __firstD.72501;
  struct _Deque_iteratorD.42910 __lastD.72502;
  struct _Deque_iteratorD.42908 D.72500;
  struct _Deque_iteratorD.42910 D.72499;
  struct _Deque_iteratorD.42910 D.72498;
  intD.9 * __itD.72497;
  intD.9 * __it$8D.72496;
  intD.9 * __it$16D.72495;
  intD.9 * * __it$24D.72494;
  intD.9 * __itD.72493;
  intD.9 * __it$8D.72492;
  intD.9 * __it$16D.72491;
  intD.9 * * __it$24D.72490;
  struct _Deque_iteratorD.42910 __firstD.72481;
  struct _Deque_iteratorD.42910 __lastD.72482;
  struct _Deque_iteratorD.42910 __lastD.72476;
  struct _Deque_iteratorD.42910 __firstD.72477;
  struct _Deque_iteratorD.42908 D.72480;
  struct _Deque_iteratorD.42910 __firstD.72467;
  struct _Deque_iteratorD.42910 __lastD.72468;
  struct _Deque_iteratorD.42908 D.72466;
  struct _Deque_iteratorD.42908 D.72465;
  struct _Deque_iteratorD.42910 __firstD.72459;
  struct _Deque_iteratorD.42910 __lastD.72460;
  struct _Deque_iteratorD.42908 D.72458;
  struct _Deque_iteratorD.42910 D.72457;
  struct _Deque_iteratorD.42910 D.72456;
  struct queueD.40450 * D.72432;
  struct queueD.40450 * __firstD.72416;
  struct queueD.40450 * __resultD.72418;
  _DistanceD.47812 __nD.72403;
  struct _Deque_iteratorD.42910 __firstD.72397;
  struct _Deque_iteratorD.42910 __lastD.72398;
  struct _Deque_iteratorD.42910 __lastD.72378;
  struct _Deque_iteratorD.42910 __firstD.72379;
  struct _Deque_iteratorD.42908 D.72396;
  intD.9 * __itD.72395;
  intD.9 * __it$8D.72394;
  intD.9 * __it$16D.72393;
  intD.9 * * __it$24D.72391;
  intD.9 * __itD.72390;
  intD.9 * __it$8D.72389;
  intD.9 * __it$16D.72388;
  intD.9 * * __it$24D.72386;
  struct _Deque_iteratorD.42910 __firstD.72372;
  struct _Deque_iteratorD.42910 __lastD.72373;
  struct _Deque_iteratorD.42908 D.72371;
  struct _Deque_iteratorD.42910 D.72370;
  struct _Deque_iteratorD.42910 D.72369;
  intD.9 * __itD.72368;
  intD.9 * __it$8D.72367;
  intD.9 * __it$16D.72366;
  intD.9 * * __it$24D.72365;
  intD.9 * __itD.72364;
  intD.9 * __it$8D.72363;
  intD.9 * __it$16D.72362;
  intD.9 * * __it$24D.72361;
  struct _Deque_iteratorD.42910 __firstD.72352;
  struct _Deque_iteratorD.42910 __lastD.72353;
  struct _Deque_iteratorD.42910 __lastD.72347;
  struct _Deque_iteratorD.42910 __firstD.72348;
  struct _Deque_iteratorD.42908 D.72351;
  struct _Deque_iteratorD.42910 __firstD.72338;
  struct _Deque_iteratorD.42910 __lastD.72339;
  struct _Deque_iteratorD.42908 D.72337;
  struct _Deque_iteratorD.42908 D.72336;
  struct _Deque_iteratorD.42910 __firstD.72330;
  struct _Deque_iteratorD.42910 __lastD.72331;
  struct _Deque_iteratorD.42908 D.72329;
  struct _Deque_iteratorD.42910 D.72328;
  struct _Deque_iteratorD.42910 D.72327;
  struct queueD.40450 * D.72303;
  struct queueD.40450 * __firstD.72287;
  long unsigned intD.14 __nD.72288;
  _DistanceD.47812 __nD.72274;
  struct _Deque_iteratorD.42910 __firstD.72268;
  struct _Deque_iteratorD.42910 __lastD.72269;
  struct _Deque_iteratorD.42910 __lastD.72249;
  struct _Deque_iteratorD.42910 __firstD.72250;
  struct _Deque_iteratorD.42908 D.72267;
  intD.9 * __itD.72266;
  intD.9 * __it$8D.72265;
  intD.9 * __it$16D.72264;
  intD.9 * * __it$24D.72262;
  intD.9 * __itD.72261;
  intD.9 * __it$8D.72260;
  intD.9 * __it$16D.72259;
  intD.9 * * __it$24D.72257;
  struct _Deque_iteratorD.42910 __firstD.72243;
  struct _Deque_iteratorD.42910 __lastD.72244;
  struct _Deque_iteratorD.42908 D.72242;
  struct _Deque_iteratorD.42910 D.72241;
  struct _Deque_iteratorD.42910 D.72240;
  intD.9 * __itD.72239;
  intD.9 * __it$8D.72238;
  intD.9 * __it$16D.72237;
  intD.9 * * __it$24D.72236;
  intD.9 * __itD.72235;
  intD.9 * __it$8D.72234;
  intD.9 * __it$16D.72233;
  intD.9 * * __it$24D.72232;
  struct _Deque_iteratorD.42910 __firstD.72223;
  struct _Deque_iteratorD.42910 __lastD.72224;
  struct _Deque_iteratorD.42910 __lastD.72218;
  struct _Deque_iteratorD.42910 __firstD.72219;
  struct _Deque_iteratorD.42908 D.72222;
  struct _Deque_iteratorD.42910 __firstD.72209;
  struct _Deque_iteratorD.42910 __lastD.72210;
  struct _Deque_iteratorD.42908 D.72208;
  struct _Deque_iteratorD.42908 D.72207;
  struct _Deque_iteratorD.42910 __firstD.72201;
  struct _Deque_iteratorD.42910 __lastD.72202;
  struct _Deque_iteratorD.42908 D.72200;
  struct _Deque_iteratorD.42910 D.72199;
  struct _Deque_iteratorD.42910 D.72198;
  struct queueD.40450 * D.72174;
  struct queueD.40450 * __firstD.72158;
  struct queueD.40450 * __resultD.72160;
  _DistanceD.47812 __nD.72145;
  struct _Deque_iteratorD.42910 __firstD.72139;
  struct _Deque_iteratorD.42910 __lastD.72140;
  struct _Deque_iteratorD.42910 __lastD.72120;
  struct _Deque_iteratorD.42910 __firstD.72121;
  struct _Deque_iteratorD.42908 D.72138;
  intD.9 * __itD.72137;
  intD.9 * __it$8D.72136;
  intD.9 * __it$16D.72135;
  intD.9 * * __it$24D.72133;
  intD.9 * __itD.72132;
  intD.9 * __it$8D.72131;
  intD.9 * __it$16D.72130;
  intD.9 * * __it$24D.72128;
  struct _Deque_iteratorD.42910 __firstD.72114;
  struct _Deque_iteratorD.42910 __lastD.72115;
  struct _Deque_iteratorD.42908 D.72113;
  struct _Deque_iteratorD.42910 D.72112;
  struct _Deque_iteratorD.42910 D.72111;
  intD.9 * __itD.72110;
  intD.9 * __it$8D.72109;
  intD.9 * __it$16D.72108;
  intD.9 * * __it$24D.72107;
  intD.9 * __itD.72106;
  intD.9 * __it$8D.72105;
  intD.9 * __it$16D.72104;
  intD.9 * * __it$24D.72103;
  struct _Deque_iteratorD.42910 __firstD.72094;
  struct _Deque_iteratorD.42910 __lastD.72095;
  struct _Deque_iteratorD.42910 __lastD.72089;
  struct _Deque_iteratorD.42910 __firstD.72090;
  struct _Deque_iteratorD.42908 D.72093;
  struct _Deque_iteratorD.42910 __firstD.72080;
  struct _Deque_iteratorD.42910 __lastD.72081;
  struct _Deque_iteratorD.42908 D.72079;
  struct _Deque_iteratorD.42908 D.72078;
  struct _Deque_iteratorD.42910 __firstD.72072;
  struct _Deque_iteratorD.42910 __lastD.72073;
  struct _Deque_iteratorD.42908 D.72071;
  struct _Deque_iteratorD.42910 D.72070;
  struct _Deque_iteratorD.42910 D.72069;
  struct queueD.40450 * const __positionD.61968;
  struct queueD.40450 * __firstD.61932;
  struct queueD.40450 * __firstD.61917;
  struct queueD.40450 * __firstD.61837;
  struct queueD.40450 * __firstD.61794;
  difference_typeD.44844 __nD.61788;
  struct queueD.40450 * __lastD.61773;
  struct queueD.40450 * __new_finishD.46204;
  const size_typeD.40771 __elems_beforeD.46201;
  struct queueD.40450 * __old_finishD.46176;
  const size_typeD.40771 __elems_afterD.46168;
  struct value_typeD.40758 __x_copyD.46166;
  struct queueD.40450 * _10;
  long intD.12 _11;
  struct queueD.40450 * _12;
  long intD.12 _13;
  long intD.12 _14;
  long intD.12 _15;
  long unsigned intD.14 _16;
  intD.9 * * _17;
  long intD.12 __last.100_21;
  struct queueD.40450 * const _24;
  long unsigned intD.14 _27;
  difference_typeD.44849 _30;
  long intD.12 _31;
  long unsigned intD.14 _33;
  long intD.12 _35;
  struct queueD.40450 * _36;
  long intD.12 _37;
  struct queueD.40450 * _45;
  voidD.45 * _47;
  sizetype _49;
  sizetype _50;
  struct queueD.40450 * _51;
  struct queueD.40450 * pretmp_53;
  const struct dequeD.40449 * _56;
  long unsigned intD.14 _59;
  sizetype _60;
  struct queueD.40450 * _63;
  struct queueD.40450 * _67;
  struct queueD.40450 * prephitmp_69;
  long intD.12 _73;
  struct queueD.40450 * _74;
  long unsigned intD.14 _75;
  struct queueD.40450 * _76;
  struct dequeD.40449 * _80;
  struct dequeD.40449 * _83;
  struct dequeD.40449 * _87;
  boolD.2757 _93;
  struct _Deque_baseD.42881 * _97;
  struct _Deque_baseD.42881 * _100;
  intD.9 * * prephitmp_107;
  intD.9 * * _110;
  intD.9 * * _111;
  intD.9 * * _124;
  intD.9 * * _127;
  intD.9 * * _128;
  intD.9 * * _136;
  long intD.12 _137;
  intD.9 * * _138;
  long intD.12 _139;
  long intD.12 _140;
  long intD.12 _141;
  long intD.12 _142;
  long intD.12 _143;
  intD.9 * _144;
  long intD.12 _145;
  intD.9 * _146;
  long intD.12 _147;
  long intD.12 _148;
  long intD.12 _149;
  long intD.12 _150;
  intD.9 * _151;
  long intD.12 _152;
  intD.9 * _153;
  long intD.12 _154;
  long intD.12 _155;
  long intD.12 _156;
  difference_typeD.42938 _157;
  size_typeD.43117 _158;
  intD.9 * _160;
  intD.9 * _162;
  intD.9 * * _163;
  intD.9 * _164;
  intD.9 * _165;
  intD.9 * * _167;
  long intD.12 _204;
  long intD.12 _206;
  long intD.12 _207;
  long intD.12 _208;
  long intD.12 _209;
  long intD.12 _210;
  long intD.12 _212;
  long intD.12 _214;
  long intD.12 _215;
  long intD.12 _216;
  long intD.12 _217;
  long intD.12 _219;
  long intD.12 _221;
  long intD.12 _222;
  long intD.12 _223;
  intD.9 _228;
  intD.9 * _232;
  intD.9 * * _244;
  intD.9 * _245;
  intD.9 * _246;
  struct queueD.40450 * prephitmp_247;
  voidD.45 * _253;
  struct _Deque_baseD.42881 * _255;
  long intD.12 _257;
  intD.9 * * _258;
  long intD.12 _259;
  long intD.12 _260;
  long intD.12 _261;
  long intD.12 _262;
  long intD.12 _263;
  intD.9 * _264;
  long intD.12 _265;
  intD.9 * _266;
  long intD.12 _267;
  long intD.12 _268;
  long intD.12 _269;
  long intD.12 _270;
  intD.9 * _271;
  long intD.12 _272;
  intD.9 * _273;
  long intD.12 _274;
  long intD.12 _275;
  long intD.12 _276;
  difference_typeD.42938 _277;
  size_typeD.43117 _278;
  struct _Deque_baseD.42881 * _279;
  intD.9 * _280;
  intD.9 * _282;
  intD.9 * * _283;
  intD.9 * _284;
  intD.9 * _285;
  intD.9 * * _287;
  long intD.12 _325;
  long intD.12 _327;
  long intD.12 _328;
  long intD.12 _329;
  long intD.12 _330;
  long intD.12 _331;
  long intD.12 _333;
  long intD.12 _335;
  long intD.12 _336;
  long intD.12 _337;
  long intD.12 _338;
  long intD.12 _340;
  long intD.12 _342;
  long intD.12 _343;
  long intD.12 _344;
  intD.9 _349;
  intD.9 * _353;
  intD.9 * * _365;
  intD.9 * _366;
  intD.9 * _367;
  voidD.45 * _374;
  struct _Deque_baseD.42881 * _376;
  long intD.12 _378;
  intD.9 * * _379;
  long intD.12 _380;
  long intD.12 _381;
  long intD.12 _382;
  long intD.12 _383;
  long intD.12 _384;
  intD.9 * _385;
  long intD.12 _386;
  intD.9 * _387;
  long intD.12 _388;
  long intD.12 _389;
  long intD.12 _390;
  long intD.12 _391;
  intD.9 * _392;
  long intD.12 _393;
  intD.9 * _394;
  long intD.12 _395;
  long intD.12 _396;
  long intD.12 _397;
  difference_typeD.42938 _398;
  size_typeD.43117 _399;
  struct _Deque_baseD.42881 * _400;
  intD.9 * _401;
  intD.9 * _403;
  intD.9 * * _404;
  intD.9 * _405;
  intD.9 * _406;
  intD.9 * * _408;
  long intD.12 _446;
  long intD.12 _448;
  long intD.12 _449;
  long intD.12 _450;
  long intD.12 _451;
  long intD.12 _452;
  long intD.12 _454;
  long intD.12 _456;
  long intD.12 _457;
  long intD.12 _458;
  long intD.12 _459;
  long intD.12 _461;
  long intD.12 _463;
  long intD.12 _464;
  long intD.12 _465;
  intD.9 _470;
  intD.9 * _474;
  intD.9 * * _486;
  intD.9 * _487;
  intD.9 * _488;
  voidD.45 * _495;
  struct queueD.40450 * pretmp_496;
  struct _Deque_baseD.42881 * _497;
  long intD.12 _499;
  intD.9 * * _500;
  long intD.12 _501;
  long intD.12 _502;
  long intD.12 _503;
  long intD.12 _504;
  long intD.12 _505;
  intD.9 * _506;
  long intD.12 _507;
  intD.9 * _508;
  long intD.12 _509;
  long intD.12 _510;
  long intD.12 _511;
  long intD.12 _512;
  intD.9 * _513;
  long intD.12 _514;
  intD.9 * _515;
  long intD.12 _516;
  long intD.12 _517;
  long intD.12 _518;
  difference_typeD.42938 _519;
  size_typeD.43117 _520;
  struct _Deque_baseD.42881 * _521;
  intD.9 * _522;
  intD.9 * _524;
  intD.9 * * _525;
  intD.9 * _526;
  intD.9 * _527;
  intD.9 * * _529;
  long intD.12 _567;
  long intD.12 _569;
  long intD.12 _570;
  long intD.12 _571;
  long intD.12 _572;
  long intD.12 _573;
  long intD.12 _575;
  long intD.12 _577;
  long intD.12 _578;
  long intD.12 _579;
  long intD.12 _580;
  long intD.12 _582;
  long intD.12 _584;
  long intD.12 _585;
  long intD.12 _586;
  intD.9 _591;
  intD.9 * _595;
  intD.9 * * _607;
  intD.9 * _608;
  intD.9 * _609;
  intD.9 * * _610;
  intD.9 * * _611;
  intD.9 * * _612;
  intD.9 * _615;
  voidD.45 * _623;
  struct _Deque_baseD.42881 * _625;
  struct queueD.40450 * _627;
  long intD.12 _631;
  long intD.12 _632;
  long intD.12 _633;
  long unsigned intD.14 _635;
  long intD.12 _641;
  intD.9 * * _642;
  long intD.12 _643;
  long intD.12 _644;
  long intD.12 _645;
  long intD.12 _646;
  long intD.12 _647;
  intD.9 * _648;
  long intD.12 _649;
  intD.9 * _650;
  long intD.12 _651;
  long intD.12 _652;
  long intD.12 _653;
  long intD.12 _654;
  intD.9 * _655;
  long intD.12 _656;
  intD.9 * _657;
  long intD.12 _658;
  long intD.12 _659;
  long intD.12 _660;
  difference_typeD.42938 _661;
  size_typeD.43117 _662;
  struct _Deque_baseD.42881 * _663;
  intD.9 * _664;
  intD.9 * _666;
  intD.9 * * _667;
  intD.9 * _668;
  intD.9 * _669;
  intD.9 * * _671;
  long unsigned intD.14 _676;
  long unsigned intD.14 prephitmp_678;
  boolD.2757 _679;
  long intD.12 _697;
  difference_typeD.44849 _703;
  long intD.12 _707;
  long intD.12 _708;
  long intD.12 _709;
  long intD.12 _711;
  long intD.12 _712;
  long intD.12 _713;
  long intD.12 _714;
  long intD.12 _715;
  long intD.12 _717;
  long intD.12 _719;
  long intD.12 _720;
  long intD.12 _721;
  long intD.12 _722;
  long intD.12 _724;
  long intD.12 _726;
  long intD.12 _727;
  long intD.12 _728;
  intD.9 _733;
  intD.9 * _737;
  voidD.45 * _741;
  intD.9 * * _749;
  intD.9 * _750;
  intD.9 * _751;
  voidD.45 * _758;
  struct _Deque_baseD.42881 * _760;
  long intD.12 _762;
  intD.9 * * _763;
  long intD.12 _764;
  long intD.12 _765;
  long intD.12 _766;
  long intD.12 _767;
  long intD.12 _768;
  intD.9 * _769;
  long intD.12 _770;
  intD.9 * _771;
  long intD.12 _772;
  long intD.12 _773;
  long intD.12 _774;
  long intD.12 _775;
  intD.9 * _776;
  long intD.12 _777;
  intD.9 * _778;
  long intD.12 _779;
  long intD.12 _780;
  long intD.12 _781;
  difference_typeD.42938 _782;
  size_typeD.43117 _783;
  struct _Deque_baseD.42881 * _784;
  intD.9 * _785;
  intD.9 * _787;
  intD.9 * * _788;
  intD.9 * _789;
  intD.9 * _790;
  intD.9 * * _792;
  boolD.2757 _827;
  long intD.12 _830;
  long intD.12 _832;
  long intD.12 _833;
  long intD.12 _834;
  long intD.12 _835;
  long intD.12 _836;
  long intD.12 _838;
  long intD.12 _840;
  long intD.12 _841;
  long intD.12 _842;
  long intD.12 _843;
  long intD.12 _845;
  long intD.12 _847;
  long intD.12 _848;
  long intD.12 _849;
  intD.9 * * pretmp_853;
  intD.9 _854;
  intD.9 * _858;
  intD.9 * * _870;
  intD.9 * _871;
  intD.9 * _872;
  voidD.45 * _879;
  struct _Deque_baseD.42881 * _881;
  long intD.12 _883;
  intD.9 * * _884;
  long intD.12 _885;
  long intD.12 _886;
  long intD.12 _887;
  long intD.12 _888;
  long intD.12 _889;
  intD.9 * _890;
  long intD.12 _891;
  intD.9 * _892;
  long intD.12 _893;
  long intD.12 _894;
  long intD.12 _895;
  long intD.12 _896;
  intD.9 * _897;
  long intD.12 _898;
  intD.9 * _899;
  long intD.12 _900;
  long intD.12 _901;
  long intD.12 _902;
  difference_typeD.42938 _903;
  size_typeD.43117 _904;
  struct _Deque_baseD.42881 * _905;
  intD.9 * _906;
  intD.9 * _908;
  intD.9 * * _909;
  intD.9 * _910;
  intD.9 * _911;
  intD.9 * * _913;
  long intD.12 _938;
  long intD.12 _939;
  long intD.12 _940;
  difference_typeD.44849 _941;
  long intD.12 _951;
  long intD.12 _953;
  long intD.12 _954;
  long intD.12 _955;
  long intD.12 _956;
  long intD.12 _957;
  long intD.12 _959;
  long intD.12 _961;
  long intD.12 _962;
  long intD.12 _963;
  long intD.12 _964;
  long intD.12 _966;
  long intD.12 _968;
  long intD.12 _969;
  long intD.12 _970;
  intD.9 _975;
  intD.9 * _979;
  intD.9 * * _991;
  intD.9 * _992;
  intD.9 * _993;
  intD.9 * * _994;
  intD.9 * * _995;
  intD.9 * * _996;
  intD.9 * _999;
  struct queueD.40450 * pretmp_1005;
  long unsigned intD.14 pretmp_1336;
  long unsigned intD.14 prephitmp_1337;
  intD.9 * * pretmp_1338;
  intD.9 * * prephitmp_1339;
  struct queueD.40450 * prephitmp_1354;
  long unsigned intD.14 _1490;
  struct queueD.40450 * _1494;
  voidD.45 * _1627;

;;   basic block 2, loop depth 0, count 0, freq 139, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#1186ptD.0 => MEM[(struct __normal_iteratorD.40764 *)&__positionD.41120]
  # DEBUG __positionD.61968 => D#1186ptD.0
  if (__n_7(D) != 0)
    goto <bb 3>;
  else
    goto <bb 198>;
;;    succ:       3 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                198 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 85, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_8(D)>
  # PT = nonlocal 
  __position_23 = MEM[(struct __normal_iteratorD.40764 *)&__positionD.41120];
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _10 = this_9(D)->D.41195._M_implD.40686._M_end_of_storageD.40690;
  _11 = (long intD.12) _10;
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _12 = this_9(D)->D.41195._M_implD.40686._M_finishD.40689;
  _13 = (long intD.12) _12;
  _14 = _11 - _13;
  # RANGE [-115292150460684697, 115292150460684697]
  _15 = _14 /[ex] 80;
  # RANGE ~[115292150460684698, 18331451923248866918]
  _16 = (long unsigned intD.14) _15;
  if (__n_7(D) <= _16)
    goto <bb 4>;
  else
    goto <bb 111>;
;;    succ:       4 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                111 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.61745 => &__x_copyD.46166
  # DEBUG D.61746 => __x_29(D)
  # DEBUG D#1158ptD.0 => &MEM[(const struct queueD.40450 &)__x_29(D)].cD.43633
  # DEBUG thisD.72049 => &__x_copyD.46166.cD.43633
  # DEBUG __xD.72050 => D#1158ptD.0
  # DEBUG thisD.72051 => D#1158ptD.0
  # DEBUG D#174ptD.0 => &D#1158ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &D#1158ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.72053 => D#175ptD.0
  # DEBUG __yD.72052 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _136 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 48]._M_nodeD.42943;
  _137 = (long intD.12) _136;
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _138 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 16]._M_nodeD.42943;
  _139 = (long intD.12) _138;
  _140 = _137 - _139;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _141 = _140 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _142 = _141 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _143 = _142 * 128;
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _144 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 48]._M_curD.42940;
  _145 = (long intD.12) _144;
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _146 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 48]._M_firstD.42941;
  _147 = (long intD.12) _146;
  _148 = _145 - _147;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _149 = _148 /[ex] 4;
  _150 = _143 + _149;
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _151 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 16]._M_lastD.42942;
  _152 = (long intD.12) _151;
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _153 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 16]._M_curD.42940;
  _154 = (long intD.12) _153;
  _155 = _152 - _154;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _156 = _155 /[ex] 4;
  _157 = _150 + _156;
  # RANGE [0, 18446744073709551615]
  _158 = (size_typeD.43117) _157;
  # DEBUG D#604ptD.0 => &D#1158ptD.0->D.43590
  # DEBUG thisD.60602 => D#604ptD.0
  # DEBUG __aD.60600 => NULL
  # DEBUG thisD.72056 => &MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590
  # DEBUG __aD.72055 => NULL
  # DEBUG __num_elementsD.72054 => _158
  # DEBUG D#484ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041
  # DEBUG thisD.72058 => D#484ptD.0
  # DEBUG __aD.72057 => NULL
  # DEBUG thisD.55193 => D#484ptD.0
  # DEBUG __aD.55194 => NULL
  # DEBUG thisD.55188 => D#484ptD.0
  # DEBUG D.55189 => NULL
  # .MEM_1341 = VDEF <.MEM_8(D)>
  MEM[(struct _Deque_implD.43009 *)&__x_copyD.46166]._M_mapD.43043 = 0B;
  # .MEM_1342 = VDEF <.MEM_1341>
  MEM[(struct _Deque_implD.43009 *)&__x_copyD.46166]._M_map_sizeD.43044 = 0;
  # DEBUG D#241ptD.0 => &D#484ptD.0->_M_startD.43045
  # DEBUG thisD.72059 => D#241ptD.0
  # .MEM_1343 = VDEF <.MEM_1342>
  MEM[(struct _Deque_iteratorD.42908 *)&__x_copyD.46166 + 16B]._M_curD.42940 = 0B;
  # .MEM_1344 = VDEF <.MEM_1343>
  MEM[(struct _Deque_iteratorD.42908 *)&__x_copyD.46166 + 16B]._M_firstD.42941 = 0B;
  # .MEM_1345 = VDEF <.MEM_1344>
  MEM[(struct _Deque_iteratorD.42908 *)&__x_copyD.46166 + 16B]._M_lastD.42942 = 0B;
  # .MEM_1346 = VDEF <.MEM_1345>
  MEM[(struct _Deque_iteratorD.42908 *)&__x_copyD.46166 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#240ptD.0 => &D#484ptD.0->_M_finishD.43046
  # DEBUG thisD.72060 => D#240ptD.0
  # .MEM_1347 = VDEF <.MEM_1346>
  MEM[(struct _Deque_iteratorD.42908 *)&__x_copyD.46166 + 48B]._M_curD.42940 = 0B;
  # .MEM_1348 = VDEF <.MEM_1347>
  MEM[(struct _Deque_iteratorD.42908 *)&__x_copyD.46166 + 48B]._M_firstD.42941 = 0B;
  # .MEM_1349 = VDEF <.MEM_1348>
  MEM[(struct _Deque_iteratorD.42908 *)&__x_copyD.46166 + 48B]._M_lastD.42942 = 0B;
  # .MEM_1350 = VDEF <.MEM_1349>
  MEM[(struct _Deque_iteratorD.42908 *)&__x_copyD.46166 + 48B]._M_nodeD.42943 = 0B;
  # .MEM_1351 = VDEF <.MEM_1350>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (&MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590, _158);
  # DEBUG D#605ptD.0 => &MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590
  # DEBUG thisD.60590 => D#605ptD.0
  # DEBUG D#606ptD.0 => &MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72062 => &D.72071
  # DEBUG __xD.72061 => D#606ptD.0
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped null 
  _160 = MEM[(const struct iteratorD.42928 &)&__x_copyD.46166 + 16]._M_curD.42940;
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped null 
  _162 = MEM[(const struct iteratorD.42928 &)&__x_copyD.46166 + 16]._M_lastD.42942;
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped null 
  _163 = MEM[(const struct iteratorD.42928 &)&__x_copyD.46166 + 16]._M_nodeD.42943;
  # DEBUG thisD.72063 => D#1158ptD.0
  # DEBUG D#83ptD.0 => &D#1158ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.72065 => &D.72070
  # DEBUG __xD.72064 => D#83ptD.0
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped 
  _164 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 48]._M_curD.42940;
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped 
  _165 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 48]._M_firstD.42941;
  # DEBUG D#1174ptD.0 => MEM[(const struct iteratorD.44725 &)__x_29(D) + 48]._M_lastD.42942
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped 
  _167 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 48]._M_nodeD.42943;
  # DEBUG thisD.72066 => D#1158ptD.0
  # DEBUG D#84ptD.0 => &D#1158ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72068 => &D.72069
  # DEBUG __xD.72067 => D#84ptD.0
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped 
  __first_168 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 16]._M_curD.42940;
  # DEBUG D#1181ptD.0 => MEM[(const struct iteratorD.44725 &)__x_29(D) + 16]._M_firstD.42941
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped 
  __first$_M_last_170 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 16]._M_lastD.42942;
  # VUSE <.MEM_1351>
  # PT = nonlocal escaped 
  __first$_M_node_171 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 16]._M_nodeD.42943;
  # DEBUG __resultD.72074 => &D.72071
  # DEBUG D.72075 => D#603ptD.0
  # DEBUG thisD.72077 => &D.72079
  # DEBUG __xD.72076 => &D.72071
  # DEBUG __resultD.72082 => &D.72079
  # DEBUG __assignableD.72085 => 1
  # DEBUG thisD.72087 => NULL
  # DEBUG __xD.72086 => &D.72079
  # DEBUG __resultD.72088 => NULL
  # DEBUG thisD.72092 => &D.72093
  # DEBUG __xD.72091 => NULL
  # DEBUG __resultD.72096 => &D.72093
  # DEBUG thisD.72098 => &D.72113
  # DEBUG __xD.72097 => &D.72093
  # DEBUG __itD.72106 => _164
  # DEBUG __it$8D.72105 => _165
  # DEBUG __it$16D.72104 => D#1174ptD.0
  # DEBUG __it$24D.72103 => _167
  # DEBUG __it$_M_curD.60535 => _164
  # DEBUG __it$_M_firstD.60534 => _165
  # DEBUG __it$_M_lastD.60533 => D#1174ptD.0
  # DEBUG __it$_M_nodeD.60532 => _167
  # DEBUG __itD.72110 => __first_168
  # DEBUG __it$8D.72109 => D#1181ptD.0
  # DEBUG __it$16D.72108 => __first$_M_last_170
  # DEBUG __it$24D.72107 => __first$_M_node_171
  # DEBUG __it$_M_curD.60529 => __first_168
  # DEBUG __it$_M_firstD.60528 => D#1181ptD.0
  # DEBUG __it$_M_lastD.60527 => __first$_M_last_170
  # DEBUG __it$_M_nodeD.60526 => __first$_M_node_171
  # DEBUG __resultD.72116 => &D.72113
  # DEBUG thisD.72118 => NULL
  # DEBUG __xD.72117 => &D.72113
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.72132 => _164
  # DEBUG __it$8D.72131 => _165
  # DEBUG __it$16D.72130 => D#1174ptD.0
  # DEBUG __it$24D.72128 => _167
  # DEBUG __it$_M_curD.60489 => _164
  # DEBUG __it$_M_firstD.60488 => _165
  # DEBUG __it$_M_lastD.60487 => D#1174ptD.0
  # DEBUG __it$_M_nodeD.60486 => _167
  # DEBUG __itD.72137 => __first_168
  # DEBUG __it$8D.72136 => D#1181ptD.0
  # DEBUG __it$16D.72135 => __first$_M_last_170
  # DEBUG __it$24D.72133 => __first$_M_node_171
  # DEBUG __it$_M_curD.60483 => __first_168
  # DEBUG __it$_M_firstD.60482 => D#1181ptD.0
  # DEBUG __it$_M_lastD.60481 => __first$_M_last_170
  # DEBUG __it$_M_nodeD.60480 => __first$_M_node_171
  # DEBUG __firstD.73007 => __first_168
  # DEBUG __first$8D.73008 => D#1181ptD.0
  # DEBUG __first$16D.73009 => __first$_M_last_170
  # DEBUG __first$24D.73010 => __first$_M_node_171
  # DEBUG __resultD.72119 => NULL
  # DEBUG __simpleD.72125 => 0
  # DEBUG thisD.72127 => &D.72138
  # DEBUG __xD.72126 => NULL
  # DEBUG __firstD.73014 => __first_168
  # DEBUG __first$_M_firstD.73015 => D#1181ptD.0
  # DEBUG __first$_M_lastD.73016 => __first$_M_last_170
  # DEBUG __first$_M_nodeD.73017 => __first$_M_node_171
  # DEBUG __resultD.72141 => &D.72138
  # DEBUG __xD.72149 => &__lastD.72140
  # DEBUG __yD.72148 => &__firstD.72139
  # DEBUG __sizeD.60431 => 4
  _204 = (long intD.12) _167;
  _206 = (long intD.12) __first$_M_node_171;
  _207 = _204 - _206;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _208 = _207 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _209 = _208 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _210 = _209 * 128;
  _212 = (long intD.12) _164;
  _214 = (long intD.12) _165;
  _215 = _212 - _214;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _216 = _215 /[ex] 4;
  _217 = _210 + _216;
  _219 = (long intD.12) __first$_M_last_170;
  _221 = (long intD.12) __first_168;
  _222 = _219 - _221;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _223 = _222 /[ex] 4;
  __n_224 = _217 + _223;
  # DEBUG __nD.72145 => __n_224
  # DEBUG __nD.72145 => __n_224
  if (__n_224 <= 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 43, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1715 = PHI <.MEM_1351(4), .MEM_1389(12)>
  # DEBUG thisD.72144 => &D.72078
  # DEBUG __xD.72143 => &D.72138
  # .MEM_1423 = VDEF <.MEM_1715>
  D.72138 ={v} {CLOBBER};
  # .MEM_1424 = VDEF <.MEM_1423>
  D.72113 ={v} {CLOBBER};
  # .MEM_1425 = VDEF <.MEM_1424>
  D.72093 ={v} {CLOBBER};
  # .MEM_1426 = VDEF <.MEM_1425>
  D.72079 ={v} {CLOBBER};
  # .MEM_1427 = VDEF <.MEM_1426>
  D.72071 ={v} {CLOBBER};
  # DEBUG thisD.61750 => this_9(D)
  # DEBUG D#85ptD.0 => &this_9(D)->D.41195._M_implD.40686._M_finishD.40689
  # DEBUG thisD.61752 => NULL
  # DEBUG __iD.61751 => D#85ptD.0
  # VUSE <.MEM_1427>
  # PT = nonlocal escaped 
  __old_finish_26 = MEM[(struct queueD.40450 * const &)this_9(D) + 8];
  # DEBUG __lhsD.61747 => &D.46169
  # DEBUG __rhsD.61748 => &__positionD.41120
  # DEBUG thisD.54352 => &D.46169
  _37 = (long intD.12) __old_finish_26;
  # DEBUG thisD.54350 => &__positionD.41120
  _35 = (long intD.12) __position_23;
  _31 = _37 - _35;
  # RANGE [-115292150460684697, 115292150460684697]
  _30 = _31 /[ex] 80;
  # RANGE ~[115292150460684698, 18331451923248866918]
  __elems_after_57 = (const size_typeD.40771) _30;
  # DEBUG __elems_afterD.46168 => __elems_after_57
  # DEBUG __old_finishD.46176 => __old_finish_26
  if (__n_7(D) < __elems_after_57)
    goto <bb 14>;
  else
    goto <bb 50>;
;;    succ:       14 [50.0%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [50.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 38, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 1, count 0, freq 429, maybe hot
;;    prev block 6, next block 8, flags: (NEW)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_620 = PHI <.MEM_1351(6), .MEM_1408(13)>
  # __n_250 = PHI <__n_224(6), __n_234(13)>
  # PT = nonlocal escaped null 
  # SR.2146_1317 = PHI <_160(6), SR.2146_1316(13)>
  # PT = nonlocal escaped null 
  # SR.2147_1314 = PHI <_162(6), SR.2147_1313(13)>
  # PT = nonlocal escaped null 
  # SR.2148_1312 = PHI <_163(6), SR.2148_1311(13)>
  # PT = nonlocal escaped 
  # __first_1309 = PHI <__first_168(6), __first_1308(13)>
  # PT = nonlocal escaped 
  # __first$_M_last_1305 = PHI <__first$_M_last_170(6), __first$_M_last_1304(13)>
  # PT = nonlocal escaped 
  # __first$_M_node_1303 = PHI <__first$_M_node_171(6), __first$_M_node_1301(13)>
  # DEBUG __first$_M_nodeD.73017 => __first$_M_node_1303
  # DEBUG __first$_M_lastD.73016 => __first$_M_last_1305
  # DEBUG __firstD.73014 => __first_1309
  # DEBUG __nD.72145 => __n_250
  # DEBUG D#100ptD.0 => &D.72138
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.72139
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_620>
  _228 = MEM[(const intD.9 &)__first_1309];
  # .MEM_1408 = VDEF <.MEM_620>
  *SR.2146_1317 = _228;
  # DEBUG thisD.72146 => &__firstD.72139
  # PT = nonlocal escaped 
  __first_229 = __first_1309 + 4;
  # DEBUG __firstD.73014 => __first_229
  if (__first_229 == __first$_M_last_1305)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 1, count 0, freq 29, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72150 => &__firstD.72139
  # PT = nonlocal escaped 
  __first$_M_node_240 = __first$_M_node_1303 + 8;
  # DEBUG thisD.72152 => &__firstD.72139
  # DEBUG __new_nodeD.72151 => __first$_M_node_240
  # DEBUG __first$_M_nodeD.73017 => __first$_M_node_240
  # VUSE <.MEM_1408>
  # PT = nonlocal escaped 
  __first_241 = MEM[(intD.9 * *)__first$_M_node_1303 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_242 = __first_241 + 512;
  # DEBUG __first$_M_lastD.73016 => __first$_M_last_242
  # DEBUG __firstD.73014 => __first_241
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 1, count 0, freq 429, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_1308 = PHI <__first_229(7), __first_241(8)>
  # PT = nonlocal escaped 
  # __first$_M_last_1304 = PHI <__first$_M_last_1305(7), __first$_M_last_242(8)>
  # PT = nonlocal escaped 
  # __first$_M_node_1301 = PHI <__first$_M_node_1303(7), __first$_M_node_240(8)>
  # DEBUG __first$_M_nodeD.73017 => __first$_M_node_1301
  # DEBUG __first$_M_lastD.73016 => __first$_M_last_1304
  # DEBUG __firstD.73014 => __first_1308
  # DEBUG thisD.72147 => &D.72138
  # PT = nonlocal escaped null 
  _232 = SR.2146_1317 + 4;
  if (_232 == SR.2147_1314)
    goto <bb 10>;
  else
    goto <bb 11>;
;;    succ:       10 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                11 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 10, loop depth 1, count 0, freq 29, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72154 => &D.72138
  # PT = nonlocal escaped null 
  _244 = SR.2148_1312 + 8;
  # DEBUG thisD.72156 => &D.72138
  # DEBUG __new_nodeD.72155 => _244
  # VUSE <.MEM_1408>
  # PT = nonlocal escaped 
  _245 = MEM[(intD.9 * *)SR.2148_1312 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _246 = _245 + 512;
;;    succ:       11 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 11, loop depth 1, count 0, freq 430, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       9 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # SR.2146_1316 = PHI <_232(9), _245(10)>
  # PT = nonlocal escaped null 
  # SR.2147_1313 = PHI <SR.2147_1314(9), _246(10)>
  # PT = nonlocal escaped null 
  # SR.2148_1311 = PHI <SR.2148_1312(9), _244(10)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_234 = __n_250 + -1;
  # DEBUG __nD.72145 => __n_234
  # DEBUG __nD.72145 => __n_234
  if (__n_234 <= 0)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                13 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 39, maybe hot
;;    prev block 11, next block 13, flags: (NEW)
;;    pred:       11 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1389 = PHI <.MEM_1408(11)>
  goto <bb 5>;
;;    succ:       5 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 13, loop depth 1, count 0, freq 391, maybe hot
;;    prev block 12, next block 14, flags: (NEW)
;;    pred:       11 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 7>;
;;    succ:       7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 13, next block 15, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#701ptD.0 => &this_9(D)->D.41195
  # DEBUG thisD.61770 => D#701ptD.0
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551600
  _59 = __n_7(D) * 80;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551600
  _60 = -_59;
  # PT = nonlocal escaped 
  __last_61 = __old_finish_26 + _60;
  # DEBUG __firstD.61755 => __last_61
  # DEBUG __lastD.61756 => __old_finish_26
  # DEBUG __resultD.61757 => __old_finish_26
  # DEBUG __allocD.61758 => D#609ptD.0
  # DEBUG D#608ptD.0 => D#609ptD.0
  # DEBUG D#607ptD.0 => D#608ptD.0
  # DEBUG __firstD.61762 => __last_61
  # DEBUG __lastD.61761 => __old_finish_26
  # DEBUG __resultD.61760 => __old_finish_26
  # DEBUG D.61759 => D#607ptD.0
  # DEBUG __firstD.61765 => __last_61
  # DEBUG __lastD.61764 => __old_finish_26
  # DEBUG __resultD.61763 => __old_finish_26
  # DEBUG __assignableD.61768 => 1
  # DEBUG __firstD.72158 => __last_61
  # DEBUG __lastD.72159 => __old_finish_26
  # DEBUG __resultD.72160 => __old_finish_26
  # DEBUG __curD.72161 => __old_finish_26
  # DEBUG __curD.72161 => __old_finish_26
  # DEBUG __firstD.72158 => __last_61
  if (__old_finish_26 == __last_61)
    goto <bb 31>;
  else
    goto <bb 15>;
;;    succ:       31 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                15 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 14, next block 16, flags: (NEW, REACHABLE)
;;    pred:       14 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 15, next block 17, flags: (NEW)
;;    pred:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                29 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __last_1063 = PHI <__last_61(15), __last_251(29)>
  # PT = nonlocal escaped 
  # __old_finish_665 = PHI <__old_finish_26(15), __old_finish_252(29)>
  # .MEM_1088 = PHI <.MEM_1427(15), .MEM_1008(29)>
  # DEBUG __curD.72161 => __old_finish_665
  # DEBUG __firstD.72158 => __last_1063
  # DEBUG __rD.60623 => __old_finish_665
  # DEBUG __pD.72171 => NULL
  # DEBUG __valueD.72170 => __last_1063
  # DEBUG D#11ptD.0 => 80
  # DEBUG __pD.60611 => NULL
  # DEBUG D.60612 => D#11ptD.0
  if (__old_finish_665 != 0B)
    goto <bb 17>;
  else
    goto <bb 28>;
;;    succ:       17 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                28 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72173 => NULL
  # DEBUG D.72172 => __last_1063
  # DEBUG D#1159ptD.0 => &MEM[(const struct queueD.40450 &)__last_1063].cD.43633
  # DEBUG D#1171ptD.0 => &__old_finish_665->cD.43633
  # DEBUG thisD.72178 => D#1171ptD.0
  # DEBUG __xD.72179 => D#1159ptD.0
  # DEBUG thisD.72180 => D#1159ptD.0
  # DEBUG D#174ptD.0 => &D#1159ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &D#1159ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.72182 => D#175ptD.0
  # DEBUG __yD.72181 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_1088>
  # PT = nonlocal escaped 
  _124 = MEM[(const struct _Deque_iteratorD.42908 &)__last_1063 + 48]._M_nodeD.42943;
  _257 = (long intD.12) _124;
  # VUSE <.MEM_1088>
  # PT = nonlocal escaped 
  _258 = MEM[(const struct _Deque_iteratorD.42908 &)__last_1063 + 16]._M_nodeD.42943;
  _259 = (long intD.12) _258;
  _260 = _257 - _259;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _261 = _260 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _262 = _261 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _263 = _262 * 128;
  # VUSE <.MEM_1088>
  # PT = nonlocal escaped 
  _264 = MEM[(const struct _Deque_iteratorD.42908 &)__last_1063 + 48]._M_curD.42940;
  _265 = (long intD.12) _264;
  # VUSE <.MEM_1088>
  # PT = nonlocal escaped 
  _266 = MEM[(const struct _Deque_iteratorD.42908 &)__last_1063 + 48]._M_firstD.42941;
  _267 = (long intD.12) _266;
  _268 = _265 - _267;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _269 = _268 /[ex] 4;
  _270 = _263 + _269;
  # VUSE <.MEM_1088>
  # PT = nonlocal escaped 
  _271 = MEM[(const struct _Deque_iteratorD.42908 &)__last_1063 + 16]._M_lastD.42942;
  _272 = (long intD.12) _271;
  # VUSE <.MEM_1088>
  # PT = nonlocal escaped 
  _273 = MEM[(const struct _Deque_iteratorD.42908 &)__last_1063 + 16]._M_curD.42940;
  _274 = (long intD.12) _273;
  _275 = _272 - _274;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _276 = _275 /[ex] 4;
  _277 = _270 + _276;
  # RANGE [0, 18446744073709551615]
  _278 = (size_typeD.43117) _277;
  # DEBUG D#604ptD.0 => &D#1159ptD.0->D.43590
  # DEBUG thisD.60602 => D#604ptD.0
  # DEBUG __aD.60600 => NULL
  # PT = nonlocal escaped 
  _279 = &MEM[(struct dequeD.40449 *)__old_finish_665].D.43590;
  # DEBUG thisD.72185 => _279
  # DEBUG __aD.72184 => NULL
  # DEBUG __num_elementsD.72183 => _278
  # DEBUG D#484ptD.0 => &_279->_M_implD.43041
  # DEBUG thisD.72187 => D#484ptD.0
  # DEBUG __aD.72186 => NULL
  # DEBUG thisD.55193 => D#484ptD.0
  # DEBUG __aD.55194 => NULL
  # DEBUG thisD.55188 => D#484ptD.0
  # DEBUG D.55189 => NULL
  # .MEM_1428 = VDEF <.MEM_1088>
  MEM[(struct _Deque_implD.43009 *)__old_finish_665]._M_mapD.43043 = 0B;
  # .MEM_1429 = VDEF <.MEM_1428>
  MEM[(struct _Deque_implD.43009 *)__old_finish_665]._M_map_sizeD.43044 = 0;
  # DEBUG D#241ptD.0 => &D#484ptD.0->_M_startD.43045
  # DEBUG thisD.72188 => D#241ptD.0
  # .MEM_1430 = VDEF <.MEM_1429>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_665 + 16B]._M_curD.42940 = 0B;
  # .MEM_1431 = VDEF <.MEM_1430>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_665 + 16B]._M_firstD.42941 = 0B;
  # .MEM_1432 = VDEF <.MEM_1431>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_665 + 16B]._M_lastD.42942 = 0B;
  # .MEM_1433 = VDEF <.MEM_1432>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_665 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#240ptD.0 => &D#484ptD.0->_M_finishD.43046
  # DEBUG thisD.72189 => D#240ptD.0
  # .MEM_1434 = VDEF <.MEM_1433>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_665 + 48B]._M_curD.42940 = 0B;
  # .MEM_1435 = VDEF <.MEM_1434>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_665 + 48B]._M_firstD.42941 = 0B;
  # .MEM_1436 = VDEF <.MEM_1435>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_665 + 48B]._M_lastD.42942 = 0B;
  # .MEM_1437 = VDEF <.MEM_1436>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_665 + 48B]._M_nodeD.42943 = 0B;
  [LP 8] # .MEM_1438 = VDEF <.MEM_1437>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (_279, _278);
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                33 (EH,EXECUTABLE)

;;   basic block 18, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#605ptD.0 => &D#1171ptD.0->D.43590
  # DEBUG thisD.60590 => D#605ptD.0
  # DEBUG D#606ptD.0 => &D#1171ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72191 => &D.72200
  # DEBUG __xD.72190 => D#606ptD.0
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  _280 = MEM[(const struct iteratorD.42928 &)__old_finish_665 + 16]._M_curD.42940;
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  _282 = MEM[(const struct iteratorD.42928 &)__old_finish_665 + 16]._M_lastD.42942;
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  _283 = MEM[(const struct iteratorD.42928 &)__old_finish_665 + 16]._M_nodeD.42943;
  # DEBUG thisD.72192 => D#1159ptD.0
  # DEBUG D#83ptD.0 => &D#1159ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.72194 => &D.72199
  # DEBUG __xD.72193 => D#83ptD.0
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  _284 = MEM[(const struct iteratorD.44725 &)__last_1063 + 48]._M_curD.42940;
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  _285 = MEM[(const struct iteratorD.44725 &)__last_1063 + 48]._M_firstD.42941;
  # DEBUG D#1168ptD.0 => MEM[(const struct iteratorD.44725 &)__last_1063 + 48]._M_lastD.42942
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  _287 = MEM[(const struct iteratorD.44725 &)__last_1063 + 48]._M_nodeD.42943;
  # DEBUG thisD.72195 => D#1159ptD.0
  # DEBUG D#84ptD.0 => &D#1159ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72197 => &D.72198
  # DEBUG __xD.72196 => D#84ptD.0
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  __first_288 = MEM[(const struct iteratorD.44725 &)__last_1063 + 16]._M_curD.42940;
  # DEBUG D#1178ptD.0 => MEM[(const struct iteratorD.44725 &)__last_1063 + 16]._M_firstD.42941
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  __first$_M_last_290 = MEM[(const struct iteratorD.44725 &)__last_1063 + 16]._M_lastD.42942;
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  __first$_M_node_291 = MEM[(const struct iteratorD.44725 &)__last_1063 + 16]._M_nodeD.42943;
  # DEBUG __resultD.72203 => &D.72200
  # DEBUG D.72204 => D#603ptD.0
  # DEBUG thisD.72206 => &D.72208
  # DEBUG __xD.72205 => &D.72200
  # DEBUG __resultD.72211 => &D.72208
  # DEBUG __assignableD.72214 => 1
  # DEBUG thisD.72216 => NULL
  # DEBUG __xD.72215 => &D.72208
  # DEBUG __resultD.72217 => NULL
  # DEBUG thisD.72221 => &D.72222
  # DEBUG __xD.72220 => NULL
  # DEBUG __resultD.72225 => &D.72222
  # DEBUG thisD.72227 => &D.72242
  # DEBUG __xD.72226 => &D.72222
  # DEBUG __itD.72235 => _284
  # DEBUG __it$8D.72234 => _285
  # DEBUG __it$16D.72233 => D#1168ptD.0
  # DEBUG __it$24D.72232 => _287
  # DEBUG __it$_M_curD.60535 => _284
  # DEBUG __it$_M_firstD.60534 => _285
  # DEBUG __it$_M_lastD.60533 => D#1168ptD.0
  # DEBUG __it$_M_nodeD.60532 => _287
  # DEBUG __itD.72239 => __first_288
  # DEBUG __it$8D.72238 => D#1178ptD.0
  # DEBUG __it$16D.72237 => __first$_M_last_290
  # DEBUG __it$24D.72236 => __first$_M_node_291
  # DEBUG __it$_M_curD.60529 => __first_288
  # DEBUG __it$_M_firstD.60528 => D#1178ptD.0
  # DEBUG __it$_M_lastD.60527 => __first$_M_last_290
  # DEBUG __it$_M_nodeD.60526 => __first$_M_node_291
  # DEBUG __resultD.72245 => &D.72242
  # DEBUG thisD.72247 => NULL
  # DEBUG __xD.72246 => &D.72242
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.72261 => _284
  # DEBUG __it$8D.72260 => _285
  # DEBUG __it$16D.72259 => D#1168ptD.0
  # DEBUG __it$24D.72257 => _287
  # DEBUG __it$_M_curD.60489 => _284
  # DEBUG __it$_M_firstD.60488 => _285
  # DEBUG __it$_M_lastD.60487 => D#1168ptD.0
  # DEBUG __it$_M_nodeD.60486 => _287
  # DEBUG __itD.72266 => __first_288
  # DEBUG __it$8D.72265 => D#1178ptD.0
  # DEBUG __it$16D.72264 => __first$_M_last_290
  # DEBUG __it$24D.72262 => __first$_M_node_291
  # DEBUG __it$_M_curD.60483 => __first_288
  # DEBUG __it$_M_firstD.60482 => D#1178ptD.0
  # DEBUG __it$_M_lastD.60481 => __first$_M_last_290
  # DEBUG __it$_M_nodeD.60480 => __first$_M_node_291
  # DEBUG __firstD.73018 => __first_288
  # DEBUG __first$8D.73019 => D#1178ptD.0
  # DEBUG __first$16D.73020 => __first$_M_last_290
  # DEBUG __first$24D.73021 => __first$_M_node_291
  # DEBUG __resultD.72248 => NULL
  # DEBUG __simpleD.72254 => 0
  # DEBUG thisD.72256 => &D.72267
  # DEBUG __xD.72255 => NULL
  # DEBUG __firstD.73025 => __first_288
  # DEBUG __first$_M_firstD.73026 => D#1178ptD.0
  # DEBUG __first$_M_lastD.73027 => __first$_M_last_290
  # DEBUG __first$_M_nodeD.73028 => __first$_M_node_291
  # DEBUG __resultD.72270 => &D.72267
  # DEBUG __xD.72278 => &__lastD.72269
  # DEBUG __yD.72277 => &__firstD.72268
  # DEBUG __sizeD.60431 => 4
  _325 = (long intD.12) _287;
  _327 = (long intD.12) __first$_M_node_291;
  _328 = _325 - _327;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _329 = _328 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _330 = _329 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _331 = _330 * 128;
  _333 = (long intD.12) _284;
  _335 = (long intD.12) _285;
  _336 = _333 - _335;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _337 = _336 /[ex] 4;
  _338 = _331 + _337;
  _340 = (long intD.12) __first$_M_last_290;
  _342 = (long intD.12) __first_288;
  _343 = _340 - _342;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _344 = _343 /[ex] 4;
  __n_345 = _338 + _344;
  # DEBUG __nD.72274 => __n_345
  # DEBUG __nD.72274 => __n_345
  if (__n_345 <= 0)
    goto <bb 19>;
  else
    goto <bb 20>;
;;    succ:       19 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                20 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1714 = PHI <.MEM_1438(18), .MEM_1383(26)>
  # DEBUG thisD.72273 => &D.72207
  # DEBUG __xD.72272 => &D.72267
  # .MEM_1510 = VDEF <.MEM_1714>
  D.72267 ={v} {CLOBBER};
  # .MEM_1511 = VDEF <.MEM_1510>
  D.72242 ={v} {CLOBBER};
  # .MEM_1512 = VDEF <.MEM_1511>
  D.72222 ={v} {CLOBBER};
  # .MEM_1513 = VDEF <.MEM_1512>
  D.72208 ={v} {CLOBBER};
  # .MEM_1514 = VDEF <.MEM_1513>
  D.72200 ={v} {CLOBBER};
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 20, loop depth 1, count 0, freq 410, maybe hot
;;    prev block 19, next block 21, flags: (NEW, REACHABLE)
;;    pred:       18 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 2, count 0, freq 4553, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                27 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1065 = PHI <__n_345(20), __n_355(27)>
  # .MEM_1090 = PHI <.MEM_1438(20), .MEM_1495(27)>
  # PT = nonlocal escaped 
  # SR.2156_1296 = PHI <_280(20), SR.2156_1295(27)>
  # PT = nonlocal escaped 
  # SR.2157_1294 = PHI <_282(20), SR.2157_1293(27)>
  # PT = nonlocal escaped 
  # SR.2158_1223 = PHI <_283(20), SR.2158_1222(27)>
  # PT = nonlocal escaped 
  # __first_1220 = PHI <__first_288(20), __first_1219(27)>
  # PT = nonlocal escaped 
  # __first$_M_last_1218 = PHI <__first$_M_last_290(20), __first$_M_last_1217(27)>
  # PT = nonlocal escaped 
  # __first$_M_node_1215 = PHI <__first$_M_node_291(20), __first$_M_node_1214(27)>
  # DEBUG __first$_M_nodeD.73028 => __first$_M_node_1215
  # DEBUG __first$_M_lastD.73027 => __first$_M_last_1218
  # DEBUG __firstD.73025 => __first_1220
  # DEBUG __nD.72274 => __n_1065
  # DEBUG D#100ptD.0 => &D.72267
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.72268
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_1090>
  _349 = MEM[(const intD.9 &)__first_1220];
  # .MEM_1495 = VDEF <.MEM_1090>
  *SR.2156_1296 = _349;
  # DEBUG thisD.72275 => &__firstD.72268
  # PT = nonlocal escaped 
  __first_350 = __first_1220 + 4;
  # DEBUG __firstD.73025 => __first_350
  if (__first_350 == __first$_M_last_1218)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                23 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 22, loop depth 2, count 0, freq 306, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       21 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72279 => &__firstD.72268
  # PT = nonlocal escaped 
  __first$_M_node_361 = __first$_M_node_1215 + 8;
  # DEBUG thisD.72281 => &__firstD.72268
  # DEBUG __new_nodeD.72280 => __first$_M_node_361
  # DEBUG __first$_M_nodeD.73028 => __first$_M_node_361
  # VUSE <.MEM_1495>
  # PT = nonlocal escaped 
  __first_362 = MEM[(intD.9 * *)__first$_M_node_1215 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_363 = __first_362 + 512;
  # DEBUG __first$_M_lastD.73027 => __first$_M_last_363
  # DEBUG __firstD.73025 => __first_362
;;    succ:       23 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 23, loop depth 2, count 0, freq 4553, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       21 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                22 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_1219 = PHI <__first_350(21), __first_362(22)>
  # PT = nonlocal escaped 
  # __first$_M_last_1217 = PHI <__first$_M_last_1218(21), __first$_M_last_363(22)>
  # PT = nonlocal escaped 
  # __first$_M_node_1214 = PHI <__first$_M_node_1215(21), __first$_M_node_361(22)>
  # DEBUG __first$_M_nodeD.73028 => __first$_M_node_1214
  # DEBUG __first$_M_lastD.73027 => __first$_M_last_1217
  # DEBUG __firstD.73025 => __first_1219
  # DEBUG thisD.72276 => &D.72267
  # PT = nonlocal escaped 
  _353 = SR.2156_1296 + 4;
  if (_353 == SR.2157_1294)
    goto <bb 24>;
  else
    goto <bb 25>;
;;    succ:       24 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                25 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 24, loop depth 2, count 0, freq 306, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72283 => &D.72267
  # PT = nonlocal escaped 
  _365 = SR.2158_1223 + 8;
  # DEBUG thisD.72285 => &D.72267
  # DEBUG __new_nodeD.72284 => _365
  # VUSE <.MEM_1495>
  # PT = nonlocal escaped 
  _366 = MEM[(intD.9 * *)SR.2158_1223 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _367 = _366 + 512;
;;    succ:       25 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 25, loop depth 2, count 0, freq 4554, maybe hot
;;    prev block 24, next block 26, flags: (NEW, REACHABLE)
;;    pred:       23 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.2156_1295 = PHI <_353(23), _366(24)>
  # PT = nonlocal escaped 
  # SR.2157_1293 = PHI <SR.2157_1294(23), _367(24)>
  # PT = nonlocal escaped 
  # SR.2158_1222 = PHI <SR.2158_1223(23), _365(24)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_355 = __n_1065 + -1;
  # DEBUG __nD.72274 => __n_355
  # DEBUG __nD.72274 => __n_355
  if (__n_355 <= 0)
    goto <bb 26>;
  else
    goto <bb 27>;
;;    succ:       26 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                27 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 26, loop depth 1, count 0, freq 410, maybe hot
;;    prev block 25, next block 27, flags: (NEW)
;;    pred:       25 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1383 = PHI <.MEM_1495(25)>
  goto <bb 19>;
;;    succ:       19 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 27, loop depth 2, count 0, freq 4144, maybe hot
;;    prev block 26, next block 28, flags: (NEW)
;;    pred:       25 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 28, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       16 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                19 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1008 = PHI <.MEM_1088(16), .MEM_1514(19)>
  # PT = nonlocal escaped 
  __last_251 = __last_1063 + 80;
  # DEBUG __firstD.72158 => __last_251
  # PT = nonlocal escaped 
  __old_finish_252 = __old_finish_665 + 80;
  # DEBUG __curD.72161 => __old_finish_252
  # DEBUG __curD.72161 => __old_finish_252
  # DEBUG __firstD.72158 => __last_251
  if (__old_finish_26 == __last_251)
    goto <bb 30>;
  else
    goto <bb 29>;
;;    succ:       30 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 1, count 0, freq 431, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       28 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 16>;
;;    succ:       16 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       28 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1008>
  pretmp_1005 = this_9(D)->D.41195._M_implD.40686._M_finishD.40689;
;;    succ:       31 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 31, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1089 = PHI <.MEM_1008(30), .MEM_1427(14)>
  # PT = nonlocal escaped 
  # prephitmp_247 = PHI <pretmp_1005(30), __old_finish_26(14)>
  # PT = nonlocal escaped 
  _63 = prephitmp_247 + _59;
  # .MEM_64 = VDEF <.MEM_1089>
  this_9(D)->D.41195._M_implD.40686._M_finishD.40689 = _63;
  # DEBUG thisD.61792 => &__positionD.41120
  # DEBUG __firstD.61772 => D#1186ptD.0
  # DEBUG __lastD.61773 => __last_61
  # DEBUG __resultD.61774 => __old_finish_26
  # DEBUG __itD.61728 => __last_61
  # DEBUG __itD.57818 => __last_61
  # DEBUG __itD.61726 => D#1186ptD.0
  # DEBUG __itD.57818 => D#1186ptD.0
  # DEBUG __firstD.61777 => D#1186ptD.0
  # DEBUG __lastD.61776 => __last_61
  # DEBUG __resultD.61775 => __old_finish_26
  # DEBUG __itD.61706 => __old_finish_26
  # DEBUG __itD.57821 => __old_finish_26
  # DEBUG __itD.61704 => __last_61
  # DEBUG __itD.57821 => __last_61
  # DEBUG __itD.61702 => D#1186ptD.0
  # DEBUG __itD.57821 => D#1186ptD.0
  # DEBUG __firstD.61780 => D#1186ptD.0
  # DEBUG __lastD.61779 => __last_61
  # DEBUG __resultD.61778 => __old_finish_26
  # DEBUG __simpleD.61784 => 0
  # DEBUG __firstD.61787 => D#1186ptD.0
  # DEBUG __lastD.61786 => __last_61
  # DEBUG __resultD.61785 => __old_finish_26
  __last.100_21 = (long intD.12) __last_61;
  _73 = __last.100_21 - _35;
  # RANGE [-115292150460684697, 115292150460684697]
  __n_72 = _73 /[ex] 80;
  # DEBUG __nD.61788 => __n_72
  # DEBUG __nD.61788 => __n_72
  # DEBUG __resultD.61785 => __old_finish_26
  # DEBUG __lastD.61786 => __last_61
  if (__n_72 <= 0)
    goto <bb 32>;
  else
    goto <bb 39>;
;;    succ:       32 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 32, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       31 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1713 = PHI <.MEM_64(31), .MEM_125(42)>
  # DEBUG thisD.61804 => &__positionD.41120
  # PT = nonlocal 
  _67 = __position_23 + _59;
  # DEBUG thisD.61802 => &__positionD.41120
  # DEBUG __firstD.61794 => D#1186ptD.0
  # DEBUG __lastD.61795 => _67
  # DEBUG __valueD.61796 => &__x_copyD.46166
  # DEBUG __firstD.61799 => D#1186ptD.0
  if (__position_23 == _67)
    goto <bb 44>;
  else
    goto <bb 45>;
;;    succ:       44 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       17 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_1042 = PHI <__old_finish_665(17)>
<L19>: [LP 8]
  # VUSE <.MEM_1438>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _253 = __builtin_eh_pointerD.2738 (14);
  # .MEM_1515 = VDEF <.MEM_1438>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_253);
  # DEBUG __firstD.72163 => __old_finish_26
  # DEBUG __lastD.72162 => __old_finish_1042
  # DEBUG __firstD.72166 => __old_finish_26
  # DEBUG __lastD.72165 => __old_finish_1042
  # DEBUG __firstD.72166 => __old_finish_26
  if (__old_finish_26 == __old_finish_1042)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       33 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1712 = PHI <.MEM_1515(33), .MEM_1518(36)>
  [LP 7] # .MEM_1519 = VDEF <.MEM_1712>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       38 (EH,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 34, next block 36, flags: (NEW, REACHABLE)
;;    pred:       33 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       35 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                37 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_1064 = PHI <__old_finish_26(35), __old_finish_256(37)>
  # .MEM_1092 = PHI <.MEM_1515(35), .MEM_1518(37)>
  # DEBUG __firstD.72166 => __old_finish_1064
  # DEBUG __rD.57673 => __old_finish_1064
  # DEBUG __pointerD.72167 => NULL
  # DEBUG thisD.72168 => NULL
  # DEBUG thisD.72169 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # PT = nonlocal escaped 
  _255 = &MEM[(struct dequeD.40449 *)__old_finish_1064].D.43590;
  # .MEM_1516 = VDEF <.MEM_1092>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (_255);
  # .MEM_1518 = VDEF <.MEM_1516>
  MEM[(struct  &)__old_finish_1064] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __old_finish_256 = __old_finish_1064 + 80;
  # DEBUG __firstD.72166 => __old_finish_256
  # DEBUG __firstD.72166 => __old_finish_256
  if (__old_finish_256 == __old_finish_1042)
    goto <bb 34>;
  else
    goto <bb 37>;
;;    succ:       34 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                37 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 37, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 36, next block 38, flags: (NEW)
;;    pred:       36 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 36>;
;;    succ:       36 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 37, next block 39, flags: (NEW, REACHABLE)
;;    pred:       34 (EH,EXECUTABLE)
<L21>: [LP 7]
  [MNT 12] # .MEM_1520 = VDEF <.MEM_1519>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_end_catchD.13513 ();
  [LP 21] resx 13
;;    succ:       199 (EH,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       31 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 40, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 39, next block 41, flags: (NEW)
;;    pred:       39 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                43 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1399 = PHI <.MEM_64(39), .MEM_125(43)>
  # PT = nonlocal escaped 
  # __old_finish_1401 = PHI <__old_finish_26(39), __old_finish_58(43)>
  # PT = nonlocal escaped 
  # __last_1403 = PHI <__last_61(39), __last_66(43)>
  # RANGE [-115292150460684697, 115292150460684697]
  # __n_1407 = PHI <__n_72(39), __n_81(43)>
  # DEBUG __nD.61788 => __n_1407
  # DEBUG __resultD.61785 => __old_finish_1401
  # DEBUG __lastD.61786 => __last_1403
  # PT = nonlocal escaped 
  __last_66 = __last_1403 + 18446744073709551536;
  # DEBUG __lastD.61786 => __last_66
  # PT = nonlocal escaped 
  __old_finish_58 = __old_finish_1401 + 18446744073709551536;
  # DEBUG __resultD.61785 => __old_finish_58
  # DEBUG thisD.61790 => __old_finish_58
  # DEBUG D.61789 => __last_66
  # PT = nonlocal escaped 
  _56 = &MEM[(const struct queueD.40450 &)__last_66].cD.43633;
  # PT = nonlocal escaped 
  _80 = &__old_finish_58->cD.43633;
  [LP 22] # .MEM_125 = VDEF <.MEM_1399>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt5dequeIiSaIiEEaSERKS1_D.43169 (_80, _56);
  goto <bb 42>;
;;    succ:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 (EH,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 40, next block 42, flags: (NEW)
;;    pred:       40 (EH,EXECUTABLE)
<L40>: [LP 22]
  goto <bb 200> (<L10>);
;;    succ:       200 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 41, next block 43, flags: (NEW, REACHABLE)
;;    pred:       40 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 115292150460684696] NONZERO 144115188075855871
  __n_81 = __n_1407 + -1;
  # DEBUG __nD.61788 => __n_81
  # DEBUG __nD.61788 => __n_81
  # DEBUG __resultD.61785 => __old_finish_58
  # DEBUG __lastD.61786 => __last_66
  if (__n_81 <= 0)
    goto <bb 32>;
  else
    goto <bb 43>;
;;    succ:       32 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                43 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 431, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       42 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 40>;
;;    succ:       40 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 44, loop depth 0, count 0, freq 41, maybe hot
;;    prev block 43, next block 45, flags: (NEW)
;;    pred:       32 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                48 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                90 (TRUE_VALUE,EXECUTABLE)
;;                101 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1705 = PHI <.MEM_1713(32), .MEM_126(48), .MEM_77(90), .MEM_129(101)>
  goto <bb 103>;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 45, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 44, next block 46, flags: (NEW, REACHABLE)
;;    pred:       32 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_1419 = PHI <__position_23(45), __position_84(49)>
  # .MEM_237 = PHI <.MEM_1713(45), .MEM_126(49)>
  # DEBUG __firstD.61799 => __position_1419
  # DEBUG thisD.61801 => __position_1419
  # DEBUG D.61800 => &__x_copyD.46166
  # PT = nonlocal 
  _83 = &__position_1419->cD.43633;
  [LP 23] # .MEM_126 = VDEF <.MEM_237>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt5dequeIiSaIiEEaSERKS1_D.43169 (_83, &__x_copyD.46166.cD.43633);
  goto <bb 48>;
;;    succ:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 (EH,EXECUTABLE)

;;   basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       46 (EH,EXECUTABLE)
<L41>: [LP 23]
  goto <bb 200> (<L10>);
;;    succ:       200 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 47, next block 49, flags: (NEW, REACHABLE)
;;    pred:       46 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  __position_84 = __position_1419 + 80;
  # DEBUG __firstD.61799 => __position_84
  # DEBUG __firstD.61799 => __position_84
  if (_67 == __position_84)
    goto <bb 44>;
  else
    goto <bb 49>;
;;    succ:       44 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                49 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 49, loop depth 1, count 0, freq 431, maybe hot
;;    prev block 48, next block 50, flags: (NEW)
;;    pred:       48 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       5 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#702ptD.0 => &this_9(D)->D.41195
  # DEBUG thisD.61816 => D#702ptD.0
  # RANGE [0, 18446744073709551615]
  __n_70 = __n_7(D) - __elems_after_57;
  # DEBUG __firstD.61806 => __old_finish_26
  # DEBUG __nD.61807 => __n_70
  # DEBUG __xD.61808 => &__x_copyD.46166
  # DEBUG D.61809 => D#612ptD.0
  # DEBUG __firstD.61812 => __old_finish_26
  # DEBUG __nD.61811 => __n_70
  # DEBUG __xD.61810 => &__x_copyD.46166
  # DEBUG __assignableD.61814 => 1
  # DEBUG __firstD.72287 => __old_finish_26
  # DEBUG __nD.72288 => __n_70
  # DEBUG __xD.72289 => &__x_copyD.46166
  # DEBUG __curD.72290 => __old_finish_26
  # DEBUG __curD.72290 => __old_finish_26
  # DEBUG __nD.72288 => __n_70
  if (__n_70 == 0)
    goto <bb 67>;
  else
    goto <bb 51>;
;;    succ:       67 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 50, next block 52, flags: (NEW, REACHABLE)
;;    pred:       50 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 51, next block 53, flags: (NEW)
;;    pred:       51 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                66 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1066 = PHI <__n_70(51), __n_372(66)>
  # PT = nonlocal escaped 
  # __old_finish_1067 = PHI <__old_finish_26(51), __old_finish_373(66)>
  # .MEM_1094 = PHI <.MEM_1427(51), .MEM_1014(66)>
  # DEBUG __curD.72290 => __old_finish_1067
  # DEBUG __nD.72288 => __n_1066
  # DEBUG __rD.60724 => __old_finish_1067
  # DEBUG __pD.72300 => NULL
  # DEBUG __valueD.72299 => &__x_copyD.46166
  # DEBUG D#11ptD.0 => 80
  # DEBUG __pD.60611 => NULL
  # DEBUG D.60612 => D#11ptD.0
  if (__old_finish_1067 != 0B)
    goto <bb 53>;
  else
    goto <bb 64>;
;;    succ:       53 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                64 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 1, count 0, freq 315, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72302 => NULL
  # DEBUG D.72301 => &__x_copyD.46166
  # DEBUG D#1172ptD.0 => &__old_finish_1067->cD.43633
  # DEBUG thisD.72307 => D#1172ptD.0
  # DEBUG __xD.72308 => &__x_copyD.46166.cD.43633
  # DEBUG thisD.72309 => &__x_copyD.46166.cD.43633
  # DEBUG D#174ptD.0 => &MEM[(const struct dequeD.40449 *)&__x_copyD.46166].D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &MEM[(const struct dequeD.40449 *)&__x_copyD.46166].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.72311 => D#175ptD.0
  # DEBUG __yD.72310 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_1094>
  # PT = nonlocal escaped null 
  _127 = MEM[(const struct _Deque_iteratorD.42908 &)&__x_copyD.46166 + 48]._M_nodeD.42943;
  _378 = (long intD.12) _127;
  # VUSE <.MEM_1094>
  # PT = nonlocal escaped null 
  _379 = MEM[(const struct _Deque_iteratorD.42908 &)&__x_copyD.46166 + 16]._M_nodeD.42943;
  _380 = (long intD.12) _379;
  _381 = _378 - _380;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _382 = _381 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _383 = _382 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _384 = _383 * 128;
  # VUSE <.MEM_1094>
  # PT = nonlocal escaped null 
  _385 = MEM[(const struct _Deque_iteratorD.42908 &)&__x_copyD.46166 + 48]._M_curD.42940;
  _386 = (long intD.12) _385;
  # VUSE <.MEM_1094>
  # PT = nonlocal escaped null 
  _387 = MEM[(const struct _Deque_iteratorD.42908 &)&__x_copyD.46166 + 48]._M_firstD.42941;
  _388 = (long intD.12) _387;
  _389 = _386 - _388;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _390 = _389 /[ex] 4;
  _391 = _384 + _390;
  # VUSE <.MEM_1094>
  # PT = nonlocal escaped null 
  _392 = MEM[(const struct _Deque_iteratorD.42908 &)&__x_copyD.46166 + 16]._M_lastD.42942;
  _393 = (long intD.12) _392;
  # VUSE <.MEM_1094>
  # PT = nonlocal escaped null 
  _394 = MEM[(const struct _Deque_iteratorD.42908 &)&__x_copyD.46166 + 16]._M_curD.42940;
  _395 = (long intD.12) _394;
  _396 = _393 - _395;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _397 = _396 /[ex] 4;
  _398 = _391 + _397;
  # RANGE [0, 18446744073709551615]
  _399 = (size_typeD.43117) _398;
  # DEBUG D#604ptD.0 => &MEM[(const struct dequeD.40449 *)&__x_copyD.46166].D.43590
  # DEBUG thisD.60602 => D#604ptD.0
  # DEBUG __aD.60600 => NULL
  # PT = nonlocal escaped 
  _400 = &MEM[(struct dequeD.40449 *)__old_finish_1067].D.43590;
  # DEBUG thisD.72314 => _400
  # DEBUG __aD.72313 => NULL
  # DEBUG __num_elementsD.72312 => _399
  # DEBUG D#484ptD.0 => &_400->_M_implD.43041
  # DEBUG thisD.72316 => D#484ptD.0
  # DEBUG __aD.72315 => NULL
  # DEBUG thisD.55193 => D#484ptD.0
  # DEBUG __aD.55194 => NULL
  # DEBUG thisD.55188 => D#484ptD.0
  # DEBUG D.55189 => NULL
  # .MEM_1522 = VDEF <.MEM_1094>
  MEM[(struct _Deque_implD.43009 *)__old_finish_1067]._M_mapD.43043 = 0B;
  # .MEM_1523 = VDEF <.MEM_1522>
  MEM[(struct _Deque_implD.43009 *)__old_finish_1067]._M_map_sizeD.43044 = 0;
  # DEBUG D#241ptD.0 => &D#484ptD.0->_M_startD.43045
  # DEBUG thisD.72317 => D#241ptD.0
  # .MEM_1524 = VDEF <.MEM_1523>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1067 + 16B]._M_curD.42940 = 0B;
  # .MEM_1525 = VDEF <.MEM_1524>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1067 + 16B]._M_firstD.42941 = 0B;
  # .MEM_1526 = VDEF <.MEM_1525>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1067 + 16B]._M_lastD.42942 = 0B;
  # .MEM_1527 = VDEF <.MEM_1526>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1067 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#240ptD.0 => &D#484ptD.0->_M_finishD.43046
  # DEBUG thisD.72318 => D#240ptD.0
  # .MEM_1528 = VDEF <.MEM_1527>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1067 + 48B]._M_curD.42940 = 0B;
  # .MEM_1529 = VDEF <.MEM_1528>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1067 + 48B]._M_firstD.42941 = 0B;
  # .MEM_1530 = VDEF <.MEM_1529>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1067 + 48B]._M_lastD.42942 = 0B;
  # .MEM_1531 = VDEF <.MEM_1530>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1067 + 48B]._M_nodeD.42943 = 0B;
  [LP 10] # .MEM_1532 = VDEF <.MEM_1531>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (_400, _399);
;;    succ:       54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                68 (EH,EXECUTABLE)

;;   basic block 54, loop depth 1, count 0, freq 315, maybe hot
;;    prev block 53, next block 55, flags: (NEW, REACHABLE)
;;    pred:       53 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#605ptD.0 => &D#1172ptD.0->D.43590
  # DEBUG thisD.60590 => D#605ptD.0
  # DEBUG D#606ptD.0 => &D#1172ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72320 => &D.72329
  # DEBUG __xD.72319 => D#606ptD.0
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped 
  _401 = MEM[(const struct iteratorD.42928 &)__old_finish_1067 + 16]._M_curD.42940;
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped 
  _403 = MEM[(const struct iteratorD.42928 &)__old_finish_1067 + 16]._M_lastD.42942;
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped 
  _404 = MEM[(const struct iteratorD.42928 &)__old_finish_1067 + 16]._M_nodeD.42943;
  # DEBUG thisD.72321 => &__x_copyD.46166.cD.43633
  # DEBUG D#83ptD.0 => &MEM[(const struct dequeD.40449 *)&__x_copyD.46166].D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.72323 => &D.72328
  # DEBUG __xD.72322 => D#83ptD.0
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped null 
  _405 = MEM[(const struct iteratorD.44725 &)&__x_copyD.46166 + 48]._M_curD.42940;
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped null 
  _406 = MEM[(const struct iteratorD.44725 &)&__x_copyD.46166 + 48]._M_firstD.42941;
  # DEBUG D#1169ptD.0 => MEM[(const struct iteratorD.44725 &)&__x_copyD.46166 + 48]._M_lastD.42942
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped null 
  _408 = MEM[(const struct iteratorD.44725 &)&__x_copyD.46166 + 48]._M_nodeD.42943;
  # DEBUG thisD.72324 => &__x_copyD.46166.cD.43633
  # DEBUG D#84ptD.0 => &MEM[(const struct dequeD.40449 *)&__x_copyD.46166].D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72326 => &D.72327
  # DEBUG __xD.72325 => D#84ptD.0
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped null 
  __first_409 = MEM[(const struct iteratorD.44725 &)&__x_copyD.46166 + 16]._M_curD.42940;
  # DEBUG D#1179ptD.0 => MEM[(const struct iteratorD.44725 &)&__x_copyD.46166 + 16]._M_firstD.42941
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped null 
  __first$_M_last_411 = MEM[(const struct iteratorD.44725 &)&__x_copyD.46166 + 16]._M_lastD.42942;
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped null 
  __first$_M_node_412 = MEM[(const struct iteratorD.44725 &)&__x_copyD.46166 + 16]._M_nodeD.42943;
  # DEBUG __resultD.72332 => &D.72329
  # DEBUG D.72333 => D#603ptD.0
  # DEBUG thisD.72335 => &D.72337
  # DEBUG __xD.72334 => &D.72329
  # DEBUG __resultD.72340 => &D.72337
  # DEBUG __assignableD.72343 => 1
  # DEBUG thisD.72345 => NULL
  # DEBUG __xD.72344 => &D.72337
  # DEBUG __resultD.72346 => NULL
  # DEBUG thisD.72350 => &D.72351
  # DEBUG __xD.72349 => NULL
  # DEBUG __resultD.72354 => &D.72351
  # DEBUG thisD.72356 => &D.72371
  # DEBUG __xD.72355 => &D.72351
  # DEBUG __itD.72364 => _405
  # DEBUG __it$8D.72363 => _406
  # DEBUG __it$16D.72362 => D#1169ptD.0
  # DEBUG __it$24D.72361 => _408
  # DEBUG __it$_M_curD.60535 => _405
  # DEBUG __it$_M_firstD.60534 => _406
  # DEBUG __it$_M_lastD.60533 => D#1169ptD.0
  # DEBUG __it$_M_nodeD.60532 => _408
  # DEBUG __itD.72368 => __first_409
  # DEBUG __it$8D.72367 => D#1179ptD.0
  # DEBUG __it$16D.72366 => __first$_M_last_411
  # DEBUG __it$24D.72365 => __first$_M_node_412
  # DEBUG __it$_M_curD.60529 => __first_409
  # DEBUG __it$_M_firstD.60528 => D#1179ptD.0
  # DEBUG __it$_M_lastD.60527 => __first$_M_last_411
  # DEBUG __it$_M_nodeD.60526 => __first$_M_node_412
  # DEBUG __resultD.72374 => &D.72371
  # DEBUG thisD.72376 => NULL
  # DEBUG __xD.72375 => &D.72371
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.72390 => _405
  # DEBUG __it$8D.72389 => _406
  # DEBUG __it$16D.72388 => D#1169ptD.0
  # DEBUG __it$24D.72386 => _408
  # DEBUG __it$_M_curD.60489 => _405
  # DEBUG __it$_M_firstD.60488 => _406
  # DEBUG __it$_M_lastD.60487 => D#1169ptD.0
  # DEBUG __it$_M_nodeD.60486 => _408
  # DEBUG __itD.72395 => __first_409
  # DEBUG __it$8D.72394 => D#1179ptD.0
  # DEBUG __it$16D.72393 => __first$_M_last_411
  # DEBUG __it$24D.72391 => __first$_M_node_412
  # DEBUG __it$_M_curD.60483 => __first_409
  # DEBUG __it$_M_firstD.60482 => D#1179ptD.0
  # DEBUG __it$_M_lastD.60481 => __first$_M_last_411
  # DEBUG __it$_M_nodeD.60480 => __first$_M_node_412
  # DEBUG __firstD.73029 => __first_409
  # DEBUG __first$8D.73030 => D#1179ptD.0
  # DEBUG __first$16D.73031 => __first$_M_last_411
  # DEBUG __first$24D.73032 => __first$_M_node_412
  # DEBUG __resultD.72377 => NULL
  # DEBUG __simpleD.72383 => 0
  # DEBUG thisD.72385 => &D.72396
  # DEBUG __xD.72384 => NULL
  # DEBUG __firstD.73036 => __first_409
  # DEBUG __first$_M_firstD.73037 => D#1179ptD.0
  # DEBUG __first$_M_lastD.73038 => __first$_M_last_411
  # DEBUG __first$_M_nodeD.73039 => __first$_M_node_412
  # DEBUG __resultD.72399 => &D.72396
  # DEBUG __xD.72407 => &__lastD.72398
  # DEBUG __yD.72406 => &__firstD.72397
  # DEBUG __sizeD.60431 => 4
  _446 = (long intD.12) _408;
  _448 = (long intD.12) __first$_M_node_412;
  _449 = _446 - _448;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _450 = _449 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _451 = _450 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _452 = _451 * 128;
  _454 = (long intD.12) _405;
  _456 = (long intD.12) _406;
  _457 = _454 - _456;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _458 = _457 /[ex] 4;
  _459 = _452 + _458;
  _461 = (long intD.12) __first$_M_last_411;
  _463 = (long intD.12) __first_409;
  _464 = _461 - _463;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _465 = _464 /[ex] 4;
  __n_466 = _459 + _465;
  # DEBUG __nD.72403 => __n_466
  # DEBUG __nD.72403 => __n_466
  if (__n_466 <= 0)
    goto <bb 55>;
  else
    goto <bb 56>;
;;    succ:       55 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 315, maybe hot
;;    prev block 54, next block 56, flags: (NEW, REACHABLE)
;;    pred:       54 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                62 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1611 = PHI <.MEM_1532(54), .MEM_1387(62)>
  # DEBUG thisD.72402 => &D.72336
  # DEBUG __xD.72401 => &D.72396
  # .MEM_1604 = VDEF <.MEM_1611>
  D.72396 ={v} {CLOBBER};
  # .MEM_1605 = VDEF <.MEM_1604>
  D.72371 ={v} {CLOBBER};
  # .MEM_1606 = VDEF <.MEM_1605>
  D.72351 ={v} {CLOBBER};
  # .MEM_1607 = VDEF <.MEM_1606>
  D.72337 ={v} {CLOBBER};
  # .MEM_1608 = VDEF <.MEM_1607>
  D.72329 ={v} {CLOBBER};
  goto <bb 64>;
;;    succ:       64 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 56, loop depth 1, count 0, freq 287, maybe hot
;;    prev block 55, next block 57, flags: (NEW, REACHABLE)
;;    pred:       54 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 2, count 0, freq 3180, maybe hot
;;    prev block 56, next block 58, flags: (NEW)
;;    pred:       56 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1069 = PHI <__n_466(56), __n_476(63)>
  # .MEM_1096 = PHI <.MEM_1532(56), .MEM_1589(63)>
  # PT = nonlocal escaped 
  # SR.2166_1211 = PHI <_401(56), SR.2166_1210(63)>
  # PT = nonlocal escaped 
  # SR.2167_1209 = PHI <_403(56), SR.2167_1207(63)>
  # PT = nonlocal escaped 
  # SR.2168_1202 = PHI <_404(56), SR.2168_1201(63)>
  # PT = nonlocal escaped null 
  # __first_1200 = PHI <__first_409(56), __first_1199(63)>
  # PT = nonlocal escaped null 
  # __first$_M_last_1129 = PHI <__first$_M_last_411(56), __first$_M_last_1128(63)>
  # PT = nonlocal escaped null 
  # __first$_M_node_1126 = PHI <__first$_M_node_412(56), __first$_M_node_1125(63)>
  # DEBUG __first$_M_nodeD.73039 => __first$_M_node_1126
  # DEBUG __first$_M_lastD.73038 => __first$_M_last_1129
  # DEBUG __firstD.73036 => __first_1200
  # DEBUG __nD.72403 => __n_1069
  # DEBUG D#100ptD.0 => &D.72396
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.72397
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_1096>
  _470 = MEM[(const intD.9 &)__first_1200];
  # .MEM_1589 = VDEF <.MEM_1096>
  *SR.2166_1211 = _470;
  # DEBUG thisD.72404 => &__firstD.72397
  # PT = nonlocal escaped null 
  __first_471 = __first_1200 + 4;
  # DEBUG __firstD.73036 => __first_471
  if (__first_471 == __first$_M_last_1129)
    goto <bb 58>;
  else
    goto <bb 59>;
;;    succ:       58 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 58, loop depth 2, count 0, freq 214, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72408 => &__firstD.72397
  # PT = nonlocal escaped null 
  __first$_M_node_482 = __first$_M_node_1126 + 8;
  # DEBUG thisD.72410 => &__firstD.72397
  # DEBUG __new_nodeD.72409 => __first$_M_node_482
  # DEBUG __first$_M_nodeD.73039 => __first$_M_node_482
  # VUSE <.MEM_1589>
  # PT = nonlocal escaped 
  __first_483 = MEM[(intD.9 * *)__first$_M_node_1126 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_484 = __first_483 + 512;
  # DEBUG __first$_M_lastD.73038 => __first$_M_last_484
  # DEBUG __firstD.73036 => __first_483
;;    succ:       59 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 2, count 0, freq 3180, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       57 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __first_1199 = PHI <__first_471(57), __first_483(58)>
  # PT = nonlocal escaped null 
  # __first$_M_last_1128 = PHI <__first$_M_last_1129(57), __first$_M_last_484(58)>
  # PT = nonlocal escaped null 
  # __first$_M_node_1125 = PHI <__first$_M_node_1126(57), __first$_M_node_482(58)>
  # DEBUG __first$_M_nodeD.73039 => __first$_M_node_1125
  # DEBUG __first$_M_lastD.73038 => __first$_M_last_1128
  # DEBUG __firstD.73036 => __first_1199
  # DEBUG thisD.72405 => &D.72396
  # PT = nonlocal escaped 
  _474 = SR.2166_1211 + 4;
  if (_474 == SR.2167_1209)
    goto <bb 60>;
  else
    goto <bb 61>;
;;    succ:       60 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 60, loop depth 2, count 0, freq 214, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       59 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72412 => &D.72396
  # PT = nonlocal escaped 
  _486 = SR.2168_1202 + 8;
  # DEBUG thisD.72414 => &D.72396
  # DEBUG __new_nodeD.72413 => _486
  # VUSE <.MEM_1589>
  # PT = nonlocal escaped 
  _487 = MEM[(intD.9 * *)SR.2168_1202 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _488 = _487 + 512;
;;    succ:       61 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 61, loop depth 2, count 0, freq 3180, maybe hot
;;    prev block 60, next block 62, flags: (NEW, REACHABLE)
;;    pred:       59 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                60 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.2166_1210 = PHI <_474(59), _487(60)>
  # PT = nonlocal escaped 
  # SR.2167_1207 = PHI <SR.2167_1209(59), _488(60)>
  # PT = nonlocal escaped 
  # SR.2168_1201 = PHI <SR.2168_1202(59), _486(60)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_476 = __n_1069 + -1;
  # DEBUG __nD.72403 => __n_476
  # DEBUG __nD.72403 => __n_476
  if (__n_476 <= 0)
    goto <bb 62>;
  else
    goto <bb 63>;
;;    succ:       62 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 62, loop depth 1, count 0, freq 286, maybe hot
;;    prev block 61, next block 63, flags: (NEW)
;;    pred:       61 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1387 = PHI <.MEM_1589(61)>
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 63, loop depth 2, count 0, freq 2894, maybe hot
;;    prev block 62, next block 64, flags: (NEW)
;;    pred:       61 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 57>;
;;    succ:       57 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 63, next block 65, flags: (NEW, REACHABLE)
;;    pred:       52 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                55 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1014 = PHI <.MEM_1094(52), .MEM_1608(55)>
  # RANGE [0, 18446744073709551614]
  __n_372 = __n_1066 + 18446744073709551615;
  # DEBUG __nD.72288 => __n_372
  # PT = nonlocal escaped 
  __old_finish_373 = __old_finish_1067 + 80;
  # DEBUG __curD.72290 => __old_finish_373
  # DEBUG __curD.72290 => __old_finish_373
  # DEBUG __nD.72288 => __n_372
  if (__n_372 == 0)
    goto <bb 65>;
  else
    goto <bb 66>;
;;    succ:       65 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 64, next block 66, flags: (NEW)
;;    pred:       64 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_1043 = PHI <__old_finish_373(64)>
  goto <bb 67>;
;;    succ:       67 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 1, count 0, freq 431, maybe hot
;;    prev block 65, next block 67, flags: (NEW)
;;    pred:       64 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 52>;
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 67, loop depth 0, count 0, freq 21, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       65 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                50 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_1068 = PHI <__old_finish_1043(65), __old_finish_26(50)>
  # .MEM_1095 = PHI <.MEM_1014(65), .MEM_1427(50)>
  # .MEM_71 = VDEF <.MEM_1095>
  this_9(D)->D.41195._M_implD.40686._M_finishD.40689 = __old_finish_1068;
  # DEBUG D#703ptD.0 => &this_9(D)->D.41195
  # DEBUG thisD.61835 => D#703ptD.0
  # DEBUG thisD.61833 => &__positionD.41120
  # DEBUG __firstD.61818 => D#1186ptD.0
  # DEBUG __lastD.61819 => __old_finish_26
  # DEBUG __resultD.61820 => NULL
  # DEBUG __allocD.61821 => D#609ptD.0
  # DEBUG D#608ptD.0 => D#609ptD.0
  # DEBUG D#607ptD.0 => D#608ptD.0
  # DEBUG __firstD.61825 => D#1186ptD.0
  # DEBUG __lastD.61824 => __old_finish_26
  # DEBUG __resultD.61823 => NULL
  # DEBUG D.61822 => D#607ptD.0
  # DEBUG __firstD.61828 => D#1186ptD.0
  # DEBUG __lastD.61827 => __old_finish_26
  # DEBUG __resultD.61826 => NULL
  # DEBUG __assignableD.61831 => 1
  # DEBUG __firstD.72416 => D#1186ptD.0
  # DEBUG __lastD.72417 => __old_finish_26
  # DEBUG __resultD.72418 => __old_finish_1068
  # DEBUG __curD.72419 => __old_finish_1068
  # DEBUG __firstD.72416 => D#1186ptD.0
  if (__position_23 == __old_finish_26)
    goto <bb 217>;
  else
    goto <bb 75>;
;;    succ:       217 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                75 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       53 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_1032 = PHI <__old_finish_1067(53)>
<L22>: [LP 10]
  # VUSE <.MEM_1532>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _374 = __builtin_eh_pointerD.2738 (17);
  # .MEM_1609 = VDEF <.MEM_1532>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_374);
  # DEBUG __firstD.72292 => __old_finish_26
  # DEBUG __lastD.72291 => __old_finish_1032
  # DEBUG __firstD.72295 => __old_finish_26
  # DEBUG __lastD.72294 => __old_finish_1032
  # DEBUG __firstD.72295 => __old_finish_26
  if (__old_finish_26 == __old_finish_1032)
    goto <bb 69>;
  else
    goto <bb 70>;
;;    succ:       69 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                70 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       68 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                71 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1588 = PHI <.MEM_1609(68), .MEM_1612(71)>
  [LP 9] # .MEM_1613 = VDEF <.MEM_1588>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       73 (EH,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW, REACHABLE)
;;    pred:       68 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 70, next block 72, flags: (NEW)
;;    pred:       70 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                72 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_670 = PHI <__old_finish_26(70), __old_finish_377(72)>
  # .MEM_1098 = PHI <.MEM_1609(70), .MEM_1612(72)>
  # DEBUG __firstD.72295 => __old_finish_670
  # DEBUG __rD.57673 => __old_finish_670
  # DEBUG __pointerD.72296 => NULL
  # DEBUG thisD.72297 => NULL
  # DEBUG thisD.72298 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # PT = nonlocal escaped 
  _376 = &MEM[(struct dequeD.40449 *)__old_finish_670].D.43590;
  # .MEM_1610 = VDEF <.MEM_1098>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (_376);
  # .MEM_1612 = VDEF <.MEM_1610>
  MEM[(struct  &)__old_finish_670] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __old_finish_377 = __old_finish_670 + 80;
  # DEBUG __firstD.72295 => __old_finish_377
  # DEBUG __firstD.72295 => __old_finish_377
  if (__old_finish_377 == __old_finish_1032)
    goto <bb 69>;
  else
    goto <bb 72>;
;;    succ:       69 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                72 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 72, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 71, next block 73, flags: (NEW)
;;    pred:       71 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 71>;
;;    succ:       71 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       69 (EH,EXECUTABLE)
<L24>: [LP 9]
  [MNT 15] # .MEM_1614 = VDEF <.MEM_1613>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_end_catchD.13513 ();
  [LP 24] resx 16
;;    succ:       74 (EH,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 (EH,EXECUTABLE)
<L42>: [LP 24]
  goto <bb 200> (<L10>);
;;    succ:       200 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       67 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 76, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 75, next block 77, flags: (NEW)
;;    pred:       75 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                89 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_1070 = PHI <__position_23(75), __position_493(89)>
  # PT = nonlocal escaped 
  # __old_finish_1071 = PHI <__old_finish_1068(75), __old_finish_494(89)>
  # .MEM_1100 = PHI <.MEM_71(75), .MEM_1020(89)>
  # DEBUG __curD.72419 => __old_finish_1071
  # DEBUG __firstD.72416 => __position_1070
  # DEBUG __rD.60623 => __old_finish_1071
  # DEBUG __pD.72429 => NULL
  # DEBUG __valueD.72428 => __position_1070
  # DEBUG D#11ptD.0 => 80
  # DEBUG __pD.60611 => NULL
  # DEBUG D.60612 => D#11ptD.0
  if (__old_finish_1071 != 0B)
    goto <bb 77>;
  else
    goto <bb 88>;
;;    succ:       77 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                88 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 77, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       76 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72431 => NULL
  # DEBUG D.72430 => __position_1070
  # DEBUG D#1160ptD.0 => &MEM[(const struct queueD.40450 &)__position_1070].cD.43633
  # DEBUG D#1167ptD.0 => &__old_finish_1071->cD.43633
  # DEBUG thisD.72436 => D#1167ptD.0
  # DEBUG __xD.72437 => D#1160ptD.0
  # DEBUG thisD.72438 => D#1160ptD.0
  # DEBUG D#174ptD.0 => &D#1160ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &D#1160ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.72440 => D#175ptD.0
  # DEBUG __yD.72439 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_1100>
  # PT = nonlocal escaped 
  _128 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1070 + 48]._M_nodeD.42943;
  _499 = (long intD.12) _128;
  # VUSE <.MEM_1100>
  # PT = nonlocal escaped 
  _500 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1070 + 16]._M_nodeD.42943;
  _501 = (long intD.12) _500;
  _502 = _499 - _501;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _503 = _502 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _504 = _503 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _505 = _504 * 128;
  # VUSE <.MEM_1100>
  # PT = nonlocal escaped 
  _506 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1070 + 48]._M_curD.42940;
  _507 = (long intD.12) _506;
  # VUSE <.MEM_1100>
  # PT = nonlocal escaped 
  _508 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1070 + 48]._M_firstD.42941;
  _509 = (long intD.12) _508;
  _510 = _507 - _509;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _511 = _510 /[ex] 4;
  _512 = _505 + _511;
  # VUSE <.MEM_1100>
  # PT = nonlocal escaped 
  _513 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1070 + 16]._M_lastD.42942;
  _514 = (long intD.12) _513;
  # VUSE <.MEM_1100>
  # PT = nonlocal escaped 
  _515 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1070 + 16]._M_curD.42940;
  _516 = (long intD.12) _515;
  _517 = _514 - _516;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _518 = _517 /[ex] 4;
  _519 = _512 + _518;
  # RANGE [0, 18446744073709551615]
  _520 = (size_typeD.43117) _519;
  # DEBUG D#604ptD.0 => &D#1160ptD.0->D.43590
  # DEBUG thisD.60602 => D#604ptD.0
  # DEBUG __aD.60600 => NULL
  # PT = nonlocal escaped 
  _521 = &MEM[(struct dequeD.40449 *)__old_finish_1071].D.43590;
  # DEBUG thisD.72443 => _521
  # DEBUG __aD.72442 => NULL
  # DEBUG __num_elementsD.72441 => _520
  # DEBUG D#484ptD.0 => &_521->_M_implD.43041
  # DEBUG thisD.72445 => D#484ptD.0
  # DEBUG __aD.72444 => NULL
  # DEBUG thisD.55193 => D#484ptD.0
  # DEBUG __aD.55194 => NULL
  # DEBUG thisD.55188 => D#484ptD.0
  # DEBUG D.55189 => NULL
  # .MEM_1616 = VDEF <.MEM_1100>
  MEM[(struct _Deque_implD.43009 *)__old_finish_1071]._M_mapD.43043 = 0B;
  # .MEM_1617 = VDEF <.MEM_1616>
  MEM[(struct _Deque_implD.43009 *)__old_finish_1071]._M_map_sizeD.43044 = 0;
  # DEBUG D#241ptD.0 => &D#484ptD.0->_M_startD.43045
  # DEBUG thisD.72446 => D#241ptD.0
  # .MEM_1618 = VDEF <.MEM_1617>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1071 + 16B]._M_curD.42940 = 0B;
  # .MEM_1619 = VDEF <.MEM_1618>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1071 + 16B]._M_firstD.42941 = 0B;
  # .MEM_1620 = VDEF <.MEM_1619>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1071 + 16B]._M_lastD.42942 = 0B;
  # .MEM_1621 = VDEF <.MEM_1620>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1071 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#240ptD.0 => &D#484ptD.0->_M_finishD.43046
  # DEBUG thisD.72447 => D#240ptD.0
  # .MEM_1622 = VDEF <.MEM_1621>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1071 + 48B]._M_curD.42940 = 0B;
  # .MEM_1623 = VDEF <.MEM_1622>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1071 + 48B]._M_firstD.42941 = 0B;
  # .MEM_1624 = VDEF <.MEM_1623>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1071 + 48B]._M_lastD.42942 = 0B;
  # .MEM_1625 = VDEF <.MEM_1624>
  MEM[(struct _Deque_iteratorD.42908 *)__old_finish_1071 + 48B]._M_nodeD.42943 = 0B;
  [LP 12] # .MEM_1626 = VDEF <.MEM_1625>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (_521, _520);
;;    succ:       78 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                91 (EH,EXECUTABLE)

;;   basic block 78, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 77, next block 79, flags: (NEW, REACHABLE)
;;    pred:       77 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#605ptD.0 => &D#1167ptD.0->D.43590
  # DEBUG thisD.60590 => D#605ptD.0
  # DEBUG D#606ptD.0 => &D#1167ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72449 => &D.72458
  # DEBUG __xD.72448 => D#606ptD.0
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  _522 = MEM[(const struct iteratorD.42928 &)__old_finish_1071 + 16]._M_curD.42940;
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  _524 = MEM[(const struct iteratorD.42928 &)__old_finish_1071 + 16]._M_lastD.42942;
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  _525 = MEM[(const struct iteratorD.42928 &)__old_finish_1071 + 16]._M_nodeD.42943;
  # DEBUG thisD.72450 => D#1160ptD.0
  # DEBUG D#83ptD.0 => &D#1160ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.72452 => &D.72457
  # DEBUG __xD.72451 => D#83ptD.0
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  _526 = MEM[(const struct iteratorD.44725 &)__position_1070 + 48]._M_curD.42940;
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  _527 = MEM[(const struct iteratorD.44725 &)__position_1070 + 48]._M_firstD.42941;
  # DEBUG D#1166ptD.0 => MEM[(const struct iteratorD.44725 &)__position_1070 + 48]._M_lastD.42942
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  _529 = MEM[(const struct iteratorD.44725 &)__position_1070 + 48]._M_nodeD.42943;
  # DEBUG thisD.72453 => D#1160ptD.0
  # DEBUG D#84ptD.0 => &D#1160ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72455 => &D.72456
  # DEBUG __xD.72454 => D#84ptD.0
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  __first_530 = MEM[(const struct iteratorD.44725 &)__position_1070 + 16]._M_curD.42940;
  # DEBUG D#1177ptD.0 => MEM[(const struct iteratorD.44725 &)__position_1070 + 16]._M_firstD.42941
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  __first$_M_last_532 = MEM[(const struct iteratorD.44725 &)__position_1070 + 16]._M_lastD.42942;
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  __first$_M_node_533 = MEM[(const struct iteratorD.44725 &)__position_1070 + 16]._M_nodeD.42943;
  # DEBUG __resultD.72461 => &D.72458
  # DEBUG D.72462 => D#603ptD.0
  # DEBUG thisD.72464 => &D.72466
  # DEBUG __xD.72463 => &D.72458
  # DEBUG __resultD.72469 => &D.72466
  # DEBUG __assignableD.72472 => 1
  # DEBUG thisD.72474 => NULL
  # DEBUG __xD.72473 => &D.72466
  # DEBUG __resultD.72475 => NULL
  # DEBUG thisD.72479 => &D.72480
  # DEBUG __xD.72478 => NULL
  # DEBUG __resultD.72483 => &D.72480
  # DEBUG thisD.72485 => &D.72500
  # DEBUG __xD.72484 => &D.72480
  # DEBUG __itD.72493 => _526
  # DEBUG __it$8D.72492 => _527
  # DEBUG __it$16D.72491 => D#1166ptD.0
  # DEBUG __it$24D.72490 => _529
  # DEBUG __it$_M_curD.60535 => _526
  # DEBUG __it$_M_firstD.60534 => _527
  # DEBUG __it$_M_lastD.60533 => D#1166ptD.0
  # DEBUG __it$_M_nodeD.60532 => _529
  # DEBUG __itD.72497 => __first_530
  # DEBUG __it$8D.72496 => D#1177ptD.0
  # DEBUG __it$16D.72495 => __first$_M_last_532
  # DEBUG __it$24D.72494 => __first$_M_node_533
  # DEBUG __it$_M_curD.60529 => __first_530
  # DEBUG __it$_M_firstD.60528 => D#1177ptD.0
  # DEBUG __it$_M_lastD.60527 => __first$_M_last_532
  # DEBUG __it$_M_nodeD.60526 => __first$_M_node_533
  # DEBUG __resultD.72503 => &D.72500
  # DEBUG thisD.72505 => NULL
  # DEBUG __xD.72504 => &D.72500
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.72519 => _526
  # DEBUG __it$8D.72518 => _527
  # DEBUG __it$16D.72517 => D#1166ptD.0
  # DEBUG __it$24D.72515 => _529
  # DEBUG __it$_M_curD.60489 => _526
  # DEBUG __it$_M_firstD.60488 => _527
  # DEBUG __it$_M_lastD.60487 => D#1166ptD.0
  # DEBUG __it$_M_nodeD.60486 => _529
  # DEBUG __itD.72524 => __first_530
  # DEBUG __it$8D.72523 => D#1177ptD.0
  # DEBUG __it$16D.72522 => __first$_M_last_532
  # DEBUG __it$24D.72520 => __first$_M_node_533
  # DEBUG __it$_M_curD.60483 => __first_530
  # DEBUG __it$_M_firstD.60482 => D#1177ptD.0
  # DEBUG __it$_M_lastD.60481 => __first$_M_last_532
  # DEBUG __it$_M_nodeD.60480 => __first$_M_node_533
  # DEBUG __firstD.73040 => __first_530
  # DEBUG __first$8D.73041 => D#1177ptD.0
  # DEBUG __first$16D.73042 => __first$_M_last_532
  # DEBUG __first$24D.73043 => __first$_M_node_533
  # DEBUG __resultD.72506 => NULL
  # DEBUG __simpleD.72512 => 0
  # DEBUG thisD.72514 => &D.72525
  # DEBUG __xD.72513 => NULL
  # DEBUG __firstD.73047 => __first_530
  # DEBUG __first$_M_firstD.73048 => D#1177ptD.0
  # DEBUG __first$_M_lastD.73049 => __first$_M_last_532
  # DEBUG __first$_M_nodeD.73050 => __first$_M_node_533
  # DEBUG __resultD.72528 => &D.72525
  # DEBUG __xD.72536 => &__lastD.72527
  # DEBUG __yD.72535 => &__firstD.72526
  # DEBUG __sizeD.60431 => 4
  _567 = (long intD.12) _529;
  _569 = (long intD.12) __first$_M_node_533;
  _570 = _567 - _569;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _571 = _570 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _572 = _571 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _573 = _572 * 128;
  _575 = (long intD.12) _526;
  _577 = (long intD.12) _527;
  _578 = _575 - _577;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _579 = _578 /[ex] 4;
  _580 = _573 + _579;
  _582 = (long intD.12) __first$_M_last_532;
  _584 = (long intD.12) __first_530;
  _585 = _582 - _584;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _586 = _585 /[ex] 4;
  __n_587 = _580 + _586;
  # DEBUG __nD.72532 => __n_587
  # DEBUG __nD.72532 => __n_587
  if (__n_587 <= 0)
    goto <bb 79>;
  else
    goto <bb 80>;
;;    succ:       79 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                80 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 79, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       78 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                86 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1584 = PHI <.MEM_1626(78), .MEM_1385(86)>
  # DEBUG thisD.72531 => &D.72465
  # DEBUG __xD.72530 => &D.72525
  # .MEM_1698 = VDEF <.MEM_1584>
  D.72525 ={v} {CLOBBER};
  # .MEM_1699 = VDEF <.MEM_1698>
  D.72500 ={v} {CLOBBER};
  # .MEM_1700 = VDEF <.MEM_1699>
  D.72480 ={v} {CLOBBER};
  # .MEM_1701 = VDEF <.MEM_1700>
  D.72466 ={v} {CLOBBER};
  # .MEM_1702 = VDEF <.MEM_1701>
  D.72458 ={v} {CLOBBER};
  goto <bb 88>;
;;    succ:       88 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 80, loop depth 1, count 0, freq 410, maybe hot
;;    prev block 79, next block 81, flags: (NEW, REACHABLE)
;;    pred:       78 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       81 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 81, loop depth 2, count 0, freq 4553, maybe hot
;;    prev block 80, next block 82, flags: (NEW)
;;    pred:       80 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                87 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1073 = PHI <__n_587(80), __n_597(87)>
  # .MEM_1102 = PHI <.MEM_1626(80), .MEM_1683(87)>
  # PT = nonlocal escaped 
  # SR.2176_1124 = PHI <_522(80), SR.2176_1123(87)>
  # PT = nonlocal escaped 
  # SR.2177_1121 = PHI <_524(80), SR.2177_1120(87)>
  # PT = nonlocal escaped 
  # SR.2178_1117 = PHI <_525(80), SR.2178_1116(87)>
  # PT = nonlocal escaped 
  # __first_1115 = PHI <__first_530(80), __first_1113(87)>
  # PT = nonlocal escaped 
  # __first$_M_last_1108 = PHI <__first$_M_last_532(80), __first$_M_last_1107(87)>
  # PT = nonlocal escaped 
  # __first$_M_node_1106 = PHI <__first$_M_node_533(80), __first$_M_node_1105(87)>
  # DEBUG __first$_M_nodeD.73050 => __first$_M_node_1106
  # DEBUG __first$_M_lastD.73049 => __first$_M_last_1108
  # DEBUG __firstD.73047 => __first_1115
  # DEBUG __nD.72532 => __n_1073
  # DEBUG D#100ptD.0 => &D.72525
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.72526
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_1102>
  _591 = MEM[(const intD.9 &)__first_1115];
  # .MEM_1683 = VDEF <.MEM_1102>
  *SR.2176_1124 = _591;
  # DEBUG thisD.72533 => &__firstD.72526
  # PT = nonlocal escaped 
  __first_592 = __first_1115 + 4;
  # DEBUG __firstD.73047 => __first_592
  if (__first_592 == __first$_M_last_1108)
    goto <bb 82>;
  else
    goto <bb 83>;
;;    succ:       82 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                83 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 82, loop depth 2, count 0, freq 306, maybe hot
;;    prev block 81, next block 83, flags: (NEW, REACHABLE)
;;    pred:       81 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72537 => &__firstD.72526
  # PT = nonlocal escaped 
  __first$_M_node_603 = __first$_M_node_1106 + 8;
  # DEBUG thisD.72539 => &__firstD.72526
  # DEBUG __new_nodeD.72538 => __first$_M_node_603
  # DEBUG __first$_M_nodeD.73050 => __first$_M_node_603
  # VUSE <.MEM_1683>
  # PT = nonlocal escaped 
  __first_604 = MEM[(intD.9 * *)__first$_M_node_1106 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_605 = __first_604 + 512;
  # DEBUG __first$_M_lastD.73049 => __first$_M_last_605
  # DEBUG __firstD.73047 => __first_604
;;    succ:       83 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 83, loop depth 2, count 0, freq 4553, maybe hot
;;    prev block 82, next block 84, flags: (NEW, REACHABLE)
;;    pred:       81 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                82 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_1113 = PHI <__first_592(81), __first_604(82)>
  # PT = nonlocal escaped 
  # __first$_M_last_1107 = PHI <__first$_M_last_1108(81), __first$_M_last_605(82)>
  # PT = nonlocal escaped 
  # __first$_M_node_1105 = PHI <__first$_M_node_1106(81), __first$_M_node_603(82)>
  # DEBUG __first$_M_nodeD.73050 => __first$_M_node_1105
  # DEBUG __first$_M_lastD.73049 => __first$_M_last_1107
  # DEBUG __firstD.73047 => __first_1113
  # DEBUG thisD.72534 => &D.72525
  # PT = nonlocal escaped 
  _595 = SR.2176_1124 + 4;
  if (_595 == SR.2177_1121)
    goto <bb 84>;
  else
    goto <bb 85>;
;;    succ:       84 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                85 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 84, loop depth 2, count 0, freq 306, maybe hot
;;    prev block 83, next block 85, flags: (NEW, REACHABLE)
;;    pred:       83 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72541 => &D.72525
  # PT = nonlocal escaped 
  _607 = SR.2178_1117 + 8;
  # DEBUG thisD.72543 => &D.72525
  # DEBUG __new_nodeD.72542 => _607
  # VUSE <.MEM_1683>
  # PT = nonlocal escaped 
  _608 = MEM[(intD.9 * *)SR.2178_1117 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _609 = _608 + 512;
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 85, loop depth 2, count 0, freq 4554, maybe hot
;;    prev block 84, next block 86, flags: (NEW, REACHABLE)
;;    pred:       83 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                84 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # SR.2176_1123 = PHI <_595(83), _608(84)>
  # PT = nonlocal escaped 
  # SR.2177_1120 = PHI <SR.2177_1121(83), _609(84)>
  # PT = nonlocal escaped 
  # SR.2178_1116 = PHI <SR.2178_1117(83), _607(84)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_597 = __n_1073 + -1;
  # DEBUG __nD.72532 => __n_597
  # DEBUG __nD.72532 => __n_597
  if (__n_597 <= 0)
    goto <bb 86>;
  else
    goto <bb 87>;
;;    succ:       86 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                87 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 86, loop depth 1, count 0, freq 410, maybe hot
;;    prev block 85, next block 87, flags: (NEW)
;;    pred:       85 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1385 = PHI <.MEM_1683(85)>
  goto <bb 79>;
;;    succ:       79 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 87, loop depth 2, count 0, freq 4144, maybe hot
;;    prev block 86, next block 88, flags: (NEW)
;;    pred:       85 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 81>;
;;    succ:       81 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 88, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 87, next block 89, flags: (NEW, REACHABLE)
;;    pred:       76 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                79 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1020 = PHI <.MEM_1100(76), .MEM_1702(79)>
  # PT = nonlocal 
  __position_493 = __position_1070 + 80;
  # DEBUG __firstD.72416 => __position_493
  # PT = nonlocal escaped 
  __old_finish_494 = __old_finish_1071 + 80;
  # DEBUG __curD.72419 => __old_finish_494
  # DEBUG __curD.72419 => __old_finish_494
  # DEBUG __firstD.72416 => __position_493
  if (__old_finish_26 == __position_493)
    goto <bb 90>;
  else
    goto <bb 89>;
;;    succ:       90 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                89 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 89, loop depth 1, count 0, freq 431, maybe hot
;;    prev block 88, next block 90, flags: (NEW)
;;    pred:       88 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 76>;
;;    succ:       76 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 90, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 89, next block 91, flags: (NEW, REACHABLE)
;;    pred:       88 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1020>
  # PT = nonlocal escaped 
  _74 = this_9(D)->D.41195._M_implD.40686._M_finishD.40689;
  # RANGE [0, 18446744073709551615]
  _75 = (long unsigned intD.14) _31;
  # PT = nonlocal escaped 
  _76 = _74 + _75;
  # .MEM_77 = VDEF <.MEM_1020>
  this_9(D)->D.41195._M_implD.40686._M_finishD.40689 = _76;
  # DEBUG thisD.61845 => &__positionD.41120
  # DEBUG __firstD.61837 => D#1186ptD.0
  # DEBUG __lastD.61838 => __old_finish_26
  # DEBUG __valueD.61839 => &__x_copyD.46166
  # DEBUG __firstD.61842 => D#1186ptD.0
  if (__position_23 == __old_finish_26)
    goto <bb 44>;
  else
    goto <bb 98>;
;;    succ:       44 (TRUE_VALUE,EXECUTABLE)
;;                98 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 90, next block 92, flags: (NEW, REACHABLE)
;;    pred:       77 (EH,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_1031 = PHI <__old_finish_1071(77)>
<L25>: [LP 12]
  # VUSE <.MEM_1626>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _495 = __builtin_eh_pointerD.2738 (20);
  # .MEM_1703 = VDEF <.MEM_1626>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_495);
  # DEBUG __firstD.72421 => __old_finish_1068
  # DEBUG __lastD.72420 => __old_finish_1031
  # DEBUG __firstD.72424 => __old_finish_1068
  # DEBUG __lastD.72423 => __old_finish_1031
  # DEBUG __firstD.72424 => __old_finish_1068
  if (__old_finish_1068 == __old_finish_1031)
    goto <bb 92>;
  else
    goto <bb 93>;
;;    succ:       92 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                93 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 91, next block 93, flags: (NEW, REACHABLE)
;;    pred:       91 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                94 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1582 = PHI <.MEM_1703(91), .MEM_1706(94)>
  [LP 11] # .MEM_1707 = VDEF <.MEM_1582>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       96 (EH,EXECUTABLE)

;;   basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       91 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       94 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 94, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 93, next block 95, flags: (NEW)
;;    pred:       93 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                95 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __old_finish_1072 = PHI <__old_finish_1068(93), __old_finish_498(95)>
  # .MEM_1104 = PHI <.MEM_1703(93), .MEM_1706(95)>
  # DEBUG __firstD.72424 => __old_finish_1072
  # DEBUG __rD.57673 => __old_finish_1072
  # DEBUG __pointerD.72425 => NULL
  # DEBUG thisD.72426 => NULL
  # DEBUG thisD.72427 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # PT = nonlocal escaped 
  _497 = &MEM[(struct dequeD.40449 *)__old_finish_1072].D.43590;
  # .MEM_1704 = VDEF <.MEM_1104>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (_497);
  # .MEM_1706 = VDEF <.MEM_1704>
  MEM[(struct  &)__old_finish_1072] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __old_finish_498 = __old_finish_1072 + 80;
  # DEBUG __firstD.72424 => __old_finish_498
  # DEBUG __firstD.72424 => __old_finish_498
  if (__old_finish_498 == __old_finish_1031)
    goto <bb 92>;
  else
    goto <bb 95>;
;;    succ:       92 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                95 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 95, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 94, next block 96, flags: (NEW)
;;    pred:       94 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 94>;
;;    succ:       94 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 95, next block 97, flags: (NEW, REACHABLE)
;;    pred:       92 (EH,EXECUTABLE)
<L27>: [LP 11]
  [MNT 18] # .MEM_1708 = VDEF <.MEM_1707>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_end_catchD.13513 ();
  [LP 25] resx 19
;;    succ:       97 (EH,EXECUTABLE)

;;   basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 96, next block 98, flags: (NEW)
;;    pred:       96 (EH,EXECUTABLE)
<L43>: [LP 25]
  goto <bb 200> (<L10>);
;;    succ:       200 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 98, loop depth 0, count 0, freq 20, maybe hot
;;    prev block 97, next block 99, flags: (NEW, REACHABLE)
;;    pred:       90 [100.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 99, loop depth 1, count 0, freq 450, maybe hot
;;    prev block 98, next block 100, flags: (NEW)
;;    pred:       98 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                102 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_236 = PHI <__position_23(98), __position_88(102)>
  # .MEM_1421 = PHI <.MEM_77(98), .MEM_129(102)>
  # DEBUG __firstD.61842 => __position_236
  # DEBUG thisD.61844 => __position_236
  # DEBUG D.61843 => &__x_copyD.46166
  # PT = nonlocal 
  _87 = &__position_236->cD.43633;
  [LP 2] # .MEM_129 = VDEF <.MEM_1421>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt5dequeIiSaIiEEaSERKS1_D.43169 (_87, &__x_copyD.46166.cD.43633);
  goto <bb 101>;
;;    succ:       101 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                100 (EH,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 99, next block 101, flags: (NEW)
;;    pred:       99 (EH,EXECUTABLE)
<L44>: [LP 2]
  goto <bb 200> (<L10>);
;;    succ:       200 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 101, loop depth 1, count 0, freq 451, maybe hot
;;    prev block 100, next block 102, flags: (NEW, REACHABLE)
;;    pred:       99 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  __position_88 = __position_236 + 80;
  # DEBUG __firstD.61842 => __position_88
  # DEBUG __firstD.61842 => __position_88
  if (__old_finish_26 == __position_88)
    goto <bb 44>;
  else
    goto <bb 102>;
;;    succ:       44 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                102 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 102, loop depth 1, count 0, freq 431, maybe hot
;;    prev block 101, next block 103, flags: (NEW)
;;    pred:       101 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 99>;
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 103, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       217 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_492(217), .MEM_1705(44)>
  # DEBUG thisD.61847 => &__x_copyD.46166
  # DEBUG D#458ptD.0 => &__x_copyD.46166.cD.43633
  # DEBUG thisD.61848 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG thisD.72545 => &MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590
  # VUSE <.MEM_2>
  # PT = nonlocal escaped null 
  _610 = MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041._M_mapD.43043;
  if (_610 != 0B)
    goto <bb 104>;
  else
    goto <bb 110>;
;;    succ:       104 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                110 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 38, maybe hot
;;    prev block 103, next block 105, flags: (NEW, REACHABLE)
;;    pred:       103 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_2>
  # PT = nonlocal escaped null 
  _611 = MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped null 
  _612 = _611 + 8;
  # VUSE <.MEM_2>
  # PT = nonlocal escaped null 
  __nstart_613 = MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.72551 => &MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590
  # DEBUG __nstartD.72550 => __nstart_613
  # DEBUG __nfinishD.72549 => _612
  # DEBUG __nD.72552 => __nstart_613
  # DEBUG __nD.72552 => __nstart_613
  if (_612 <= __nstart_613)
    goto <bb 109>;
  else
    goto <bb 105>;
;;    succ:       109 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                105 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 35, maybe hot
;;    prev block 104, next block 106, flags: (NEW, REACHABLE)
;;    pred:       104 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       106 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 106, loop depth 1, count 0, freq 386, maybe hot
;;    prev block 105, next block 107, flags: (NEW)
;;    pred:       105 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                107 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __nstart_1074 = PHI <__nstart_613(105), __nstart_616(107)>
  # .MEM_1110 = PHI <.MEM_2(105), .MEM_1710(107)>
  # DEBUG __nD.72552 => __nstart_1074
  # VUSE <.MEM_1110>
  # PT = nonlocal escaped 
  _615 = *__nstart_1074;
  # DEBUG thisD.72554 => &MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590
  # DEBUG __pD.72553 => _615
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.72558 => _615
  # DEBUG __aD.72556 => D#144ptD.0
  # DEBUG __nD.72557 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.72561 => _615
  # DEBUG thisD.72559 => D#140ptD.0
  # DEBUG D.72560 => D#141ptD.0
  # .MEM_1710 = VDEF <.MEM_1110>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZdlPvD.2766 (_615);
  # PT = nonlocal escaped null 
  __nstart_616 = __nstart_1074 + 8;
  # DEBUG __nD.72552 => __nstart_616
  # DEBUG __nD.72552 => __nstart_616
  if (_612 <= __nstart_616)
    goto <bb 108>;
  else
    goto <bb 107>;
;;    succ:       108 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                107 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 107, loop depth 1, count 0, freq 351, maybe hot
;;    prev block 106, next block 108, flags: (NEW)
;;    pred:       106 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 106>;
;;    succ:       106 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 108, loop depth 0, count 0, freq 35, maybe hot
;;    prev block 107, next block 109, flags: (NEW)
;;    pred:       106 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1710>
  pretmp_1338 = MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041._M_mapD.43043;
;;    succ:       109 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 109, loop depth 0, count 0, freq 38, maybe hot
;;    prev block 108, next block 110, flags: (NEW, REACHABLE)
;;    pred:       108 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                104 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1111 = PHI <.MEM_1710(108), .MEM_2(104)>
  # PT = nonlocal escaped null 
  # prephitmp_1339 = PHI <pretmp_1338(108), _610(104)>
  # DEBUG D#447ptD.0 => MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041._M_map_sizeD.43044
  # DEBUG D#1182ptD.0 => MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => &MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.72564 => D#1182ptD.0
  # DEBUG thisD.72562 => D#445ptD.0
  # DEBUG __nD.72563 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.72565
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.72568 => D#1182ptD.0
  # DEBUG __aD.72566 => D#265ptD.0
  # DEBUG __nD.72567 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.72571 => D#1182ptD.0
  # DEBUG thisD.72569 => D#261ptD.0
  # DEBUG D.72570 => D#262ptD.0
  # .MEM_1711 = VDEF <.MEM_1111>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_1339);
  # DEBUG thisD.57611 => &__map_allocD.72565
  # DEBUG thisD.57590 => &__map_allocD.72565
;;    succ:       110 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 110, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 109, next block 111, flags: (NEW, REACHABLE)
;;    pred:       103 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                109 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1023 = PHI <.MEM_2(103), .MEM_1711(109)>
  # DEBUG D#448ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&__x_copyD.46166]._M_implD.43041
  # DEBUG thisD.72546 => D#448ptD.0
  # DEBUG thisD.72547 => D#448ptD.0
  # DEBUG thisD.72548 => D#448ptD.0
  # .MEM_78 = VDEF <.MEM_1023>
  __x_copyD.46166 ={v} {CLOBBER};
  goto <bb 198>;
;;    succ:       198 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 111, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 110, next block 112, flags: (NEW, REACHABLE)
;;    pred:       3 [50.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG thisD.72601 => this_9(D)
  # DEBUG __nD.72602 => __n_7(D)
  # DEBUG __nD.72602 => __n_7(D)
  # DEBUG __sD.72603 => "vector::_M_fill_insert"
  # DEBUG D#498ptD.0 => this_9(D)
  # DEBUG thisD.58068 => D#498ptD.0
  # DEBUG D#497ptD.0 => D#498ptD.0
  # DEBUG D#496ptD.0 => &D#497ptD.0->D.41195
  # DEBUG thisD.58058 => D#496ptD.0
  # DEBUG __aD.58050 => D#495ptD.0
  # DEBUG D#494ptD.0 => D#495ptD.0
  # DEBUG D#493ptD.0 => D#494ptD.0
  # DEBUG thisD.58041 => D#493ptD.0
  # VUSE <.MEM_8(D)>
  # PT = nonlocal escaped 
  _24 = MEM[(struct queueD.40450 * *)this_9(D)];
  # DEBUG D#72ptD.0 => this_9(D)
  # DEBUG D#72ptD.0 => this_9(D)
  # DEBUG thisD.72607 => D#72ptD.0
  # DEBUG thisD.72608 => D#72ptD.0
  _631 = (long intD.12) _24;
  _632 = _13 - _631;
  # RANGE [-115292150460684697, 115292150460684697]
  _633 = _632 /[ex] 80;
  # RANGE ~[115292150460684698, 18331451923248866918]
  _634 = (const long unsigned intD.14) _633;
  # RANGE [115292150460684698, 345876451382054092] NONZERO 576460752303423487
  _635 = 230584300921369395 - _634;
  if (__n_7(D) > _635)
    goto <bb 112>;
  else
    goto <bb 113>;
;;    succ:       112 [0.0%]  (TRUE_VALUE,EXECUTABLE)
;;                113 [100.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 111, next block 113, flags: (NEW, REACHABLE)
;;    pred:       111 [0.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1340 = VDEF <.MEM_8(D)>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZSt20__throw_length_errorPKcD.3967 ("vector::_M_fill_insert");
;;    succ:      

;;   basic block 113, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 112, next block 114, flags: (NEW, REACHABLE)
;;    pred:       111 [100.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => this_9(D)
  # DEBUG D#72ptD.0 => this_9(D)
  # DEBUG thisD.58086 => D#72ptD.0
  # DEBUG thisD.58085 => D#72ptD.0
  # DEBUG D#72ptD.0 => this_9(D)
  # DEBUG D#72ptD.0 => this_9(D)
  # DEBUG thisD.58081 => D#72ptD.0
  # DEBUG thisD.58080 => D#72ptD.0
  # DEBUG __aD.72606 => &D.72610
  # DEBUG __bD.72605 => &__nD.72602
  _676 = MAX_EXPR <__n_7(D), _634>;
  # RANGE [0, 18446744073709551615]
  __len_639 = _634 + _676;
  # DEBUG __lenD.72604 => __len_639
  # DEBUG D#72ptD.0 => this_9(D)
  # DEBUG D#72ptD.0 => this_9(D)
  # DEBUG thisD.58073 => D#72ptD.0
  # DEBUG thisD.58072 => D#72ptD.0
  # DEBUG D#498ptD.0 => this_9(D)
  # DEBUG thisD.58088 => D#498ptD.0
  # DEBUG D#497ptD.0 => D#498ptD.0
  # DEBUG D#496ptD.0 => &D#497ptD.0->D.41195
  # DEBUG thisD.58058 => D#496ptD.0
  # DEBUG __aD.58050 => D#495ptD.0
  # DEBUG D#494ptD.0 => D#495ptD.0
  # DEBUG D#493ptD.0 => D#494ptD.0
  # DEBUG thisD.58041 => D#493ptD.0
  _679 = __len_639 > 230584300921369395;
  _827 = _634 > __len_639;
  _93 = _679 | _827;
  if (_93 != 0)
    goto <bb 215>;
  else
    goto <bb 216>;
;;    succ:       215 [67.0%]  (TRUE_VALUE,EXECUTABLE)
;;                216 [33.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 114, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 113, next block 115, flags: (NEW)
;;    pred:       216 [16.0%]  (TRUE_VALUE,EXECUTABLE)
  pretmp_1336 = __len_639 * 80;
;;    succ:       115 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 115, loop depth 0, count 0, freq 38, maybe hot
;;    prev block 114, next block 116, flags: (NEW, REACHABLE)
;;    pred:       215 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                114 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE ~[115292150460684698, 18331451923248866918]
  # __elems_before_1050 = PHI <__elems_before_704(215), __elems_before_699(114)>
  # _938 = PHI <_708(215), _940(114)>
  # RANGE [80, 18446744073709551600] NONZERO 18446744073709551600
  # prephitmp_1337 = PHI <18446744073709551600(215), pretmp_1336(114)>
  # DEBUG __lenD.46200 => NULL
  # DEBUG thisD.61864 => this_9(D)
  # DEBUG D#176ptD.0 => &this_9(D)->D.41195._M_implD.40686._M_startD.40688
  # DEBUG thisD.61866 => NULL
  # DEBUG __iD.61865 => D#176ptD.0
  # DEBUG __lhsD.61861 => &__positionD.41120
  # DEBUG __rhsD.61862 => &D.46202
  # DEBUG thisD.54352 => &__positionD.41120
  # DEBUG thisD.54350 => &D.46202
  # DEBUG __elems_beforeD.46201 => __elems_before_1050
  # DEBUG D#713ptD.0 => &this_9(D)->D.41195
  # DEBUG D#506ptD.0 => D#713ptD.0
  # DEBUG __nD.72592 => NULL
  # DEBUG thisD.72593 => D#506ptD.0
  # DEBUG D#505ptD.0 => D#506ptD.0
  # DEBUG D#504ptD.0 => &D#505ptD.0->_M_implD.40686
  # DEBUG D#503ptD.0 => D#504ptD.0
  # DEBUG __nD.72596 => NULL
  # DEBUG __aD.72595 => D#503ptD.0
  # DEBUG D#502ptD.0 => D#503ptD.0
  # DEBUG D#500ptD.0 => D#502ptD.0
  # DEBUG D#501ptD.0 => 0B
  # DEBUG __nD.72599 => NULL
  # DEBUG thisD.72597 => D#500ptD.0
  # DEBUG D.72598 => D#501ptD.0
  # DEBUG D#499ptD.0 => D#500ptD.0
  # DEBUG D#493ptD.0 => D#499ptD.0
  # DEBUG thisD.58093 => D#493ptD.0
  # .MEM_1049 = VDEF <.MEM_8(D)>
  # PT = { D.73092 } (escaped heap)
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _627 = _ZnwmD.2764 (prephitmp_1337);
;;    succ:       116 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 116, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 115, next block 117, flags: (NEW, REACHABLE)
;;    pred:       216 [84.0%]  (FALSE_VALUE,EXECUTABLE)
;;                115 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_628 = PHI <0B(216), _627(115)>
  # .MEM_1024 = PHI <.MEM_8(D)(216), .MEM_1049(115)>
  # RANGE ~[115292150460684698, 18331451923248866918]
  # __elems_before_936 = PHI <__elems_before_699(216), __elems_before_1050(115)>
  # _939 = PHI <_940(216), _938(115)>
  # prephitmp_678 = PHI <0(216), prephitmp_1337(115)>
  # DEBUG __new_startD.46203 => NULL
  # DEBUG __new_finishD.46204 => NULL
  # DEBUG D#697ptD.0 => &this_9(D)->D.41195
  # DEBUG thisD.61859 => D#697ptD.0
  # RANGE [0, 18446744073709551615]
  _27 = (long unsigned intD.14) _939;
  # PT = null { D.73092 } (escaped heap)
  __first_28 = __new_finish_628 + _27;
  # DEBUG __firstD.61849 => __first_28
  # DEBUG __nD.61850 => __n_7(D)
  # DEBUG __xD.61851 => __x_29(D)
  # DEBUG D.61852 => D#612ptD.0
  # DEBUG __firstD.61855 => __first_28
  # DEBUG __nD.61854 => __n_7(D)
  # DEBUG __xD.61853 => __x_29(D)
  # DEBUG __assignableD.61857 => 1
  # DEBUG __firstD.72572 => __first_28
  # DEBUG __nD.72573 => __n_7(D)
  # DEBUG __xD.72574 => __x_29(D)
  # DEBUG __curD.72575 => __first_28
  # DEBUG __nD.72573 => __n_7(D)
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 117, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 116, next block 118, flags: (NEW, REACHABLE)
;;    pred:       130 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                116 [100.0%]  (FALLTHRU,EXECUTABLE)
  # RANGE [0, 345876451382054092] NONZERO 576460752303423487
  # __n_937 = PHI <__n_621(130), __n_7(D)(116)>
  # PT = null { D.73092 } (escaped heap)
  # __first_931 = PHI <__first_622(130), __first_28(116)>
  # .MEM_932 = PHI <.MEM_1029(130), .MEM_1024(116)>
  # DEBUG __curD.72575 => __first_931
  # DEBUG __nD.72573 => __n_937
  # DEBUG __rD.60724 => __first_931
  # DEBUG __pD.72585 => NULL
  # DEBUG __valueD.72584 => __x_29(D)
  # DEBUG D#11ptD.0 => 80
  # DEBUG __pD.60611 => NULL
  # DEBUG D.60612 => D#11ptD.0
  if (__first_931 != 0B)
    goto <bb 118>;
  else
    goto <bb 129>;
;;    succ:       118 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                129 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 118, loop depth 1, count 0, freq 629, maybe hot
;;    prev block 117, next block 119, flags: (NEW, REACHABLE)
;;    pred:       117 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72587 => NULL
  # DEBUG D.72586 => __x_29(D)
  # DEBUG D#1155ptD.0 => &MEM[(const struct queueD.40450 &)__x_29(D)].cD.43633
  # DEBUG D#1173ptD.0 => &__first_931->cD.43633
  # DEBUG thisD.72611 => D#1173ptD.0
  # DEBUG __xD.72612 => D#1155ptD.0
  # DEBUG thisD.72613 => D#1155ptD.0
  # DEBUG D#174ptD.0 => &D#1155ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &D#1155ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.72615 => D#175ptD.0
  # DEBUG __yD.72614 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_932>
  # PT = nonlocal escaped 
  _17 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 48]._M_nodeD.42943;
  _641 = (long intD.12) _17;
  # VUSE <.MEM_932>
  # PT = nonlocal escaped 
  _642 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 16]._M_nodeD.42943;
  _643 = (long intD.12) _642;
  _644 = _641 - _643;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _645 = _644 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _646 = _645 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _647 = _646 * 128;
  # VUSE <.MEM_932>
  # PT = nonlocal escaped 
  _648 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 48]._M_curD.42940;
  _649 = (long intD.12) _648;
  # VUSE <.MEM_932>
  # PT = nonlocal escaped 
  _650 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 48]._M_firstD.42941;
  _651 = (long intD.12) _650;
  _652 = _649 - _651;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _653 = _652 /[ex] 4;
  _654 = _647 + _653;
  # VUSE <.MEM_932>
  # PT = nonlocal escaped 
  _655 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 16]._M_lastD.42942;
  _656 = (long intD.12) _655;
  # VUSE <.MEM_932>
  # PT = nonlocal escaped 
  _657 = MEM[(const struct _Deque_iteratorD.42908 &)__x_29(D) + 16]._M_curD.42940;
  _658 = (long intD.12) _657;
  _659 = _656 - _658;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _660 = _659 /[ex] 4;
  _661 = _654 + _660;
  # RANGE [0, 18446744073709551615]
  _662 = (size_typeD.43117) _661;
  # DEBUG D#604ptD.0 => &D#1155ptD.0->D.43590
  # DEBUG thisD.60602 => D#604ptD.0
  # DEBUG __aD.60600 => NULL
  # PT = null { D.73092 } (escaped heap)
  _663 = &MEM[(struct dequeD.40449 *)__first_931].D.43590;
  # DEBUG thisD.72618 => _663
  # DEBUG __aD.72617 => NULL
  # DEBUG __num_elementsD.72616 => _662
  # DEBUG D#484ptD.0 => &_663->_M_implD.43041
  # DEBUG thisD.72620 => D#484ptD.0
  # DEBUG __aD.72619 => NULL
  # DEBUG thisD.55193 => D#484ptD.0
  # DEBUG __aD.55194 => NULL
  # DEBUG thisD.55188 => D#484ptD.0
  # DEBUG D.55189 => NULL
  # .MEM_1052 = VDEF <.MEM_932>
  MEM[(struct _Deque_implD.43009 *)__first_931]._M_mapD.43043 = 0B;
  # .MEM_1053 = VDEF <.MEM_1052>
  MEM[(struct _Deque_implD.43009 *)__first_931]._M_map_sizeD.43044 = 0;
  # DEBUG D#241ptD.0 => &D#484ptD.0->_M_startD.43045
  # DEBUG thisD.72621 => D#241ptD.0
  # .MEM_1054 = VDEF <.MEM_1053>
  MEM[(struct _Deque_iteratorD.42908 *)__first_931 + 16B]._M_curD.42940 = 0B;
  # .MEM_1055 = VDEF <.MEM_1054>
  MEM[(struct _Deque_iteratorD.42908 *)__first_931 + 16B]._M_firstD.42941 = 0B;
  # .MEM_1056 = VDEF <.MEM_1055>
  MEM[(struct _Deque_iteratorD.42908 *)__first_931 + 16B]._M_lastD.42942 = 0B;
  # .MEM_1057 = VDEF <.MEM_1056>
  MEM[(struct _Deque_iteratorD.42908 *)__first_931 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#240ptD.0 => &D#484ptD.0->_M_finishD.43046
  # DEBUG thisD.72622 => D#240ptD.0
  # .MEM_1058 = VDEF <.MEM_1057>
  MEM[(struct _Deque_iteratorD.42908 *)__first_931 + 48B]._M_curD.42940 = 0B;
  # .MEM_1059 = VDEF <.MEM_1058>
  MEM[(struct _Deque_iteratorD.42908 *)__first_931 + 48B]._M_firstD.42941 = 0B;
  # .MEM_1060 = VDEF <.MEM_1059>
  MEM[(struct _Deque_iteratorD.42908 *)__first_931 + 48B]._M_lastD.42942 = 0B;
  # .MEM_1061 = VDEF <.MEM_1060>
  MEM[(struct _Deque_iteratorD.42908 *)__first_931 + 48B]._M_nodeD.42943 = 0B;
  [LP 14] # .MEM_1062 = VDEF <.MEM_1061>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (_663, _662);
;;    succ:       119 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                132 (EH,EXECUTABLE)

;;   basic block 119, loop depth 1, count 0, freq 629, maybe hot
;;    prev block 118, next block 120, flags: (NEW, REACHABLE)
;;    pred:       118 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#605ptD.0 => &D#1173ptD.0->D.43590
  # DEBUG thisD.60590 => D#605ptD.0
  # DEBUG D#606ptD.0 => &D#1173ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72624 => &D.72633
  # DEBUG __xD.72623 => D#606ptD.0
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped null 
  _664 = MEM[(const struct iteratorD.42928 &)__first_931 + 16]._M_curD.42940;
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped null 
  _666 = MEM[(const struct iteratorD.42928 &)__first_931 + 16]._M_lastD.42942;
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped null 
  _667 = MEM[(const struct iteratorD.42928 &)__first_931 + 16]._M_nodeD.42943;
  # DEBUG thisD.72625 => D#1155ptD.0
  # DEBUG D#83ptD.0 => &D#1155ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.72627 => &D.72632
  # DEBUG __xD.72626 => D#83ptD.0
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped 
  _668 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 48]._M_curD.42940;
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped 
  _669 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 48]._M_firstD.42941;
  # DEBUG D#1170ptD.0 => MEM[(const struct iteratorD.44725 &)__x_29(D) + 48]._M_lastD.42942
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped 
  _671 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 48]._M_nodeD.42943;
  # DEBUG thisD.72628 => D#1155ptD.0
  # DEBUG D#84ptD.0 => &D#1155ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72630 => &D.72631
  # DEBUG __xD.72629 => D#84ptD.0
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped 
  __first_672 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 16]._M_curD.42940;
  # DEBUG D#1180ptD.0 => MEM[(const struct iteratorD.44725 &)__x_29(D) + 16]._M_firstD.42941
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped 
  __first$_M_last_674 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 16]._M_lastD.42942;
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped 
  __first$_M_node_675 = MEM[(const struct iteratorD.44725 &)__x_29(D) + 16]._M_nodeD.42943;
  # DEBUG __resultD.72636 => &D.72633
  # DEBUG D.72637 => D#603ptD.0
  # DEBUG thisD.72639 => &D.72641
  # DEBUG __xD.72638 => &D.72633
  # DEBUG __resultD.72644 => &D.72641
  # DEBUG __assignableD.72647 => 1
  # DEBUG thisD.72649 => NULL
  # DEBUG __xD.72648 => &D.72641
  # DEBUG __resultD.72650 => NULL
  # DEBUG thisD.72654 => &D.72655
  # DEBUG __xD.72653 => NULL
  # DEBUG __resultD.72658 => &D.72655
  # DEBUG thisD.72660 => &D.72675
  # DEBUG __xD.72659 => &D.72655
  # DEBUG __itD.72668 => _668
  # DEBUG __it$8D.72667 => _669
  # DEBUG __it$16D.72666 => D#1170ptD.0
  # DEBUG __it$24D.72665 => _671
  # DEBUG __it$_M_curD.60535 => _668
  # DEBUG __it$_M_firstD.60534 => _669
  # DEBUG __it$_M_lastD.60533 => D#1170ptD.0
  # DEBUG __it$_M_nodeD.60532 => _671
  # DEBUG __itD.72672 => __first_672
  # DEBUG __it$8D.72671 => D#1180ptD.0
  # DEBUG __it$16D.72670 => __first$_M_last_674
  # DEBUG __it$24D.72669 => __first$_M_node_675
  # DEBUG __it$_M_curD.60529 => __first_672
  # DEBUG __it$_M_firstD.60528 => D#1180ptD.0
  # DEBUG __it$_M_lastD.60527 => __first$_M_last_674
  # DEBUG __it$_M_nodeD.60526 => __first$_M_node_675
  # DEBUG __resultD.72678 => &D.72675
  # DEBUG thisD.72680 => NULL
  # DEBUG __xD.72679 => &D.72675
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.72694 => _668
  # DEBUG __it$8D.72693 => _669
  # DEBUG __it$16D.72692 => D#1170ptD.0
  # DEBUG __it$24D.72690 => _671
  # DEBUG __it$_M_curD.60489 => _668
  # DEBUG __it$_M_firstD.60488 => _669
  # DEBUG __it$_M_lastD.60487 => D#1170ptD.0
  # DEBUG __it$_M_nodeD.60486 => _671
  # DEBUG __itD.72699 => __first_672
  # DEBUG __it$8D.72698 => D#1180ptD.0
  # DEBUG __it$16D.72697 => __first$_M_last_674
  # DEBUG __it$24D.72695 => __first$_M_node_675
  # DEBUG __it$_M_curD.60483 => __first_672
  # DEBUG __it$_M_firstD.60482 => D#1180ptD.0
  # DEBUG __it$_M_lastD.60481 => __first$_M_last_674
  # DEBUG __it$_M_nodeD.60480 => __first$_M_node_675
  # DEBUG __firstD.73051 => __first_672
  # DEBUG __first$8D.73052 => D#1180ptD.0
  # DEBUG __first$16D.73053 => __first$_M_last_674
  # DEBUG __first$24D.73054 => __first$_M_node_675
  # DEBUG __resultD.72681 => NULL
  # DEBUG __simpleD.72687 => 0
  # DEBUG thisD.72689 => &D.72700
  # DEBUG __xD.72688 => NULL
  # DEBUG __firstD.73058 => __first_672
  # DEBUG __first$_M_firstD.73059 => D#1180ptD.0
  # DEBUG __first$_M_lastD.73060 => __first$_M_last_674
  # DEBUG __first$_M_nodeD.73061 => __first$_M_node_675
  # DEBUG __resultD.72703 => &D.72700
  # DEBUG __xD.72711 => &__lastD.72702
  # DEBUG __yD.72710 => &__firstD.72701
  # DEBUG __sizeD.60431 => 4
  _709 = (long intD.12) _671;
  _711 = (long intD.12) __first$_M_node_675;
  _712 = _709 - _711;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _713 = _712 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _714 = _713 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _715 = _714 * 128;
  _717 = (long intD.12) _668;
  _719 = (long intD.12) _669;
  _720 = _717 - _719;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _721 = _720 /[ex] 4;
  _722 = _715 + _721;
  _724 = (long intD.12) __first$_M_last_674;
  _726 = (long intD.12) __first_672;
  _727 = _724 - _726;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _728 = _727 /[ex] 4;
  __n_729 = _722 + _728;
  # DEBUG __nD.72707 => __n_729
  # DEBUG __nD.72707 => __n_729
  if (__n_729 <= 0)
    goto <bb 120>;
  else
    goto <bb 121>;
;;    succ:       120 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                121 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 120, loop depth 1, count 0, freq 629, maybe hot
;;    prev block 119, next block 121, flags: (NEW, REACHABLE)
;;    pred:       119 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                127 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1581 = PHI <.MEM_1062(119), .MEM_1378(127)>
  # DEBUG thisD.72706 => &D.72640
  # DEBUG __xD.72705 => &D.72700
  # .MEM_1134 = VDEF <.MEM_1581>
  D.72700 ={v} {CLOBBER};
  # .MEM_1135 = VDEF <.MEM_1134>
  D.72675 ={v} {CLOBBER};
  # .MEM_1136 = VDEF <.MEM_1135>
  D.72655 ={v} {CLOBBER};
  # .MEM_1137 = VDEF <.MEM_1136>
  D.72641 ={v} {CLOBBER};
  # .MEM_1138 = VDEF <.MEM_1137>
  D.72633 ={v} {CLOBBER};
  goto <bb 129>;
;;    succ:       129 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 121, loop depth 1, count 0, freq 572, maybe hot
;;    prev block 120, next block 122, flags: (NEW, REACHABLE)
;;    pred:       119 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       122 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 122, loop depth 2, count 0, freq 6356, maybe hot
;;    prev block 121, next block 123, flags: (NEW)
;;    pred:       121 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                128 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1076 = PHI <__n_729(121), __n_739(128)>
  # .MEM_1112 = PHI <.MEM_1062(121), .MEM_1119(128)>
  # PT = nonlocal escaped null 
  # SR.2186_1693 = PHI <_664(121), SR.2186_1692(128)>
  # PT = nonlocal escaped null 
  # SR.2187_1690 = PHI <_666(121), SR.2187_1689(128)>
  # PT = nonlocal escaped null 
  # SR.2188_1688 = PHI <_667(121), SR.2188_1687(128)>
  # PT = nonlocal escaped 
  # __first_1685 = PHI <__first_672(121), __first_1684(128)>
  # PT = nonlocal escaped 
  # __first$_M_last_1681 = PHI <__first$_M_last_674(121), __first$_M_last_1680(128)>
  # PT = nonlocal escaped 
  # __first$_M_node_1679 = PHI <__first$_M_node_675(121), __first$_M_node_1677(128)>
  # DEBUG __first$_M_nodeD.73061 => __first$_M_node_1679
  # DEBUG __first$_M_lastD.73060 => __first$_M_last_1681
  # DEBUG __firstD.73058 => __first_1685
  # DEBUG __nD.72707 => __n_1076
  # DEBUG D#100ptD.0 => &D.72700
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.72701
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_1112>
  _733 = MEM[(const intD.9 &)__first_1685];
  # .MEM_1119 = VDEF <.MEM_1112>
  *SR.2186_1693 = _733;
  # DEBUG thisD.72708 => &__firstD.72701
  # PT = nonlocal escaped 
  __first_734 = __first_1685 + 4;
  # DEBUG __firstD.73058 => __first_734
  if (__first_734 == __first$_M_last_1681)
    goto <bb 123>;
  else
    goto <bb 124>;
;;    succ:       123 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                124 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 123, loop depth 2, count 0, freq 427, maybe hot
;;    prev block 122, next block 124, flags: (NEW, REACHABLE)
;;    pred:       122 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72712 => &__firstD.72701
  # PT = nonlocal escaped 
  __first$_M_node_745 = __first$_M_node_1679 + 8;
  # DEBUG thisD.72714 => &__firstD.72701
  # DEBUG __new_nodeD.72713 => __first$_M_node_745
  # DEBUG __first$_M_nodeD.73061 => __first$_M_node_745
  # VUSE <.MEM_1119>
  # PT = nonlocal escaped 
  __first_746 = MEM[(intD.9 * *)__first$_M_node_1679 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_747 = __first_746 + 512;
  # DEBUG __first$_M_lastD.73060 => __first$_M_last_747
  # DEBUG __firstD.73058 => __first_746
;;    succ:       124 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 124, loop depth 2, count 0, freq 6356, maybe hot
;;    prev block 123, next block 125, flags: (NEW, REACHABLE)
;;    pred:       122 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                123 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_1684 = PHI <__first_734(122), __first_746(123)>
  # PT = nonlocal escaped 
  # __first$_M_last_1680 = PHI <__first$_M_last_1681(122), __first$_M_last_747(123)>
  # PT = nonlocal escaped 
  # __first$_M_node_1677 = PHI <__first$_M_node_1679(122), __first$_M_node_745(123)>
  # DEBUG __first$_M_nodeD.73061 => __first$_M_node_1677
  # DEBUG __first$_M_lastD.73060 => __first$_M_last_1680
  # DEBUG __firstD.73058 => __first_1684
  # DEBUG thisD.72709 => &D.72700
  # PT = nonlocal escaped null 
  _737 = SR.2186_1693 + 4;
  if (_737 == SR.2187_1690)
    goto <bb 125>;
  else
    goto <bb 126>;
;;    succ:       125 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                126 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 125, loop depth 2, count 0, freq 427, maybe hot
;;    prev block 124, next block 126, flags: (NEW, REACHABLE)
;;    pred:       124 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72716 => &D.72700
  # PT = nonlocal escaped null 
  _749 = SR.2188_1688 + 8;
  # DEBUG thisD.72718 => &D.72700
  # DEBUG __new_nodeD.72717 => _749
  # VUSE <.MEM_1119>
  # PT = nonlocal escaped 
  _750 = MEM[(intD.9 * *)SR.2188_1688 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _751 = _750 + 512;
;;    succ:       126 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 126, loop depth 2, count 0, freq 6356, maybe hot
;;    prev block 125, next block 127, flags: (NEW, REACHABLE)
;;    pred:       124 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                125 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # SR.2186_1692 = PHI <_737(124), _750(125)>
  # PT = nonlocal escaped null 
  # SR.2187_1689 = PHI <SR.2187_1690(124), _751(125)>
  # PT = nonlocal escaped null 
  # SR.2188_1687 = PHI <SR.2188_1688(124), _749(125)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_739 = __n_1076 + -1;
  # DEBUG __nD.72707 => __n_739
  # DEBUG __nD.72707 => __n_739
  if (__n_739 <= 0)
    goto <bb 127>;
  else
    goto <bb 128>;
;;    succ:       127 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                128 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 127, loop depth 1, count 0, freq 572, maybe hot
;;    prev block 126, next block 128, flags: (NEW)
;;    pred:       126 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1378 = PHI <.MEM_1119(126)>
  goto <bb 120>;
;;    succ:       120 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 128, loop depth 2, count 0, freq 5784, maybe hot
;;    prev block 127, next block 129, flags: (NEW)
;;    pred:       126 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 122>;
;;    succ:       122 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 129, loop depth 1, count 0, freq 901, maybe hot
;;    prev block 128, next block 130, flags: (NEW, REACHABLE)
;;    pred:       117 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                120 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1029 = PHI <.MEM_932(117), .MEM_1138(120)>
  # RANGE [0, 345876451382054091] NONZERO 576460752303423487
  __n_621 = __n_937 + 18446744073709551615;
  # DEBUG __nD.72573 => __n_621
  # PT = null { D.73092 } (escaped heap)
  __first_622 = __first_931 + 80;
  # DEBUG __curD.72575 => __first_622
  # DEBUG __curD.72575 => __first_622
  # DEBUG __nD.72573 => __n_621
  if (__n_621 == 0)
    goto <bb 131>;
  else
    goto <bb 130>;
;;    succ:       131 [4.7%]  (TRUE_VALUE,EXECUTABLE)
;;                130 [95.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 130, loop depth 1, count 0, freq 859, maybe hot
;;    prev block 129, next block 131, flags: (NEW)
;;    pred:       129 [95.3%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 117>;
;;    succ:       117 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 131, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 130, next block 132, flags: (NEW, REACHABLE)
;;    pred:       129 [4.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __new_finishD.46204 => 0B
  # DEBUG D#698ptD.0 => &this_9(D)->D.41195
  # DEBUG thisD.61886 => D#698ptD.0
  # DEBUG thisD.61884 => &__positionD.41120
  # VUSE <.MEM_1029>
  # PT = nonlocal escaped 
  __first_32 = this_9(D)->D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.61869 => __first_32
  # DEBUG __lastD.61870 => D#1186ptD.0
  # DEBUG __resultD.61871 => NULL
  # DEBUG __allocD.61872 => D#611ptD.0
  # DEBUG D#610ptD.0 => D#611ptD.0
  # DEBUG D#607ptD.0 => D#610ptD.0
  # DEBUG __firstD.61876 => __first_32
  # DEBUG __lastD.61875 => D#1186ptD.0
  # DEBUG __resultD.61874 => NULL
  # DEBUG D.61873 => D#607ptD.0
  # DEBUG __firstD.61879 => __first_32
  # DEBUG __lastD.61878 => D#1186ptD.0
  # DEBUG __resultD.61877 => NULL
  # DEBUG __assignableD.61882 => 1
  # DEBUG __firstD.72720 => __first_32
  # DEBUG __lastD.72721 => D#1186ptD.0
  # DEBUG __resultD.72722 => __new_finish_628
  # DEBUG __curD.72723 => __new_finish_628
  # DEBUG __firstD.72720 => __first_32
  if (__position_23 == __first_32)
    goto <bb 154>;
  else
    goto <bb 138>;
;;    succ:       154 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                138 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 131, next block 133, flags: (NEW, REACHABLE)
;;    pred:       118 (EH,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __first_1036 = PHI <__first_931(118)>
<L28>: [LP 14]
  # VUSE <.MEM_1062>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _623 = __builtin_eh_pointerD.2738 (23);
  # .MEM_1139 = VDEF <.MEM_1062>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_623);
  # DEBUG __firstD.72577 => __first_28
  # DEBUG __lastD.72576 => __first_1036
  # DEBUG __firstD.72580 => __first_28
  # DEBUG __lastD.72579 => __first_1036
  # DEBUG __firstD.72580 => __first_28
  if (__first_28 == __first_1036)
    goto <bb 133>;
  else
    goto <bb 134>;
;;    succ:       133 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                134 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 132, next block 134, flags: (NEW, REACHABLE)
;;    pred:       132 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                135 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1580 = PHI <.MEM_1139(132), .MEM_1142(135)>
  [LP 13] # .MEM_1143 = VDEF <.MEM_1580>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       137 (EH,EXECUTABLE)

;;   basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 133, next block 135, flags: (NEW, REACHABLE)
;;    pred:       132 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       135 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 135, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 134, next block 136, flags: (NEW)
;;    pred:       134 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                136 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __first_1075 = PHI <__first_28(134), __first_626(136)>
  # .MEM_1118 = PHI <.MEM_1139(134), .MEM_1142(136)>
  # DEBUG __firstD.72580 => __first_1075
  # DEBUG __rD.57673 => __first_1075
  # DEBUG __pointerD.72581 => NULL
  # DEBUG thisD.72582 => NULL
  # DEBUG thisD.72583 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # PT = null { D.73092 } (escaped heap)
  _625 = &MEM[(struct dequeD.40449 *)__first_1075].D.43590;
  # .MEM_1140 = VDEF <.MEM_1118>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (_625);
  # .MEM_1142 = VDEF <.MEM_1140>
  MEM[(struct  &)__first_1075] ={v} {CLOBBER};
  # PT = null { D.73092 } (escaped heap)
  __first_626 = __first_1075 + 80;
  # DEBUG __firstD.72580 => __first_626
  # DEBUG __firstD.72580 => __first_626
  if (__first_626 == __first_1036)
    goto <bb 133>;
  else
    goto <bb 136>;
;;    succ:       133 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                136 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 136, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 135, next block 137, flags: (NEW)
;;    pred:       135 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 135>;
;;    succ:       135 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 137, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 136, next block 138, flags: (NEW, REACHABLE)
;;    pred:       133 (EH,EXECUTABLE)
<L30>: [LP 13]
  [MNT 21] # .MEM_1144 = VDEF <.MEM_1143>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_end_catchD.13513 ();
  [LP 20] resx 22
;;    succ:       219 (EH,EXECUTABLE)

;;   basic block 138, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 137, next block 139, flags: (NEW, REACHABLE)
;;    pred:       131 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       139 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 139, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 138, next block 140, flags: (NEW)
;;    pred:       138 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                153 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_1077 = PHI <__first_32(138), __first_756(153)>
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1078 = PHI <__new_finish_628(138), __new_finish_757(153)>
  # .MEM_402 = PHI <.MEM_1029(138), .MEM_1035(153)>
  # DEBUG __curD.72723 => __new_finish_1078
  # DEBUG __firstD.72720 => __first_1077
  # DEBUG __rD.60623 => __new_finish_1078
  # DEBUG __pD.72733 => NULL
  # DEBUG __valueD.72732 => __first_1077
  # DEBUG D#11ptD.0 => 80
  # DEBUG __pD.60611 => NULL
  # DEBUG D.60612 => D#11ptD.0
  if (__new_finish_1078 != 0B)
    goto <bb 140>;
  else
    goto <bb 151>;
;;    succ:       140 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                151 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 140, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 139, next block 141, flags: (NEW, REACHABLE)
;;    pred:       139 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72735 => NULL
  # DEBUG D.72734 => __first_1077
  # DEBUG D#1156ptD.0 => &MEM[(const struct queueD.40450 &)__first_1077].cD.43633
  # DEBUG D#1165ptD.0 => &__new_finish_1078->cD.43633
  # DEBUG thisD.72740 => D#1165ptD.0
  # DEBUG __xD.72741 => D#1156ptD.0
  # DEBUG thisD.72742 => D#1156ptD.0
  # DEBUG D#174ptD.0 => &D#1156ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &D#1156ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.72744 => D#175ptD.0
  # DEBUG __yD.72743 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_402>
  # PT = nonlocal escaped 
  _110 = MEM[(const struct _Deque_iteratorD.42908 &)__first_1077 + 48]._M_nodeD.42943;
  _762 = (long intD.12) _110;
  # VUSE <.MEM_402>
  # PT = nonlocal escaped 
  _763 = MEM[(const struct _Deque_iteratorD.42908 &)__first_1077 + 16]._M_nodeD.42943;
  _764 = (long intD.12) _763;
  _765 = _762 - _764;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _766 = _765 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _767 = _766 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _768 = _767 * 128;
  # VUSE <.MEM_402>
  # PT = nonlocal escaped 
  _769 = MEM[(const struct _Deque_iteratorD.42908 &)__first_1077 + 48]._M_curD.42940;
  _770 = (long intD.12) _769;
  # VUSE <.MEM_402>
  # PT = nonlocal escaped 
  _771 = MEM[(const struct _Deque_iteratorD.42908 &)__first_1077 + 48]._M_firstD.42941;
  _772 = (long intD.12) _771;
  _773 = _770 - _772;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _774 = _773 /[ex] 4;
  _775 = _768 + _774;
  # VUSE <.MEM_402>
  # PT = nonlocal escaped 
  _776 = MEM[(const struct _Deque_iteratorD.42908 &)__first_1077 + 16]._M_lastD.42942;
  _777 = (long intD.12) _776;
  # VUSE <.MEM_402>
  # PT = nonlocal escaped 
  _778 = MEM[(const struct _Deque_iteratorD.42908 &)__first_1077 + 16]._M_curD.42940;
  _779 = (long intD.12) _778;
  _780 = _777 - _779;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _781 = _780 /[ex] 4;
  _782 = _775 + _781;
  # RANGE [0, 18446744073709551615]
  _783 = (size_typeD.43117) _782;
  # DEBUG D#604ptD.0 => &D#1156ptD.0->D.43590
  # DEBUG thisD.60602 => D#604ptD.0
  # DEBUG __aD.60600 => NULL
  # PT = null { D.73092 } (escaped heap)
  _784 = &MEM[(struct dequeD.40449 *)__new_finish_1078].D.43590;
  # DEBUG thisD.72747 => _784
  # DEBUG __aD.72746 => NULL
  # DEBUG __num_elementsD.72745 => _783
  # DEBUG D#484ptD.0 => &_784->_M_implD.43041
  # DEBUG thisD.72749 => D#484ptD.0
  # DEBUG __aD.72748 => NULL
  # DEBUG thisD.55193 => D#484ptD.0
  # DEBUG __aD.55194 => NULL
  # DEBUG thisD.55188 => D#484ptD.0
  # DEBUG D.55189 => NULL
  # .MEM_1146 = VDEF <.MEM_402>
  MEM[(struct _Deque_implD.43009 *)__new_finish_1078]._M_mapD.43043 = 0B;
  # .MEM_1147 = VDEF <.MEM_1146>
  MEM[(struct _Deque_implD.43009 *)__new_finish_1078]._M_map_sizeD.43044 = 0;
  # DEBUG D#241ptD.0 => &D#484ptD.0->_M_startD.43045
  # DEBUG thisD.72750 => D#241ptD.0
  # .MEM_1148 = VDEF <.MEM_1147>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1078 + 16B]._M_curD.42940 = 0B;
  # .MEM_1149 = VDEF <.MEM_1148>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1078 + 16B]._M_firstD.42941 = 0B;
  # .MEM_1150 = VDEF <.MEM_1149>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1078 + 16B]._M_lastD.42942 = 0B;
  # .MEM_1151 = VDEF <.MEM_1150>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1078 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#240ptD.0 => &D#484ptD.0->_M_finishD.43046
  # DEBUG thisD.72751 => D#240ptD.0
  # .MEM_1152 = VDEF <.MEM_1151>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1078 + 48B]._M_curD.42940 = 0B;
  # .MEM_1153 = VDEF <.MEM_1152>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1078 + 48B]._M_firstD.42941 = 0B;
  # .MEM_1154 = VDEF <.MEM_1153>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1078 + 48B]._M_lastD.42942 = 0B;
  # .MEM_1155 = VDEF <.MEM_1154>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1078 + 48B]._M_nodeD.42943 = 0B;
  [LP 16] # .MEM_1156 = VDEF <.MEM_1155>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (_784, _783);
;;    succ:       141 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                155 (EH,EXECUTABLE)

;;   basic block 141, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 140, next block 142, flags: (NEW, REACHABLE)
;;    pred:       140 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#605ptD.0 => &D#1165ptD.0->D.43590
  # DEBUG thisD.60590 => D#605ptD.0
  # DEBUG D#606ptD.0 => &D#1165ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72753 => &D.72762
  # DEBUG __xD.72752 => D#606ptD.0
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped null 
  _785 = MEM[(const struct iteratorD.42928 &)__new_finish_1078 + 16]._M_curD.42940;
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped null 
  _787 = MEM[(const struct iteratorD.42928 &)__new_finish_1078 + 16]._M_lastD.42942;
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped null 
  _788 = MEM[(const struct iteratorD.42928 &)__new_finish_1078 + 16]._M_nodeD.42943;
  # DEBUG thisD.72754 => D#1156ptD.0
  # DEBUG D#83ptD.0 => &D#1156ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.72756 => &D.72761
  # DEBUG __xD.72755 => D#83ptD.0
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped 
  _789 = MEM[(const struct iteratorD.44725 &)__first_1077 + 48]._M_curD.42940;
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped 
  _790 = MEM[(const struct iteratorD.44725 &)__first_1077 + 48]._M_firstD.42941;
  # DEBUG D#1164ptD.0 => MEM[(const struct iteratorD.44725 &)__first_1077 + 48]._M_lastD.42942
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped 
  _792 = MEM[(const struct iteratorD.44725 &)__first_1077 + 48]._M_nodeD.42943;
  # DEBUG thisD.72757 => D#1156ptD.0
  # DEBUG D#84ptD.0 => &D#1156ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72759 => &D.72760
  # DEBUG __xD.72758 => D#84ptD.0
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped 
  __first_793 = MEM[(const struct iteratorD.44725 &)__first_1077 + 16]._M_curD.42940;
  # DEBUG D#1176ptD.0 => MEM[(const struct iteratorD.44725 &)__first_1077 + 16]._M_firstD.42941
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped 
  __first$_M_last_795 = MEM[(const struct iteratorD.44725 &)__first_1077 + 16]._M_lastD.42942;
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped 
  __first$_M_node_796 = MEM[(const struct iteratorD.44725 &)__first_1077 + 16]._M_nodeD.42943;
  # DEBUG __resultD.72765 => &D.72762
  # DEBUG D.72766 => D#603ptD.0
  # DEBUG thisD.72768 => &D.72770
  # DEBUG __xD.72767 => &D.72762
  # DEBUG __resultD.72773 => &D.72770
  # DEBUG __assignableD.72776 => 1
  # DEBUG thisD.72778 => NULL
  # DEBUG __xD.72777 => &D.72770
  # DEBUG __resultD.72779 => NULL
  # DEBUG thisD.72783 => &D.72784
  # DEBUG __xD.72782 => NULL
  # DEBUG __resultD.72787 => &D.72784
  # DEBUG thisD.72789 => &D.72804
  # DEBUG __xD.72788 => &D.72784
  # DEBUG __itD.72797 => _789
  # DEBUG __it$8D.72796 => _790
  # DEBUG __it$16D.72795 => D#1164ptD.0
  # DEBUG __it$24D.72794 => _792
  # DEBUG __it$_M_curD.60535 => _789
  # DEBUG __it$_M_firstD.60534 => _790
  # DEBUG __it$_M_lastD.60533 => D#1164ptD.0
  # DEBUG __it$_M_nodeD.60532 => _792
  # DEBUG __itD.72801 => __first_793
  # DEBUG __it$8D.72800 => D#1176ptD.0
  # DEBUG __it$16D.72799 => __first$_M_last_795
  # DEBUG __it$24D.72798 => __first$_M_node_796
  # DEBUG __it$_M_curD.60529 => __first_793
  # DEBUG __it$_M_firstD.60528 => D#1176ptD.0
  # DEBUG __it$_M_lastD.60527 => __first$_M_last_795
  # DEBUG __it$_M_nodeD.60526 => __first$_M_node_796
  # DEBUG __resultD.72807 => &D.72804
  # DEBUG thisD.72809 => NULL
  # DEBUG __xD.72808 => &D.72804
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.72823 => _789
  # DEBUG __it$8D.72822 => _790
  # DEBUG __it$16D.72821 => D#1164ptD.0
  # DEBUG __it$24D.72819 => _792
  # DEBUG __it$_M_curD.60489 => _789
  # DEBUG __it$_M_firstD.60488 => _790
  # DEBUG __it$_M_lastD.60487 => D#1164ptD.0
  # DEBUG __it$_M_nodeD.60486 => _792
  # DEBUG __itD.72828 => __first_793
  # DEBUG __it$8D.72827 => D#1176ptD.0
  # DEBUG __it$16D.72826 => __first$_M_last_795
  # DEBUG __it$24D.72824 => __first$_M_node_796
  # DEBUG __it$_M_curD.60483 => __first_793
  # DEBUG __it$_M_firstD.60482 => D#1176ptD.0
  # DEBUG __it$_M_lastD.60481 => __first$_M_last_795
  # DEBUG __it$_M_nodeD.60480 => __first$_M_node_796
  # DEBUG __firstD.73062 => __first_793
  # DEBUG __first$8D.73063 => D#1176ptD.0
  # DEBUG __first$16D.73064 => __first$_M_last_795
  # DEBUG __first$24D.73065 => __first$_M_node_796
  # DEBUG __resultD.72810 => NULL
  # DEBUG __simpleD.72816 => 0
  # DEBUG thisD.72818 => &D.72829
  # DEBUG __xD.72817 => NULL
  # DEBUG __firstD.73069 => __first_793
  # DEBUG __first$_M_firstD.73070 => D#1176ptD.0
  # DEBUG __first$_M_lastD.73071 => __first$_M_last_795
  # DEBUG __first$_M_nodeD.73072 => __first$_M_node_796
  # DEBUG __resultD.72832 => &D.72829
  # DEBUG __xD.72840 => &__lastD.72831
  # DEBUG __yD.72839 => &__firstD.72830
  # DEBUG __sizeD.60431 => 4
  _830 = (long intD.12) _792;
  _832 = (long intD.12) __first$_M_node_796;
  _833 = _830 - _832;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _834 = _833 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _835 = _834 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _836 = _835 * 128;
  _838 = (long intD.12) _789;
  _840 = (long intD.12) _790;
  _841 = _838 - _840;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _842 = _841 /[ex] 4;
  _843 = _836 + _842;
  _845 = (long intD.12) __first$_M_last_795;
  _847 = (long intD.12) __first_793;
  _848 = _845 - _847;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _849 = _848 /[ex] 4;
  __n_850 = _843 + _849;
  # DEBUG __nD.72836 => __n_850
  # DEBUG __nD.72836 => __n_850
  if (__n_850 <= 0)
    goto <bb 142>;
  else
    goto <bb 143>;
;;    succ:       142 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                143 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 142, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 141, next block 143, flags: (NEW, REACHABLE)
;;    pred:       141 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                149 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1579 = PHI <.MEM_1156(141), .MEM_1376(149)>
  # DEBUG thisD.72835 => &D.72769
  # DEBUG __xD.72834 => &D.72829
  # .MEM_1228 = VDEF <.MEM_1579>
  D.72829 ={v} {CLOBBER};
  # .MEM_1229 = VDEF <.MEM_1228>
  D.72804 ={v} {CLOBBER};
  # .MEM_1230 = VDEF <.MEM_1229>
  D.72784 ={v} {CLOBBER};
  # .MEM_1231 = VDEF <.MEM_1230>
  D.72770 ={v} {CLOBBER};
  # .MEM_1232 = VDEF <.MEM_1231>
  D.72762 ={v} {CLOBBER};
  goto <bb 151>;
;;    succ:       151 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 143, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 142, next block 144, flags: (NEW, REACHABLE)
;;    pred:       141 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       144 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 144, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 143, next block 145, flags: (NEW)
;;    pred:       143 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                150 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1081 = PHI <__n_850(143), __n_860(150)>
  # .MEM_1535 = PHI <.MEM_1156(143), .MEM_1213(150)>
  # PT = nonlocal escaped null 
  # SR.2196_1672 = PHI <_785(143), SR.2196_1671(150)>
  # PT = nonlocal escaped null 
  # SR.2197_1670 = PHI <_787(143), SR.2197_1669(150)>
  # PT = nonlocal escaped null 
  # SR.2198_1599 = PHI <_788(143), SR.2198_1598(150)>
  # PT = nonlocal escaped 
  # __first_1596 = PHI <__first_793(143), __first_1595(150)>
  # PT = nonlocal escaped 
  # __first$_M_last_1594 = PHI <__first$_M_last_795(143), __first$_M_last_1593(150)>
  # PT = nonlocal escaped 
  # __first$_M_node_1591 = PHI <__first$_M_node_796(143), __first$_M_node_1590(150)>
  # DEBUG __first$_M_nodeD.73072 => __first$_M_node_1591
  # DEBUG __first$_M_lastD.73071 => __first$_M_last_1594
  # DEBUG __firstD.73069 => __first_1596
  # DEBUG __nD.72836 => __n_1081
  # DEBUG D#100ptD.0 => &D.72829
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.72830
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_1535>
  _854 = MEM[(const intD.9 &)__first_1596];
  # .MEM_1213 = VDEF <.MEM_1535>
  *SR.2196_1672 = _854;
  # DEBUG thisD.72837 => &__firstD.72830
  # PT = nonlocal escaped 
  __first_855 = __first_1596 + 4;
  # DEBUG __firstD.73069 => __first_855
  if (__first_855 == __first$_M_last_1594)
    goto <bb 145>;
  else
    goto <bb 146>;
;;    succ:       145 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                146 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 145, loop depth 2, count 0, freq 612, maybe hot
;;    prev block 144, next block 146, flags: (NEW, REACHABLE)
;;    pred:       144 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72841 => &__firstD.72830
  # PT = nonlocal escaped 
  __first$_M_node_866 = __first$_M_node_1591 + 8;
  # DEBUG thisD.72843 => &__firstD.72830
  # DEBUG __new_nodeD.72842 => __first$_M_node_866
  # DEBUG __first$_M_nodeD.73072 => __first$_M_node_866
  # VUSE <.MEM_1213>
  # PT = nonlocal escaped 
  __first_867 = MEM[(intD.9 * *)__first$_M_node_1591 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_868 = __first_867 + 512;
  # DEBUG __first$_M_lastD.73071 => __first$_M_last_868
  # DEBUG __firstD.73069 => __first_867
;;    succ:       146 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 146, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 145, next block 147, flags: (NEW, REACHABLE)
;;    pred:       144 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                145 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_1595 = PHI <__first_855(144), __first_867(145)>
  # PT = nonlocal escaped 
  # __first$_M_last_1593 = PHI <__first$_M_last_1594(144), __first$_M_last_868(145)>
  # PT = nonlocal escaped 
  # __first$_M_node_1590 = PHI <__first$_M_node_1591(144), __first$_M_node_866(145)>
  # DEBUG __first$_M_nodeD.73072 => __first$_M_node_1590
  # DEBUG __first$_M_lastD.73071 => __first$_M_last_1593
  # DEBUG __firstD.73069 => __first_1595
  # DEBUG thisD.72838 => &D.72829
  # PT = nonlocal escaped null 
  _858 = SR.2196_1672 + 4;
  if (_858 == SR.2197_1670)
    goto <bb 147>;
  else
    goto <bb 148>;
;;    succ:       147 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                148 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 147, loop depth 2, count 0, freq 612, maybe hot
;;    prev block 146, next block 148, flags: (NEW, REACHABLE)
;;    pred:       146 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72845 => &D.72829
  # PT = nonlocal escaped null 
  _870 = SR.2198_1599 + 8;
  # DEBUG thisD.72847 => &D.72829
  # DEBUG __new_nodeD.72846 => _870
  # VUSE <.MEM_1213>
  # PT = nonlocal escaped 
  _871 = MEM[(intD.9 * *)SR.2198_1599 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _872 = _871 + 512;
;;    succ:       148 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 148, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 147, next block 149, flags: (NEW, REACHABLE)
;;    pred:       146 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                147 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # SR.2196_1671 = PHI <_858(146), _871(147)>
  # PT = nonlocal escaped null 
  # SR.2197_1669 = PHI <SR.2197_1670(146), _872(147)>
  # PT = nonlocal escaped null 
  # SR.2198_1598 = PHI <SR.2198_1599(146), _870(147)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_860 = __n_1081 + -1;
  # DEBUG __nD.72836 => __n_860
  # DEBUG __nD.72836 => __n_860
  if (__n_860 <= 0)
    goto <bb 149>;
  else
    goto <bb 150>;
;;    succ:       149 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                150 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 149, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 148, next block 150, flags: (NEW)
;;    pred:       148 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1376 = PHI <.MEM_1213(148)>
  goto <bb 142>;
;;    succ:       142 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 150, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 149, next block 151, flags: (NEW)
;;    pred:       148 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 144>;
;;    succ:       144 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 151, loop depth 1, count 0, freq 901, maybe hot
;;    prev block 150, next block 152, flags: (NEW, REACHABLE)
;;    pred:       139 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                142 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1035 = PHI <.MEM_402(139), .MEM_1232(142)>
  # PT = nonlocal escaped 
  __first_756 = __first_1077 + 80;
  # DEBUG __firstD.72720 => __first_756
  # PT = null { D.73092 } (escaped heap)
  __new_finish_757 = __new_finish_1078 + 80;
  # DEBUG __curD.72723 => __new_finish_757
  # DEBUG __curD.72723 => __new_finish_757
  # DEBUG __firstD.72720 => __first_756
  if (__position_23 == __first_756)
    goto <bb 152>;
  else
    goto <bb 153>;
;;    succ:       152 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                153 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 152, loop depth 0, count 0, freq 41, maybe hot
;;    prev block 151, next block 153, flags: (NEW)
;;    pred:       151 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1038 = PHI <__new_finish_757(151)>
  goto <bb 154>;
;;    succ:       154 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 153, loop depth 1, count 0, freq 860, maybe hot
;;    prev block 152, next block 154, flags: (NEW)
;;    pred:       151 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 139>;
;;    succ:       139 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 154, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 153, next block 155, flags: (NEW, REACHABLE)
;;    pred:       152 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                131 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1079 = PHI <__new_finish_1038(152), __new_finish_628(131)>
  # .MEM_1534 = PHI <.MEM_1035(152), .MEM_1029(131)>
  # DEBUG __new_finishD.46204 => NULL
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551600
  _33 = __n_7(D) * 80;
  # PT = null { D.73092 } (escaped heap)
  __new_finish_34 = __new_finish_1079 + _33;
  # DEBUG __new_finishD.46204 => __new_finish_34
  # DEBUG D#699ptD.0 => &this_9(D)->D.41195
  # DEBUG thisD.61905 => D#699ptD.0
  # VUSE <.MEM_1534>
  # PT = nonlocal escaped 
  _36 = this_9(D)->D.41195._M_implD.40686._M_finishD.40689;
  # DEBUG thisD.61903 => &__positionD.41120
  # DEBUG __firstD.61888 => D#1186ptD.0
  # DEBUG __lastD.61889 => _36
  # DEBUG __resultD.61890 => __new_finish_34
  # DEBUG __allocD.61891 => D#611ptD.0
  # DEBUG D#610ptD.0 => D#611ptD.0
  # DEBUG D#607ptD.0 => D#610ptD.0
  # DEBUG __firstD.61895 => D#1186ptD.0
  # DEBUG __lastD.61894 => _36
  # DEBUG __resultD.61893 => __new_finish_34
  # DEBUG D.61892 => D#607ptD.0
  # DEBUG __firstD.61898 => D#1186ptD.0
  # DEBUG __lastD.61897 => _36
  # DEBUG __resultD.61896 => __new_finish_34
  # DEBUG __assignableD.61901 => 1
  # DEBUG __firstD.72849 => D#1186ptD.0
  # DEBUG __lastD.72850 => _36
  # DEBUG __resultD.72851 => __new_finish_34
  # DEBUG __curD.72852 => __new_finish_34
  # DEBUG __firstD.72849 => D#1186ptD.0
  if (__position_23 == _36)
    goto <bb 177>;
  else
    goto <bb 161>;
;;    succ:       177 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                161 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 154, next block 156, flags: (NEW, REACHABLE)
;;    pred:       140 (EH,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1030 = PHI <__new_finish_1078(140)>
<L31>: [LP 16]
  # VUSE <.MEM_1156>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _758 = __builtin_eh_pointerD.2738 (26);
  # .MEM_1233 = VDEF <.MEM_1156>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_758);
  # DEBUG __firstD.72725 => __new_finish_628
  # DEBUG __lastD.72724 => __new_finish_1030
  # DEBUG __firstD.72728 => __new_finish_628
  # DEBUG __lastD.72727 => __new_finish_1030
  # DEBUG __firstD.72728 => __new_finish_628
  if (__new_finish_628 == __new_finish_1030)
    goto <bb 156>;
  else
    goto <bb 157>;
;;    succ:       156 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                157 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 155, next block 157, flags: (NEW, REACHABLE)
;;    pred:       155 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                158 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1574 = PHI <.MEM_1233(155), .MEM_1236(158)>
  [LP 15] # .MEM_1237 = VDEF <.MEM_1574>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       160 (EH,EXECUTABLE)

;;   basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 156, next block 158, flags: (NEW, REACHABLE)
;;    pred:       155 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       158 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 158, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 157, next block 159, flags: (NEW)
;;    pred:       157 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                159 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1080 = PHI <__new_finish_628(157), __new_finish_761(159)>
  # .MEM_1537 = PHI <.MEM_1233(157), .MEM_1236(159)>
  # DEBUG __firstD.72728 => __new_finish_1080
  # DEBUG __rD.57673 => __new_finish_1080
  # DEBUG __pointerD.72729 => NULL
  # DEBUG thisD.72730 => NULL
  # DEBUG thisD.72731 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # PT = null { D.73092 } (escaped heap)
  _760 = &MEM[(struct dequeD.40449 *)__new_finish_1080].D.43590;
  # .MEM_1234 = VDEF <.MEM_1537>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (_760);
  # .MEM_1236 = VDEF <.MEM_1234>
  MEM[(struct  &)__new_finish_1080] ={v} {CLOBBER};
  # PT = null { D.73092 } (escaped heap)
  __new_finish_761 = __new_finish_1080 + 80;
  # DEBUG __firstD.72728 => __new_finish_761
  # DEBUG __firstD.72728 => __new_finish_761
  if (__new_finish_761 == __new_finish_1030)
    goto <bb 156>;
  else
    goto <bb 159>;
;;    succ:       156 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                159 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 159, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 158, next block 160, flags: (NEW)
;;    pred:       158 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 158>;
;;    succ:       158 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 159, next block 161, flags: (NEW, REACHABLE)
;;    pred:       156 (EH,EXECUTABLE)
<L33>: [LP 15]
  [MNT 24] # .MEM_1238 = VDEF <.MEM_1237>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_end_catchD.13513 ();
  [LP 19] resx 25
;;    succ:       218 (EH,EXECUTABLE)

;;   basic block 161, loop depth 0, count 0, freq 40, maybe hot
;;    prev block 160, next block 162, flags: (NEW, REACHABLE)
;;    pred:       154 [95.5%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       162 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 162, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 161, next block 163, flags: (NEW)
;;    pred:       161 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                175 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  # __position_1082 = PHI <__position_23(161), __position_877(175)>
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1083 = PHI <__new_finish_34(161), __new_finish_878(175)>
  # .MEM_407 = PHI <.MEM_1534(161), .MEM_1041(175)>
  # DEBUG __curD.72852 => __new_finish_1083
  # DEBUG __firstD.72849 => __position_1082
  # DEBUG __rD.60623 => __new_finish_1083
  # DEBUG __pD.72862 => NULL
  # DEBUG __valueD.72861 => __position_1082
  # DEBUG D#11ptD.0 => 80
  # DEBUG __pD.60611 => NULL
  # DEBUG D.60612 => D#11ptD.0
  if (__new_finish_1083 != 0B)
    goto <bb 163>;
  else
    goto <bb 174>;
;;    succ:       163 [100.0%]  (TRUE_VALUE,EXECUTABLE)
;;                174 [0.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 163, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 162, next block 164, flags: (NEW, REACHABLE)
;;    pred:       162 [100.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72864 => NULL
  # DEBUG D.72863 => __position_1082
  # DEBUG D#1157ptD.0 => &MEM[(const struct queueD.40450 &)__position_1082].cD.43633
  # DEBUG D#1163ptD.0 => &__new_finish_1083->cD.43633
  # DEBUG thisD.72869 => D#1163ptD.0
  # DEBUG __xD.72870 => D#1157ptD.0
  # DEBUG thisD.72871 => D#1157ptD.0
  # DEBUG D#174ptD.0 => &D#1157ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &D#1157ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.72873 => D#175ptD.0
  # DEBUG __yD.72872 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_407>
  # PT = nonlocal escaped 
  _111 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1082 + 48]._M_nodeD.42943;
  _883 = (long intD.12) _111;
  # VUSE <.MEM_407>
  # PT = nonlocal escaped 
  _884 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1082 + 16]._M_nodeD.42943;
  _885 = (long intD.12) _884;
  _886 = _883 - _885;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _887 = _886 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _888 = _887 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _889 = _888 * 128;
  # VUSE <.MEM_407>
  # PT = nonlocal escaped 
  _890 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1082 + 48]._M_curD.42940;
  _891 = (long intD.12) _890;
  # VUSE <.MEM_407>
  # PT = nonlocal escaped 
  _892 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1082 + 48]._M_firstD.42941;
  _893 = (long intD.12) _892;
  _894 = _891 - _893;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _895 = _894 /[ex] 4;
  _896 = _889 + _895;
  # VUSE <.MEM_407>
  # PT = nonlocal escaped 
  _897 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1082 + 16]._M_lastD.42942;
  _898 = (long intD.12) _897;
  # VUSE <.MEM_407>
  # PT = nonlocal escaped 
  _899 = MEM[(const struct _Deque_iteratorD.42908 &)__position_1082 + 16]._M_curD.42940;
  _900 = (long intD.12) _899;
  _901 = _898 - _900;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _902 = _901 /[ex] 4;
  _903 = _896 + _902;
  # RANGE [0, 18446744073709551615]
  _904 = (size_typeD.43117) _903;
  # DEBUG D#604ptD.0 => &D#1157ptD.0->D.43590
  # DEBUG thisD.60602 => D#604ptD.0
  # DEBUG __aD.60600 => NULL
  # PT = null { D.73092 } (escaped heap)
  _905 = &MEM[(struct dequeD.40449 *)__new_finish_1083].D.43590;
  # DEBUG thisD.72876 => _905
  # DEBUG __aD.72875 => NULL
  # DEBUG __num_elementsD.72874 => _904
  # DEBUG D#484ptD.0 => &_905->_M_implD.43041
  # DEBUG thisD.72878 => D#484ptD.0
  # DEBUG __aD.72877 => NULL
  # DEBUG thisD.55193 => D#484ptD.0
  # DEBUG __aD.55194 => NULL
  # DEBUG thisD.55188 => D#484ptD.0
  # DEBUG D.55189 => NULL
  # .MEM_1240 = VDEF <.MEM_407>
  MEM[(struct _Deque_implD.43009 *)__new_finish_1083]._M_mapD.43043 = 0B;
  # .MEM_1241 = VDEF <.MEM_1240>
  MEM[(struct _Deque_implD.43009 *)__new_finish_1083]._M_map_sizeD.43044 = 0;
  # DEBUG D#241ptD.0 => &D#484ptD.0->_M_startD.43045
  # DEBUG thisD.72879 => D#241ptD.0
  # .MEM_1242 = VDEF <.MEM_1241>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1083 + 16B]._M_curD.42940 = 0B;
  # .MEM_1243 = VDEF <.MEM_1242>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1083 + 16B]._M_firstD.42941 = 0B;
  # .MEM_1244 = VDEF <.MEM_1243>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1083 + 16B]._M_lastD.42942 = 0B;
  # .MEM_1245 = VDEF <.MEM_1244>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1083 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#240ptD.0 => &D#484ptD.0->_M_finishD.43046
  # DEBUG thisD.72880 => D#240ptD.0
  # .MEM_1246 = VDEF <.MEM_1245>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1083 + 48B]._M_curD.42940 = 0B;
  # .MEM_1247 = VDEF <.MEM_1246>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1083 + 48B]._M_firstD.42941 = 0B;
  # .MEM_1248 = VDEF <.MEM_1247>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1083 + 48B]._M_lastD.42942 = 0B;
  # .MEM_1249 = VDEF <.MEM_1248>
  MEM[(struct _Deque_iteratorD.42908 *)__new_finish_1083 + 48B]._M_nodeD.42943 = 0B;
  [LP 18] # .MEM_1250 = VDEF <.MEM_1249>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (_905, _904);
;;    succ:       164 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                178 (EH,EXECUTABLE)

;;   basic block 164, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 163, next block 165, flags: (NEW, REACHABLE)
;;    pred:       163 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#605ptD.0 => &D#1163ptD.0->D.43590
  # DEBUG thisD.60590 => D#605ptD.0
  # DEBUG D#606ptD.0 => &D#1163ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72882 => &D.72891
  # DEBUG __xD.72881 => D#606ptD.0
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped null 
  _906 = MEM[(const struct iteratorD.42928 &)__new_finish_1083 + 16]._M_curD.42940;
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped null 
  _908 = MEM[(const struct iteratorD.42928 &)__new_finish_1083 + 16]._M_lastD.42942;
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped null 
  _909 = MEM[(const struct iteratorD.42928 &)__new_finish_1083 + 16]._M_nodeD.42943;
  # DEBUG thisD.72883 => D#1157ptD.0
  # DEBUG D#83ptD.0 => &D#1157ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.72885 => &D.72890
  # DEBUG __xD.72884 => D#83ptD.0
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped 
  _910 = MEM[(const struct iteratorD.44725 &)__position_1082 + 48]._M_curD.42940;
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped 
  _911 = MEM[(const struct iteratorD.44725 &)__position_1082 + 48]._M_firstD.42941;
  # DEBUG D#1161ptD.0 => MEM[(const struct iteratorD.44725 &)__position_1082 + 48]._M_lastD.42942
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped 
  _913 = MEM[(const struct iteratorD.44725 &)__position_1082 + 48]._M_nodeD.42943;
  # DEBUG thisD.72886 => D#1157ptD.0
  # DEBUG D#84ptD.0 => &D#1157ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.72888 => &D.72889
  # DEBUG __xD.72887 => D#84ptD.0
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped 
  __first_914 = MEM[(const struct iteratorD.44725 &)__position_1082 + 16]._M_curD.42940;
  # DEBUG D#1175ptD.0 => MEM[(const struct iteratorD.44725 &)__position_1082 + 16]._M_firstD.42941
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped 
  __first$_M_last_916 = MEM[(const struct iteratorD.44725 &)__position_1082 + 16]._M_lastD.42942;
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped 
  __first$_M_node_917 = MEM[(const struct iteratorD.44725 &)__position_1082 + 16]._M_nodeD.42943;
  # DEBUG __resultD.72894 => &D.72891
  # DEBUG D.72895 => D#603ptD.0
  # DEBUG thisD.72897 => &D.72899
  # DEBUG __xD.72896 => &D.72891
  # DEBUG __resultD.72902 => &D.72899
  # DEBUG __assignableD.72905 => 1
  # DEBUG thisD.72907 => NULL
  # DEBUG __xD.72906 => &D.72899
  # DEBUG __resultD.72908 => NULL
  # DEBUG thisD.72912 => &D.72913
  # DEBUG __xD.72911 => NULL
  # DEBUG __resultD.72916 => &D.72913
  # DEBUG thisD.72918 => &D.72933
  # DEBUG __xD.72917 => &D.72913
  # DEBUG __itD.72926 => _910
  # DEBUG __it$8D.72925 => _911
  # DEBUG __it$16D.72924 => D#1161ptD.0
  # DEBUG __it$24D.72923 => _913
  # DEBUG __it$_M_curD.60535 => _910
  # DEBUG __it$_M_firstD.60534 => _911
  # DEBUG __it$_M_lastD.60533 => D#1161ptD.0
  # DEBUG __it$_M_nodeD.60532 => _913
  # DEBUG __itD.72930 => __first_914
  # DEBUG __it$8D.72929 => D#1175ptD.0
  # DEBUG __it$16D.72928 => __first$_M_last_916
  # DEBUG __it$24D.72927 => __first$_M_node_917
  # DEBUG __it$_M_curD.60529 => __first_914
  # DEBUG __it$_M_firstD.60528 => D#1175ptD.0
  # DEBUG __it$_M_lastD.60527 => __first$_M_last_916
  # DEBUG __it$_M_nodeD.60526 => __first$_M_node_917
  # DEBUG __resultD.72936 => &D.72933
  # DEBUG thisD.72938 => NULL
  # DEBUG __xD.72937 => &D.72933
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.72952 => _910
  # DEBUG __it$8D.72951 => _911
  # DEBUG __it$16D.72950 => D#1161ptD.0
  # DEBUG __it$24D.72948 => _913
  # DEBUG __it$_M_curD.60489 => _910
  # DEBUG __it$_M_firstD.60488 => _911
  # DEBUG __it$_M_lastD.60487 => D#1161ptD.0
  # DEBUG __it$_M_nodeD.60486 => _913
  # DEBUG __itD.72957 => __first_914
  # DEBUG __it$8D.72956 => D#1175ptD.0
  # DEBUG __it$16D.72955 => __first$_M_last_916
  # DEBUG __it$24D.72953 => __first$_M_node_917
  # DEBUG __it$_M_curD.60483 => __first_914
  # DEBUG __it$_M_firstD.60482 => D#1175ptD.0
  # DEBUG __it$_M_lastD.60481 => __first$_M_last_916
  # DEBUG __it$_M_nodeD.60480 => __first$_M_node_917
  # DEBUG __firstD.73073 => __first_914
  # DEBUG __first$8D.73074 => D#1175ptD.0
  # DEBUG __first$16D.73075 => __first$_M_last_916
  # DEBUG __first$24D.73076 => __first$_M_node_917
  # DEBUG __resultD.72939 => NULL
  # DEBUG __simpleD.72945 => 0
  # DEBUG thisD.72947 => &D.72958
  # DEBUG __xD.72946 => NULL
  # DEBUG __firstD.73080 => __first_914
  # DEBUG __first$_M_firstD.73081 => D#1175ptD.0
  # DEBUG __first$_M_lastD.73082 => __first$_M_last_916
  # DEBUG __first$_M_nodeD.73083 => __first$_M_node_917
  # DEBUG __resultD.72961 => &D.72958
  # DEBUG __xD.72969 => &__lastD.72960
  # DEBUG __yD.72968 => &__firstD.72959
  # DEBUG __sizeD.60431 => 4
  _951 = (long intD.12) _913;
  _953 = (long intD.12) __first$_M_node_917;
  _954 = _951 - _953;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _955 = _954 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _956 = _955 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _957 = _956 * 128;
  _959 = (long intD.12) _910;
  _961 = (long intD.12) _911;
  _962 = _959 - _961;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _963 = _962 /[ex] 4;
  _964 = _957 + _963;
  _966 = (long intD.12) __first$_M_last_916;
  _968 = (long intD.12) __first_914;
  _969 = _966 - _968;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _970 = _969 /[ex] 4;
  __n_971 = _964 + _970;
  # DEBUG __nD.72965 => __n_971
  # DEBUG __nD.72965 => __n_971
  if (__n_971 <= 0)
    goto <bb 165>;
  else
    goto <bb 166>;
;;    succ:       165 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                166 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 165, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 164, next block 166, flags: (NEW, REACHABLE)
;;    pred:       164 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                172 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1573 = PHI <.MEM_1250(164), .MEM_1381(172)>
  # DEBUG thisD.72964 => &D.72898
  # DEBUG __xD.72963 => &D.72958
  # .MEM_1322 = VDEF <.MEM_1573>
  D.72958 ={v} {CLOBBER};
  # .MEM_1323 = VDEF <.MEM_1322>
  D.72933 ={v} {CLOBBER};
  # .MEM_1324 = VDEF <.MEM_1323>
  D.72913 ={v} {CLOBBER};
  # .MEM_1325 = VDEF <.MEM_1324>
  D.72899 ={v} {CLOBBER};
  # .MEM_1326 = VDEF <.MEM_1325>
  D.72891 ={v} {CLOBBER};
  goto <bb 174>;
;;    succ:       174 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 166, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 165, next block 167, flags: (NEW, REACHABLE)
;;    pred:       164 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       167 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 167, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 166, next block 168, flags: (NEW)
;;    pred:       166 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                173 [100.0%]  (FALLTHRU,EXECUTABLE)
  # __n_1086 = PHI <__n_971(166), __n_981(173)>
  # .MEM_1540 = PHI <.MEM_1250(166), .MEM_1307(173)>
  # PT = nonlocal escaped null 
  # SR.2206_1587 = PHI <_906(166), SR.2206_1586(173)>
  # PT = nonlocal escaped null 
  # SR.2207_1585 = PHI <_908(166), SR.2207_1583(173)>
  # PT = nonlocal escaped null 
  # SR.2208_1578 = PHI <_909(166), SR.2208_1577(173)>
  # PT = nonlocal escaped 
  # __first_1576 = PHI <__first_914(166), __first_1575(173)>
  # PT = nonlocal escaped 
  # __first$_M_last_1505 = PHI <__first$_M_last_916(166), __first$_M_last_1504(173)>
  # PT = nonlocal escaped 
  # __first$_M_node_1502 = PHI <__first$_M_node_917(166), __first$_M_node_1501(173)>
  # DEBUG __first$_M_nodeD.73083 => __first$_M_node_1502
  # DEBUG __first$_M_lastD.73082 => __first$_M_last_1505
  # DEBUG __firstD.73080 => __first_1576
  # DEBUG __nD.72965 => __n_1086
  # DEBUG D#100ptD.0 => &D.72958
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.72959
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_1540>
  _975 = MEM[(const intD.9 &)__first_1576];
  # .MEM_1307 = VDEF <.MEM_1540>
  *SR.2206_1587 = _975;
  # DEBUG thisD.72966 => &__firstD.72959
  # PT = nonlocal escaped 
  __first_976 = __first_1576 + 4;
  # DEBUG __firstD.73080 => __first_976
  if (__first_976 == __first$_M_last_1505)
    goto <bb 168>;
  else
    goto <bb 169>;
;;    succ:       168 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                169 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 168, loop depth 2, count 0, freq 612, maybe hot
;;    prev block 167, next block 169, flags: (NEW, REACHABLE)
;;    pred:       167 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72970 => &__firstD.72959
  # PT = nonlocal escaped 
  __first$_M_node_987 = __first$_M_node_1502 + 8;
  # DEBUG thisD.72972 => &__firstD.72959
  # DEBUG __new_nodeD.72971 => __first$_M_node_987
  # DEBUG __first$_M_nodeD.73083 => __first$_M_node_987
  # VUSE <.MEM_1307>
  # PT = nonlocal escaped 
  __first_988 = MEM[(intD.9 * *)__first$_M_node_1502 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_989 = __first_988 + 512;
  # DEBUG __first$_M_lastD.73082 => __first$_M_last_989
  # DEBUG __firstD.73080 => __first_988
;;    succ:       169 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 169, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 168, next block 170, flags: (NEW, REACHABLE)
;;    pred:       167 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                168 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_1575 = PHI <__first_976(167), __first_988(168)>
  # PT = nonlocal escaped 
  # __first$_M_last_1504 = PHI <__first$_M_last_1505(167), __first$_M_last_989(168)>
  # PT = nonlocal escaped 
  # __first$_M_node_1501 = PHI <__first$_M_node_1502(167), __first$_M_node_987(168)>
  # DEBUG __first$_M_nodeD.73083 => __first$_M_node_1501
  # DEBUG __first$_M_lastD.73082 => __first$_M_last_1504
  # DEBUG __firstD.73080 => __first_1575
  # DEBUG thisD.72967 => &D.72958
  # PT = nonlocal escaped null 
  _979 = SR.2206_1587 + 4;
  if (_979 == SR.2207_1585)
    goto <bb 170>;
  else
    goto <bb 171>;
;;    succ:       170 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                171 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 170, loop depth 2, count 0, freq 612, maybe hot
;;    prev block 169, next block 171, flags: (NEW, REACHABLE)
;;    pred:       169 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.72974 => &D.72958
  # PT = nonlocal escaped null 
  _991 = SR.2208_1578 + 8;
  # DEBUG thisD.72976 => &D.72958
  # DEBUG __new_nodeD.72975 => _991
  # VUSE <.MEM_1307>
  # PT = nonlocal escaped 
  _992 = MEM[(intD.9 * *)SR.2208_1578 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _993 = _992 + 512;
;;    succ:       171 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 171, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 170, next block 172, flags: (NEW, REACHABLE)
;;    pred:       169 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                170 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # SR.2206_1586 = PHI <_979(169), _992(170)>
  # PT = nonlocal escaped null 
  # SR.2207_1583 = PHI <SR.2207_1585(169), _993(170)>
  # PT = nonlocal escaped null 
  # SR.2208_1577 = PHI <SR.2208_1578(169), _991(170)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_981 = __n_1086 + -1;
  # DEBUG __nD.72965 => __n_981
  # DEBUG __nD.72965 => __n_981
  if (__n_981 <= 0)
    goto <bb 172>;
  else
    goto <bb 173>;
;;    succ:       172 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                173 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 172, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 171, next block 173, flags: (NEW)
;;    pred:       171 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1381 = PHI <.MEM_1307(171)>
  goto <bb 165>;
;;    succ:       165 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 173, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 172, next block 174, flags: (NEW)
;;    pred:       171 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 167>;
;;    succ:       167 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 174, loop depth 1, count 0, freq 901, maybe hot
;;    prev block 173, next block 175, flags: (NEW, REACHABLE)
;;    pred:       162 [0.0%]  (FALSE_VALUE,EXECUTABLE)
;;                165 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1041 = PHI <.MEM_407(162), .MEM_1326(165)>
  # PT = nonlocal 
  __position_877 = __position_1082 + 80;
  # DEBUG __firstD.72849 => __position_877
  # PT = null { D.73092 } (escaped heap)
  __new_finish_878 = __new_finish_1083 + 80;
  # DEBUG __curD.72852 => __new_finish_878
  # DEBUG __curD.72852 => __new_finish_878
  # DEBUG __firstD.72849 => __position_877
  if (_36 == __position_877)
    goto <bb 176>;
  else
    goto <bb 175>;
;;    succ:       176 [4.5%]  (TRUE_VALUE,EXECUTABLE)
;;                175 [95.5%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 175, loop depth 1, count 0, freq 860, maybe hot
;;    prev block 174, next block 176, flags: (NEW)
;;    pred:       174 [95.5%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 162>;
;;    succ:       162 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 176, loop depth 0, count 0, freq 41, maybe hot
;;    prev block 175, next block 177, flags: (NEW)
;;    pred:       174 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1037 = PHI <__new_finish_878(174)>
  # VUSE <.MEM_1041>
  pretmp_53 = this_9(D)->D.41195._M_implD.40686._M_finishD.40689;
;;    succ:       177 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 177, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 176, next block 178, flags: (NEW, REACHABLE)
;;    pred:       176 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                154 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1084 = PHI <__new_finish_1037(176), __new_finish_34(154)>
  # .MEM_1539 = PHI <.MEM_1041(176), .MEM_1534(154)>
  # PT = nonlocal escaped 
  # prephitmp_69 = PHI <pretmp_53(176), _36(154)>
  # DEBUG __new_finishD.46204 => NULL
  # DEBUG D#700ptD.0 => &this_9(D)->D.41195
  # DEBUG thisD.61928 => D#700ptD.0
  # DEBUG D#1185ptD.0 => this_9(D)->D.41195._M_implD.40686._M_finishD.40689
  # VUSE <.MEM_1539>
  # PT = nonlocal escaped 
  __first_39 = this_9(D)->D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.61917 => __first_39
  # DEBUG __lastD.61918 => D#1185ptD.0
  # DEBUG __firstD.61924 => __first_39
  if (__first_39 == prephitmp_69)
    goto <bb 195>;
  else
    goto <bb 184>;
;;    succ:       195 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                184 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 178, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 177, next block 179, flags: (NEW, REACHABLE)
;;    pred:       163 (EH,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1026 = PHI <__new_finish_1083(163)>
<L34>: [LP 18]
  # VUSE <.MEM_1250>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _879 = __builtin_eh_pointerD.2738 (29);
  # .MEM_1327 = VDEF <.MEM_1250>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_879);
  # DEBUG __firstD.72854 => __new_finish_34
  # DEBUG __lastD.72853 => __new_finish_1026
  # DEBUG __firstD.72857 => __new_finish_34
  # DEBUG __lastD.72856 => __new_finish_1026
  # DEBUG __firstD.72857 => __new_finish_34
  if (__new_finish_34 == __new_finish_1026)
    goto <bb 179>;
  else
    goto <bb 180>;
;;    succ:       179 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                180 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 179, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 178, next block 180, flags: (NEW, REACHABLE)
;;    pred:       178 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                181 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1572 = PHI <.MEM_1327(178), .MEM_1330(181)>
  [LP 17] # .MEM_1331 = VDEF <.MEM_1572>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       183 (EH,EXECUTABLE)

;;   basic block 180, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 179, next block 181, flags: (NEW, REACHABLE)
;;    pred:       178 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       181 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 181, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 180, next block 182, flags: (NEW)
;;    pred:       180 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                182 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1085 = PHI <__new_finish_34(180), __new_finish_882(182)>
  # .MEM_1542 = PHI <.MEM_1327(180), .MEM_1330(182)>
  # DEBUG __firstD.72857 => __new_finish_1085
  # DEBUG __rD.57673 => __new_finish_1085
  # DEBUG __pointerD.72858 => NULL
  # DEBUG thisD.72859 => NULL
  # DEBUG thisD.72860 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # PT = null { D.73092 } (escaped heap)
  _881 = &MEM[(struct dequeD.40449 *)__new_finish_1085].D.43590;
  # .MEM_1328 = VDEF <.MEM_1542>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (_881);
  # .MEM_1330 = VDEF <.MEM_1328>
  MEM[(struct  &)__new_finish_1085] ={v} {CLOBBER};
  # PT = null { D.73092 } (escaped heap)
  __new_finish_882 = __new_finish_1085 + 80;
  # DEBUG __firstD.72857 => __new_finish_882
  # DEBUG __firstD.72857 => __new_finish_882
  if (__new_finish_882 == __new_finish_1026)
    goto <bb 179>;
  else
    goto <bb 182>;
;;    succ:       179 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                182 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 182, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 181, next block 183, flags: (NEW)
;;    pred:       181 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 181>;
;;    succ:       181 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 183, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 182, next block 184, flags: (NEW, REACHABLE)
;;    pred:       179 (EH,EXECUTABLE)
<L36>: [LP 17]
  [MNT 27] # .MEM_1332 = VDEF <.MEM_1331>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_end_catchD.13513 ();
  [LP 5] resx 28
;;    succ:       201 (EH,EXECUTABLE)

;;   basic block 184, loop depth 0, count 0, freq 38, maybe hot
;;    prev block 183, next block 185, flags: (NEW, REACHABLE)
;;    pred:       177 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       185 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 185, loop depth 1, count 0, freq 429, maybe hot
;;    prev block 184, next block 186, flags: (NEW)
;;    pred:       184 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                193 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_1398 = PHI <__first_39(184), __first_96(193)>
  # .MEM_238 = PHI <.MEM_1539(184), .MEM_114(193)>
  # DEBUG __firstD.61924 => __first_1398
  # DEBUG __rD.57673 => __first_1398
  # DEBUG __pointerD.61925 => NULL
  # DEBUG thisD.61926 => NULL
  # DEBUG thisD.61927 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#1162ptD.0 => &MEM[(struct dequeD.40449 *)__first_1398].D.43590
  # DEBUG thisD.72978 => D#1162ptD.0
  # VUSE <.MEM_238>
  # PT = nonlocal escaped 
  _994 = MEM[(struct _Deque_baseD.42881 *)__first_1398]._M_implD.43041._M_mapD.43043;
  if (_994 != 0B)
    goto <bb 186>;
  else
    goto <bb 192>;
;;    succ:       186 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                192 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 186, loop depth 1, count 0, freq 385, maybe hot
;;    prev block 185, next block 187, flags: (NEW, REACHABLE)
;;    pred:       185 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_238>
  # PT = nonlocal escaped 
  _995 = MEM[(struct _Deque_baseD.42881 *)__first_1398]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _996 = _995 + 8;
  # VUSE <.MEM_238>
  # PT = nonlocal escaped 
  __nstart_997 = MEM[(struct _Deque_baseD.42881 *)__first_1398]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.72984 => D#1162ptD.0
  # DEBUG __nstartD.72983 => __nstart_997
  # DEBUG __nfinishD.72982 => _996
  # DEBUG __nD.72985 => __nstart_997
  # DEBUG __nD.72985 => __nstart_997
  if (_996 <= __nstart_997)
    goto <bb 191>;
  else
    goto <bb 187>;
;;    succ:       191 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                187 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 187, loop depth 1, count 0, freq 350, maybe hot
;;    prev block 186, next block 188, flags: (NEW, REACHABLE)
;;    pred:       186 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       188 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 188, loop depth 2, count 0, freq 3897, maybe hot
;;    prev block 187, next block 189, flags: (NEW)
;;    pred:       187 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                189 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_1087 = PHI <__nstart_997(187), __nstart_1000(189)>
  # .MEM_1544 = PHI <.MEM_238(187), .MEM_1334(189)>
  # DEBUG __nD.72985 => __nstart_1087
  # VUSE <.MEM_1544>
  # PT = nonlocal escaped 
  _999 = *__nstart_1087;
  # DEBUG thisD.72987 => D#1162ptD.0
  # DEBUG __pD.72986 => _999
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#1162ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.72991 => _999
  # DEBUG __aD.72989 => D#144ptD.0
  # DEBUG __nD.72990 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.72994 => _999
  # DEBUG thisD.72992 => D#140ptD.0
  # DEBUG D.72993 => D#141ptD.0
  # .MEM_1334 = VDEF <.MEM_1544>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZdlPvD.2766 (_999);
  # PT = nonlocal escaped 
  __nstart_1000 = __nstart_1087 + 8;
  # DEBUG __nD.72985 => __nstart_1000
  # DEBUG __nD.72985 => __nstart_1000
  if (_996 <= __nstart_1000)
    goto <bb 190>;
  else
    goto <bb 189>;
;;    succ:       190 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                189 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 189, loop depth 2, count 0, freq 3546, maybe hot
;;    prev block 188, next block 190, flags: (NEW)
;;    pred:       188 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 188>;
;;    succ:       188 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 190, loop depth 1, count 0, freq 351, maybe hot
;;    prev block 189, next block 191, flags: (NEW)
;;    pred:       188 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_1334>
  pretmp_853 = MEM[(struct _Deque_baseD.42881 *)__first_1398]._M_implD.43041._M_mapD.43043;
;;    succ:       191 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 191, loop depth 1, count 0, freq 385, maybe hot
;;    prev block 190, next block 192, flags: (NEW, REACHABLE)
;;    pred:       190 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                186 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1545 = PHI <.MEM_1334(190), .MEM_238(186)>
  # PT = nonlocal escaped 
  # prephitmp_107 = PHI <pretmp_853(190), _994(186)>
  # DEBUG D#447ptD.0 => D#1162ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#1184ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_1398]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#1162ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.72997 => D#1184ptD.0
  # DEBUG thisD.72995 => D#445ptD.0
  # DEBUG __nD.72996 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.72998
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.73001 => D#1184ptD.0
  # DEBUG __aD.72999 => D#265ptD.0
  # DEBUG __nD.73000 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.73004 => D#1184ptD.0
  # DEBUG thisD.73002 => D#261ptD.0
  # DEBUG D.73003 => D#262ptD.0
  # .MEM_1335 = VDEF <.MEM_1545>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_107);
  # DEBUG thisD.57611 => &__map_allocD.72998
  # DEBUG thisD.57590 => &__map_allocD.72998
;;    succ:       192 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 192, loop depth 1, count 0, freq 429, maybe hot
;;    prev block 191, next block 193, flags: (NEW, REACHABLE)
;;    pred:       185 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                191 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1044 = PHI <.MEM_238(185), .MEM_1335(191)>
  # DEBUG D#448ptD.0 => &D#1162ptD.0->_M_implD.43041
  # DEBUG thisD.72979 => D#448ptD.0
  # DEBUG thisD.72980 => D#448ptD.0
  # DEBUG thisD.72981 => D#448ptD.0
  # .MEM_114 = VDEF <.MEM_1044>
  MEM[(struct  &)__first_1398] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_96 = __first_1398 + 80;
  # DEBUG __firstD.61924 => __first_96
  # DEBUG __firstD.61924 => __first_96
  if (prephitmp_69 == __first_96)
    goto <bb 194>;
  else
    goto <bb 193>;
;;    succ:       194 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                193 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 193, loop depth 1, count 0, freq 390, maybe hot
;;    prev block 192, next block 194, flags: (NEW)
;;    pred:       192 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 185>;
;;    succ:       185 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 194, loop depth 0, count 0, freq 39, maybe hot
;;    prev block 193, next block 195, flags: (NEW)
;;    pred:       192 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_114>
  pretmp_496 = this_9(D)->D.41195._M_implD.40686._M_startD.40688;
;;    succ:       195 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 195, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 194, next block 196, flags: (NEW, REACHABLE)
;;    pred:       194 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                177 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1422 = PHI <.MEM_114(194), .MEM_1539(177)>
  # PT = nonlocal escaped 
  # prephitmp_1354 = PHI <pretmp_496(194), __first_39(177)>
  # DEBUG D#711ptD.0 => this_9(D)->D.41195._M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#710ptD.0 => (long intD.12) D#711ptD.0
  # DEBUG D#1183ptD.0 => this_9(D)->D.41195._M_implD.40686._M_startD.40688
  # DEBUG D#709ptD.0 => (long intD.12) D#1183ptD.0
  # DEBUG D#708ptD.0 => D#710ptD.0 - D#709ptD.0
  # DEBUG D#707ptD.0 => D#708ptD.0 /[ex] 80
  # DEBUG D#706ptD.0 => &this_9(D)->D.41195
  # DEBUG D#253ptD.0 => D#706ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#707ptD.0
  # DEBUG __pD.61907 => D#1183ptD.0
  # DEBUG thisD.61909 => D#253ptD.0
  # DEBUG __nD.61908 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_1354 != 0B)
    goto <bb 196>;
  else
    goto <bb 197>;
;;    succ:       196 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                197 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 196, loop depth 0, count 0, freq 30, maybe hot
;;    prev block 195, next block 197, flags: (NEW, REACHABLE)
;;    pred:       195 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.61913 => D#1183ptD.0
  # DEBUG __aD.61911 => D#248ptD.0
  # DEBUG __nD.61912 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.61916 => D#1183ptD.0
  # DEBUG thisD.61914 => D#244ptD.0
  # DEBUG D.61915 => D#245ptD.0
  # .MEM_115 = VDEF <.MEM_1422>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZdlPvD.2766 (prephitmp_1354);
;;    succ:       197 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 197, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 196, next block 198, flags: (NEW, REACHABLE)
;;    pred:       196 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                195 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_105 = PHI <.MEM_115(196), .MEM_1422(195)>
  # .MEM_42 = VDEF <.MEM_105>
  this_9(D)->D.41195._M_implD.40686._M_startD.40688 = __new_finish_628;
  # .MEM_43 = VDEF <.MEM_42>
  this_9(D)->D.41195._M_implD.40686._M_finishD.40689 = __new_finish_1084;
  # PT = null { D.73092 } (escaped heap)
  _45 = __new_finish_628 + prephitmp_678;
  # .MEM_46 = VDEF <.MEM_43>
  this_9(D)->D.41195._M_implD.40686._M_end_of_storageD.40690 = _45;
;;    succ:       198 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 198, loop depth 0, count 0, freq 139, maybe hot
;;    prev block 197, next block 199, flags: (NEW, REACHABLE)
;;    pred:       2 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                197 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                110 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_3 = PHI <.MEM_8(D)(2), .MEM_46(197), .MEM_78(110)>
  # VUSE <.MEM_3>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 199, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 198, next block 200, flags: (NEW)
;;    pred:       38 (EH,EXECUTABLE)
<L39>: [LP 21]
;;    succ:       200 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 200, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 199, next block 201, flags: (NEW, REACHABLE)
;;    pred:       100 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                199 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                97 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_4 = PHI <.MEM_129(100), .MEM_1520(199), .MEM_125(41), .MEM_126(47), .MEM_1614(74), .MEM_1708(97)>
<L10>:
  # DEBUG thisD.61930 => &__x_copyD.46166
  # DEBUG D#458ptD.0 => &__x_copyD.46166.cD.43633
  # DEBUG thisD.61931 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # .MEM_133 = VDEF <.MEM_4>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (&MEM[(struct dequeD.40449 *)&__x_copyD.46166].D.43590);
  resx 2
;;    succ:      

;;   basic block 201, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 200, next block 202, flags: (NEW, REACHABLE)
;;    pred:       183 (EH,EXECUTABLE)
<L13>: [LP 5]
  # DEBUG __new_finishD.46204 => __new_finish_34
  # VUSE <.MEM_1332>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _47 = __builtin_eh_pointerD.2738 (9);
  # .MEM_48 = VDEF <.MEM_1332>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_47);
  if (__new_finish_34 == 0B)
    goto <bb 204>;
  else
    goto <bb 202>;
;;    succ:       204 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                202 [85.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 202, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 201, next block 203, flags: (NEW, REACHABLE)
;;    pred:       201 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __firstD.61952 => __new_finish_628
  if (__new_finish_34 == __new_finish_628)
    goto <bb 203>;
  else
    goto <bb 209>;
;;    succ:       203 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                209 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 203, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 202, next block 204, flags: (NEW, REACHABLE)
;;    pred:       202 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                205 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                207 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                210 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                219 [85.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_1570 = PHI <.MEM_48(202), .MEM_1628(205), .MEM_118(207), .MEM_121(210), .MEM_523(219)>
  # DEBUG D#712ptD.0 => &this_9(D)->D.41195
  # DEBUG D#253ptD.0 => D#712ptD.0
  # DEBUG __pD.61958 => NULL
  # DEBUG thisD.61960 => D#253ptD.0
  # DEBUG __nD.61959 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (__new_finish_628 != 0B)
    goto <bb 212>;
  else
    goto <bb 213>;
;;    succ:       212 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                213 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 204, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 203, next block 205, flags: (NEW)
;;    pred:       201 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                219 [15.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_1571 = PHI <.MEM_48(201), .MEM_523(219)>
;;    succ:       205 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 205, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 204, next block 206, flags: (NEW, REACHABLE)
;;    pred:       204 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                218 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1628 = PHI <.MEM_1571(204), .MEM_1131(218)>
  # DEBUG __new_finishD.46204 => 0B
  # DEBUG D#704ptD.0 => &this_9(D)->D.41195
  # DEBUG thisD.61943 => D#704ptD.0
  # RANGE ~[461168601842738790, 18331451923248866918]
  _49 = __n_7(D) + __elems_before_936;
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551600
  _50 = _49 * 80;
  # PT = null { D.73092 } (escaped heap)
  _51 = __new_finish_628 + _50;
  # DEBUG __firstD.61932 => __first_28
  # DEBUG __lastD.61933 => _51
  # DEBUG __firstD.61939 => __first_28
  if (__first_28 == _51)
    goto <bb 203>;
  else
    goto <bb 206>;
;;    succ:       203 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                206 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 206, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 205, next block 207, flags: (NEW, REACHABLE)
;;    pred:       205 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       207 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 207, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 206, next block 208, flags: (NEW)
;;    pred:       206 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                208 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __first_235 = PHI <__first_28(206), __first_98(208)>
  # .MEM_1411 = PHI <.MEM_1628(206), .MEM_118(208)>
  # DEBUG __firstD.61939 => __first_235
  # DEBUG __rD.57673 => __first_235
  # DEBUG __pointerD.61940 => NULL
  # DEBUG thisD.61941 => NULL
  # DEBUG thisD.61942 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # PT = null { D.73092 } (escaped heap)
  _97 = &MEM[(struct dequeD.40449 *)__first_235].D.43590;
  # .MEM_116 = VDEF <.MEM_1411>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (_97);
  # .MEM_118 = VDEF <.MEM_116>
  MEM[(struct  &)__first_235] ={v} {CLOBBER};
  # PT = null { D.73092 } (escaped heap)
  __first_98 = __first_235 + 80;
  # DEBUG __firstD.61939 => __first_98
  # DEBUG __firstD.61939 => __first_98
  if (_51 == __first_98)
    goto <bb 203>;
  else
    goto <bb 208>;
;;    succ:       203 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                208 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 208, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 207, next block 209, flags: (NEW)
;;    pred:       207 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 207>;
;;    succ:       207 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 209, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 208, next block 210, flags: (NEW, REACHABLE)
;;    pred:       202 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       210 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 210, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 209, next block 211, flags: (NEW)
;;    pred:       209 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                211 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = null { D.73092 } (escaped heap)
  # __new_finish_1420 = PHI <__new_finish_628(209), __new_finish_101(211)>
  # .MEM_1416 = PHI <.MEM_48(209), .MEM_121(211)>
  # DEBUG __firstD.61952 => __new_finish_1420
  # DEBUG __rD.57673 => __new_finish_1420
  # DEBUG __pointerD.61953 => NULL
  # DEBUG thisD.61954 => NULL
  # DEBUG thisD.61955 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # PT = null { D.73092 } (escaped heap)
  _100 = &MEM[(struct dequeD.40449 *)__new_finish_1420].D.43590;
  # .MEM_119 = VDEF <.MEM_1416>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (_100);
  # .MEM_121 = VDEF <.MEM_119>
  MEM[(struct  &)__new_finish_1420] ={v} {CLOBBER};
  # PT = null { D.73092 } (escaped heap)
  __new_finish_101 = __new_finish_1420 + 80;
  # DEBUG __firstD.61952 => __new_finish_101
  # DEBUG __firstD.61952 => __new_finish_101
  if (__new_finish_34 == __new_finish_101)
    goto <bb 203>;
  else
    goto <bb 211>;
;;    succ:       203 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                211 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 211, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 210, next block 212, flags: (NEW)
;;    pred:       210 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 210>;
;;    succ:       210 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 212, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 211, next block 213, flags: (NEW, REACHABLE)
;;    pred:       203 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.61964 => NULL
  # DEBUG __aD.61962 => D#248ptD.0
  # DEBUG __nD.61963 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.61967 => NULL
  # DEBUG thisD.61965 => D#244ptD.0
  # DEBUG D.61966 => D#245ptD.0
  # .MEM_122 = VDEF <.MEM_1570>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  _ZdlPvD.2766 (__new_finish_628);
;;    succ:       213 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 213, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 212, next block 214, flags: (NEW, REACHABLE)
;;    pred:       212 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                203 [30.2%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_108 = PHI <.MEM_122(212), .MEM_1570(203)>
  [LP 6] # .MEM_54 = VDEF <.MEM_108>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_rethrowD.45300 ();
;;    succ:       214 (EH,EXECUTABLE)

;;   basic block 214, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 213, next block 215, flags: (NEW, REACHABLE)
;;    pred:       213 (EH,EXECUTABLE)
<L18>: [LP 6]
  [MNT 11] # .MEM_55 = VDEF <.MEM_54>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_end_catchD.13513 ();
  resx 10
;;    succ:      

;;   basic block 215, loop depth 0, count 0, freq 37, maybe hot
;;    prev block 214, next block 216, flags: (NEW, REACHABLE)
;;    pred:       113 [67.0%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG __lenD.46200 => NULL
  # DEBUG thisD.61864 => this_9(D)
  # DEBUG D#176ptD.0 => &this_9(D)->D.41195._M_implD.40686._M_startD.40688
  # DEBUG thisD.61866 => NULL
  # DEBUG __iD.61865 => D#176ptD.0
  # DEBUG __lhsD.61861 => &__positionD.41120
  # DEBUG __rhsD.61862 => &D.46202
  # DEBUG thisD.54352 => &__positionD.41120
  _707 = (long intD.12) __position_23;
  # DEBUG thisD.54350 => &D.46202
  _708 = _707 - _631;
  # RANGE [-115292150460684697, 115292150460684697]
  _703 = _708 /[ex] 80;
  # RANGE ~[115292150460684698, 18331451923248866918]
  __elems_before_704 = (const size_typeD.40771) _703;
  # DEBUG __elems_beforeD.46201 => __elems_before_704
  # DEBUG D#713ptD.0 => &this_9(D)->D.41195
  # DEBUG D#506ptD.0 => D#713ptD.0
  # DEBUG __nD.72592 => NULL
  # DEBUG thisD.72593 => D#506ptD.0
  # DEBUG D#505ptD.0 => D#506ptD.0
  goto <bb 115>;
;;    succ:       115 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 216, loop depth 0, count 0, freq 5, maybe hot
;;    prev block 215, next block 217, flags: (NEW, REACHABLE)
;;    pred:       113 [33.0%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG __lenD.46200 => NULL
  # DEBUG thisD.61864 => this_9(D)
  # DEBUG D#176ptD.0 => &this_9(D)->D.41195._M_implD.40686._M_startD.40688
  # DEBUG thisD.61866 => NULL
  # DEBUG __iD.61865 => D#176ptD.0
  # DEBUG __lhsD.61861 => &__positionD.41120
  # DEBUG __rhsD.61862 => &D.46202
  # DEBUG thisD.54352 => &__positionD.41120
  _697 = (long intD.12) __position_23;
  # DEBUG thisD.54350 => &D.46202
  _940 = _697 - _631;
  # RANGE [-115292150460684697, 115292150460684697]
  _941 = _940 /[ex] 80;
  # RANGE ~[115292150460684698, 18331451923248866918]
  __elems_before_699 = (const size_typeD.40771) _941;
  # DEBUG __elems_beforeD.46201 => __elems_before_699
  # DEBUG D#713ptD.0 => &this_9(D)->D.41195
  # DEBUG D#506ptD.0 => D#713ptD.0
  # DEBUG __nD.72592 => NULL
  # DEBUG thisD.72593 => D#506ptD.0
  # DEBUG D#505ptD.0 => D#506ptD.0
  if (__len_639 != 0)
    goto <bb 114>;
  else
    goto <bb 116>;
;;    succ:       114 [16.0%]  (TRUE_VALUE,EXECUTABLE)
;;                116 [84.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 217, loop depth 0, count 0, freq 1, maybe hot
;;    prev block 216, next block 218, flags: (NEW, REACHABLE)
;;    pred:       67 [4.5%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615]
  _1490 = (long unsigned intD.14) _31;
  # PT = nonlocal escaped 
  _1494 = __old_finish_1068 + _1490;
  # .MEM_492 = VDEF <.MEM_71>
  this_9(D)->D.41195._M_implD.40686._M_finishD.40689 = _1494;
  # DEBUG thisD.61845 => &__positionD.41120
  # DEBUG __firstD.61837 => D#1186ptD.0
  # DEBUG __lastD.61838 => __old_finish_26
  # DEBUG __valueD.61839 => &__x_copyD.46166
  # DEBUG __firstD.61842 => D#1186ptD.0
  goto <bb 103>;
;;    succ:       103 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 218, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 217, next block 219, flags: (NEW, REACHABLE)
;;    pred:       160 (EH,EXECUTABLE)
<L37>: [LP 19]
  # DEBUG __new_finishD.46204 => 0B
  # VUSE <.MEM_1238>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _741 = __builtin_eh_pointerD.2738 (9);
  # .MEM_1131 = VDEF <.MEM_1238>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_741);
  goto <bb 205>;
;;    succ:       205 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 219, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 218, next block 1, flags: (NEW, REACHABLE)
;;    pred:       137 (EH,EXECUTABLE)
<L38>: [LP 20]
  # DEBUG __new_finishD.46204 => __new_finish_628
  # VUSE <.MEM_1144>
  # PT = nonlocal escaped 
  # USE = nonlocal escaped 
  _1627 = __builtin_eh_pointerD.2738 (9);
  # .MEM_523 = VDEF <.MEM_1144>
  # USE = nonlocal null { D.46166 D.73092 } (escaped heap)
  # CLB = nonlocal null { D.46166 D.73092 } (escaped heap)
  __cxa_begin_catchD.13514 (_1627);
  if (__new_finish_628 == 0B)
    goto <bb 204>;
  else
    goto <bb 203>;
;;    succ:       204 [15.0%]  (TRUE_VALUE,EXECUTABLE)
;;                203 [85.0%]  (FALSE_VALUE,EXECUTABLE)

}



;; Function BufferState::FeedbackSharedBufferPolicy::FeedbackSharedBufferPolicy(const Configuration&, BufferState*, const string&) (_ZN11BufferState26FeedbackSharedBufferPolicyC2ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2183, decl_uid=41242, cgraph_uid=650, symbol_order=651)


Pass statistics:
----------------


Global statistics (BBS:107, LOOPS:7, CONDITIONS:44, STMTS:1580)

Global profiling statistics (BBS:0, LOOPS:0, CONDITIONS:0, STMTS:0)

Pass statistics:
----------------

BufferState::FeedbackSharedBufferPolicy::FeedbackSharedBufferPolicy(const Configuration&, BufferState*, const string&) (struct FeedbackSharedBufferPolicyD.40434 * const thisD.41243, const struct ConfigurationD.36282 & configD.41244, struct BufferStateD.39590 * parentD.41245, const struct stringD.2845 & nameD.41246)
Eh tree:
   1 cleanup land:{1,<L11>}
     2 cleanup land:{2,<L10>}
       3 cleanup land:{3,<L9>}
         4 cleanup land:{20,<L19>},{19,<L18>},{18,<L17>},{16,<L15>},{15,<L14>},{14,<L13>},{13,<L12>},{6,<L21>}
           17 cleanup land:{17,<L16>},{11,<L20>}
             18 cleanup land:{12,<L6>}
           14 cleanup land:{10,<L4>}
           10 cleanup land:{8,<L2>}
           6 cleanup land:{5,<L0>}
{
  intD.9 * * __first$_M_nodeD.73784;
  intD.9 * __first$_M_lastD.73783;
  intD.9 * const __firstD.73781;
  intD.9 * * SR.2458D.73780;
  intD.9 * SR.2457D.73779;
  intD.9 * SR.2456D.73778;
  intD.9 * * __first$24D.73777;
  intD.9 * __first$16D.73776;
  intD.9 * __first$8D.73775;
  intD.9 * __firstD.73774;
  intD.9 * * __nstartD.73751;
  struct queueD.40450 * __firstD.73723;
  intD.9 * * __nstartD.73698;
  intD.9 * * __nstartD.73671;
  intD.9 * * __nstartD.73644;
  struct iteratorD.40763 __positionD.73635;
  struct queueD.40450 * __posD.73621;
  _DistanceD.47812 __nD.73604;
  struct _Deque_iteratorD.42910 __firstD.73598;
  struct _Deque_iteratorD.42910 __lastD.73599;
  struct _Deque_iteratorD.42910 __lastD.73579;
  struct _Deque_iteratorD.42910 __firstD.73580;
  struct _Deque_iteratorD.42908 D.73597;
  intD.9 * __itD.73596;
  intD.9 * __it$8D.73595;
  intD.9 * __it$16D.73594;
  intD.9 * * __it$24D.73592;
  intD.9 * __itD.73591;
  intD.9 * __it$8D.73590;
  intD.9 * __it$16D.73589;
  intD.9 * * __it$24D.73587;
  struct _Deque_iteratorD.42910 __firstD.73573;
  struct _Deque_iteratorD.42910 __lastD.73574;
  struct _Deque_iteratorD.42908 D.73572;
  struct _Deque_iteratorD.42910 D.73571;
  struct _Deque_iteratorD.42910 D.73570;
  intD.9 * __itD.73569;
  intD.9 * __it$8D.73568;
  intD.9 * __it$16D.73567;
  intD.9 * * __it$24D.73566;
  intD.9 * __itD.73565;
  intD.9 * __it$8D.73564;
  intD.9 * __it$16D.73563;
  intD.9 * * __it$24D.73562;
  struct _Deque_iteratorD.42910 __firstD.73553;
  struct _Deque_iteratorD.42910 __lastD.73554;
  struct _Deque_iteratorD.42910 __lastD.73548;
  struct _Deque_iteratorD.42910 __firstD.73549;
  struct _Deque_iteratorD.42908 D.73552;
  struct _Deque_iteratorD.42910 __firstD.73539;
  struct _Deque_iteratorD.42910 __lastD.73540;
  struct _Deque_iteratorD.42908 D.73538;
  struct _Deque_iteratorD.42908 D.73537;
  struct _Deque_iteratorD.42910 __firstD.73531;
  struct _Deque_iteratorD.42910 __lastD.73532;
  struct _Deque_iteratorD.42908 D.73530;
  struct _Deque_iteratorD.42910 D.73529;
  struct _Deque_iteratorD.42910 D.73528;
  struct iteratorD.39806 __positionD.73504;
  value_typeD.39801 __xD.73499;
  struct iteratorD.39806 __positionD.73493;
  value_typeD.39801 __xD.73488;
  size_typeD.11502 __dnewD.73460;
  size_typeD.11502 __dnewD.73415;
  size_typeD.11502 __dnewD.73370;
  struct dequeD.40449 D.43702;
  struct value_typeD.40758 D.43701;
  const struct stringD.2845 D.43699;
  const struct stringD.2845 D.43697;
  const struct stringD.2845 D.43695;
  struct SharedBufferPolicyD.39699 * _4;
  intD.9 _15;
  charD.10 * const _18;
  intD.9 _22;
  charD.10 * const _25;
  intD.9 _29;
  charD.10 * const _32;
  intD.9 _33;
  long unsigned intD.14 _35;
  struct vectorD.39532 * _36;
  intD.9 * const _37;
  struct vectorD.39532 * _40;
  intD.9 * * _41;
  intD.9 _42;
  long unsigned intD.14 _43;
  struct vectorD.40452 * _44;
  intD.9 * * _45;
  charD.10 * const _46;
  intD.9 _49;
  intD.9 _50;
  intD.9 _51;
  intD.9 * _55;
  charD.10 * const _60;
  charD.10 * const _62;
  intD.9 * * _64;
  intD.9 * _65;
  intD.9 * * pretmp_82;
  intD.9 * * prephitmp_83;
  intD.9 pretmp_90;
  long unsigned intD.14 pretmp_92;
  long unsigned intD.14 prephitmp_93;
  struct queueD.40450 * _106;
  intD.9 * * _109;
  struct queueD.40450 * pretmp_140;
  struct queueD.40450 * prephitmp_141;
  charD.10 * _152;
  long unsigned intD.14 __dnew.49_153;
  long unsigned intD.14 __dnew.49_156;
  charD.10 * const _157;
  charD.10 * _158;
  intD.9 * * prephitmp_180;
  intD.9 * const _191;
  intD.9 * const _192;
  long intD.12 _193;
  long intD.12 _194;
  long intD.12 _195;
  long intD.12 _196;
  size_typeD.39814 _197;
  long unsigned intD.14 _198;
  long unsigned intD.14 _199;
  intD.9 * _200;
  intD.9 * const _201;
  long intD.12 _202;
  long intD.12 _203;
  long intD.12 _204;
  long intD.12 _205;
  size_typeD.39814 _206;
  long unsigned intD.14 _207;
  long unsigned intD.14 _208;
  intD.9 * _209;
  long intD.12 _210;
  intD.9 * * _211;
  long intD.12 _212;
  long intD.12 _213;
  long intD.12 _214;
  long intD.12 _215;
  long intD.12 _216;
  intD.9 * _217;
  long intD.12 _218;
  intD.9 * _219;
  long intD.12 _220;
  long intD.12 _221;
  long intD.12 _222;
  long intD.12 _223;
  intD.9 * _224;
  long intD.12 _225;
  intD.9 * _226;
  long intD.12 _227;
  long intD.12 _228;
  long intD.12 _229;
  difference_typeD.42938 _230;
  size_typeD.43117 _231;
  intD.9 * _233;
  intD.9 * * prephitmp_234;
  intD.9 * _235;
  intD.9 * * _236;
  intD.9 * _237;
  intD.9 * _238;
  intD.9 * * _240;
  long intD.12 _277;
  long intD.12 _279;
  long intD.12 _280;
  long intD.12 _281;
  long intD.12 _282;
  long intD.12 _283;
  long intD.12 _285;
  long intD.12 _287;
  long intD.12 _288;
  long intD.12 _289;
  long intD.12 _290;
  long intD.12 _292;
  long intD.12 _294;
  long intD.12 _295;
  long intD.12 _296;
  intD.9 _301;
  intD.9 * _305;
  intD.9 * * _317;
  intD.9 * _318;
  intD.9 * _319;
  struct queueD.40450 * const _320;
  struct queueD.40450 * const _321;
  long intD.12 _322;
  long intD.12 _323;
  long intD.12 _324;
  long intD.12 _325;
  size_typeD.40771 _326;
  long unsigned intD.14 _327;
  long unsigned intD.14 _328;
  intD.9 * * _333;
  intD.9 * * _334;
  intD.9 * _337;
  intD.9 * * _340;
  intD.9 * * _341;
  intD.9 * * _342;
  intD.9 * _345;
  intD.9 * * _348;
  intD.9 * * _349;
  intD.9 * _352;
  intD.9 * * _360;
  intD.9 * * _361;
  intD.9 * _364;
  intD.9 * * pretmp_369;
  intD.9 * * pretmp_430;
  intD.9 * * pretmp_512;
  intD.9 * * prephitmp_513;
  intD.9 pretmp_519;
  intD.9 prephitmp_520;

;;   basic block 2, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 0, next block 3, flags: (NEW, REACHABLE)
;;    pred:       ENTRY [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal 
  _4 = &this_3(D)->D.41247;
  # .MEM_9 = VDEF <.MEM_5(D)>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZN11BufferState18SharedBufferPolicyC2ERK13ConfigurationPS_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.40286 (_4, config_6(D), parent_7(D), name_8(D));
  # .MEM_10 = VDEF <.MEM_9>
  this_3(D)->D.41247.D.40291.D.39647._vptr.ModuleD.30415 = &MEM[(voidD.45 *)&_ZTVN11BufferState26FeedbackSharedBufferPolicyED.41257 + 16B];
  # DEBUG D#718ptD.0 => &this_3(D)->_occupancy_limitD.40447
  # DEBUG thisD.62025 => D#718ptD.0
  # DEBUG D#229ptD.0 => &D#718ptD.0->D.40238
  # DEBUG thisD.62026 => D#229ptD.0
  # DEBUG D#228ptD.0 => &D#229ptD.0->_M_implD.39729
  # DEBUG thisD.62027 => D#228ptD.0
  # DEBUG thisD.54757 => D#228ptD.0
  # DEBUG thisD.54755 => D#228ptD.0
  # .MEM_70 = VDEF <.MEM_10>
  MEM[(struct _Vector_implD.39706 *)this_3(D) + 224B]._M_startD.39731 = 0B;
  # .MEM_71 = VDEF <.MEM_70>
  MEM[(struct _Vector_implD.39706 *)this_3(D) + 224B]._M_finishD.39732 = 0B;
  # .MEM_72 = VDEF <.MEM_71>
  MEM[(struct _Vector_implD.39706 *)this_3(D) + 224B]._M_end_of_storageD.39733 = 0B;
  # DEBUG D#717ptD.0 => &this_3(D)->_round_trip_timeD.40448
  # DEBUG thisD.62022 => D#717ptD.0
  # DEBUG D#229ptD.0 => &D#717ptD.0->D.40238
  # DEBUG thisD.62023 => D#229ptD.0
  # DEBUG D#228ptD.0 => &D#229ptD.0->_M_implD.39729
  # DEBUG thisD.62024 => D#228ptD.0
  # DEBUG thisD.54757 => D#228ptD.0
  # DEBUG thisD.54755 => D#228ptD.0
  # .MEM_73 = VDEF <.MEM_72>
  MEM[(struct _Vector_implD.39706 *)this_3(D) + 248B]._M_startD.39731 = 0B;
  # .MEM_74 = VDEF <.MEM_73>
  MEM[(struct _Vector_implD.39706 *)this_3(D) + 248B]._M_finishD.39732 = 0B;
  # .MEM_75 = VDEF <.MEM_74>
  MEM[(struct _Vector_implD.39706 *)this_3(D) + 248B]._M_end_of_storageD.39733 = 0B;
  # DEBUG D#716ptD.0 => &this_3(D)->_flit_sent_timeD.41197
  # DEBUG thisD.62019 => D#716ptD.0
  # DEBUG D#243ptD.0 => &D#716ptD.0->D.41195
  # DEBUG thisD.62020 => D#243ptD.0
  # DEBUG D#242ptD.0 => &D#243ptD.0->_M_implD.40686
  # DEBUG thisD.62021 => D#242ptD.0
  # DEBUG thisD.55199 => D#242ptD.0
  # DEBUG thisD.55197 => D#242ptD.0
  # .MEM_76 = VDEF <.MEM_75>
  MEM[(struct _Vector_implD.40663 *)this_3(D) + 272B]._M_startD.40688 = 0B;
  # .MEM_77 = VDEF <.MEM_76>
  MEM[(struct _Vector_implD.40663 *)this_3(D) + 272B]._M_finishD.40689 = 0B;
  # .MEM_78 = VDEF <.MEM_77>
  MEM[(struct _Vector_implD.40663 *)this_3(D) + 272B]._M_end_of_storageD.40690 = 0B;
  # DEBUG D#63ptD.0 => &D.43696
  # DEBUG thisD.62018 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.43696
  # DEBUG thisD.73351 => &D.43695
  # DEBUG __sD.73352 => "feedback_aging_scale"
  # DEBUG __aD.73353 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.73363 => &D.43695
  # DEBUG D#296ptD.0 => &D.43695._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.73366 => D#296ptD.0
  # DEBUG __datD.73365 => &D.43695.D.11539._M_local_bufD.11541
  # DEBUG __aD.73364 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_381 = VDEF <.MEM_78>
  MEM[(struct _Alloc_hiderD.11518 *)&D.43695]._M_pD.11525 = &D.43695.D.11539._M_local_bufD.11541;
  # DEBUG __sD.73362 => "feedback_aging_scale"
  # DEBUG thisD.73356 => &D.43695
  # DEBUG __begD.73355 => "feedback_aging_scale"
  # DEBUG __endD.73354 => &MEM[(voidD.45 *)"feedback_aging_scale" + 20B]
  # DEBUG thisD.73360 => &D.43695
  # DEBUG __begD.73359 => "feedback_aging_scale"
  # DEBUG __endD.73358 => &MEM[(voidD.45 *)"feedback_aging_scale" + 20B]
  # DEBUG thisD.73367 => &D.43695
  # DEBUG __begD.73368 => "feedback_aging_scale"
  # DEBUG __endD.73369 => &MEM[(voidD.45 *)"feedback_aging_scale" + 20B]
  # DEBUG __ptrD.55982 => "feedback_aging_scale"
  # DEBUG __firstD.73393 => "feedback_aging_scale"
  # DEBUG __lastD.73392 => &MEM[(voidD.45 *)"feedback_aging_scale" + 20B]
  # DEBUG D#316ptD.0 => &__firstD.73393
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.73395 => "feedback_aging_scale"
  # DEBUG __lastD.73394 => &MEM[(voidD.45 *)"feedback_aging_scale" + 20B]
  # .MEM_382 = VDEF <.MEM_381>
  __dnewD.73370 = 20;
  [LP 13] # .MEM_383 = VDEF <.MEM_382>
  # PT = nonlocal escaped 
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _152 = _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmmD.11563 (&D.43695, &__dnewD.73370, 0);
;;    succ:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                84 (EH,EXECUTABLE)

;;   basic block 3, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 2, next block 4, flags: (NEW, REACHABLE)
;;    pred:       2 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#7ptD.0 => &D.43695
  # DEBUG __pD.73389 => _152
  # DEBUG thisD.73388 => D#7ptD.0
  # .MEM_384 = VDEF <.MEM_383>
  MEM[(charD.10 * *)&D.43695] = _152;
  # VUSE <.MEM_384>
  __dnew.49_153 = __dnewD.73370;
  # DEBUG D#8ptD.0 => &D.43695
  # DEBUG __capacityD.73391 => __dnew.49_153
  # DEBUG thisD.73390 => D#8ptD.0
  # .MEM_385 = VDEF <.MEM_384>
  MEM[(size_typeD.11502 *)&D.43695 + 16B] = __dnew.49_153;
  # DEBUG D#1ptD.0 => &D.43695
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.73373 => _152
  # DEBUG __k1D.73372 => "feedback_aging_scale"
  # DEBUG __k2D.73371 => &MEM[(voidD.45 *)"feedback_aging_scale" + 20B]
  # DEBUG __dD.73376 => _152
  # DEBUG __sD.73375 => "feedback_aging_scale"
  # DEBUG __nD.73374 => 20
  # DEBUG __s1D.73379 => _152
  # DEBUG __s2D.73378 => "feedback_aging_scale"
  # DEBUG __nD.73377 => 20
  # .MEM_387 = VDEF <.MEM_385>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  memcpyD.992 (_152, "feedback_aging_scale", 20);
  # VUSE <.MEM_387>
  __dnew.49_156 = __dnewD.73370;
  # DEBUG thisD.73383 => &D.43695
  # DEBUG __nD.73382 => __dnew.49_156
  # DEBUG D#9ptD.0 => &D.43695
  # DEBUG __lengthD.73385 => __dnew.49_156
  # DEBUG thisD.73384 => D#9ptD.0
  # .MEM_388 = VDEF <.MEM_387>
  MEM[(size_typeD.11502 *)&D.43695 + 8B] = __dnew.49_156;
  # VUSE <.MEM_388>
  # PT = nonlocal escaped null { D.43695 } (escaped)
  _157 = MEM[(charD.10 * *)&D.43695];
  # DEBUG D#1ptD.0 => &D.43695
  # DEBUG thisD.52997 => D#1ptD.0
  # PT = nonlocal escaped null { D.43695 } (escaped)
  _158 = _157 + __dnew.49_156;
  # DEBUG __c1D.73387 => _158
  # DEBUG __c2D.73386 => D#10ptD.0
  # .MEM_389 = VDEF <.MEM_388>
  MEM[(char_typeD.6629 &)_158] = 0;
  # .MEM_390 = VDEF <.MEM_389>
  __dnewD.73370 ={v} {CLOBBER};
  [LP 5] # .MEM_14 = VDEF <.MEM_390>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _15 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_6(D), &D.43695);
;;    succ:       67 (EH,EXECUTABLE)
;;                4 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 4, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 3, next block 5, flags: (NEW, REACHABLE)
;;    pred:       3 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_16 = VDEF <.MEM_14>
  this_3(D)->_aging_scaleD.41200 = _15;
  # DEBUG thisD.62031 => &D.43695
  # DEBUG thisD.62032 => &D.43695
  # DEBUG thisD.62041 => &D.43695
  # VUSE <.MEM_16>
  # PT = nonlocal escaped null { D.43695 } (escaped)
  _18 = MEM[(charD.10 * *)&D.43695];
  # DEBUG D#1ptD.0 => &D.43695
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.62042 => &D.43695
  if (&D.43695.D.11539._M_local_bufD.11541 != _18)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                6 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 5, loop depth 0, count 0, freq 143, maybe hot
;;    prev block 4, next block 6, flags: (NEW, REACHABLE)
;;    pred:       4 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43695.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.62034 => &D.43695
  # DEBUG __sizeD.62033 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43695
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43695
  # DEBUG D#185ptD.0 => &D.43695._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.62037 => _18
  # DEBUG __aD.62035 => D#183ptD.0
  # DEBUG __nD.62036 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.62040 => _18
  # DEBUG thisD.62038 => D#179ptD.0
  # DEBUG D.62039 => D#180ptD.0
  # .MEM_79 = VDEF <.MEM_16>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_18);
;;    succ:       6 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 6, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 5, next block 7, flags: (NEW, REACHABLE)
;;    pred:       4 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                5 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_66 = PHI <.MEM_16(4), .MEM_79(5)>
  # DEBUG D#189ptD.0 => &D.43695._M_dataplusD.11519
  # DEBUG thisD.62043 => D#189ptD.0
  # DEBUG thisD.62044 => D#189ptD.0
  # DEBUG thisD.62045 => D#189ptD.0
  # .MEM_17 = VDEF <.MEM_66>
  D.43695 ={v} {CLOBBER};
  # DEBUG thisD.62029 => &D.43696
  # DEBUG thisD.62030 => &D.43696
  # DEBUG D#63ptD.0 => &D.43698
  # DEBUG thisD.62028 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.43698
  # DEBUG thisD.73396 => &D.43697
  # DEBUG __sD.73397 => "feedback_offset"
  # DEBUG __aD.73398 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.73408 => &D.43697
  # DEBUG D#296ptD.0 => &D.43697._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.73411 => D#296ptD.0
  # DEBUG __datD.73410 => &D.43697.D.11539._M_local_bufD.11541
  # DEBUG __aD.73409 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_391 = VDEF <.MEM_17>
  MEM[(struct _Alloc_hiderD.11518 *)&D.43697]._M_pD.11525 = &D.43697.D.11539._M_local_bufD.11541;
  # DEBUG __sD.73407 => "feedback_offset"
  # DEBUG thisD.73401 => &D.43697
  # DEBUG __begD.73400 => "feedback_offset"
  # DEBUG __endD.73399 => &MEM[(voidD.45 *)"feedback_offset" + 15B]
  # DEBUG thisD.73405 => &D.43697
  # DEBUG __begD.73404 => "feedback_offset"
  # DEBUG __endD.73403 => &MEM[(voidD.45 *)"feedback_offset" + 15B]
  # DEBUG thisD.73412 => &D.43697
  # DEBUG __begD.73413 => "feedback_offset"
  # DEBUG __endD.73414 => &MEM[(voidD.45 *)"feedback_offset" + 15B]
  # DEBUG __ptrD.55982 => "feedback_offset"
  # DEBUG __firstD.73438 => "feedback_offset"
  # DEBUG __lastD.73437 => &MEM[(voidD.45 *)"feedback_offset" + 15B]
  # DEBUG D#316ptD.0 => &__firstD.73438
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.73440 => "feedback_offset"
  # DEBUG __lastD.73439 => &MEM[(voidD.45 *)"feedback_offset" + 15B]
  # DEBUG __dnewD.73415 => 15
  # DEBUG D#1ptD.0 => &D.43697
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.73418 => &D.43697.D.11539._M_local_bufD.11541
  # DEBUG __k1D.73417 => "feedback_offset"
  # DEBUG __k2D.73416 => &MEM[(voidD.45 *)"feedback_offset" + 15B]
  # DEBUG __dD.73421 => &D.43697.D.11539._M_local_bufD.11541
  # DEBUG __sD.73420 => "feedback_offset"
  # DEBUG __nD.73419 => 15
  # DEBUG __s1D.73424 => &D.43697.D.11539._M_local_bufD.11541
  # DEBUG __s2D.73423 => "feedback_offset"
  # DEBUG __nD.73422 => 15
  # .MEM_397 = VDEF <.MEM_391>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  memcpyD.992 (&D.43697.D.11539._M_local_bufD.11541, "feedback_offset", 15);
  # DEBUG thisD.73428 => &D.43697
  # DEBUG __nD.73427 => 15
  # DEBUG D#9ptD.0 => &D.43697
  # DEBUG __lengthD.73430 => 15
  # DEBUG thisD.73429 => D#9ptD.0
  # .MEM_398 = VDEF <.MEM_397>
  MEM[(size_typeD.11502 *)&D.43697 + 8B] = 15;
  # DEBUG D#1ptD.0 => &D.43697
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.73432 => &MEM[(voidD.45 *)&D.43697 + 31B]
  # DEBUG __c2D.73431 => D#10ptD.0
  # .MEM_399 = VDEF <.MEM_398>
  MEM[(char_typeD.6629 &)&D.43697 + 31] = 0;
  # DEBUG D#1205ptD.0 => {CLOBBER}
  # DEBUG __dnewD.73415 => D#1205ptD.0
  [LP 8] # .MEM_21 = VDEF <.MEM_399>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _22 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_6(D), &D.43697);
;;    succ:       71 (EH,EXECUTABLE)
;;                7 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 7, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 6, next block 8, flags: (NEW, REACHABLE)
;;    pred:       6 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_23 = VDEF <.MEM_21>
  this_3(D)->_offsetD.41201 = _22;
  # DEBUG thisD.62049 => &D.43697
  # DEBUG thisD.62050 => &D.43697
  # DEBUG thisD.62059 => &D.43697
  # VUSE <.MEM_23>
  # PT = nonlocal escaped { D.43697 } (escaped)
  _25 = MEM[(charD.10 * *)&D.43697];
  # DEBUG D#1ptD.0 => &D.43697
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.62060 => &D.43697
  if (&D.43697.D.11539._M_local_bufD.11541 != _25)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                9 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 8, loop depth 0, count 0, freq 143, maybe hot
;;    prev block 7, next block 9, flags: (NEW, REACHABLE)
;;    pred:       7 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43697.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.62052 => &D.43697
  # DEBUG __sizeD.62051 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43697
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43697
  # DEBUG D#185ptD.0 => &D.43697._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.62055 => _25
  # DEBUG __aD.62053 => D#183ptD.0
  # DEBUG __nD.62054 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.62058 => _25
  # DEBUG thisD.62056 => D#179ptD.0
  # DEBUG D.62057 => D#180ptD.0
  # .MEM_84 = VDEF <.MEM_23>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_25);
;;    succ:       9 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 9, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 8, next block 10, flags: (NEW, REACHABLE)
;;    pred:       7 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                8 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_57 = PHI <.MEM_23(7), .MEM_84(8)>
  # DEBUG D#189ptD.0 => &D.43697._M_dataplusD.11519
  # DEBUG thisD.62061 => D#189ptD.0
  # DEBUG thisD.62062 => D#189ptD.0
  # DEBUG thisD.62063 => D#189ptD.0
  # .MEM_24 = VDEF <.MEM_57>
  D.43697 ={v} {CLOBBER};
  # DEBUG thisD.62047 => &D.43698
  # DEBUG thisD.62048 => &D.43698
  # DEBUG D#63ptD.0 => &D.43700
  # DEBUG thisD.62046 => D#63ptD.0
  # DEBUG D#62ptD.0 => D#63ptD.0
  # DEBUG thisD.53524 => D#62ptD.0
  # DEBUG D#299ptD.0 => &D.43700
  # DEBUG thisD.73441 => &D.43699
  # DEBUG __sD.73442 => "num_vcs"
  # DEBUG __aD.73443 => D#299ptD.0
  # DEBUG D#298ptD.0 => D#299ptD.0
  # DEBUG thisD.73453 => &D.43699
  # DEBUG D#296ptD.0 => &D.43699._M_dataplusD.11519
  # DEBUG D#126ptD.0 => D#298ptD.0
  # DEBUG thisD.73456 => D#296ptD.0
  # DEBUG __datD.73455 => &D.43699.D.11539._M_local_bufD.11541
  # DEBUG __aD.73454 => D#126ptD.0
  # DEBUG D#125ptD.0 => D#126ptD.0
  # DEBUG D#123ptD.0 => D#296ptD.0
  # DEBUG D#124ptD.0 => D#125ptD.0
  # DEBUG thisD.54067 => D#123ptD.0
  # DEBUG __aD.54068 => D#124ptD.0
  # DEBUG D#122ptD.0 => D#124ptD.0
  # DEBUG D#121ptD.0 => D#123ptD.0
  # DEBUG thisD.54049 => D#121ptD.0
  # DEBUG D.54050 => D#122ptD.0
  # .MEM_401 = VDEF <.MEM_24>
  MEM[(struct _Alloc_hiderD.11518 *)&D.43699]._M_pD.11525 = &D.43699.D.11539._M_local_bufD.11541;
  # DEBUG __sD.73452 => "num_vcs"
  # DEBUG thisD.73446 => &D.43699
  # DEBUG __begD.73445 => "num_vcs"
  # DEBUG __endD.73444 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG thisD.73450 => &D.43699
  # DEBUG __begD.73449 => "num_vcs"
  # DEBUG __endD.73448 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG thisD.73457 => &D.43699
  # DEBUG __begD.73458 => "num_vcs"
  # DEBUG __endD.73459 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG __ptrD.55982 => "num_vcs"
  # DEBUG __firstD.73483 => "num_vcs"
  # DEBUG __lastD.73482 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG D#316ptD.0 => &__firstD.73483
  # DEBUG D.55911 => D#316ptD.0
  # DEBUG __firstD.73485 => "num_vcs"
  # DEBUG __lastD.73484 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG __dnewD.73460 => 7
  # DEBUG D#1ptD.0 => &D.43699
  # DEBUG thisD.55956 => D#1ptD.0
  # DEBUG __pD.73463 => &D.43699.D.11539._M_local_bufD.11541
  # DEBUG __k1D.73462 => "num_vcs"
  # DEBUG __k2D.73461 => &MEM[(voidD.45 *)"num_vcs" + 7B]
  # DEBUG __dD.73466 => &D.43699.D.11539._M_local_bufD.11541
  # DEBUG __sD.73465 => "num_vcs"
  # DEBUG __nD.73464 => 7
  # DEBUG __s1D.73469 => &D.43699.D.11539._M_local_bufD.11541
  # DEBUG __s2D.73468 => "num_vcs"
  # DEBUG __nD.73467 => 7
  # .MEM_407 = VDEF <.MEM_401>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  memcpyD.992 (&D.43699.D.11539._M_local_bufD.11541, "num_vcs", 7);
  # DEBUG thisD.73473 => &D.43699
  # DEBUG __nD.73472 => 7
  # DEBUG D#9ptD.0 => &D.43699
  # DEBUG __lengthD.73475 => 7
  # DEBUG thisD.73474 => D#9ptD.0
  # .MEM_408 = VDEF <.MEM_407>
  MEM[(size_typeD.11502 *)&D.43699 + 8B] = 7;
  # DEBUG D#1ptD.0 => &D.43699
  # DEBUG thisD.52997 => D#1ptD.0
  # DEBUG __c1D.73477 => &MEM[(voidD.45 *)&D.43699 + 23B]
  # DEBUG __c2D.73476 => D#10ptD.0
  # .MEM_409 = VDEF <.MEM_408>
  MEM[(char_typeD.6629 &)&D.43699 + 23] = 0;
  # DEBUG D#1206ptD.0 => {CLOBBER}
  # DEBUG __dnewD.73460 => D#1206ptD.0
  [LP 10] # .MEM_28 = VDEF <.MEM_409>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _29 = _ZNK13Configuration6GetIntERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEED.39522 (config_6(D), &D.43699);
;;    succ:       75 (EH,EXECUTABLE)
;;                10 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 10, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 9, next block 11, flags: (NEW, REACHABLE)
;;    pred:       9 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_30 = VDEF <.MEM_28>
  this_3(D)->_vcsD.40446 = _29;
  # DEBUG thisD.62066 => &D.43699
  # DEBUG thisD.62067 => &D.43699
  # DEBUG thisD.62076 => &D.43699
  # VUSE <.MEM_30>
  # PT = nonlocal escaped { D.43699 } (escaped)
  _32 = MEM[(charD.10 * *)&D.43699];
  # DEBUG D#1ptD.0 => &D.43699
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.62077 => &D.43699
  if (&D.43699.D.11539._M_local_bufD.11541 != _32)
    goto <bb 11>;
  else
    goto <bb 12>;
;;    succ:       11 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                12 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 11, loop depth 0, count 0, freq 143, maybe hot
;;    prev block 10, next block 12, flags: (NEW, REACHABLE)
;;    pred:       10 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43699.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.62069 => &D.43699
  # DEBUG __sizeD.62068 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43699
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43699
  # DEBUG D#185ptD.0 => &D.43699._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.62072 => _32
  # DEBUG __aD.62070 => D#183ptD.0
  # DEBUG __nD.62071 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.62075 => _32
  # DEBUG thisD.62073 => D#179ptD.0
  # DEBUG D.62074 => D#180ptD.0
  # .MEM_89 = VDEF <.MEM_30>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_32);
  # VUSE <.MEM_89>
  pretmp_519 = this_3(D)->_vcsD.40446;
;;    succ:       12 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 12, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 11, next block 13, flags: (NEW, REACHABLE)
;;    pred:       10 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                11 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_11 = PHI <.MEM_30(10), .MEM_89(11)>
  # prephitmp_520 = PHI <_29(10), pretmp_519(11)>
  # DEBUG D#189ptD.0 => &D.43699._M_dataplusD.11519
  # DEBUG thisD.62078 => D#189ptD.0
  # DEBUG thisD.62079 => D#189ptD.0
  # DEBUG thisD.62080 => D#189ptD.0
  # .MEM_31 = VDEF <.MEM_11>
  D.43699 ={v} {CLOBBER};
  # DEBUG thisD.62064 => &D.43700
  # DEBUG thisD.62065 => &D.43700
  # VUSE <.MEM_31>
  _33 = this_3(D)->D.41247._buf_sizeD.39701;
  # RANGE ~[2147483648, 18446744071562067967]
  _35 = (long unsigned intD.14) prephitmp_520;
  # DEBUG D#1216ptD.0 => &this_3(D)->_occupancy_limitD.40447
  # DEBUG thisD.73486 => D#1216ptD.0
  # DEBUG __new_sizeD.73487 => _35
  # .MEM_411 = VDEF <.MEM_31>
  __xD.73488 = _33;
  # DEBUG __xD.73488 => __xD.73488
  # VUSE <.MEM_411>
  # PT = nonlocal escaped 
  _191 = MEM[(intD.9 * *)this_3(D) + 224B];
  # DEBUG D#64ptD.0 => D#1216ptD.0
  # VUSE <.MEM_411>
  # PT = nonlocal escaped 
  _192 = MEM[(intD.9 * *)this_3(D) + 232B];
  # DEBUG D#64ptD.0 => D#1216ptD.0
  # DEBUG thisD.73495 => D#64ptD.0
  # DEBUG thisD.73496 => D#64ptD.0
  _193 = (long intD.12) _192;
  _194 = (long intD.12) _191;
  _195 = _193 - _194;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _196 = _195 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _197 = (size_typeD.39814) _196;
  if (_35 > _197)
    goto <bb 13>;
  else
    goto <bb 16>;
;;    succ:       13 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                16 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 13, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 12, next block 14, flags: (NEW, REACHABLE)
;;    pred:       12 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1216ptD.0
  # DEBUG D#64ptD.0 => D#1216ptD.0
  # DEBUG thisD.59139 => D#64ptD.0
  # DEBUG thisD.59138 => D#64ptD.0
  # RANGE [1, 18446744073709551615]
  _198 = _35 - _197;
  # DEBUG thisD.59132 => D#1216ptD.0
  # DEBUG D#76ptD.0 => &D#1216ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59134 => NULL
  # DEBUG __iD.59133 => D#76ptD.0
  # DEBUG thisD.73494 => D#1216ptD.0
  # .MEM_413 = VDEF <.MEM_411>
  MEM[(struct __normal_iteratorD.39807 *)&__positionD.73493] = _192;
  # DEBUG __nD.73492 => _198
  # DEBUG __xD.73491 => &__xD.73488
  # PT = nonlocal 
  _36 = &this_3(D)->_occupancy_limitD.40447;
  [LP 14] # .MEM_414 = VDEF <.MEM_413>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.40161 (_36, __positionD.73493, _198, &__xD.73488);
  goto <bb 15>;
;;    succ:       15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                14 (EH,EXECUTABLE)

;;   basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 13, next block 15, flags: (NEW)
;;    pred:       13 (EH,EXECUTABLE)
<L13>: [LP 14]
  goto <bb 85> (<L8>);
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 15, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 14, next block 16, flags: (NEW)
;;    pred:       13 [100.0%]  (FALLTHRU,EXECUTABLE)
  # VUSE <.MEM_414>
  pretmp_90 = this_3(D)->_vcsD.40446;
  pretmp_92 = (long unsigned intD.14) pretmp_90;
  goto <bb 18>;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 16, loop depth 0, count 0, freq 162, maybe hot
;;    prev block 15, next block 17, flags: (NEW, REACHABLE)
;;    pred:       12 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1216ptD.0
  # DEBUG D#64ptD.0 => D#1216ptD.0
  # DEBUG thisD.59144 => D#64ptD.0
  # DEBUG thisD.59143 => D#64ptD.0
  if (_35 < _197)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                18 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 17, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 16, next block 18, flags: (NEW, REACHABLE)
;;    pred:       16 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _199 = _35 * 4;
  # PT = nonlocal escaped 
  _200 = _191 + _199;
  # DEBUG D#139ptD.0 => D#1216ptD.0
  # DEBUG __posD.73490 => _200
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG thisD.73489 => D#138ptD.0
  # DEBUG D#136ptD.0 => &D#138ptD.0->D.40238
  # DEBUG thisD.54143 => D#136ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG __firstD.54133 => _200
  # DEBUG __lastD.54134 => D#137ptD.0
  # DEBUG D.54135 => NULL
  # DEBUG D#134ptD.0 => _200
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # .MEM_412 = VDEF <.MEM_411>
  MEM[(intD.9 * *)this_3(D) + 232B] = _200;
;;    succ:       18 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 18, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 17, next block 19, flags: (NEW, REACHABLE)
;;    pred:       16 [39.0%]  (FALSE_VALUE,EXECUTABLE)
;;                15 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                17 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_13 = PHI <.MEM_411(16), .MEM_414(15), .MEM_412(17)>
  # RANGE ~[2147483648, 18446744071562067967]
  # prephitmp_93 = PHI <_35(16), pretmp_92(15), _35(17)>
  # DEBUG D#1213ptD.0 => this_3(D)->_vcsD.40446
  # DEBUG D#1215ptD.0 => &this_3(D)->_round_trip_timeD.40448
  # DEBUG thisD.73497 => D#1215ptD.0
  # DEBUG __new_sizeD.73498 => (long unsigned intD.14) D#1213ptD.0
  # .MEM_415 = VDEF <.MEM_13>
  __xD.73499 = -1;
  # DEBUG __xD.73499 => __xD.73499
  # VUSE <.MEM_415>
  # PT = nonlocal escaped 
  _37 = MEM[(intD.9 * *)this_3(D) + 248B];
  # DEBUG D#64ptD.0 => D#1215ptD.0
  # VUSE <.MEM_415>
  # PT = nonlocal escaped 
  _201 = MEM[(intD.9 * *)this_3(D) + 256B];
  # DEBUG D#64ptD.0 => D#1215ptD.0
  # DEBUG thisD.73506 => D#64ptD.0
  # DEBUG thisD.73507 => D#64ptD.0
  _202 = (long intD.12) _201;
  _203 = (long intD.12) _37;
  _204 = _202 - _203;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _205 = _204 /[ex] 4;
  # RANGE ~[2305843009213693952, 16140901064495857663]
  _206 = (size_typeD.39814) _205;
  if (prephitmp_93 > _206)
    goto <bb 19>;
  else
    goto <bb 22>;
;;    succ:       19 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                22 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 19, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 18, next block 20, flags: (NEW, REACHABLE)
;;    pred:       18 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1215ptD.0
  # DEBUG D#64ptD.0 => D#1215ptD.0
  # DEBUG thisD.59139 => D#64ptD.0
  # DEBUG thisD.59138 => D#64ptD.0
  # RANGE [1, 18446744073709551615]
  _207 = prephitmp_93 - _206;
  # DEBUG thisD.59132 => D#1215ptD.0
  # DEBUG D#76ptD.0 => &D#1215ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG thisD.59134 => NULL
  # DEBUG __iD.59133 => D#76ptD.0
  # DEBUG thisD.73505 => D#1215ptD.0
  # .MEM_417 = VDEF <.MEM_415>
  MEM[(struct __normal_iteratorD.39807 *)&__positionD.73504] = _201;
  # DEBUG __nD.73503 => _207
  # DEBUG __xD.73502 => &__xD.73499
  # PT = nonlocal 
  _40 = &this_3(D)->_round_trip_timeD.40448;
  [LP 15] # .MEM_418 = VDEF <.MEM_417>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZNSt6vectorIiSaIiEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPiS1_EEmRKiD.40161 (_40, __positionD.73504, _207, &__xD.73499);
  goto <bb 21>;
;;    succ:       21 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 (EH,EXECUTABLE)

;;   basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 19, next block 21, flags: (NEW)
;;    pred:       19 (EH,EXECUTABLE)
<L14>: [LP 15]
  goto <bb 85> (<L8>);
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 21, loop depth 0, count 0, freq 105, maybe hot
;;    prev block 20, next block 22, flags: (NEW)
;;    pred:       19 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                22 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_541 = PHI <.MEM_418(19), .MEM_415(22)>
  goto <bb 24>;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 22, loop depth 0, count 0, freq 162, maybe hot
;;    prev block 21, next block 23, flags: (NEW, REACHABLE)
;;    pred:       18 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#64ptD.0 => D#1215ptD.0
  # DEBUG D#64ptD.0 => D#1215ptD.0
  # DEBUG thisD.59144 => D#64ptD.0
  # DEBUG thisD.59143 => D#64ptD.0
  if (prephitmp_93 < _206)
    goto <bb 23>;
  else
    goto <bb 21>;
;;    succ:       23 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                21 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 23, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 22, next block 24, flags: (NEW, REACHABLE)
;;    pred:       22 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551612
  _208 = prephitmp_93 * 4;
  # PT = nonlocal escaped 
  _209 = _37 + _208;
  # DEBUG D#139ptD.0 => D#1215ptD.0
  # DEBUG __posD.73501 => _209
  # DEBUG D#138ptD.0 => D#139ptD.0
  # DEBUG thisD.73500 => D#138ptD.0
  # DEBUG D#136ptD.0 => &D#138ptD.0->D.40238
  # DEBUG thisD.54143 => D#136ptD.0
  # DEBUG D#137ptD.0 => D#138ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG __firstD.54133 => _209
  # DEBUG __lastD.54134 => D#137ptD.0
  # DEBUG D.54135 => NULL
  # DEBUG D#134ptD.0 => _209
  # DEBUG D#135ptD.0 => D#137ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # .MEM_416 = VDEF <.MEM_415>
  MEM[(intD.9 * *)this_3(D) + 256B] = _209;
;;    succ:       24 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 24, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 23, next block 25, flags: (NEW, REACHABLE)
;;    pred:       23 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                21 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_147 = PHI <.MEM_416(23), .MEM_541(21)>
  # DEBUG thisD.62081 => &D.43702
  # DEBUG thisD.62082 => &D.43702.D.43590
  # DEBUG D#482ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041
  # DEBUG thisD.62083 => D#482ptD.0
  # DEBUG thisD.54766 => D#482ptD.0
  # DEBUG thisD.54755 => D#482ptD.0
  # .MEM_94 = VDEF <.MEM_147>
  MEM[(struct _Deque_implD.43009 *)&D.43702]._M_mapD.43043 = 0B;
  # .MEM_95 = VDEF <.MEM_94>
  MEM[(struct _Deque_implD.43009 *)&D.43702]._M_map_sizeD.43044 = 0;
  # DEBUG D#231ptD.0 => &D#482ptD.0->_M_startD.43045
  # DEBUG thisD.62084 => D#231ptD.0
  # .MEM_96 = VDEF <.MEM_95>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43702 + 16B]._M_curD.42940 = 0B;
  # .MEM_97 = VDEF <.MEM_96>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43702 + 16B]._M_firstD.42941 = 0B;
  # .MEM_98 = VDEF <.MEM_97>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43702 + 16B]._M_lastD.42942 = 0B;
  # .MEM_99 = VDEF <.MEM_98>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43702 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#230ptD.0 => &D#482ptD.0->_M_finishD.43046
  # DEBUG thisD.62085 => D#230ptD.0
  # .MEM_100 = VDEF <.MEM_99>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43702 + 48B]._M_curD.42940 = 0B;
  # .MEM_101 = VDEF <.MEM_100>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43702 + 48B]._M_firstD.42941 = 0B;
  # .MEM_102 = VDEF <.MEM_101>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43702 + 48B]._M_lastD.42942 = 0B;
  # .MEM_103 = VDEF <.MEM_102>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43702 + 48B]._M_nodeD.42943 = 0B;
  [LP 16] # .MEM_104 = VDEF <.MEM_103>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (&D.43702.D.43590, 0);
  goto <bb 26>;
;;    succ:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 (EH,EXECUTABLE)

;;   basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 24, next block 26, flags: (NEW)
;;    pred:       24 (EH,EXECUTABLE)
<L15>: [LP 16]
  goto <bb 85> (<L8>);
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 26, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 25, next block 27, flags: (NEW, REACHABLE)
;;    pred:       24 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG thisD.62086 => &D.43701
  # DEBUG __cD.62087 => &D.43702
  # DEBUG thisD.73508 => &D.43701.cD.43633
  # DEBUG __xD.73509 => &D.43702
  # DEBUG thisD.73510 => &D.43702
  # DEBUG D#174ptD.0 => &D.43702.D.43590._M_implD.43041._M_startD.43045
  # DEBUG D#175ptD.0 => &D.43702.D.43590._M_implD.43041._M_finishD.43046
  # DEBUG __xD.73512 => D#175ptD.0
  # DEBUG __yD.73511 => D#174ptD.0
  # DEBUG __sizeD.54289 => 4
  # VUSE <.MEM_104>
  # PT = nonlocal escaped null 
  _41 = MEM[(const struct _Deque_iteratorD.42908 &)&D.43702 + 48]._M_nodeD.42943;
  _210 = (long intD.12) _41;
  # VUSE <.MEM_104>
  # PT = nonlocal escaped null 
  _211 = MEM[(const struct _Deque_iteratorD.42908 &)&D.43702 + 16]._M_nodeD.42943;
  _212 = (long intD.12) _211;
  _213 = _210 - _212;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _214 = _213 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _215 = _214 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _216 = _215 * 128;
  # VUSE <.MEM_104>
  # PT = nonlocal escaped null 
  _217 = MEM[(const struct _Deque_iteratorD.42908 &)&D.43702 + 48]._M_curD.42940;
  _218 = (long intD.12) _217;
  # VUSE <.MEM_104>
  # PT = nonlocal escaped null 
  _219 = MEM[(const struct _Deque_iteratorD.42908 &)&D.43702 + 48]._M_firstD.42941;
  _220 = (long intD.12) _219;
  _221 = _218 - _220;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _222 = _221 /[ex] 4;
  _223 = _216 + _222;
  # VUSE <.MEM_104>
  # PT = nonlocal escaped null 
  _224 = MEM[(const struct _Deque_iteratorD.42908 &)&D.43702 + 16]._M_lastD.42942;
  _225 = (long intD.12) _224;
  # VUSE <.MEM_104>
  # PT = nonlocal escaped null 
  _226 = MEM[(const struct _Deque_iteratorD.42908 &)&D.43702 + 16]._M_curD.42940;
  _227 = (long intD.12) _226;
  _228 = _225 - _227;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _229 = _228 /[ex] 4;
  _230 = _223 + _229;
  # RANGE [0, 18446744073709551615]
  _231 = (size_typeD.43117) _230;
  # DEBUG D#604ptD.0 => &D.43702.D.43590
  # DEBUG thisD.60602 => D#604ptD.0
  # DEBUG __aD.60600 => NULL
  # DEBUG thisD.73515 => &MEM[(struct dequeD.40449 *)&D.43701].D.43590
  # DEBUG __aD.73514 => NULL
  # DEBUG __num_elementsD.73513 => _231
  # DEBUG D#484ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041
  # DEBUG thisD.73517 => D#484ptD.0
  # DEBUG __aD.73516 => NULL
  # DEBUG thisD.55193 => D#484ptD.0
  # DEBUG __aD.55194 => NULL
  # DEBUG thisD.55188 => D#484ptD.0
  # DEBUG D.55189 => NULL
  # .MEM_419 = VDEF <.MEM_104>
  MEM[(struct _Deque_implD.43009 *)&D.43701]._M_mapD.43043 = 0B;
  # .MEM_420 = VDEF <.MEM_419>
  MEM[(struct _Deque_implD.43009 *)&D.43701]._M_map_sizeD.43044 = 0;
  # DEBUG D#241ptD.0 => &D#484ptD.0->_M_startD.43045
  # DEBUG thisD.73518 => D#241ptD.0
  # .MEM_421 = VDEF <.MEM_420>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43701 + 16B]._M_curD.42940 = 0B;
  # .MEM_422 = VDEF <.MEM_421>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43701 + 16B]._M_firstD.42941 = 0B;
  # .MEM_423 = VDEF <.MEM_422>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43701 + 16B]._M_lastD.42942 = 0B;
  # .MEM_424 = VDEF <.MEM_423>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43701 + 16B]._M_nodeD.42943 = 0B;
  # DEBUG D#240ptD.0 => &D#484ptD.0->_M_finishD.43046
  # DEBUG thisD.73519 => D#240ptD.0
  # .MEM_425 = VDEF <.MEM_424>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43701 + 48B]._M_curD.42940 = 0B;
  # .MEM_426 = VDEF <.MEM_425>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43701 + 48B]._M_firstD.42941 = 0B;
  # .MEM_427 = VDEF <.MEM_426>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43701 + 48B]._M_lastD.42942 = 0B;
  # .MEM_428 = VDEF <.MEM_427>
  MEM[(struct _Deque_iteratorD.42908 *)&D.43701 + 48B]._M_nodeD.42943 = 0B;
  [LP 17] # .MEM_429 = VDEF <.MEM_428>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEmD.43028 (&MEM[(struct dequeD.40449 *)&D.43701].D.43590, _231);
;;    succ:       27 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                81 (EH,EXECUTABLE)

;;   basic block 27, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 26, next block 28, flags: (NEW, REACHABLE)
;;    pred:       26 [100.0%]  (FALLTHRU,EXECUTABLE)
  # DEBUG D#605ptD.0 => &MEM[(struct dequeD.40449 *)&D.43701].D.43590
  # DEBUG thisD.60590 => D#605ptD.0
  # DEBUG D#606ptD.0 => &MEM[(struct dequeD.40449 *)&D.43701].D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.73521 => &D.73530
  # DEBUG __xD.73520 => D#606ptD.0
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  _233 = MEM[(const struct iteratorD.42928 &)&D.43701 + 16]._M_curD.42940;
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  _235 = MEM[(const struct iteratorD.42928 &)&D.43701 + 16]._M_lastD.42942;
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  _236 = MEM[(const struct iteratorD.42928 &)&D.43701 + 16]._M_nodeD.42943;
  # DEBUG thisD.73522 => &D.43702
  # DEBUG D#83ptD.0 => &D.43702.D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.73524 => &D.73529
  # DEBUG __xD.73523 => D#83ptD.0
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  _237 = MEM[(const struct iteratorD.44725 &)&D.43702 + 48]._M_curD.42940;
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  _238 = MEM[(const struct iteratorD.44725 &)&D.43702 + 48]._M_firstD.42941;
  # DEBUG D#1202ptD.0 => MEM[(const struct iteratorD.44725 &)&D.43702 + 48]._M_lastD.42942
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  _240 = MEM[(const struct iteratorD.44725 &)&D.43702 + 48]._M_nodeD.42943;
  # DEBUG thisD.73525 => &D.43702
  # DEBUG D#84ptD.0 => &D.43702.D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.73527 => &D.73528
  # DEBUG __xD.73526 => D#84ptD.0
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  __first_241 = MEM[(const struct iteratorD.44725 &)&D.43702 + 16]._M_curD.42940;
  # DEBUG D#1207ptD.0 => MEM[(const struct iteratorD.44725 &)&D.43702 + 16]._M_firstD.42941
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  __first$_M_last_243 = MEM[(const struct iteratorD.44725 &)&D.43702 + 16]._M_lastD.42942;
  # VUSE <.MEM_429>
  # PT = nonlocal escaped null 
  __first$_M_node_244 = MEM[(const struct iteratorD.44725 &)&D.43702 + 16]._M_nodeD.42943;
  # DEBUG __resultD.73533 => &D.73530
  # DEBUG D.73534 => D#603ptD.0
  # DEBUG thisD.73536 => &D.73538
  # DEBUG __xD.73535 => &D.73530
  # DEBUG __resultD.73541 => &D.73538
  # DEBUG __assignableD.73544 => 1
  # DEBUG thisD.73546 => NULL
  # DEBUG __xD.73545 => &D.73538
  # DEBUG __resultD.73547 => NULL
  # DEBUG thisD.73551 => &D.73552
  # DEBUG __xD.73550 => NULL
  # DEBUG __resultD.73555 => &D.73552
  # DEBUG thisD.73557 => &D.73572
  # DEBUG __xD.73556 => &D.73552
  # DEBUG __itD.73565 => _237
  # DEBUG __it$8D.73564 => _238
  # DEBUG __it$16D.73563 => D#1202ptD.0
  # DEBUG __it$24D.73562 => _240
  # DEBUG __it$_M_curD.60535 => _237
  # DEBUG __it$_M_firstD.60534 => _238
  # DEBUG __it$_M_lastD.60533 => D#1202ptD.0
  # DEBUG __it$_M_nodeD.60532 => _240
  # DEBUG __itD.73569 => __first_241
  # DEBUG __it$8D.73568 => D#1207ptD.0
  # DEBUG __it$16D.73567 => __first$_M_last_243
  # DEBUG __it$24D.73566 => __first$_M_node_244
  # DEBUG __it$_M_curD.60529 => __first_241
  # DEBUG __it$_M_firstD.60528 => D#1207ptD.0
  # DEBUG __it$_M_lastD.60527 => __first$_M_last_243
  # DEBUG __it$_M_nodeD.60526 => __first$_M_node_244
  # DEBUG __resultD.73575 => &D.73572
  # DEBUG thisD.73577 => NULL
  # DEBUG __xD.73576 => &D.73572
  # DEBUG __itD.60490 => NULL
  # DEBUG thisD.60492 => NULL
  # DEBUG __xD.60491 => NULL
  # DEBUG __itD.60493 => NULL
  # DEBUG thisD.60495 => NULL
  # DEBUG __xD.60494 => NULL
  # DEBUG __itD.73591 => _237
  # DEBUG __it$8D.73590 => _238
  # DEBUG __it$16D.73589 => D#1202ptD.0
  # DEBUG __it$24D.73587 => _240
  # DEBUG __it$_M_curD.60489 => _237
  # DEBUG __it$_M_firstD.60488 => _238
  # DEBUG __it$_M_lastD.60487 => D#1202ptD.0
  # DEBUG __it$_M_nodeD.60486 => _240
  # DEBUG __itD.73596 => __first_241
  # DEBUG __it$8D.73595 => D#1207ptD.0
  # DEBUG __it$16D.73594 => __first$_M_last_243
  # DEBUG __it$24D.73592 => __first$_M_node_244
  # DEBUG __it$_M_curD.60483 => __first_241
  # DEBUG __it$_M_firstD.60482 => D#1207ptD.0
  # DEBUG __it$_M_lastD.60481 => __first$_M_last_243
  # DEBUG __it$_M_nodeD.60480 => __first$_M_node_244
  # DEBUG __firstD.73774 => __first_241
  # DEBUG __first$8D.73775 => D#1207ptD.0
  # DEBUG __first$16D.73776 => __first$_M_last_243
  # DEBUG __first$24D.73777 => __first$_M_node_244
  # DEBUG __resultD.73578 => NULL
  # DEBUG __simpleD.73584 => 0
  # DEBUG thisD.73586 => &D.73597
  # DEBUG __xD.73585 => NULL
  # DEBUG __firstD.73781 => __first_241
  # DEBUG __first$_M_firstD.73782 => D#1207ptD.0
  # DEBUG __first$_M_lastD.73783 => __first$_M_last_243
  # DEBUG __first$_M_nodeD.73784 => __first$_M_node_244
  # DEBUG __resultD.73600 => &D.73597
  # DEBUG __xD.73608 => &__lastD.73599
  # DEBUG __yD.73607 => &__firstD.73598
  # DEBUG __sizeD.60431 => 4
  _277 = (long intD.12) _240;
  _279 = (long intD.12) __first$_M_node_244;
  _280 = _277 - _279;
  # RANGE [-1152921504606846976, 1152921504606846975]
  _281 = _280 /[ex] 8;
  # RANGE [-1152921504606846977, 1152921504606846974]
  _282 = _281 + -1;
  # RANGE [-9223372036854775808, 9223372036854775807] NONZERO 18446744073709551488
  _283 = _282 * 128;
  _285 = (long intD.12) _237;
  _287 = (long intD.12) _238;
  _288 = _285 - _287;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _289 = _288 /[ex] 4;
  _290 = _283 + _289;
  _292 = (long intD.12) __first$_M_last_243;
  _294 = (long intD.12) __first_241;
  _295 = _292 - _294;
  # RANGE [-2305843009213693952, 2305843009213693951]
  _296 = _295 /[ex] 4;
  __n_297 = _290 + _296;
  # DEBUG __nD.73604 => __n_297
  # DEBUG __nD.73604 => __n_297
  if (__n_297 <= 0)
    goto <bb 28>;
  else
    goto <bb 29>;
;;    succ:       28 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                29 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 28, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 27, next block 29, flags: (NEW, REACHABLE)
;;    pred:       27 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                35 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_540 = PHI <.MEM_429(27), .MEM_534(35)>
  # DEBUG thisD.73603 => &D.73537
  # DEBUG __xD.73602 => &D.73597
  # .MEM_501 = VDEF <.MEM_540>
  D.73597 ={v} {CLOBBER};
  # .MEM_502 = VDEF <.MEM_501>
  D.73572 ={v} {CLOBBER};
  # .MEM_503 = VDEF <.MEM_502>
  D.73552 ={v} {CLOBBER};
  # .MEM_504 = VDEF <.MEM_503>
  D.73538 ={v} {CLOBBER};
  # .MEM_505 = VDEF <.MEM_504>
  D.73530 ={v} {CLOBBER};
  # VUSE <.MEM_505>
  _42 = this_3(D)->_vcsD.40446;
  # RANGE ~[2147483648, 18446744071562067967]
  _43 = (long unsigned intD.14) _42;
  # DEBUG D#1214ptD.0 => &this_3(D)->_flit_sent_timeD.41197
  # DEBUG thisD.73617 => D#1214ptD.0
  # DEBUG __new_sizeD.73618 => _43
  # DEBUG __xD.73619 => &D.43701
  # VUSE <.MEM_505>
  # PT = nonlocal escaped 
  _320 = MEM[(struct queueD.40450 * *)this_3(D) + 272B];
  # DEBUG D#72ptD.0 => D#1214ptD.0
  # VUSE <.MEM_505>
  # PT = nonlocal escaped 
  _321 = MEM[(struct queueD.40450 * *)this_3(D) + 280B];
  # DEBUG D#72ptD.0 => D#1214ptD.0
  # DEBUG thisD.73637 => D#72ptD.0
  # DEBUG thisD.73638 => D#72ptD.0
  _322 = (long intD.12) _321;
  _323 = (long intD.12) _320;
  _324 = _322 - _323;
  # RANGE [-115292150460684697, 115292150460684697]
  _325 = _324 /[ex] 80;
  # RANGE ~[115292150460684698, 18331451923248866918]
  _326 = (size_typeD.40771) _325;
  if (_43 > _326)
    goto <bb 37>;
  else
    goto <bb 39>;
;;    succ:       37 [20.7%]  (TRUE_VALUE,EXECUTABLE)
;;                39 [79.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 29, loop depth 0, count 0, freq 187, maybe hot
;;    prev block 28, next block 30, flags: (NEW)
;;    pred:       27 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 30, loop depth 1, count 0, freq 2071, maybe hot
;;    prev block 29, next block 31, flags: (NEW)
;;    pred:       29 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                36 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_435 = PHI <.MEM_429(29), .MEM_486(36)>
  # __n_436 = PHI <__n_297(29), __n_307(36)>
  # PT = nonlocal escaped null 
  # SR.2456_496 = PHI <_233(29), SR.2456_495(36)>
  # PT = nonlocal escaped null 
  # SR.2457_493 = PHI <_235(29), SR.2457_492(36)>
  # PT = nonlocal escaped null 
  # SR.2458_491 = PHI <_236(29), SR.2458_490(36)>
  # PT = nonlocal escaped null 
  # __first_488 = PHI <__first_241(29), __first_487(36)>
  # PT = nonlocal escaped null 
  # __first$_M_last_484 = PHI <__first$_M_last_243(29), __first$_M_last_483(36)>
  # PT = nonlocal escaped null 
  # __first$_M_node_482 = PHI <__first$_M_node_244(29), __first$_M_node_480(36)>
  # DEBUG __first$_M_nodeD.73784 => __first$_M_node_482
  # DEBUG __first$_M_lastD.73783 => __first$_M_last_484
  # DEBUG __firstD.73781 => __first_488
  # DEBUG __nD.73604 => __n_436
  # DEBUG D#100ptD.0 => &D.73597
  # DEBUG thisD.60458 => D#100ptD.0
  # DEBUG D#91ptD.0 => &__firstD.73598
  # DEBUG thisD.60455 => D#91ptD.0
  # VUSE <.MEM_435>
  _301 = MEM[(const intD.9 &)__first_488];
  # .MEM_486 = VDEF <.MEM_435>
  *SR.2456_496 = _301;
  # DEBUG thisD.73605 => &__firstD.73598
  # PT = nonlocal escaped null 
  __first_302 = __first_488 + 4;
  # DEBUG __firstD.73781 => __first_302
  if (__first_302 == __first$_M_last_484)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       31 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                32 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 31, loop depth 1, count 0, freq 139, maybe hot
;;    prev block 30, next block 32, flags: (NEW, REACHABLE)
;;    pred:       30 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.73609 => &__firstD.73598
  # PT = nonlocal escaped null 
  __first$_M_node_313 = __first$_M_node_482 + 8;
  # DEBUG thisD.73611 => &__firstD.73598
  # DEBUG __new_nodeD.73610 => __first$_M_node_313
  # DEBUG __first$_M_nodeD.73784 => __first$_M_node_313
  # VUSE <.MEM_486>
  # PT = nonlocal escaped 
  __first_314 = MEM[(intD.9 * *)__first$_M_node_482 + 8B];
  # DEBUG __sizeD.60431 => 4
  # PT = nonlocal escaped 
  __first$_M_last_315 = __first_314 + 512;
  # DEBUG __first$_M_lastD.73783 => __first$_M_last_315
  # DEBUG __firstD.73781 => __first_314
;;    succ:       32 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 32, loop depth 1, count 0, freq 2071, maybe hot
;;    prev block 31, next block 33, flags: (NEW, REACHABLE)
;;    pred:       30 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                31 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __first_487 = PHI <__first_302(30), __first_314(31)>
  # PT = nonlocal escaped null 
  # __first$_M_last_483 = PHI <__first$_M_last_484(30), __first$_M_last_315(31)>
  # PT = nonlocal escaped null 
  # __first$_M_node_480 = PHI <__first$_M_node_482(30), __first$_M_node_313(31)>
  # DEBUG __first$_M_nodeD.73784 => __first$_M_node_480
  # DEBUG __first$_M_lastD.73783 => __first$_M_last_483
  # DEBUG __firstD.73781 => __first_487
  # DEBUG thisD.73606 => &D.73597
  # PT = nonlocal escaped null 
  _305 = SR.2456_496 + 4;
  if (_305 == SR.2457_493)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       33 [6.7%]  (TRUE_VALUE,EXECUTABLE)
;;                34 [93.3%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 33, loop depth 1, count 0, freq 139, maybe hot
;;    prev block 32, next block 34, flags: (NEW, REACHABLE)
;;    pred:       32 [6.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG thisD.73613 => &D.73597
  # PT = nonlocal escaped null 
  _317 = SR.2458_491 + 8;
  # DEBUG thisD.73615 => &D.73597
  # DEBUG __new_nodeD.73614 => _317
  # VUSE <.MEM_486>
  # PT = nonlocal escaped 
  _318 = MEM[(intD.9 * *)SR.2458_491 + 8B];
  # DEBUG __sizeD.54289 => 4
  # PT = nonlocal escaped 
  _319 = _318 + 512;
;;    succ:       34 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 34, loop depth 1, count 0, freq 2071, maybe hot
;;    prev block 33, next block 35, flags: (NEW, REACHABLE)
;;    pred:       32 [93.3%]  (FALSE_VALUE,EXECUTABLE)
;;                33 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # SR.2456_495 = PHI <_305(32), _318(33)>
  # PT = nonlocal escaped null 
  # SR.2457_492 = PHI <SR.2457_493(32), _319(33)>
  # PT = nonlocal escaped null 
  # SR.2458_490 = PHI <SR.2458_491(32), _317(33)>
  # RANGE [0, 9223372036854775806] NONZERO 9223372036854775807
  __n_307 = __n_436 + -1;
  # DEBUG __nD.73604 => __n_307
  # DEBUG __nD.73604 => __n_307
  if (__n_307 <= 0)
    goto <bb 35>;
  else
    goto <bb 36>;
;;    succ:       35 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                36 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 35, loop depth 0, count 0, freq 186, maybe hot
;;    prev block 34, next block 36, flags: (NEW)
;;    pred:       34 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_534 = PHI <.MEM_486(34)>
  goto <bb 28>;
;;    succ:       28 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 36, loop depth 1, count 0, freq 1885, maybe hot
;;    prev block 35, next block 37, flags: (NEW)
;;    pred:       34 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 30>;
;;    succ:       30 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 37, loop depth 0, count 0, freq 42, maybe hot
;;    prev block 36, next block 38, flags: (NEW, REACHABLE)
;;    pred:       28 [20.7%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => D#1214ptD.0
  # DEBUG D#72ptD.0 => D#1214ptD.0
  # DEBUG thisD.61993 => D#72ptD.0
  # DEBUG thisD.61992 => D#72ptD.0
  # RANGE [1, 18446744073709551615]
  _327 = _43 - _326;
  # DEBUG thisD.61986 => D#1214ptD.0
  # DEBUG D#85ptD.0 => &D#1214ptD.0->D.41195._M_implD.40686._M_finishD.40689
  # DEBUG thisD.61988 => NULL
  # DEBUG __iD.61987 => D#85ptD.0
  # DEBUG thisD.73636 => D#1214ptD.0
  # .MEM_506 = VDEF <.MEM_505>
  MEM[(struct __normal_iteratorD.40764 *)&__positionD.73635] = _321;
  # DEBUG __nD.73634 => _327
  # DEBUG __xD.73633 => &D.43701
  # PT = nonlocal 
  _44 = &this_3(D)->_flit_sent_timeD.41197;
  [LP 12] # .MEM_507 = VDEF <.MEM_506>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZNSt6vectorISt5queueIiSt5dequeIiSaIiEEESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_D.41118 (_44, __positionD.73635, _327, &D.43701);
;;    succ:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                79 (EH,EXECUTABLE)

;;   basic block 38, loop depth 0, count 0, freq 105, maybe hot
;;    prev block 37, next block 39, flags: (NEW)
;;    pred:       37 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                39 [39.0%]  (FALSE_VALUE,EXECUTABLE)
  # .MEM_539 = PHI <.MEM_507(37), .MEM_505(39)>
  goto <bb 52>;
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 39, loop depth 0, count 0, freq 162, maybe hot
;;    prev block 38, next block 40, flags: (NEW, REACHABLE)
;;    pred:       28 [79.3%]  (FALSE_VALUE,EXECUTABLE)
  # DEBUG D#72ptD.0 => D#1214ptD.0
  # DEBUG D#72ptD.0 => D#1214ptD.0
  # DEBUG thisD.61998 => D#72ptD.0
  # DEBUG thisD.61997 => D#72ptD.0
  if (_43 < _326)
    goto <bb 40>;
  else
    goto <bb 38>;
;;    succ:       40 [61.0%]  (TRUE_VALUE,EXECUTABLE)
;;                38 [39.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 40, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 39, next block 41, flags: (NEW, REACHABLE)
;;    pred:       39 [61.0%]  (TRUE_VALUE,EXECUTABLE)
  # RANGE [0, 18446744073709551615] NONZERO 18446744073709551600
  _328 = _43 * 80;
  # PT = nonlocal escaped 
  __pos_329 = _320 + _328;
  # DEBUG D#462ptD.0 => D#1214ptD.0
  # DEBUG __posD.73621 => __pos_329
  # DEBUG D#461ptD.0 => D#462ptD.0
  # DEBUG thisD.73620 => D#461ptD.0
  # DEBUG D#460ptD.0 => &D#461ptD.0->D.41195
  # DEBUG thisD.57724 => D#460ptD.0
  # DEBUG __firstD.73624 => __pos_329
  # DEBUG __lastD.73623 => _321
  # DEBUG __firstD.73629 => __pos_329
  if (_321 == __pos_329)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                42 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 41, loop depth 0, count 0, freq 99, maybe hot
;;    prev block 40, next block 42, flags: (NEW, REACHABLE)
;;    pred:       40 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_538 = PHI <.MEM_505(40), .MEM_515(50)>
  # .MEM_516 = VDEF <.MEM_538>
  MEM[(struct queueD.40450 * *)this_3(D) + 280B] = __pos_329;
  goto <bb 52>;
;;    succ:       52 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 42, loop depth 0, count 0, freq 90, maybe hot
;;    prev block 41, next block 43, flags: (NEW)
;;    pred:       40 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 43, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 42, next block 44, flags: (NEW)
;;    pred:       42 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                51 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __pos_437 = PHI <__pos_329(42), __pos_332(51)>
  # .MEM_443 = PHI <.MEM_505(42), .MEM_515(51)>
  # DEBUG __firstD.73629 => __pos_437
  # DEBUG __rD.57673 => __pos_437
  # DEBUG __pointerD.73630 => NULL
  # DEBUG thisD.73631 => NULL
  # DEBUG thisD.73632 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#1201ptD.0 => &MEM[(struct dequeD.40449 *)__pos_437].D.43590
  # DEBUG thisD.73639 => D#1201ptD.0
  # VUSE <.MEM_443>
  # PT = nonlocal escaped 
  _45 = MEM[(struct _Deque_baseD.42881 *)__pos_437]._M_implD.43041._M_mapD.43043;
  if (_45 != 0B)
    goto <bb 44>;
  else
    goto <bb 50>;
;;    succ:       44 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                50 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 44, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 43, next block 45, flags: (NEW, REACHABLE)
;;    pred:       43 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_443>
  # PT = nonlocal escaped 
  _333 = MEM[(struct _Deque_baseD.42881 *)__pos_437]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _334 = _333 + 8;
  # VUSE <.MEM_443>
  # PT = nonlocal escaped 
  __nstart_335 = MEM[(struct _Deque_baseD.42881 *)__pos_437]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.73645 => D#1201ptD.0
  # DEBUG __nstartD.73644 => __nstart_335
  # DEBUG __nfinishD.73643 => _334
  # DEBUG __nD.73646 => __nstart_335
  # DEBUG __nD.73646 => __nstart_335
  if (_334 <= __nstart_335)
    goto <bb 49>;
  else
    goto <bb 45>;
;;    succ:       49 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                45 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 45, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 44, next block 46, flags: (NEW)
;;    pred:       44 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 46, loop depth 2, count 0, freq 9100, maybe hot
;;    prev block 45, next block 47, flags: (NEW)
;;    pred:       45 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                47 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_438 = PHI <__nstart_335(45), __nstart_338(47)>
  # .MEM_445 = PHI <.MEM_443(45), .MEM_508(47)>
  # DEBUG __nD.73646 => __nstart_438
  # VUSE <.MEM_445>
  # PT = nonlocal escaped 
  _337 = *__nstart_438;
  # DEBUG thisD.73648 => D#1201ptD.0
  # DEBUG __pD.73647 => _337
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#1201ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.73652 => _337
  # DEBUG __aD.73650 => D#144ptD.0
  # DEBUG __nD.73651 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.73655 => _337
  # DEBUG thisD.73653 => D#140ptD.0
  # DEBUG D.73654 => D#141ptD.0
  # .MEM_508 = VDEF <.MEM_445>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_337);
  # PT = nonlocal escaped 
  __nstart_338 = __nstart_438 + 8;
  # DEBUG __nD.73646 => __nstart_338
  # DEBUG __nD.73646 => __nstart_338
  if (_334 <= __nstart_338)
    goto <bb 48>;
  else
    goto <bb 47>;
;;    succ:       48 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                47 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 47, loop depth 2, count 0, freq 8281, maybe hot
;;    prev block 46, next block 48, flags: (NEW)
;;    pred:       46 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 46>;
;;    succ:       46 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 48, loop depth 1, count 0, freq 819, maybe hot
;;    prev block 47, next block 49, flags: (NEW)
;;    pred:       46 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_508>
  pretmp_430 = MEM[(struct _Deque_baseD.42881 *)__pos_437]._M_implD.43041._M_mapD.43043;
;;    succ:       49 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 49, loop depth 1, count 0, freq 900, maybe hot
;;    prev block 48, next block 50, flags: (NEW, REACHABLE)
;;    pred:       48 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                44 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_446 = PHI <.MEM_508(48), .MEM_443(44)>
  # PT = nonlocal escaped 
  # prephitmp_234 = PHI <pretmp_430(48), _45(44)>
  # DEBUG D#447ptD.0 => D#1201ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#1212ptD.0 => MEM[(struct _Deque_baseD.42881 *)__pos_437]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#1201ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.73658 => D#1212ptD.0
  # DEBUG thisD.73656 => D#445ptD.0
  # DEBUG __nD.73657 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.73659
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.73662 => D#1212ptD.0
  # DEBUG __aD.73660 => D#265ptD.0
  # DEBUG __nD.73661 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.73665 => D#1212ptD.0
  # DEBUG thisD.73663 => D#261ptD.0
  # DEBUG D.73664 => D#262ptD.0
  # .MEM_509 = VDEF <.MEM_446>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_234);
  # DEBUG thisD.57611 => &__map_allocD.73659
  # DEBUG thisD.57590 => &__map_allocD.73659
;;    succ:       50 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 50, loop depth 1, count 0, freq 1002, maybe hot
;;    prev block 49, next block 51, flags: (NEW, REACHABLE)
;;    pred:       43 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                49 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_371 = PHI <.MEM_443(43), .MEM_509(49)>
  # DEBUG D#448ptD.0 => &D#1201ptD.0->_M_implD.43041
  # DEBUG thisD.73640 => D#448ptD.0
  # DEBUG thisD.73641 => D#448ptD.0
  # DEBUG thisD.73642 => D#448ptD.0
  # .MEM_515 = VDEF <.MEM_371>
  MEM[(struct  &)__pos_437] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __pos_332 = __pos_437 + 80;
  # DEBUG __firstD.73629 => __pos_332
  # DEBUG __firstD.73629 => __pos_332
  if (_321 == __pos_332)
    goto <bb 41>;
  else
    goto <bb 51>;
;;    succ:       41 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                51 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 51, loop depth 1, count 0, freq 912, maybe hot
;;    prev block 50, next block 52, flags: (NEW)
;;    pred:       50 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 43>;
;;    succ:       43 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 52, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 51, next block 53, flags: (NEW, REACHABLE)
;;    pred:       38 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                41 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_372 = PHI <.MEM_539(38), .MEM_516(41)>
  # DEBUG thisD.62089 => &D.43701
  # DEBUG D#458ptD.0 => &D.43701.cD.43633
  # DEBUG thisD.62090 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG thisD.73693 => &MEM[(struct dequeD.40449 *)&D.43701].D.43590
  # VUSE <.MEM_372>
  # PT = nonlocal escaped null 
  _109 = MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041._M_mapD.43043;
  if (_109 != 0B)
    goto <bb 53>;
  else
    goto <bb 59>;
;;    succ:       53 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                59 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 53, loop depth 0, count 0, freq 184, maybe hot
;;    prev block 52, next block 54, flags: (NEW, REACHABLE)
;;    pred:       52 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_372>
  # PT = nonlocal escaped null 
  _348 = MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped null 
  _349 = _348 + 8;
  # VUSE <.MEM_372>
  # PT = nonlocal escaped null 
  __nstart_350 = MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.73699 => &MEM[(struct dequeD.40449 *)&D.43701].D.43590
  # DEBUG __nstartD.73698 => __nstart_350
  # DEBUG __nfinishD.73697 => _349
  # DEBUG __nD.73700 => __nstart_350
  # DEBUG __nD.73700 => __nstart_350
  if (_349 <= __nstart_350)
    goto <bb 58>;
  else
    goto <bb 54>;
;;    succ:       58 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                54 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 54, loop depth 0, count 0, freq 167, maybe hot
;;    prev block 53, next block 55, flags: (NEW)
;;    pred:       53 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 55, loop depth 1, count 0, freq 1861, maybe hot
;;    prev block 54, next block 56, flags: (NEW)
;;    pred:       54 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                56 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __nstart_440 = PHI <__nstart_350(54), __nstart_353(56)>
  # .MEM_447 = PHI <.MEM_372(54), .MEM_517(56)>
  # DEBUG __nD.73700 => __nstart_440
  # VUSE <.MEM_447>
  # PT = nonlocal escaped 
  _352 = *__nstart_440;
  # DEBUG thisD.73702 => &MEM[(struct dequeD.40449 *)&D.43701].D.43590
  # DEBUG __pD.73701 => _352
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.73706 => _352
  # DEBUG __aD.73704 => D#144ptD.0
  # DEBUG __nD.73705 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.73709 => _352
  # DEBUG thisD.73707 => D#140ptD.0
  # DEBUG D.73708 => D#141ptD.0
  # .MEM_517 = VDEF <.MEM_447>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_352);
  # PT = nonlocal escaped null 
  __nstart_353 = __nstart_440 + 8;
  # DEBUG __nD.73700 => __nstart_353
  # DEBUG __nD.73700 => __nstart_353
  if (_349 <= __nstart_353)
    goto <bb 57>;
  else
    goto <bb 56>;
;;    succ:       57 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                56 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 56, loop depth 1, count 0, freq 1694, maybe hot
;;    prev block 55, next block 57, flags: (NEW)
;;    pred:       55 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 55>;
;;    succ:       55 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 57, loop depth 0, count 0, freq 167, maybe hot
;;    prev block 56, next block 58, flags: (NEW)
;;    pred:       55 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_517>
  pretmp_369 = MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041._M_mapD.43043;
;;    succ:       58 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 58, loop depth 0, count 0, freq 184, maybe hot
;;    prev block 57, next block 59, flags: (NEW, REACHABLE)
;;    pred:       57 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                53 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_448 = PHI <.MEM_517(57), .MEM_372(53)>
  # PT = nonlocal escaped null 
  # prephitmp_180 = PHI <pretmp_369(57), _109(53)>
  # DEBUG D#447ptD.0 => MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041._M_map_sizeD.43044
  # DEBUG D#1211ptD.0 => MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => &MEM[(struct dequeD.40449 *)&D.43701].D.43590
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.73712 => D#1211ptD.0
  # DEBUG thisD.73710 => D#445ptD.0
  # DEBUG __nD.73711 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.73713
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.73716 => D#1211ptD.0
  # DEBUG __aD.73714 => D#265ptD.0
  # DEBUG __nD.73715 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.73719 => D#1211ptD.0
  # DEBUG thisD.73717 => D#261ptD.0
  # DEBUG D.73718 => D#262ptD.0
  # .MEM_518 = VDEF <.MEM_448>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_180);
  # DEBUG thisD.57611 => &__map_allocD.73713
  # DEBUG thisD.57590 => &__map_allocD.73713
;;    succ:       59 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 59, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 58, next block 60, flags: (NEW, REACHABLE)
;;    pred:       52 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                58 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_374 = PHI <.MEM_372(52), .MEM_518(58)>
  # DEBUG D#448ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&D.43701]._M_implD.43041
  # DEBUG thisD.73694 => D#448ptD.0
  # DEBUG thisD.73695 => D#448ptD.0
  # DEBUG thisD.73696 => D#448ptD.0
  # .MEM_47 = VDEF <.MEM_374>
  D.43701 ={v} {CLOBBER};
  # DEBUG thisD.62088 => &D.43702
  # DEBUG D#449ptD.0 => &D.43702.D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => &D.43702
  # DEBUG D#66ptD.0 => &D.43702.D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => &D.43702
  # DEBUG D#67ptD.0 => &D.43702.D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => &D.43702
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG thisD.73666 => &D.43702.D.43590
  # VUSE <.MEM_47>
  # PT = nonlocal escaped null 
  _340 = MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041._M_mapD.43043;
  if (_340 != 0B)
    goto <bb 60>;
  else
    goto <bb 66>;
;;    succ:       60 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                66 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 60, loop depth 0, count 0, freq 184, maybe hot
;;    prev block 59, next block 61, flags: (NEW, REACHABLE)
;;    pred:       59 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_47>
  # PT = nonlocal escaped null 
  _341 = MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped null 
  _342 = _341 + 8;
  # VUSE <.MEM_47>
  # PT = nonlocal escaped null 
  __nstart_343 = MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.73672 => &D.43702.D.43590
  # DEBUG __nstartD.73671 => __nstart_343
  # DEBUG __nfinishD.73670 => _342
  # DEBUG __nD.73673 => __nstart_343
  # DEBUG __nD.73673 => __nstart_343
  if (_342 <= __nstart_343)
    goto <bb 65>;
  else
    goto <bb 61>;
;;    succ:       65 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                61 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 61, loop depth 0, count 0, freq 167, maybe hot
;;    prev block 60, next block 62, flags: (NEW)
;;    pred:       60 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 62, loop depth 1, count 0, freq 1861, maybe hot
;;    prev block 61, next block 63, flags: (NEW)
;;    pred:       61 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                63 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped null 
  # __nstart_439 = PHI <__nstart_343(61), __nstart_346(63)>
  # .MEM_449 = PHI <.MEM_47(61), .MEM_523(63)>
  # DEBUG __nD.73673 => __nstart_439
  # VUSE <.MEM_449>
  # PT = nonlocal escaped 
  _345 = *__nstart_439;
  # DEBUG thisD.73675 => &D.43702.D.43590
  # DEBUG __pD.73674 => _345
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.73679 => _345
  # DEBUG __aD.73677 => D#144ptD.0
  # DEBUG __nD.73678 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.73682 => _345
  # DEBUG thisD.73680 => D#140ptD.0
  # DEBUG D.73681 => D#141ptD.0
  # .MEM_523 = VDEF <.MEM_449>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_345);
  # PT = nonlocal escaped null 
  __nstart_346 = __nstart_439 + 8;
  # DEBUG __nD.73673 => __nstart_346
  # DEBUG __nD.73673 => __nstart_346
  if (_342 <= __nstart_346)
    goto <bb 64>;
  else
    goto <bb 63>;
;;    succ:       64 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                63 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 63, loop depth 1, count 0, freq 1694, maybe hot
;;    prev block 62, next block 64, flags: (NEW)
;;    pred:       62 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 62>;
;;    succ:       62 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 64, loop depth 0, count 0, freq 167, maybe hot
;;    prev block 63, next block 65, flags: (NEW)
;;    pred:       62 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_523>
  pretmp_82 = MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041._M_mapD.43043;
;;    succ:       65 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 65, loop depth 0, count 0, freq 184, maybe hot
;;    prev block 64, next block 66, flags: (NEW, REACHABLE)
;;    pred:       64 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                60 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_450 = PHI <.MEM_523(64), .MEM_47(60)>
  # PT = nonlocal escaped null 
  # prephitmp_83 = PHI <pretmp_82(64), _340(60)>
  # DEBUG D#447ptD.0 => MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041._M_map_sizeD.43044
  # DEBUG D#1210ptD.0 => MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => &D.43702.D.43590
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.73685 => D#1210ptD.0
  # DEBUG thisD.73683 => D#445ptD.0
  # DEBUG __nD.73684 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.73686
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.73689 => D#1210ptD.0
  # DEBUG __aD.73687 => D#265ptD.0
  # DEBUG __nD.73688 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.73692 => D#1210ptD.0
  # DEBUG thisD.73690 => D#261ptD.0
  # DEBUG D.73691 => D#262ptD.0
  # .MEM_524 = VDEF <.MEM_450>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_83);
  # DEBUG thisD.57611 => &__map_allocD.73686
  # DEBUG thisD.57590 => &__map_allocD.73686
;;    succ:       66 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 66, loop depth 0, count 0, freq 205, maybe hot
;;    prev block 65, next block 67, flags: (NEW, REACHABLE)
;;    pred:       59 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                65 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_376 = PHI <.MEM_47(59), .MEM_524(65)>
  # DEBUG D#448ptD.0 => &MEM[(struct _Deque_baseD.42881 *)&D.43702]._M_implD.43041
  # DEBUG thisD.73667 => D#448ptD.0
  # DEBUG thisD.73668 => D#448ptD.0
  # DEBUG thisD.73669 => D#448ptD.0
  # .MEM_48 = VDEF <.MEM_376>
  D.43702 ={v} {CLOBBER};
  # VUSE <.MEM_48>
  _49 = this_3(D)->D.41247._buf_sizeD.39701;
  # VUSE <.MEM_48>
  _50 = this_3(D)->_vcsD.40446;
  _51 = _49 * _50;
  # .MEM_52 = VDEF <.MEM_48>
  this_3(D)->_total_mapped_sizeD.41199 = _51;
  # .MEM_53 = VDEF <.MEM_52>
  this_3(D)->_min_latencyD.41198 = -1;
  # VUSE <.MEM_53>
  return;
;;    succ:       EXIT [100.0%] 

;;   basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 66, next block 68, flags: (NEW, REACHABLE)
;;    pred:       3 (EH,EXECUTABLE)
<L0>: [LP 5]
  # DEBUG thisD.62091 => &D.43695
  # DEBUG thisD.62092 => &D.43695
  # DEBUG thisD.62101 => &D.43695
  # VUSE <.MEM_14>
  # PT = nonlocal escaped null { D.43695 } (escaped)
  _46 = MEM[(charD.10 * *)&D.43695];
  # DEBUG D#1ptD.0 => &D.43695
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.62102 => &D.43695
  if (&D.43695.D.11539._M_local_bufD.11541 != _46)
    goto <bb 68>;
  else
    goto <bb 69>;
;;    succ:       68 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                69 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 67, next block 69, flags: (NEW, REACHABLE)
;;    pred:       67 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43695.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.62094 => &D.43695
  # DEBUG __sizeD.62093 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43695
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43695
  # DEBUG D#185ptD.0 => &D.43695._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.62097 => _46
  # DEBUG __aD.62095 => D#183ptD.0
  # DEBUG __nD.62096 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.62100 => _46
  # DEBUG thisD.62098 => D#179ptD.0
  # DEBUG D.62099 => D#180ptD.0
  # .MEM_126 = VDEF <.MEM_14>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_46);
;;    succ:       69 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 68, next block 70, flags: (NEW, REACHABLE)
;;    pred:       67 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                68 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_26 = PHI <.MEM_14(67), .MEM_126(68)>
  # DEBUG D#189ptD.0 => &D.43695._M_dataplusD.11519
  # DEBUG thisD.62103 => D#189ptD.0
  # DEBUG thisD.62104 => D#189ptD.0
  # DEBUG thisD.62105 => D#189ptD.0
  # .MEM_61 = VDEF <.MEM_26>
  D.43695 ={v} {CLOBBER};
  [LP 18] resx 6
;;    succ:       70 (EH,EXECUTABLE)

;;   basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 69, next block 71, flags: (NEW)
;;    pred:       69 (EH,EXECUTABLE)
<L17>: [LP 18]
  goto <bb 85> (<L8>);
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 70, next block 72, flags: (NEW, REACHABLE)
;;    pred:       6 (EH,EXECUTABLE)
<L2>: [LP 8]
  # DEBUG thisD.62108 => &D.43697
  # DEBUG thisD.62109 => &D.43697
  # DEBUG thisD.62118 => &D.43697
  # VUSE <.MEM_21>
  # PT = nonlocal escaped { D.43697 } (escaped)
  _62 = MEM[(charD.10 * *)&D.43697];
  # DEBUG D#1ptD.0 => &D.43697
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.62119 => &D.43697
  if (&D.43697.D.11539._M_local_bufD.11541 != _62)
    goto <bb 72>;
  else
    goto <bb 73>;
;;    succ:       72 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                73 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 71, next block 73, flags: (NEW, REACHABLE)
;;    pred:       71 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43697.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.62111 => &D.43697
  # DEBUG __sizeD.62110 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43697
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43697
  # DEBUG D#185ptD.0 => &D.43697._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.62114 => _62
  # DEBUG __aD.62112 => D#183ptD.0
  # DEBUG __nD.62113 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.62117 => _62
  # DEBUG thisD.62115 => D#179ptD.0
  # DEBUG D.62116 => D#180ptD.0
  # .MEM_121 = VDEF <.MEM_21>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_62);
;;    succ:       73 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 72, next block 74, flags: (NEW, REACHABLE)
;;    pred:       71 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                72 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_19 = PHI <.MEM_21(71), .MEM_121(72)>
  # DEBUG D#189ptD.0 => &D.43697._M_dataplusD.11519
  # DEBUG thisD.62120 => D#189ptD.0
  # DEBUG thisD.62121 => D#189ptD.0
  # DEBUG thisD.62122 => D#189ptD.0
  # .MEM_59 = VDEF <.MEM_19>
  D.43697 ={v} {CLOBBER};
  [LP 19] resx 10
;;    succ:       74 (EH,EXECUTABLE)

;;   basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 73, next block 75, flags: (NEW)
;;    pred:       73 (EH,EXECUTABLE)
<L18>: [LP 19]
  goto <bb 85> (<L8>);
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 74, next block 76, flags: (NEW, REACHABLE)
;;    pred:       9 (EH,EXECUTABLE)
<L4>: [LP 10]
  # DEBUG thisD.62125 => &D.43699
  # DEBUG thisD.62126 => &D.43699
  # DEBUG thisD.62135 => &D.43699
  # VUSE <.MEM_28>
  # PT = nonlocal escaped { D.43699 } (escaped)
  _60 = MEM[(charD.10 * *)&D.43699];
  # DEBUG D#1ptD.0 => &D.43699
  # DEBUG thisD.52932 => D#1ptD.0
  # DEBUG thisD.62136 => &D.43699
  if (&D.43699.D.11539._M_local_bufD.11541 != _60)
    goto <bb 76>;
  else
    goto <bb 77>;
;;    succ:       76 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                77 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 75, next block 77, flags: (NEW, REACHABLE)
;;    pred:       75 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#188ptD.0 => D.43699.D.11539._M_allocated_capacityD.11542
  # DEBUG D#187ptD.0 => D#188ptD.0
  # DEBUG thisD.62128 => &D.43699
  # DEBUG __sizeD.62127 => D#187ptD.0
  # DEBUG D#186ptD.0 => D#187ptD.0
  # DEBUG D#1ptD.0 => &D.43699
  # DEBUG thisD.54449 => D#1ptD.0
  # DEBUG thisD.54450 => &D.43699
  # DEBUG D#185ptD.0 => &D.43699._M_dataplusD.11519
  # DEBUG D#183ptD.0 => D#185ptD.0
  # DEBUG D#184ptD.0 => D#186ptD.0 + 1
  # DEBUG __pD.62131 => _60
  # DEBUG __aD.62129 => D#183ptD.0
  # DEBUG __nD.62130 => D#184ptD.0
  # DEBUG D#182ptD.0 => D#184ptD.0
  # DEBUG D#181ptD.0 => D#183ptD.0
  # DEBUG D#179ptD.0 => D#181ptD.0
  # DEBUG D#180ptD.0 => D#182ptD.0
  # DEBUG __pD.62134 => _60
  # DEBUG thisD.62132 => D#179ptD.0
  # DEBUG D.62133 => D#180ptD.0
  # .MEM_116 = VDEF <.MEM_28>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_60);
;;    succ:       77 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 76, next block 78, flags: (NEW, REACHABLE)
;;    pred:       75 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                76 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_12 = PHI <.MEM_28(75), .MEM_116(76)>
  # DEBUG D#189ptD.0 => &D.43699._M_dataplusD.11519
  # DEBUG thisD.62137 => D#189ptD.0
  # DEBUG thisD.62138 => D#189ptD.0
  # DEBUG thisD.62139 => D#189ptD.0
  # .MEM_58 = VDEF <.MEM_12>
  D.43699 ={v} {CLOBBER};
  [LP 20] resx 14
;;    succ:       78 (EH,EXECUTABLE)

;;   basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 77, next block 79, flags: (NEW)
;;    pred:       77 (EH,EXECUTABLE)
<L19>: [LP 20]
  goto <bb 85> (<L8>);
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 78, next block 80, flags: (NEW, REACHABLE)
;;    pred:       37 (EH,EXECUTABLE)
<L6>: [LP 12]
  # DEBUG thisD.62142 => &D.43701
  # DEBUG D#458ptD.0 => &D.43701.cD.43633
  # DEBUG thisD.62143 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # .MEM_111 = VDEF <.MEM_507>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (&MEM[(struct dequeD.40449 *)&D.43701].D.43590);
  # .MEM_54 = VDEF <.MEM_111>
  D.43701 ={v} {CLOBBER};
  [LP 11] resx 18
;;    succ:       80 (EH,EXECUTABLE)

;;   basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 79, next block 81, flags: (NEW)
;;    pred:       79 (EH,EXECUTABLE)
<L20>: [LP 11]
  goto <bb 82> (<L7>);
;;    succ:       82 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 80, next block 82, flags: (NEW)
;;    pred:       26 (EH,EXECUTABLE)
<L16>: [LP 17]
;;    succ:       82 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 81, next block 83, flags: (NEW, REACHABLE)
;;    pred:       81 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                80 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_1 = PHI <.MEM_429(81), .MEM_54(80)>
<L7>:
  # DEBUG thisD.62144 => &D.43702
  # DEBUG D#449ptD.0 => &D.43702.D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => &D.43702
  # DEBUG D#66ptD.0 => &D.43702.D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => &D.43702
  # DEBUG D#67ptD.0 => &D.43702.D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)&D.43702 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => &D.43702
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # .MEM_114 = VDEF <.MEM_1>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZNSt11_Deque_baseIiSaIiEED2EvD.43096 (&D.43702.D.43590);
  # .MEM_56 = VDEF <.MEM_114>
  D.43702 ={v} {CLOBBER};
  [LP 6] resx 17
;;    succ:       83 (EH,EXECUTABLE)

;;   basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 82, next block 84, flags: (NEW)
;;    pred:       82 (EH,EXECUTABLE)
<L21>: [LP 6]
  goto <bb 85> (<L8>);
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 83, next block 85, flags: (NEW)
;;    pred:       2 (EH,EXECUTABLE)
<L12>: [LP 13]
;;    succ:       85 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 84, next block 86, flags: (NEW, REACHABLE)
;;    pred:       14 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                20 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                25 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                83 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                74 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                70 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                78 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                84 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_2 = PHI <.MEM_414(14), .MEM_418(20), .MEM_104(25), .MEM_56(83), .MEM_59(74), .MEM_61(70), .MEM_58(78), .MEM_383(84)>
<L8>:
  # DEBUG D#1204ptD.0 => &this_3(D)->_flit_sent_timeD.41197
  # DEBUG thisD.73720 => D#1204ptD.0
  # DEBUG D#463ptD.0 => &D#1204ptD.0->D.41195
  # DEBUG thisD.57765 => D#463ptD.0
  # VUSE <.MEM_2>
  # PT = nonlocal escaped 
  _106 = MEM[(struct vectorD.40452 *)this_3(D) + 272B].D.41195._M_implD.40686._M_finishD.40689;
  # VUSE <.MEM_2>
  # PT = nonlocal escaped 
  __first_355 = MEM[(struct vectorD.40452 *)this_3(D) + 272B].D.41195._M_implD.40686._M_startD.40688;
  # DEBUG __firstD.73723 => __first_355
  # DEBUG __lastD.73722 => _106
  # DEBUG __firstD.73728 => __first_355
  if (_106 == __first_355)
    goto <bb 97>;
  else
    goto <bb 86>;
;;    succ:       97 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                86 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 85, next block 87, flags: (NEW)
;;    pred:       85 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       87 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 87, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 86, next block 88, flags: (NEW)
;;    pred:       86 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                95 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __first_441 = PHI <__first_355(86), __first_358(95)>
  # .MEM_451 = PHI <.MEM_2(86), .MEM_536(95)>
  # DEBUG __firstD.73728 => __first_441
  # DEBUG __rD.57673 => __first_441
  # DEBUG __pointerD.73729 => NULL
  # DEBUG thisD.73730 => NULL
  # DEBUG thisD.73731 => D#458ptD.0
  # DEBUG D#449ptD.0 => &D#458ptD.0->D.43590
  # DEBUG thisD.57654 => D#449ptD.0
  # DEBUG thisD.57651 => D#458ptD.0
  # DEBUG D#66ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_finishD.43046
  # DEBUG thisD.57653 => NULL
  # DEBUG __xD.57652 => D#66ptD.0
  # DEBUG D#457ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_curD.42940
  # DEBUG D.57660 => D#457ptD.0
  # DEBUG D#456ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_firstD.42941
  # DEBUG D.57661 => D#456ptD.0
  # DEBUG D#455ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_lastD.42942
  # DEBUG D.57662 => D#455ptD.0
  # DEBUG D#454ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 48]._M_nodeD.42943
  # DEBUG D.57663 => D#454ptD.0
  # DEBUG thisD.57648 => D#458ptD.0
  # DEBUG D#67ptD.0 => &D#458ptD.0->D.43590._M_implD.43041._M_startD.43045
  # DEBUG thisD.57650 => NULL
  # DEBUG __xD.57649 => D#67ptD.0
  # DEBUG D#453ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_curD.42940
  # DEBUG D.57656 => D#453ptD.0
  # DEBUG D#452ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_firstD.42941
  # DEBUG D.57657 => D#452ptD.0
  # DEBUG D#451ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_lastD.42942
  # DEBUG D.57658 => D#451ptD.0
  # DEBUG D#450ptD.0 => MEM[(const struct iteratorD.42928 &)D#458ptD.0 + 16]._M_nodeD.42943
  # DEBUG D.57659 => D#450ptD.0
  # DEBUG D#68ptD.0 => D#458ptD.0
  # DEBUG thisD.57647 => D#68ptD.0
  # DEBUG __firstD.57646 => D#69ptD.0
  # DEBUG __lastD.57645 => D#70ptD.0
  # DEBUG D.57644 => D#71ptD.0
  # DEBUG D#1203ptD.0 => &MEM[(struct dequeD.40449 *)__first_441].D.43590
  # DEBUG thisD.73746 => D#1203ptD.0
  # VUSE <.MEM_451>
  # PT = nonlocal escaped 
  _64 = MEM[(struct _Deque_baseD.42881 *)__first_441]._M_implD.43041._M_mapD.43043;
  if (_64 != 0B)
    goto <bb 88>;
  else
    goto <bb 94>;
;;    succ:       88 [89.9%]  (TRUE_VALUE,EXECUTABLE)
;;                94 [10.1%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 88, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 87, next block 89, flags: (NEW, REACHABLE)
;;    pred:       87 [89.9%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_451>
  # PT = nonlocal escaped 
  _360 = MEM[(struct _Deque_baseD.42881 *)__first_441]._M_implD.43041._M_finishD.43046._M_nodeD.42943;
  # PT = nonlocal escaped 
  _361 = _360 + 8;
  # VUSE <.MEM_451>
  # PT = nonlocal escaped 
  __nstart_362 = MEM[(struct _Deque_baseD.42881 *)__first_441]._M_implD.43041._M_startD.43045._M_nodeD.42943;
  # DEBUG thisD.73752 => D#1203ptD.0
  # DEBUG __nstartD.73751 => __nstart_362
  # DEBUG __nfinishD.73750 => _361
  # DEBUG __nD.73753 => __nstart_362
  # DEBUG __nD.73753 => __nstart_362
  if (_361 <= __nstart_362)
    goto <bb 93>;
  else
    goto <bb 89>;
;;    succ:       93 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                89 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 89, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 88, next block 90, flags: (NEW)
;;    pred:       88 [91.0%]  (FALSE_VALUE,EXECUTABLE)
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 90, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 89, next block 91, flags: (NEW)
;;    pred:       89 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                91 [100.0%]  (FALLTHRU,EXECUTABLE)
  # PT = nonlocal escaped 
  # __nstart_442 = PHI <__nstart_362(89), __nstart_365(91)>
  # .MEM_453 = PHI <.MEM_451(89), .MEM_529(91)>
  # DEBUG __nD.73753 => __nstart_442
  # VUSE <.MEM_453>
  # PT = nonlocal escaped 
  _364 = *__nstart_442;
  # DEBUG thisD.73755 => D#1203ptD.0
  # DEBUG __pD.73754 => _364
  # DEBUG __sizeD.54273 => 4
  # DEBUG D#167ptD.0 => &D#1203ptD.0->_M_implD.43041
  # DEBUG D#144ptD.0 => D#167ptD.0
  # DEBUG __pD.73759 => _364
  # DEBUG __aD.73757 => D#144ptD.0
  # DEBUG __nD.73758 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.73762 => _364
  # DEBUG thisD.73760 => D#140ptD.0
  # DEBUG D.73761 => D#141ptD.0
  # .MEM_529 = VDEF <.MEM_453>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_364);
  # PT = nonlocal escaped 
  __nstart_365 = __nstart_442 + 8;
  # DEBUG __nD.73753 => __nstart_365
  # DEBUG __nD.73753 => __nstart_365
  if (_361 <= __nstart_365)
    goto <bb 92>;
  else
    goto <bb 91>;
;;    succ:       92 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                91 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 91, loop depth 2, count 0, freq 0, maybe hot
;;    prev block 90, next block 92, flags: (NEW)
;;    pred:       90 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 90>;
;;    succ:       90 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 92, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 91, next block 93, flags: (NEW)
;;    pred:       90 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_529>
  pretmp_512 = MEM[(struct _Deque_baseD.42881 *)__first_441]._M_implD.43041._M_mapD.43043;
;;    succ:       93 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 93, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 92, next block 94, flags: (NEW, REACHABLE)
;;    pred:       92 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                88 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_454 = PHI <.MEM_529(92), .MEM_451(88)>
  # PT = nonlocal escaped 
  # prephitmp_513 = PHI <pretmp_512(92), _64(88)>
  # DEBUG D#447ptD.0 => D#1203ptD.0->_M_implD.43041._M_map_sizeD.43044
  # DEBUG D#1209ptD.0 => MEM[(struct _Deque_baseD.42881 *)__first_441]._M_implD.43041._M_mapD.43043
  # DEBUG D#445ptD.0 => D#1203ptD.0
  # DEBUG D#446ptD.0 => D#447ptD.0
  # DEBUG __pD.73765 => D#1209ptD.0
  # DEBUG thisD.73763 => D#445ptD.0
  # DEBUG __nD.73764 => D#446ptD.0
  # DEBUG D#444ptD.0 => D#446ptD.0
  # DEBUG D#443ptD.0 => D#445ptD.0
  # DEBUG D#442ptD.0 => D#443ptD.0
  # DEBUG thisD.57597 => D#442ptD.0
  # DEBUG D#441ptD.0 => D#442ptD.0
  # DEBUG thisD.57585 => D#441ptD.0
  # DEBUG thisD.57577 => NULL
  # DEBUG D.57578 => NULL
  # DEBUG thisD.57575 => NULL
  # DEBUG D#265ptD.0 => &__map_allocD.73766
  # DEBUG D#266ptD.0 => D#444ptD.0
  # DEBUG __pD.73769 => D#1209ptD.0
  # DEBUG __aD.73767 => D#265ptD.0
  # DEBUG __nD.73768 => D#266ptD.0
  # DEBUG D#264ptD.0 => D#266ptD.0
  # DEBUG D#263ptD.0 => D#265ptD.0
  # DEBUG D#261ptD.0 => D#263ptD.0
  # DEBUG D#262ptD.0 => D#264ptD.0
  # DEBUG __pD.73772 => D#1209ptD.0
  # DEBUG thisD.73770 => D#261ptD.0
  # DEBUG D.73771 => D#262ptD.0
  # .MEM_530 = VDEF <.MEM_454>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_513);
  # DEBUG thisD.57611 => &__map_allocD.73766
  # DEBUG thisD.57590 => &__map_allocD.73766
;;    succ:       94 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 94, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 93, next block 95, flags: (NEW, REACHABLE)
;;    pred:       87 [10.1%]  (FALSE_VALUE,EXECUTABLE)
;;                93 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_379 = PHI <.MEM_451(87), .MEM_530(93)>
  # DEBUG D#448ptD.0 => &D#1203ptD.0->_M_implD.43041
  # DEBUG thisD.73747 => D#448ptD.0
  # DEBUG thisD.73748 => D#448ptD.0
  # DEBUG thisD.73749 => D#448ptD.0
  # .MEM_536 = VDEF <.MEM_379>
  MEM[(struct  &)__first_441] ={v} {CLOBBER};
  # PT = nonlocal escaped 
  __first_358 = __first_441 + 80;
  # DEBUG __firstD.73728 => __first_358
  # DEBUG __firstD.73728 => __first_358
  if (_106 == __first_358)
    goto <bb 96>;
  else
    goto <bb 95>;
;;    succ:       96 [9.0%]  (TRUE_VALUE,EXECUTABLE)
;;                95 [91.0%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 95, loop depth 1, count 0, freq 0, maybe hot
;;    prev block 94, next block 96, flags: (NEW)
;;    pred:       94 [91.0%]  (FALSE_VALUE,EXECUTABLE)
  goto <bb 87>;
;;    succ:       87 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 95, next block 97, flags: (NEW)
;;    pred:       94 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # VUSE <.MEM_536>
  pretmp_140 = MEM[(struct _Vector_baseD.40453 *)this_3(D) + 272B]._M_implD.40686._M_startD.40688;
;;    succ:       97 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 96, next block 98, flags: (NEW, REACHABLE)
;;    pred:       96 [100.0%]  (FALLTHRU,EXECUTABLE)
;;                85 [9.0%]  (TRUE_VALUE,EXECUTABLE)
  # .MEM_452 = PHI <.MEM_536(96), .MEM_2(85)>
  # PT = nonlocal escaped 
  # prephitmp_141 = PHI <pretmp_140(96), __first_355(85)>
  # DEBUG D#464ptD.0 => &D#1204ptD.0->D.41195
  # DEBUG thisD.73732 => D#464ptD.0
  # DEBUG D#260ptD.0 => D#464ptD.0->_M_implD.40686._M_end_of_storageD.40690
  # DEBUG D#259ptD.0 => (long intD.12) D#260ptD.0
  # DEBUG D#1208ptD.0 => MEM[(struct _Vector_baseD.40453 *)this_3(D) + 272B]._M_implD.40686._M_startD.40688
  # DEBUG D#258ptD.0 => (long intD.12) D#1208ptD.0
  # DEBUG D#257ptD.0 => D#259ptD.0 - D#258ptD.0
  # DEBUG D#256ptD.0 => D#257ptD.0 /[ex] 80
  # DEBUG D#253ptD.0 => D#464ptD.0
  # DEBUG D#254ptD.0 => (long unsigned intD.14) D#256ptD.0
  # DEBUG __pD.73735 => D#1208ptD.0
  # DEBUG thisD.73733 => D#253ptD.0
  # DEBUG __nD.73734 => D#254ptD.0
  # DEBUG D#252ptD.0 => D#254ptD.0
  # DEBUG D#251ptD.0 => D#253ptD.0
  if (prephitmp_141 != 0B)
    goto <bb 98>;
  else
    goto <bb 99>;
;;    succ:       98 [78.3%]  (TRUE_VALUE,EXECUTABLE)
;;                99 [21.6%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 97, next block 99, flags: (NEW, REACHABLE)
;;    pred:       97 [78.3%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#250ptD.0 => &D#251ptD.0->_M_implD.40686
  # DEBUG D#248ptD.0 => D#250ptD.0
  # DEBUG D#249ptD.0 => D#252ptD.0
  # DEBUG __pD.73739 => D#1208ptD.0
  # DEBUG __aD.73737 => D#248ptD.0
  # DEBUG __nD.73738 => D#249ptD.0
  # DEBUG D#247ptD.0 => D#249ptD.0
  # DEBUG D#246ptD.0 => D#248ptD.0
  # DEBUG D#244ptD.0 => D#246ptD.0
  # DEBUG D#245ptD.0 => D#247ptD.0
  # DEBUG __pD.73742 => D#1208ptD.0
  # DEBUG thisD.73740 => D#244ptD.0
  # DEBUG D.73741 => D#245ptD.0
  # .MEM_537 = VDEF <.MEM_452>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (prephitmp_141);
;;    succ:       99 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 98, next block 100, flags: (NEW, REACHABLE)
;;    pred:       97 [21.6%]  (FALSE_VALUE,EXECUTABLE)
;;                98 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_380 = PHI <.MEM_452(97), .MEM_537(98)>
  # DEBUG D#255ptD.0 => &D#464ptD.0->_M_implD.40686
  # DEBUG thisD.73743 => D#255ptD.0
  # DEBUG thisD.73744 => D#255ptD.0
  # DEBUG thisD.73745 => D#255ptD.0
  # .MEM_542 = VDEF <.MEM_380>
  MEM[(struct  &)this_3(D) + 272] ={v} {CLOBBER};
  [LP 3] resx 4
;;    succ:       100 (EH,EXECUTABLE)

;;   basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 99, next block 101, flags: (NEW, REACHABLE)
;;    pred:       99 (EH,EXECUTABLE)
<L9>: [LP 3]
  # DEBUG D#715ptD.0 => &this_3(D)->_round_trip_timeD.40448
  # DEBUG thisD.62145 => D#715ptD.0
  # DEBUG D#154ptD.0 => &D#715ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#715ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#715ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#715ptD.0->D.40238
  # DEBUG thisD.62146 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_542>
  # PT = nonlocal escaped 
  _55 = MEM[(struct _Vector_baseD.39702 *)this_3(D) + 248B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _55
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.62149 => D#155ptD.0
  # DEBUG __pD.62148 => _55
  # DEBUG __nD.62147 => D#148ptD.0
  if (_55 != 0B)
    goto <bb 101>;
  else
    goto <bb 102>;
;;    succ:       101 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                102 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 100, next block 102, flags: (NEW, REACHABLE)
;;    pred:       100 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.62153 => _55
  # DEBUG __aD.62151 => D#144ptD.0
  # DEBUG __nD.62152 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.62156 => _55
  # DEBUG thisD.62154 => D#140ptD.0
  # DEBUG D.62155 => D#141ptD.0
  # .MEM_131 = VDEF <.MEM_542>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_55);
;;    succ:       102 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 101, next block 103, flags: (NEW, REACHABLE)
;;    pred:       100 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                101 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_68 = PHI <.MEM_542(100), .MEM_131(101)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.62157 => D#147ptD.0
  # DEBUG thisD.62158 => D#147ptD.0
  # DEBUG thisD.62159 => D#147ptD.0
  # .MEM_136 = VDEF <.MEM_68>
  MEM[(struct  &)this_3(D) + 248] ={v} {CLOBBER};
  [LP 2] resx 3
;;    succ:       103 (EH,EXECUTABLE)

;;   basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 102, next block 104, flags: (NEW, REACHABLE)
;;    pred:       102 (EH,EXECUTABLE)
<L10>: [LP 2]
  # DEBUG D#714ptD.0 => &this_3(D)->_occupancy_limitD.40447
  # DEBUG thisD.62160 => D#714ptD.0
  # DEBUG D#154ptD.0 => &D#714ptD.0->D.40238
  # DEBUG thisD.54210 => D#154ptD.0
  # DEBUG D#157ptD.0 => D#714ptD.0->D.40238._M_implD.39729._M_finishD.39732
  # DEBUG D#156ptD.0 => D#714ptD.0->D.40238._M_implD.39729._M_startD.39731
  # DEBUG __firstD.54207 => D#156ptD.0
  # DEBUG __lastD.54208 => D#157ptD.0
  # DEBUG D.54209 => NULL
  # DEBUG D#134ptD.0 => D#156ptD.0
  # DEBUG D#135ptD.0 => D#157ptD.0
  # DEBUG __firstD.54130 => D#134ptD.0
  # DEBUG __lastD.54129 => D#135ptD.0
  # DEBUG D#133ptD.0 => D#135ptD.0
  # DEBUG D#132ptD.0 => D#134ptD.0
  # DEBUG D#130ptD.0 => D#132ptD.0
  # DEBUG D#131ptD.0 => D#133ptD.0
  # DEBUG D.54119 => D#130ptD.0
  # DEBUG D.54118 => D#131ptD.0
  # DEBUG D#155ptD.0 => &D#714ptD.0->D.40238
  # DEBUG thisD.62161 => D#155ptD.0
  # DEBUG D#153ptD.0 => D#155ptD.0->_M_implD.39729._M_end_of_storageD.39733
  # DEBUG D#152ptD.0 => (long intD.12) D#153ptD.0
  # VUSE <.MEM_136>
  # PT = nonlocal escaped 
  _65 = MEM[(struct _Vector_baseD.39702 *)this_3(D) + 224B]._M_implD.39729._M_startD.39731;
  # DEBUG D#151ptD.0 => (long intD.12) _65
  # DEBUG D#150ptD.0 => D#152ptD.0 - D#151ptD.0
  # DEBUG D#149ptD.0 => D#150ptD.0 /[ex] 4
  # DEBUG D#148ptD.0 => (long unsigned intD.14) D#149ptD.0
  # DEBUG thisD.62164 => D#155ptD.0
  # DEBUG __pD.62163 => _65
  # DEBUG __nD.62162 => D#148ptD.0
  if (_65 != 0B)
    goto <bb 104>;
  else
    goto <bb 105>;
;;    succ:       104 [69.8%]  (TRUE_VALUE,EXECUTABLE)
;;                105 [30.2%]  (FALSE_VALUE,EXECUTABLE)

;;   basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 103, next block 105, flags: (NEW, REACHABLE)
;;    pred:       103 [69.8%]  (TRUE_VALUE,EXECUTABLE)
  # DEBUG D#146ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG D#144ptD.0 => D#146ptD.0
  # DEBUG D#145ptD.0 => D#148ptD.0
  # DEBUG __pD.62168 => _65
  # DEBUG __aD.62166 => D#144ptD.0
  # DEBUG __nD.62167 => D#145ptD.0
  # DEBUG D#143ptD.0 => D#145ptD.0
  # DEBUG D#142ptD.0 => D#144ptD.0
  # DEBUG D#140ptD.0 => D#142ptD.0
  # DEBUG D#141ptD.0 => D#143ptD.0
  # DEBUG __pD.62171 => _65
  # DEBUG thisD.62169 => D#140ptD.0
  # DEBUG D.62170 => D#141ptD.0
  # .MEM_137 = VDEF <.MEM_136>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZdlPvD.2766 (_65);
;;    succ:       105 [100.0%]  (FALLTHRU,EXECUTABLE)

;;   basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;   Invalid sum of outgoing probabilities 0.0%
;;    prev block 104, next block 106, flags: (NEW, REACHABLE)
;;    pred:       103 [30.2%]  (FALSE_VALUE,EXECUTABLE)
;;                104 [100.0%]  (FALLTHRU,EXECUTABLE)
  # .MEM_69 = PHI <.MEM_136(103), .MEM_137(104)>
  # DEBUG D#147ptD.0 => &D#155ptD.0->_M_implD.39729
  # DEBUG thisD.62172 => D#147ptD.0
  # DEBUG thisD.62173 => D#147ptD.0
  # DEBUG thisD.62174 => D#147ptD.0
  # .MEM_142 = VDEF <.MEM_69>
  MEM[(struct  &)this_3(D) + 224] ={v} {CLOBBER};
  [LP 1] resx 2
;;    succ:       106 (EH,EXECUTABLE)

;;   basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;    prev block 105, next block 1, flags: (NEW, REACHABLE)
;;    pred:       105 (EH,EXECUTABLE)
<L11>: [LP 1]
  # .MEM_67 = VDEF <.MEM_142>
  # USE = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  # CLB = nonlocal null { D.41257 D.43695 D.43697 D.43699 D.43701 D.43702 D.73370 D.73488 D.73499 } (nonlocal, escaped)
  _ZN11BufferState18SharedBufferPolicyD2EvD.40278 (_4);
  resx 1
;;    succ:      

}


